[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/389996961",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-389996961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 389996961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTk5Njk2MQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-05-17T20:18:19Z",
    "updated_at": "2018-05-18T21:50:30Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21107?src=pr&el=h1) Report\n> Merging [#21107](https://codecov.io/gh/pandas-dev/pandas/pull/21107?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/e033c0616158d3ba974456b4f84810492936b1fe?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21107/graphs/tree.svg?src=pr&height=150&width=650&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/21107?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #21107   +/-   ##\n=======================================\n  Coverage   91.83%   91.83%           \n=======================================\n  Files         153      153           \n  Lines       49498    49498           \n=======================================\n  Hits        45458    45458           \n  Misses       4040     4040\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.23% <100%> (ø)` | :arrow_up: |\n| #single | `41.88% <0%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21107?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/category.py](https://codecov.io/gh/pandas-dev/pandas/pull/21107/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9jYXRlZ29yeS5weQ==) | `97.03% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21107?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21107?src=pr&el=footer). Last update [e033c06...06aef54](https://codecov.io/gh/pandas-dev/pandas/pull/21107?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390434642",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-390434642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 390434642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQzNDY0Mg==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T21:43:51Z",
    "updated_at": "2018-05-19T22:22:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "``is_unique`` is a cached property, so I don't think an ASV makes sense in this case. (I assume ``setup`` in ASV is called once for each time method, but not once for every call to the time method, haven't checked).\r\n\r\nSo this PR improves first-time calls to ``is_unique`` and also makes calling ``is_unique`` and  ``is_monotonic*`` in succesion faster, as both are set simultaneously. So e.g. ``ci.is_monotonic_increasing and ci.is_unique`` will be much faster (on the first call, on subsequent calls both are cached)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390440472",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-390440472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 390440472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQ0MDQ3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-19T23:36:21Z",
    "updated_at": "2018-05-19T23:36:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "how does this diminish the value of an asv?\r\n\r\nsure if the subsequent calls are cached the mean time is lower but this should still show an asv improvement yes?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390442477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-390442477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 390442477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDQ0MjQ3Nw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-20T00:08:40Z",
    "updated_at": "2018-05-20T00:08:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "My impression has been that these neasurement are done in a “best of 3” style (like %timeit). For such tests the uncached version always loses.\r\n\r\nHaven’t looked into how asv does it, so I could be mistaken here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390518977",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-390518977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 390518977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDUxODk3Nw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-20T22:51:42Z",
    "updated_at": "2018-05-20T22:51:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems to me that ASV does \"best of X\" style of testing. from the [docs](https://asv.readthedocs.io/en/latest/writing_benchmarks.html#timing):\r\n\r\n> The timing itself is based on the Python standard library’s timeit module, with some extensions for automatic heuristics shamelessly stolen from IPython’s %timeit magic function\r\n\r\nI could add the timing tests, but I assume these improvement is not seen well in repeated calls to ``is_unique``. You want them added still?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390623336",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-390623336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 390623336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDYyMzMzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T11:02:37Z",
    "updated_at": "2018-05-21T11:02:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "we do have asv's for others. sure if can tag so these are run once is better (not sure if that is possible)\r\n\r\n\r\n```\r\n(pandas) bash-3.2$ grep -r is_unique asv_bench/benchmarks/\r\nasv_bench/benchmarks//algorithms.py:        # cache is_unique\r\nasv_bench/benchmarks//algorithms.py:        self.idx_int_dup.is_unique\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394426803",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-394426803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 394426803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDQyNjgwMw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T17:01:25Z",
    "updated_at": "2018-06-04T17:04:25Z",
    "author_association": "CONTRIBUTOR",
    "body": " > we do have asv's for others. sure if can tag so these are run once is better (not sure if that is possible)\r\n>\r\n> (pandas) bash-3.2$ grep -r is_unique asv_bench/benchmarks/\r\n> asv_bench/benchmarks//algorithms.py:        # cache is_unique\r\n> asv_bench/benchmarks//algorithms.py:        self.idx_int_dup.is_unique\r\n\r\nThose two are in a setup method, so timing are not done on them:\r\n\r\n```python\r\nclass DuplicatedUniqueIndex(object):\r\n\r\n    goal_time = 0.2\r\n\r\n    def setup(self):\r\n        N = 10**5\r\n        self.idx_int_dup = pd.Int64Index(np.arange(N * 5))\r\n        # cache is_unique\r\n        self.idx_int_dup.is_unique\r\n\r\n     def time_duplicated_unique_int(self):\r\n```\r\n\r\nSo currently there is no tests for ``is_unique`` in asv_bench, and it probably doesn't make sense  IMO, as ``is_unique`` is a cached property and timing it will just return the cached value, and not time the speed of the algorithm."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394509426",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-394509426",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 394509426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDUwOTQyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T21:42:58Z",
    "updated_at": "2018-06-04T21:42:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm ok. can you open a new issue to create asv's in some form or another for this (and is_unique in general). w/o asv's someone will ineveitable change something which breaks this.\r\n\r\nmaybe should just temporary turn cached_properties off with a context manager when running them."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394516643",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-394516643",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 394516643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDUxNjY0Mw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T22:10:42Z",
    "updated_at": "2018-06-04T22:10:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "> maybe should just temporary turn cached_properties off with a context manager when running them.\r\n\r\nIs there currently a context manager or option for this in Pandas?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394518010",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21107#issuecomment-394518010",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21107",
    "id": 394518010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDUxODAxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T22:16:05Z",
    "updated_at": "2018-06-04T22:16:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "no i think would need to create one for purposes of measuring cached properties"
  }
]
