[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137441379",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10978#issuecomment-137441379",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10978",
    "id": 137441379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ0MTM3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T13:20:03Z",
    "updated_at": "2015-09-03T13:20:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "The doc-string of `DateOffset` is pretty clear on this. The 0th day is defined to rollforward.\n\n```\nIn [2]: pd.offsets.DateOffset?\nInit signature: pd.offsets.DateOffset(self, n=1, normalize=False, **kwds)\nDocstring:\nStandard kind of date increment used for a date range.\n\nWorks exactly like relativedelta in terms of the keyword args you\npass in, use of the keyword n is discouraged-- you would be better\noff specifying n in the keywords you use, but regardless it is\nthere for you. n is needed for DateOffset subclasses.\n\nDateOffets work as follows.  Each offset specify a set of dates\nthat conform to the DateOffset.  For example, Bday defines this\nset to be the set of dates that are weekdays (M-F).  To test if a\ndate is in the set of a DateOffset dateOffset we can use the\nonOffset method: dateOffset.onOffset(date).\n\nIf a date is not on a valid date, the rollback and rollforward\nmethods can be used to roll the date to the nearest valid date\nbefore/after the date.\n\nDateOffsets can be created to move dates forward a given number of\nvalid dates.  For example, Bday(2) can be added to a date to move\nit two business days forward.  If the date does not start on a\nvalid date, first it is moved to a valid date.  Thus psedo code\nis:\n\ndef __add__(date):\n  date = rollback(date) # does nothing if date is valid\n  return date + <n number of periods>\n\nWhen a date offset is created for a negitive number of periods,\nthe date is first rolled forward.  The pseudo code is:\n\ndef __add__(date):\n  date = rollforward(date) # does nothing is date is valid\n  return date + <n number of periods>\n\nZero presents a problem.  Should it roll forward or back?  We\narbitrarily have it rollforward:\n\ndate + BDay(0) == BDay.rollforward(date)\n\nSince 0 is a bit weird, we suggest avoiding its use.\nFile:           ~/pandas/pandas/tseries/offsets.py\nType:           type\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137450162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10978#issuecomment-137450162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10978",
    "id": 137450162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ1MDE2Mg==",
    "user": {
      "login": "devqinves",
      "id": 14105677,
      "node_id": "MDQ6VXNlcjE0MTA1Njc3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/14105677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devqinves",
      "html_url": "https://github.com/devqinves",
      "followers_url": "https://api.github.com/users/devqinves/followers",
      "following_url": "https://api.github.com/users/devqinves/following{/other_user}",
      "gists_url": "https://api.github.com/users/devqinves/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devqinves/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devqinves/subscriptions",
      "organizations_url": "https://api.github.com/users/devqinves/orgs",
      "repos_url": "https://api.github.com/users/devqinves/repos",
      "events_url": "https://api.github.com/users/devqinves/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devqinves/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T13:43:24Z",
    "updated_at": "2015-09-03T13:43:24Z",
    "author_association": "NONE",
    "body": "the problem is not with 0th day but with 1th and this is the part of the doc that is confusing : If the date does not start on a valid date, first it is moved to a valid date.  so you would expect to have \n\npd.Timestamp('20150830')+BDay(1) to add 1 BD after its moved to a valid BD and its not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137457355",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10978#issuecomment-137457355",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10978",
    "id": 137457355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ1NzM1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T13:58:38Z",
    "updated_at": "2015-09-03T13:58:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "this has been this way for quite some time, eg.. I think since this was written.\n\nso `BDay(0) == BDay(1)` if the anchor is not a business day. \n\nwill reopen for some comments\n\ncc @sinhrks \ncc @chris-b1 \ncc @cancan101 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137461143",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10978#issuecomment-137461143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10978",
    "id": 137461143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ2MTE0Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T14:08:12Z",
    "updated_at": "2015-09-03T14:08:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's kind of inconsistent with the `Period` behavior e,g:\n\n```\nIn [59]: d = pd.Timestamp('20150830')\n\nIn [61]: (d.to_period('B') + 1).to_timestamp()\nOut[61]: Timestamp('2015-09-01 00:00:00')\n\nIn [64]: (d + BDay(1))\nOut[64]: Timestamp('2015-08-31 00:00:00')\n```\n\nBut I also feel like the ship may have sailed - I believe all of the other anchored offsets work like this too:\n\n```\n In [66]: d + pd.offsets.MonthEnd(1)\n Out[66]: Timestamp('2015-08-31 00:00:00')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137462471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10978#issuecomment-137462471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10978",
    "id": 137462471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ2MjQ3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T14:13:26Z",
    "updated_at": "2015-09-03T14:13:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "the period transform is more like: \n\n```\nIn [5]: (d+pd.offsets.BDay(0)) + pd.offsets.BDay(1) \nOut[5]: Timestamp('2015-09-01 00:00:00')\n```\n\nso actually ok with that. I think this could use some docs expanding on exactly this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137465702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10978#issuecomment-137465702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10978",
    "id": 137465702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ2NTcwMg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T14:26:51Z",
    "updated_at": "2015-09-03T14:26:51Z",
    "author_association": "MEMBER",
    "body": "It is related to #10575, whether business day should implicitly anchor to the next valid date. CC  @maximilianr \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137465755",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10978#issuecomment-137465755",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10978",
    "id": 137465755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ2NTc1NQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T14:27:05Z",
    "updated_at": "2015-09-03T14:27:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "As far as the `Period` implementation goes: I find it unintuitive on gaps. If you ask for the business day and pass in a Sunday, do you really want Monday?\nhttps://github.com/pydata/pandas/issues/10575\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/137465885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10978#issuecomment-137465885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10978",
    "id": 137465885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ2NTg4NQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-03T14:27:39Z",
    "updated_at": "2015-09-03T14:27:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, we crossed there @sinhrks. Great minds think alike (but fools seldom differ?)\n"
  }
]
