[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51484421",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51484421",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51484421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg0NDIx",
    "user": {
      "login": "JoergRittinger",
      "id": 7314281,
      "node_id": "MDQ6VXNlcjczMTQyODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7314281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoergRittinger",
      "html_url": "https://github.com/JoergRittinger",
      "followers_url": "https://api.github.com/users/JoergRittinger/followers",
      "following_url": "https://api.github.com/users/JoergRittinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoergRittinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoergRittinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoergRittinger/subscriptions",
      "organizations_url": "https://api.github.com/users/JoergRittinger/orgs",
      "repos_url": "https://api.github.com/users/JoergRittinger/repos",
      "events_url": "https://api.github.com/users/JoergRittinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoergRittinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T15:05:28Z",
    "updated_at": "2014-08-07T15:05:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I would like to add a comment: I have done similar changes to get it working for a specific dialect (exasol dialect). Your changes work also fine for me, but I need one additional line in `get_table`:\n\n```\ndef get_table(self, table_name):\n    self.meta.reflect(only=[table_name])\n    if self.meta.schema:\n        table_name = self.meta.schema + '.' + table_name\n    return self.meta.tables.get(table_name)\n```\n\nIf I don't reflect the metadata it will not find this table and will crash at some later point. Can you try to add this line to your pull request?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51486015",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51486015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51486015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg2MDE1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T15:16:03Z",
    "updated_at": "2014-08-07T15:16:25Z",
    "author_association": "MEMBER",
    "body": "@JoergRittinger Thanks for the feedback! \nHow are you exactly using it? Normally through `read_sql_table` the metadata should already be reflected (in that function), and if you pass `meta` manually to PandasSQLAlchemy (like `pdsql = PandasSQLAlchemy (engine, meta=meta)`) I think we leave it to the user to provide a reflected meta object. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51486893",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51486893",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51486893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg2ODkz",
    "user": {
      "login": "JoergRittinger",
      "id": 7314281,
      "node_id": "MDQ6VXNlcjczMTQyODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7314281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoergRittinger",
      "html_url": "https://github.com/JoergRittinger",
      "followers_url": "https://api.github.com/users/JoergRittinger/followers",
      "following_url": "https://api.github.com/users/JoergRittinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoergRittinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoergRittinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoergRittinger/subscriptions",
      "organizations_url": "https://api.github.com/users/JoergRittinger/orgs",
      "repos_url": "https://api.github.com/users/JoergRittinger/repos",
      "events_url": "https://api.github.com/users/JoergRittinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoergRittinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T15:21:44Z",
    "updated_at": "2014-08-07T15:21:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I use to_sql, now is the question what is the idea of using this function. I would like to use it, to insert data in an existing table.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51487540",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51487540",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51487540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg3NTQw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T15:26:14Z",
    "updated_at": "2014-08-07T15:33:46Z",
    "author_association": "MEMBER",
    "body": "You can certainly use `to_sql` to insert data in an existing table, therefore the `if_exists='append'` option exists.\n\nBut does it give an error without that one line extra? \nIt is true that it would be logical that if you do `'append'` with `to_sql`, that is reflects that database. However, at the moment, it just creates the insert statement from a newly created `Table` object, instead of getting the `Table` from the reflected `meta`. But it works now for sqlite/mysql/postgresql. \n\nSo using the functional interface:\n\n```\ndf.to_sql('table', engine, schema='schema'\n```\n\nWhen you provide the `meta` manually (but this API can still change):\n\n```\nmeta = sqlalchemy.MetaData(engine, schema='schema')\nmeta.reflect()\npdsql = pd.io.sql.PandasSQLAlchemy(engine, meta=meta)\npdsql.to_sql(df, 'table')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51490768",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51490768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51490768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDkwNzY4",
    "user": {
      "login": "JoergRittinger",
      "id": 7314281,
      "node_id": "MDQ6VXNlcjczMTQyODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7314281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoergRittinger",
      "html_url": "https://github.com/JoergRittinger",
      "followers_url": "https://api.github.com/users/JoergRittinger/followers",
      "following_url": "https://api.github.com/users/JoergRittinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoergRittinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoergRittinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoergRittinger/subscriptions",
      "organizations_url": "https://api.github.com/users/JoergRittinger/orgs",
      "repos_url": "https://api.github.com/users/JoergRittinger/repos",
      "events_url": "https://api.github.com/users/JoergRittinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoergRittinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T15:48:28Z",
    "updated_at": "2014-08-07T15:48:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "sry, forget my complains. Seems to work also for me (I forget to undo some changes from my side). Looking forward to 0.15 :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51491365",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51491365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51491365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDkxMzY1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T15:53:00Z",
    "updated_at": "2014-08-07T15:53:00Z",
    "author_association": "MEMBER",
    "body": "No problem, thanks for trying out! \nAnother question, you said that working with exasol without schemas does not make sense. How do you do it to execute a query with the pandas functions to retrieve data? `read_sql_query` does not have a clue about schemas at the moment (only `read_sql_table` does with this PR). Can you still use it? (using dotted names like `\"SELECT * FROM schema.table\"`?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51565098",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51565098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51565098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTY1MDk4",
    "user": {
      "login": "JoergRittinger",
      "id": 7314281,
      "node_id": "MDQ6VXNlcjczMTQyODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7314281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoergRittinger",
      "html_url": "https://github.com/JoergRittinger",
      "followers_url": "https://api.github.com/users/JoergRittinger/followers",
      "following_url": "https://api.github.com/users/JoergRittinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoergRittinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoergRittinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoergRittinger/subscriptions",
      "organizations_url": "https://api.github.com/users/JoergRittinger/orgs",
      "repos_url": "https://api.github.com/users/JoergRittinger/repos",
      "events_url": "https://api.github.com/users/JoergRittinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoergRittinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T05:35:54Z",
    "updated_at": "2014-08-08T05:35:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "exactly: `\"SELECT * from schema_name.table_name\"`.\n\nIf I don't waste your time I would like to have another question. What is the design of the `sql` module. Are you supposed to use only the high level functions `read_sql_table`, `read_sql_query` and `to_sql` or should you also be able to work with an `PandasSQLAlchemy` object and use the `read_table`, `read_sql` and `to_sql` functions within. If it is the second case, your solution has still some drawbacks when using a database with more then one schema, because in the metadata object you can only specify one schema. I had made a fork of the sql module with some different changes to yours (not giving the schema to metadata but adding it as a parameter to more low level functions). If you are interested I could make a pull request, maybe?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51573942",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51573942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51573942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTczOTQy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T08:04:16Z",
    "updated_at": "2014-08-08T08:04:16Z",
    "author_association": "MEMBER",
    "body": "@JoergRittinger No, that is a very good question! This is still work in progress, and if you want to contribute to that (in commenting on the design, or in implementation), very very welcome! \n\nThe idea is that you have two possibilities: 1) the simpler functional API (the high-level functions) `read_sql_query/table` and `to_sql`, and 2) the more advanced object-oriented API with `PandasSQLAlchemy`. The high-level functions are already quite polished (but can use some enhancements, such as this PR to add `schema`), but the OO API should still be discussed and is not yet really public (will still change). See #6300 for an open issue on that. It is also not yet fully clear what this 'more advanced' means, besides you don't need to recreate the object and metadata again for each query. Also providing custom metadata is possible here. \nYou are correct that now only one schema can be specifies. This could also be an enhancement for the object oriented API.\n\nIn any case, certainly interested to see your changes. You can point to the branch or open a PR.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51661500",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51661500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51661500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjYxNTAw",
    "user": {
      "login": "JoergRittinger",
      "id": 7314281,
      "node_id": "MDQ6VXNlcjczMTQyODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7314281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoergRittinger",
      "html_url": "https://github.com/JoergRittinger",
      "followers_url": "https://api.github.com/users/JoergRittinger/followers",
      "following_url": "https://api.github.com/users/JoergRittinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoergRittinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoergRittinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoergRittinger/subscriptions",
      "organizations_url": "https://api.github.com/users/JoergRittinger/orgs",
      "repos_url": "https://api.github.com/users/JoergRittinger/repos",
      "events_url": "https://api.github.com/users/JoergRittinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoergRittinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T21:47:10Z",
    "updated_at": "2014-08-08T21:56:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche you can see the changes in https://github.com/JoergRittinger/pandas/commit/8e7f41fccf4aaf571893217757498a1237978eb1 and https://github.com/JoergRittinger/pandas/commit/e4cdf312d5e2af6c2fcdcd87109bcbebdcb421c0 (the second also incorporating your bugfix https://github.com/jorisvandenbossche/pandas/commit/df32cff8833edf810000b50e50a40a809305d239)\n\nThis implementation works only when you use SQLalchemy. It has the major drawback that you would have to introduce the schema also in all legacy functions where it would have no meaning at all ...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51787617",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51787617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51787617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg3NjE3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T14:31:40Z",
    "updated_at": "2014-08-11T14:31:40Z",
    "author_association": "MEMBER",
    "body": "@JoergRittinger Thanks! So basically, you provided a keyword arg to each function and pass this around, instead of adding it explicitely to the `MetaData.schema` (like I did). In this way you can write/read to/from different schema's with the same `PandasSQLAlchemy` object? \nMaybe we could combine both approaches: both add it to metadata (so in this way you can give a 'default' schema to the `PandasSQLAlchemy` object and don't need to specify it in each method call afterwards) and provide it as a keyword in the methods, to being able to overwrite this default value? (so you also have the ability to use different schema's?)\n\nAbout it having no meaning for the legacy functions, I don't think that is a problem. We should just give an informative error message then.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51801635",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51801635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51801635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODAxNjM1",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T16:09:02Z",
    "updated_at": "2014-08-11T16:09:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks interesting, will try to test drive it on Oracle later this week.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51961555",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-51961555",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 51961555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTYxNTU1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T19:05:40Z",
    "updated_at": "2014-08-12T19:05:50Z",
    "author_association": "MEMBER",
    "body": "@JoergRittinger I combined both approaches (your and mine commit). Can you have a look? So the idea is, if you provide `schema` to `PandasSQLAlchemy`, it uses this as default in all other methods (read_table/to_sql/has_table/get_table/drop_table), but in each of the methods you can also override this schema with again a `schema` keyword.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52245569",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-52245569",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 52245569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ1NTY5",
    "user": {
      "login": "JoergRittinger",
      "id": 7314281,
      "node_id": "MDQ6VXNlcjczMTQyODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7314281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoergRittinger",
      "html_url": "https://github.com/JoergRittinger",
      "followers_url": "https://api.github.com/users/JoergRittinger/followers",
      "following_url": "https://api.github.com/users/JoergRittinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoergRittinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoergRittinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoergRittinger/subscriptions",
      "organizations_url": "https://api.github.com/users/JoergRittinger/orgs",
      "repos_url": "https://api.github.com/users/JoergRittinger/repos",
      "events_url": "https://api.github.com/users/JoergRittinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoergRittinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:13:53Z",
    "updated_at": "2014-08-14T21:13:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Two small things I saw:\n-  `read_sql` also with schema parameter? (imho I would remove this function and be explicit with what you want, a table or a sql query)\n- in the high level function in `to_sql` you give the schema to `pandasSQL_builder` and call `pandas_sql.to_sql` without, in `has_table` you do it vice versa\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52249587",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-52249587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 52249587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjQ5NTg3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-14T21:47:46Z",
    "updated_at": "2014-08-14T21:47:46Z",
    "author_association": "MEMBER",
    "body": "- `read_sql`: yes, I was also a little in doubt about that, but removing is not an option (backwards compatibility). Not providing it is a reason to push users to `read_sql_query/table`, but it also gives some inconsistency between the functions\n- `has_table`/`to_sql`: good catch, I changed it in `to_sql` to pass it to `pandasSQL_builder` (so it is passed to the init function), but actually it does not (or it should not) really matter. But maybe I should be consistent in the implementation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53628832",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-53628832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 53628832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjI4ODMy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-27T19:41:14Z",
    "updated_at": "2014-08-27T19:41:14Z",
    "author_association": "MEMBER",
    "body": "rebased and updated\n\n@mangecoeur @danielballan @hayd any comments?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53925403",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-53925403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 53925403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTI1NDAz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-29T20:20:23Z",
    "updated_at": "2014-08-29T20:20:23Z",
    "author_association": "MEMBER",
    "body": "@jreback does this look OK to you?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54003514",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-54003514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 54003514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDAzNTE0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-31T22:32:27Z",
    "updated_at": "2014-08-31T22:32:27Z",
    "author_association": "MEMBER",
    "body": "OK, I merged this, if people could test this with oracle / mssql server (@aldanor, @aergener), that would be very welcome! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54188180",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-54188180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 54188180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTg4MTgw",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-02T17:34:18Z",
    "updated_at": "2014-09-02T18:43:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Finally got to give it a spin on Oracle, the read functions seem to work for the simplest cases where schema is required (aside from several upstream Oracle-related sqlalchemy bugs which have been fixed and will make it to 0.9.8). So far so good, thanks!\n\nVery minor thing: the only thing I find a bit unintuitive is the order of arguments in read_sql_table, but maybe it's just me :) (I'd probably expect engine and table name to be swapped, so engine comes first, same as in most other sqlalchemy functions).\n\nHaven't checked the write functionality though yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54213514",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-54213514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 54213514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjEzNTE0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-02T20:35:09Z",
    "updated_at": "2014-09-02T20:35:09Z",
    "author_association": "MEMBER",
    "body": "@aldanor Thanks for the heads up!\n\nOn the keyword order of table name and engine, that is already too late to change I think (also in read_sql_query, it it first the query and then the engine, also in to_sql)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55135051",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-55135051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 55135051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MTM1MDUx",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-10T15:42:34Z",
    "updated_at": "2014-09-10T15:42:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@aldanor the argument order is that way because it was in the original to_sql before sqlalchemy support was added, so not really possible to change it round :/ \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253709455",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7952#issuecomment-253709455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7952",
    "id": 253709455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzcwOTQ1NQ==",
    "user": {
      "login": "helenjiangyh",
      "id": 19333169,
      "node_id": "MDQ6VXNlcjE5MzMzMTY5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19333169?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/helenjiangyh",
      "html_url": "https://github.com/helenjiangyh",
      "followers_url": "https://api.github.com/users/helenjiangyh/followers",
      "following_url": "https://api.github.com/users/helenjiangyh/following{/other_user}",
      "gists_url": "https://api.github.com/users/helenjiangyh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/helenjiangyh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/helenjiangyh/subscriptions",
      "organizations_url": "https://api.github.com/users/helenjiangyh/orgs",
      "repos_url": "https://api.github.com/users/helenjiangyh/repos",
      "events_url": "https://api.github.com/users/helenjiangyh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/helenjiangyh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-14T04:55:27Z",
    "updated_at": "2016-10-14T04:55:27Z",
    "author_association": "NONE",
    "body": "I am currently using pandas 0.17.1 and trying to upload a dataframe to an existing table on redshift using `partial.to_sql('table', conn, schema='db', index=False, if_exists='append')`, but still got `Relation \"table\" already exists`. However, when I did `conn.has_table('db.table')`, it returned `False`.\n"
  }
]
