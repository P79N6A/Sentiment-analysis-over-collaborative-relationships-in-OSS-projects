[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322228076",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-322228076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 322228076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjIyODA3Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-14T15:49:19Z",
    "updated_at": "2017-08-14T15:49:19Z",
    "author_association": "MEMBER",
    "body": "I like how the generic `pandas.Index()` constructor to do type inference. This is convenient and usually helpful. (Though if we were starting over from scratch, I might encourage creating a separate constructor function, e.g., `pd.as_index()` to do type inference.)\r\n\r\nI'm not a big fan of separate keyword arguments like `tupleize_cols` and `squeeze`. Instead, I would suggest:\r\n- Setting `dtype` on `pd.Index` controls the type of index created, e.g., `dtype=object` guarantees a base `Index` object.\r\n- I think we should simply remove outright the `MultiIndex -> Index` behavior with length one tuples. I understand the intention of avoiding multi-indexes with one level, but the inconsistency is grating. Every time I've encountered this, I've either used another work-around to create a `MultiIndex` or reverted to the base `Index` constructor."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322229813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-322229813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 322229813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjIyOTgxMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-14T15:55:24Z",
    "updated_at": "2017-08-14T15:55:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we should simply remove outright the `MultiIndex -> Index`\r\n\r\nOK, since both you and @jreback are in favor of that over a keyword, I'll amend #17236 to just remove that behavior (without a deprecation cycle I suppose?).\r\n\r\nAnd just to be clear @shoyer, you're in favor of keeping `Index([('a, 'b'), ('c', 'd')])` returning a MI, since that's consistent with `Index` doing inference?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322232004",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-322232004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 322232004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjIzMjAwNA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-14T16:03:14Z",
    "updated_at": "2017-08-14T16:03:14Z",
    "author_association": "MEMBER",
    "body": "> OK, since both you and @jreback are in favor of that over a keyword, I'll amend #17236 to just remove that behavior (without a deprecation cycle I suppose?).\r\n\r\nSounds good to me. This should be mentioned as a breaking change, of course. I can't think of any real use cases for this behavior, but I'm sure this will still come up for someone somehow!\r\n\r\n> And just to be clear @shoyer, you're in favor of keeping Index([('a, 'b'), ('c', 'd')]) returning a MI, since that's consistent with Index doing inference?\r\n\r\nYes, that seems consistent to me. I would suggest `pd.Index([('a', 'b'), ('c', 'd')], dtype=object)` as a good well to spell creating an Index of tuples."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322728419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-322728419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 322728419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjcyODQxOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T10:21:46Z",
    "updated_at": "2017-08-16T10:21:46Z",
    "author_association": "MEMBER",
    "body": "See https://github.com/pandas-dev/pandas/pull/17236#issuecomment-322725187, I am also +1 on making the MultiIndex constructors consistently return MultiIndex (so remove the MultiIndex -> Index way)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323776126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-323776126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 323776126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzc3NjEyNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-21T15:31:41Z",
    "updated_at": "2017-08-21T15:31:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "So it seems like the consensus is to put all the inference into `Index` and remove it from others (specifically MultiIndex of all length-1 tuples will be a MultiIndex instead of an Index).\r\n\r\nThe second idea is to have `Index(..., dtype=object)` disable all inference. So `Index([1, 2], dtype=object)` will give you an `Index` instead of `Int64Index`, and `Index([(1, 'a'), (2, 'b')], dtype=object)` an `Index` instead of `MultiIndex`, etc.\r\n\r\nI'll update the top post."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323997292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-323997292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 323997292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzk5NzI5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-22T11:22:45Z",
    "updated_at": "2017-08-22T11:22:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "this already does what you expect\r\n\r\n```\r\nIn [2]: pd.Index([0, 1], dtype=object)\r\nOut[2]: Index([0, 1], dtype='object')\r\n```\r\n\r\nbut eliminating the special case is important as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323999321",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-323999321",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 323999321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzk5OTMyMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-22T11:32:51Z",
    "updated_at": "2017-08-22T11:32:51Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger yep, agree with your summary\r\n\r\nThe `dtype=object` to disable interference indeed already works for most data, but not yet for tuples (they still become a MultiIndex). So would be good to fix that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324004890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-324004890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 324004890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDAwNDg5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-22T12:00:23Z",
    "updated_at": "2017-08-22T12:00:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "ahh I would be ok with fixing this. This is not respecting the dtype.\r\n```\r\nIn [1]: pd.Index([(0,), (1,)], dtype=object)\r\nOut[1]: Int64Index([0, 1], dtype='int64')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324006231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17246#issuecomment-324006231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17246",
    "id": 324006231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDAwNjIzMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-22T12:06:55Z",
    "updated_at": "2017-08-22T12:06:55Z",
    "author_association": "MEMBER",
    "body": "Ah,good catch, that is yet another one to fix! Because the one I meant was\r\n\r\n```\r\nIn [23]: pd.Index([(0,2), (1,3)], dtype=object)\r\nOut[23]: \r\nMultiIndex(levels=[[0, 1], [2, 3]],\r\n           labels=[[0, 1], [0, 1]])\r\n```"
  }
]
