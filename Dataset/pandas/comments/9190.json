[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68569603",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-68569603",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 68569603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTY5NjAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-02T22:40:54Z",
    "updated_at": "2015-01-02T22:40:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas.pydata.org/pandas-docs/stable/categorical.html#reordering ?\nassume you saw this: http://pandas.pydata.org/pandas-docs/stable/io.html#io-stata-categorical\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68723141",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-68723141",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 68723141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzIzMTQx",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T15:28:44Z",
    "updated_at": "2015-01-05T15:28:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, yeah that's helpful. AFAICT, it still doesn't look like there's a way to just drop the ordering though correct?\n\nRe: `read_stata`, yeah I saw that, but it's an all or nothing proposition. No way to pass a list. Would be an easy fix. I'll look at it.\n\nUnrelated, I'm sure it was discussed ad nauseam but I was also surprised that `ordered` is the default for Categorical. In my experience, unordered is more common. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68757220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-68757220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 68757220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzU3MjIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T19:00:01Z",
    "updated_at": "2015-01-05T19:00:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [1]: import pandas as pd                                    \n\nIn [2]: s = pd.Series(list('aabcd'),dtype='category')          \n\nIn [3]: s                                                      \nOut[3]:                                                        \n0    a                                                         \n1    a                                                         \n2    b                                                         \n3    c                                                         \n4    d                                                         \ndtype: category                                                \nCategories (4, object): [a < b < c < d]                        \n\nIn [4]: s.cat.ordered                                          \nOut[4]: True                                                   \n\nIn [5]: s.cat.ordered = False                                  \n\nIn [6]: s                                                      \nOut[6]:                                                        \n0    a                                                         \n1    a                                                         \n2    b                                                         \n3    c                                                         \n4    d                                                         \ndtype: category                                                \nCategories (4, object): [a, b, c, d]                           \n```\n\njust set the `ordered` flag to drop the ordering.\n\ncc @JanSchulz .... do you recall the exact discussion w.r.t. `ordered` being True by default?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68798427",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-68798427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 68798427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Nzk4NDI3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T23:04:17Z",
    "updated_at": "2015-01-05T23:04:17Z",
    "author_association": "MEMBER",
    "body": "@jreback Your example above of resetting the order can maybe be added to the docs (I didn't directly see this now in the docs. They speak about setting the order and sorting, but I did not find this)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68800529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-68800529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 68800529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODAwNTI5",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-05T23:22:04Z",
    "updated_at": "2015-01-05T23:22:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, nice. I still think a method for for changing the state of the object\nwould be nice too. Methods are more or less self-documenting.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68877495",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-68877495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 68877495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODc3NDk1",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-06T15:15:09Z",
    "updated_at": "2015-01-06T15:16:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "The default to ordered=True was due to the fact that Stata only stores numerical data so that it is always possibly to order according to the numeric values, and that it was trivial to drop the ordering if needed, but non-trivial to re-assign it if read in as unordered.\n\nOops. this was only w.r.t `read_stata`, not categorical creation, if that is the nature of the above question.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68933043",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-68933043",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 68933043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTMzMDQz",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-06T21:02:33Z",
    "updated_at": "2015-01-06T21:03:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "In the discussion, we wanted to have a ordered categorical when the underlying data had an order, which is the case in most cases (ints, strings, ... are all orderable). So `ordered` actually defaults to false, but the default is not used in most cases...:\n\n``` python\n    def __init__(self, values, categories=None, ordered=None, name=None, fastpath=False,\n                 levels=None):\n    [...]\n    # case without explicit categories\n                # If the underlying data structure was sortable, and the user doesn't want to\n                # \"forget\" this order, the categorical also is sorted/ordered\n                if ordered is None:\n                    ordered = True\n    # case with explicit categories\n            # if we got categories, we can assume that the order is intended\n            # if ordered is unspecified\n            if ordered is None:\n                ordered = True\n    [...]\n    self.ordered = False if ordered is None else ordered\n```\n\nregarding a `drop_ordering` (or `remove_ordering`?): I'm not so sure what would be the expected results:\n- just the same as `ordered=False` or\n- also remove any ordering of the categories and 'resort' to the default order, which is defined on the individual elements (e.g. `categories.sort()`)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68958461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-68958461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 68958461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTU4NDYx",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-07T00:12:36Z",
    "updated_at": "2015-01-07T00:12:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bashtage Yeah, I just meant with Categorical in general.\n\n@JanSchulz Hmm. I think the rationale for the default should be based on what's more common in the real world. My prior is that unordered factors are _much_ more common. R defaults to unordered unless `ordered=TRUE`. Do people complain about this? Seems sane to me.\n\nRe: drop ordering, it would just be the same as `ordered=False`. If the defaults don't change, I suspect people are going to be calling this a lot.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71014404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-71014404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 71014404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDE0NDA0",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-22T12:38:19Z",
    "updated_at": "2015-01-22T12:38:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback, @jseabold: I've no real preference on that default (i.e. I understand both rationales), but if that should change we should do it as early as possible as that's an API change...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71014510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-71014510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 71014510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDE0NTEw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-22T12:39:15Z",
    "updated_at": "2015-01-22T12:39:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "If stata has `ordered==False` `read_stata` should build categoricals with a different default.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71032107",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-71032107",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 71032107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMDMyMTA3",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-22T14:57:19Z",
    "updated_at": "2015-01-22T14:57:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Stata's datafile format does not explicitly allow a determination of whether a labeled variable ordered or not - only the end user has this information.  The primary reasons to import as an ordered categorical is that\n- Order can be trivially removed. As an aside, I'm not sure I even understand the issue of having an unordered categorical stored as an ordered, aside from mental bookeeping by the end user.\n- The ordinal information contained in the Stata data, if useful, is lost if imported as an unordered categorical\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71340753",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9190#issuecomment-71340753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9190",
    "id": 71340753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzQwNzUz",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-24T22:28:36Z",
    "updated_at": "2015-01-24T22:28:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "This topic is now also in https://github.com/pydata/pandas/pull/9347: should `s.cat.order` setable or only readable. If the latter, then a explicit `as_unordered()` or `as_ordered()` (or some other method) makes sense.\n"
  }
]
