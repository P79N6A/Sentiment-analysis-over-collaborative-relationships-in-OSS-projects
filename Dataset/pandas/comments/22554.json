[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/417848126",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-417848126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 417848126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzg0ODEyNg==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-01T10:08:03Z",
    "updated_at": "2018-09-01T10:08:03Z",
    "author_association": "NONE",
    "body": "Thanks for the comments @datapythonista.\r\n\r\n> I'd prefer to have just a set of tests for min and max that illustrates both, to reduce te size of the code.\r\n\r\nWhat tests do you mean? Or do you mean the examples? I wasn't sure how to do that, since the answer of an example is hard coded. Or is there a way to generate the answers when the docs are compiled? As in\r\n\r\n```\r\nBy default NA's are ignored.\r\n\r\n>>> s = pd.Series([1, np.nan, 4, 3])\r\n>>> s.%(outname)s()\r\n%(ans)s\r\n``` \r\n\r\n> Also, can you explain better why implementing `_make_min_max_function` was needed?\r\n\r\nBecause I thought I couldn't use the other functions.\r\n\r\n- `_make_min_count_stat_function` has an extra variable `min_count` which is not used by `min` and `max`.\r\n- With `_make_stat_function`  you can't pass an example. And since this method is used in several places I wasn't sure what would happen if added `examples` to the `@Substitution` of this method. Also I wasn't sure how to pass a See also section using this function.\r\n- The other `_make_...` are for very different functions or have extra input parameters which are not used by `min` and `max`.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418079112",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-418079112",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 418079112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODA3OTExMg==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-03T10:56:06Z",
    "updated_at": "2018-09-03T10:56:06Z",
    "author_association": "MEMBER",
    "body": "Ok, I understand. When I said having just a set of examples (that's what I meant by tests), I mean showing both methods in both docstrings. Instead of showing only examples for `min` in the `min` docstring, showing both `min` and `max` (and same for `max`).\r\n\r\nThen, if I'm not missing anything, we can simply set `_min_max_doc` as the docstring without a function. Am I missing something?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418461623",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-418461623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 418461623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODQ2MTYyMw==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T17:58:00Z",
    "updated_at": "2018-09-04T17:58:00Z",
    "author_association": "NONE",
    "body": "@datapythonista ok. I'll start working on it. \r\n\r\n> Then, if I'm not missing anything, we can simply set _min_max_doc as the docstring without a function. Am I missing something?\r\n\r\nYeah I think so."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418504205",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-418504205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 418504205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODUwNDIwNQ==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T20:19:21Z",
    "updated_at": "2018-09-04T20:19:21Z",
    "author_association": "NONE",
    "body": "@datapythonista so you mean change\r\n\r\n```\r\ncls.max = _make_min_max_function(\r\n            cls, 'max', name, name2, axis_descr,\r\n            'maximum', nanops.nanmax, _max_examples)\r\n```\r\ninto\r\n\r\n```\r\ncls.max = _min_max_doc\r\n```\r\nAnd same for `cls.min`?\r\n\r\nIf we do this, then it is not possible to add what the method does to the docstring summary. As in, now it says `Return the %(desc)s of the values in the object.`. If that changes to a general docstring for both min and max, you get a summary which reads `Return the minimum or maximum of the values in the object.`, or something along those lines. And a similar statement on how to retrieve the index of the min and max. You are OK with that?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418534205",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-418534205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 418534205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODUzNDIwNQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T22:09:42Z",
    "updated_at": "2018-09-04T22:09:42Z",
    "author_association": "MEMBER",
    "body": "I took a closer look, and I understand what you did now. This code (the original) is a bit tricky. Let me take a closer look and see if we can make it simpler (I'd like to avoid creating the new function `_make_min_max_function` to not complicate it even more)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421703488",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-421703488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 421703488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTcwMzQ4OA==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-16T05:47:12Z",
    "updated_at": "2018-09-16T12:29:41Z",
    "author_association": "NONE",
    "body": "@datapythonista What about having a single general docstring for all methods, something like this:\r\n\r\n```\r\n_num_doc = \"\"\"\r\n%(short_summary)s\r\n\r\n%(extended_summary)s\r\n\r\nParameters\r\n----------\r\naxis : %(axis_descr)s, default 0\r\n    Indicate which axis should be reduced. Not implemented for Series.\r\n\r\n    * 0 / ‘index’ : reduce the index, return a Series whose index is the\r\n      original column labels.\r\n    * 1 / ‘columns’ : reduce the columns, return a Series whose index is the\r\n      original index.\r\n    %(bool_axis)s\r\n\r\n    For a DataFrame the value 0 applies %(fname)s on each column, and 1\r\n    applies it on each row.\r\nskipna : bool, default True\r\n%(ddof)s\r\nlevel : int or level name, default None\r\n    If the axis is a MultiIndex (hierarchical), count along a\r\n    particular level, collapsing into a %(axis_name1)s.\r\n%(min_count)s\r\nnumeric_only : bool, default None\r\n    Include only float, int, bool columns. If None, will attempt to use\r\n    everything, then use only numeric data. Not implemented for Series.\r\n    Exclude NA/null values when computing the result.\r\n**kwargs : any, default None\r\n    Additional keyword arguments.\r\n\r\nReturns\r\n-------\r\n%(fname)s : %(axis_name1)s or %(axis_name2)s (if level specified)\r\n\r\n%(see_also)s\r\n%(examples)s\r\n\"\"\"\r\n```\r\n\r\nThis can than be used for all functions, also the ones which have a `ddof` or `min_count` argument and even the `bool` methods `any` and `all`. Thus you get rid of `_num_ddof_doc`, `_bool_doc` and of course `_min_max_doc`.\r\n\r\nI took the liberty to rename some variables in the doc string such that it easier to see what is what. `name` -> `fname`, `name1` -> `axis_name1` and `name2` -> `axis_name2`. Finally I've added two more variables `short_summary` and `long_summary`.\r\n\r\nIn order to use this new docstring I've updated `_make_stat_function` as follows:\r\n\r\n```\r\ndef _make_stat_function(cls, long_name, axis_name1, axis_name2, axis_descr,\r\n                           short_summary, extended_summary, f,\r\n                           examples, see_also):\r\n    @Substitution(fname=cls.__name__, short_summary=short_summary, \r\n                  extended_summary=extended_summary, long_name=long_name,\r\n                  axis_name1=axis_name1, axis_name2=axis_name2,\r\n                  axis_descr=axis_descr, bool_axis='', ddof='',\r\n                  min_count='', examples=examples, see_also=see_also)\r\n    @Appender(_num_doc)\r\n    def stat_func(self, axis=None, skipna=None, level=None, numeric_only=None,\r\n                  **kwargs):\r\n        nv.validate_stat_func(tuple(), kwargs, fname=cls.__name__)\r\n        if skipna is None:\r\n            skipna = True\r\n        if axis is None:\r\n            axis = self._stat_axis_number\r\n        if level is not None:\r\n            return self._agg_by_level(cls.__name__, axis=axis, level=level,\r\n                                      skipna=skipna)\r\n        return self._reduce(f, cls.__name__, axis=axis, skipna=skipna,\r\n                            numeric_only=numeric_only)\r\n\r\n    return set_function_name(stat_func, cls.__name__, cls)\r\n``` \r\nIn the updated method I use the new variables and I've omitted the `name` variable and replaced it with `cls.__name__`. Furthermore I've added a `long_name` variable, which can be used as follows:\r\n\r\n```\r\ncls.max = _make_stat_function(\r\n    cls, 'maximum', name, name2, axis_descr,\r\n    _stat_short_summary, _min_max_extended_summary, nanops.nanmax,\r\n    _max_examples, _min_max_see_also)\r\n```\r\n\r\nwhere `_stat_short_summary` is: \r\n\r\n```\r\n_stat_short_summary = \"\"\"\\\r\nReturn the %(long_name)s of the values in the object.\r\n\"\"\"\r\n```\r\n\r\nand makes use of `long_name`. `stat_short_summary` can then also be used by methods `std`, `mean`, `var`, `mad`, etc.\r\n\r\nShall I start implementing this for all methods which use `_make_stat_function`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424854180",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-424854180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 424854180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg1NDE4MA==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T20:14:04Z",
    "updated_at": "2018-09-26T20:14:04Z",
    "author_association": "NONE",
    "body": "@datapythonista ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429572738",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-429572738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 429572738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU3MjczOA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-13T20:28:02Z",
    "updated_at": "2018-10-13T20:28:02Z",
    "author_association": "NONE",
    "body": "Hello @Roald87! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/generic.py`](https://github.com/Roald87/pandas/blob/3f681fa4748d9503387c49fb0f438f614f3d8720/pandas/core/generic.py) !\n\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429572749",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-429572749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 429572749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU3Mjc0OQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-10-13T20:28:09Z",
    "updated_at": "2018-11-28T19:02:19Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22554?src=pr&el=h1) Report\n> Merging [#22554](https://codecov.io/gh/pandas-dev/pandas/pull/22554?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/b7294dd3ec47dffa50f3c8bdf89aa8a01f4494f2?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22554/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/22554?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #22554      +/-   ##\n==========================================\n+ Coverage   92.29%   92.31%   +0.01%     \n==========================================\n  Files         161      161              \n  Lines       51501    51473      -28     \n==========================================\n- Hits        47534    47517      -17     \n+ Misses       3967     3956      -11\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.7% <100%> (+0.01%)` | :arrow_up: |\n| #single | `42.43% <84.61%> (+0.01%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22554?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.84% <100%> (ø)` | :arrow_up: |\n| [pandas/plotting/\\_misc.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19taXNjLnB5) | `38.68% <0%> (-0.31%)` | :arrow_down: |\n| [pandas/core/arrays/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lcy5weQ==) | `98.37% <0%> (-0.14%)` | :arrow_down: |\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `94.14% <0%> (-0.14%)` | :arrow_down: |\n| [pandas/io/formats/html.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvaHRtbC5weQ==) | `97.63% <0%> (-0.05%)` | :arrow_down: |\n| [pandas/core/dtypes/dtypes.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2R0eXBlcy5weQ==) | `95.59% <0%> (-0.03%)` | :arrow_down: |\n| [pandas/core/arrays/sparse.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL3NwYXJzZS5weQ==) | `91.93% <0%> (-0.02%)` | :arrow_down: |\n| [pandas/io/json/normalize.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vbm9ybWFsaXplLnB5) | `96.87% <0%> (ø)` | :arrow_up: |\n| [pandas/io/formats/format.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvZm9ybWF0LnB5) | `97.76% <0%> (ø)` | :arrow_up: |\n| [pandas/tseries/offsets.py](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvb2Zmc2V0cy5weQ==) | `96.98% <0%> (ø)` | :arrow_up: |\n| ... and [25 more](https://codecov.io/gh/pandas-dev/pandas/pull/22554/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22554?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22554?src=pr&el=footer). Last update [b7294dd...e3e0e1b](https://codecov.io/gh/pandas-dev/pandas/pull/22554?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/431011005",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-431011005",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 431011005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTAxMTAwNQ==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T13:36:16Z",
    "updated_at": "2018-10-18T13:36:16Z",
    "author_association": "NONE",
    "body": "@datapythonista I made the following changes:\r\n- Now there is a single example for `.min` and `.max`\r\n- I made some changes to how the docstring of `_make_min_max_function` gets assembled. I made these changes such that `_stats_parameters_and_returns` can replace `_num_doc`, `_num_ddof_doc` and `_bool_doc`. If you approve of this, I can rename `_make_min_max_function` to `_make_stat_function` and remove the original `_make_stat_function`. And then also change all the functions which make use of the original `_make_stat_function`. \r\n\r\nAlso I pulled the latest changes from the original master branch, however this seems to have bricked  pandas. I now get the following when I do `import pandas`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/roald/virtualenvs/pandas-dev/lib/python3.6/site-packages/IPython/core/interactiveshell.py\", line 2961, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-7dd3504c366f>\", line 1, in <module>\r\n    import pandas as pd\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/__init__.py\", line 42, in <module>\r\n    from pandas.core.api import *\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/core/api.py\", line 10, in <module>\r\n    from pandas.core.groupby import Grouper\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/core/groupby/__init__.py\", line 1, in <module>\r\n    from pandas.core.groupby.groupby import GroupBy  # flake8: noqa\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/core/groupby/groupby.py\", line 38, in <module>\r\n    from pandas.core.index import Index, MultiIndex\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/core/index.py\", line 2, in <module>\r\n    from pandas.core.indexes.api import *\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/core/indexes/api.py\", line 11, in <module>\r\n    from pandas.core.indexes.interval import IntervalIndex  # noqa\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/core/indexes/interval.py\", line 34, in <module>\r\n    from pandas.core.indexes.datetimes import date_range, DatetimeIndex\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/core/indexes/datetimes.py\", line 39, in <module>\r\n    from pandas.core.indexes.datetimelike import (\r\n  File \"/snap/pycharm-community/85/helpers/pydev/_pydev_bundle/pydev_import_hook.py\", line 20, in do_import\r\n    module = self._system_import(name, *args, **kwargs)\r\n  File \"/home/roald/Documents/Projects/pandas/pandas/core/indexes/datetimelike.py\", line 14, in <module>\r\n    from pandas._libs.tslibs.timestamps import round_nsint64, RoundTo\r\nImportError: cannot import name 'round_nsint64'\r\n```\r\n\r\nIs it generally a good idea to get the latest version while working on a PR or not?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435600664",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-435600664",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 435600664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTYwMDY2NA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-03T16:21:51Z",
    "updated_at": "2018-11-03T16:21:51Z",
    "author_association": "MEMBER",
    "body": "Sorry for the delay. Did you try to recompile the C parts of pandas `python setup.py build_ext --inplace`?\r\n\r\nI guess that should fix the error. As far as you start the PR with a fresh version of pandas, and there are no conflicts (like now), I don't think fetching the new changes adds a lot of value. It surely don't harm, and it's good to be updated, but in most cases won't make a difference.\r\n\r\nIf you can try to recompile pandas, and also fetch from master to fix the conflict, we can move forward with this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435603878",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-435603878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 435603878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTYwMzg3OA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-03T17:02:08Z",
    "updated_at": "2018-11-03T17:02:08Z",
    "author_association": "MEMBER",
    "body": "I'd prefer to touch as less code as possible for these changes. I think with the current make_stats_func you can already provide the summary and examples as summary, and the rest is provided. What else is missing? If all the changes are for the see also section, let's leave this for another PR. Can you check how `sum` is adding the examples to the docstring, do it in the same way, and undo all the changes to the code in the PR.\r\n\r\nSorry, but I think pandas code is complex enough, let's try to make the changes without adding anything else."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435656715",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-435656715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 435656715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTY1NjcxNQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-04T10:04:33Z",
    "updated_at": "2018-11-04T10:04:33Z",
    "author_association": "MEMBER",
    "body": "I think this contains conflicting changes: #23338\r\n\r\nCan you take a look, and proceed considering that this PR (#23338) will be merged soon."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441150398",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-441150398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 441150398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE1MDM5OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T03:35:14Z",
    "updated_at": "2018-11-23T03:35:14Z",
    "author_association": "MEMBER",
    "body": "Closing as stale. Also conflicts with some other development. Ping if you'd like to pick it back up"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441587352",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-441587352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 441587352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTU4NzM1Mg==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T10:17:26Z",
    "updated_at": "2018-11-26T10:17:26Z",
    "author_association": "MEMBER",
    "body": "@Roald87 would be great to get your work in this PR merged. Do you have time to merge master into your branch, and address the last comments? Please reopen the PR if that's the case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441955842",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-441955842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 441955842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTk1NTg0Mg==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T07:29:44Z",
    "updated_at": "2018-11-27T07:29:44Z",
    "author_association": "NONE",
    "body": "@datapythonista Yeah I'll try to do it this week."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442206879",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-442206879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 442206879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjIwNjg3OQ==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T20:33:13Z",
    "updated_at": "2018-11-27T20:33:13Z",
    "author_association": "NONE",
    "body": "@WillAyd  Could you open it again?\r\n\r\n@datapythonista I've made the changes. I see the a `_max_examples` was added. I used that one now for both the min and max functions. Or should I add some of my examples from `_min_max_examples` into `_max_examples`?\r\n\r\nAlso can't generate the html docs anymore. I get the following:\r\n\r\n```\r\n>>> python make.py --single DataFrame.max\r\n[autosummary] generating autosummary for: source/index.rst\r\n[autosummary] writing to source/generated_single\r\nRunning Sphinx v1.7.7\r\n\r\nExtension error:\r\nCould not import extension contributors (exception: No module named 'git')\r\ngio: file:///home/roald/Documents/Projects/pandas/doc/build/html/generated_single/pandas.DataFrame.max.html: Error when getting information for file “/home/roald/Documents/Projects/pandas/doc/build/html/generated_single/pandas.DataFrame.max.html”: No such file or directory\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442256758",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-442256758",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 442256758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI1Njc1OA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T23:22:31Z",
    "updated_at": "2018-11-27T23:22:31Z",
    "author_association": "MEMBER",
    "body": "`conda env update` should fix it, there is a new library required in `requiremets.yml`, I think it's named `gitpy`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442257001",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-442257001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 442257001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjI1NzAwMQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-27T23:23:27Z",
    "updated_at": "2018-11-27T23:23:27Z",
    "author_association": "MEMBER",
    "body": "I think reusing the examples for `min` and `max` is better"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442565539",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-442565539",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 442565539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjU2NTUzOQ==",
    "user": {
      "login": "Roald87",
      "id": 20192767,
      "node_id": "MDQ6VXNlcjIwMTkyNzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/20192767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Roald87",
      "html_url": "https://github.com/Roald87",
      "followers_url": "https://api.github.com/users/Roald87/followers",
      "following_url": "https://api.github.com/users/Roald87/following{/other_user}",
      "gists_url": "https://api.github.com/users/Roald87/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Roald87/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Roald87/subscriptions",
      "organizations_url": "https://api.github.com/users/Roald87/orgs",
      "repos_url": "https://api.github.com/users/Roald87/repos",
      "events_url": "https://api.github.com/users/Roald87/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Roald87/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-28T19:03:18Z",
    "updated_at": "2018-11-28T19:03:18Z",
    "author_association": "NONE",
    "body": "@datapythonista OK done.\r\n\r\nIt was `GitPython` which was missing. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445570193",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22554#issuecomment-445570193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22554",
    "id": 445570193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTU3MDE5Mw==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-09T20:46:37Z",
    "updated_at": "2018-12-09T20:46:37Z",
    "author_association": "MEMBER",
    "body": "If I understood it correctly, we're finally not merging this, as it's superseded by #23338. Feel free to reopen if I misunderstood."
  }
]
