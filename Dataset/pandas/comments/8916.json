[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64895906",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-64895906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 64895906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk1OTA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-28T13:51:55Z",
    "updated_at": "2014-11-28T13:51:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "So `_typ` is needed if you need type comparisons (isinstance) in cython when you can't import things (well you can, but you don' generally want to), e.g. TimedeltaIndex and such.\n\nHowever you eliminated the need for much of that, so +1 (though I think you went too far and now accept clear wrong types, e.g. dti + dti which must raise a TypeError)\n\nNeed to check return types on a matrix of operations, they should all be pandas types (Timestamp/Timedelta/TimedeltaIndex/DateIndex), when operated with pandas types (e.g. a np.datetime64 + np.timedelta64) obviously will yield a np.datetime64\n\nSo need to wrap all return ops (which is a pass thru if its the right type already). The only wrinkle is that you need to determine array/scalars (I think simple enough to detect if one of the operands is an array-like (e.g. has a dtype), then you return DatetimeIndex/TimedeltaIndex).\n\nI think this needs a systematic test (their are some in tseries/test_base, so can prob just add on\nAnd fully-compare e.g. don't just compare the values, but test the types as well\n\n```\nts = Timestamp('20130101')\nIn [5]: ts-pd.to_datetime(['1999-12-31']).values\nOut[5]: array([86400000000000], dtype='timedelta64[ns]')\n```\n\nThis must raise a TypeError. It is a clear operation that should simply not be allowed. This is the point of a TypeError. \n\n```\nIn [6]: pd.date_range('20130101',periods=3)+ts                                 \nNotImplementedError: \n```\n\nFurthermore Series / Timedelta / Timestamp ops need to be consistent with these. So need to matrix tests these (these raise the appropriate TypeErrors). I am still big -1 on ALWAYS raising NotImplementedError. This is just not very useful. So i'd like you to enumerate all the cases so they can be discussed (e.g. td + tdi, td - tdi, ts + tdi)....etc. Indicate where you would put NotImplementedError and TypeError, etc.\n\nWe still have the side issue of:\n\ndti+dti, dti-dti 'work' but are set operations. need to think about this again.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64896864",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-64896864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 64896864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODk2ODY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-28T14:02:53Z",
    "updated_at": "2014-11-28T14:02:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "numpy does this and its completely useless. It should at the very least raise an error. I think this is just broken.\n\n```\nIn [12]: pd.date_range('20130101',periods=3).values+ts.value\nOut[12]: \narray(['2056-01-01T19:00:00.000000000-0500',\n       '2056-01-02T19:00:00.000000000-0500',\n       '2056-01-03T19:00:00.000000000-0500'], dtype='datetime64[ns]')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64914417",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-64914417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 64914417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTE0NDE3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-28T17:11:41Z",
    "updated_at": "2014-11-28T17:11:41Z",
    "author_association": "MEMBER",
    "body": "Travis was being very slow last night so I posted this PR anyways, but it looks like I still have a few fix-ups to do.\n\nMy intention was not to break any existing behavior with this change -- may need some more tests to ensure that. I don't think I changed dti + dti or changed the code pathways for any (1d, 1d) operations. I was intentionally sticking to only stuff involving a scalar.\n\nI actually don't think we should ever raise `NotImplementedError` in arithmetic or comparison operations (that is old code, maybe the path was not exposed before). `NotImplemented` is totally distinct though, and manifests itself to users via a helpful `TypeError`.\n\nAgreed RE the numpy bug. You'll notice I added explicit TypeErrors in `tslib.pyx` to avoid those.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65345930",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-65345930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 65345930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzQ1OTMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T02:55:11Z",
    "updated_at": "2014-12-03T02:55:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "when you have a chance can you rebase\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65371551",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-65371551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 65371551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzcxNTUx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T08:36:49Z",
    "updated_at": "2014-12-03T08:36:49Z",
    "author_association": "MEMBER",
    "body": "This change turns out to be much trickier to get right than I initially expected, due to a combination of factors:\n1. `Timestamp` optionally supports timezones and offests, which cannot be represented in datetime64 objects.\n2. Thus, we need to support (Timestamp, array of Timestamp) operations (e.g., for tz aware Timestamps or for comparisons to `NaT`). The easiest way to do this is to let numpy ndararys do their automatic broadcasting thing.\n3. OTOH, to do vectorized operations, setting a higher array priority is necessary (this conflicts with automatic broadcasting).\n4. np.datetime64[ns] will silently convert to int64 under some conditions due to the numpy bugs (sigh), breaking some of the obvious solutions.\n5. DataFrame operations with dates are already sort of broken, but I would like to avoid making them worse\n\nSo I'm not sure I'll be able to get this ready in time for 0.15.2 this weekend.\n\nAll this makes me really look forward to switching to dynd for handling datetime arrays, instead of np.datetime64. datetime64 can't be relied on as much more than a boxed array of integers (actually, sometime I wonder if that would have been an easier choice...).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65391481",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-65391481",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 65391481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzkxNDgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T11:05:50Z",
    "updated_at": "2014-12-03T11:05:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer I don't think we'll be switching for datetime to dynd anytime soon. These these are not implemented their either. Theoretically yes we will be able to as the broadcasting will be correct with tz's, but practically the implementer (pandas here needs to actually be aware) and potentially do things. So yes dynd could help with this. But this is very close to being correct now w/o using much numpy and avoiding the pitfalls.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65516454",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-65516454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 65516454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTE2NDU0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T00:12:28Z",
    "updated_at": "2014-12-04T00:12:28Z",
    "author_association": "MEMBER",
    "body": "@jreback  I am going to make a separate PR to get some of the easy changes from here into 0.15.2 (e.g., adding the `to_datetime64` method). You already fixed Timestamp - Timestamp in #8981.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65517347",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-65517347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 65517347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NTE3MzQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T00:21:28Z",
    "updated_at": "2014-12-04T00:21:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "sounds good.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66378414",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8916#issuecomment-66378414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8916",
    "id": 66378414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Mzc4NDE0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-09T23:26:55Z",
    "updated_at": "2014-12-09T23:26:55Z",
    "author_association": "MEMBER",
    "body": "Closing -- this needs a reboot/refactor\n"
  }
]
