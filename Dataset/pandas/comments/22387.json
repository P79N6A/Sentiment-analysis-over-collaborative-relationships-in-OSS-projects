[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413616713",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413616713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 413616713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzYxNjcxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T17:06:42Z",
    "updated_at": "2018-08-16T17:06:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "i think it’s worth adding to the interface itself"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413654046",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413654046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 413654046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY1NDA0Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T19:12:16Z",
    "updated_at": "2018-08-16T19:12:16Z",
    "author_association": "MEMBER",
    "body": "Wouldn't it be possible to do this without take, but with slicing?\r\n\r\nSomething like (very crude implementation for positive shifts):\r\n\r\n```\r\ndef shift(a, p):\r\n    a_sliced = a[:-p]\r\n    a_NA = a._from_sequence([a.dtype.na_value]*p, dtype=a.dtype)\r\n    return a._concat_same_type([a_NA, a_sliced])\r\n```\r\n\r\nSpeed wise I would expect this to be very similar to the current `Categorical.shift` (which only uses the `np.roll` to basically do this instead of manually concatenating both parts)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413657411",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413657411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 413657411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY1NzQxMQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-08-16T19:25:03Z",
    "updated_at": "2018-08-22T12:32:44Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22387?src=pr&el=h1) Report\n> Merging [#22387](https://codecov.io/gh/pandas-dev/pandas/pull/22387?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/68273a7a8b05049b311ea207f78e6d6f30c6eaf5?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `91.66%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22387/graphs/tree.svg?width=650&src=pr&token=eZ4WkYLtcO&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/22387?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #22387      +/-   ##\n==========================================\n- Coverage   92.05%   92.05%   -0.01%     \n==========================================\n  Files         169      169              \n  Lines       50733    50743      +10     \n==========================================\n+ Hits        46702    46711       +9     \n- Misses       4031     4032       +1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.46% <91.66%> (-0.01%)` | :arrow_down: |\n| #single | `42.24% <16.66%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22387?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/internals/blocks.py](https://codecov.io/gh/pandas-dev/pandas/pull/22387/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2Jsb2Nrcy5weQ==) | `93.84% <100%> (ø)` | :arrow_up: |\n| [pandas/core/arrays/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/22387/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2Jhc2UucHk=) | `88% <90%> (+0.14%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22387?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22387?src=pr&el=footer). Last update [68273a7...c5b556d](https://codecov.io/gh/pandas-dev/pandas/pull/22387?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413658486",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413658486",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 413658486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY1ODQ4Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T19:28:58Z",
    "updated_at": "2018-08-16T19:28:58Z",
    "author_association": "MEMBER",
    "body": "> Speed wise I would expect this to be very similar to the current Categorical.shift\r\n\r\nCategorical was apparently a very bad example as there it is like 5x slower than the existing `Categorical.shift`, but that is more because generating the missing values (`_from_sequence)` and `_concat_same_type` are very slow for Categorical (and could certainly be optimized), for IntegerArray it was as fast as I expected.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413660902",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413660902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 413660902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzY2MDkwMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T19:38:18Z",
    "updated_at": "2018-08-16T19:38:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "That seems preferable to me, as it avoids allocating the `indexer` array."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413840086",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413840086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 413840086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg0MDA4Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-17T11:44:21Z",
    "updated_at": "2018-08-17T11:44:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just as a note, I couldn't quite use this `shift` implementation for `SparseArray`.\r\n\r\nWhen `ExtensionArray.shift`creates the empty SparseArray, it ends up with NaN  for the fill value. When `shift`ing a SparseArray with, say, 0 as the fill value, you end up concatenating the empty (with fill of NaN) and the shifted (with a fill of 0) and that ends up with a fill of NaN.\r\n\r\nThe root issue is that SparseArray stores fill_value on the array, rather than on the dtype. I haven't looked into whether it *should* go on the dtype or not, it's not clear to me.\r\n\r\nRegardless, I think this is good to go, if we're happy with the slice and concat approach."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413840595",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413840595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 413840595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg0MDU5NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-17T11:47:17Z",
    "updated_at": "2018-08-17T11:47:17Z",
    "author_association": "MEMBER",
    "body": "From that it seems to makes sense to have this on the dtype then (but not that familiar with the rest of the code)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413841455",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413841455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 413841455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzg0MTQ1NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-17T11:51:37Z",
    "updated_at": "2018-08-17T11:51:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Indeed... On the other hand, it complicates things like equality a bit...\r\n\r\nI'll push it onto the dtype and see what breaks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414278966",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414278966",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414278966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDI3ODk2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T11:04:05Z",
    "updated_at": "2018-08-20T11:04:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any objections to merging?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414283985",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414283985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414283985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDI4Mzk4NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T11:27:06Z",
    "updated_at": "2018-08-20T11:27:16Z",
    "author_association": "MEMBER",
    "body": "> shouldn't we be able to change the impl of interval / categorical shift for this?\r\n\r\nAs I mentioned above (https://github.com/pandas-dev/pandas/pull/22387#issuecomment-413658486), if we implement Categorical.shift as is done here (eg by simply inheriting this base method), it gets much slower because the creating of the NaNs and concatting same typed-categoricals is very slow (at least slower as it should be). \r\n`IntervalArray` did not yet have any shift implementation. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414300090",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414300090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414300090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDMwMDA5MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T12:30:13Z",
    "updated_at": "2018-08-20T12:30:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems that `IntervalArray` may need some updates,\r\n\r\n```python\r\nIn [22]: idx = IntervalArray.from_breaks(pd.date_range('2017', periods=10))\r\n\r\nIn [23]: idx.shift()\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-23-1b2c2192e1e6> in <module>()\r\n----> 1 idx.shift()\r\n\r\n~/sandbox/pandas/pandas/core/arrays/base.py in shift(self, periods)\r\n    422             return self.copy()\r\n    423         empty = self._from_sequence([self.dtype.na_value] * abs(periods),\r\n--> 424                                     dtype=self.dtype)\r\n    425         if periods > 0:\r\n    426             a = empty\r\n\r\n~/sandbox/pandas/pandas/core/arrays/interval.py in _from_sequence(cls, scalars, dtype, copy)\r\n    193     @classmethod\r\n    194     def _from_sequence(cls, scalars, dtype=None, copy=False):\r\n--> 195         return cls(scalars, dtype=dtype, copy=copy)\r\n    196\r\n    197     @classmethod\r\n\r\n~/sandbox/pandas/pandas/core/arrays/interval.py in __new__(cls, data, closed, dtype, copy, fastpath, verify_integrity)\r\n    138\r\n    139         return cls._simple_new(left, right, closed, copy=copy, dtype=dtype,\r\n--> 140                                verify_integrity=verify_integrity)\r\n    141\r\n    142     @classmethod\r\n\r\n~/sandbox/pandas/pandas/core/arrays/interval.py in _simple_new(cls, left, right, closed, copy, dtype, verify_integrity)\r\n    156                 raise TypeError(msg.format(dtype=dtype))\r\n    157             elif dtype.subtype is not None:\r\n--> 158                 left = left.astype(dtype.subtype)\r\n    159                 right = right.astype(dtype.subtype)\r\n    160\r\n\r\n~/sandbox/pandas/pandas/core/indexes/numeric.py in astype(self, dtype, copy)\r\n    313             msg = ('Cannot convert Float64Index to dtype {dtype}; integer '\r\n    314                    'values are required for conversion').format(dtype=dtype)\r\n--> 315             raise TypeError(msg)\r\n    316         elif is_integer_dtype(dtype) and self.hasnans:\r\n    317             # GH 13149\r\n\r\nTypeError: Cannot convert Float64Index to dtype datetime64[ns]; integer values are required for conversion\r\n\r\nIn [24]: idx = IntervalArray.from_breaks(range(10))\r\n\r\nIn [25]: idx.shift()\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-25-1b2c2192e1e6> in <module>()\r\n----> 1 idx.shift()\r\n\r\n~/sandbox/pandas/pandas/core/arrays/base.py in shift(self, periods)\r\n    422             return self.copy()\r\n    423         empty = self._from_sequence([self.dtype.na_value] * abs(periods),\r\n--> 424                                     dtype=self.dtype)\r\n    425         if periods > 0:\r\n    426             a = empty\r\n\r\n~/sandbox/pandas/pandas/core/arrays/interval.py in _from_sequence(cls, scalars, dtype, copy)\r\n    193     @classmethod\r\n    194     def _from_sequence(cls, scalars, dtype=None, copy=False):\r\n--> 195         return cls(scalars, dtype=dtype, copy=copy)\r\n    196\r\n    197     @classmethod\r\n\r\n~/sandbox/pandas/pandas/core/arrays/interval.py in __new__(cls, data, closed, dtype, copy, fastpath, verify_integrity)\r\n    138\r\n    139         return cls._simple_new(left, right, closed, copy=copy, dtype=dtype,\r\n--> 140                                verify_integrity=verify_integrity)\r\n    141\r\n    142     @classmethod\r\n\r\n~/sandbox/pandas/pandas/core/arrays/interval.py in _simple_new(cls, left, right, closed, copy, dtype, verify_integrity)\r\n    156                 raise TypeError(msg.format(dtype=dtype))\r\n    157             elif dtype.subtype is not None:\r\n--> 158                 left = left.astype(dtype.subtype)\r\n    159                 right = right.astype(dtype.subtype)\r\n    160\r\n\r\n~/sandbox/pandas/pandas/core/indexes/numeric.py in astype(self, dtype, copy)\r\n    316         elif is_integer_dtype(dtype) and self.hasnans:\r\n    317             # GH 13149\r\n--> 318             raise ValueError('Cannot convert NA to integer')\r\n    319         return super(Float64Index, self).astype(dtype, copy=copy)\r\n    320\r\n\r\nValueError: Cannot convert NA to integer\r\n```\r\n\r\nThe basic issue is \r\n\r\n```\r\n    423         empty = self._from_sequence([self.dtype.na_value] * abs(periods),\r\n--> 424                                     dtype=self.dtype)\r\n ```\r\n\r\nThe container (ndarray[self.dtype]) can't actually hold `self.dtype.na_value` (nan).\r\n\r\nDoes that change our opinion on this implementation?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414302142",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414302142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414302142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDMwMjE0Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T12:37:59Z",
    "updated_at": "2018-08-20T12:37:59Z",
    "author_association": "MEMBER",
    "body": "I think that is rather a bug in IntervalArray? (or maybe better a current limitation) \r\n\r\nAnyway, if the point is that it (currently) cannot hold NaNs, it can also not implement `shift`, as it requires NaNs (so don't know if that changes anything about the shift implementation?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414302795",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414302795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414302795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDMwMjc5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T12:40:33Z",
    "updated_at": "2018-08-20T12:40:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, it can implement `.shift`, as long as it's allowed to change dtypes (upcast from int to float). The current implementation assumes / requires that the dtype not change."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414303333",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414303333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414303333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDMwMzMzMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T12:42:40Z",
    "updated_at": "2018-08-20T12:42:40Z",
    "author_association": "MEMBER",
    "body": "Basically, the problem is that for IntervalArray, the data is stored in `left` and `right` arrays, and so it depends on the dtype of those arrays whether IntervalArray can have NaNs or not? \r\nSo eg float and datetime64 can hold missing values, ints not.\r\n\r\nFor the datetime error above, that is actually solvable with the current model, because if the data is not all-NaN it works:\r\n\r\n```\r\nIn [75]: IntervalArray([pd.Interval(pd.Timestamp('2017-01-01'), pd.Timestamp('2017-01-02'))], dtype='interval[datetime64[ns]]')\r\nOut[75]: \r\nIntervalArray([(2017-01-01, 2017-01-02]],\r\n              closed='right',\r\n              dtype='interval[datetime64[ns]]')\r\n\r\nIn [76]: IntervalArray([pd.Interval(pd.Timestamp('2017-01-01'), pd.Timestamp('2017-01-02')), np.nan], dtype='interval[datetime64[ns]]')\r\nOut[76]: \r\nIntervalArray([(2017-01-01, 2017-01-02], nan],\r\n              closed='right',\r\n              dtype='interval[datetime64[ns]]')\r\n\r\nIn [78]: IntervalArray([np.nan], dtype='interval[datetime64[ns]]').left\r\n...\r\nTypeError: Cannot convert Float64Index to dtype datetime64[ns]; integer values are required for conversion\r\n```\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414303850",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414303850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414303850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDMwMzg1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T12:44:44Z",
    "updated_at": "2018-08-20T12:44:44Z",
    "author_association": "MEMBER",
    "body": "> Well, it can implement .shift, as long as it's allowed to change dtypes\r\n\r\nAh, yes, the same happens with `Series([int]).shift()` of course.\r\n\r\nI think ideally, we should improve the missing values handling on the IntervalArray level (since it's a composite array, we have the ability to do it properly, not requiring such upcasts), but that's certainly out of scope for this PR :-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414305188",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414305188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414305188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDMwNTE4OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T12:50:05Z",
    "updated_at": "2018-08-20T12:50:05Z",
    "author_association": "MEMBER",
    "body": "So using the `take` implementation, that does already do the upcasting for Interval, so the `shift` would then work for intervals. \r\n\r\nI don't really care much to whether to switch back to that or leave the implementation now as is (with the consequence shift doesn't work for Interval; although given the `take` precedent, upcasting the dtype seems somewhat consistent. \r\nBut I do think we should discuss the missing value handling for IntervalArray independently from this (eg using a mask instead).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414307623",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-414307623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 414307623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDMwNzYyMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T12:58:55Z",
    "updated_at": "2018-08-20T12:58:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think ideally, we should improve the missing values handling on the IntervalArray level\r\n\r\nThat's my preference. Opened https://github.com/pandas-dev/pandas/issues/22428 for that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415013138",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-415013138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 415013138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTAxMzEzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T12:22:01Z",
    "updated_at": "2018-08-22T12:22:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "CI is passing now (last one was a random failure)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415370902",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22387#issuecomment-415370902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22387",
    "id": 415370902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTM3MDkwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T10:38:34Z",
    "updated_at": "2018-08-23T10:38:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @TomAugspurger "
  }
]
