[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294316892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294316892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 294316892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMxNjg5Mg==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T20:45:26Z",
    "updated_at": "2017-04-15T20:45:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "We might also want to include column order for storage formats that don't maintain column order.  There are also complexities around multi-index and hierarchical columns (though I'm not sure how far we want to go here).  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294316972",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294316972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 294316972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMxNjk3Mg==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T20:47:03Z",
    "updated_at": "2017-04-15T20:47:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can imagine a function living in Pandas that emits a JSON-encodable data structure that contains all relevant metadata for a Pandas dataframe.  I'm not sure if this is in line with what you had in mind though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294317117",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294317117",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 294317117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMxNzExNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T20:50:09Z",
    "updated_at": "2017-04-15T20:50:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas-docs.github.io/pandas-docs-travis/io.html#io-table-schema\r\n\r\nis going to be in 0.20.0 fyi"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294317127",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294317127",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 294317127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMxNzEyNw==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T20:50:18Z",
    "updated_at": "2017-04-15T20:51:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "```python\r\n>>> df.metadata()\r\n{'index': 'b',\r\n 'columns': ['a', 'b', 'c'],\r\n 'dtypes': {'a': 'f8', 'b': 'M8[ns]+10:00', 'c': 'category'}}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294317226",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294317226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 294317226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMxNzIyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T20:52:37Z",
    "updated_at": "2017-04-15T20:52:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "we could add an option to have a more detailed version if need be (e.g. more exact types like int8)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294317933",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294317933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 294317933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMxNzkzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T21:08:17Z",
    "updated_at": "2017-04-15T21:08:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\nIn [7]: from pandas.io.json import build_table_schema\r\n\r\nIn [5]: df = pd.DataFrame({'A': [1, 2, 3], 'B': 'foo', 'C': pd.date_range('20130101', periods=3), 'D': pd.Series(list('abc')).astype('category')})\r\n\r\nIn [6]: build_table_schema(df)\r\nOut[6]: \r\n{'fields': [{'name': 'index', 'type': 'integer'},\r\n  {'name': 'A', 'type': 'integer'},\r\n  {'name': 'B', 'type': 'string'},\r\n  {'name': 'C', 'type': 'datetime'},\r\n  {'constraints': {'enum': ['a', 'b', 'c']},\r\n   'name': 'D',\r\n   'ordered': False,\r\n   'type': 'any'}],\r\n 'pandas_version': '0.20.0',\r\n 'primaryKey': ['index']}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294318099",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294318099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 294318099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMxODA5OQ==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T21:12:14Z",
    "updated_at": "2017-04-15T21:12:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "For some formats we would want to add in the timezone.\n\nOn Sat, Apr 15, 2017 at 5:08 PM, Jeff Reback <notifications@github.com>\nwrote:\n\n> In [7]: from pandas.io.json import build_table_schema\n>\n> In [5]: df = pd.DataFrame({'A': [1, 2, 3], 'B': 'foo', 'C': pd.date_range('20130101', periods=3), 'D': pd.Series(list('abc')).astype('category')})\n>\n> In [6]: build_table_schema(df)\n> Out[6]:\n> {'fields': [{'name': 'index', 'type': 'integer'},\n>   {'name': 'A', 'type': 'integer'},\n>   {'name': 'B', 'type': 'string'},\n>   {'name': 'C', 'type': 'datetime'},\n>   {'constraints': {'enum': ['a', 'b', 'c']},\n>    'name': 'D',\n>    'ordered': False,\n>    'type': 'any'}],\n>  'pandas_version': '0.20.0',\n>  'primaryKey': ['index']}\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294317933>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AASszGNniTW4S2v8cd61MjAXprX8lVJ6ks5rwTHKgaJpZM4M-dI9>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294318459",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-294318459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 294318459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMxODQ1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-15T21:19:50Z",
    "updated_at": "2017-04-15T21:20:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "`build_table_schema` includes a `tz` field if it's a timezone-aware column.\r\n\r\nThere will be points where table-schema's representation is too limiting, or not quite right. For example, `build_table_schema` uses the `primaryKey` field to indicate the index, but only if the index is unique as per the spec (so we shouldn't be afraid to define our own)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298428058",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-298428058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 298428058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODQyODA1OA==",
    "user": {
      "login": "martindurant",
      "id": 6042212,
      "node_id": "MDQ6VXNlcjYwNDIyMTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6042212?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martindurant",
      "html_url": "https://github.com/martindurant",
      "followers_url": "https://api.github.com/users/martindurant/followers",
      "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
      "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
      "organizations_url": "https://api.github.com/users/martindurant/orgs",
      "repos_url": "https://api.github.com/users/martindurant/repos",
      "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martindurant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-01T20:46:26Z",
    "updated_at": "2017-05-01T20:46:26Z",
    "author_association": "NONE",
    "body": "I think it would be very useful to store not only that a column is categorical, but ht dtype of the codes array, so that we can efficiently assign on load. When parquet is written from dask, the partitions can have different dtypes per row-group for a given categorical column. Where should this be stored, or should we instead just keep the largest dtype that stores everything?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299518018",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-299518018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 299518018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTUxODAxOA==",
    "user": {
      "login": "martindurant",
      "id": 6042212,
      "node_id": "MDQ6VXNlcjYwNDIyMTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6042212?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martindurant",
      "html_url": "https://github.com/martindurant",
      "followers_url": "https://api.github.com/users/martindurant/followers",
      "following_url": "https://api.github.com/users/martindurant/following{/other_user}",
      "gists_url": "https://api.github.com/users/martindurant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martindurant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martindurant/subscriptions",
      "organizations_url": "https://api.github.com/users/martindurant/orgs",
      "repos_url": "https://api.github.com/users/martindurant/repos",
      "events_url": "https://api.github.com/users/martindurant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martindurant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-05T16:54:22Z",
    "updated_at": "2017-05-05T16:54:22Z",
    "author_association": "NONE",
    "body": "I would probably be better off proposing a PR for discussion, but here are a few thoughts first. From the comments here, there are some various ideas of what a pandas schema is and why we need it. Let me give the case from the point of view of loading a dataframe from parquet files, which is only one possible binary format of interest.\r\n\r\nThe parquet format has its own idea of types, both at primitive storage level and derived richer final types. For example, in parquet (and I suspect most binary formats) one can specify that a column is to be interpreted as uint16, say, and the implementation can take care of how to actually store that. For this reason, saving metadata that says that a column is 'integer', 'float' or 'string' is not particularly useful. Knowing the specific type is important if pre-allocating memory to fill from the binary data, rather than doing some concat operations after reading.\r\n\r\nPandas-specific things that are not normally captured in binary formats are: the columns to use for the index(es), categorical encoding and perhaps timezones.\r\n- the index information could just be a list of column names; the type rules for indexes are not quite the same as for columns, though, and I'm not sure if any further information might be required. Parquet has a sorting column spec, but this is not the same thing. If there is no index column, use a range, as normal. \r\n- storing the category labels in the metadata seems to me like a very bad idea, as it could be very large and expensive. Currently fastparquet stores which columns are categorical and the number of labels as `{'col1': 5, 'col5': 1093}` where the codes array assigned for col1 would be int8 and for col2 int16 (could have stored the actual types). Labeling a column as categorical is not a statement of how the data is stored, but of how the data was before it was written. There is added complexity here, because the labels present in each partition are not necessarily the same, especially if there are appends.\r\n- timezones (and times in general) may not be stored in some formats: parquet assumes UTC, although some implementations already store timezones in the metadata. The accuracy stored also may not be adequate for pandas' ns."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/300284878",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-300284878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 300284878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDI4NDg3OA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-09T20:03:22Z",
    "updated_at": "2017-05-09T20:03:22Z",
    "author_association": "MEMBER",
    "body": "If no one beats me to it, I can take a crack at a PR for this (into the pandas documentation) this week and we can discuss there? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/300348653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16010#issuecomment-300348653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16010",
    "id": 300348653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDM0ODY1Mw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-10T01:34:15Z",
    "updated_at": "2017-05-10T01:34:15Z",
    "author_association": "MEMBER",
    "body": "Let's review in https://github.com/pandas-dev/pandas/pull/16315"
  }
]
