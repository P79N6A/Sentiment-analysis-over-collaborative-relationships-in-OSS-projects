[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21700155",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-21700155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 21700155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzAwMTU1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-29T05:30:30Z",
    "updated_at": "2013-07-29T05:30:30Z",
    "author_association": "MEMBER",
    "body": "@y-p i can take this if you want\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21700273",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-21700273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 21700273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzAwMjcz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-29T05:36:17Z",
    "updated_at": "2013-07-29T05:36:17Z",
    "author_association": "NONE",
    "body": "please.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78135543",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-78135543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 78135543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTM1NTQz",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T20:01:05Z",
    "updated_at": "2015-03-10T20:06:35Z",
    "author_association": "NONE",
    "body": "`pprint_thing` is REALLY slow when used with numpy arrays.  For example, if I have a DataFrame with 100 100x100 masked arrays, it takes about 10 seconds to print it, which is really irritating.\n\n``` python\nsome_data = np.ma.array(np.random.rand(100,100),mask=np.random.rand(100,100)>0.2)\ndf = pd.DataFrame(dict(example=[some_data]*100))\nprint df \n```\n\nIs there some scope for calling `str(ndarray)` somewhere in `pprint_thing`, and perhaps simply doing `.replace('\\n',',')`?  Obviously, it would need to work within the recursive framework of `pprint_thing`, but wouldn't implement any special recursion itself (i.e. a tuple of ndarrays should be iterated over by `pprint_thing` and have their numpy `__str__` methods invoked).\n\nI'm still pretty new to pandas, so maybe I've missed something.  \n\n(For reference, I'm doing neuroscience: I have two or three \"levels\" of analysis, the top most of which, ie. the most meta-level, I would like to be doing in pandas, but I would very much like to store some of the lower level stuff in a DataFrame alongside the meta-stuff.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78164491",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-78164491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 78164491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTY0NDkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T22:41:59Z",
    "updated_at": "2015-03-10T22:41:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "What you are doing is extremely inefficient. Pandas (and numpy) are generally best used to hold a single scalar in a cell, which can be represented by a base type (e.g. a float).\n\nTry this\n\n```\nIn [9]: df = DataFrame(np.random.randn(100,100))\n\nIn [10]: df = df.where(df>0.2)\n```\n\nIf you need multiple levels, simply add a multi-index.\n\nChanging a printing routine to handle this use case is not likely to happen as it would increase the code complexity (over which it already is pretty crazy)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78168708",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-78168708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 78168708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTY4NzA4",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T23:11:22Z",
    "updated_at": "2015-03-10T23:11:22Z",
    "author_association": "NONE",
    "body": "I think I explained that rather poorly.  \n\nImagine my 100 arrays is a list of images of random shapes, with each image having a multiindex tuple of (person, day, hour). I  compute a bunch of metrics for each image and put the results as columns in my dataframe, but also putting the images themselves as a column.  I can then do my meta analysis on both groups of the raw images and/or on the scalar-valued columns...I need to be able to do both. I have already submitted a pull request which makes it easyish to render numpy arrays as images in base64 data within html img tags, but the default display mechanism is still this slow pprint call.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78169240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-78169240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 78169240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTY5MjQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T23:15:50Z",
    "updated_at": "2015-03-10T23:15:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "well if you really really want to do this. I would simply wrap an object around the array and give it a custom printing method. Then you can do whatever you want. Pandas tries to do the right thing by printing nested things, but in this case you are putting something which pandas _can_ render there. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78170548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-78170548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 78170548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTcwNTQ4",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T23:25:28Z",
    "updated_at": "2015-03-10T23:25:28Z",
    "author_association": "NONE",
    "body": "yes, that had occurred to me, but it's not as convenient and Id hoped that this kind of blob-like usage was mainstream enough to merit a line or two in the right place! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78171281",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-78171281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 78171281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTcxMjgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T23:29:13Z",
    "updated_at": "2015-03-10T23:29:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is not the right way to harness the power of pandas \n\nyou are almost certainly better off keeping your images as numpy arrays or whatever (or frames) and simply having a references (eg a string to them in a particular column) \n\nor use the object soln \n\nyou are trying to shoohorn s frame onto what you need\nbut it's really suited for that \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78174421",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-78174421",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 78174421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTc0NDIx",
    "user": {
      "login": "d1manson",
      "id": 4244876,
      "node_id": "MDQ6VXNlcjQyNDQ4NzY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4244876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/d1manson",
      "html_url": "https://github.com/d1manson",
      "followers_url": "https://api.github.com/users/d1manson/followers",
      "following_url": "https://api.github.com/users/d1manson/following{/other_user}",
      "gists_url": "https://api.github.com/users/d1manson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/d1manson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/d1manson/subscriptions",
      "organizations_url": "https://api.github.com/users/d1manson/orgs",
      "repos_url": "https://api.github.com/users/d1manson/repos",
      "events_url": "https://api.github.com/users/d1manson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/d1manson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-10T23:56:10Z",
    "updated_at": "2015-03-10T23:56:10Z",
    "author_association": "NONE",
    "body": "Shoohorning maybe, but the result is actually quite good - I'd recommend it to anyone else doing a similar kind of analysis.\nAnd, strictly speaking I think what is being stored in the DataFrame _is_ a reference - it's a reference to the ndarray instance, right?  It's not like the DataFrame has the ndarray's data stored contiguously within it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403159978",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3426#issuecomment-403159978",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3426",
    "id": 403159978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1OTk3OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:16:11Z",
    "updated_at": "2018-07-06T22:16:11Z",
    "author_association": "MEMBER",
    "body": "Closed as ambiguous"
  }
]
