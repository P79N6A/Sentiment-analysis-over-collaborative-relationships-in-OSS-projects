[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54255917",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-54255917",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 54255917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjU1OTE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-03T06:10:06Z",
    "updated_at": "2014-09-03T06:10:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls show examples of the use case for this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54257755",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-54257755",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 54257755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjU3NzU1",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-03T06:40:08Z",
    "updated_at": "2014-09-03T06:40:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "# Rationale.\n\nWhen using dataframe of mixed type, ie. containing numeric values, string, categorical, etc, the current behaviour of describe() is a bit rough, as its only summarize over numerical columns only, or if none exists, over categorical columns only. With this change, describe() gets more flexible in its return form, which considerably smoothed my interactive data-analysis sessions.\n\nFrom the doc\n\n> ```\n>   return_type : string, default 'auto'\n>        The result format. Most relevant for mixed-types dataframes.\n>        One of 'numeric_only', 'categorical_only', 'both', 'same', 'auto'\n>        'auto' returns the 'numeric_only' description, except on fully\n>        categorical frames, where it returns 'categorical_only'.\n>        'both' returns the pair, 'same' returns a frame with same columns\n>        as original dataframe\n> ```\n\n# Example\n\nAlthough real-life scenario are more convincing, here is small examples\n\n``` python\nIn [1]: import numpy as np\nIn [2]: import pandas as pd\n\nIn [3]: df = pd.DataFrame({'colA': ['foo', 'foo', 'bar'] * 10,\n   ...:                         'colB': ['a', 'b', 'c', 'd', 'e'] * 6,\n   ...:                         'colC': np.arange(30), 'colD' : np.ones(30)})\n\nIn [4]: df.head()\nOut[4]: \n  colA colB  colC  colD\n0  foo    a     0     1\n1  foo    b     1     1\n2  bar    c     2     1\n3  foo    d     3     1\n4  foo    e     4     1\n\n# old behaviour pick columns based on the types of the dataframe. Not so nice.\nIn [6]: df.describe()\nOut[6]: \n            colC  colD\ncount  30.000000    30\nmean   14.500000     1\nstd     8.803408     0\nmin     0.000000     1\n25%     7.250000     1\n50%    14.500000     1\n75%    21.750000     1\nmax    29.000000     1\n\n# using the new option, we can explictely asks to describe both types\nIn [8]: df.describe(return_type=\"categorical_only\")\nOut[8]: \n       colA colB\ncount    30   30\nunique    2    5\ntop     foo    d\nfreq     20    6\n\nIn [9]: df.describe(return_type=\"numeric_only\")\nOut[9]: \n            colC  colD\ncount  30.000000    30\nmean   14.500000     1\nstd     8.803408     0\nmin     0.000000     1\n25%     7.250000     1\n50%    14.500000     1\n75%    21.750000     1\nmax    29.000000     1\n\n# using option \"same\" returns a df with similar-columns\nIn [11]: df.describe(return_type=\"same\") \nOut[11]: \n       colA colB      colC colD\ncount    30   30        30   30\nunique    2    5       NaN  NaN\ntop     foo    d       NaN  NaN\nfreq     20    6       NaN  NaN\nmean    NaN  NaN      14.5    1\nstd     NaN  NaN  8.803408    0\nmin     NaN  NaN         0    1\n25%     NaN  NaN      7.25    1\n50%     NaN  NaN      14.5    1\n75%     NaN  NaN     21.75    1\nmax     NaN  NaN        29    1\n\n# one of my favorite pattern, using groupby:\nIn [13]: out = df.groupby(\"colA\").describe(return_type=\"same\")\n\nIn [14]: out.unstack(0)\n       colB           colC           colD     \ncolA    bar  foo       bar       foo  bar  foo\ncount    10   20        10        20   10   20\nunique    5    5       NaN       NaN  NaN  NaN\ntop       d    d       NaN       NaN  NaN  NaN\nfreq      2    4       NaN       NaN  NaN  NaN\nmean    NaN  NaN      15.5        14    1    1\nstd     NaN  NaN  9.082951  8.855566    0    0\nmin     NaN  NaN         2         0    1    1\n25%     NaN  NaN      8.75      6.75    1    1\n50%     NaN  NaN      15.5        14    1    1\n75%     NaN  NaN     22.25     21.25    1    1\nmax     NaN  NaN        29        28    1    1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54351103",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-54351103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 54351103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MzUxMTAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-03T19:19:02Z",
    "updated_at": "2014-09-03T19:19:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is their a reason you think that the above approach is better than:\n\n```\nIn [8]: df.select_dtypes(['object']).describe()\nOut[8]: \n       colA colB\ncount    30   30\nunique    2    5\ntop     foo    d\nfreq     20    6\n\nIn [9]: df.select_dtypes(['number']).describe()\nOut[9]: \n            colC  colD\ncount  30.000000    30\nmean   14.500000     1\nstd     8.803408     0\nmin     0.000000     1\n25%     7.250000     1\n50%    14.500000     1\n75%    21.750000     1\nmax    29.000000     1\n```\n\n(possibly adding `include/exclude` to `.describe` then doing a `select_dtypes` might be ok though)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54386849",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-54386849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 54386849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg2ODQ5",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T00:02:47Z",
    "updated_at": "2014-09-04T00:02:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "- The current behaviour of describe() is un-intuitive (unless the dataframe is homogenous type.) as it returns a subset of columns; and that subset depends on other included columns.\n- describe(), as an easy, short, concise way to get an overview of the df values, is especially appreciable during interactive sessions. Using a manual approach, or \"select_dtypes\" pre-filterings, can of course eventually output the results, but it defeat some of the practicality of describe().\n- Getting the result of describe() with the same columns as original df is quite handy. e.g. you can re-use a same columns-subset list. For e.g. compare\n\n``` python\nIn [60]: df.dtypes\nOut[60]: \ncolA     object\ncolB     object\ncolC      int32\ncolD    float64\ndtype: object\n\n\nIn [56]: model_col = [\"colA\",\"colB\"]\n\nIn [57]: df.loc[:,model_col].describe().loc[:,model_col]\nOut[57]: \n       colA colB\ncount    30   30\nunique    2    5\ntop     foo    d\nfreq     20    6\n\nIn [58]: model_col = [\"colA\",\"colB\",\"colC\"]\n\nIn [59]: df.loc[:,model_col].describe().loc[:,model_col]\nOut[59]: \n       colA  colB       colC\ncount   NaN   NaN  30.000000\nmean    NaN   NaN  14.500000\nstd     NaN   NaN   8.803408\nmin     NaN   NaN   0.000000\n25%     NaN   NaN   7.250000\n50%     NaN   NaN  14.500000\n75%     NaN   NaN  21.750000\nmax     NaN   NaN  29.000000\n```\n\nHere we have lost the count(),unique(), first(), etc. of colA and colB as soon as we introduced colC in the model\n\n However, it's not lost anymore when using return_type = \"same\"\n\n``` python\nIn [61]: df.loc[:,model_col].describe(return_type=\"same\").loc[:,model_col]\nOut[61]: \n       colA colB      colC\ncount    30   30        30\nunique    2    5       NaN\ntop     foo    d       NaN\nfreq     20    6       NaN\nmean    NaN  NaN      14.5\nstd     NaN  NaN  8.803408\nmin     NaN  NaN         0\n25%     NaN  NaN      7.25\n50%     NaN  NaN      14.5\n75%     NaN  NaN     21.75\nmax     NaN  NaN        29\n```\n- It also works out-of-the-box with `groupby()` results objects. Very useful when interacting with data in an exploratory way, i can easily see/stack the summaries results of my various grouping pivot. An alternative would need several lines of code, possibly the need to create a small helper function (or an ugly lambda) every time.\n\nIn the exemple before, even with `select_dtypes()`, I'm not even sure how to properly include a summary for `colB` (categorical) in the `df.groupby(\"colA\").describe()` default output. In my proposal, it's just a matter of  df.groupby(\"colA\").describe(return_type=\"same\").\n\nOf course, it's more convincing with real-world large dataframe of mixed types, (as used e.g. in Psychology) where it's easy to mentally lost track of every columns and their types.\n- most of the internal type-selecting logic was already implemented, so was only a matter of exposing it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54387852",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-54387852",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 54387852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzg3ODUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T00:16:02Z",
    "updated_at": "2014-09-04T00:16:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, your idea of 'same' is ok, but the API is not consistent with the pandas style.\n\nI would be ok with adding `include,exclude` keywords to `.describe` to filter (with the default of `include='number',exclude=None`. You could simply make it accept `include='same'` (and intercept that) to implement the functionailiy (and use `.select_dtypes` internally).\n\nits a well-constructed and general API by @cpcloud \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54597423",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-54597423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 54597423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTk3NDIz",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T08:21:36Z",
    "updated_at": "2014-09-05T08:21:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, i implemented your suggested API, and it's indeed more flexible, while retaining the usability. Great !\n\nNow it's possible to specify output form using include=/exclude= list.\nI override 'include' to add the 'all' (alias '*') keyword, which enforce no-filtering, and the None/None (default) pair the enforce the previous, type-dependent behaviour.\n\nSome snippet below:\n\n``` python\n\n>>> from pandas import Series\n>>> from pandas import DataFrame\n>>> import pandas.util.testing as tm\n>>> import numpy as np\n>>> \n>>> df = DataFrame({'catA': ['foo', 'foo', 'bar'] * 8,\n...         'catB': ['a', 'b', 'c', 'd'] * 6,\n...         'numC': np.arange(24),\n...         'numD': np.arange(24.) + .5,\n...         'ts': tm.makeTimeSeries()[:24].index})\n>>> \n>>> \n>>> df.describe(include=[\"number\",\"object\"])\n       catA catB       numC       numD\ncount    24   24  24.000000  24.000000\nunique    2    4        NaN        NaN\ntop     foo    d        NaN        NaN\nfreq     16    6        NaN        NaN\nmean    NaN  NaN  11.500000  12.000000\nstd     NaN  NaN   7.071068   7.071068\nmin     NaN  NaN   0.000000   0.500000\n25%     NaN  NaN   5.750000   6.250000\n50%     NaN  NaN  11.500000  12.000000\n75%     NaN  NaN  17.250000  17.750000\nmax     NaN  NaN  23.000000  23.500000\n>>> df.loc[:,:].describe() # as before\n            numC       numD\ncount  24.000000  24.000000\nmean   11.500000  12.000000\nstd     7.071068   7.071068\nmin     0.000000   0.500000\n25%     5.750000   6.250000\n50%    11.500000  12.000000\n75%    17.250000  17.750000\nmax    23.000000  23.500000\n>>> \n>>> df.loc[:,['catA','catB','ts']].describe() # contains NaN, as before\n       catA catB                   ts\ncount    24   24                   24\nunique    2    4                   24\nfirst   NaN  NaN  2000-01-03 00:00:00\nlast    NaN  NaN  2000-02-03 00:00:00\ntop     foo    d  2000-01-31 00:00:00\nfreq     16    6                    1\n>>> \n>>> df.describe(include=[\"object\"])\n       catA catB\ncount    24   24\nunique    2    4\ntop     foo    d\nfreq     16    6\n>>> df.describe(include='*')\n       catA catB       numC       numD                   ts\ncount    24   24  24.000000  24.000000                   24\nunique    2    4        NaN        NaN                   24\ntop     foo    d        NaN        NaN  2000-01-31 00:00:00\nfreq     16    6        NaN        NaN                    1\nfirst   NaN  NaN        NaN        NaN  2000-01-03 00:00:00\nlast    NaN  NaN        NaN        NaN  2000-02-03 00:00:00\nmean    NaN  NaN  11.500000  12.000000                  NaN\nstd     NaN  NaN   7.071068   7.071068                  NaN\nmin     NaN  NaN   0.000000   0.500000                  NaN\n25%     NaN  NaN   5.750000   6.250000                  NaN\n50%     NaN  NaN  11.500000  12.000000                  NaN\n75%     NaN  NaN  17.250000  17.750000                  NaN\nmax     NaN  NaN  23.000000  23.500000                  NaN\n>>> \n>>> df.loc[:,['catA','catB']].describe(include='*')\n       catA catB\ncount    24   24\nunique    2    4\ntop     foo    d\nfreq     16    6\n>>> df.describe(include='*', exclude='XXX')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"pandas/core/generic.py\", line 3681, in describe\n    raise ValueError(\"exclude must be None when include is '%s'\" % include)\nValueError: exclude must be None when include is '*'\n>>> \n>>> df.groupby(\"catA\").describe(include='*') # my favorite\n            catB       numC       numD                   ts\ncatA                                                       \nbar  count     8   8.000000   8.000000                    8\n     unique    4        NaN        NaN                    8\n     top       d        NaN        NaN  2000-01-31 00:00:00\n     freq      2        NaN        NaN                    1\n     first   NaN        NaN        NaN  2000-01-05 00:00:00\n     last    NaN        NaN        NaN  2000-02-03 00:00:00\n     mean    NaN  12.500000  13.000000                  NaN\n     std     NaN   7.348469   7.348469                  NaN\n     min     NaN   2.000000   2.500000                  NaN\n     25%     NaN   7.250000   7.750000                  NaN\n     50%     NaN  12.500000  13.000000                  NaN\n     75%     NaN  17.750000  18.250000                  NaN\n     max     NaN  23.000000  23.500000                  NaN\nfoo  count    16  16.000000  16.000000                   16\n     unique    4        NaN        NaN                   16\n     top       d        NaN        NaN  2000-01-25 00:00:00\n     freq      4        NaN        NaN                    1\n     first   NaN        NaN        NaN  2000-01-03 00:00:00\n     last    NaN        NaN        NaN  2000-02-02 00:00:00\n     mean    NaN  11.000000  11.500000                  NaN\n     std     NaN   7.118052   7.118052                  NaN\n     min     NaN   0.000000   0.500000                  NaN\n     25%     NaN   5.500000   6.000000                  NaN\n     50%     NaN  11.000000  11.500000                  NaN\n     75%     NaN  16.500000  17.000000                  NaN\n     max     NaN  22.000000  22.500000                  NaN\n>>> df.groupby(\"catA\").describe(include=[\"object\", \"datetime\", \"number\"], exclude=[\"float\"])\n            catB       numC                   ts\ncatA                                            \nbar  count     8   8.000000                    8\n     unique    4        NaN                    8\n     top       d        NaN  2000-01-31 00:00:00\n     freq      2        NaN                    1\n     first   NaN        NaN  2000-01-05 00:00:00\n     last    NaN        NaN  2000-02-03 00:00:00\n     mean    NaN  12.500000                  NaN\n     std     NaN   7.348469                  NaN\n     min     NaN   2.000000                  NaN\n     25%     NaN   7.250000                  NaN\n     50%     NaN  12.500000                  NaN\n     75%     NaN  17.750000                  NaN\n     max     NaN  23.000000                  NaN\nfoo  count    16  16.000000                   16\n     unique    4        NaN                   16\n     top       d        NaN  2000-01-25 00:00:00\n     freq      4        NaN                    1\n     first   NaN        NaN  2000-01-03 00:00:00\n     last    NaN        NaN  2000-02-02 00:00:00\n     mean    NaN  11.000000                  NaN\n     std     NaN   7.118052                  NaN\n     min     NaN   0.000000                  NaN\n     25%     NaN   5.500000                  NaN\n     50%     NaN  11.000000                  NaN\n     75%     NaN  16.500000                  NaN\n     max     NaN  22.000000                  NaN\n\n```\n\nSome Design decision minor points\n- Meaningless input raise exceptions (mostly through select_dtypes), except through groupby() who catch them and fallback to returning 'all'.\n- the index of the returned results (count/mean/50%/unique/first...) still vary depending on the dataframe content (which kindof contradict my initial complain for columns, i never saw that as a problem when it concerned rows). Its order is also not stable.\n- I thought it might be convenient to move the '*' dtype-filtering trick directly into select_dtypes(). Would it be useful ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54623824",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-54623824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 54623824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjIzODI0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T13:22:43Z",
    "updated_at": "2014-09-05T13:22:43Z",
    "author_association": "MEMBER",
    "body": "Introducing this kind of coupling hardly seems worth it for the \"inconvenience\" of having to call a single method. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54623910",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-54623910",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 54623910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjIzOTEw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T13:23:33Z",
    "updated_at": "2014-09-05T13:23:33Z",
    "author_association": "MEMBER",
    "body": "Also how is all and star in select dtypes different from just not calling the method?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55225149",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-55225149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 55225149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MjI1MTQ5",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-11T06:27:48Z",
    "updated_at": "2014-09-11T06:27:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, following the previous comment, i refrained from touching select_dtypes.\n\nI left the row-creation logic as it was, as i believed it was necessary, as discussed before.\n\nI'm quite happy with the current code. In addition to docstrings, I also added a brief overview in the main-doc.\n\n[I also have a potential short changelog doc, but i guess it's rude to commit it (e.g. in v0.15.txt) before knowing if you plan to merge this at all :)]\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55355350",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-55355350",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 55355350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzU1MzUw",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-12T02:41:01Z",
    "updated_at": "2014-09-12T02:41:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, i updated the main doc and docstring following your request.\nThanks\n\nAs for the rationale of those loops, this is necessary to compute the order of the row axis (statistics-list). The describe() functions must output results immediately practical for users, but without the loop, as you showed, percentiles are not surrounded by min/max; count is at the middle, etc; due to the default lexsorting logic of Index operations.\n\nIn detail, in the snippet below:\n- This first loop is basically the apply (except the cat'ing is delayed later, so i can still have access to series's length)\n- The second loop is the index-sorting logic\n\nThat's why i gave-up using apply in this case. I also experimented other way, such as the various Index manipulation functions, or pre-computing the rows-keys, etc. but it didn't improve much.\n\nNote also that, as a side effect, the whole function itself seems to be slightly faster than the sole logicless apply.\n\n``` python\ndef test1(fself, percentile_width = None, percentiles = []):\n            ldesc = []\n            for name, col in fself.iteritems():\n                s = col.describe(percentile_width=percentile_width,\\\n                            percentiles=percentiles)\n                s.name = name\n                ldesc.append(s)\n            # set a convenient order for rows\n            names = []\n            ldesc_indexes = sorted([x.index for x in ldesc], key=len)\n            for idxnames in ldesc_indexes:\n                for name in idxnames:\n                    if name not in names:\n                        names.append(name)\n            d = pd.concat(ldesc, join_axes=pd.Index([names]), axis=1)\n            return d\n\nIn [84]: %timeit test1(df, percentiles=[.42])\n100 loops, best of 3: 5.4 ms per loop\n\nIn [85]: %timeit df.apply(lambda x : x.describe(percentile_width = None, percentiles=[.42]))\n100 loops, best of 3: 6.59 ms per loop\n```\n\nSame pattern on a wider (24, 500)-shaped df: 458 ms vs 499 ms\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55525058",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-55525058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 55525058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTI1MDU4",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-14T13:09:23Z",
    "updated_at": "2014-09-14T13:09:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, it's only style, but if you want back the list-comprehension, then fine; while at it, to make some actual improvement, i changed the behaviour on Series so that the index name got filed at creation time. See commit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55526657",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-55526657",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 55526657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NTI2NjU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-14T14:08:05Z",
    "updated_at": "2014-09-14T14:08:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls squash to a single commit\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55681145",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-55681145",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 55681145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NjgxMTQ1",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-16T00:50:58Z",
    "updated_at": "2014-09-16T00:50:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, i squashed all commits into one, which updates the code and the main doc.\nWhat i haven't commited yet is the changelog/release-notes text, which i have ready. Should i commit it somewhere ?\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55842997",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-55842997",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 55842997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODQyOTk3",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-17T02:57:38Z",
    "updated_at": "2014-09-17T02:57:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, done & rebased.\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55886371",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-55886371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 55886371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODg2Mzcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-17T12:32:27Z",
    "updated_at": "2014-09-17T12:32:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche @cpcloud have a look pls\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57017638",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57017638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57017638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDE3NjM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-26T20:42:19Z",
    "updated_at": "2014-09-26T20:42:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud can you review\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57308596",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57308596",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57308596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MzA4NTk2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-30T12:53:03Z",
    "updated_at": "2014-09-30T12:53:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57394550",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57394550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57394550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3Mzk0NTUw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-30T22:42:23Z",
    "updated_at": "2014-09-30T22:42:23Z",
    "author_association": "MEMBER",
    "body": "@bthyreau added some more comments (sorry it took a while to look at). \nFurther I have another remark: is the `'*'` option needed? Is just using `'all'` not enough? (it's only two characters more). I don't think \\* is used anywhere in pandas at the moment, and is just two aliases for the same.\n\n@cpcloud: are you ok with including this? as you objected in the first place?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57433238",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57433238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57433238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDMzMjM4",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-01T08:24:41Z",
    "updated_at": "2014-10-01T08:24:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "- Thank for your feedback. Following your comments about the condition-path, i finally decided to refactor that whole function. I was initially reluctant to change it, as it changed some of the (unspecified) order of fields in output; but it makes the code quite smaller and much clearer now.\n  The only user-visible change is that the order of the output rows is slightly changed (in a more consistent way IMHO), and i had to alter an existing unittest which assumed an order.\n- Also, i wanted to confirm the behaviour using the new pd.Categorical data type, but i think select_dtypes() can't (explicitely) filter on it (yet?). Am i right ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57449628",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57449628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57449628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDQ5NjI4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-01T11:20:24Z",
    "updated_at": "2014-10-01T11:20:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "select_dtypes handles categorical (pass in 'category' as the dtype)\nlet's drop using \\* and just use all to include all dtypes\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57451402",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57451402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57451402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NDUxNDAy",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-01T11:40:19Z",
    "updated_at": "2014-10-01T11:40:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback ok thanks. Ok to drop \"*\" if you think it's inconsistant with the rest of pandas.\nI'll fix the branch ASAP (fail due to minor discrepency as for the status of \"bool\" + i want to assess categories) and push it again soon\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57566235",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57566235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57566235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTY2MjM1",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T01:09:26Z",
    "updated_at": "2014-10-02T01:09:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "- Ok, removed '*' as you requested.\n  [Ok course, if it was only for me, \"all\" would be the default describe() behaviour (since I can't figure-out the motivation for silentely dropping random columns), so in real-world use, i will have to alias it anyway.]. I hope i made the doc clear enough to warn about this pitfall.\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57566701",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57566701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57566701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NTY2NzAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T01:14:50Z",
    "updated_at": "2014-10-02T01:14:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bthyreau well \n\ndescribe is most useful for only numeric columns and that is the default \nso it provides backwards compat \n\nit does not drop random columns rather it by default selects numeric\n(which is how most operations work FYI)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57766905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57766905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57766905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzY2OTA1",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-03T08:05:29Z",
    "updated_at": "2014-10-03T08:05:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, refactored a bit to avoid the recomputation of parameters due to recursion. Thanks for pointing it out; As a bonus, the codepaths are shorter and easier to follow !\nI also updated the docstring following your suggestion about more explicit mixed-type cases.\n\nThanks !\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57938415",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57938415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57938415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTM4NDE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T14:54:50Z",
    "updated_at": "2014-10-05T14:54:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bthyreau small change.\n\n_some_ `.std()` calls on a Timedelta will work (except for the returned inference). But that's the problem, some will also overflow. This stems from: `std = sqrt(var)` and var can be a number that is really big.\n\n```\nIn [7]: max_int = np.iinfo(np.int64).max\n\nIn [8]: max_int\nOut[8]: 9223372036854775807\n\nIn [9]: pd.Timedelta(max_int)\nOut[9]: Timedelta('106751 days 23:47:16.854775')\n\nIn [10]: big_float = 3e19\n\nIn [12]: pd.Timedelta(big_float)\n---------------------------------------------------------------------------\nOverflowError                             Traceback (most recent call last)\nOverflowError: Python int too large to convert to C long\n\nIn [13]: pd.Timedelta(np.sqrt(big_float))\nOut[13]: Timedelta('0 days 00:00:05.477225')\n```\n\nGoing to create an issue to fix this, but don't have time right now.\nSo just wrap the .std() as I show above to catch this (it will raise `TypeError` because it doesn't allow std/var ATM).\n\nThe complication is that std is allowd, but now var (but std CALLS var). So need to do this in a non-hacky way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57938551",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57938551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57938551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTM4NTUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T14:58:48Z",
    "updated_at": "2014-10-05T14:59:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "see here: https://github.com/pydata/pandas/issues/8471\n\nlmk when you make that change and push.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57947717",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57947717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57947717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ3NzE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:51:31Z",
    "updated_at": "2014-10-05T18:51:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bthyreau of u can address this soon would be gr8\nif not lmk - going to do a rc prob tonight and this goes in\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57955283",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57955283",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57955283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTU1Mjgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T22:40:08Z",
    "updated_at": "2014-10-05T22:40:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think #8476 will allow this to merge cleanly. so hold off\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57957282",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57957282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57957282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTU3Mjgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T23:53:35Z",
    "updated_at": "2014-10-05T23:53:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bthyreau ok I think if u rebase this should work \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57957325",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8164#issuecomment-57957325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8164",
    "id": 57957325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTU3MzI1",
    "user": {
      "login": "bthyreau",
      "id": 590921,
      "node_id": "MDQ6VXNlcjU5MDkyMQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/590921?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bthyreau",
      "html_url": "https://github.com/bthyreau",
      "followers_url": "https://api.github.com/users/bthyreau/followers",
      "following_url": "https://api.github.com/users/bthyreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/bthyreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bthyreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bthyreau/subscriptions",
      "organizations_url": "https://api.github.com/users/bthyreau/orgs",
      "repos_url": "https://api.github.com/users/bthyreau/repos",
      "events_url": "https://api.github.com/users/bthyreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bthyreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T23:55:18Z",
    "updated_at": "2014-10-05T23:55:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok great. Rebasing and pushing now\n"
  }
]
