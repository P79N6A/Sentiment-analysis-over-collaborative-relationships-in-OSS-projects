[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/8858418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1964#issuecomment-8858418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1964",
    "id": 8858418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NTg0MTg=",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T15:29:43Z",
    "updated_at": "2012-09-25T15:29:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Series vs DataFrame: I'm not sure I agree that the best way to think about Series is as a one-column DataFrame. And in fact, there are already a lot of overlap between Series and DataFrame functions. In terms of learning, what tends to trip you up when working with Series vs DataFrame?\n\nIndex & data columns: if you want to treat the index as data, you can do so easily using reset_index. Then you'll have column names and row numbers just like a SQL table, if you prefer to think about data in that way (@wesm @jseabold).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/8860711",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1964#issuecomment-8860711",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1964",
    "id": 8860711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NjA3MTE=",
    "user": {
      "login": "halleygithub",
      "id": 1404757,
      "node_id": "MDQ6VXNlcjE0MDQ3NTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1404757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/halleygithub",
      "html_url": "https://github.com/halleygithub",
      "followers_url": "https://api.github.com/users/halleygithub/followers",
      "following_url": "https://api.github.com/users/halleygithub/following{/other_user}",
      "gists_url": "https://api.github.com/users/halleygithub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/halleygithub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/halleygithub/subscriptions",
      "organizations_url": "https://api.github.com/users/halleygithub/orgs",
      "repos_url": "https://api.github.com/users/halleygithub/repos",
      "events_url": "https://api.github.com/users/halleygithub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/halleygithub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T16:31:02Z",
    "updated_at": "2012-09-25T16:31:02Z",
    "author_association": "NONE",
    "body": "Agree. but..\n\nI feel there exists too much functions (might be more in the future) in Pandas. It is a burden to distinguish an object is a Series or DataFrame and find the related methods accordingly when I programming. \n\nHere is an example: I have two statements respectively: 1:  \" mydata = df['col_1'] \",  2: \" mydata = df[['col_1', 'col_2']] \" ,  and then when I want to sort by \" mydata.sort(axis =0)\" , current Pandas works ok for 2 , not ok for 1 , for first 'mydata' is Series and second 'mydata' is DataFrame, and Series object's 'sort' method not accept 'axis' parameter ....., from human mental point of view/ or math point of view , is there much difference between the two statements ?\n\nThe less to memorize and need to take care, the better, I suppose (maybe I am lazy :-) ). And since 'there are already a lot of overlap between Series and DataFrame functions' , why not totally consolidate and unified these two ?\n\nAs Index & data columns, yes I can set & reset_index , and I don't know what are the pros & cons of setting an index for a DataFrame ?  I am influenced by SQL a lot, not setting an index for Pandas dataframe  makes me feel uncomfortable just like not setting a key for SQL tables .  From a learner's point of view, i hope i can utilize my SQL mindset to Pandas, that will lower the learning curve. ( I need to deal with SQL, Python Pandas and R coming soon, the less mindset and syntax difference, the easier my life) \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/8862394",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1964#issuecomment-8862394",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1964",
    "id": 8862394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NjIzOTQ=",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T17:17:06Z",
    "updated_at": "2012-09-25T17:17:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll admit that I have code that specifically checks for a Series and changes it to a one column DataFrame. I think the problem is that when you are working with DataFrames, sometimes your headspace is that a one dimension object equals a one-col DataFrame and not a Series.\n\nI also constantly forget that df.irow(0).col_name does not work. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/8862641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1964#issuecomment-8862641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1964",
    "id": 8862641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NjI2NDE=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T17:24:39Z",
    "updated_at": "2012-09-25T17:26:16Z",
    "author_association": "MEMBER",
    "body": "In SQL-land, a Series is a kind of object that doesn't really exist. pandas is a big library, for sure, but I can assure you that the functionality that is there-- and the way that it is designed -- arose out of genuine need and utility. The goal was _not_ to provide a 1-1-1 mapping between SQL-Python-R; many things which are very elegant to do in pandas due to its design are very cumbersome in SQL and R.\n\nThere are rough edges, though-- sweeping changes are not possible at this point but if you would propose incremental API changes (preferably with pull requests) to increase consistency across the library I will happily accept them as long as they do not cause disruptions to the existing user base. \n\n@dalejung there's an open PR to make df.irow(0).col_name work\n\nAnother useful change would be to access index values through `DataFrame.__getitem__` (as long as there isn't a conflicting existing column name)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9202089",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1964#issuecomment-9202089",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1964",
    "id": 9202089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMDIwODk=",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-06T20:35:55Z",
    "updated_at": "2012-10-06T20:35:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm going to close this issue for now since there are no action items. Feel free to continue the discussion though. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9216937",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1964#issuecomment-9216937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1964",
    "id": 9216937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyMTY5Mzc=",
    "user": {
      "login": "halleygithub",
      "id": 1404757,
      "node_id": "MDQ6VXNlcjE0MDQ3NTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1404757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/halleygithub",
      "html_url": "https://github.com/halleygithub",
      "followers_url": "https://api.github.com/users/halleygithub/followers",
      "following_url": "https://api.github.com/users/halleygithub/following{/other_user}",
      "gists_url": "https://api.github.com/users/halleygithub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/halleygithub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/halleygithub/subscriptions",
      "organizations_url": "https://api.github.com/users/halleygithub/orgs",
      "repos_url": "https://api.github.com/users/halleygithub/repos",
      "events_url": "https://api.github.com/users/halleygithub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/halleygithub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-08T05:53:12Z",
    "updated_at": "2012-10-08T05:53:12Z",
    "author_association": "NONE",
    "body": "i do REALLY hope Series can be merged into DataFrame . \n\nJust like m_1 vs m_n matrix .. , there are all 'M'atrix, not one is 'S'atrix, the other is 'M'atrix\n\nIs there any special function or feature of Series that can't be fullfiled by one_column DataFrame ?  If yes, why not implement the feature for DataFrame's columns as well. If no, why not delete Series class ? That will ease end user's, developer's burden to maintain and support two system (existing code, future new added function, mindset, manual etc....) .\n\nAs the  existing Series user base, can develop a wraper on DataFrame to simulate Series, or just simplily leave the  current code there, flag Series as 'unsupport' and phase it out step by step. Pandas is 0.8 version, not too late to consolidate internal design philosophy.\n\nAs index & column, now I always keep both index & columns like this : df = df.reset_index(index_cols, drop=False) . I don't know whether it is good practice or not (somewhat ugly) , but that easy my coding as a newbie to remember too much method & syntax.\n"
  }
]
