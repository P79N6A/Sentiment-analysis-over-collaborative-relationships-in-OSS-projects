[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/388645071",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-388645071",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 388645071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODY0NTA3MQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-13T18:07:00Z",
    "updated_at": "2018-05-13T18:07:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice.\r\n\r\nwrt #20395: Now I get test result of 4.1 ms as compared to 13.8 ms beforehand. So while this is much better, the test case of ``pd.Index`` is at 125 µs, so #20395 is not completely solved..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/388647201",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-388647201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 388647201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODY0NzIwMQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-05-13T18:41:41Z",
    "updated_at": "2018-06-09T09:54:56Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21022?src=pr&el=h1) Report\n> Merging [#21022](https://codecov.io/gh/pandas-dev/pandas/pull/21022?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/0c65c57a279e755ab7093db925d1e580f9878dae?src=pr&el=desc) will **increase** coverage by `0.04%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21022/graphs/tree.svg?height=150&width=650&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/21022?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #21022      +/-   ##\n==========================================\n+ Coverage   91.85%   91.89%   +0.04%     \n==========================================\n  Files         153      153              \n  Lines       49549    49585      +36     \n==========================================\n+ Hits        45512    45565      +53     \n+ Misses       4037     4020      -17\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.29% <100%> (+0.04%)` | :arrow_up: |\n| #single | `41.85% <16.66%> (-0.03%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21022?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/arrays/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/21022/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2NhdGVnb3JpY2FsLnB5) | `95.73% <100%> (+0.03%)` | :arrow_up: |\n| [pandas/core/reshape/melt.py](https://codecov.io/gh/pandas-dev/pandas/pull/21022/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9tZWx0LnB5) | `97.34% <0%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/21022/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.8% <0%> (+0.02%)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/21022/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `94.17% <0%> (+0.05%)` | :arrow_up: |\n| [pandas/core/reshape/pivot.py](https://codecov.io/gh/pandas-dev/pandas/pull/21022/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9waXZvdC5weQ==) | `97.03% <0%> (+0.05%)` | :arrow_up: |\n| [pandas/io/formats/style.py](https://codecov.io/gh/pandas-dev/pandas/pull/21022/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvc3R5bGUucHk=) | `96.12% <0%> (+0.08%)` | :arrow_up: |\n| [pandas/core/dtypes/missing.py](https://codecov.io/gh/pandas-dev/pandas/pull/21022/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL21pc3NpbmcucHk=) | `92.52% <0%> (+0.57%)` | :arrow_up: |\n| [pandas/plotting/\\_core.py](https://codecov.io/gh/pandas-dev/pandas/pull/21022/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb3JlLnB5) | `83.53% <0%> (+1.14%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21022?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21022?src=pr&el=footer). Last update [0c65c57...a3550e8](https://codecov.io/gh/pandas-dev/pandas/pull/21022?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/388650521",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-388650521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 388650521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODY1MDUyMQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-13T19:34:34Z",
    "updated_at": "2018-05-13T19:47:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your code was good, though use ``get_loc`` rather than ``get_indexer`` as this is faster.\r\n\r\nA related improvement would be to look at ``CategoricalIndex.__contains__``. There the line \r\n\r\n```python\r\n    return key in self.values\r\n```\r\ncan be replaced with \r\n\r\n```python\r\n        code_value = self.categories.get_loc(key)\r\n        return code_value in self._engine\r\n```\r\n\r\nto gain some additional speedup when using ``CategoricalIndex`` rather than ``Categorical``:\r\n\r\n```python\r\n>>> n = 1_000_000\r\n>>> c = pd.Categorical(list('a' * n + 'b' * n + 'c' * n))  # using get_loc\r\n>>> %timeit 'b' in c\r\n4.49 ms ± 12.5 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\r\n>>> ci = pd.CategoricalIndex(list('a' * n + 'b' * n + 'c' * n))\r\n>>> %timeit 'b' in ci\r\n3,11 µs ± 19.6 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\r\n```\r\n\r\nAlso in ``CategoricalIndex.contains`` you can replace ``return key in self.values`` with ``return key in self``.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394275146",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-394275146",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 394275146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDI3NTE0Ng==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T08:29:21Z",
    "updated_at": "2018-06-04T08:29:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @fjetter, This is a very nice PR. Want to take this over the finishing line? I could make the CategoricalIndex case myself, if you want."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394322649",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-394322649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 394322649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDMyMjY0OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T11:30:13Z",
    "updated_at": "2018-06-04T11:30:13Z",
    "author_association": "MEMBER",
    "body": "> , though use get_loc rather than get_indexer as this is faster.\r\n\r\nGeneral question, wouldn't simply `val in self.categories` not even be faster and simpler?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394367289",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-394367289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 394367289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM2NzI4OQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T14:07:35Z",
    "updated_at": "2018-06-04T14:10:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche: in general that wouldn't work, as some categories might not be present in the ``Categorical``/``CategoricalIndex``..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394368856",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-394368856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 394368856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM2ODg1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T14:12:27Z",
    "updated_at": "2018-06-04T14:12:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> as some categories might not be present in the \r\n\r\nHow is that possible? The only one I can think of is NA, so the check could be something like `val in self.categories or isna(val) and self.isna().any()` "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394375609",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-394375609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 394375609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM3NTYwOQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T14:31:12Z",
    "updated_at": "2018-06-04T14:31:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe I wasn't communicating clearly, sorry about that. What I meant was this:\r\n\r\n```python\r\n>>> c = pd.CategoricalIndex('a a'.split(), categories='a b'.split())\r\n>>> 'b' in c\r\nFalse\r\n>>< 'b' in c.categories\r\nTrue\r\n```\r\n\r\nSo to check for membership in categories can give different results than checking membership in the values. Was this not the question from @jorisvandenbossche, or did I misunderstand?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394376475",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-394376475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 394376475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM3NjQ3NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T14:33:49Z",
    "updated_at": "2018-06-04T14:33:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, of course.\r\n\r\nThough I wonder if checking `val in self.categories` is still worthwhile to get a quick no / maybe."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394380187",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-394380187",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 394380187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM4MDE4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T14:44:24Z",
    "updated_at": "2018-06-04T14:44:24Z",
    "author_association": "MEMBER",
    "body": "Ah yes, that's a good reason!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394381703",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-394381703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 394381703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDM4MTcwMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T14:48:25Z",
    "updated_at": "2018-06-04T14:48:25Z",
    "author_association": "MEMBER",
    "body": "Exactly this reason actually is a bug in `CategoricalIndex.__contains__` for interval categories:\r\n\r\n```\r\nIn [14]: intervals = pd.interval_range(1, 4)\r\n\r\nIn [15]: intervals\r\nOut[15]: \r\nIntervalIndex([(1, 2], (2, 3], (3, 4]]\r\n              closed='right',\r\n              dtype='interval[int64]')\r\n\r\nIn [16]: cat = pd.CategoricalIndex(list(intervals[:-1]), categories=intervals)\r\n\r\nIn [17]: cat\r\nOut[17]: CategoricalIndex([(1, 2], (2, 3]], categories=[(1, 2], (2, 3], (3, 4]], ordered=False, dtype='category')\r\n\r\nIn [18]: intervals[-1] in cat\r\nOut[18]: True\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395231480",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-395231480",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 395231480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTIzMTQ4MA==",
    "user": {
      "login": "fjetter",
      "id": 8629629,
      "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8629629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjetter",
      "html_url": "https://github.com/fjetter",
      "followers_url": "https://api.github.com/users/fjetter/followers",
      "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
      "organizations_url": "https://api.github.com/users/fjetter/orgs",
      "repos_url": "https://api.github.com/users/fjetter/repos",
      "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjetter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T22:16:04Z",
    "updated_at": "2018-06-06T22:16:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, I've been swamped the past few weeks.\r\n\r\n@TomAugspurger I extended the `CategoricalIndex` unit test and extended the benchmarks to cover all combinations you mentioned. Is there anything else you'd want to be covered?\r\n\r\n@jorisvandenbossche Indeed this bug exists but I think it's unrelated to this PR. It's connected to the `_defer_to_indexing` attribute\r\nsee https://github.com/pandas-dev/pandas/blob/0c65c57a279e755ab7093db925d1e580f9878dae/pandas/core/indexes/category.py#L328\r\nwhich appears to be only `True` for `IntervalIndex`. Unfortunately I have no idea what this is for and would suggest to fix this in another PR\r\n\r\n@jreback You asked me to check whether there are similar benchmarks in `indexing.py` and I believe the short answer would be yes. However, most tests/benchmark for categorical related cases are in their own module which is why I put it there. I do not have a strong opinion about this topic and would move the code wherever you feel most appropriate\r\n\r\nThe currently implemented benchmarks show a speedup between ~2-1000 depending on the task we're looking at.\r\n\r\n\r\n### BEFORE\r\n```\r\n~/workspace/pandas/asv_bench(performance/improve_contains_in_categorical*) » asv run --python=same --show-stderr --bench=categoricals.Indexing\r\n· Discovering benchmarks\r\n· Running 2 total benchmarks (1 commits * 1 environments * 2 benchmarks)\r\n[  0.00%] ·· Building for existing-py_Users_fjetter_miniconda2_envs_pandas-dev_bin_python\r\n[  0.00%] ·· Benchmarking existing-py_Users_fjetter_miniconda2_envs_pandas-dev_bin_python\r\n[ 50.00%] ··· Running categoricals.Indexing.time_loc_df                                                                                   ok\r\n[ 50.00%] ····\r\n               ======= ============= =============\r\n               --                has_nan\r\n               ------- ---------------------------\r\n                value       True         False\r\n               ======= ============= =============\r\n                  a      3.90±0.7ms   1.95±0.05ms\r\n                  c     3.41±0.02ms    2.37±0.1ms\r\n               ======= ============= =============\r\n\r\n[100.00%] ··· Running categoricals.Indexing.time_loc_ser                                                                                  ok\r\n[100.00%] ····\r\n               ======= ============= =============\r\n               --                has_nan\r\n               ------- ---------------------------\r\n                value       True         False\r\n               ======= ============= =============\r\n                  a     2.43±0.05ms    3.15±0.5ms\r\n                  c      2.85±0.1ms   2.91±0.05ms\r\n               ======= ============= =============\r\n\r\n------------------------------------------------------------\r\n~/workspace/pandas/asv_bench(performance/improve_contains_in_categorical*) » asv run --python=same --show-stderr --bench=categoricals.Contains\r\n· Discovering benchmarks\r\n· Running 2 total benchmarks (1 commits * 1 environments * 2 benchmarks)\r\n[  0.00%] ·· Building for existing-py_Users_fjetter_miniconda2_envs_pandas-dev_bin_python\r\n[  0.00%] ·· Benchmarking existing-py_Users_fjetter_miniconda2_envs_pandas-dev_bin_python\r\n[ 50.00%] ··· Running categoricals.Contains.time_cat_isin                                                                                 ok\r\n[ 50.00%] ····\r\n               ======= ============= =============\r\n               --                has_nan\r\n               ------- ---------------------------\r\n                value       True         False\r\n               ======= ============= =============\r\n                  a     1.20±0.02ms   1.19±0.04ms\r\n                  c     1.54±0.03ms   1.50±0.04ms\r\n                  d     1.74±0.05ms   1.69±0.05ms\r\n                  z     1.78±0.08ms   1.78±0.06ms\r\n                 nan    1.19±0.01ms   1.84±0.04ms\r\n               ======= ============= =============\r\n\r\n[100.00%] ··· Running categoricals.Contains.time_contains_index                                                                           ok\r\n[100.00%] ····\r\n               ======= ============= =============\r\n               --                has_nan\r\n               ------- ---------------------------\r\n                value       True         False\r\n               ======= ============= =============\r\n                  a     1.21±0.05ms   1.20±0.02ms\r\n                  c     1.54±0.02ms   1.64±0.09ms\r\n                  d      1.83±0.3ms   1.76±0.04ms\r\n                  z     1.72±0.05ms   1.71±0.05ms\r\n                 nan    1.25±0.08ms   1.85±0.06ms\r\n               ======= ============= =============\r\n```\r\n\r\n### AFTER\r\n```\r\n~/workspace/pandas/asv_bench(performance/improve_contains_in_categorical*) » asv run --python=same --show-stderr --bench=categoricals.Indexing\r\n· Discovering benchmarks\r\n· Running 2 total benchmarks (1 commits * 1 environments * 2 benchmarks)\r\n[  0.00%] ·· Building for existing-py_Users_fjetter_miniconda2_envs_pandas-dev_bin_python\r\n[  0.00%] ·· Benchmarking existing-py_Users_fjetter_miniconda2_envs_pandas-dev_bin_python\r\n[ 50.00%] ··· Running categoricals.Indexing.time_loc_df                                                                                   ok\r\n[ 50.00%] ····\r\n               ======= ============= ==========\r\n               --              has_nan\r\n               ------- ------------------------\r\n                value       True       False\r\n               ======= ============= ==========\r\n                  a     1.86±0.04ms   734±20μs\r\n                  c     1.75±0.01ms   634±20μs\r\n               ======= ============= ==========\r\n\r\n[100.00%] ··· Running categoricals.Indexing.time_loc_ser                                                                                  ok\r\n[100.00%] ····\r\n               ======= ============= =============\r\n               --                has_nan\r\n               ------- ---------------------------\r\n                value       True         False\r\n               ======= ============= =============\r\n                  a     1.25±0.07ms   1.36±0.08ms\r\n                  c     1.30±0.07ms   1.38±0.07ms\r\n               ======= ============= =============\r\n\r\n\r\n~/workspace/pandas/asv_bench(performance/improve_contains_in_categorical*) » asv run --python=same --show-stderr --bench=categoricals.Contains\r\n· Discovering benchmarks\r\n· Running 2 total benchmarks (1 commits * 1 environments * 2 benchmarks)\r\n[  0.00%] ·· Building for existing-py_Users_fjetter_miniconda2_envs_pandas-dev_bin_python\r\n[  0.00%] ·· Benchmarking existing-py_Users_fjetter_miniconda2_envs_pandas-dev_bin_python\r\n[ 50.00%] ··· Running categoricals.Contains.time_cat_isin                                                                                 ok\r\n[ 50.00%] ····\r\n               ======= ============= =============\r\n               --                has_nan\r\n               ------- ---------------------------\r\n                value       True         False\r\n               ======= ============= =============\r\n                  a      15.2±0.4μs    15.1±0.1μs\r\n                  c      16.5±0.3μs     15.7±2μs\r\n                  d      17.8±0.8μs    16.3±0.5μs\r\n                  z     1.96±0.07μs   1.98±0.02μs\r\n                 nan     11.5±0.1μs    11.6±0.3μs\r\n               ======= ============= =============\r\n\r\n[100.00%] ··· Running categoricals.Contains.time_contains_index                                                                           ok\r\n[100.00%] ····\r\n               ======= ============= ============\r\n               --               has_nan\r\n               ------- --------------------------\r\n                value       True        False\r\n               ======= ============= ============\r\n                  a      17.1±0.4μs   16.3±0.2μs\r\n                  c      17.7±0.5μs   17.9±0.4μs\r\n                  d      18.7±0.6μs   17.4±0.3μs\r\n                  z     3.34±0.06μs   3.37±0.1μs\r\n                 nan     14.3±0.2μs   13.3±0.5μs\r\n               ======= ============= ============\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395578593",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-395578593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 395578593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTU3ODU5Mw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T21:57:34Z",
    "updated_at": "2018-06-07T22:08:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Please compare my #21369 to your ``__contains__`` implementation.\r\n\r\nMy version is slightly different:\r\n\r\n```python\r\n    def __contains__(self, key):\r\n        hash(key)\r\n        if isna(key):\r\n            return self.isna().any()\r\n        elif self.categories._defer_to_indexing:  # e.g. Interval values\r\n            loc = self.categories.get_loc(key)\r\n            return np.isin(self.codes, loc).any()\r\n        elif key in self.categories:\r\n            return self.categories.get_loc(key) in self._engine\r\n        else:\r\n            return False\r\n```\r\n\r\nThe ``isna`` section comes first to guard against passing nans to the ``elif self.categories._defer_to_indexing`` case.\r\n\r\nIn the ``elif self.categories._defer_to_indexing`` case, the key may be in several intervals, so ``loc`` may be an array. Therefor I used ``np.isin`` for the membership check.\r\n\r\nThe rest is like your version, except I use ``_engine``, which is what gives CategoricalIndex a nice speedup. Comments/reviews welcome."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395920029",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-395920029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 395920029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTkyMDAyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T23:41:41Z",
    "updated_at": "2018-06-08T23:41:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "since we merged @topper-123 other fix, can you confirm this (the correct fix should be in Categorical and CI can just call it)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395956941",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-395956941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 395956941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk1Njk0MQ==",
    "user": {
      "login": "fjetter",
      "id": 8629629,
      "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8629629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjetter",
      "html_url": "https://github.com/fjetter",
      "followers_url": "https://api.github.com/users/fjetter/followers",
      "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
      "organizations_url": "https://api.github.com/users/fjetter/orgs",
      "repos_url": "https://api.github.com/users/fjetter/repos",
      "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjetter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T10:05:43Z",
    "updated_at": "2018-06-09T10:05:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@topper-123 Your version doesn't work since there is no `Categorical._engine`. The engine does only exist for the `CategoricalIndex`. I exchanged it with `self._codes`. The timing is basically the same as for my version but since you added the additional case for the `_defer_to_indexing` I took your version\r\n\r\n@jreback Are you referring to #21025? Not sure how #21025 relates and I couldn't find any other merged PRs related to this. I assume you meant that the CategoricalIndex should just forward the call to the Categorical underneath. I removed any special cases in the `CategoricalIndex` and with the additional _if case_ @topper-123 suggested, the bug with the `IntervalIndex` is now also fixed. I believe this is what #21369 is doing, isn't it? I'd hate to _compete_ with another PR. If there are any major issues left and @topper-123 is willing to take care of it, I'll gladly step back since I wouldn't want this PR to blow up any further"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395962840",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-395962840",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 395962840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk2Mjg0MA==",
    "user": {
      "login": "fjetter",
      "id": 8629629,
      "node_id": "MDQ6VXNlcjg2Mjk2Mjk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8629629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjetter",
      "html_url": "https://github.com/fjetter",
      "followers_url": "https://api.github.com/users/fjetter/followers",
      "following_url": "https://api.github.com/users/fjetter/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjetter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjetter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjetter/subscriptions",
      "organizations_url": "https://api.github.com/users/fjetter/orgs",
      "repos_url": "https://api.github.com/users/fjetter/repos",
      "events_url": "https://api.github.com/users/fjetter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjetter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T11:45:29Z",
    "updated_at": "2018-06-09T11:45:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Tests seem to break because `np.isin` was only introduced in rather recent numpy versions but CI tests also up to `1.10` where this doesn't exist. Can someone explain to me what the flag `_defer_to_indexing` is for and why we even require special treatment in this case?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395972329",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-395972329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 395972329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTk3MjMyOQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T14:12:35Z",
    "updated_at": "2018-06-09T14:39:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fjetter , Sorry about that, I was also confused by the ``_defer_to_indexing``. I looked more into it and the underlying issue is that ``self.categories.get_loc`` may return a array, if ``self.categories`` is a ``IntervalIndex``.\r\n\r\nSo I suggest doing this, whích also avoids special-casing Intervals.\r\n\r\n```python\r\n    def __contains__(self, key):\r\n        hash(key)\r\n        if isna(key):\r\n            return self.isna().any()\r\n        try:\r\n            loc = self.categories.get_loc(key)\r\n        except KeyError:\r\n            return False\r\n        if is_scalar(loc):\r\n            return loc in self._codes\r\n        else:  # if self.categories is IntervalIndex, loc is an array\r\n            return any(loc_ in self._codes for loc_ in loc)\r\n```\r\n\r\nEDIT: An example where ``self.categories.get_loc`` returns an array:\r\n\r\n```python\r\n>>> ii = pd.IntervalIndex.from_arrays((0,0,0), (1,1,2))\r\n>>> c = pd.Categorical(ii)\r\n>>> c.categories.get_loc(1)\r\narray([0, 1], dtype=int64)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397794854",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-397794854",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 397794854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc5NDg1NA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-16T07:45:17Z",
    "updated_at": "2018-06-16T07:45:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @fjetter, I’ve gotten merged #21369, which is very similar to your PR. You only need to replace my  self._engine with self.codes in yout PR, and your code should work.\r\n\r\nWant to take it the last few steps? Otherwise I can take this, it’s not much work remaining."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398248117",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21022#issuecomment-398248117",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21022",
    "id": 398248117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODI0ODExNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T01:46:31Z",
    "updated_at": "2018-06-19T01:46:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #21508 "
  }
]
