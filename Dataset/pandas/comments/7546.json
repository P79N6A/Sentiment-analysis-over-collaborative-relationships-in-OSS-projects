[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46779743",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7546#issuecomment-46779743",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7546",
    "id": 46779743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Nzc5NzQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-22T12:22:19Z",
    "updated_at": "2014-06-22T12:22:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "see https://github.com/pydata/pandas/issues/2996 and #5401 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47299273",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7546#issuecomment-47299273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7546",
    "id": 47299273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mjk5Mjcz",
    "user": {
      "login": "krismetha",
      "id": 7909782,
      "node_id": "MDQ6VXNlcjc5MDk3ODI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7909782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krismetha",
      "html_url": "https://github.com/krismetha",
      "followers_url": "https://api.github.com/users/krismetha/followers",
      "following_url": "https://api.github.com/users/krismetha/following{/other_user}",
      "gists_url": "https://api.github.com/users/krismetha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krismetha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krismetha/subscriptions",
      "organizations_url": "https://api.github.com/users/krismetha/orgs",
      "repos_url": "https://api.github.com/users/krismetha/repos",
      "events_url": "https://api.github.com/users/krismetha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krismetha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T01:26:31Z",
    "updated_at": "2014-06-27T01:26:31Z",
    "author_association": "NONE",
    "body": "Hi, \n\nI have taken a look at both of the above mentioned issues, but it is not really what this question is about.\n\nBelow is an equivalent code for Python using Pandas, as my first post was for R\n\n> import pandas as pd, numpy as np\n> \n> df = pd.DataFrame( np.hstack(([['a']]_3 + [['b']]_3 +[['c']]*3 , [[1],[3],[6]] \\* 3 , [ [i] for i in range(1,10)])))\n> df = df.set_index([0,1])\n> \n> df2 = pd.DataFrame( np.hstack(([['a']]*3 ,  [ [i] for i in range(4,7)] )))\n> df2 = df2.set_index([0,1])\n\n![image](https://cloud.githubusercontent.com/assets/7909782/3406816/8476b624-fd97-11e3-9b15-5b04c7bed6d7.png)\n\n![image](https://cloud.githubusercontent.com/assets/7909782/3406874/19266ff2-fd99-11e3-9ccc-1f91aa1a5f1c.png)\n\n![image](https://cloud.githubusercontent.com/assets/7909782/3406879/3660b640-fd99-11e3-910c-80ddb7015acb.png)\n\nSo my question is whether there is an operator that is equivalent to R join argument roll = True above?\n\neg, something like df2.join(df, roll=True), and this gives:\n![image](https://cloud.githubusercontent.com/assets/7909782/3406842/4b3c3856-fd98-11e3-8a51-a9c3ef81d6f4.png)\n\nthe 2 in a,4 and a,5 comes from the fact that the original df.ix[a,3] is 2, which is the index right before df.ix[a,6] . In other words, this is a rolling join - rolling upward.  \n\nLooking at this another way, rolling join is similar to using join, then fillna(method='pad') but the slight difference is that the first few rows would still end up being NA, like the above case.\n\nThanks again,\nKris\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149720602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7546#issuecomment-149720602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7546",
    "id": 149720602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcyMDYwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T22:26:27Z",
    "updated_at": "2015-10-20T22:26:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as stale. pls reopen if still an issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/296146409",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7546#issuecomment-296146409",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7546",
    "id": 296146409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjE0NjQwOQ==",
    "user": {
      "login": "Make42",
      "id": 4905185,
      "node_id": "MDQ6VXNlcjQ5MDUxODU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Make42",
      "html_url": "https://github.com/Make42",
      "followers_url": "https://api.github.com/users/Make42/followers",
      "following_url": "https://api.github.com/users/Make42/following{/other_user}",
      "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Make42/subscriptions",
      "organizations_url": "https://api.github.com/users/Make42/orgs",
      "repos_url": "https://api.github.com/users/Make42/repos",
      "events_url": "https://api.github.com/users/Make42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Make42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-21T09:45:55Z",
    "updated_at": "2017-04-21T09:45:55Z",
    "author_association": "NONE",
    "body": "### Rolling join is _not_ `join` + `fillna`\r\n\r\nA rolling join is _not_ the same as a `join` and a `fillna`! That would only be the case if the key of the table that is joined against (in terms of data.table that would be the left table and a right-join) has equivalents in the main table. A data.table rolling join does not require this.\r\n\r\n###  Solution in pandas:\r\n\r\nThere is a solution though in pandas. Let's assume your right data.table is table A and your left data.table is table B.\r\n\r\n1. Sort the table A and and B each by key.\r\n2. Add a column `tag` to A which are all 0 and a column `tag` to B that are all 1.\r\n3. Delete all columns except the key and `tag`from B (can be omitted, but it is clearer this way) and call the table B'. Keep B as an original - we are going to need it later.\r\n4. Concatenate A with B' to C and ignore the fact that the rows from B' has many NAs.\r\n5. Sort C by key.\r\n6. Make a new cumsum column with `C = C.assign(groupNr = np.cumsum(C.tag))`\r\n7. Using filtering (`query`) on `tag` get rid of all B'-rows.\r\n8. Add a running counter column `groupNr` to the original B (integers from 0 to N-1 or from 1 to N, depending on whether you want forward or backward rolling join).\r\n9. Join B with C on `groupNr`.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/301918495",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7546#issuecomment-301918495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7546",
    "id": 301918495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTkxODQ5NQ==",
    "user": {
      "login": "PaluchowskiMatthew",
      "id": 13195985,
      "node_id": "MDQ6VXNlcjEzMTk1OTg1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/13195985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaluchowskiMatthew",
      "html_url": "https://github.com/PaluchowskiMatthew",
      "followers_url": "https://api.github.com/users/PaluchowskiMatthew/followers",
      "following_url": "https://api.github.com/users/PaluchowskiMatthew/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaluchowskiMatthew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaluchowskiMatthew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaluchowskiMatthew/subscriptions",
      "organizations_url": "https://api.github.com/users/PaluchowskiMatthew/orgs",
      "repos_url": "https://api.github.com/users/PaluchowskiMatthew/repos",
      "events_url": "https://api.github.com/users/PaluchowskiMatthew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaluchowskiMatthew/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T21:18:02Z",
    "updated_at": "2017-05-16T21:18:02Z",
    "author_association": "NONE",
    "body": "R newbie here. @Make42 Could you please provide short python code snippet with all steps or at least clarify step 7 because I am not sure I get it. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302872503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7546#issuecomment-302872503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7546",
    "id": 302872503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg3MjUwMw==",
    "user": {
      "login": "Make42",
      "id": 4905185,
      "node_id": "MDQ6VXNlcjQ5MDUxODU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4905185?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Make42",
      "html_url": "https://github.com/Make42",
      "followers_url": "https://api.github.com/users/Make42/followers",
      "following_url": "https://api.github.com/users/Make42/following{/other_user}",
      "gists_url": "https://api.github.com/users/Make42/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Make42/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Make42/subscriptions",
      "organizations_url": "https://api.github.com/users/Make42/orgs",
      "repos_url": "https://api.github.com/users/Make42/repos",
      "events_url": "https://api.github.com/users/Make42/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Make42/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T13:13:48Z",
    "updated_at": "2017-05-20T13:13:48Z",
    "author_association": "NONE",
    "body": "@PaluchowskiMatthew: I did an example for you. Maybe you can give me some points on stackoverflow: http://stackoverflow.com/a/43539437/4533188"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302872682",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7546#issuecomment-302872682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7546",
    "id": 302872682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg3MjY4Mg==",
    "user": {
      "login": "PaluchowskiMatthew",
      "id": 13195985,
      "node_id": "MDQ6VXNlcjEzMTk1OTg1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/13195985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PaluchowskiMatthew",
      "html_url": "https://github.com/PaluchowskiMatthew",
      "followers_url": "https://api.github.com/users/PaluchowskiMatthew/followers",
      "following_url": "https://api.github.com/users/PaluchowskiMatthew/following{/other_user}",
      "gists_url": "https://api.github.com/users/PaluchowskiMatthew/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PaluchowskiMatthew/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PaluchowskiMatthew/subscriptions",
      "organizations_url": "https://api.github.com/users/PaluchowskiMatthew/orgs",
      "repos_url": "https://api.github.com/users/PaluchowskiMatthew/repos",
      "events_url": "https://api.github.com/users/PaluchowskiMatthew/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PaluchowskiMatthew/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T13:16:58Z",
    "updated_at": "2017-05-20T13:16:58Z",
    "author_association": "NONE",
    "body": "@Make42 Awesome thanks! +1 on stackoverflow"
  }
]
