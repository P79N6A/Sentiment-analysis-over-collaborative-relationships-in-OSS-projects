[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168194917",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11935#issuecomment-168194917",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11935",
    "id": 168194917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODE5NDkxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T13:44:21Z",
    "updated_at": "2015-12-31T13:44:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@CamDavidsonPilon \n\nI am not sure why you think this is necessary.\n\nfor example\n\n`df.sort_values(col).groupby(col2).cumsum()` is WAY more performant that what you are doing above.\n\nand MUCH more clear.\n\ngroupby are quite efficient. Yielding rows is NOT PERFORMANT at all.\n\nI don't find this syntax useful and IMHO is is much less clear. To be honest its to magicy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168195107",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11935#issuecomment-168195107",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11935",
    "id": 168195107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODE5NTEwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T13:45:00Z",
    "updated_at": "2015-12-31T13:45:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you want to open an issue for discussion, ok, but this would have to have be performance neutral and add to the API in a clear way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168197841",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11935#issuecomment-168197841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11935",
    "id": 168197841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODE5Nzg0MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T13:56:46Z",
    "updated_at": "2015-12-31T13:56:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll take a look later. My initial reaction was similar to Jeff's, that `overby` is combining multiple steps into a single function (I don't quite understand it yet, so I could be wrong; will look more over the weekend).\n\nCould you explain a bit more about your \"Accumulating fact tables\" example? I could be wrong, but I think that it can be achieved with a `groupby`and `rolling_apply`, where the window is 2 and the aggregation functions are `{'first_purchase_at': 'min', '10th_purchase_at': something_more_complicated, 'number_of_purchases': 'sum'}`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/168221936",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11935#issuecomment-168221936",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11935",
    "id": 168221936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODIyMTkzNg==",
    "user": {
      "login": "CamDavidsonPilon",
      "id": 884032,
      "node_id": "MDQ6VXNlcjg4NDAzMg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/884032?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CamDavidsonPilon",
      "html_url": "https://github.com/CamDavidsonPilon",
      "followers_url": "https://api.github.com/users/CamDavidsonPilon/followers",
      "following_url": "https://api.github.com/users/CamDavidsonPilon/following{/other_user}",
      "gists_url": "https://api.github.com/users/CamDavidsonPilon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CamDavidsonPilon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CamDavidsonPilon/subscriptions",
      "organizations_url": "https://api.github.com/users/CamDavidsonPilon/orgs",
      "repos_url": "https://api.github.com/users/CamDavidsonPilon/repos",
      "events_url": "https://api.github.com/users/CamDavidsonPilon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CamDavidsonPilon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-31T16:51:30Z",
    "updated_at": "2015-12-31T16:51:30Z",
    "author_association": "NONE",
    "body": "Right, so sorting before grouping will preserve order within groups. That settles this then. \n\nContext: this is a port of a very useful function/API in PySpark, where order is not guaranteed when doing a groupBy.\n\nThanks for the discussion!\n"
  }
]
