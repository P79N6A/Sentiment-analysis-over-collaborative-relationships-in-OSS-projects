[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424844701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22844#issuecomment-424844701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22844",
    "id": 424844701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg0NDcwMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T19:42:48Z",
    "updated_at": "2018-09-26T19:42:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> First, the code would be simpler, as all the bash stuff would be automatically managed\r\n\r\nI think we'll still need something similar to what's currently in `lint.sh`, since we have custom checks that aren't part of flake8.\r\n\r\nI agree we should do something to make seeing lint failures easier for users. I'm not sure whether this needs to be done on azure or not. I haven't played with more complex pipelines or reporting, beyond the basic \"here's a file of junit XML results\".\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424850241",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22844#issuecomment-424850241",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22844",
    "id": 424850241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg1MDI0MQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T20:01:17Z",
    "updated_at": "2018-09-26T20:01:17Z",
    "author_association": "MEMBER",
    "body": "I was having a look, and I think for the ones that are a single command (`flake8`, `cpplint`, `grep`...) should be just as the example in the description.\r\n\r\nIf I'm not wrong, the only other case that we've got are loops. I guess it's possible to have the whole loop as the script, but that wouldn't show directly which file failed (it'd probably be an improvement, even if to know the exact file we need to check the log). But I think it'd be even better, if azure provides a way to create a separate item for the values of the loop. Not sure if that's doable or how complex would the configuration. This is a case:\r\n```\r\n    echo \"Linting *.c and *.h\"\r\n    for path in '*.h' 'parser' 'ujson'\r\n    do\r\n        echo \"linting -> pandas/_libs/src/$path\"\r\n        cpplint --quiet --extensions=c,h --headers=h --filter=-readability/casting,-runtime/int,-build/include_subdir --recursive pandas/_libs/src/$path\r\n        if [ $? -ne \"0\" ]; then\r\n            RET=1\r\n        fi\r\n    done\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425113080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22844#issuecomment-425113080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22844",
    "id": 425113080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTExMzA4MA==",
    "user": {
      "login": "chrisrpatterson",
      "id": 185122,
      "node_id": "MDQ6VXNlcjE4NTEyMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/185122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisrpatterson",
      "html_url": "https://github.com/chrisrpatterson",
      "followers_url": "https://api.github.com/users/chrisrpatterson/followers",
      "following_url": "https://api.github.com/users/chrisrpatterson/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisrpatterson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisrpatterson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisrpatterson/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisrpatterson/orgs",
      "repos_url": "https://api.github.com/users/chrisrpatterson/repos",
      "events_url": "https://api.github.com/users/chrisrpatterson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisrpatterson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T14:26:17Z",
    "updated_at": "2018-09-27T14:26:17Z",
    "author_association": "NONE",
    "body": "@datapythonista we have a model for highlighting issues in the log and in the summary view that also flows back to checks.\r\n\r\nYou can echo out \r\n##vso[task.logissue type=error;sourcepath=consoleapp/main.cs;linenumber=1;columnnumber=1;code=100;]this is an error\r\n\r\nAnd that will get a treatment on the summary view that will include a link to the sourcefile and line number where the issues are found.  For more details see https://github.com/Microsoft/vsts-tasks/blob/master/docs/authoring/commands.md. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425667100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22844#issuecomment-425667100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22844",
    "id": 425667100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTY2NzEwMA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-29T18:44:10Z",
    "updated_at": "2018-09-30T10:33:43Z",
    "author_association": "MEMBER",
    "body": "Thanks for the info @chrisrpatterson. That would be really nice to have. But I don't see how can I get this with flake8, which is generating the messages. The output we've got from the command is something like this:\r\n```\r\nstat_ops.py:110:5: F811 redefinition of unused 'setup' from line 4\r\nstrings.py:95:9: E731 do not assign a lambda expression, use a def\r\ntimeseries.py:1:1: F401 'warnings' imported but unused\r\n```\r\nIs there a \"standards\" way in Azure to change the format? We could do a script that changes from one format to another, and call `flake8 . | azure_log_flake8_formatter`, but seems suboptimal that every project has to implement the `azure_log_flake8_formatter`.\r\n\r\n@zooba suggested to start the lines with `##[error]`, which has the same problem (except that it's easier to implement with awk: `flake8 . | awk '{print \"##[error] \" $0}'`, but that looses the exit status and would make the build succeed), so I'm not sure if I'm missing something here.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425739591",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22844#issuecomment-425739591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22844",
    "id": 425739591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTczOTU5MQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-30T18:07:46Z",
    "updated_at": "2018-09-30T18:07:54Z",
    "author_association": "MEMBER",
    "body": "ok, in a first check to flake8 parameters I didn't see the format could be specified, but I double checked, and everything makes sense now: `flake8 --format=\"##vso[task.logissue type=error;sourcepath=%(path)s;linenumber=%(row)s;columnnumber=%(col)s;code=%(code)s;]%(text)s\"`\r\n\r\nWill give it a try.\r\n`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425745128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22844#issuecomment-425745128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22844",
    "id": 425745128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTc0NTEyOA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-30T19:28:48Z",
    "updated_at": "2018-09-30T19:28:48Z",
    "author_association": "MEMBER",
    "body": "Made some progress on this, and managed to make flake8 generate the correct output:\r\n\r\nhttps://dev.azure.com/pandas-dev/pandas/_build/results?buildId=437&view=logs\r\n\r\nIt really improves the clarity of the errors (and even much more compared to our current solution, in the travis log). But still some issues:\r\n- cpplint doesn't seem to allow custom output (it has a `--output` parameter that can be `emacs`, `vs7`, `eclipse`... but not a custom one)\r\n- The number of errors reported by azure is wrong. We've got like 50 errors in the first failing step if we enter the log, but in the preview there are 11, and it says we've got just 11. Weird\r\n- The link is not created. I see there is a `##vso[task.setendpoint]value` option in https://github.com/Microsoft/vsts-tasks/blob/master/docs/authoring/commands.md, but it's unclear how this needs to be used.\r\n\r\nWe probably don't want to change the `flake8` format in `setup.cfg` (would change it when `flake8` is run locally too). But in any case, doesn't seem to work, as the `%(path)s` are rendered by `ConfigParser`, and it fails to install flake8 in azure."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425906764",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22844#issuecomment-425906764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22844",
    "id": 425906764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTkwNjc2NA==",
    "user": {
      "login": "chrisrpatterson",
      "id": 185122,
      "node_id": "MDQ6VXNlcjE4NTEyMg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/185122?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisrpatterson",
      "html_url": "https://github.com/chrisrpatterson",
      "followers_url": "https://api.github.com/users/chrisrpatterson/followers",
      "following_url": "https://api.github.com/users/chrisrpatterson/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisrpatterson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisrpatterson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisrpatterson/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisrpatterson/orgs",
      "repos_url": "https://api.github.com/users/chrisrpatterson/repos",
      "events_url": "https://api.github.com/users/chrisrpatterson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisrpatterson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-01T13:26:25Z",
    "updated_at": "2018-10-01T13:26:25Z",
    "author_association": "NONE",
    "body": "We have been having some discussions about other ways to make this sort of parsing a bit more generic but nothing has come to us yet.  However, similar to test results there are probably a relatively small number of regex based formats we could build in support for recognizing.  The other option might be to have a generic regex you could specify as part of the job or even the step that would be used for parsing out issues."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443555711",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22844#issuecomment-443555711",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22844",
    "id": 443555711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzU1NTcxMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T00:11:41Z",
    "updated_at": "2018-12-03T00:11:57Z",
    "author_association": "MEMBER",
    "body": "> it'll be faster to see which is the reason for the fail in the azure pipeline dashboard, instead of having to go into the details of the travis log.\r\n\r\nFYI @pandas-dev/pandas-core : the reason why we can't view the pipeline dashboard for Travis is because we don't have the Travis GitHub app enabled on this repository.\r\n\r\nUnfortunately, there is no way to migrate from `travis-ci.org` to `travis-ci.com` at the moment, which is pre-requisite for using the GitHub app."
  }
]
