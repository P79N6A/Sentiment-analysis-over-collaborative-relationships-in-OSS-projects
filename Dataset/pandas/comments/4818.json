[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24288897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-24288897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 24288897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg4ODk3",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T01:21:11Z",
    "updated_at": "2013-09-12T01:21:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice. Perhaps on a more fundamental level, we could simply expose the `Series.str` methods to all pandas index classes and allow for pattern searches across labels that way? I tried explaining (rather poorly) use cases for this type of functionality a while back, don't really know how well it came across:\nhttps://github.com/pydata/pandas/pull/2922#issuecomment-14194276\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24310684",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-24310684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 24310684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzEwNjg0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T11:16:45Z",
    "updated_at": "2013-09-12T11:16:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "We've talked a few times about moving min, max, & friends to a mixin so they can be used for Index as well as series, etc. We could try to do the same thing for `str` too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868093",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-24868093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 24868093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MDkz",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:30:53Z",
    "updated_at": "2013-09-21T18:30:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm often doing things like \n\n```\nvar_names = df.filter(regex=\"pat\").columns.tolist()\n```\n\nWould be great if I could just do `df.columns.select(\"pat\").tolist()` or something.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-24868108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 24868108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MTA4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:32:04Z",
    "updated_at": "2013-09-21T18:32:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "fyi...you don't need the `tolist` usually, as the returned index is already pretty list-like\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-24868115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 24868115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MTE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:32:30Z",
    "updated_at": "2013-09-21T18:32:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "wouldn't `df.columns.filter('pat')` be better?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24868186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-24868186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 24868186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY4MTg2",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T18:37:51Z",
    "updated_at": "2013-09-21T18:37:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, sure. Except regex isn't the default arg for filter (unfortunately). It's what I want 95% of the time.\n\nAlso, not list-like enough for me\n\n```\n[\"a\"] + pd.Index([\"b\", \"c\"])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37257846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37257846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37257846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjU3ODQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T02:35:21Z",
    "updated_at": "2014-03-11T02:35:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jseabold \n\nI think its trivial to allow `filter` to work (on the specified axis, defaults to 1, e.g. columns) on a frame\nwith a regex if it is passed directly, e.g.\n\n`df.filter('a_reg_ex')`, while if its list-like it will match exactly, e.g. `df.filter(['A','B'])`\n\nis their a reason didn't do this before? (this is not even a big API change and is backwards compatible)\n\nat the same time is their a reason at all for `select`? (which filter actually uses, but can be folded in)\n\n@hayd @jorisvandenbossche \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37260606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37260606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37260606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYwNjA2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T03:41:57Z",
    "updated_at": "2014-03-11T03:41:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is a slight API change, as atm you can do (though I guess this is break-able):\n\n```\nIn [11]: df = pd.DataFrame([[1, 2], [1, 3], [5, 6]], columns=['A', 'B'])\n\nIn [12]: df.filter('AB')  # equivalent to ['A', 'B']\nOut[12]:\n   A  B\n0  1  2\n1  1  3\n2  5  6\n\nIn [13]: df.filter(regex='AB')  # works\nOut[13]:\nEmpty DataFrame\nColumns: []\nIndex: [0, 1, 2]\n```\n\nI had no idea what like arg did without checking source, it's basically just a subset of regex (in the spirit of SQL's like)...\n\n:+1: on taking string regex or list-like or a crit (a la select), and maybe dep the other args. I reckon alias select to filter and depreciate it (but not remove it). Happy to take this and do drop at the same time.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37260787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37260787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37260787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYwNzg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T03:46:42Z",
    "updated_at": "2014-03-11T03:46:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Go for it!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37261998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37261998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37261998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYxOTk4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T04:18:38Z",
    "updated_at": "2014-03-11T04:18:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, like is subtley different in that it converts stuff to string first (regex raises horribly if there is any non-strings)... e.g. if you have `df.columns = [0, 'a']` should regex='0' find the first col? (basically should we convert to string), should there be a way to choose not to grab ints?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37262154",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37262154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37262154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYyMTU0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T04:22:40Z",
    "updated_at": "2014-03-11T04:22:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, select says above it \"# TODO: Check if this was clearer in 0.12\"...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37264170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37264170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37264170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjY0MTcw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T05:15:30Z",
    "updated_at": "2014-03-11T05:16:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "This function can be significantly simplified, and also work with dupe colnames.\n\nAny thoughts on a good argname (items is not that great)?\n\n```\n    def filter(self, items, axis=None, **kwargs):\n        \"\"\"\n        Restrict the info axis to set of items or wildcard\n\n        Parameters\n        ----------\n        items : Either function, regex or list-like\n            Boolean function to be called on each index (label)\n            Regular expression to be tested against each index\n            List of info axis to restrict to\n\n        axis : int\n```\n\nmaybe labels (a la drop)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37284034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37284034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37284034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjg0MDM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T11:03:25Z",
    "updated_at": "2014-03-11T11:03:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "crit? matcher? selection? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37316183",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37316183",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37316183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE2MTgz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T16:26:20Z",
    "updated_at": "2014-03-11T16:26:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was thinking of unifying the args for filter and drop, so perhaps makes sense to use drop's args. see PR\n\nIs there an argument to keep filter rather than select?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37316439",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37316439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37316439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE2NDM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T16:28:20Z",
    "updated_at": "2014-03-11T16:28:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "in theory 1 should apply to data (think query/select)\nand 1 labels\n\ni think somewhat arbitrary but filter already does labels\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37316540",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-37316540",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 37316540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE2NTQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T16:29:06Z",
    "updated_at": "2014-03-11T16:29:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "also may want to post on mailing list to get some more feedback on this once u have a nice proposed API \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/472317506",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-472317506",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 472317506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjMxNzUwNg==",
    "user": {
      "login": "tik0",
      "id": 3391191,
      "node_id": "MDQ6VXNlcjMzOTExOTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3391191?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tik0",
      "html_url": "https://github.com/tik0",
      "followers_url": "https://api.github.com/users/tik0/followers",
      "following_url": "https://api.github.com/users/tik0/following{/other_user}",
      "gists_url": "https://api.github.com/users/tik0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tik0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tik0/subscriptions",
      "organizations_url": "https://api.github.com/users/tik0/orgs",
      "repos_url": "https://api.github.com/users/tik0/repos",
      "events_url": "https://api.github.com/users/tik0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tik0/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T07:57:37Z",
    "updated_at": "2019-03-13T08:03:29Z",
    "author_association": "NONE",
    "body": "I just want to leave a simple one-liner (almost, if on emerges everything together) here, how one could do this. Drop all columns starting with \"enc_\":\r\n```\r\nimport pandas as pd\r\nimport re\r\ndef filter(df, regex):\r\n    matches = [match[0] for match in [re.findall( regex, col) for col in df.columns] if len(match)]\r\n    return df.drop(matches, axis=1)\r\nd = {'enc_1': [1, 2], 'enc_2': [3, 4], 'dec_2': [3, 4]}\r\ndf = pd.DataFrame(data=d)\r\nfilter(df, r'enc_.*')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/472697424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4818#issuecomment-472697424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4818",
    "id": 472697424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjY5NzQyNA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-14T04:10:30Z",
    "updated_at": "2019-03-14T04:10:30Z",
    "author_association": "MEMBER",
    "body": "@tik0 you can use a regex to do that. Something like:\r\n\r\n```python\r\ndf.filter(regex=r'^(?!enc_)')\r\n```\r\n\r\n@jreback this is a pretty old issue but I think it's duplicative of what's available already in filter. Any reason to keep this one open?"
  }
]
