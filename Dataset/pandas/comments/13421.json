[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225187545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225187545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225187545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE4NzU0NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T13:52:29Z",
    "updated_at": "2016-06-10T13:53:31Z",
    "author_association": "MEMBER",
    "body": "The issue is rather that pandas does not parses that hierarchical dtype as you expect:\n\n```\nIn [74]: arr = np.zeros(3, [('q', [('x',float), ('y',int)])])\n\nIn [76]: pd.DataFrame(arr)\nOut[76]:\n          q\n0  (0.0, 0)\n1  (0.0, 0)\n2  (0.0, 0)\n```\n\nGiven the above result, the rest (empty frame when providing columns) is logical again. \nHowever, I am not sure what the correct way to convert such a recarray should be. The above also seems to make sense, as the records of the recarray consist of tuples, the resulting dataframe has tuples as well.\n\nBTW, I closed the previous issue, but that does not mean it is prohibited to ask further questions on that topic over there :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225254651",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225254651",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225254651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI1NDY1MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:08:19Z",
    "updated_at": "2016-06-10T18:08:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "This sort of works with the only constructor that accepts rec-arrays.\n\n```\nIn [4]: pd.DataFrame.from_records(arr, columns=ind)\nOut[4]: \n          q\n0  (0.0, 0)\n1  (0.0, 0)\n2  (0.0, 0)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225255133",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225255133",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225255133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI1NTEzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:10:02Z",
    "updated_at": "2016-06-10T18:10:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is essentially another case of #7893 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225266526",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225266526",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225266526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2NjUyNg==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:55:05Z",
    "updated_at": "2016-06-10T18:55:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I  disagree that this is another case of #7893.  As I tried to explain:\n\n> Either the columns are considered non-matching, in which case the result should be an empty DataFrame, or they do match, in which case the result should be a DataFrame with contents from the input array.\n\nThe current behavior is that an erroneous DataFrame is created, which does not contain data from the input array, but is also not empty.  If Pandas recognizes that the column names match, it should use the input data; if it believes the names don't match then the result should be an empty DataFrame.  The current behavior is half-and-half.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225267017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225267017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225267017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2NzAxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:57:06Z",
    "updated_at": "2016-06-10T18:57:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "and that's a bug I agree\n\nwe just need another issue that covers the same material as another issue \nit will just even more lost - if you would like to address that issue then you can include this as a test case\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225267258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225267258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225267258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2NzI1OA==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:58:04Z",
    "updated_at": "2016-06-10T18:58:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "What I would like more than anything is to have a simple way to take a hierarchical recarray (as my example `arr`) and get it into a DataFrame with MultiIndex.  I think you see what I am _trying_ to do--can you offer a workaround?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225267664",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225267664",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225267664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2NzY2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:59:41Z",
    "updated_at": "2016-06-10T18:59:41Z",
    "author_association": "MEMBER",
    "body": "@jreback the result you show from `from_records` is exactly the same as from `DataFrame()`:\n\n```\nIn [1]: arr = np.zeros(3, [('q', [('x',float), ('y',int)])])\n\nIn [2]: pd.DataFrame(arr)\nOut[2]:\n          q\n0  (0.0, 0)\n1  (0.0, 0)\n2  (0.0, 0)\n\nIn [3]: pd.DataFrame.from_records(arr)\nOut[3]:\n          q\n0  (0.0, 0)\n1  (0.0, 0)\n2  (0.0, 0)\n\nIn [4]: ind = pd.MultiIndex.from_tuples([('q','x'),('q','y')])\n\nIn [5]: pd.DataFrame.from_records(arr, columns=ind)\nOut[5]:\n          q\n0  (0.0, 0)\n1  (0.0, 0)\n2  (0.0, 0)\n```\n\nSo in the last line, the `columns=ind` is actually ignored which rather looks like a bug\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225267699",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225267699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225267699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2NzY5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T18:59:50Z",
    "updated_at": "2016-06-10T18:59:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "assign the columns directly\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225267875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225267875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225267875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2Nzg3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T19:00:36Z",
    "updated_at": "2016-06-10T19:00:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "not even sure why you would work with rec arrays to begin with - they r not very friendly (not to mention have an inefficient memory repr)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225269029",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225269029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225269029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI2OTAyOQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T19:05:21Z",
    "updated_at": "2016-06-10T19:05:21Z",
    "author_association": "MEMBER",
    "body": "@jreback I agree that rec arrays don't work very well, but I disagree that they are memory inefficient -- the data is all packed together in the dtype, so that seems perfectly reasonable to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225271889",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225271889",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225271889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI3MTg4OQ==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T19:18:15Z",
    "updated_at": "2016-06-10T19:18:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback to use a non-hierarchical example, let's say I have received from another library a big list of tuples and I have a dtype list which corresponds to them, e.g.:\n\n```\ndata = [(1.2, 'foo'), (3.4, 'bar')] # in reality wider and very long, comes from another library\ndtype = [('value', float), ('name', 'S3')]\n```\n\nNow in NumPy I do this:\n\n```\nnp.array(data, dtype)\n```\n\nAnd I get something useful:\n\n```\narray([(1.2, 'foo'), (3.4, 'bar')], \n    dtype=[('value', '<f8'), ('name', 'S3')])\n```\n\nI can then construct a DataFrame from that array.  Is there a better way to construct a DataFrame with explicit, heterogeneous column types?  I don't want Pandas to guess the column types.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225272967",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225272967",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225272967,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI3Mjk2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T19:22:59Z",
    "updated_at": "2016-06-10T19:22:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is exactly what .from_records() does\nsimply assign the columns after if they r MultiIndexes (which is a bug)\n\nthey are memory inefficient as pandas has to convert then to a columnar layout \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225280489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225280489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225280489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI4MDQ4OQ==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T19:57:56Z",
    "updated_at": "2016-06-10T20:06:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "This doesn't work--the dtype cannot be specified:\n\n```\ndata = [(1.2, 5), (3.4, 6)]\ndtype = [('value', float), ('name', 'i2')]\npd.DataFrame.from_records(data)._data\n```\n\nIt gives:\n\n```\nAxis 1: RangeIndex(start=0, stop=2, step=1)\nFloatBlock: slice(0, 1, 1), 1 x 2, dtype: float64\nIntBlock: slice(1, 2, 1), 1 x 2, dtype: int64\n```\n\nOnly by using NumPy do I get what I want:\n\n```\npd.DataFrame.from_records(np.array(data, dtype))._data\n\nAxis 1: RangeIndex(start=0, stop=2, step=1)\nFloatBlock: slice(0, 1, 1), 1 x 2, dtype: float64\nIntBlock: slice(1, 2, 1), 1 x 2, dtype: int16\n```\n\nNote we now see int16 rather than int64.  You have said that using recarray is memory-inefficient, but I am struggling because in my use case, _not_ using recarray causes inefficiency in Pandas.\n\nIs there a way to construct a DataFrame with multiple columns of different types efficiently from a sequence of tuples?  Obviously I don't have an efficient way to get one column at a time from the tuples, so I can't easily construct a bunch of Series etc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225282649",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225282649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225282649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI4MjY0OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T20:07:13Z",
    "updated_at": "2016-06-10T20:13:30Z",
    "author_association": "MEMBER",
    "body": "That `pd.DataFrame.from_records(data, dtype)` does not give the desired result is expected, as the second keyword argument is `index` (so you are setting the dtype list as the index values).\n\nThere is no way (as far as I know) to pass directly a compound dtype without making a numpy array first. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225283282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225283282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225283282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI4MzI4Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T20:10:08Z",
    "updated_at": "2016-06-10T20:10:08Z",
    "author_association": "MEMBER",
    "body": "@jzwinck This gives data in the form you want:\n\n```\ndtype = [('value', float), ('name', 'i2')]\ndata = np.array([(1.2, 5), (3.4, 6)], dtype)\npd.DataFrame.from_records(data).dtypes\n```\n\nYou need to make the numpy array with the proper dtype _before_ passing it to `from_records`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225283539",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225283539",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225283539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI4MzUzOQ==",
    "user": {
      "login": "jzwinck",
      "id": 1216791,
      "node_id": "MDQ6VXNlcjEyMTY3OTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1216791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzwinck",
      "html_url": "https://github.com/jzwinck",
      "followers_url": "https://api.github.com/users/jzwinck/followers",
      "following_url": "https://api.github.com/users/jzwinck/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzwinck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzwinck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzwinck/subscriptions",
      "organizations_url": "https://api.github.com/users/jzwinck/orgs",
      "repos_url": "https://api.github.com/users/jzwinck/repos",
      "events_url": "https://api.github.com/users/jzwinck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzwinck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T20:11:16Z",
    "updated_at": "2016-06-10T20:11:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche and @shoyer Right, so what you and I are all saying is that constructing a NumPy recarray (structured array) is a prerequisite to constructing a Pandas DataFrame.  Yet above I am being told that recarrays are bad and inefficient.  So I don't really understand what to take away from all this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225283748",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13421#issuecomment-225283748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13421",
    "id": 225283748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTI4Mzc0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T20:12:18Z",
    "updated_at": "2016-06-10T20:13:03Z",
    "author_association": "MEMBER",
    "body": "@jzwinck It is only a prerequisite when you want to specify a compound dtype. Otherwise, you can pass the list of tuples just to `DataFrame()` and it will work without making a recarray first.\n\nFurther, you only have to worry about this if memory/performance of constructing your frame is a bottleneck.\n"
  }
]
