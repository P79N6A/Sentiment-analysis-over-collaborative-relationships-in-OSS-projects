[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341107960",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341107960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341107960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTEwNzk2MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T13:37:07Z",
    "updated_at": "2017-11-01T13:37:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like a bad interaction between the name mangling and multiple headers.\r\n\r\nThis is a bit tricky though, since (IIUC) not name mangling here would cause data lose since you don't have unique columns. I'm not sure the best behavior, but the most consistent is to probably just mangle the inner-most level's names?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341124093",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341124093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341124093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTEyNDA5Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T14:35:14Z",
    "updated_at": "2017-11-01T15:28:01Z",
    "author_association": "MEMBER",
    "body": "Iâ€™d have to confirm later but on initial glance I think the problem stems from line 799 in parsers.pyx where the mangling is coercing the duplicated name into a string value. \r\n\r\nIf that holds true would it not make sense to check the type of the name variable and only perform the mangling if it is a string, providing some warning to the user instead in the case of a sequence?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341260542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341260542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341260542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTI2MDU0Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T22:20:12Z",
    "updated_at": "2017-11-01T22:25:12Z",
    "author_association": "MEMBER",
    "body": "My original thought was wrong, but the problem here seems to stem from the _maybe_dedup_names function. I edited the function to the below:\r\n\r\n    def _maybe_dedup_names(self, names):\r\n        ...\r\n        if self.mangle_dupe_cols:\r\n            names = list(names)  # so we can index\r\n            counts = defaultdict(int)\r\n\r\n            for i, col in enumerate(names):\r\n                if isinstance(col, tuple):\r\n                    continue\r\n                ...\r\n\r\nAnd this worked as intended. However, this assumes that multi-indexed columns will always be passed in as a tuple, which I'm not sure is valid. An alternate approach would be to differentiate between strings and tuples / lists, but I wasn't sure off the top of my head of a completely reliable way to do that across all Python versions, so there could be some complexity trade-offs there.\r\n\r\n@TomAugspurger  - do you have a point of view on this? The above would be the simplest solution, but I'm certainly happy to work on something a more robust if we want to handle more than tuples and feel its worth the added complexity. Let me know what you think and I can work something up in a PR"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341387159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341387159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341387159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTM4NzE1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T11:00:48Z",
    "updated_at": "2017-11-02T11:00:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @gfyoung who is more familiar with this code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341476507",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341476507",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341476507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTQ3NjUwNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T16:21:16Z",
    "updated_at": "2017-11-02T16:21:16Z",
    "author_association": "MEMBER",
    "body": "@jpiabrantes : Thanks for reporting this!  Indeed, duplicate data is annoying to handle in `pandas`, and while we've mostly ironed out the single-column case, it does not surprise me that something would have broken in the `MultiIndex` case.\r\n\r\nI think you should augment `_maybe_dedup_names` to account for the `MultiIndex` case more carefully.  I agree with your suggest though to \"dedup\" at the lowest row.  Give it a shot in a PR!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341578409",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341578409",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341578409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU3ODQwOQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T22:35:54Z",
    "updated_at": "2017-11-02T22:35:54Z",
    "author_association": "MEMBER",
    "body": "Well I was able to get the correct columns returned with the modifications called out above, but what I didn't notice earlier until I started testing was that it impacted the values within the DataFrame. The issue for that is that the read function within the CParserWrapper converts the data into a dict, using the col_names as a key...So when not mangled the values of the data frame being returned are incorrect.\r\n\r\nStill debugging but if anyone has experience dealing with that or thoughts on how to resolve let me know"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341578606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341578606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341578606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU3ODYwNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T22:37:05Z",
    "updated_at": "2017-11-02T22:37:05Z",
    "author_association": "MEMBER",
    "body": "@WillAyd : Could you provide an example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341581769",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341581769",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341581769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU4MTc2OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T22:54:07Z",
    "updated_at": "2017-11-02T22:54:07Z",
    "author_association": "MEMBER",
    "body": "Assuming you add the code I provided earlier to the _maybe_dedup_names function (actual solution would be more robust, but that will work for this comment) try the following:\r\n\r\n    data = \"A,A,B\\none,one,two\\n0,34,0.1\"\r\n    pd.read_csv(io.StringIO(data), header=[0,1])\r\n\r\nDoing so yields:\r\n\r\n\r\nA |  | B\r\n-- | -- | --\r\none | one | two\r\n34 | 34 | 0.1\r\n\r\n\r\nThe correct column / MultiIndex will be built, but you'll notice that the values of the DataFrame are 34, 34 and 0.1; not 0, 34 and 0.1 as expected.\r\n\r\nI think this gets mucked up within the read functions where you see lines like:\r\n\r\n    data = dict((k, v) for k, (i, v) in zip(names, data))\r\n\r\nBecause there are only 2 unique names to be shared across the 3 columns, and using the names within the keys of the dict prevent that from parsing correctly"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341583558",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341583558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341583558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU4MzU1OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T23:03:06Z",
    "updated_at": "2017-11-02T23:03:34Z",
    "author_association": "MEMBER",
    "body": "@WillAyd : It doesn't look like you're mangling the second level of the names (or name tuple, rather), judging from what I can see from here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341584183",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341584183",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341584183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU4NDE4Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T23:06:37Z",
    "updated_at": "2017-11-02T23:06:44Z",
    "author_association": "MEMBER",
    "body": "Are you expecting the output to look something like this?\r\n\r\n\r\nA | Â  | B\r\n-- | -- | --\r\none | one.1 | two\r\n0 | 34 | 0.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341584557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18062#issuecomment-341584557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18062",
    "id": 341584557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU4NDU1Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T23:08:49Z",
    "updated_at": "2017-11-02T23:08:49Z",
    "author_association": "MEMBER",
    "body": "Yes, that would be what I would expect."
  }
]
