[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15231674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15231674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15231674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjMxNjc0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T11:37:32Z",
    "updated_at": "2013-03-21T11:37:32Z",
    "author_association": "NONE",
    "body": "I expected np.array(order='C') , np.array(order='F')  to work, it doesn't.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15231743",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15231743",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15231743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjMxNzQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T11:39:38Z",
    "updated_at": "2013-03-21T11:39:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you have to do\n\n```\nnp.array(np.random.rand(10,2),order='C')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15259707",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15259707",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15259707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjU5NzA3",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T19:20:04Z",
    "updated_at": "2013-03-21T19:20:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "we should also exercise non-contiguous cases, too, because those result from slicing larger contiguous arrays.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15260060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15260060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15260060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjYwMDYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T19:27:23Z",
    "updated_at": "2013-03-21T19:27:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "absolutely, if you have time, maybe put together of  a list of things we shoudl test (on perf basis) where these things matter?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15260469",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15260469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15260469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjYwNDY5",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T19:35:09Z",
    "updated_at": "2013-03-21T19:35:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, that's all i can think of now (obviously I didn't think of this before it came up as a perf issue, otherwise I would have tested it already), but I'll make note if I think of any more\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15264024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15264024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15264024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjY0MDI0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T20:41:25Z",
    "updated_at": "2013-03-21T20:41:25Z",
    "author_association": "NONE",
    "body": "It looks like the perf regression was 50% - but on a 1ms test.\nJust wondering what scale of data are we talking about here where \nthis would seriously impact users?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15264941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15264941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15264941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjY0OTQx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T20:57:52Z",
    "updated_at": "2013-03-21T20:59:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p take is a primitive operation for a lot of other operations though...I think the test suite is not representative of real world usage in general (and performance is definitely noticeable for large data sets...like >1GB, which I've actually had to deal with for personal usage already) so it's very hard to tell what matters and what doesn't; it's like reading tea leaves\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15266000",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15266000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15266000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjY2MDAw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T21:18:07Z",
    "updated_at": "2013-03-21T21:20:05Z",
    "author_association": "NONE",
    "body": "of course, I guess i'm trying to understand what regression we're talking about, since\njeff's original vbench that prompted this only showed a couple of reindex_foo outliers. \n\nBasically, you've landed a big optimization by taking array order into account, \nit has nothing to do with the original regression. did I get that right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15266218",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15266218",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15266218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjY2MjE4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-21T21:21:04Z",
    "updated_at": "2013-03-21T21:22:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "do you mean the latest PR, #3130? that does address the regression in `reindex_frame_level_align` and `reindex_frame_level_reindex`, by turning off the original optimization for small row/column sizes, and it happens to optimize other cases as well (by allowing the optimization in cases where it could be used but isn't) but I don't know how well those are tested by the suite...we should move comments on this over to #3130 if that's what you're talking about (the regression was only 25% on my machine, due to 32-bit/64-bit differences, so that PR undoes it)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15328521",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15328521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15328521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzI4NTIx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T01:07:27Z",
    "updated_at": "2013-03-23T01:18:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm trying to test a further optimization refinement (described in the **FINAL EDIT** portion of [this SO question](http://stackoverflow.com/questions/15554565/forcing-gcc-to-perform-loop-unswitching-of-memcpy-runtime-size-checks)) and I'm getting some extreme variability in my results (with or without the new BUILD_CACHE_DIR, although it seems to be worse with it...still not sure if there's something going on with that or if it's just a fluke).\n\nI've talked to some performance experts in the C++ SO chatroom about this and the consensus seems to be that randomly generating a set of indices once but reusing them over and over for multiple runs of the same test (as is the case for some, but not all, of the suite tests...I believe this is the case at least... **can anyone confirm that the `setup` portions of the tests are only executed once rather than repeatedly?**) is leading to inconsistent results from run to run because of the effect of the layout on caching and alignment issues.\n\nTo get more consistent results, I think we need to do one of the following:\n- Always generate new random indices per iteration of each test so that the variability gets averaged out\n- Use sets of indices hardcoded into the test suite for each test\n\nThe first is probably better but it means that the time of the random index generation is part of the results of the test, which is non-ideal. The second might lead to less coverage in case hardcoded indices don't adequately cover real use cases.\n\nNot 100% sure how much of an issue this is, but from the results I've been seeing it seems like this is the most likely culprit...still investigating (a little bit hard because of test turnaround time).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15330317",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15330317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15330317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMwMzE3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T02:22:11Z",
    "updated_at": "2013-03-23T02:22:11Z",
    "author_association": "NONE",
    "body": "Does vb actually do multiple iterations and averaging? I didn't know.\n\nSo you're suggesting that adding the default random seed to test_perf will actually\nmake variability worse?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15330328",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15330328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15330328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMwMzI4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T02:23:17Z",
    "updated_at": "2013-03-23T02:23:17Z",
    "author_association": "NONE",
    "body": "If you can post a script example for me to verify that what you suggests eliminates variation\non my machine as well, that'd be great.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15330715",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15330715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15330715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMwNzE1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T02:57:02Z",
    "updated_at": "2013-03-23T03:25:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p I don't know either about vb_suite...I'm guessing the `setup` section is done once and all the multiple iterations are of the statement passed as the first argument to `Benchmark()`:\n\ni.e.\n\n```\ngroupby_first = Benchmark('data.groupby(labels).first()', setup,\n                          start_date=datetime(2012, 5, 1))\n```\n\ncalls `setup` once and then iterates 'data.groupby(labels).first()' repeatedly.\n\nIn this case, `setup` creates a random permutation of labels:\n\n```\nlabels = labels.take(np.random.permutation(len(labels)))\n```\n\nbut the same labels are (presumably) used repeatedly so any performance effect of structural features of the permutation will be present in every iteration rather than averaged out.\n\nAs per your statement\n\n> So you're suggesting that adding the default random seed to test_perf will actually\n> make variability worse?\n\nI think I'm suggesting the opposite actually (unless I'm misunderstanding you)...if we fix the seed (it's not fixed right now, is it?), which I didn't actually consider, then every run of vb_suite will be using the same random numbers so we'll eliminate the effect of variability entirely in theory (but possibly the test will be non-representative by accident). Or we could go the opposite extreme, and make every single iteration of each test variable, so the variability hopefully averages out. What doesn't work is the middle ground where we non-deterministically generate a random set of numbers once and reuse them over and over (which I presume is what's happening right now).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15330872",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15330872",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15330872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMwODcy",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:14:01Z",
    "updated_at": "2013-03-23T03:17:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p I'm replying here instead of on closed PR\n\n> I've added and pushed a random seed option to test_perf. grepping for \"seed\"\n> in the vbench repo came up empty so that ought to have taken care of it.\n> (It seeds python random as well numpy.random).\n> all runs now use a default seed , if not specified explicitly.\n> \n> I'm still seeing the same variability i've always seen with vb.\n\nYou mean fixing the seed so that every run of vb_suite generates the same values, right? Are you sure it's working so that the same values are generated every time (i.e. it's picking up the seed correctly and not being reseeded ron-deterministically elsewhere?)\n\nIt's possibly only be relevant for this low-level thing I'm doing right now, since data alignment makes a big difference in the performance in this case. The approach is non-ideal regardless, anyway (assuming I'm correct about how `setup` is used.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331150",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331150",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMTUw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:40:52Z",
    "updated_at": "2013-03-23T03:41:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "(Rather than just conjecturing more, I'm going to try running vb_suite overnight repeatedly to test this systematically with and without various changes to tests; it might take some time for me to get enough data to draw firm conclusions...I'll report back if/when I do...)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMTU5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:41:38Z",
    "updated_at": "2013-03-23T03:41:38Z",
    "author_association": "NONE",
    "body": "then I will too.\n\nre repeatable seed making variability better not worse, good I thought so too.\nI tthink repeatability is more important in general, you can do multiple runs\nwith diferent seeds to gather data on the distribution of performance.\n\nre averaging: You've actually tested this on a specific test and got what you \nexpected?.... and yep. just measure is best.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMTY0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:42:27Z",
    "updated_at": "2013-03-23T03:42:27Z",
    "author_association": "NONE",
    "body": "be aware of the changes in test_perf, with the seeding, make sure you're running the commit\nwith the behaviour you intend.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331171",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMTcx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:43:19Z",
    "updated_at": "2013-03-23T03:44:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "did you push a change to `test_perf` already? **EDIT** Never mind, I just saw it...did you verify that it works as expected though? Same values at runtime every time?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331197",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331197",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMTk3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:45:53Z",
    "updated_at": "2013-03-23T03:45:53Z",
    "author_association": "NONE",
    "body": "re: setting up the seed. as I wrote I found no other calls to seed within vbench,\nand I printf-verified that both np and python return deterministic data right after the seed call.\n\nyes I did, that's what I noted in my comment you quoted above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMjIw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:48:05Z",
    "updated_at": "2013-03-23T03:54:48Z",
    "author_association": "NONE",
    "body": "if random data produces that much variation in results, you need to keep the \ndata constant to test for regressions, so I made that the default behaviour.\n\ntest_perf.sh -s myseed(default 1234)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMjU2",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:51:10Z",
    "updated_at": "2013-03-23T03:56:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, great, I'll try overnighting a bunch of runs with fixed seed and a bunch of runs with different seeds and see how much variation I get. It'll help me narrow this down. (Not sure why I didn't think of putting a fixed seed originally, that's  clearly easier than rewriting the tests :D)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331273",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMjcz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T03:52:11Z",
    "updated_at": "2013-03-23T03:52:11Z",
    "author_association": "NONE",
    "body": "that's ok, you can do cache stripe calculations in your head, that's good enough 8)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15331376",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15331376",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15331376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzMxMzc2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T04:02:13Z",
    "updated_at": "2013-03-23T04:03:09Z",
    "author_association": "NONE",
    "body": "fyi, i did 3 runs on a small number of vbs, each time, the value of the random seed after\nthe tests produced the same set of random values when calling immediately after the tests. \n\nI think that clearly proves the random data is now deterministically random. If that's not an oxymoron.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15339082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15339082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15339082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM5MDgy",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T15:45:28Z",
    "updated_at": "2013-03-23T15:45:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, I **definitely** verified that my latest refinement leads to variable results, but it's **not** reduced by setting the random seed deterministically, so it means that the Python interpreter itself has non-deterministic behavior that is relevant for performance (probably in allocation patterns):\n\nhere results with fixed seeds:\n\n```\nframe_reindex_axis0                         0.6189     1.8109     0.3418\nframe_reindex_axis0                         1.0079     1.2519     0.8051\nframe_reindex_axis0                         0.5227     0.6118     0.8543\nframe_reindex_axis0                         0.4115     0.4681     0.8792\nframe_reindex_axis0                         0.4141     0.4454     0.9296\nframe_reindex_axis0                         0.5567     0.5934     0.9382\nframe_reindex_axis0                         0.4374     0.4661     0.9385\nframe_reindex_axis0                         0.4723     0.5015     0.9417\nframe_reindex_axis0                         0.4407     0.4583     0.9616\nframe_reindex_axis0                         0.4676     0.4773     0.9797\nframe_reindex_axis0                         0.4757     0.4827     0.9855\nframe_reindex_axis0                         0.4918     0.4968     0.9898\nframe_reindex_axis0                         0.4964     0.4973     0.9982\nframe_reindex_axis0                         0.4925     0.4791     1.0279\nframe_reindex_axis0                         0.4543     0.4272     1.0635\nframe_reindex_axis0                         0.5132     0.4814     1.0662\nframe_reindex_axis0                         0.5277     0.4898     1.0774\nframe_reindex_axis0                         0.4869     0.4518     1.0778\nframe_reindex_axis0                         0.4904     0.4527     1.0832\nframe_reindex_axis0                         0.5184     0.4653     1.1142\nframe_reindex_axis0                         0.5918     0.4751     1.2455\nframe_reindex_axis0                         0.7440     0.5269     1.4119\nframe_reindex_axis0                         1.4274     0.5206     2.7421\n```\n\nand with varying seeds:\n\n```\nframe_reindex_axis0                         0.4789     1.0887     0.4399\nframe_reindex_axis0                         0.4191     0.9355     0.4480\nframe_reindex_axis0                         0.5033     0.7374     0.6825\nframe_reindex_axis0                         1.0038     1.4614     0.6868\nframe_reindex_axis0                         0.4026     0.5564     0.7235\nframe_reindex_axis0                         0.4721     0.5202     0.9076\nframe_reindex_axis0                         0.4517     0.4972     0.9086\nframe_reindex_axis0                         0.4463     0.4827     0.9247\nframe_reindex_axis0                         0.4874     0.5116     0.9526\nframe_reindex_axis0                         0.5077     0.5123     0.9909\nframe_reindex_axis0                         0.5102     0.5129     0.9947\nframe_reindex_axis0                         0.4499     0.4490     1.0019\nframe_reindex_axis0                         0.4609     0.4550     1.0130\nframe_reindex_axis0                         0.4857     0.4787     1.0147\nframe_reindex_axis0                         0.5212     0.4665     1.1172\nframe_reindex_axis0                         0.5331     0.4667     1.1422\nframe_reindex_axis0                         0.5396     0.4514     1.1953\nframe_reindex_axis0                         0.5368     0.4407     1.2181\nframe_reindex_axis0                         0.8344     0.5309     1.5717\nframe_reindex_axis0                         1.4105     0.8847     1.5943\nframe_reindex_axis0                         1.4070     0.4603     3.0565\nframe_reindex_axis0                         1.4141     0.4546     3.1107\nframe_reindex_axis0                         1.4211     0.4163     3.4140\n```\n\nThis non-determinism is probably already present, just magnified by this particular change (which is weird, because the change doesn't seem to really do much...)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15339190",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15339190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15339190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM5MTkw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T15:52:00Z",
    "updated_at": "2013-03-23T15:52:00Z",
    "author_association": "NONE",
    "body": "I've seen python variability with %timeit many times.\njeff and I worked together on the csv improvements and 10% error was very common,\nalthough that's IO so perhaps another matter.\n\nI'd suggest that the fact that these are sub-ms tests is playing a role,\nbut there was one test in the  /reindex/ set thet took 25 seconds, and it varied\nup to 32 seconds in repeated runs on my box.\n\nI take it you withdraw your FUD comments about the cython build cache? ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15339329",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15339329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15339329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM5MzI5",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T15:59:41Z",
    "updated_at": "2013-03-23T16:00:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I take it you withdraw your FUD comments about the cython build cache? ;)\n\nwell, to be honest, I can't be sure since all of this is with the cache on...I doubt that's an issue but I just mean that this doesn't provide any info about that actually. I can try repeating everything with the cache off if we want to be sure.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15339403",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15339403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15339403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM5NDAz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T16:04:25Z",
    "updated_at": "2013-03-23T16:04:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "my change is **literally** what I describe in the last section of [the SO question](http://stackoverflow.com/questions/15554565/forcing-gcc-to-perform-loop-unswitching-of-memcpy-runtime-size-checks), though...so it seems like it'd be benign: all I'm doing taking advantage of the known strides to write a loop that uses those strides at compile-time rather than a generic one that evaluates the strides at run-time...possibly `numpy` is allocating arrays with different alignments randomly\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15339440",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15339440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15339440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzM5NDQw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T16:06:30Z",
    "updated_at": "2013-03-23T16:06:30Z",
    "author_association": "NONE",
    "body": "You could measure variability for each vbench seperately, and see if large variance\nclumps around certain families or if it's a general thing. \nIt'll probably yield at least a clue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15340418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15340418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15340418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQwNDE4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T16:57:50Z",
    "updated_at": "2013-03-23T17:02:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "looked through numpy list prior dicussions about this, and turns out there's no guarantee of alignment beyond the minimum required (which for me appears to always be 32-bit even for 64-bit doubles in my case...that's what's probably causing the problem)...apparently you can overallocate a bit (with a 1-d array), manually get a view of an aligned subarray and set the strides yourself it you need it...memory is cheap enough that an extra 96 bits per row + 96 bits total at the beginning (worst possible case) can't make much of a difference...probably is that you'd have to change the allocation everywhere where it's relevant...will split this off to a new issue\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15340544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3114#issuecomment-15340544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3114",
    "id": 15340544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQwNTQ0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T17:05:01Z",
    "updated_at": "2013-03-23T17:06:13Z",
    "author_association": "NONE",
    "body": "alignment can yield big wins. most def.\n\nneed to validate that this is what's actually happening though.\n"
  }
]
