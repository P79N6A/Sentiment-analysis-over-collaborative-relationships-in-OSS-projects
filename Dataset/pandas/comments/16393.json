[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302879740",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16393#issuecomment-302879740",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16393",
    "id": 302879740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg3OTc0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T15:25:01Z",
    "updated_at": "2017-05-20T15:27:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Dominik1123 \r\n\r\n ```\r\nIn [1]: data = '+++123456789...\\ncol1,col2,col3\\n1,2,3\\n'\r\n\r\nIn [2]: pd.read_csv(StringIO(data))\r\nOut[2]: \r\n          +++123456789...\r\ncol1 col2            col3\r\n1    2                  3\r\n\r\nIn [3]: pd.read_csv(StringIO(data), index_col=0)\r\nIndexError: list index out of range\r\n\r\nIn [4]: pd.DataFrame.from_csv(StringIO(data))\r\nIndexError: list index out of range\r\n```\r\n\r\nyou probably want this\r\n```\r\nIn [9]: pd.read_csv(StringIO(data), skiprows=1)\r\nOut[9]: \r\n   col1  col2  col3\r\n0     1     2     3\r\n```\r\n\r\n``.from_csv`` defaults to ``index_col=0``, e.g. [4] (which ``pd.read_csv`` does not, see [2]).\r\n\r\nSo this is buggy, and doing something odd.\r\n\r\ncc @gfyoung "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302881950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16393#issuecomment-302881950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16393",
    "id": 302881950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg4MTk1MA==",
    "user": {
      "login": "Dominik1123",
      "id": 15989985,
      "node_id": "MDQ6VXNlcjE1OTg5OTg1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/15989985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dominik1123",
      "html_url": "https://github.com/Dominik1123",
      "followers_url": "https://api.github.com/users/Dominik1123/followers",
      "following_url": "https://api.github.com/users/Dominik1123/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dominik1123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dominik1123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dominik1123/subscriptions",
      "organizations_url": "https://api.github.com/users/Dominik1123/orgs",
      "repos_url": "https://api.github.com/users/Dominik1123/repos",
      "events_url": "https://api.github.com/users/Dominik1123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dominik1123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T16:00:27Z",
    "updated_at": "2017-05-20T16:00:27Z",
    "author_association": "NONE",
    "body": "@jreback Well actually the first line is just example garbage. It was an example for an invalid CSV file which a user might open in my application (so skipping the first row is no solution in my case). I'm excepting `CParserError` when loading the data frame (no matter if I load it with `from_csv` or `read_csv(..., index_col=0)`. If other exceptions are raised (and this is not reported in the docs) it's hard to deal with such special cases. I expect to be able to except all parser errors with a single exception type."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302882856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16393#issuecomment-302882856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16393",
    "id": 302882856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg4Mjg1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T16:15:55Z",
    "updated_at": "2017-05-20T16:15:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Dominik1123 hence the bug label"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302891897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16393#issuecomment-302891897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16393",
    "id": 302891897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg5MTg5Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T18:55:36Z",
    "updated_at": "2017-05-20T18:57:31Z",
    "author_association": "MEMBER",
    "body": "Can confirm this error on `master` (<a href=\"https://github.com/pandas-dev/pandas/commit/0f55de1b334131dd0577b91eb061dcb8bc65ef78\">0f55de</a>) with both engines.\r\n\r\nHere's what is going on.  When you pass in this data, there are clearly not enough columns (1) to hold 3 columns worth of data.  As a result, `pandas` will move all extraneous column data to the `DataFrame`.  It is for this reason that you get [2] from @jreback examples (that index is a `MultiIndex`).  This behavior is to be expected.\r\n\r\nIf you specify `index_col=0`, you are saying that only the first column is the index, but then `pandas` doesn't know what to do with the middle column.  It thinks that it should be used as part of the index, but then it is \"surprised\" when it finds out that you only wanted the first column to be the index, causing it to error.\r\n\r\nNote that if you pass in `index_col=[0, 1]`, `DataFrame.from_csv` works just fine.  I think we can try to catch `IndexError` at that point and raise `ParserError` to be consistent.  However, I'd call that an API issue, not a bug.\r\n\r\nFYI @Dominik1123 , we have moved towards a more unified errors across both the Python and C engines and now raise `ParserError` instead of `CParserError`.  They are currently aliases, but I would suggest you catch `ParserError` instead.  Though to be fair, I'm not 100% sure where you saw that `CParserError` is raised in the docs?  Also, `read_csv` is preferred over `from_csv`."
  }
]
