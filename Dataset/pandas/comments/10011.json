[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97364656",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97364656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97364656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3MzY0NjU2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T09:13:12Z",
    "updated_at": "2015-04-29T09:13:12Z",
    "author_association": "MEMBER",
    "body": "@vadoverde Thanks for looking into this! I also seen some recent complaining about it, but it is a difficult issue as (as far as I thought) could not really do anything about this on the pandas side.\n\nI was in the belief we _do_ use sqlalchemy Core and not ORM (but have to look later in some more detail to verify). You can see the insert code here: https://github.com/pydata/pandas/blob/master/pandas/io/sql.py#L703 \nDo you want to take a look as well?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97457804",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97457804",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97457804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NDU3ODA0",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T15:02:20Z",
    "updated_at": "2015-04-29T15:02:20Z",
    "author_association": "NONE",
    "body": "Joris, thanks for the quick reply and the reference. You are using sqlalchemy Core and it looks like the Core has performance issues too. I just developed the Core solution suggested by sqlalchemy and the DB write is still slow! It's definitely a sqlalchemy issue.\nI'm new to python (3 weeks) I've always worked with Microsoft technology, so I'll try all I can to help get this issue resolved as I needed for the solution I'm working on. I'll give you a status, but if you find any solution please let me know too.\nThanks,\nSam\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97505594",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97505594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97505594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTA1NTk0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T17:04:48Z",
    "updated_at": "2015-04-29T17:04:48Z",
    "author_association": "MEMBER",
    "body": "What would be interesting is that you also compare it with a non-sqlalchemy implementation (so using a connection object of `pyodbc` (or another driver you are using) and using the `execute` method of that one instead of using an sqlalchemy engine). So to check if it is a sqlalchemy performance issue, or more an issue with the driver/connection with SQL Server itself. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97587852",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97587852",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97587852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTg3ODUy",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T21:17:17Z",
    "updated_at": "2015-04-29T21:26:51Z",
    "author_association": "NONE",
    "body": "I developed the following code to prove the issue is not caused by the driver. Not a pymssql issue at the least. The script below that inserts 37,830 records of two integers in 53 seconds when the proposed sqlalchemy Core solution takes 2 minutes and 40 seconds. Dataframe.to_sql() takes over 4 minutes. Here is my script:\n\n``` python\nimport pymssql\nfrom datetime import datetime\nimport pandas as pd\nimport numpy as np\n\n#insert Account Relations into SQL table\ntStart = datetime.now()\nsqlSt = \"\"\"WITH cte(AccountID, RelatedAccountID) AS\n(\n    SELECT AccountID, RelatedAccountID FROM \n    (\n        VALUES\n        \"\"\"\n\nfor i in cba_simAccts.index:\n    if i == cba_simAccts.shape[0] - 1:\n        sqlSt += \"(\" + str(cba_simAccts.loc[i,\"AccountID\"]) + \",\" + str(int(cba_simAccts.loc[i,\"RelatedAccountID\"])) + \")\"\n    else:\n        sqlSt += \"(\" + str(cba_simAccts.loc[i,\"AccountID\"]) + \",\" + str(int(cba_simAccts.loc[i,\"RelatedAccountID\"])) + \")\"\n        sqlSt += \",\"\n\nsqlSt += \"\"\"\n    ) as V(AccountID, RelatedAccountID)\n)\nINSERT INTO ML.RelAcct_Credit (AccountID, RelatedAccountID)\nSELECT AccountID, RelatedAccountID\nFROM cte\"\"\"\n\ntEnd = datetime.now()\nprint (str(tEnd-tStart))\n\ntStart = datetime.now()\nconn = pymssql.connect(inp.dbServer, inp.dbUser, inp.dbPwd, inp.dbName)\ncursor = conn.cursor()\n\ncursor.execute(sqlSt)\n\nconn.commit()\nconn.close()\n\ntEnd = datetime.now()\nprint (str(tEnd-tStart))\n```\n\nThe resulting time deltas of this query are:\n0:00:13.975398 ==> time needed by my machine to formulate the SQL statement\n0:00:52.802280 ==> time needed to compile and execute the statement on the SQL server\n\n``` python\n**cba_simAccts**\nIn [304]: cba_simAccts.shape\nOut[304]: (37830, 2)\nIn [305]: type(cba_simAccts)\nOut[305]: pandas.core.frame.DataFrame\nIn [306]: cba_simAccts.dtypes\nOut[306]: \nAccountID             int64\nRelatedAccountID    int64\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97591177",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97591177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97591177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTkxMTc3",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T21:27:48Z",
    "updated_at": "2015-04-29T21:27:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for digging into this. Are you familiar with any of the profiling tools for python? At the very least we should be able to narrow the gap between us an SQLA.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97591942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97591942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97591942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NTkxOTQy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T21:31:20Z",
    "updated_at": "2015-04-29T21:32:10Z",
    "author_association": "MEMBER",
    "body": "Yes, indeed, thanks a lot for looking into this. \nA question about the code you posted above. If I understand it correctly, here you insert data into a table from another table that is already in SQL? (the `INSERT INTO ... SELECT ... FROM ...` part) \nDo you do the same with sqlalchemy? Because at least with pandas `to_sql` you transfer the data from outside the database into a table, which will probably lead to a difference in time. \n(Can you maybe post the equivalent pandas and sqlalchemy core code you used for the timings as well?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97605812",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97605812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97605812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjA1ODEy",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T22:28:09Z",
    "updated_at": "2015-04-29T22:31:39Z",
    "author_association": "NONE",
    "body": "Sure thing. I haven't done profiling in Python yet. I did some profiling in SQL Server when issues the to_sql() statement and it appeared to me as if every row was being written individually. \nHere is the code I used for SQLA.\n\n---\n\n```\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy import Table, Column, Integer, String,  create_engine, insert, schema, MetaData, insert\nfrom sqlalchemy.orm import scoped_session, sessionmaker\n\nBase = declarative_base()\nDBSession = scoped_session(sessionmaker())\nengine = None\n\ndef init_sqlalchemy(dbname=\"mssql+pymssql://username:password@SQLSERVERNAME:1433/DATABASENAME\"):\n    global engine\n    engine = create_engine(dbname, echo=False)\n    DBSession.remove()\n    DBSession.configure(bind=engine, autoflush=False, expire_on_commit=False)\n\nclass RelAcct_Credit(Base):\n    __tablename__ = 'RelAcct_Credit'\n    __table_args__ = ({'extend_existing': True, 'schema':'ML'})\n    RelAcct_SKID = Column(Integer, primary_key = True, autoincrement = True)\n    AccountID = Column(Integer)\n    RelatedAccountID = Column(Integer)\n\ntStart = datetime.now()\nengine.execute(\n        RelAcct_Credit.__table__.insert(),\n        [{\"AccountID\": int(cba_simAccts.loc[i, 'AccountID']),\n          \"RelatedAccountID\": int(cba_simAccts.loc[i, 'RelatedAccountID'])} for i in cba_simAccts.index])\n\ntEnd = datetime.now()\nprint (str(tEnd-tStart))\n```\n\n---\n\nTime Delta: \n0:02:35.721570\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97607156",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97607156",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97607156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjA3MTU2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-29T22:37:21Z",
    "updated_at": "2015-04-29T22:38:32Z",
    "author_association": "MEMBER",
    "body": "Can you time something in line of the following (will probably not be fully correct, but you get the idea):\n\n```\nconn = pymssql.connect(inp.dbServer, inp.dbUser, inp.dbPwd, inp.dbName)\ncursor = conn.cursor()\n\ncursor.executemany(\n    \"INSERT INTO ML.RelAcct_Credit (AccountID, RelatedAccountID) VALUES (%d %d)\",\n    [(int(cba_simAccts.loc[i, 'AccountID']), int(cba_simAccts.loc[i, 'RelatedAccountID'])) for i in cba_simAccts.index])\n\nconn.commit()\nconn.close()\n```\n\nThis is in my view a fairer comparison, as this also transfers the data from python to the database.\n\nAnd maybe you can also time only the execute-part, by creating the list of tuples beforehand instead of timing it together (to see where the slowness is coming from)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97624098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97624098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97624098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NjI0MDk4",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T01:06:11Z",
    "updated_at": "2015-04-30T01:06:11Z",
    "author_association": "NONE",
    "body": "Unfortunately, no dice. This query took me 0:14:27.387294 (14 minutes) on a wireless connection. The time for my solution above (with sqlSt) on wireless is 10 seconds slower:\n0:00:14.630463\n0:01:02.058205 \n\nI'm more convinced now that the sqlalchemy execute and executemany are writing data row by row and doing heavy communication back and forth between my machine and the server which is reflected by the drastic decrease in performance over wifi...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97876533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-97876533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 97876533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3ODc2NTMz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T16:50:13Z",
    "updated_at": "2015-04-30T16:50:13Z",
    "author_association": "MEMBER",
    "body": "@vadoverde I am not fully understanding. Do you mean that the code snippet I showed above took 14 mins? (this is without pandas or sqlalchemy) Because that would be even slower as with sqlalchemy, you said above that this took 2min 35s. \nAnd what are the other timings? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98138803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-98138803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 98138803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTM4ODAz",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T13:50:14Z",
    "updated_at": "2015-05-01T13:50:14Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche sorry about the confusion. Here are the details:\nThe code snippet you showed above took 14 minutes because I was connected to the network through wireless. I just ran your code snippet while hardwired to the network and it took 0:02:36.178616.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98140175",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-98140175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 98140175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTQwMTc1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T14:00:46Z",
    "updated_at": "2015-05-01T14:00:46Z",
    "author_association": "MEMBER",
    "body": "And the timing above of 0:02:35.721570 for sqlalchemy, that is with the same network? Because, then , my conclusion would be: it is not an issue with sqlalchemy, but with the speed of the driver (pyodbc, pymssql, ..), the network or sql server itself.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98180916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-98180916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 98180916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTgwOTE2",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T17:18:08Z",
    "updated_at": "2015-05-01T17:18:08Z",
    "author_association": "NONE",
    "body": "You're right, sqlalchemy is not the problem. pymssql's executemany() is inserting the data row by row. I developed a solution that sends the data to SQL server in XML format and inserts into a SQL table using OPENXML() SQL command and it took \n0:00:02.101211.\nSQL server though inserts this data in a few milliseconds, so the performance is still not ideal compared to SQL Server but I'm happy with 2 seconds compared 2 minutes 35 seconds that executemany() and to_sql() takes.\n\nJoris, I appreciate all your help getting this issue resolved. I'd be happy to share the XML solution if you'd like.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98182384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-98182384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 98182384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTgyMzg0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T17:24:16Z",
    "updated_at": "2015-05-01T17:24:32Z",
    "author_association": "MEMBER",
    "body": "@vadoverde No problem, and glad you found a solution!\n\nFor other people it is indeed interesting to post your solution somewhere, maybe also post it at the recent thread on the sqlalchemy's mailing list. \nFor pandas itself this will be out of scope (I think we want to restrict ourselves to a solution based on sqlalchemy)\n\nFurther, maybe also worth raising this at the pymssql mailing list/issue tracker.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157550940",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-157550940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 157550940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU1MDk0MA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T00:07:08Z",
    "updated_at": "2015-11-18T00:07:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vadoverde We are having similar issues. Is there a way you can share your XML solution? \n\nThanks,\nMax\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157570224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-157570224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 157570224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU3MDIyNA==",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T01:43:22Z",
    "updated_at": "2015-11-18T01:44:15Z",
    "author_association": "NONE",
    "body": "@maximilianr - here is a function I developed to translate the pandas array to XML format and writes it with a SQL statement. The reason it's fast because pymssql sends one XML file to SQL instead of writing tens of thousands of rows each in a separate batch.\nhttps://gist.github.com/vadoverde/84f4d4a4c31416d2dfee\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157576489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-157576489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 157576489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU3NjQ4OQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T02:25:53Z",
    "updated_at": "2015-11-18T02:25:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vadoverde Many thanks indeed! \n\nI haven't used any XML libraries, and it looks likes there are some imports (`ET`) outside the function. Can you clarify what those are?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157577070",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-157577070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 157577070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU3NzA3MA==",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T02:30:22Z",
    "updated_at": "2015-11-18T02:30:22Z",
    "author_association": "NONE",
    "body": "@maximilianr - sorry I forgot to add those. Here are all my imports, ET being xml.etree.ElementTree\n\nimport pandas as pd\nimport xml.etree.ElementTree as ET\nimport xml\nfrom datetime import datetime\nimport pymssql\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157589460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-157589460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 157589460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU4OTQ2MA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T03:15:20Z",
    "updated_at": "2015-11-18T03:15:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@vadoverde Thanks again!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/157593557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10011#issuecomment-157593557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10011",
    "id": 157593557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzU5MzU1Nw==",
    "user": {
      "login": "vadoverde",
      "id": 12160484,
      "node_id": "MDQ6VXNlcjEyMTYwNDg0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12160484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vadoverde",
      "html_url": "https://github.com/vadoverde",
      "followers_url": "https://api.github.com/users/vadoverde/followers",
      "following_url": "https://api.github.com/users/vadoverde/following{/other_user}",
      "gists_url": "https://api.github.com/users/vadoverde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vadoverde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vadoverde/subscriptions",
      "organizations_url": "https://api.github.com/users/vadoverde/orgs",
      "repos_url": "https://api.github.com/users/vadoverde/repos",
      "events_url": "https://api.github.com/users/vadoverde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vadoverde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T03:25:30Z",
    "updated_at": "2015-11-18T03:26:14Z",
    "author_association": "NONE",
    "body": "@MaximilianR Anytime, hope it helps\n"
  }
]
