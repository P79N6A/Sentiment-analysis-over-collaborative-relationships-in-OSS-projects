[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341993233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18124#issuecomment-341993233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18124",
    "id": 341993233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTk5MzIzMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T18:15:22Z",
    "updated_at": "2017-11-05T18:15:22Z",
    "author_association": "MEMBER",
    "body": "cc @TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341999474",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18124#issuecomment-341999474",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18124",
    "id": 341999474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTk5OTQ3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T19:45:53Z",
    "updated_at": "2017-11-05T19:45:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems reasonable to me.\r\n\r\n@Eoksni are you interested in making a Pull Request?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341999533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18124#issuecomment-341999533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18124",
    "id": 341999533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTk5OTUzMw==",
    "user": {
      "login": "Eoksni",
      "id": 2010503,
      "node_id": "MDQ6VXNlcjIwMTA1MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2010503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Eoksni",
      "html_url": "https://github.com/Eoksni",
      "followers_url": "https://api.github.com/users/Eoksni/followers",
      "following_url": "https://api.github.com/users/Eoksni/following{/other_user}",
      "gists_url": "https://api.github.com/users/Eoksni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Eoksni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Eoksni/subscriptions",
      "organizations_url": "https://api.github.com/users/Eoksni/orgs",
      "repos_url": "https://api.github.com/users/Eoksni/repos",
      "events_url": "https://api.github.com/users/Eoksni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Eoksni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T19:46:51Z",
    "updated_at": "2017-11-05T19:46:51Z",
    "author_association": "NONE",
    "body": "I am, but can't make any promises. Will look into it if have spare time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341999554",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18124#issuecomment-341999554",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18124",
    "id": 341999554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTk5OTU1NA==",
    "user": {
      "login": "Eoksni",
      "id": 2010503,
      "node_id": "MDQ6VXNlcjIwMTA1MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2010503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Eoksni",
      "html_url": "https://github.com/Eoksni",
      "followers_url": "https://api.github.com/users/Eoksni/followers",
      "following_url": "https://api.github.com/users/Eoksni/following{/other_user}",
      "gists_url": "https://api.github.com/users/Eoksni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Eoksni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Eoksni/subscriptions",
      "organizations_url": "https://api.github.com/users/Eoksni/orgs",
      "repos_url": "https://api.github.com/users/Eoksni/repos",
      "events_url": "https://api.github.com/users/Eoksni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Eoksni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T19:47:08Z",
    "updated_at": "2017-11-05T19:47:08Z",
    "author_association": "NONE",
    "body": "Thanks for the response"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342001972",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18124#issuecomment-342001972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18124",
    "id": 342001972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjAwMTk3Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T20:18:56Z",
    "updated_at": "2017-11-05T20:18:56Z",
    "author_association": "MEMBER",
    "body": "I think one reason why we might not do this currently is that there are two ways to potentially label a series:\r\n- On the y-axis (matplotlib's `set_ylabel()`)\r\n- In a legend (matplotlib's `label=`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342004210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18124#issuecomment-342004210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18124",
    "id": 342004210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjAwNDIxMA==",
    "user": {
      "login": "Eoksni",
      "id": 2010503,
      "node_id": "MDQ6VXNlcjIwMTA1MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2010503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Eoksni",
      "html_url": "https://github.com/Eoksni",
      "followers_url": "https://api.github.com/users/Eoksni/followers",
      "following_url": "https://api.github.com/users/Eoksni/following{/other_user}",
      "gists_url": "https://api.github.com/users/Eoksni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Eoksni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Eoksni/subscriptions",
      "organizations_url": "https://api.github.com/users/Eoksni/orgs",
      "repos_url": "https://api.github.com/users/Eoksni/repos",
      "events_url": "https://api.github.com/users/Eoksni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Eoksni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T20:48:13Z",
    "updated_at": "2017-11-05T20:48:13Z",
    "author_association": "NONE",
    "body": "ok, I see, so it sets up legend, but it doesn't show it by default, I need to call `plt.legend()` to show it, whereas with DataFrame.plot legend is shown automatically. I find it confusing that Series.plot doesn't have any info about what it is actually drawing; and having legend just for a single line plot seems like an overkill.\r\n\r\nIn my opinion, sensible defaults would be like so:\r\n- if just a single Series is shown, then ylabel with its name makes perfect sense\r\n- if there are several lines/scatter plots shown already, then ylabel should be empty and legend is shown instead\r\n\r\nI don't know how it would actually work, like, if I do several Series.plot in a row\r\n```python\r\ns1.plot()\r\ns2.plot()\r\ns3.plot()\r\n```\r\nshould it on the first `s1.plot` see that there is no lines yet, so it sets ylabel to the `s1.name`, then on the `s2.plot` it will see that other line is already shown, so it removes ylabel and shows legend instead, etc? Seems kinda confusing and 'fragile'.\r\n\r\nMay be this behavior should have some configuration parameter somewhere?\r\n\r\nI, personally, use Series.plot only when I need to plot a single variable. I never do several Series.plot in the same axes. If I want to show several variables, I use DataFrame.plot. So as a workaround this little proxy function does great for me\r\n```python\r\ndef mysplot(s, *kargs, kind='line', **kwargs):\r\n    res = s.plot(*kargs, kind=kind, **kwargs)\r\n    if s.name:\r\n        if kind == 'hist':\r\n            plt.xlabel(s.name)\r\n        elif kind == 'line':\r\n            plt.ylabel(s.name)\r\n    return res\r\n```\r\nso if there is no ideal solution, I think we can just close it, I definitely don't find it as a very important one, and my workaround satisfies me enough.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342010491",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18124#issuecomment-342010491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18124",
    "id": 342010491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjAxMDQ5MQ==",
    "user": {
      "login": "Eoksni",
      "id": 2010503,
      "node_id": "MDQ6VXNlcjIwMTA1MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2010503?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Eoksni",
      "html_url": "https://github.com/Eoksni",
      "followers_url": "https://api.github.com/users/Eoksni/followers",
      "following_url": "https://api.github.com/users/Eoksni/following{/other_user}",
      "gists_url": "https://api.github.com/users/Eoksni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Eoksni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Eoksni/subscriptions",
      "organizations_url": "https://api.github.com/users/Eoksni/orgs",
      "repos_url": "https://api.github.com/users/Eoksni/repos",
      "events_url": "https://api.github.com/users/Eoksni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Eoksni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T22:17:50Z",
    "updated_at": "2017-11-05T22:17:50Z",
    "author_association": "NONE",
    "body": "Actually, I made my workaround even more convenient. I just have this snippet at the start of my python notebook, and then I can use Series.plot in ordinal way, but it now puts ylabel as I wanted.\r\n```python\r\nfrom functools import wraps\r\n\r\ndef monkey_patch_series_plot():\r\n    \"\"\"Makes Series.plot to show series name as ylabel/xlabel according to plot kind.\"\"\"\r\n    f = pd.Series.plot.__call__\r\n    @wraps(f)\r\n    def _decorator(*kargs, **kwargs):\r\n        res = f(*kargs, **kwargs)\r\n        s = kargs[0].__dict__['_data']\r\n        if s.name:\r\n            try:\r\n                kind = kwargs['kind']\r\n            except KeyError:\r\n                kind = 'line'\r\n            if kind == 'line' or kind == 'scatter':\r\n                plt.ylabel(s.name)\r\n            elif kind == 'hist':\r\n                plt.xlabel(s.name)\r\n        return res\r\n    pd.Series.plot.__call__ = _decorator\r\nmonkey_patch_series_plot()\r\n```\r\nSo, I'm entirely satisfied with this so I close the issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476593549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18124#issuecomment-476593549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18124",
    "id": 476593549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjU5MzU0OQ==",
    "user": {
      "login": "yudai-nkt",
      "id": 13291527,
      "node_id": "MDQ6VXNlcjEzMjkxNTI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13291527?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yudai-nkt",
      "html_url": "https://github.com/yudai-nkt",
      "followers_url": "https://api.github.com/users/yudai-nkt/followers",
      "following_url": "https://api.github.com/users/yudai-nkt/following{/other_user}",
      "gists_url": "https://api.github.com/users/yudai-nkt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yudai-nkt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yudai-nkt/subscriptions",
      "organizations_url": "https://api.github.com/users/yudai-nkt/orgs",
      "repos_url": "https://api.github.com/users/yudai-nkt/repos",
      "events_url": "https://api.github.com/users/yudai-nkt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yudai-nkt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T11:56:10Z",
    "updated_at": "2019-03-26T11:56:10Z",
    "author_association": "NONE",
    "body": "I was searching for a way for `pandas.Series.plot()` to automatically set its `name` to the y-axis label, and found this issue. I tried the workaround above, but\r\n\r\n```python\r\nfrom functools import wraps\r\nimport pandas as pd\r\nimport matplotlib.pyplot as plt\r\n\r\n\r\ndef monkey_patch_series_plot():\r\n    \"\"\"Makes Series.plot to show series name as ylabel/xlabel according to plot kind.\"\"\"\r\n    f = pd.Series.plot.__call__\r\n    @wraps(f)\r\n    def _decorator(*kargs, **kwargs):\r\n        res = f(*kargs, **kwargs)\r\n        s = kargs[0].__dict__['_data']\r\n        if s.name:\r\n            try:\r\n                kind = kwargs['kind']\r\n            except KeyError:\r\n                kind = 'line'\r\n            if kind == 'line' or kind == 'scatter':\r\n                plt.ylabel(s.name)\r\n            elif kind == 'hist':\r\n                plt.xlabel(s.name)\r\n        return res\r\n    pd.Series.plot.__call__ = _decorator\r\nmonkey_patch_series_plot()\r\n\r\n\r\nind = pd.Series(['first', 'second', 'third'], name='count')\r\ns = pd.Series([1, 2, 3], index=ind, name='i should be a y label')\r\ns.plot()\r\nplt.show()\r\n```\r\n\r\nyields the following error:\r\n```console\r\nTraceback (most recent call last):\r\n  File \"test.py\", line 29, in <module>\r\n    s.plot()\r\n  File \"test.py\", line 12, in _decorator\r\n    s = kargs[0].__dict__['_data']\r\nKeyError: '_data'\r\n```\r\n\r\nAre there any breaking changes since Pandas v0.20.3 or am I just doing something wrong? (By the way, I'd be glad if this can be accomplished out of the box to avoid internal tweaks that might cause these kind of errors in the future)"
  }
]
