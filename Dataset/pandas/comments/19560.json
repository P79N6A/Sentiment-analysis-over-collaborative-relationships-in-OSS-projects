[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/364676601",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-364676601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 364676601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NDY3NjYwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-10T18:01:45Z",
    "updated_at": "2018-02-10T18:01:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is manifesting in #11759 as well. just need a better error message."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372003191",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-372003191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 372003191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjAwMzE5MQ==",
    "user": {
      "login": "ishaan007",
      "id": 5724510,
      "node_id": "MDQ6VXNlcjU3MjQ1MTA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5724510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ishaan007",
      "html_url": "https://github.com/ishaan007",
      "followers_url": "https://api.github.com/users/ishaan007/followers",
      "following_url": "https://api.github.com/users/ishaan007/following{/other_user}",
      "gists_url": "https://api.github.com/users/ishaan007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ishaan007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ishaan007/subscriptions",
      "organizations_url": "https://api.github.com/users/ishaan007/orgs",
      "repos_url": "https://api.github.com/users/ishaan007/repos",
      "events_url": "https://api.github.com/users/ishaan007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ishaan007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-10T05:01:04Z",
    "updated_at": "2018-03-10T05:01:04Z",
    "author_association": "NONE",
    "body": " @jreback  I am looking to work on this, any pointers on which particular classes should I start inspecting ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372131475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-372131475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 372131475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjEzMTQ3NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-11T17:10:40Z",
    "updated_at": "2018-03-11T17:10:40Z",
    "author_association": "MEMBER",
    "body": "@ishaan007 you want to be looking at the various rank implementations in `pandas.core.generic.NDFrame`, `pandas.core.algorithms` and `pandas.core.groupby.GroupBy`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379501835",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-379501835",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 379501835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTUwMTgzNQ==",
    "user": {
      "login": "mapehe",
      "id": 18037297,
      "node_id": "MDQ6VXNlcjE4MDM3Mjk3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18037297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mapehe",
      "html_url": "https://github.com/mapehe",
      "followers_url": "https://api.github.com/users/mapehe/followers",
      "following_url": "https://api.github.com/users/mapehe/following{/other_user}",
      "gists_url": "https://api.github.com/users/mapehe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mapehe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mapehe/subscriptions",
      "organizations_url": "https://api.github.com/users/mapehe/orgs",
      "repos_url": "https://api.github.com/users/mapehe/repos",
      "events_url": "https://api.github.com/users/mapehe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mapehe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-07T21:52:32Z",
    "updated_at": "2018-04-07T21:53:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "In case @ishaan007 isn't still on this I could have a look since this is tagged \"good first issue\" and would seem like a good way to get to know the codebase a bit."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379571452",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-379571452",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 379571452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU3MTQ1Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-08T18:30:59Z",
    "updated_at": "2018-04-08T18:30:59Z",
    "author_association": "MEMBER",
    "body": "@mapehe sure give it a shot"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379785258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-379785258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 379785258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTc4NTI1OA==",
    "user": {
      "login": "mapehe",
      "id": 18037297,
      "node_id": "MDQ6VXNlcjE4MDM3Mjk3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18037297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mapehe",
      "html_url": "https://github.com/mapehe",
      "followers_url": "https://api.github.com/users/mapehe/followers",
      "following_url": "https://api.github.com/users/mapehe/following{/other_user}",
      "gists_url": "https://api.github.com/users/mapehe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mapehe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mapehe/subscriptions",
      "organizations_url": "https://api.github.com/users/mapehe/orgs",
      "repos_url": "https://api.github.com/users/mapehe/repos",
      "events_url": "https://api.github.com/users/mapehe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mapehe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T15:07:03Z",
    "updated_at": "2018-04-09T15:07:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "> * Are not consistent across Series, DataFrame and GroupBy objects with various arguments\r\n\r\nSo I've had a look at the above point, please correct me if I've misunderstood something. `Series` and `DataFrame` both inherit `rank()` from `pandas.core.generic.NDFrame` which essentially executes `rank()` in `pandas.core.algorithms`. This eventually calls a cython implementation in `algos_rank_helper.pxi`. The function `rank()` in `GroupBy` goes through a completely distinct set of functions and eventually calls an implementation in `groupby_helper.pxi`.\r\n\r\nRunning `pd.Series(vals).rank(method='first')` would cause an error because of this check:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/2431641ad7882326d3d65a35319ef4093cdbae9c/pandas/_libs/algos_rank_helper.pxi.in#L166-L167\r\n\r\nOn the other hand `pd.Series(vals).rank()` works because a similar error is not raised for `method=average`.\r\n\r\nIn the case of `GroupBy`, an implementation for object ranking doesn't seem to exist because of line 412?\r\nhttps://github.com/pandas-dev/pandas/blob/2431641ad7882326d3d65a35319ef4093cdbae9c/pandas/_libs/groupby_helper.pxi.in#L412-L419\r\n\r\nI don't know the codebase well enough to make a good decision about how these issues should be handled. If `GroupBy.rank()` is not supposed to support non-numeric data, maybe a type check would be appropriate around here?\r\nhttps://github.com/pandas-dev/pandas/blob/2431641ad7882326d3d65a35319ef4093cdbae9c/pandas/core/groupby/groupby.py#L2453-L2461\r\nI guess the inconsistency between `pd.Series(vals).rank()` and `pd.Series(vals).rank(method='first')` could be solved by modifying `algos_rank_helper.pxi.in`, but I have no idea how many things it would break. :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379798943",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-379798943",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 379798943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTc5ODk0Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T15:47:27Z",
    "updated_at": "2018-04-09T15:47:27Z",
    "author_association": "MEMBER",
    "body": "Nice research. Best approach would be to simply raise at the start of the method you found in algos for object dtypes, rather than only doing it for the `TIEBREAK_FIRST` argument"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380009806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-380009806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 380009806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDAwOTgwNg==",
    "user": {
      "login": "mapehe",
      "id": 18037297,
      "node_id": "MDQ6VXNlcjE4MDM3Mjk3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18037297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mapehe",
      "html_url": "https://github.com/mapehe",
      "followers_url": "https://api.github.com/users/mapehe/followers",
      "following_url": "https://api.github.com/users/mapehe/following{/other_user}",
      "gists_url": "https://api.github.com/users/mapehe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mapehe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mapehe/subscriptions",
      "organizations_url": "https://api.github.com/users/mapehe/orgs",
      "repos_url": "https://api.github.com/users/mapehe/repos",
      "events_url": "https://api.github.com/users/mapehe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mapehe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T07:58:09Z",
    "updated_at": "2018-04-10T07:58:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the reply @WillAyd. So you'd suggest replacing the current`rank_1d_object()` with a function that just runs `raise ValueError('first not supported for non-numeric data')`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380012373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-380012373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 380012373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDAxMjM3Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T08:07:50Z",
    "updated_at": "2018-04-10T08:07:50Z",
    "author_association": "MEMBER",
    "body": "Hmm well per the original comment we would still want to support ranking of ordered categoricals so I don't think we can entirely do away with the object function. The `rank` method that calls the Cython equivalent is located in `pandas.core.algorithms` - I'd suggest taking a look at that and seeing where it makes sense to do introspection and either allow the ranking (ordered Categorical) or raise"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380105567",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-380105567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 380105567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDEwNTU2Nw==",
    "user": {
      "login": "mapehe",
      "id": 18037297,
      "node_id": "MDQ6VXNlcjE4MDM3Mjk3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18037297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mapehe",
      "html_url": "https://github.com/mapehe",
      "followers_url": "https://api.github.com/users/mapehe/followers",
      "following_url": "https://api.github.com/users/mapehe/following{/other_user}",
      "gists_url": "https://api.github.com/users/mapehe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mapehe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mapehe/subscriptions",
      "organizations_url": "https://api.github.com/users/mapehe/orgs",
      "repos_url": "https://api.github.com/users/mapehe/repos",
      "events_url": "https://api.github.com/users/mapehe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mapehe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T13:51:21Z",
    "updated_at": "2018-04-10T13:53:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "One could use something like this in `algos.rank` to only allow ordered Categorials to be ranked:\r\n```Python\r\n    if is_object_dtype(values):\r\n        def raise_non_numeric_error():\r\n            raise ValueError(\"pandas.core.algorithms.rank \"\r\n                            \"not supported for unordered \"\r\n                            \"non-numeric data\")\r\n        if is_categorical_dtype(values):\r\n            if not values.ordered:\r\n                raise_non_numeric_error()\r\n        else:\r\n            raise_non_numeric_error()\r\n```\r\nHowever, that would cause e.g. [this](https://github.com/pandas-dev/pandas/blob/4e6aa1c012d91d663edcfd13658a35f88a49da30/pandas/tests/frame/test_rank.py#L63) test to fail. These lines, for example, would directly contradict not allowing \"apple\" and \"orange\" to be ranked.\r\nhttps://github.com/pandas-dev/pandas/blob/4e6aa1c012d91d663edcfd13658a35f88a49da30/pandas/tests/frame/test_rank.py#L74-L77\r\nShould the test be modified so that raising a `ValueError` is expected instead?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380680882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-380680882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 380680882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDY4MDg4Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T05:16:44Z",
    "updated_at": "2018-04-12T05:16:44Z",
    "author_association": "MEMBER",
    "body": "There might be a few tests that require updating as part of this. At this point I’d suggest opening a PR and you can get review of your code from there"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380882186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-380882186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 380882186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDg4MjE4Ng==",
    "user": {
      "login": "mapehe",
      "id": 18037297,
      "node_id": "MDQ6VXNlcjE4MDM3Mjk3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18037297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mapehe",
      "html_url": "https://github.com/mapehe",
      "followers_url": "https://api.github.com/users/mapehe/followers",
      "following_url": "https://api.github.com/users/mapehe/following{/other_user}",
      "gists_url": "https://api.github.com/users/mapehe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mapehe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mapehe/subscriptions",
      "organizations_url": "https://api.github.com/users/mapehe/orgs",
      "repos_url": "https://api.github.com/users/mapehe/repos",
      "events_url": "https://api.github.com/users/mapehe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mapehe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T17:23:19Z",
    "updated_at": "2018-04-12T17:23:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry for the spam, I did't know the commits are added here. I opened a PR related to this issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407952766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-407952766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 407952766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzk1Mjc2Ng==",
    "user": {
      "login": "peterpanmj",
      "id": 13047435,
      "node_id": "MDQ6VXNlcjEzMDQ3NDM1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/13047435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peterpanmj",
      "html_url": "https://github.com/peterpanmj",
      "followers_url": "https://api.github.com/users/peterpanmj/followers",
      "following_url": "https://api.github.com/users/peterpanmj/following{/other_user}",
      "gists_url": "https://api.github.com/users/peterpanmj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peterpanmj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peterpanmj/subscriptions",
      "organizations_url": "https://api.github.com/users/peterpanmj/orgs",
      "repos_url": "https://api.github.com/users/peterpanmj/repos",
      "events_url": "https://api.github.com/users/peterpanmj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peterpanmj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T02:06:38Z",
    "updated_at": "2018-07-26T02:06:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd @jreback \r\n``DataFrame.rank`` and ``Series.rank`` currently support none-categorical object dtype, and unordered categorical dtype.\r\n```\r\nIn [42]: df\r\nOut[42]:\r\n   A  B\r\n0  a  b\r\n1  b  c\r\n2  c  c\r\n3  a  d\r\n\r\nIn [43]: df.dtypes\r\nOut[43]:\r\nA    object\r\nB    object\r\ndtype: object\r\n\r\nIn [44]: df.rank()\r\nOut[44]:\r\n     A    B\r\n0  1.5  1.0\r\n1  3.0  2.5\r\n2  4.0  2.5\r\n3  1.5  4.0\r\n```\r\nIf we no longer support rank calculation on those conditions, perhaps should give a deprecation warning first ? Personally, I use ``DataFrame.rank`` on string data all the time. It will cause some inconvenience for users like me if we remove the support. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407954871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19560#issuecomment-407954871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19560",
    "id": 407954871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzk1NDg3MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T02:20:35Z",
    "updated_at": "2018-07-26T02:20:35Z",
    "author_association": "MEMBER",
    "body": "@peterpanmj I think that is a good idea. Could target deprecate for 0.24 and officially drop in a future version"
  }
]
