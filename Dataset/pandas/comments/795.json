[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4376686",
    "html_url": "https://github.com/pandas-dev/pandas/issues/795#issuecomment-4376686",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/795",
    "id": 4376686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzY2ODY=",
    "user": {
      "login": "hammer",
      "id": 15233,
      "node_id": "MDQ6VXNlcjE1MjMz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/15233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hammer",
      "html_url": "https://github.com/hammer",
      "followers_url": "https://api.github.com/users/hammer/followers",
      "following_url": "https://api.github.com/users/hammer/following{/other_user}",
      "gists_url": "https://api.github.com/users/hammer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hammer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hammer/subscriptions",
      "organizations_url": "https://api.github.com/users/hammer/orgs",
      "repos_url": "https://api.github.com/users/hammer/repos",
      "events_url": "https://api.github.com/users/hammer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hammer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-07T20:33:44Z",
    "updated_at": "2012-03-07T20:39:38Z",
    "author_association": "NONE",
    "body": "I'm hitting this issue right now with the MovieLens 100k dataset, which uses the iso8859_2 encoding (as inferred by chardet).\n\nMy issue: when I call df.to_string, I can pass \"force_unicode=True\". However, I am not sure how to set force_unicode=True for all calls to to_string, e.g. any time repr() is called on df, which occurs when printing the df to the shell.\n\nGnarly issue. Character encodings in Python are never fun.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4381746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/795#issuecomment-4381746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/795",
    "id": 4381746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODE3NDY=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-07T23:52:34Z",
    "updated_at": "2012-03-07T23:52:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hammer : Is this with the current development version of pandas? Can you post the traceback somewhere?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4481439",
    "html_url": "https://github.com/pandas-dev/pandas/issues/795#issuecomment-4481439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/795",
    "id": 4481439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODE0Mzk=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-13T18:35:56Z",
    "updated_at": "2012-03-13T18:36:14Z",
    "author_association": "MEMBER",
    "body": "@hammer I'm able to reproduce the issue on the movielens data. If you pass `encoding='iso8859_2'` when you use `read_csv` everything works fine. \n\n```\nIn [8]: df = read_csv('/Users/wesm/code/pandas/pandas/tests/unicode_series.csv', header=None, encoding='iso8859_2')\n\nIn [9]: df\nOut[9]: \n     X.1                                                 X.2\n0   1582                Invitation, The (Zaproszenie) (1986)\n1   1583                      Symphonie pastorale, La (1946)\n2   1584                               American Dream (1990)\n3   1585                               Lashou shentan (1992)\n4   1586                       Terror in a Texas Town (1958)\n5   1587                                Salut cousin! (1996)\n6   1588                                  Schizopolis (1996)\n7   1589                              To Have, or Not (1995)\n8   1590                               Duoluo tianshi (1995)\n9   1591                              Magic Hour, The (1998)\n10  1592                           Death in Brunswick (1991)\n11  1593                                      Everest (1998)\n12  1594                                     Shopping (1994)\n13  1595                            Nemesis 2: Nebula (1995)\n14  1596                               Romper Stomper (1992)\n15  1597                             City of Industry (1997)\n16  1598                       Someone Else's America (1995)\n17  1599                                 Guantanamera (1994)\n18  1600                                Office Killer (1997)\n19  1601                        Price Above Rubies, A (1998)\n20  1602                                       Angela (1995)\n21  1603                           He Walked by Night (1948)\n22  1604                                Love Serenade (1996)\n23  1605                                     Deceiver (1997)\n24  1606                            Hurricane Streets (1998)\n25  1607                                        Buddy (1997)\n26  1608                                      B*A*P*S (1997)\n27  1609                  Truth or Consequences, N.M. (1997)\n28  1610                           Intimate Relations (1996)\n29  1611                             Leading Man, The (1996)\n30  1612                                   Tokyo Fist (1995)\n31  1613                     Reluctant Debutante, The (1958)\n32  1614                           Warriors of Virtue (1997)\n33  1615                                 Desert Winds (1995)\n34  1616                                    Hugo Pool (1997)\n35  1617                             King of New York (1990)\n36  1618                              All Things Fair (1996)\n37  1619                               Sixth Man, The (1997)\n38  1620                               Butterfly Kiss (1995)\n39  1621                                Paris, France (1993)\n40  1622                                Cérémonie, La (1995)\n41  1623                                         Hush (1998)\n42  1624                                   Nightwatch (1997)\n43  1625          Nobody Loves Me (Keiner liebt mich) (1994)\n44  1626                                    Wife, The (1995)\n45  1627                                     Lamerica (1994)\n46  1628                                    Nico Icon (1995)\n47  1629  Silence of the Palace, The (Saimt el Qusur) (1994)\n48  1630                               Slingshot, The (1993)\n49  1631         Land and Freedom (Tierra y libertad) (1995)\n50  1632                  Á köldum klaka (Cold Fever) (1994)\n51  1633     Etz Hadomim Tafus (Under the Domin Tree) (1994)\n52  1634                                 Two Friends (1986) \n53  1635                          Brothers in Trouble (1995)\n54  1636                                   Girls Town (1996)\n55  1637                                  Normal Life (1996)\n56  1638                 Bitter Sugar (Azucar Amargo) (1996)\n57  1639                              Eighth Day, The (1996)\n58  1640                                     Dadetown (1995)\n59  1641                            Some Mother's Son (1996)\n60  1642                                   Angel Baby (1995)\n61  1643                             Sudden Manhattan (1996)\n62  1644                             Butcher Boy, The (1998)\n63  1645                                Men With Guns (1997)\n64  1646                                      Hana-bi (1997)\n65  1647                             Niagara, Niagara (1997)\n66  1648                                 Big One, The (1997)\n67  1649                             Butcher Boy, The (1998)\n68  1650                        Spanish Prisoner, The (1997)\n69  1651                    Temptress Moon (Feng Yue) (1996)\n70  1652   Entertaining Angels: The Dorothy Day Story (1996)\n71  1653                        Chairman of the Board (1998)\n72  1654                                   Favor, The (1994)\n73  1655                                  Little City (1998)\n74  1656                                       Target (1995)\n75  1657                       Substance of Fire, The (1996)\n76  1658                     Getting Away With Murder (1996)\n77  1659                                  Small Faces (1995)\n78  1660                                 New Age, The (1994)\n79  1661                                  Rough Magic (1995)\n80  1662                             Nothing Personal (1995)\n81  1663                      8 Heads in a Duffel Bag (1997)\n82  1664                            Brother's Kiss, A (1997)\n83  1665                                         Ripe (1996)\n84  1666                               Next Step, The (1995)\n85  1667                           Wedding Bell Blues (1996)\n86  1668                            MURDER and murder (1996)\n87  1669                                      Tainted (1998)\n88  1670                           Further Gesture, A (1996)\n89  1671                                         Kika (1993)\n90  1672                                       Mirage (1995)\n91  1673                                   Mamma Roma (1962)\n92  1674                               Sunchaser, The (1996)\n93  1675                             War at Home, The (1996)\n94  1676                                Sweet Nothing (1995)\n95  1677                                   Mat' i syn (1997)\n96  1678                                    B. Monkey (1998)\n97  1679                                Sliding Doors (1998)\n98  1680                                 You So Crazy (1994)\n99  1681           Scream of Stone (Schrei aus Stein) (1991)\n```\n\nI'll see about doing this automatically with chardet or some way to modify the repr code to not blow up with a UnicodeError\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4485350",
    "html_url": "https://github.com/pandas-dev/pandas/issues/795#issuecomment-4485350",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/795",
    "id": 4485350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODUzNTA=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-13T20:27:38Z",
    "updated_at": "2012-03-13T20:27:38Z",
    "author_association": "MEMBER",
    "body": "ok @hammer I think I have this sorted out. If you don't specify the encoding it will not blow up anymore: \n\n```\nIn [3]: df = read_csv('pandas/tests/unicode_series.csv', header=None)\nIn [4]: df\nOut[4]: \n     X.1                                                 X.2\n0   1617                             King of New York (1990)\n1   1618                              All Things Fair (1996)\n2   1619                               Sixth Man, The (1997)\n3   1620                               Butterfly Kiss (1995)\n4   1621                                Paris, France (1993)\n5   1622                                C?r?monie, La (1995)\n6   1623                                         Hush (1998)\n7   1624                                   Nightwatch (1997)\n8   1625          Nobody Loves Me (Keiner liebt mich) (1994)\n9   1626                                    Wife, The (1995)\n10  1627                                     Lamerica (1994)\n11  1628                                    Nico Icon (1995)\n12  1629  Silence of the Palace, The (Saimt el Qusur) (1994)\n13  1630                               Slingshot, The (1993)\n14  1631         Land and Freedom (Tierra y libertad) (1995)\n15  1632                  ? k?ldum klaka (Cold Fever) (1994)\n16  1633     Etz Hadomim Tafus (Under the Domin Tree) (1994)\n17  1634                                  Two Friends (1986)\n```\n\nbut if you do, it will render the Unicode correctly in the console. \n\n```\nIn [5]: df = read_csv('pandas/tests/unicode_series.csv', header=None, encoding='iso-8859-2')\nIn [6]: df\nOut[6]: \n     X.1                                                 X.2\n0   1617                             King of New York (1990)\n1   1618                              All Things Fair (1996)\n2   1619                               Sixth Man, The (1997)\n3   1620                               Butterfly Kiss (1995)\n4   1621                                Paris, France (1993)\n5   1622                                Cérémonie, La (1995)\n6   1623                                         Hush (1998)\n7   1624                                   Nightwatch (1997)\n8   1625          Nobody Loves Me (Keiner liebt mich) (1994)\n9   1626                                    Wife, The (1995)\n10  1627                                     Lamerica (1994)\n11  1628                                    Nico Icon (1995)\n12  1629  Silence of the Palace, The (Saimt el Qusur) (1994)\n13  1630                               Slingshot, The (1993)\n14  1631         Land and Freedom (Tierra y libertad) (1995)\n15  1632                  Á köldum klaka (Cold Fever) (1994)\n16  1633     Etz Hadomim Tafus (Under the Domin Tree) (1994)\n17  1634                                  Two Friends (1986)\n```\n\nShort of shipping chardet I don't know if there's a way to automatically infer the encoding\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4486068",
    "html_url": "https://github.com/pandas-dev/pandas/issues/795#issuecomment-4486068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/795",
    "id": 4486068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODYwNjg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-13T20:58:45Z",
    "updated_at": "2012-03-13T20:58:45Z",
    "author_association": "MEMBER",
    "body": "However this broke Python 3 tests. leaving issue open\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4486815",
    "html_url": "https://github.com/pandas-dev/pandas/issues/795#issuecomment-4486815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/795",
    "id": 4486815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODY4MTU=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-13T21:32:00Z",
    "updated_at": "2012-03-13T21:32:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll look into it with Python 3.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4488170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/795#issuecomment-4488170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/795",
    "id": 4488170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODgxNzA=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-13T22:46:14Z",
    "updated_at": "2012-03-13T22:46:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I get one failure, with reading the newly added CSV file. `pandas.core.common._get_handle` (https://github.com/pydata/pandas/blob/master/pandas/core/common.py#L651) returns a text-mode file handle in Python 3, and the default behaviour is to throw errors if the file can't be decoded with the (platform dependent) default encoding. Specifying `errors=\"replace\"` gets the same behaviour as in Python 2 here (unknown characters replaced with �), but I've not looked at where else `_get_handle` is used.\n"
  }
]
