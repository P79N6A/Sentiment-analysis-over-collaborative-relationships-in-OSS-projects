[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6815208",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6815208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6815208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MTUyMDg=",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-06T20:13:54Z",
    "updated_at": "2012-07-06T20:13:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I ran your file on my box and I get a performance difference of about >2x.\n\nIn [7]: %timeit using_to_datetime(test_data)\n1 loops, best of 3: 4 s per loop\n\nIn [8]: %timeit faking_tz(test_data)\n1 loops, best of 3: 1.44 s per loop\n\nIn [9]: %timeit concat_gmt_tz(test_data)\n1 loops, best of 3: 1.74 s per loop\n\nI think it's because pandas is using dateutil internally while numpy uses its own parser that's faster:\n\nIn [10]: from numpy.core._mx_datetime_parser import datetime_from_string as p2\n\nIn [11]: from dateutil.parser import parse as p1\n\nIn [12]: %timeit test_data.apply(p1)\n1 loops, best of 3: 3.75 s per loop\n\nIn [13]: %timeit test_data.apply(p2)\n1 loops, best of 3: 1.22 s per loop\n\nI'll see whether we can convert pandas to use the faster date parsing code\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6822641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6822641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6822641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjI2NDE=",
    "user": {
      "login": "manuteleco",
      "id": 1827568,
      "node_id": "MDQ6VXNlcjE4Mjc1Njg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1827568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manuteleco",
      "html_url": "https://github.com/manuteleco",
      "followers_url": "https://api.github.com/users/manuteleco/followers",
      "following_url": "https://api.github.com/users/manuteleco/following{/other_user}",
      "gists_url": "https://api.github.com/users/manuteleco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manuteleco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manuteleco/subscriptions",
      "organizations_url": "https://api.github.com/users/manuteleco/orgs",
      "repos_url": "https://api.github.com/users/manuteleco/repos",
      "events_url": "https://api.github.com/users/manuteleco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manuteleco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-07T12:29:02Z",
    "updated_at": "2012-07-07T12:29:02Z",
    "author_association": "NONE",
    "body": "Sorry, I should have said it before, but I'm using the '1.8.0.dev-6a06466' version for numpy and  '0.8.0' for pandas. It seems like I get much different performances due to recent improvements in numpy.\n\nThe results I get are these:\nto_datetime(): 8.36494483948\nfaking tz: 0.0932590007782\nRatio: 89.6958445799\n\nto_datetime(): 8.36494483948\nconcat tz: 0.0312120437622\nRatio: 268.003752116\n\nI also run some simple tests using both numpy '1.8.0.dev-6a06466' and '1.6.2' to compare performance:\n\nIn [2]: import numpy as np\nIn [3]: from datetime import datetime\nIn [4]: DATETIME_FORMAT = \"%Y-%m-%d %H:%M:%S\"\nIn [5]: str_datetime = datetime.now().strftime(DATETIME_FORMAT)\nIn [7]: %timeit np.datetime64(str_datetime)\n\nThe results are:\n- '1.8.0.dev-6a06466':\n     100000 loops, best of 3: 3.83 us per loop\n- '1.6.2':\n     10000 loops, best of 3: 95.9 us per loop\n\n~25 times faster in the newer version\n\nSo parsing data with the current develpment version for numpy seems to be significantly faster than using to_datetime. Maybe it could be possible for to_datetime to make use of the new numpy improvements in the future, or maybe try to apply the same optimizations. It would be really nice to be able to use to_datetime with a performance similar to that offered by numpy.\n\nThanks again and regards.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6823038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6823038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6823038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MjMwMzg=",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-07T13:24:44Z",
    "updated_at": "2012-07-07T13:24:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the feedback!\nI'll keep the issue open until we improve the performance on to_datetime.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6832642",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6832642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6832642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MzI2NDI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-08T16:58:05Z",
    "updated_at": "2012-07-08T16:58:05Z",
    "author_association": "MEMBER",
    "body": "It should be straightforward to optimize `to_datetime` for ISO8601 format (what you're describing). Currently it is very general and handles a lot more date formats than NumPy does. Will let you know when one of us gets a chance to work on it. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6922387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6922387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6922387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjIzODc=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-11T22:56:39Z",
    "updated_at": "2012-07-11T22:57:47Z",
    "author_association": "MEMBER",
    "body": "I was able to optimize the ISO8601 case and bring down the parsing time on 20000 strings from 1.87 seconds to 22.1 ms (85x improvement). Do you think this is adequate? I don't think things can get all that much faster than this.\n\n```\nIn [4]: to_datetime(strings)\nOut[4]: \n<class 'pandas.tseries.index.DatetimeIndex'>\n[2000-01-01 00:00:00, ..., 2002-04-13 07:00:00]\nLength: 20000, Freq: None, Timezone: None\n\nIn [5]: timeit to_datetime(strings)\n1 loops, best of 3: 1.87 s per loop\n\nIn [6]: exit\n18:54 ~/code/pandas  ((3824af1...))$ git checkout master\nPrevious HEAD position was 3824af1... BUG: override ndarray.tolist in Index for MultiIndex compat, close #1576\nSwitched to branch 'master'\nYour branch is ahead of 'origin/master' by 1 commit.\n\n...\n\n18:55 ~/code/pandas  (master)$ ipy\nPython 2.7.2 |EPD 7.1-2 (64-bit)| (default, Jul  3 2011, 15:17:51) \nType \"copyright\", \"credits\" or \"license\" for more information.\n\nIPython 0.13 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\n\nWelcome to pylab, a matplotlib-based Python environment [backend: Qt4Agg].\nFor more information, type 'help(pylab)'.\n\nIn [1]: paste\nrng = date_range('1/1/2000', periods=20000, freq='h')\nstrings = [x.strftime('%Y-%m-%d %H:%M:%S') for x in rng]\n## -- End pasted text --\n\nIn [2]: timeit to_datetime(strings)\n10 loops, best of 3: 22.1 ms per loop\n\nIn [3]: 1870 / 22.1\nOut[3]: 84.61538461538461\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6929373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6929373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6929373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjkzNzM=",
    "user": {
      "login": "manuteleco",
      "id": 1827568,
      "node_id": "MDQ6VXNlcjE4Mjc1Njg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1827568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manuteleco",
      "html_url": "https://github.com/manuteleco",
      "followers_url": "https://api.github.com/users/manuteleco/followers",
      "following_url": "https://api.github.com/users/manuteleco/following{/other_user}",
      "gists_url": "https://api.github.com/users/manuteleco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manuteleco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manuteleco/subscriptions",
      "organizations_url": "https://api.github.com/users/manuteleco/orgs",
      "repos_url": "https://api.github.com/users/manuteleco/repos",
      "events_url": "https://api.github.com/users/manuteleco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manuteleco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-12T08:13:05Z",
    "updated_at": "2012-07-12T08:13:05Z",
    "author_association": "NONE",
    "body": "Wow, definitely it is a huge improvement. It's even faster than doing .astype(\"datetime64\"). These are the results I get now in terms of performance:\n\nto_datetime(): 0.0160160064697\nfaking tz: 0.0268998146057\nRatio: 0.595394678532\n\nto_datetime(): 0.0160160064697\nconcat tz: 0.00913701057434\nRatio: 1.75287161369\n\nHowever, I've noticed the result values are different now (actually, the asserts in my sample code fail). It seems like it is making a transformation of the datetimes according to the local timezone so, for instance, \"2012-01-01 00:00:00\" becomes \"2011-12-31 23:00:00\" in my timezone (CET). This is coherent with the results yielded by .astype(\"datetime64\") and np.array([...], dtype=\"datetime64\").\n- Before:\n  to_datetime([\"2012-01-01 00:00:00\"])   ->   \"2012-01-01 00:00:00\"\n  Series([\"2012-01-01 00:00:00\"]).astype(\"datetime64\")   ->   \"2011-12-31 23:00:00\"\n- Now:\n  to_datetime([\"2012-01-01 00:00:00\"])   ->   \"2011-12-31 23:00:00\"\n  Series([\"2012-01-01 00:00:00\"]).astype(\"datetime64\")   ->   \"2011-12-31 23:00:00\"\n\nFor my application I would like to have a timezone-agnostic parsing utility just like the older to_datetime, but maybe it makes more sense that to_datetime behaves like it does now, I don't really know. This is a discussion I'm not fit to get in ;).\n\nPlease, let me know what you think about this.\nThanks for the amazing work you are all doing and sorry for the trouble ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6953231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6953231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6953231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTMyMzE=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-13T02:36:48Z",
    "updated_at": "2012-07-13T02:36:48Z",
    "author_association": "MEMBER",
    "body": "I am able to reproduce the issue. I'll try to figure out a fix\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6953338",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6953338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6953338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTMzMzg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-13T02:47:58Z",
    "updated_at": "2012-07-13T02:47:58Z",
    "author_association": "MEMBER",
    "body": "I was able to fix this, so strings are parsed as naive times now\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6959991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1571#issuecomment-6959991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1571",
    "id": 6959991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTk5OTE=",
    "user": {
      "login": "manuteleco",
      "id": 1827568,
      "node_id": "MDQ6VXNlcjE4Mjc1Njg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1827568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manuteleco",
      "html_url": "https://github.com/manuteleco",
      "followers_url": "https://api.github.com/users/manuteleco/followers",
      "following_url": "https://api.github.com/users/manuteleco/following{/other_user}",
      "gists_url": "https://api.github.com/users/manuteleco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manuteleco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manuteleco/subscriptions",
      "organizations_url": "https://api.github.com/users/manuteleco/orgs",
      "repos_url": "https://api.github.com/users/manuteleco/repos",
      "events_url": "https://api.github.com/users/manuteleco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manuteleco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-13T11:01:05Z",
    "updated_at": "2012-07-13T11:01:05Z",
    "author_association": "NONE",
    "body": "Awesome work! After this fix it even runs about 3x faster on top of your first 85x improvement. That really makes a difference in large datasets.\n\nMy sample code outputs these estimates now:\n\nto_datetime(): 0.00525259971619\nfaking tz: 0.0250147819519\nRatio: 0.209979832176\n\nto_datetime(): 0.00525259971619\nconcat tz: 0.00868258476257\nRatio: 0.604958069494\n\nThanks.\n"
  }
]
