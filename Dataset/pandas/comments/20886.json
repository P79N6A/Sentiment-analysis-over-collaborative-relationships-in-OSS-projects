[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385517024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385517024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385517024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTUxNzAyNA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T20:21:55Z",
    "updated_at": "2018-04-30T20:21:55Z",
    "author_association": "MEMBER",
    "body": "I think this should also include deprecating setting the `.freq` attribute, unless I'm misinterpreting https://github.com/pandas-dev/pandas/pull/20772#issuecomment-385359240.\r\n\r\nI've prepared some code to implement these changes in case the decision was made to add this in #20772, as I didn't want to be the person holding up 0.23.0.  Just have some minor renaming changes to make (`asfreq` --> `set_freq`) before opening a PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385569377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385569377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385569377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTU2OTM3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T00:34:44Z",
    "updated_at": "2018-05-01T00:34:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes that would be nice @jschendel "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385608844",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385608844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385608844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTYwODg0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T06:28:29Z",
    "updated_at": "2018-05-01T06:28:29Z",
    "author_association": "MEMBER",
    "body": "To reiterate my reason to hold back on this on the previous PR:\r\n\r\n- This is not a common operation, but, we want that is is possible for those that need it. But given that, is this worth adding a new method? (since it is already possible)\r\n- Another argument was that setting an attribute directly on an immutable object is \"wrong\". I would argue that this is rather pythonic to work with getter/setter properties instead of `get_`, `set_` functions (although in this case we *only* have the `set_` part). \r\n  Also, this does not alter the underlying Index whatsoever, it is just changing a single informative attribute, just like we can do `idx.name = 'val'`\r\n- Allowing setting `freq` on a DatetimeIndex/TimedeltaIndex and not on PeriodIndex (that was deprecated in the previous PR) creates an inconsistency. This is true, however: a) the `freq` argument is really something of different importance for PI vs DTI/TDI, although it has the same name (for PI it is part of the dtype, and so setting it changes the interpretation of the data) and b) adding a `set_freq` to DTI/TDI also does not solve this inconsistency at all.\r\n\r\nSo to summarize: I just don't see the need to have this, doing `dti.freq = 'D'` already gives us what is needed."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385639516",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385639516",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385639516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTYzOTUxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T10:10:37Z",
    "updated_at": "2018-05-01T10:10:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche not having this is just inconsistent. We have an immutable index, having *any* writebable properties is just plain wrong. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385640600",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385640600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385640600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTY0MDYwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T10:17:32Z",
    "updated_at": "2018-05-01T10:17:32Z",
    "author_association": "MEMBER",
    "body": "> not having this is just inconsistent.\r\n\r\nDid you read my explanation of why this does not solve inconsistency at all?\r\n\r\n> We have an immutable index, having any writebable properties is just plain wrong.\r\n\r\nPlease explain *why* this is \"plain wrong\", I give a whole bunch of arguments, you just \"plain wrong\". It's not because the index *values* are immutable that certain of its attributes cannot be mutable (`name` ?)\r\n\r\nPersonally I don't really care about this (it is such a minor use-case, but exactly for that I don't think it is worth a new method), but it annoys me you dismiss my attempt to discussion with just \"plain wrong\"."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385644129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385644129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385644129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTY0NDEyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T10:41:17Z",
    "updated_at": "2018-05-01T10:41:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "because setting an attribute in an immutable object is wrong - not sure how much more clear than that\r\n\r\nfor names we have set_name which returns a new object\r\n\r\none does not expect immutable objects to be mutated"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385661766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385661766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385661766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTY2MTc2Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T12:40:22Z",
    "updated_at": "2018-05-01T12:40:22Z",
    "author_association": "MEMBER",
    "body": "> for names we have set_name which returns a new object\r\n\r\nYes, but we also can set the `name` object directly. This works fine. And personally, if I need this, I use that instead of the `set_names` method:\r\n\r\n```\r\nidx = idx.set_names('name')\r\nvs\r\nidx.name = 'name'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385662123",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385662123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385662123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTY2MjEyMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T12:42:19Z",
    "updated_at": "2018-05-01T12:42:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "We set the name directly in several places in the docs as well. What's the\n(user-facing) issue caused by that?\n\nOn Tue, May 1, 2018 at 7:40 AM, Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> for names we have set_name which returns a new object\n>\n> Yes, but we also can set the name object directly. This works fine. And\n> personally, if I need this, I use that instead of the set_names method:\n>\n> idx = idx.set_names('name')\n> vsidx.name = 'name'\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385661766>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIlblT3wpgnxHcgIuyg_ACBQSKQmtks5tuFe5gaJpZM4Ts93t>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385934022",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-385934022",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 385934022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTkzNDAyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T10:30:28Z",
    "updated_at": "2018-05-02T10:30:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "setting attributes on immutable objects is just a bad pattern. there is no reason to extend / expand this. we have been pro-actively removing this attribute access, e.g. ``.tz``, ``.labels``, and ``.levels`` for MI for a while. Why allow more of this when its not our idiomatic pattern. Sure ``.name`` is probably not ever changeable, but expanding this is a no-go.\r\n\r\nFinally, having methods allows one to return a new object and chain things. \r\n\r\nSetting attributes generallly is pretty much an anti-pattern, similar to the ``inplace`` kwarg (which we have slated for deprecation as well)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386710752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20886#issuecomment-386710752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20886",
    "id": 386710752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcxMDc1Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T19:36:11Z",
    "updated_at": "2018-05-04T19:36:11Z",
    "author_association": "MEMBER",
    "body": "> we have been pro-actively removing this attribute access, e.g. .tz, .labels, and .levels for MI for a while. \r\n\r\nBut all those examples do change the representation of the index data or change the index data itself. Setting the `freq` does not do such a thing.\r\n\r\nHaving a property (with getter/setter functionality under the hood) is certainly pythonic compared to explicit `get_`/`set_` functions.\r\n\r\nThere are two reasons to have a `set_freq` method:\r\n\r\n- To be able to use it in a method chain.\r\n- Because we find that changing the `freq` of an index should always result in a new object (practical version of your immutability argument)\r\n\r\nFor the second bullet point: I personally don't think it is needed (it is in any case not needed technically), similarly as changing the name does not need to return a new object (so you can do eg `df.index.name = ...`). \r\n\r\nAnd for the first, the question is then the question we always ask ourselves if somebody opens an issue for a new method / functionality: is this functionality worth it for adding yet another method to the already crowded namespace? \r\nAnd in my opinion being able to chain it is not worth it."
  }
]
