[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/358711414",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19300#issuecomment-358711414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19300",
    "id": 358711414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODcxMTQxNA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T17:00:31Z",
    "updated_at": "2018-01-18T17:00:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Standard recommendation  - avoid subclassing if you can!  There will be some new accessor apis in `0.23` that may make this easier in some cases (#18827)\r\n\r\nThat said, here you need to make `new_property` an optional arg - `DataFrame.__finalize__` will pass it along to the sliced instance.\r\n\r\n```python\r\n# omitted\r\n  def __init__(self, data, new_property=None, index=None, columns=None, dtype=None, copy=True):\r\n# omitted\r\n\r\ndf1 = MyDataFrame(data1, new_property='value')\r\n\r\nIn [93]: df1[['a', 'b']].new_property\r\nOut[93]: 'value'\r\n```\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/358730839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19300#issuecomment-358730839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19300",
    "id": 358730839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODczMDgzOQ==",
    "user": {
      "login": "hlums",
      "id": 16907204,
      "node_id": "MDQ6VXNlcjE2OTA3MjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16907204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hlums",
      "html_url": "https://github.com/hlums",
      "followers_url": "https://api.github.com/users/hlums/followers",
      "following_url": "https://api.github.com/users/hlums/following{/other_user}",
      "gists_url": "https://api.github.com/users/hlums/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hlums/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hlums/subscriptions",
      "organizations_url": "https://api.github.com/users/hlums/orgs",
      "repos_url": "https://api.github.com/users/hlums/repos",
      "events_url": "https://api.github.com/users/hlums/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hlums/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T18:03:37Z",
    "updated_at": "2018-01-18T18:03:37Z",
    "author_association": "NONE",
    "body": "@chris-b1  Thanks for the reply! Yes, making new_property will avoid the error, but it doesn't enforce MyDataFrame to have new_property. The user will be able to create MyDataFrame by ```df1=MyDataFrame(data1)``` without passing a value for new_property, which will cause problem in downstream processing. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/358739959",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19300#issuecomment-358739959",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19300",
    "id": 358739959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODczOTk1OQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T18:35:10Z",
    "updated_at": "2018-01-18T18:35:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "In that case you could define an alternative constructor that only pandas uses and enforce your api on `__init__`\r\n\r\n```python\r\nclass MyDataFrame(pd.DataFrame):\r\n    @property\r\n    def _constructor(self):\r\n        return MyDataFrame._internal_ctor\r\n\r\n    _metadata = ['new_property']\r\n\r\n    @classmethod\r\n    def _internal_ctor(cls, *args, **kwargs):\r\n        kwargs['new_property'] = None\r\n        return cls(*args, **kwargs)\r\n\r\n    def __init__(self, data, new_property, index=None, columns=None, dtype=None, copy=True):\r\n        super(MyDataFrame, self).__init__(data=data,\r\n                                          index=index,\r\n                                          columns=columns,\r\n                                          dtype=dtype,\r\n                                          copy=copy)\r\n        self.new_property = new_property\r\n\r\ndata1 = {'a': [1, 2, 3], 'b': [4, 5, 6], 'c': [15, 25, 30], 'd': [1, 1, 2]}\r\ndf1 = MyDataFrame(data1, new_property='value')\r\n\r\ndf1[['a', 'b']].new_property\r\nOut[121]: 'value'\r\n\r\nMyDataFrame(data1)\r\nTypeError: __init__() missing 1 required positional argument: 'new_property'\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/358820143",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19300#issuecomment-358820143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19300",
    "id": 358820143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODgyMDE0Mw==",
    "user": {
      "login": "hlums",
      "id": 16907204,
      "node_id": "MDQ6VXNlcjE2OTA3MjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16907204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hlums",
      "html_url": "https://github.com/hlums",
      "followers_url": "https://api.github.com/users/hlums/followers",
      "following_url": "https://api.github.com/users/hlums/following{/other_user}",
      "gists_url": "https://api.github.com/users/hlums/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hlums/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hlums/subscriptions",
      "organizations_url": "https://api.github.com/users/hlums/orgs",
      "repos_url": "https://api.github.com/users/hlums/repos",
      "events_url": "https://api.github.com/users/hlums/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hlums/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T23:47:16Z",
    "updated_at": "2018-01-18T23:47:16Z",
    "author_association": "NONE",
    "body": "@chris-b1 Thank you so much! This is exactly what I needed! "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360194496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19300#issuecomment-360194496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19300",
    "id": 360194496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDE5NDQ5Ng==",
    "user": {
      "login": "hlums",
      "id": 16907204,
      "node_id": "MDQ6VXNlcjE2OTA3MjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16907204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hlums",
      "html_url": "https://github.com/hlums",
      "followers_url": "https://api.github.com/users/hlums/followers",
      "following_url": "https://api.github.com/users/hlums/following{/other_user}",
      "gists_url": "https://api.github.com/users/hlums/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hlums/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hlums/subscriptions",
      "organizations_url": "https://api.github.com/users/hlums/orgs",
      "repos_url": "https://api.github.com/users/hlums/repos",
      "events_url": "https://api.github.com/users/hlums/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hlums/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T16:38:44Z",
    "updated_at": "2018-01-24T16:38:44Z",
    "author_association": "NONE",
    "body": "@chris-b1 I'm getting the following error when using pd.concat on my subclass.\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda\\envs\\myenv\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2910, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-2-fb355bf594d1>\", line 15, in <module>\r\n    pd.concat([test, test])\r\n  File \"C:\\Anaconda\\envs\\myenv\\lib\\site-packages\\pandas\\core\\reshape\\concat.py\", line 207, in concat\r\n    return op.get_result()\r\n  File \"C:\\Anaconda\\envs\\myenv\\lib\\site-packages\\pandas\\core\\reshape\\concat.py\", line 412, in get_result\r\n    return (cons._from_axes(new_data, self.new_axes)\r\n  File \"C:\\Anaconda\\envs\\myenv\\lib\\site-packages\\pandas\\core\\generic.py\", line 334, in _from_axes\r\n    return cls(data, **kwargs)\r\nTypeError: __init__() missing 1 required positional argument: 'new_property'.\r\n\r\nIt seems like the _from_axes() class method in generic.py is calling the __init__() method of my class directly, without going through the _constructor. \r\nIt doesn't seem to be a solvable problem to me, but still wanted to check with a pandas expert. \r\n\r\nThanks!\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360231668",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19300#issuecomment-360231668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19300",
    "id": 360231668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDIzMTY2OA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T18:38:43Z",
    "updated_at": "2018-01-24T18:38:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you open a new issue with just a reproduction of that?  I think should be calling `_constructor` but not sure.\r\n\r\nHere's a hacky workaround\r\n\r\n```\r\n    def __init__(self, data, new_property=None, index=None, columns=None, dtype=None, copy=True):\r\n        if not isinstance(data, pd.core.internals.BlockManager) and not new_property:\r\n            raise ValueError(\"arg new_property required\")\r\n        super(MyDataFrame, self).__init__(data=data,\r\n                                          index=index,\r\n                                          columns=columns,\r\n                                          dtype=dtype,\r\n                                          copy=copy)\r\n        self.new_property = new_property\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/360248442",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19300#issuecomment-360248442",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19300",
    "id": 360248442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MDI0ODQ0Mg==",
    "user": {
      "login": "hlums",
      "id": 16907204,
      "node_id": "MDQ6VXNlcjE2OTA3MjA0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16907204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hlums",
      "html_url": "https://github.com/hlums",
      "followers_url": "https://api.github.com/users/hlums/followers",
      "following_url": "https://api.github.com/users/hlums/following{/other_user}",
      "gists_url": "https://api.github.com/users/hlums/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hlums/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hlums/subscriptions",
      "organizations_url": "https://api.github.com/users/hlums/orgs",
      "repos_url": "https://api.github.com/users/hlums/repos",
      "events_url": "https://api.github.com/users/hlums/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hlums/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-24T19:35:56Z",
    "updated_at": "2018-01-24T19:35:56Z",
    "author_association": "NONE",
    "body": "@chris-b1 Thanks for the suggestion! I will open an issue about this. For now, I'm overwriting _from_axes and make it call our internal constructor. Seems to be working fine. "
  }
]
