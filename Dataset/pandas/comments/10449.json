[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/115879881",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-115879881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 115879881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTg3OTg4MQ==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-26T20:59:35Z",
    "updated_at": "2015-06-26T20:59:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah. I misspoke earlier. The two `closed=left` doesn't seem to mean the same thing for the right end point. The first one drops it, and the second one preserves it. Maybe just make them consistent, instead of adding a parameter?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/117032147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-117032147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 117032147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzAzMjE0Nw==",
    "user": {
      "login": "dagru",
      "id": 13113957,
      "node_id": "MDQ6VXNlcjEzMTEzOTU3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13113957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dagru",
      "html_url": "https://github.com/dagru",
      "followers_url": "https://api.github.com/users/dagru/followers",
      "following_url": "https://api.github.com/users/dagru/following{/other_user}",
      "gists_url": "https://api.github.com/users/dagru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dagru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dagru/subscriptions",
      "organizations_url": "https://api.github.com/users/dagru/orgs",
      "repos_url": "https://api.github.com/users/dagru/repos",
      "events_url": "https://api.github.com/users/dagru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dagru/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-30T07:17:43Z",
    "updated_at": "2015-06-30T07:17:43Z",
    "author_association": "NONE",
    "body": "I don't think consistency is what you want here. That would mean that you shorten the Series even more, ending at 2015-01-01 00:45:00  instead of the expected 2015-01-01 01:45:00.\n\nWhat I would expect a priori from pd.date_range(closed = \"left\") is a representation of the interval, excluding its right endpoint, like\nx___x___x___\nsuch that an upsampling without any further options would lead to\nx_x_x_x_x_x_\nI don't know if that is easily possible, but at least you should have the possibility to remind it that the interval is right-open when you resample.\n\nWhat date_range [or Series?] does is not only forgetting about the endpoint, but the complete last interval\nx___x___x___  (what I think it should do)\nx___x___x        (what it does)\nsuch that an upsampling, no matter if closed or open leads to\nx_x_x_x_x\n\nAs far as I can see, you can only get it to go one step over the old endpoint if the new frequency is not a multiple of the old one, like resample(\"45T\") gets you\nx___x___x     (original)\nx__x__x__x   (closed = None)\nx__x__x         (closed = \"left\")\n\nBut if the new frequency is a multiple of the old one, it will always end at the last endpoint, no matter which option I tried.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/117121082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-117121082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 117121082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzEyMTA4Mg==",
    "user": {
      "login": "filmor",
      "id": 30848,
      "node_id": "MDQ6VXNlcjMwODQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/30848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filmor",
      "html_url": "https://github.com/filmor",
      "followers_url": "https://api.github.com/users/filmor/followers",
      "following_url": "https://api.github.com/users/filmor/following{/other_user}",
      "gists_url": "https://api.github.com/users/filmor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filmor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filmor/subscriptions",
      "organizations_url": "https://api.github.com/users/filmor/orgs",
      "repos_url": "https://api.github.com/users/filmor/repos",
      "events_url": "https://api.github.com/users/filmor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filmor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-30T10:43:13Z",
    "updated_at": "2015-06-30T10:43:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "That is exactly what I mean :)\n\nIn our context (energy), the timestamps almost always represent the beginning of an interval. In other cases it represents the end but that fails equally, I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/117128233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-117128233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 117128233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzEyODIzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-30T11:15:33Z",
    "updated_at": "2015-06-30T11:15:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@filmor I am not sure why you think this should go to the 2 hour ever. Its not included in the sample.\n\nyou can simply do this:\n\n```\nIn [20]: s.reindex(pd.date_range(\"2015-01-01\", \"2015-01-01 02:00\", freq='15T'), method='ffill')\nOut[20]: \n2015-01-01 00:00:00    1\n2015-01-01 00:15:00    1\n2015-01-01 00:30:00    1\n2015-01-01 00:45:00    1\n2015-01-01 01:00:00    1\n2015-01-01 01:15:00    1\n2015-01-01 01:30:00    1\n2015-01-01 01:45:00    1\n2015-01-01 02:00:00    1\nFreq: 15T, dtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/117129083",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-117129083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 117129083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzEyOTA4Mw==",
    "user": {
      "login": "filmor",
      "id": 30848,
      "node_id": "MDQ6VXNlcjMwODQ4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/30848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/filmor",
      "html_url": "https://github.com/filmor",
      "followers_url": "https://api.github.com/users/filmor/followers",
      "following_url": "https://api.github.com/users/filmor/following{/other_user}",
      "gists_url": "https://api.github.com/users/filmor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/filmor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/filmor/subscriptions",
      "organizations_url": "https://api.github.com/users/filmor/orgs",
      "repos_url": "https://api.github.com/users/filmor/repos",
      "events_url": "https://api.github.com/users/filmor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/filmor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-30T11:20:13Z",
    "updated_at": "2015-06-30T11:20:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, for that I have to remember the end-points. But by having an hourly timeseries with values for each point in time I already indicate (and that's what forward-fill does correctly for all points but the last one) that each timestamp represents the _start_ of a one-hour interval.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/117441754",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-117441754",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 117441754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzQ0MTc1NA==",
    "user": {
      "login": "dagru",
      "id": 13113957,
      "node_id": "MDQ6VXNlcjEzMTEzOTU3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13113957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dagru",
      "html_url": "https://github.com/dagru",
      "followers_url": "https://api.github.com/users/dagru/followers",
      "following_url": "https://api.github.com/users/dagru/following{/other_user}",
      "gists_url": "https://api.github.com/users/dagru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dagru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dagru/subscriptions",
      "organizations_url": "https://api.github.com/users/dagru/orgs",
      "repos_url": "https://api.github.com/users/dagru/repos",
      "events_url": "https://api.github.com/users/dagru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dagru/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-01T05:35:23Z",
    "updated_at": "2015-07-01T05:35:23Z",
    "author_association": "NONE",
    "body": "\"I am not sure why you think this should go to the 2 hour ever. \"\n\nBecause I expect(ed) pd.date_range(\"2015-01-01\", \"2015-01-01 02:00\", freq=\"1H\", closed=\"left\") to be an object that models the range from 00:00 until 02:00 (excluded), meaning that all timestamps until 02:00-\\eps are in the range.  If you sample with 1H frequency, that happens to stop at 01:00,  but that doesn't mean that 01:45 is not in the range I supposed to cover. Therefore I expected to get Timestamps between 01:00 and 02:00 back if I resample to a higher frequency, or at least have an option for that in .resample, which I seem to not have.\n\nFor how it looks to me,\npd.date_range(\"2015-01-01\", \"2015-01-01 02:00\", freq=\"1H\", closed=\"left\")\nis exactly the same as\npd.date_range(\"2015-01-01\", \"2015-01-01 01:00\", freq=\"1H\")\n\nbut you usually have your reasons why you go one step longer with on open ending, as opposed to stopping already one step earlier with closed ending.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/117597857",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-117597857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 117597857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzU5Nzg1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-01T10:44:38Z",
    "updated_at": "2015-07-01T10:44:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "`pd.date_range(\"2015-01-01\", \"2015-01-01 02:00\", freq=\"1H\", closed=\"left\")`\n\nstops at 1, so not sure how that should somehow magically go to 2. A closed/open right hand interval would generally include/exclude a single right hand point (e.g. the 1 in this case).\n\nIf you want to upsample to 2, then simply reindex it in the first place. Resample is already way magically, this would add another layer.\n\nAll that said if you think that you can find a reasonable api that preserves back-compat. go for it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/307442524",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-307442524",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 307442524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzQ0MjUyNA==",
    "user": {
      "login": "decatur",
      "id": 1004866,
      "node_id": "MDQ6VXNlcjEwMDQ4NjY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1004866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/decatur",
      "html_url": "https://github.com/decatur",
      "followers_url": "https://api.github.com/users/decatur/followers",
      "following_url": "https://api.github.com/users/decatur/following{/other_user}",
      "gists_url": "https://api.github.com/users/decatur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/decatur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/decatur/subscriptions",
      "organizations_url": "https://api.github.com/users/decatur/orgs",
      "repos_url": "https://api.github.com/users/decatur/repos",
      "events_url": "https://api.github.com/users/decatur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/decatur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T16:54:52Z",
    "updated_at": "2017-06-09T16:57:36Z",
    "author_association": "NONE",
    "body": "It took me hours to land here. My understanding is that\r\n``index = pd.date_range(\"2015-01-01\", \"2015-01-01 01:00\", freq=\"1H\")`` \r\nrepresents `len(index)=2` hourly slots, increasingly so if you replace `date_range` by `period_range`\r\nSo I did expect that\r\n``\r\ns = pd.Series([1,2], index=index)\r\n``\r\n``s.resample(\"15T\").pad()\r\n``\r\nhas 2*4=8 slots, not 5. Having to do\r\n``\r\ns.reindex((pd.date_range(index[0], index[-1]+1, freq='15T')-1)[1:], method='pad')\r\n``\r\nto get\r\n''\r\n2015-01-01 00:00:00    1\r\n2015-01-01 00:15:00    1\r\n2015-01-01 00:30:00    1\r\n2015-01-01 00:45:00    1\r\n2015-01-01 01:00:00    2\r\n2015-01-01 01:15:00    2\r\n2015-01-01 01:30:00    2\r\n2015-01-01 01:45:00    2\r\n''\r\nis pretty much a workaround. Btw I am also into energy."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/307480495",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-307480495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 307480495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzQ4MDQ5NQ==",
    "user": {
      "login": "winklerand",
      "id": 5320313,
      "node_id": "MDQ6VXNlcjUzMjAzMTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5320313?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/winklerand",
      "html_url": "https://github.com/winklerand",
      "followers_url": "https://api.github.com/users/winklerand/followers",
      "following_url": "https://api.github.com/users/winklerand/following{/other_user}",
      "gists_url": "https://api.github.com/users/winklerand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/winklerand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/winklerand/subscriptions",
      "organizations_url": "https://api.github.com/users/winklerand/orgs",
      "repos_url": "https://api.github.com/users/winklerand/repos",
      "events_url": "https://api.github.com/users/winklerand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/winklerand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T19:35:46Z",
    "updated_at": "2017-06-09T19:35:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@decatur \r\nI think this basically boils down to the difference between ```DatetimeIndex``` and ```PeriodIndex``` - and one current shortcoming of resampling ```PeriodIndex```.\r\n\r\n> My understanding is that\r\n> ```index = pd.date_range(\"2015-01-01\", \"2015-01-01 01:00\", freq=\"1H\")```\r\n> represents ```len(index)=2``` hourly slots\r\n\r\nIn my understanding, the ```DatetimeIndex``` does represents two points in time which are 1h apart - but it does not carry the notion of a time span, duration or \"slots\". Therefore, the last datetime in the ```index``` (\"2015-01-01 01:00\") is just a time instant which is not going to be upsampled/extended to 4 \"sub-periods\".\r\n\r\n```PeriodIndex``` would be the right fit to represent time spans - currently, resampling does not work properly when called with frequency multiples such as ```freq='15T'``` (```freq='T'``` works fine). I opened issue #15944 and tried to fix it in PR #16153. Unfortunately, I was busy with other stuff - trying to pick up on that one again in the coming days.\r\n\r\nBtw: energy data here as well ;-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/307516642",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10449#issuecomment-307516642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10449",
    "id": 307516642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzUxNjY0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-09T22:44:21Z",
    "updated_at": "2017-06-09T22:44:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah @winklerand soln is the right one here (along with some docs) for doing this."
  }
]
