[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/40016340",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-40016340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 40016340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDE2MzQw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-09T21:05:33Z",
    "updated_at": "2014-04-09T21:06:07Z",
    "author_association": "MEMBER",
    "body": "my 2c. i think `meminfo` should return your series and a property `nbytes` should return `df.meminfo().sum()`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46895779",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-46895779",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 46895779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk1Nzc5",
    "user": {
      "login": "asobrien",
      "id": 223897,
      "node_id": "MDQ6VXNlcjIyMzg5Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/223897?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asobrien",
      "html_url": "https://github.com/asobrien",
      "followers_url": "https://api.github.com/users/asobrien/followers",
      "following_url": "https://api.github.com/users/asobrien/following{/other_user}",
      "gists_url": "https://api.github.com/users/asobrien/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asobrien/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asobrien/subscriptions",
      "organizations_url": "https://api.github.com/users/asobrien/orgs",
      "repos_url": "https://api.github.com/users/asobrien/repos",
      "events_url": "https://api.github.com/users/asobrien/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asobrien/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-23T20:14:05Z",
    "updated_at": "2014-06-23T20:14:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Using the following DataFrame as an example:\n\n``` python\nIn [11]:  df = pd.DataFrame({ 'float' : np.random.randn(10000000), 'int' : np.random.randint(0,5,size=10000000), 'date' : Timestamp('20130101'), 'string' : 'foo', 'smallint' : np.random.randint(0,5,size=10000000).astype('int16') })\n```\n\nI have implemented `meminfo()` as as DataFrame method, resulting in a Series. Note that units can be specified:\n\n``` python\n\nIn [13]: # Default units = B\nIn [14]: df.meminfo()\nOut[14]: \ndate        80000000\nfloat       80000000\nint         80000000\nsmallint    20000000\nstring      80000000\ndtype: float64\n\nIn [15]: df.meminfo(units=\"MB\")\nOut[15]: \ndate        76.293945\nfloat       76.293945\nint         76.293945\nsmallint    19.073486\nstring      76.293945\ndtype: float64\n```\n\nTotal memory usage of the DataFrame has been implemented as part of `df.info()` where the units representation can be specified:\n\n``` python\nIn [16]: df.info()             \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 10000000 entries, 0 to 9999999\nData columns (total 5 columns):\ndate        datetime64[ns]\nfloat       float64\nint         int64\nsmallint    int16\nstring      object\ndtypes: datetime64[ns](1), float64(1), int16(1), int64(1), object(1)\nmemory_usage: 340000000.00 B\n\nIn [18]: df.info(mem_unit='MB')\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 10000000 entries, 0 to 9999999\nData columns (total 5 columns):\ndate        datetime64[ns]\nfloat       float64\nint         int64\nsmallint    int16\nstring      object\ndtypes: datetime64[ns](1), float64(1), int16(1), int64(1), object(1)\nmemory_usage: 324.25 MB\n```\n\nAny more thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46896394",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-46896394",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 46896394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk2Mzk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-23T20:19:05Z",
    "updated_at": "2014-06-23T20:19:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that would be useful!\n\nwould need a couple of display options I think:\n- default unit (MB?)\n- whether to display this by default (in say df.info()), default False for now\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46924475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-46924475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 46924475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI0NDc1",
    "user": {
      "login": "asobrien",
      "id": 223897,
      "node_id": "MDQ6VXNlcjIyMzg5Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/223897?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asobrien",
      "html_url": "https://github.com/asobrien",
      "followers_url": "https://api.github.com/users/asobrien/followers",
      "following_url": "https://api.github.com/users/asobrien/following{/other_user}",
      "gists_url": "https://api.github.com/users/asobrien/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asobrien/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asobrien/subscriptions",
      "organizations_url": "https://api.github.com/users/asobrien/orgs",
      "repos_url": "https://api.github.com/users/asobrien/repos",
      "events_url": "https://api.github.com/users/asobrien/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asobrien/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-24T02:04:18Z",
    "updated_at": "2014-06-24T02:04:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let's use MB as the default unit and add a `memory_usage` argument to the DataFrame `info()` method to specify unit type (where default is None).\n\nTotal memory usage of the DataFrame (by default in MB) can always be determined by using:\n\n``` python\ndf.meminfo().sum()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46926284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-46926284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 46926284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI2Mjg0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-24T02:40:29Z",
    "updated_at": "2014-06-24T02:40:29Z",
    "author_association": "MEMBER",
    "body": "Seems like it would be easy to infer the unit by taking the log10 of the number of bytes, dividing by 10 to that number and using the bisect module to lookup the corresponding name of the unit in an array. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46929863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-46929863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 46929863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTI5ODYz",
    "user": {
      "login": "asobrien",
      "id": 223897,
      "node_id": "MDQ6VXNlcjIyMzg5Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/223897?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asobrien",
      "html_url": "https://github.com/asobrien",
      "followers_url": "https://api.github.com/users/asobrien/followers",
      "following_url": "https://api.github.com/users/asobrien/following{/other_user}",
      "gists_url": "https://api.github.com/users/asobrien/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asobrien/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asobrien/subscriptions",
      "organizations_url": "https://api.github.com/users/asobrien/orgs",
      "repos_url": "https://api.github.com/users/asobrien/repos",
      "events_url": "https://api.github.com/users/asobrien/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asobrien/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-24T04:02:23Z",
    "updated_at": "2014-06-24T04:02:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have units mapped in a dictionary with unit options consisting of (B, KB, MB, GB, TB, PB)\n\n``` python\n        byte_conv = {\n                    \"B\": 2**0,\n                    \"KB\": 2**10,\n                    \"MB\": 2**20,\n                    \"GB\": 2**30,\n                    \"TB\": 2**40,\n                    \"PB\": 2**50}\n```\n\nYet, this requires an explicit indication of desired units (as implemented [here](https://github.com/asobrien/pandas/blob/df-mem-info/pandas/core/frame.py#L1489). Are you suggesting to use a method to automatically infer the appropriate unit based on DataFrame size?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46931296",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-46931296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 46931296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTMxMjk2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-24T04:37:29Z",
    "updated_at": "2014-06-24T04:37:29Z",
    "author_association": "MEMBER",
    "body": "Yep. Just an intuition, haven't thought it out completely. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46931419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-46931419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 46931419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTMxNDE5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-24T04:40:37Z",
    "updated_at": "2014-06-24T04:40:37Z",
    "author_association": "MEMBER",
    "body": "Inferring units would be nice for `df.info()` but not desirable for the machine readable `df.meminfo()`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46986111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6852#issuecomment-46986111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6852",
    "id": 46986111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTg2MTEx",
    "user": {
      "login": "asobrien",
      "id": 223897,
      "node_id": "MDQ6VXNlcjIyMzg5Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/223897?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asobrien",
      "html_url": "https://github.com/asobrien",
      "followers_url": "https://api.github.com/users/asobrien/followers",
      "following_url": "https://api.github.com/users/asobrien/following{/other_user}",
      "gists_url": "https://api.github.com/users/asobrien/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asobrien/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asobrien/subscriptions",
      "organizations_url": "https://api.github.com/users/asobrien/orgs",
      "repos_url": "https://api.github.com/users/asobrien/repos",
      "events_url": "https://api.github.com/users/asobrien/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asobrien/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-24T15:24:43Z",
    "updated_at": "2014-06-24T15:24:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer `df.meminfo()` would have no arguments, so that the series would always return memory usage in columns in terms of bytes. In this manner, usage would be consistent.\n\n@cpcloud a [small function](http://stackoverflow.com/a/1094933) could be used to infer the memory usage in `df.info()` with the appropriate order of magnitude if a`memory_usage` argument is `True`.\n\n``` python\ndef sizeof_fmt(num):\n    for x in ['bytes', 'KB', 'MB', 'GB', 'TB']:\n        if num < 1024.0:\n            return \"%3.1f %s\" % (num, x)\n        num /= 1024.0\n    return \"%3.1f %s\" % (num, 'PB')\n```\n"
  }
]
