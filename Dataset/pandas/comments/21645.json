[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400478500",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-400478500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 400478500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDQ3ODUwMA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-26T22:07:04Z",
    "updated_at": "2018-06-26T22:30:53Z",
    "author_association": "MEMBER",
    "body": "Can you add a whatsnew entry to 0.24.0?\r\n\r\nAlso, looks like we have asvs for `DataFrame.duplicated`.  Might be nice to add methods for `return_inverse=True` to these.  Not sure if this is strictly necessary though.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/838e8dac435e1d5a08004e21c0e630a299b6dac0/asv_bench/benchmarks/frame_methods.py#L412-L429"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400501116",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-400501116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 400501116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDUwMTExNg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-06-27T00:07:25Z",
    "updated_at": "2018-09-23T21:41:41Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21645?src=pr&el=h1) Report\n> Merging [#21645](https://codecov.io/gh/pandas-dev/pandas/pull/21645?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/44a9b167bda9654ce60588cf2dcee88e4bad831d?src=pr&el=desc) will **decrease** coverage by `0.14%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21645/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/21645?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #21645      +/-   ##\n==========================================\n- Coverage   92.18%   92.04%   -0.15%     \n==========================================\n  Files         169      169              \n  Lines       50820    50818       -2     \n==========================================\n- Hits        46850    46776      -74     \n- Misses       3970     4042      +72\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.45% <100%> (-0.15%)` | :arrow_down: |\n| #single | `42.19% <13.2%> (-0.19%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21645?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/multi.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9tdWx0aS5weQ==) | `95.41% <100%> (-0.04%)` | :arrow_down: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.73% <100%> (-0.02%)` | :arrow_down: |\n| [pandas/core/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYmFzZS5weQ==) | `96.99% <100%> (-0.62%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.21% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/core/algorithms.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYWxnb3JpdGhtcy5weQ==) | `94.8% <100%> (+0.11%)` | :arrow_up: |\n| [pandas/core/indexes/category.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9jYXRlZ29yeS5weQ==) | `97.28% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.45% <100%> (+0.05%)` | :arrow_up: |\n| [pandas/io/formats/console.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvY29uc29sZS5weQ==) | `65.15% <0%> (-10.61%)` | :arrow_down: |\n| [pandas/errors/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2Vycm9ycy9fX2luaXRfXy5weQ==) | `92.3% <0%> (-7.7%)` | :arrow_down: |\n| [pandas/core/dtypes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2Jhc2UucHk=) | `92.68% <0%> (-7.32%)` | :arrow_down: |\n| ... and [55 more](https://codecov.io/gh/pandas-dev/pandas/pull/21645/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21645?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21645?src=pr&el=footer). Last update [44a9b16...2906b70](https://codecov.io/gh/pandas-dev/pandas/pull/21645?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400556075",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-400556075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 400556075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDU1NjA3NQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T06:20:37Z",
    "updated_at": "2018-06-27T06:20:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jschendel @WillAyd \r\nThanks for the feedback, working to incorporate all the comments.\r\n\r\nAnother question that I realised while writing the whatsnew entry - should this kwarg be made available to Series/Index as well? In this case I'm guessing I'd have to adapt `core.base.IndexOpsMixin.duplicated`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400563957",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-400563957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 400563957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDU2Mzk1Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T06:58:18Z",
    "updated_at": "2018-06-27T06:58:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jschendel Re:\r\n> Also, looks like we have asvs for DataFrame.duplicated. Might be nice to add methods for return_inverse=True to these. Not sure if this is strictly necessary though.\r\n\r\nHaven't ever worked with the asv's yet - will have a look later."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400769492",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-400769492",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 400769492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDc2OTQ5Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T17:40:04Z",
    "updated_at": "2018-06-27T18:33:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added three runs in the ASV, here are the results against current master. I don't know why `frame_methods.Duplicated.time_frame_duplicated` failed on master, that shouldn't be the case - all the others are explained by the missing `return_inverse` kwarg on master.\r\n\r\nEdit: ran again on a clean, restarted machine with no background applications.\r\n\r\n```\r\n  before           after         ratio\r\n[a620e725]       [094139bf]\r\n       203ms            203ms     1.00  frame_methods.Duplicated.time_frame_duplicated\r\n-     78.1ms           70.3ms     0.90  frame_methods.Duplicated.time_frame_duplicated_mixed\r\n      failed            156ms      n/a  frame_methods.Duplicated.time_frame_duplicated_mixed_inverse\r\n      failed            125ms      n/a  frame_methods.Duplicated.time_frame_duplicated_mixed_inverse_last\r\n       203ms            203ms     1.00  frame_methods.Duplicated.time_frame_duplicated_wide\r\n      failed            203ms      n/a  frame_methods.Duplicated.time_frame_duplicated_wide_inverse\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400769741",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-400769741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 400769741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDc2OTc0MQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-27T17:40:50Z",
    "updated_at": "2018-08-31T08:00:21Z",
    "author_association": "NONE",
    "body": "Hello @h-vetinari! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on August 31, 2018 at 08:00 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400918773",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-400918773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 400918773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDkxODc3Mw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-28T05:53:06Z",
    "updated_at": "2018-06-28T05:53:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Test failure in circleci is unrelated. Failed in `TestPythonParser.test_dtype_with_converter` with \r\n```\r\nE           AssertionError: Caused unexpected warning(s): ['ResourceWarning'].\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400936945",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-400936945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 400936945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDkzNjk0NQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-28T07:18:27Z",
    "updated_at": "2018-06-28T07:18:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke \r\nI got the results now, although I had to add a temporary if-condition (otherwise `master` would stumble over the unknown kwarg). Will remove that condition again, but I just wanted to have the same hash show up in the comparison as well as the commit I just pushed. Here are the results:\r\n\r\n```\r\n   before      after       ratio\r\n [a620e725]  [36b03a1c]\r\n      203ms       203ms     1.00  frame_methods.Duplicated.time_frame_duplicated('first', False)\r\n     failed       578ms      n/a  frame_methods.Duplicated.time_frame_duplicated('first', True)\r\n+     203ms       250ms     1.23  frame_methods.Duplicated.time_frame_duplicated('last', False)\r\n     failed       438ms      n/a  frame_methods.Duplicated.time_frame_duplicated('last', True)\r\n     78.1ms      78.1ms     1.00  frame_methods.Duplicated.time_frame_duplicated_mixed('first', False)\r\n     failed       125ms      n/a  frame_methods.Duplicated.time_frame_duplicated_mixed('first', True)\r\n     78.1ms      78.1ms     1.00  frame_methods.Duplicated.time_frame_duplicated_mixed('last', False)\r\n     failed       125ms      n/a  frame_methods.Duplicated.time_frame_duplicated_mixed('last', True)\r\n      219ms       203ms     0.93  frame_methods.Duplicated.time_frame_duplicated_wide('first', False)\r\n     failed       203ms      n/a  frame_methods.Duplicated.time_frame_duplicated_wide('first', True)\r\n      203ms       203ms     1.00  frame_methods.Duplicated.time_frame_duplicated_wide('last', False)\r\n     failed       203ms      n/a  frame_methods.Duplicated.time_frame_duplicated_wide('last', True)\r\n```\r\n\r\nTo me, the benchmarks seem a bit unstable, otherwise I don't know where the performance differences come from."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401420982",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-401420982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 401420982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTQyMDk4Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-29T17:27:16Z",
    "updated_at": "2018-06-29T17:30:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I already mentioned above, it became obvious to me while writing the whatsnew entry that this kwarg should be enabled for Series/Index as well. The last commit contains a working version but no tests yet -- ran into troubles with #21684. Additional xref #21685\r\n\r\nThis is already much more elegant than the previous commits, because it does all the work for `return_inverse` in one spot (`pandas.core.algorithms`), and all the calling objects just need to wrap around that.\r\n\r\nIn summary, the following is still lacking:\r\n* tests for Series/Index/MultiIndex\r\n* asv for Series/Index/MultiIndex\r\n* update whatsnew"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402757712",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-402757712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 402757712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjc1NzcxMg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T15:17:30Z",
    "updated_at": "2018-07-05T15:17:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I finally finished adding all the tests, turns out it's quite complicated to do anything for `Index`, haha. ;-)\r\n\r\nThe core algorithm changes almost vanish compared to the amount of test changes. Some of the things I added tests for were not really tested so far (bare `duplicated` was only tested implicitly - and then only sometimes - for stuff like `drop_duplicates`). I also split up `pandas/tests/indexes/multi/test_unique_and_duplicates.test_duplicated`, which had a large amount of tests in one.\r\n\r\nASVs should be in line with what I posted above, because as long as `return_inverse=False`, I never calculate anything additional.\r\n\r\nI needed to implement a different signature for `pandas.core.algorithms.duplicated`, which is inspired by `np.unique`, in the sense that it has both `return_index` and `return_inverse` (with the same meanings). This method is not public as far as I can tell? In any case, the docstring reflects the changes.\r\nFinally, I added a `stabilize`-kwarg, which *stabilises* against the implicit sorting that numpy does. It's on by default, but turning it off is a performance improvement in case the index/inverse are immediately plugged together again (as is the case for `Series`/`DataFrame`).\r\n\r\nTried to explain all the code as well as possible, but happy to receive feedback (and/or answer questions)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402957771",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-402957771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 402957771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjk1Nzc3MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T07:57:39Z",
    "updated_at": "2018-07-06T07:57:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> pls pls let's keep the scope to the original. just return_inverse. If you want to do more things, make them PR's on top.\r\n\r\n@jreback I did keep strictly with the scope of just adding `return_inverse` to `duplicated`. The issue is that `Series/DataFrame` need a *slightly* different treatment than `Index`:\r\n* the inverse for `Series/DataFrame` needs to take into account two indexes (the original index, and the one of the deduplicated data). This needs to combine the outputs `return_index=True` and `return_inverse=True` from `np.unique`.\r\n* the inverse for `Index` is just a simple `np.ndarray`, which would in principle just need `return_inverse=True` from `np.unique`, except we need to undo the implicit sorting that `np.unique` does.\r\n\r\nThere are two options from my POV:\r\n1. implement two different `duplicated`-methods for `Series/DataFrame` vs. `Index`, which would however overlap if `return_inverse=False`.\r\n1. (current state of PR) implement one central `duplicated`-method, but with enough flexibility to cover both cases, and have thin wrappers around that. Since -- AFAIU -- `pandas.core.algorithms.duplicated` is not public API, I decided to add that extra flexibility.\r\n\r\nDoes that make the situation clearer? I don't mind implementing option 1, but it would lead to code duplication and would IMHO be messier."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402974491",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-402974491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 402974491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjk3NDQ5MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T09:02:30Z",
    "updated_at": "2018-07-06T09:02:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ugh, resolving conflicts on windows is such a pain (conflict resolution commits not recognised by git). Had to do a massive rebase...\r\n\r\nAlso added some examples to the separate `duplicated`-docstrings."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403378589",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-403378589",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 403378589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzM3ODU4OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-09T06:56:42Z",
    "updated_at": "2018-07-09T06:56:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \r\n\r\nI refactored `core.algorithms.duplicated` and removed the offending kwargs. This means that for the `Series/DataFrame` case, there is some unnecessary `argsort`-ing happening, but I'm guessing that performance penalty (up to 2x as long) is more welcome than having a different method-signature. For completeness, the ASV-comparison is below.\r\n\r\nI also reworked the `Series/DataFrame/Index` docstrings - it might be instructive to have a look at the examples. :)\r\n\r\n```\r\n     before           after       ratio\r\n   [93bd97f3]       [18b15eb1]\r\n        234ms            250ms     1.07  frame_methods.Duplicated.time_frame_duplicated('first', False)\r\n+       438ms            828ms     1.89  frame_methods.Duplicated.time_frame_duplicated('first', True)\r\n-       219ms            188ms     0.86  frame_methods.Duplicated.time_frame_duplicated('last', False)\r\n+       656ms            1.02s     1.55  frame_methods.Duplicated.time_frame_duplicated('last', True)\r\n-       250ms            219ms     0.88  frame_methods.Duplicated.time_frame_duplicated(False, False)\r\n       78.1ms           85.9ms     1.10  frame_methods.Duplicated.time_frame_duplicated_mixed('first', False)\r\n+       125ms            188ms     1.50  frame_methods.Duplicated.time_frame_duplicated_mixed('first', True)\r\n       85.9ms           78.1ms     0.91  frame_methods.Duplicated.time_frame_duplicated_mixed('last', False)\r\n+       172ms            203ms     1.18  frame_methods.Duplicated.time_frame_duplicated_mixed('last', True)\r\n       85.9ms           85.9ms     1.00  frame_methods.Duplicated.time_frame_duplicated_mixed(False, False)\r\n        219ms            203ms     0.93  frame_methods.Duplicated.time_frame_duplicated_wide('first', False)\r\n+       203ms            234ms     1.15  frame_methods.Duplicated.time_frame_duplicated_wide('first', True)\r\n        203ms            203ms     1.00  frame_methods.Duplicated.time_frame_duplicated_wide('last', False)\r\n        203ms            219ms     1.08  frame_methods.Duplicated.time_frame_duplicated_wide('last', True)\r\n        203ms            219ms     1.08  frame_methods.Duplicated.time_frame_duplicated_wide(False, False)\r\n   3.77±0.3ms         3.47±0ms     0.92  series_methods.Duplicated.time_series_duplicated('first', False)\r\n      141±8ms         141±10ms     1.00  series_methods.Duplicated.time_series_duplicated('first', True)\r\n   3.35±0.2ms       3.91±0.2ms    ~1.17  series_methods.Duplicated.time_series_duplicated('last', False)\r\n      156±8ms          172±8ms     1.10  series_methods.Duplicated.time_series_duplicated('last', True)\r\n   3.47±0.2ms       3.91±0.3ms    ~1.12  series_methods.Duplicated.time_series_duplicated(False, False)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403559737",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-403559737",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 403559737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzU1OTczNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-09T17:37:26Z",
    "updated_at": "2018-07-09T17:37:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jschendel @WillAyd @mroeschke @jreback \r\ngentle ping since everything is green and I now incorporated (resp. responded to) all your feedback."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404501217",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-404501217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 404501217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDUwMTIxNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T12:51:38Z",
    "updated_at": "2018-07-12T12:51:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jschendel @WillAyd @mroeschke @jreback\r\nI know this ping is quite soon after the last - please excuse. I'll be gone for a while in about a week, and would prefer to get this done before, instead of having to do lots of rebasing afterwards."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404957843",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-404957843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 404957843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDk1Nzg0Mw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-13T21:24:07Z",
    "updated_at": "2018-07-14T13:14:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I split out all the orthogonal changes (often in more consistent form than here) into independent PRs - #21897 #21898 #21899 #21900 #21902 - hope this helps with reviewing. I'll leave the docstring additions in here for now, but if that's an issue, I can add have another PR for them as well. ASV changes should IMO be part of this PR and not a follow-up."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405303930",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-405303930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 405303930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTMwMzkzMA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T16:21:55Z",
    "updated_at": "2018-07-16T16:21:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @WillAyd Rebased on the merged PRs and the most current state of #21902."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412147017",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-412147017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 412147017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjE0NzAxNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-10T17:13:12Z",
    "updated_at": "2018-08-10T17:13:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @WillAyd Now that #21902 is in, all preparatory PRs should be out of the way, and this is ready to be discussed again."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415458844",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-415458844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 415458844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ1ODg0NA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T15:26:11Z",
    "updated_at": "2018-08-23T15:26:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @WillAyd This has been lying around for about a month or so. Could you guys have a look please? :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415463433",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-415463433",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 415463433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ2MzQzMw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T15:39:40Z",
    "updated_at": "2018-08-23T15:39:40Z",
    "author_association": "MEMBER",
    "body": "Traveling for a few days but can review again next week. Larger PRs just take more time to review - definitely still appreciate the contribution (and patience!)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/416461430",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-416461430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 416461430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQ2MTQzMA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T06:01:38Z",
    "updated_at": "2018-08-28T07:06:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd No problem. :)\r\nTBH, part of the reason for not having pushed this more is that I still want to get #22225 in beforehand, but that PR itself is waiting for #22486, which is blocked by #22236, haha..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419014101",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-419014101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 419014101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTAxNDEwMQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T08:42:46Z",
    "updated_at": "2018-09-06T08:42:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd I incorporated your feedback - any open questions?\r\n\r\n@jreback care to take a look?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419115369",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-419115369",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 419115369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTExNTM2OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T14:31:35Z",
    "updated_at": "2018-09-06T14:31:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche\r\n\r\n> What is the reason you decided to add it to duplicated and not drop_duplicates ? (because from quickly looking at the issue, and from the docstring examples, that is actually what you want?)\r\nI also ask because I think it would be a more natural fit there, as it is not literally an \"inverse\" for the result of duplicated (as it is for drop_duplicates or as for unique in numpy)\r\n\r\nI wanted to add `.unique` method in #21357, but got told by @jreback that:\r\n> -1 on adding any new methods, but would be ok with adding a return_inverse kwarg (clearly defaulting to False), to .duplicated() to easily recovering the indexer.\r\n\r\nI still think it makes sense for `duplicated`, which is invoked by `drop_duplicates`, and so would need to support that anyway if one wanted to add it to `drop_duplicates`.\r\n\r\n> I think we should have more discussion (or at least motivation for the current design) about the actual return value (series vs array, index labels vs positional integers). Always returning an array of integers would also be an option (and is eg robust for duplicates in the index)\r\n\r\nnumpy returns two arrays of indexes, one relative to the original set and one relative to the unique values. I think this information fundamentally belongs together and since pandas supports the index/values distinction, I strongly believe that they should live in the same object. I don't like reusing the index of `duplicated` itself, because then I need to keep around *two* separate objects to reconstruct. But happy to discuss alternative approaches.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420162092",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-420162092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 420162092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDE2MjA5Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T06:29:49Z",
    "updated_at": "2018-09-11T06:29:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\nI incorporated your feedback. Since no compelling alternatives have come up for the return type, I left that aspect as-is."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422211981",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-422211981",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 422211981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjIxMTk4MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T00:17:08Z",
    "updated_at": "2018-09-18T00:17:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @WillAyd @jorisvandenbossche \r\n\r\nHow can I/we move this PR forward?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422314195",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-422314195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 422314195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjMxNDE5NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T09:00:33Z",
    "updated_at": "2018-09-18T09:00:33Z",
    "author_association": "MEMBER",
    "body": "@h-vetinari sorry for the slow answer\r\n\r\nI think my main worry is that we are adding a `return_inverse` keyword which actually does not return the inverse for that function (it does return the inverse for another function), and that it is in name similar to numpy's keyword, but in usage also different.\r\n\r\nNumpy's `unique` is more comparable to `drop_duplicates`. Therefore I think such a keyword would be  a more natural fit there.\r\n\r\n\r\n> numpy returns two arrays of indexes\r\n\r\nCan you clarify this? You are talking about `np.unique`?  (but I think that only returns a single array of indices?)\r\n\r\nSide note: it might make sense to add this to `pd.unique` / `Series.unique` as well? (not necessarily at the same time; or might actually be an easier starter)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422322593",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-422322593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 422322593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjMyMjU5Mw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T09:26:38Z",
    "updated_at": "2018-09-18T09:28:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\n\r\n> I think my main worry is that we are adding a return_inverse keyword which actually does not return the inverse for that function (it does return the inverse for another function), and that it is in name similar to numpy's keyword, but in usage also different.\r\n\r\nFair point. I would prefer a `df.unique` as well, but was following what I was told in #21357\r\n> -1 on adding any new methods, but would be ok with adding a return_inverse kwarg (clearly defaulting to False), to .duplicated() to easily recovering the indexer.\r\n\r\nwhich is how I implemented it here. Could still be added to `drop_duplicates` as well, but since that depends on `duplicated`, we'd need it there anyway.\r\n\r\nRe: \r\n> >  numpy returns two arrays of indexes\r\n\r\n> Can you clarify this? You are talking about np.unique? (but I think that only returns a single array of indices?)\r\n\r\nhttps://docs.scipy.org/doc/numpy/reference/generated/numpy.unique.html has both `return_indices` and `return_inverse`, and both are necessary to reconstruct from the pandas side (the difference for us being that we also need to keep track of the index, whereas numpy just has `arange` as index).\r\n\r\n> Side note: it might make sense to add this to pd.unique / Series.unique as well? (not necessarily at the same time; or might actually be an easier starter)\r\n\r\nAgreed. Actually, for me the best solution would be: \r\n* add `df.unique` (could be a thin wrapper around `drop_duplicates`)\r\n* have `df.unique`, `series.unique`, `index.unique` with `return_inverse`-kwarg\r\n* dispatch from `pd.unique` to appropriate code branch"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424144755",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-424144755",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 424144755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDE0NDc1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-24T22:20:52Z",
    "updated_at": "2018-09-24T22:20:52Z",
    "author_association": "MEMBER",
    "body": "> Fair point. I would prefer a df.unique as well, but was following what I was told in #21357\r\n\r\nI have wanted a `DataFrame.unique` for a long time, but the question is how it would be different compared to `drop_duplicates`? \r\n\r\nAnyway, yes @jreback put you on the path to add it to `duplicated` as a first idea, but I am questioning that choice. So regardless of previous recommendation, we should still discuss that (@jreback can you chime in here?)\r\n\r\n> numpy.unique has both return_indices and return_inverse, and both are necessary to reconstruct from the pandas side\r\n\r\nI think the numpy's `return_indices` is rather unrelated here? It is about the index into the original array to get the unique ones, while you want to preserve the index of the original array?\r\n\r\n> Agreed. Actually, for me the best solution would be:\r\n>\r\n>    add df.unique (could be a thin wrapper around drop_duplicates)\r\n>   have df.unique, series.unique, index.unique with return_inverse-kwarg\r\n>    dispatch from pd.unique to appropriate code branch\r\n\r\nAdding a `return_inverse` to the existing `unique` function / methods would certainly be a welcome change I think.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424149547",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-424149547",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 424149547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDE0OTU0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-24T22:43:00Z",
    "updated_at": "2018-09-24T22:43:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "i am not against adding this to .unique, though as you have mentioned that is indeed just drop_duplicates"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424149810",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21645#issuecomment-424149810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21645",
    "id": 424149810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDE0OTgxMA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-24T22:44:23Z",
    "updated_at": "2018-09-24T22:50:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\nThanks for your answer:\r\n\r\n> I have wanted a DataFrame.unique for a long time, but the question is how it would be different compared to drop_duplicates?\r\n\r\nI would suggest that `unique` just acts as a thin wrapper around `drop_duplicates`. The latter has been in the pandas API forever, but the former name is even more established, and I think they could peacefully coexist.\r\n\r\n> I think the numpy's return_indices is rather unrelated here? It is about the index into the original array to get the unique ones, while you want to preserve the index of the original array?\r\n\r\nAssuming `np.unique` didn't sort (which I have to laboriously undo in this PR) and `keep='first'`, we would have:\r\n```\r\nisduplicated = some_series.duplicated()\r\n_, values2unique, unique2values = np.unique(some_series.values,\r\n                                            return_index=True, return_inverse=True)\r\ninverse = Series(some_series.index[values2unique][unique2values], index=some_series.index)\r\n```\r\n\r\nand neither `values2unique` (the indices) nor `unique2values` (the inverse) can be omitted. Again, the difference to `numpy` here is that `some_series` can have an index different from `arange(len(some_series))`, which is why we need to first select the right indices of the index (to get the uniques) and the broadcast them back to the full shape to get the full inverse. If we didn't care about the index of `some_series`, then the indices would indeed be not necessary, but then we wouldn't be able to use the inverse in `.loc` or `.reindex` of the uniques (`=some_series.loc[~isduplicated]`), because the indexes wouldn't match.\r\n\r\n> Adding a return_inverse to the existing unique function / methods would certainly be a welcome change I think.\r\n\r\nI had already collected some thoughts for this during the day and opened a (largely orthogonal to this PR) issue for this: #22824\r\n\r\nEDIT: clarified mechanics for inverse"
  }
]
