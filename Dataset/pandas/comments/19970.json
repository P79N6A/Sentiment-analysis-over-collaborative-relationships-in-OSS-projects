[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370047746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-370047746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 370047746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDA0Nzc0Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T20:47:09Z",
    "updated_at": "2018-03-02T20:47:09Z",
    "author_association": "MEMBER",
    "body": "If you're familiar with `git bisect`, you can track down the exact commit that created this regression.  Investigation and PR are welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370436839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-370436839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 370436839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDQzNjgzOQ==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-05T14:31:44Z",
    "updated_at": "2018-03-05T14:31:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Checked out git bisect-- it appears the issue is with #18618 (CC: @jbrockmendel)\r\n\r\n[c0e37670dd578728f988a33bc21bc173b336249a] handle DST appropriately in Timestamp.replace (#18618)\r\n\r\nI'm not familiar with Cython and it's unclear to me why this commit would have this effect.\r\n\r\nThis was the unit test I wrote for the git bisect, if that helps:\r\n\r\n```python\r\n    def test_transpose_dst_changes(self):\r\n        dstchgidx = date_range('20160101', '20161130', freq='4H',\r\n                               tz='America/New_York')\r\n        \r\n        df = DataFrame({'a':np.arange(len(dstchgidx))},\r\n                       dstchgidx)\r\n        assert_frame_equal(df, df)\r\n        assert_frame_equal(df.T, df.T)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386091799",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386091799",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386091799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjA5MTc5OQ==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T19:23:57Z",
    "updated_at": "2018-05-02T19:23:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel @TomAugspurger This regression from 0.22 is persisting in 0.23.0rc2. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386097280",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386097280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386097280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjA5NzI4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T19:43:29Z",
    "updated_at": "2018-05-02T19:43:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yep, still open. Have you had a chance to look into a fix?\n\nOn Wed, May 2, 2018 at 2:24 PM, David Krych <notifications@github.com>\nwrote:\n\n> @jbrockmendel <https://github.com/jbrockmendel> @TomAugspurger\n> <https://github.com/TomAugspurger> This regression from 0.22 is\n> persisting in 0.23.0rc2.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386091799>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIk50NpiSRE6zQmjbfGv6jOzLxtZVks5tugfSgaJpZM4SaR7E>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386114141",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386114141",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386114141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjExNDE0MQ==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T20:42:18Z",
    "updated_at": "2018-05-02T20:42:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger Mostly bumping because of the request for bug reports against the RC. I've never written any Cython at all... was sort of hoping someone who understood #18618 would have an idea what was going on here. That said, I'll take another look, since it might be fixable outside the Cython if we think the Cython logic is correct."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386118888",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386118888",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386118888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjExODg4OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T20:57:53Z",
    "updated_at": "2018-05-02T20:57:53Z",
    "author_association": "MEMBER",
    "body": "I'm looking into this now.  `(df.T).equals(df.T)` still returns `True`.  It's `col in df.T.columns` that comes back `False` for `col == Timestamp('2016-11-06 01:00:00-0400', tz='America/New_York', freq='4H')`\r\n\r\nIt looks like the issue is in `DatetimeIndex.get_loc`.  With `key = col` from above, `get_loc` casts `key = Timestamp(key, tz=self.tz)`, which loses the `freq` attribute, then passes through to `Index.get_loc`.  If we bypass the casting and go straight to `Index.get_loc`, it goes through correctly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386121246",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386121246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386121246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjEyMTI0Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T21:06:21Z",
    "updated_at": "2018-05-02T21:06:21Z",
    "author_association": "MEMBER",
    "body": "I semi-take it back.  The problem is this:\r\n\r\n```\r\ncol = dstchgidx[1860]\r\ncol2 = pd.Timestamp(col, tz=dstchgidx.tz)\r\n\r\n>>> col.value\r\n1478408400000000000\r\n>>> col2.value\r\n1478412000000000000\r\n```\r\n\r\n1 AM on 2016-11-06 happens twice in America/New York, and calling the Timestamp constructor here is changing which one we're looking at."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386142101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386142101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386142101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE0MjEwMQ==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T22:33:20Z",
    "updated_at": "2018-05-02T22:33:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @jbrockmendel! In that case would this be a sufficient fix?\r\n```\r\n-            key = Timestamp(key, tz=self.tz)\r\n\r\n+            if key.tzinfo is None and self.tz is not None:\r\n+                key = Timestamp(key, tz=self.tz)\r\n+            elif not isinstance(key, Timestamp):\r\n+                key = Timestamp(key)\r\n```\r\n\r\nIdea here being that if the Timestamp comes in tz-localized we don't subsequently try to re-localize it (and lose the ambiguity resolution that has already taken place)? \r\n\r\nI notice that pattern occurs in other places in datetimes.py-- get_value, get_value_maybe_box, etc. Those should presumably change as well?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386146213",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386146213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386146213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE0NjIxMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T22:54:56Z",
    "updated_at": "2018-05-02T22:54:56Z",
    "author_association": "MEMBER",
    "body": "Tracking it down a little further, I'm now thinking the fix is in `convert_datetime_to_tsobject` (via `Timestamp.__new__`).  This will take a little more tracking down.\r\n\r\n> In that case would this be a sufficient fix?\r\n\r\nIt looks like the suggested solution leaves `key` unchanged in the case where neither `key.tzinfo` nor `self.tz` is `None`.  There are a handful of corner cases to worry about.  For starters, what if they are both tz-aware but have different timezones?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386150622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386150622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386150622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE1MDYyMg==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T23:19:54Z",
    "updated_at": "2018-05-02T23:19:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> What if they are both tz-aware but have different timezones?\r\n\r\nTo be honest, I don't know why, but this does seem to work with the above fix:\r\n\r\n```\r\nIn [15]: dt_tokyo = pytz.timezone('Asia/Tokyo').localize(datetime.datetime(2016, 11, 6, 14))\r\n\r\nIn [16]: df.index.get_loc(dt_tokyo)\r\nOut[16]: 1860\r\n\r\nIn [17]: df.loc[dt_tokyo]\r\nOut[17]:\r\na    1860\r\nName: 2016-11-06 01:00:00-04:00, dtype: int32\r\n```\r\n\r\nThat said, my understanding of how any of this works is _extremely_ hazy (I've never really looked at any of this code before) so I defer to you as to the best solution."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386150924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386150924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386150924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE1MDkyNA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T23:21:47Z",
    "updated_at": "2018-05-02T23:24:32Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel xref https://github.com/pandas-dev/pandas/issues/20854#issuecomment-386075444\r\n\r\nI think the problem is in this branch:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/b02c69ac7309ccf63a17471b25475bf0c0ebe3c3/pandas/_libs/tslibs/conversion.pyx#L352-L355\r\n\r\nI think `tz.normalize(ts)` where `ts` is a Timestamp with a tz might not be re-normalizing this correctly. (if a Timestamp with a tz hits this branch, probably doesn't need to be normalized again?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386153235",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386153235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386153235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE1MzIzNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-02T23:36:18Z",
    "updated_at": "2018-05-02T23:36:18Z",
    "author_association": "MEMBER",
    "body": "@mroeschke that's a part of the conversion code that I've been uncomfortable with (see above it the comment \"# sort of a temporary hack\").  In particular, the thing we may need @jreback to weigh in on is if the `ts = tz.normalize(ts)` call should always be `ts.value`-preserving (when `ts` is a `Timestamp`).  If so, then line 353 is definitely a (possibly the) problem."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386158980",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386158980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386158980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE1ODk4MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T00:12:38Z",
    "updated_at": "2018-05-03T00:12:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "here's a repro\r\n```\r\nIn [62]: t1 = pd.Timestamp('20161106 01:00:00').tz_localize('America/New_York',ambiguous=True)\r\n\r\nIn [63]: t2 = pd.Timestamp('20161106 01:00:00').tz_localize('America/New_York',ambiguous=False)\r\n\r\nIn [64]: t1\r\nOut[64]: Timestamp('2016-11-06 01:00:00-0400', tz='America/New_York')\r\n\r\nIn [65]: t2\r\nOut[65]: Timestamp('2016-11-06 01:00:00-0500', tz='America/New_York')\r\n\r\nIn [66]: pd.Timestamp(t1.tz.normalize(t1.to_pydatetime()))\r\nOut[66]: Timestamp('2016-11-06 01:00:00-0400', tz='America/New_York')\r\n\r\nIn [67]: pd.Timestamp(t1.tz.normalize(t1))\r\nOut[67]: Timestamp('2016-11-06 01:00:00-0500', tz='America/New_York')\r\n\r\nIn [68]: pd.Timestamp(t2.tz.normalize(t2.to_pydatetime()))\r\nOut[68]: Timestamp('2016-11-06 01:00:00-0500', tz='America/New_York')\r\n\r\nIn [69]: pd.Timestamp(t2.tz.normalize(t2))\r\nOut[69]: Timestamp('2016-11-06 01:00:00-0500', tz='America/New_York')\r\n\r\n```\r\n\r\nwould expected 68==69 [True]\r\nand 66==67 [False]\r\n\r\nso the round-trip works if we have a datetime but not a Timestamp. \r\n\r\nhere's the doc-string for ``.normalize()``In [76]: tz.normalize?\r\n```\r\nSignature: tz.normalize(dt)\r\nDocstring:\r\nCorrect the timezone information on the given datetime\r\n\r\nIf date arithmetic crosses DST boundaries, the tzinfo\r\nis not magically adjusted. This method normalizes the\r\ntzinfo to the correct one.\r\n```\r\nI *think* that the 'hack' here (should remove that line!). is that you have to do this. I think this may have been working around a construction bug elsewhere in pandas, but not really sure.\r\n\r\nSince this routine can take datetimes or Timestamps, then we prob could just coerce to datetimes at the beginning leave this logic."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386159122",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19970#issuecomment-386159122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19970",
    "id": 386159122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjE1OTEyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T00:13:33Z",
    "updated_at": "2018-05-03T00:13:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "so @jbrockmendel is correct, we need a ``.value`` preserving call here."
  }
]
