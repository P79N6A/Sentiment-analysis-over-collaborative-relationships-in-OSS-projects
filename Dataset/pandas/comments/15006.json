[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/269615206",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15006#issuecomment-269615206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15006",
    "id": 269615206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTYxNTIwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-29T11:09:54Z",
    "updated_at": "2016-12-29T11:09:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is as expected. ``numexpr`` spawns a threadpool on startup, see the docs here: https://github.com/pydata/numexpr/wiki/Numexpr-Users-Guide\r\n\r\n```\r\n(py2.7) bash-3.2$ python\r\nPython 2.7.12 |Continuum Analytics, Inc.| (default, Jul  2 2016, 17:43:17) \r\n[GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\nAnaconda is brought to you by Continuum Analytics.\r\nPlease check out: http://continuum.io/thanks and https://anaconda.org\r\n>>> import numexpr\r\n>>> numexpr.set_num_threads(1)\r\n8\r\n>>> import pandas\r\n```\r\npandas does not directly use threading\r\n\r\nand to be honest, this shouldn't matter at all, except for better performance, as the implementation is almost always irrelevant to the user (exception would be a library that spawns multiple computations, eg. dask. though pandas does play nice)"
  }
]
