[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318852390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-318852390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 318852390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg1MjM5MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T19:12:36Z",
    "updated_at": "2017-07-29T19:12:36Z",
    "author_association": "MEMBER",
    "body": "Yikes!  I can't really follow your last code snippet (not sure what `period` is).  That being said, it does appear that all of your issues are stemming from a frequency incompatibility one way or the other.\r\n\r\n> No idea why it thinks Categorical is relevant here. That doesn't happen in py3.\r\n\r\nYeah...that does look a little weird.  Can you try first upgrading to `0.20.3` and see if anything changes on that end?  If not, then we most certainly should improve the error message."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318852985",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-318852985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 318852985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg1Mjk4NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-29T19:20:47Z",
    "updated_at": "2017-07-29T19:38:29Z",
    "author_association": "MEMBER",
    "body": "> (not sure what period is)\r\n\r\nThat's the real-life column (2770 rows).  Looks a lot like `ser` from the snippet<s>, but I haven't figured out a snippet that demonstrates the problem</s>. It looks like it's caused by passing a single-column DataFrame to `from_arrays`:\r\n\r\n```\r\nindex = pd.Index(['CPROF', 'HOUSING', 'INDPROD', 'NGDP', 'PGDP'])\r\ndata = [pd.Period('1968Q4')]*5\r\ndf = pd.DataFrame(data, index=index, columns=['Period'])\r\nmi = pd.MultiIndex.from_arrays([df.index, df])\r\n\r\n>>> mi\r\nMultiIndex(levels=[['CPROF', 'HOUSING', 'INDPROD', 'NGDP', 'PGDP'], ['Period']],\r\n           labels=[[0, 1, 2, 3, 4], [0]])\r\n>>> mi.shape\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/base.py\", line 800, in shape\r\n    return self._values.shape\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/base.py\", line 860, in _values\r\n    return self.values\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/indexes/multi.py\", line 667, in values\r\n    self._tuples = lib.fast_zip(values)\r\n  File \"pandas/_libs/lib.pyx\", line 549, in pandas._libs.lib.fast_zip (pandas/_libs/lib.c:10513)\r\nValueError: all arrays must be same length\r\n```\r\n\r\nOn the plus side its clearly a user error (this guy).  Ideally it'd be caught in `__init__` though.\r\n\r\n> Can you try first upgrading to 0.20.3 and see if anything changes on that end?\r\n\r\nUnchanged."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318922476",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-318922476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 318922476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODkyMjQ3Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-30T19:07:01Z",
    "updated_at": "2017-07-30T19:07:01Z",
    "author_association": "MEMBER",
    "body": "I still don't get why `MultiIndex.from_arrays` needs to go through `Categorical`, but a partial fix can be made in `Categorical.__init__`:\r\n\r\n```\r\n        if categories is None:\r\n            try:\r\n                codes, categories = factorize(values, sort=True)\r\n            except TypeError:\r\n                codes, categories = factorize(values, sort=False)\r\n                if ordered:\r\n                    # raise, as we don't have a sortable data structure and so\r\n                    # the user should give us one by specifying categories\r\n                    raise TypeError(\"'values' is not ordered, please \"\r\n                                    \"explicitly specify the categories order \"\r\n                                    \"by passing in a categories argument.\")\r\n            except ValueError:\r\n\r\n                # FIXME\r\n                raise NotImplementedError(\"> 1 ndim Categorical are not \"\r\n                                          \"supported at this time\")\r\n```\r\n\r\nEspecially in py3, we unsortable errors to be `TypeError`s, but the error that gets raises when trying to compare Periods with different frequencies is `_libs.period.IncompatibleFrequency`, which subclasses `ValueError`.\r\n\r\nHaving the `except TypeError:` above also catch `IncompatibleFrequency` gets us one step closer to correctness.  But then it raise immediately because `ordered` is `True` here.  Any idea why `MultiIndex.from_arrays` is requiring an ordered Categorical?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318936247",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-318936247",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 318936247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODkzNjI0Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-30T23:03:19Z",
    "updated_at": "2017-07-30T23:04:13Z",
    "author_association": "MEMBER",
    "body": "Â¯ \\ _(ãƒ„)_/Â¯\r\n\r\nFeel free to experiment and see what happens when you loosen that restriction ðŸ˜„ "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318939492",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-318939492",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 318939492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODkzOTQ5Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T00:03:08Z",
    "updated_at": "2017-07-31T00:03:08Z",
    "author_association": "MEMBER",
    "body": "There are more effective approaches than trial and error.  Someone somewhere knows why this decision was made in the first place."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318939668",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-318939668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 318939668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODkzOTY2OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T00:05:16Z",
    "updated_at": "2017-07-31T00:05:16Z",
    "author_association": "MEMBER",
    "body": "> Someone somewhere knows why this decision was made in the first place.\r\n\r\nPerhaps, but I'm assuming worst case in that we don't remember anymore why that is the case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319038354",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-319038354",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 319038354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTAzODM1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T11:11:34Z",
    "updated_at": "2017-07-31T11:11:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I still don't get why MultiIndex.from_arrays needs to go through Categorical, but a partial fix can be made in Categorical.__init__:\r\n\r\nwell, you need to factorize things when you construct a MI.\r\n\r\nNot really sure what this issue is about, it has gone off on tangents. Can you provide a narrow clear example.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319038436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-319038436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 319038436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTAzODQzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T11:12:01Z",
    "updated_at": "2017-07-31T11:12:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung don't tag things until it is clear what they are."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319149084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-319149084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 319149084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTE0OTA4NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T18:06:58Z",
    "updated_at": "2017-07-31T18:06:58Z",
    "author_association": "MEMBER",
    "body": "> Not really sure what this issue is about, it has gone off on tangents. Can you provide a narrow clear example.\r\n\r\n1) `Period.__richcmp__` currently raises `IncompatibleFrequency` when trying to compare periods with unequal frequencies.  This breaks things that do sorting under the hood.  It should be changed.\r\n- 1b) The main impediment here is agreeing on a convention for what the ordering should look like.  I suggest lexicographic ordering (start_time, freq), which is equivalent to (start_time, end_time)\r\n2) Even if it isn't changed, the errors that it raises are misleading and inconsistent.\r\n\r\nSetup:\r\n```\r\nindex = pd.Index(['PCE']*4, name='Variable')\r\ndata = [\r\n\tpd.Period('2018Q2'),\r\n\tpd.Period('2021', freq='5A-Dec'),\r\n\tpd.Period('2026', freq='10A-Dec'),\r\n\tpd.Period('2017Q2')\r\n\t]\r\nser = pd.Series(data, index=index, name='Period')\r\n```\r\n\r\nClear Error:\r\n```\r\n>>> ser.sort_values()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/series.py\", line 1710, in sort_values\r\n    argsorted = _try_kind_sort(arr[good])\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/series.py\", line 1696, in _try_kind_sort\r\n    return arr.argsort(kind=kind)\r\n  File \"pandas/_libs/period.pyx\", line 725, in pandas._libs.period._Period.__richcmp__ (pandas/_libs/period.c:11842)\r\npandas._libs.period.IncompatibleFrequency: Input has different freq=10A-DEC from Period(freq=Q-DEC)\r\n```\r\n\r\nIncorrect Error Message (I think because `IncompatibleFrequency` subclasses `ValueError` and not `TypeError`) \r\n```\r\n>>> ser.to_frame().set_index('Period', append=True)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/frame.py\", line 2836, in set_index\r\n    index = MultiIndex.from_arrays(arrays, names=names)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/indexes/multi.py\", line 1100, in from_arrays\r\n    labels, levels = _factorize_from_iterables(arrays)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/categorical.py\", line 2193, in _factorize_from_iterables\r\n    return map(list, lzip(*[_factorize_from_iterable(it) for it in iterables]))\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/categorical.py\", line 2165, in _factorize_from_iterable\r\n    cat = Categorical(values, ordered=True)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/categorical.py\", line 310, in __init__\r\n    raise NotImplementedError(\"> 1 ndim Categorical are not \"\r\nNotImplementedError: > 1 ndim Categorical are not supported at this time\r\n```\r\n\r\npy3\r\n```\r\n>>> ser.sort_values()\r\npandas._libs.period.IncompatibleFrequency: Input has different freq=Q-DEC from Period(freq=5A-DEC)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\nSystemError: <built-in function isinstance> returned a result with an error set\r\n[...]\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/series.py\", line 1710, in sort_values\r\n    argsorted = _try_kind_sort(arr[good])\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/core/series.py\", line 1696, in _try_kind_sort\r\n    return arr.argsort(kind=kind)\r\n  File \"pandas/_libs/period.pyx\", line 723, in pandas._libs.period._Period.__richcmp__ (pandas/_libs/period.c:11713)\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/tseries/offsets.py\", line 375, in __ne__\r\n    return not self == other\r\n  File \"/usr/local/lib/python3.5/site-packages/pandas/tseries/offsets.py\", line 364, in __eq__\r\n    if isinstance(other, compat.string_types):\r\nSystemError: <built-in function isinstance> returned a result with an error set\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/325140338",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17112#issuecomment-325140338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17112",
    "id": 325140338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNTE0MDMzOA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-26T15:51:14Z",
    "updated_at": "2017-08-26T15:51:14Z",
    "author_association": "MEMBER",
    "body": "This results in the same error:\r\n\r\n``` python\r\nIn [2]: pd.Index([pd.Timestamp('2000-01-03 00:00:00', freq='B'),\r\n                  pd.Period('2000-01-03', 'B'),\r\n                  pd.Period('2000-01-03', 'B')]).sort_values()\r\n[...]\r\nSystemError: <built-in function isinstance> returned a result with an error set\r\n\r\n```"
  }
]
