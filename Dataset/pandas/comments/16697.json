[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308572323",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16697#issuecomment-308572323",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16697",
    "id": 308572323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU3MjMyMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-14T22:08:30Z",
    "updated_at": "2017-06-14T22:08:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "The correct api is the one that works - `.astype(\"category\", categories=cat.categories)`\r\n\r\n`cat` is  a categorical _array_, not type, so what you are trying is in effect is something like this:\r\n```\r\n    In [15]: pd.Series([1,2,3]).astype(np.array([1., 2.,  3.]))\r\n    TypeError: data type not understood\r\n```\r\n\r\nSo we could give a better message, but I think this is basically working as it should.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308586064",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16697#issuecomment-308586064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16697",
    "id": 308586064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODU4NjA2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-14T23:25:46Z",
    "updated_at": "2017-06-15T07:29:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is purely a user error. You are incorrectly passing things as shown by @chris-b1  . \r\n\r\n```\r\ndiff --git a/pandas/core/internals.py b/pandas/core/internals.py\r\nindex f2a7ac7..b4c3e16 100644\r\n--- a/pandas/core/internals.py\r\n+++ b/pandas/core/internals.py\r\n@@ -138,8 +138,11 @@ class Block(PandasObject):\r\n         returns a boolean if we are a categorical\r\n         \"\"\"\r\n         if is_categorical_dtype(dtype):\r\n-            if dtype == CategoricalDtype():\r\n-                return True\r\n+            try:\r\n+                if dtype == CategoricalDtype():\r\n+                    return True\r\n+            except:  # no pramga\r\n+                pass\r\n \r\n             # this is a pd.Categorical, but is not\r\n             # a valid type for astypeing\r\n```\r\n\r\nfixes. this is a bit tricky as categorical is right now a singleton type."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308636962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16697#issuecomment-308636962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16697",
    "id": 308636962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODYzNjk2Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-15T06:00:22Z",
    "updated_at": "2017-06-15T06:00:22Z",
    "author_association": "MEMBER",
    "body": "Makes sense, thanks.  Two follow-up questions.\r\n\r\nIs there a canonical way to pick out categorical columns within a DataFrame?\r\n\r\nIs there a way to pin a pre-existing Category to a Series?  Here I'm thinking of cases where multiple columns of a DataFrame should be explicitly tied to the same dtype.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308652041",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16697#issuecomment-308652041",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16697",
    "id": 308652041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODY1MjA0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-15T07:29:14Z",
    "updated_at": "2017-06-15T07:29:14Z",
    "author_association": "MEMBER",
    "body": "> Is there a canonical way to pick out categorical columns within a DataFrame?\r\n\r\nYou can use `select_dtypes`\r\n\r\nThe problem with `df.dtypes == 'category'` is that this fails (as you have noted) for other dtypes (numpy datatypes), which is beyond pandas to fix (it is due to a specification how numpy dtype comparison works).\r\n\r\n> Is there a way to pin a pre-existing Category to a Series?\r\n\r\nYou mean a pre-existing set of categories? Then you can do the `.astype(\"category\", categories=cat.categories)`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/401523436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16697#issuecomment-401523436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16697",
    "id": 401523436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMTUyMzQzNg==",
    "user": {
      "login": "rafiqhasan",
      "id": 21009819,
      "node_id": "MDQ6VXNlcjIxMDA5ODE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21009819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafiqhasan",
      "html_url": "https://github.com/rafiqhasan",
      "followers_url": "https://api.github.com/users/rafiqhasan/followers",
      "following_url": "https://api.github.com/users/rafiqhasan/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafiqhasan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafiqhasan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafiqhasan/subscriptions",
      "organizations_url": "https://api.github.com/users/rafiqhasan/orgs",
      "repos_url": "https://api.github.com/users/rafiqhasan/repos",
      "events_url": "https://api.github.com/users/rafiqhasan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafiqhasan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-30T07:21:10Z",
    "updated_at": "2018-06-30T07:21:19Z",
    "author_association": "NONE",
    "body": "Simple solution , which works for me always:\r\n\r\nstr( df.dtypes[colname] ) == 'category'"
  }
]
