[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13060710",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2628#issuecomment-13060710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2628",
    "id": 13060710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDYwNzEw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-04T02:56:17Z",
    "updated_at": "2013-02-04T02:56:44Z",
    "author_association": "MEMBER",
    "body": "bump. What about the groups property being a DataFrame with nans filing unequal group sizes? I don't know about others, but I frequently find myself converting groups to a DataFrame.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426580335",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2628#issuecomment-426580335",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2628",
    "id": 426580335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjU4MDMzNQ==",
    "user": {
      "login": "kokes",
      "id": 8451755,
      "node_id": "MDQ6VXNlcjg0NTE3NTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8451755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kokes",
      "html_url": "https://github.com/kokes",
      "followers_url": "https://api.github.com/users/kokes/followers",
      "following_url": "https://api.github.com/users/kokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/kokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kokes/subscriptions",
      "organizations_url": "https://api.github.com/users/kokes/orgs",
      "repos_url": "https://api.github.com/users/kokes/repos",
      "events_url": "https://api.github.com/users/kokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T10:06:32Z",
    "updated_at": "2018-10-03T10:06:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Truncation on the per-group basis already works now, because indices in pandas have their own `__repr__`.\r\n\r\n```pd.DataFrame({'a': [random.randint(0, 100) for j in range(10000)]}).groupby('a').groups```\r\n\r\nAs for the group-level truncation, that's a bit tricky, because the `.groups` property is a plain dictionary. What could be done is that we could create a class that inherits from `dict` and adds a custom `__repr__` and nothing else. Something along these lines:\r\n\r\n```\r\nclass DataFrameGroups(dict):\r\n\tdef __repr__(self):\r\n\t\tif len(self) < 30:\r\n\t\t\treturn super().__repr__()\r\n\r\n\t\tfor k, v in self.items():\r\n\t\t\tpass # build representation here\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448570684",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2628#issuecomment-448570684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2628",
    "id": 448570684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODU3MDY4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T12:02:47Z",
    "updated_at": "2018-12-19T12:02:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as duplicate "
  }
]
