[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9888912",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-9888912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 9888912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4ODg5MTI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-29T22:55:03Z",
    "updated_at": "2012-10-29T22:55:03Z",
    "author_association": "MEMBER",
    "body": "The work to do is mainly in `period.c`. `period.h` has some constants and functions prototypes. `plib.pyx` is a simple cython wrapper for period.c/h. There's no (I'm pretty sure?) interaction with datetime.pyx/pxd\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9893262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-9893262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 9893262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4OTMyNjI=",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-30T02:38:55Z",
    "updated_at": "2012-10-30T02:39:07Z",
    "author_association": "MEMBER",
    "body": "One important detail that I've run into is that the `abstime` member of the `date_info` is in the smallest unit used. Makes sense, just wanted to document it here. The implications of this are largely where most of the work lies.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10044264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-10044264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 10044264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDQ0MjY0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-03T21:09:32Z",
    "updated_at": "2012-11-03T21:09:32Z",
    "author_association": "MEMBER",
    "body": "In `period.h` and `plib.pyx` there is the function signature `getAbsTime`. However, it is not called in `period.c` nor is it used in `plib.pyx`. `period.c` has calls to a function called `get_abs_time` whose signature is not in `period.h`. Is it okay to make `get_abs_time` a static function?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10046256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-10046256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 10046256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDQ2MjU2",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-04T01:10:29Z",
    "updated_at": "2012-11-04T01:10:29Z",
    "author_association": "MEMBER",
    "body": "I'm really not a C expert, so you can make any refactorings you like as long as the test suite passes. You'll have to use 64-bit integers for micro- and nanoseconds since a whole day's worth won't fit in a 32-bit integer. If you look around for `stdint.h` includes you will find a portable way to get int64_t in there if it's not included already\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11661628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-11661628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 11661628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjYxNjI4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T14:45:43Z",
    "updated_at": "2012-12-24T14:45:43Z",
    "author_association": "MEMBER",
    "body": "I want to submit a pull request for this issue. I've just (re)-read the pandas contributing documentation and I'm not sure I understand whether I need to rebase. I have an upstream branch that I'm constantly merging with my fork of pandas git master and that I'm also merging into the feature branch for this issue (I check for upstream changes at least once per day). In that case it would seem that I do not need to worry about rebasing, but I just want to make sure.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11661921",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-11661921",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 11661921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjYxOTIx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T15:10:34Z",
    "updated_at": "2012-12-24T15:11:06Z",
    "author_association": "NONE",
    "body": "Rebasing will ensure that your commits apply cleanly on top of upstream (at that moment at least),\nbut it's better to leave the conflicts as they are then to merge master back into your own branch, you \nnever want to do that if you'll submit the branch as a PR.\n\nIf your git-fu can handle it, then rebase on top of upstream and force push to replace the old commits \nwith the new history, and if you need to make changes/fixes, you can use interactive rebase to squash and \nreorder commits in your PR to make the history as clean as possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11662719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-11662719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 11662719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjYyNzE5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T16:12:25Z",
    "updated_at": "2012-12-24T16:12:25Z",
    "author_association": "MEMBER",
    "body": "So for future requests I should never merge pandas git master back into my feature branch and just work on the branch from whatever state master was in when I created the branch?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11662885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-11662885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 11662885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjYyODg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T16:22:08Z",
    "updated_at": "2012-12-24T16:22:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "here's the way I have setup\n\n`master` branch where I don't do work, and \n`feature_branch`, which I get by `git co -b feature_branch`\n\nyou may need to do\n\n`git br feature_branch --set-upstream master` (if `git pull` does not work when in `feature_branch`)\n\nto update master:\n`\ngit co master\ngit pull\n`\n\nin theory your feature branch is now updated\nbut if not\n\n`\ngit co feature_branch\ngit pull --rebase\n`\n will reapply all of your commits and essentially rewrite the commit history in your feature branch\n\nyou may also need to do `git push myfork feature_branch --force` to push\n\nas long as someone else is not working ON THE SAME things in master, this will work to update your feature branch to master and not pollute the history\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11663149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-11663149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 11663149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjYzMTQ5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T16:44:40Z",
    "updated_at": "2012-12-24T16:44:40Z",
    "author_association": "NONE",
    "body": "@cpcloud, yes. Rebase if you'd like to be neater, but never merge upstream into a branch \nyou intend to PR.\n\nYou can think of rebasing  as cherry picking all your commits one by one on top a new \nstarting point, if you're familiar with that.\n\njreback's recipe is just fine.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12015291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-12015291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 12015291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDE1Mjkx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T20:20:30Z",
    "updated_at": "2013-01-08T20:20:30Z",
    "author_association": "MEMBER",
    "body": "I went through almost every commit and rebased and squashed as many as I could, but if I look at what this looks like if I were to submit a pull request I still get a bunch of \"Merge with upstream/master ...\" commits. Is it okay to submit this, or is there a way to get only the commits that don't have that line in the title? I promise I'll never merge my branch with upstream again in any future pull requests. :|\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12017913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-12017913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 12017913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDE3OTEz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-08T21:21:59Z",
    "updated_at": "2013-01-08T21:21:59Z",
    "author_association": "NONE",
    "body": "By all means, if have something to contribute to the porject but got tangled up with git , open \nup a PR and  it'll get sorted. You can get it right in your next PR.\n\nIf you used \"rebase --interactive\" you can just _\"drop\"_ the merge commits, \nthere's no reason why they should remain in your PR.\nOr you can can just create a new branch of current git master, and \"git cherry-pick\" \nthe commits in your topic branch one by one, excluding the merge commits.\n\nBoth of these are  similar in terms of the end result. \n\nIf you're an emacs user, [magit](https://github.com/magit/magit) has wonderful support for interactive rebasing, I use it constantly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14885699",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2145#issuecomment-14885699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2145",
    "id": 14885699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODg1Njk5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-14T04:08:02Z",
    "updated_at": "2013-03-14T04:08:41Z",
    "author_association": "NONE",
    "body": "Continued in #2670 \n"
  }
]
