[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279227905",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15376#issuecomment-279227905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15376",
    "id": 279227905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTIyNzkwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-12T16:01:20Z",
    "updated_at": "2017-02-12T16:01:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "so your csv is invalid as far as multi-line parsing goes. It 'works' but is not very useful.\r\n\r\nA multi-line csv header needs non-sparsity (this is in fact how '.to_csv' writes it).\r\n```\r\nIn [16]: data\r\nOut[16]: 'X,X,Y,Y,Z,Z\\nDate,Time,A,B,A,B\\n2017-01-21,01:57:49.390,0,1,2,3\\n2017-01-21,01:57:50.400,4,5,7,9\\n2017-01-21,01:57:51.410,3,2,4,1\\n'\r\n\r\nIn [17]: pandas.read_csv(StringIO(data), header=[0,1], parse_dates={'datetime' : [('X', 'Date'), ('X', 'Time')]})\r\nOut[17]: \r\n                 datetime  (Y, A)  (Y, B)  (Z, A)  (Z, B)\r\n0 2017-01-21 01:57:49.390       0       1       2       3\r\n1 2017-01-21 01:57:50.400       4       5       7       9\r\n2 2017-01-21 01:57:51.410       3       2       4       1\r\n```\r\n\r\nI think we have a an issue to parse it with the sparsity but not sure.\r\n\r\nSo it parses correctly when the names are given (as tuples). I suppose its a bug that ``parse_dates`` doesn't handle the column numbers.\r\n\r\nAnd so your original example parses when the columns are fully declared. (though again not very useful).\r\n```\r\nIn [22]: pandas.read_csv(StringIO(data), header=[0,1], parse_dates={'datetime' : [('X', 'Date'), ('Unnamed: 1_level_0', 'Time')]})\r\nOut[22]: \r\n                 datetime  (Y, A)  (Unnamed: 3_level_0, B)  (Z, A)  (Unnamed: 5_level_0, B)\r\n0 2017-01-21 01:57:49.390       0                        1       2                        3\r\n1 2017-01-21 01:57:50.400       4                        5       7                        9\r\n2 2017-01-21 01:57:51.410       3                        2       4                        1\r\n```\r\n\r\nFurther make a single level is just not useful in a multi-level frame.\r\n\r\nI would prob do this:\r\n```\r\nIn [25]: pandas.read_csv(StringIO(data), header=0, skiprows=1, parse_dates={'datetime':[0,1]})\r\nOut[25]: \r\n                 datetime  A  B  A.1  B.1\r\n0 2017-01-21 01:57:49.390  0  1    2    3\r\n1 2017-01-21 01:57:50.400  4  5    7    9\r\n2 2017-01-21 01:57:51.410  3  2    4    1\r\n```\r\n\r\nSo in summary I'll mark this as a bug, but you have other issues.\r\ncc @gfyoung "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279230366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15376#issuecomment-279230366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15376",
    "id": 279230366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTIzMDM2Ng==",
    "user": {
      "login": "stephenrauch",
      "id": 10407290,
      "node_id": "MDQ6VXNlcjEwNDA3Mjkw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/10407290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenrauch",
      "html_url": "https://github.com/stephenrauch",
      "followers_url": "https://api.github.com/users/stephenrauch/followers",
      "following_url": "https://api.github.com/users/stephenrauch/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenrauch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenrauch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenrauch/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenrauch/orgs",
      "repos_url": "https://api.github.com/users/stephenrauch/repos",
      "events_url": "https://api.github.com/users/stephenrauch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenrauch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-12T16:38:23Z",
    "updated_at": "2017-02-12T16:38:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow, thanks for nice response.  Do you mind if I cross post this response on Stack Overflow?\r\n\r\nAlso, the problem exists with/without the sparsity.  It is the tuple causing the problem.  A proposed fix is running in the CI now, I will submit a PR shortly.\r\n\r\nThanks again for your quick and very detailed attention."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279231333",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15376#issuecomment-279231333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15376",
    "id": 279231333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTIzMTMzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-12T16:52:56Z",
    "updated_at": "2017-02-12T16:52:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure. Its not the tuple, rather the positional indexers which look up the tuple."
  }
]
