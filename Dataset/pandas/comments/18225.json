[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343638941",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343638941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343638941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzYzODk0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T04:06:39Z",
    "updated_at": "2017-11-11T04:06:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "can u post the asv results?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343640675",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343640675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343640675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY0MDY3NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T04:49:29Z",
    "updated_at": "2017-11-11T04:49:29Z",
    "author_association": "MEMBER",
    "body": "See below. I was not able to consistently reproduce the one increase for `timeseries.ToDatetime.time_iso8601_tz_spaceformat`\r\n\r\n    asv continuous -f 1.1 upstream/master HEAD -b timedelta -b timeseries -b indexing\r\n\r\n    [  0.00%] · For pandas commit hash e369c1fc:\r\n    [  0.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt......................................................\r\n    [  0.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n    [  0.30%] ··· Running frame_methods.Iteration.time_iteritems_indexing                                                   15.0±0.06ms\r\n    [  0.60%] ··· Running frame_methods.frame_assign_timeseries_index.time_frame_assign_timeseries_index                    1.70±0.04ms\r\n    [  0.90%] ··· Running indexing.DataFrameIndexing.time_boolean_rows                                                          264±2μs\r\n    [  1.20%] ··· Running indexing.DataFrameIndexing.time_boolean_rows_object                                                   477±6μs\r\n    [  1.51%] ··· Running indexing.DataFrameIndexing.time_get_value                                                         3.98±0.02μs\r\n    [  1.81%] ··· Running indexing.DataFrameIndexing.time_get_value_ix                                                       21.6±0.4μs\r\n    [  2.11%] ··· Running indexing.DataFrameIndexing.time_getitem_scalar                                                     10.5±0.2μs\r\n    [  2.41%] ··· Running indexing.DataFrameIndexing.time_iloc_big                                                              112±3μs\r\n    [  2.71%] ··· Running indexing.DataFrameIndexing.time_iloc_dups                                                             188±2μs\r\n    [  3.01%] ··· Running indexing.DataFrameIndexing.time_loc_dups                                                             995±20μs\r\n    [  3.31%] ··· Running indexing.DatetimeIndexing.time_getitem_scalar                                                     4.05±0.03μs\r\n    [  3.61%] ··· Running indexing.IndexerLookup.time_lookup_iloc                                                               277±5ns\r\n    [  3.92%] ··· Running indexing.IndexerLookup.time_lookup_ix                                                             16.0±0.08μs\r\n    [  4.22%] ··· Running indexing.IndexerLookup.time_lookup_loc                                                                290±3ns\r\n    [  4.52%] ··· Running indexing.IndexingMethods.time_get_loc_float                                                        7.91±0.3μs\r\n    [  4.82%] ··· Running indexing.IndexingMethods.time_take_dtindex                                                        3.90±0.04ms\r\n    [  5.12%] ··· Running indexing.IndexingMethods.time_take_intindex                                                       3.89±0.09ms\r\n    [  5.42%] ··· Running indexing.Int64Indexing.time_getitem_array                                                         1.10±0.01ms\r\n    [  5.72%] ··· Running indexing.Int64Indexing.time_getitem_list_like                                                         423±5μs\r\n    [  6.02%] ··· Running indexing.Int64Indexing.time_getitem_lists                                                          6.76±0.1ms\r\n    [  6.33%] ··· Running indexing.Int64Indexing.time_getitem_scalar                                                         16.1±0.2μs\r\n    [  6.63%] ··· Running indexing.Int64Indexing.time_getitem_slice                                                          45.8±0.4μs\r\n    [  6.93%] ··· Running indexing.Int64Indexing.time_iloc_array                                                             60.4±0.3μs\r\n    [  7.23%] ··· Running indexing.Int64Indexing.time_iloc_list_like                                                         34.3±0.4μs\r\n    [  7.53%] ··· Running indexing.Int64Indexing.time_iloc_scalar                                                            12.1±0.1μs\r\n    [  7.83%] ··· Running indexing.Int64Indexing.time_iloc_slice                                                             34.1±0.4μs\r\n    [  8.13%] ··· Running indexing.Int64Indexing.time_ix_array                                                                  780±5μs\r\n    [  8.43%] ··· Running indexing.Int64Indexing.time_ix_list_like                                                              305±4μs\r\n    [  8.73%] ··· Running indexing.Int64Indexing.time_ix_scalar                                                              54.1±0.7μs\r\n    [  9.04%] ··· Running indexing.Int64Indexing.time_ix_slice                                                               73.3±0.9μs\r\n    [  9.34%] ··· Running indexing.Int64Indexing.time_loc_array                                                                 930±8μs\r\n    [  9.64%] ··· Running indexing.Int64Indexing.time_loc_list_like                                                             355±3μs\r\n    [  9.94%] ··· Running indexing.Int64Indexing.time_loc_scalar                                                             44.1±0.3μs\r\n    [ 10.24%] ··· Running indexing.Int64Indexing.time_loc_slice                                                                49.0±2μs\r\n    [ 10.54%] ··· Running indexing.IntervalIndexing.time_getitem_list                                                          95.1±2μs\r\n    [ 10.84%] ··· Running indexing.IntervalIndexing.time_getitem_scalar                                                        43.3±4μs\r\n    [ 11.14%] ··· Running indexing.IntervalIndexing.time_loc_list                                                              76.0±1μs\r\n    [ 11.45%] ··· Running indexing.IntervalIndexing.time_loc_scalar                                                            67.4±2μs\r\n    [ 11.75%] ··· Running indexing.MultiIndexing.time_frame_xs_mi_ix                                                            312±2μs\r\n    [ 12.05%] ··· Running indexing.MultiIndexing.time_is_monotonic                                                              240±2ns\r\n    [ 12.35%] ··· Running indexing.MultiIndexing.time_multiindex_get_indexer                                                1.96±0.04ms\r\n    [ 12.65%] ··· Running indexing.MultiIndexing.time_multiindex_large_get_loc                                                  270±5μs\r\n    [ 12.95%] ··· Running indexing.MultiIndexing.time_multiindex_large_get_loc_warm                                             303±3ms\r\n    [ 13.25%] ··· Running indexing.MultiIndexing.time_multiindex_med_get_loc                                                4.39±0.02μs\r\n    [ 13.55%] ··· Running indexing.MultiIndexing.time_multiindex_med_get_loc_warm                                           4.20±0.03ms\r\n    [ 13.86%] ··· Running indexing.MultiIndexing.time_multiindex_slicers                                                    5.51±0.02ms\r\n    [ 14.16%] ··· Running indexing.MultiIndexing.time_multiindex_small_get_loc_warm                                         4.10±0.05ms\r\n    [ 14.46%] ··· Running indexing.MultiIndexing.time_multiindex_string_get_loc                                             4.19±0.03μs\r\n    [ 14.76%] ··· Running indexing.MultiIndexing.time_remove_unused_levels                                                      386±3μs\r\n    [ 15.06%] ··· Running indexing.MultiIndexing.time_series_xs_mi_ix                                                           273±2μs\r\n    [ 15.36%] ··· Running indexing.PanelIndexing.time_subset                                                                   903±10μs\r\n    [ 15.66%] ··· Running indexing.StringIndexing.time_get_value                                                                354±3ms\r\n    [ 15.96%] ··· Running indexing.StringIndexing.time_getitem_label_slice                                                      357±3ms\r\n    [ 16.27%] ··· Running indexing.StringIndexing.time_getitem_pos_slice                                                     49.2±0.1μs\r\n    [ 16.57%] ··· Running inference.DtypeInfer.time_timedelta64_1                                                            59.9±0.4ms\r\n    [ 16.87%] ··· Running inference.DtypeInfer.time_timedelta64_2                                                           10.3±0.08ms\r\n    [ 17.17%] ··· Running period.period_standard_indexing.time_align                                                           938±10μs\r\n    [ 17.47%] ··· Running period.period_standard_indexing.time_get_loc                                                       9.71±0.2μs\r\n    [ 17.77%] ··· Running period.period_standard_indexing.time_intersection                                                     172±2μs\r\n    [ 18.07%] ··· Running period.period_standard_indexing.time_series_loc                                                    66.1±0.7μs\r\n    [ 18.37%] ··· Running period.period_standard_indexing.time_shallow_copy                                                  8.52±0.1μs\r\n    [ 18.67%] ··· Running period.period_standard_indexing.time_shape                                                            441±5ns\r\n    [ 18.98%] ··· Running reindex.Reindexing.time_reindex_columns                                                               502±3μs\r\n    [ 19.28%] ··· Running reindex.Reindexing.time_reindex_dates                                                                 278±3μs\r\n    [ 19.58%] ··· Running reindex.Reindexing.time_reindex_multiindex                                                         74.8±0.4ms\r\n    [ 19.88%] ··· Running replace.replace_convert.time_replace_frame_timedelta                                                  409±1ms\r\n    [ 20.18%] ··· Running replace.replace_convert.time_replace_series_timedelta                                                 258±2ms\r\n    [ 20.48%] ··· Running timedelta.DatetimeAccessor.time_dt_accessor                                                        25.8±0.4μs\r\n    [ 20.78%] ··· Running timedelta.ToTimedelta.time_convert_coerce                                                          63.2±0.6ms\r\n    [ 21.08%] ··· Running timedelta.ToTimedelta.time_convert_ignore                                                          57.1±0.7ms\r\n    [ 21.39%] ··· Running timedelta.ToTimedelta.time_convert_int                                                                122±2μs\r\n    [ 21.69%] ··· Running timedelta.ToTimedelta.time_convert_string                                                          16.4±0.2ms\r\n    [ 21.99%] ··· Running timedelta.ToTimedelta.time_convert_string_seconds                                                  9.85±0.1ms\r\n    [ 22.29%] ··· Running timeseries.AsOf.time_asof                                                                          6.45±0.2ms\r\n    [ 22.59%] ··· Running timeseries.AsOf.time_asof_nan                                                                     6.41±0.06ms\r\n    [ 22.89%] ··· Running timeseries.AsOf.time_asof_nan_single                                                              3.31±0.02ms\r\n    [ 23.19%] ··· Running timeseries.AsOf.time_asof_single                                                                   30.1±0.5μs\r\n    [ 23.49%] ··· Running timeseries.AsOf.time_asof_single_early                                                             22.3±0.2μs\r\n    [ 23.80%] ··· Running timeseries.AsOfDataFrame.time_asof                                                                 34.4±0.3ms\r\n    [ 24.10%] ··· Running timeseries.AsOfDataFrame.time_asof_nan                                                             38.6±0.5ms\r\n    [ 24.40%] ··· Running timeseries.AsOfDataFrame.time_asof_nan_single                                                      12.0±0.4ms\r\n    [ 24.70%] ··· Running timeseries.AsOfDataFrame.time_asof_single                                                          9.84±0.1ms\r\n    [ 25.00%] ··· Running timeseries.AsOfDataFrame.time_asof_single_early                                                    84.8±0.7μs\r\n    [ 25.30%] ··· Running timeseries.DatetimeAccessor.time_dt_accessor                                                       23.2±0.6μs\r\n    [ 25.60%] ··· Running timeseries.DatetimeAccessor.time_dt_accessor_normalize                                            5.11±0.06ms\r\n    [ 25.90%] ··· Running timeseries.DatetimeIndex.time_add_offset_delta                                                       1.71±0ms\r\n    [ 26.20%] ··· Running timeseries.DatetimeIndex.time_add_offset_fast                                                     7.23±0.09ms\r\n    [ 26.51%] ··· Running timeseries.DatetimeIndex.time_add_offset_slow                                                         462±3ms\r\n    [ 26.81%] ··· Running timeseries.DatetimeIndex.time_add_timedelta                                                          1.63±0ms\r\n    [ 27.11%] ··· Running timeseries.DatetimeIndex.time_dti_factorize                                                       7.52±0.05ms\r\n    [ 27.41%] ··· Running timeseries.DatetimeIndex.time_dti_tz_factorize                                                    7.43±0.04ms\r\n    [ 27.71%] ··· Running timeseries.DatetimeIndex.time_infer_dst                                                           2.40±0.01ms\r\n    [ 28.01%] ··· Running timeseries.DatetimeIndex.time_infer_freq_business                                                 7.10±0.04ms\r\n    [ 28.31%] ··· Running timeseries.DatetimeIndex.time_infer_freq_daily                                                    7.15±0.02ms\r\n    [ 28.61%] ··· Running timeseries.DatetimeIndex.time_infer_freq_none                                                      16.3±0.1ms\r\n    [ 28.92%] ··· Running timeseries.DatetimeIndex.time_normalize                                                           2.77±0.01ms\r\n    [ 29.22%] ··· Running timeseries.DatetimeIndex.time_reset_index                                                             365±2μs\r\n    [ 29.52%] ··· Running timeseries.DatetimeIndex.time_reset_index_tz                                                          451±3μs\r\n    [ 29.82%] ··· Running timeseries.DatetimeIndex.time_timeseries_is_month_start                                               404±2μs\r\n    [ 30.12%] ··· Running timeseries.DatetimeIndex.time_timestamp_tzinfo_cons                                                  9.41±0μs\r\n    [ 30.42%] ··· Running timeseries.DatetimeIndex.time_unique                                                                103±0.1μs\r\n    [ 30.72%] ··· Running timeseries.Iteration.time_iter_datetimeindex                                                          610±4ms\r\n    [ 31.02%] ··· Running timeseries.Iteration.time_iter_datetimeindex_preexit                                              11.1±0.06ms\r\n    [ 31.33%] ··· Running timeseries.Iteration.time_iter_periodindex                                                              2.01s\r\n    [ 31.63%] ··· Running timeseries.Iteration.time_iter_periodindex_preexit                                                 21.2±0.2ms\r\n    [ 31.93%] ··· Running timeseries.Offsets.time_custom_bday_apply                                                          22.5±0.2μs\r\n    [ 32.23%] ··· Running timeseries.Offsets.time_custom_bday_apply_dt64                                                     24.8±0.3μs\r\n    [ 32.53%] ··· Running timeseries.Offsets.time_custom_bday_cal_decr                                                       34.3±0.3μs\r\n    [ 32.83%] ··· Running timeseries.Offsets.time_custom_bday_cal_incr                                                       30.4±0.5μs\r\n    [ 33.13%] ··· Running timeseries.Offsets.time_custom_bday_cal_incr_n                                                     29.9±0.5μs\r\n    [ 33.43%] ··· Running timeseries.Offsets.time_custom_bday_cal_incr_neg_n                                                 34.3±0.4μs\r\n    [ 33.73%] ··· Running timeseries.Offsets.time_custom_bday_decr                                                           33.4±0.4μs\r\n    [ 34.04%] ··· Running timeseries.Offsets.time_custom_bday_incr                                                           25.6±0.3μs\r\n    [ 34.34%] ··· Running timeseries.Offsets.time_custom_bmonthbegin_decr_n                                                     149±2μs\r\n    [ 34.64%] ··· Running timeseries.Offsets.time_custom_bmonthbegin_incr_n                                                     178±7μs\r\n    [ 34.94%] ··· Running timeseries.Offsets.time_custom_bmonthend_decr_n                                                      330±20μs\r\n    [ 35.24%] ··· Running timeseries.Offsets.time_custom_bmonthend_incr                                                         173±6μs\r\n    [ 35.54%] ··· Running timeseries.Offsets.time_custom_bmonthend_incr_n                                                       178±3μs\r\n    [ 35.84%] ··· Running timeseries.Offsets.time_timeseries_day_apply                                                       28.3±0.4μs\r\n    [ 36.14%] ··· Running timeseries.Offsets.time_timeseries_day_incr                                                        31.3±0.7μs\r\n    [ 36.45%] ··· Running timeseries.Offsets.time_timeseries_year_apply                                                     11.2±0.06μs\r\n    [ 36.75%] ··· Running timeseries.Offsets.time_timeseries_year_incr                                                       14.5±0.2μs\r\n    [ 37.05%] ··· Running timeseries.ResampleDataFrame.time_max_numpy                                                       2.21±0.01ms\r\n    [ 37.35%] ··· Running timeseries.ResampleDataFrame.time_max_string                                                      2.20±0.01ms\r\n    [ 37.65%] ··· Running timeseries.ResampleDataFrame.time_mean_numpy                                                      1.91±0.02ms\r\n    [ 37.95%] ··· Running timeseries.ResampleDataFrame.time_mean_string                                                     1.95±0.03ms\r\n    [ 38.25%] ··· Running timeseries.ResampleDataFrame.time_min_numpy                                                       2.23±0.04ms\r\n    [ 38.55%] ··· Running timeseries.ResampleDataFrame.time_min_string                                                      2.22±0.02ms\r\n    [ 38.86%] ··· Running timeseries.ResampleSeries.time_1min_5min_mean                                                     1.02±0.01ms\r\n    [ 39.16%] ··· Running timeseries.ResampleSeries.time_1min_5min_ohlc                                                     1.11±0.01ms\r\n    [ 39.46%] ··· Running timeseries.ResampleSeries.time_period_downsample_mean                                              11.1±0.2ms\r\n    [ 39.76%] ··· Running timeseries.ResampleSeries.time_resample_datetime64                                                1.67±0.01ms\r\n    [ 40.06%] ··· Running timeseries.ResampleSeries.time_timestamp_downsample_mean                                          4.84±0.02ms\r\n    [ 40.36%] ··· Running timeseries.SemiMonthOffset.time_begin_apply                                                        51.4±0.5μs\r\n    [ 40.66%] ··· Running timeseries.SemiMonthOffset.time_begin_apply_index                                                     468±5ms\r\n    [ 40.96%] ··· Running timeseries.SemiMonthOffset.time_begin_decr                                                         59.4±0.7μs\r\n    [ 41.27%] ··· Running timeseries.SemiMonthOffset.time_begin_decr_n                                                         63.8±2μs\r\n    [ 41.57%] ··· Running timeseries.SemiMonthOffset.time_begin_decr_rng                                                        473±6ms\r\n    [ 41.87%] ··· Running timeseries.SemiMonthOffset.time_begin_incr                                                         56.1±0.5μs\r\n    [ 42.17%] ··· Running timeseries.SemiMonthOffset.time_begin_incr_n                                                       59.3±0.9μs\r\n    [ 42.47%] ··· Running timeseries.SemiMonthOffset.time_begin_incr_rng                                                       489±20ms\r\n    [ 42.77%] ··· Running timeseries.SemiMonthOffset.time_end_apply                                                            56.2±2μs\r\n    [ 43.07%] ··· Running timeseries.SemiMonthOffset.time_end_apply_index                                                       503±6ms\r\n    [ 43.37%] ··· Running timeseries.SemiMonthOffset.time_end_decr                                                             63.7±3μs\r\n    [ 43.67%] ··· Running timeseries.SemiMonthOffset.time_end_decr_n                                                           69.1±2μs\r\n    [ 43.98%] ··· Running timeseries.SemiMonthOffset.time_end_decr_rng                                                          521±9ms\r\n    [ 44.28%] ··· Running timeseries.SemiMonthOffset.time_end_incr                                                             56.9±2μs\r\n    [ 44.58%] ··· Running timeseries.SemiMonthOffset.time_end_incr_n                                                           60.3±1μs\r\n    [ 44.88%] ··· Running timeseries.SemiMonthOffset.time_end_incr_rng                                                         504±10ms\r\n    [ 45.18%] ··· Running timeseries.SeriesArithmetic.time_add_offset_delta                                                 3.42±0.05ms\r\n    [ 45.48%] ··· Running timeseries.SeriesArithmetic.time_add_offset_fast                                                   8.70±0.2ms\r\n    [ 45.78%] ··· Running timeseries.SeriesArithmetic.time_add_offset_slow                                                      454±1ms\r\n    [ 46.08%] ··· Running timeseries.TimeDatetimeConverter.time_convert                                                      4.93±0.1ms\r\n    [ 46.39%] ··· Running timeseries.TimeSeries.time_add_irregular                                                          10.3±0.09ms\r\n    [ 46.69%] ··· Running timeseries.TimeSeries.time_large_lookup_value                                                     2.13±0.05ms\r\n    [ 46.99%] ··· Running timeseries.TimeSeries.time_sort_index_monotonic                                                    64.7±0.8μs\r\n    [ 47.29%] ··· Running timeseries.TimeSeries.time_sort_index_non_monotonic                                               9.03±0.08ms\r\n    [ 47.59%] ··· Running timeseries.TimeSeries.time_timeseries_slice_minutely                                               64.3±0.9μs\r\n    [ 47.89%] ··· Running timeseries.ToDatetime.time_format_YYYYMMDD                                                        5.08±0.08ms\r\n    [ 48.19%] ··· Running timeseries.ToDatetime.time_format_exact                                                               507±4ms\r\n    [ 48.49%] ··· Running timeseries.ToDatetime.time_format_no_exact                                                            479±6ms\r\n    [ 48.80%] ··· Running timeseries.ToDatetime.time_iso8601                                                                3.85±0.06ms\r\n    [ 49.10%] ··· Running timeseries.ToDatetime.time_iso8601_format                                                         3.80±0.01ms\r\n    [ 49.40%] ··· Running timeseries.ToDatetime.time_iso8601_format_no_sep                                                  4.02±0.06ms\r\n    [ 49.70%] ··· Running timeseries.ToDatetime.time_iso8601_nosep                                                          4.34±0.07ms\r\n    [ 50.00%] ··· Running timeseries.ToDatetime.time_iso8601_tz_spaceformat                                                     223±5ms\r\n    [ 50.00%] · For pandas commit hash f68bf254:\r\n    [ 50.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt.........................................................\r\n    [ 50.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n    [ 50.30%] ··· Running frame_methods.Iteration.time_iteritems_indexing                                                   15.1±0.07ms\r\n    [ 50.60%] ··· Running frame_methods.frame_assign_timeseries_index.time_frame_assign_timeseries_index                    1.70±0.03ms\r\n    [ 50.90%] ··· Running indexing.DataFrameIndexing.time_boolean_rows                                                          265±2μs\r\n    [ 51.20%] ··· Running indexing.DataFrameIndexing.time_boolean_rows_object                                                   486±9μs\r\n    [ 51.51%] ··· Running indexing.DataFrameIndexing.time_get_value                                                         4.14±0.09μs\r\n    [ 51.81%] ··· Running indexing.DataFrameIndexing.time_get_value_ix                                                       23.4±0.4μs\r\n    [ 52.11%] ··· Running indexing.DataFrameIndexing.time_getitem_scalar                                                     10.4±0.2μs\r\n    [ 52.41%] ··· Running indexing.DataFrameIndexing.time_iloc_big                                                              119±9μs\r\n    [ 52.71%] ··· Running indexing.DataFrameIndexing.time_iloc_dups                                                            219±10μs\r\n    [ 53.01%] ··· Running indexing.DataFrameIndexing.time_loc_dups                                                           1.23±0.1ms\r\n    [ 53.31%] ··· Running indexing.DatetimeIndexing.time_getitem_scalar                                                     4.21±0.08μs\r\n    [ 53.61%] ··· Running indexing.IndexerLookup.time_lookup_iloc                                                               284±4ns\r\n    [ 53.92%] ··· Running indexing.IndexerLookup.time_lookup_ix                                                              15.6±0.6μs\r\n    [ 54.22%] ··· Running indexing.IndexerLookup.time_lookup_loc                                                                286±4ns\r\n    [ 54.52%] ··· Running indexing.IndexingMethods.time_get_loc_float                                                        7.45±0.3μs\r\n    [ 54.82%] ··· Running indexing.IndexingMethods.time_take_dtindex                                                         3.68±0.1ms\r\n    [ 55.12%] ··· Running indexing.IndexingMethods.time_take_intindex                                                       3.69±0.05ms\r\n    [ 55.42%] ··· Running indexing.Int64Indexing.time_getitem_array                                                          1.49±0.2ms\r\n    [ 55.72%] ··· Running indexing.Int64Indexing.time_getitem_list_like                                                        475±10μs\r\n    [ 56.02%] ··· Running indexing.Int64Indexing.time_getitem_lists                                                          7.01±0.1ms\r\n    [ 56.33%] ··· Running indexing.Int64Indexing.time_getitem_scalar                                                         16.4±0.1μs\r\n    [ 56.63%] ··· Running indexing.Int64Indexing.time_getitem_slice                                                            46.0±1μs\r\n    [ 56.93%] ··· Running indexing.Int64Indexing.time_iloc_array                                                               60.8±2μs\r\n    [ 57.23%] ··· Running indexing.Int64Indexing.time_iloc_list_like                                                         36.6±0.8μs\r\n    [ 57.53%] ··· Running indexing.Int64Indexing.time_iloc_scalar                                                            13.1±0.4μs\r\n    [ 57.83%] ··· Running indexing.Int64Indexing.time_iloc_slice                                                             35.1±0.9μs\r\n    [ 58.13%] ··· Running indexing.Int64Indexing.time_ix_array                                                                 805±10μs\r\n    [ 58.43%] ··· Running indexing.Int64Indexing.time_ix_list_like                                                              310±2μs\r\n    [ 58.73%] ··· Running indexing.Int64Indexing.time_ix_scalar                                                              56.2±0.9μs\r\n    [ 59.04%] ··· Running indexing.Int64Indexing.time_ix_slice                                                               73.2±0.9μs\r\n    [ 59.34%] ··· Running indexing.Int64Indexing.time_loc_array                                                             1.00±0.02ms\r\n    [ 59.64%] ··· Running indexing.Int64Indexing.time_loc_list_like                                                            454±20μs\r\n    [ 59.94%] ··· Running indexing.Int64Indexing.time_loc_scalar                                                               46.7±1μs\r\n    [ 60.24%] ··· Running indexing.Int64Indexing.time_loc_slice                                                                52.4±2μs\r\n    [ 60.54%] ··· Running indexing.IntervalIndexing.time_getitem_list                                                          99.7±5μs\r\n    [ 60.84%] ··· Running indexing.IntervalIndexing.time_getitem_scalar                                                        45.1±1μs\r\n    [ 61.14%] ··· Running indexing.IntervalIndexing.time_loc_list                                                              72.9±2μs\r\n    [ 61.45%] ··· Running indexing.IntervalIndexing.time_loc_scalar                                                            68.1±3μs\r\n    [ 61.75%] ··· Running indexing.MultiIndexing.time_frame_xs_mi_ix                                                           325±10μs\r\n    [ 62.05%] ··· Running indexing.MultiIndexing.time_is_monotonic                                                              251±3ns\r\n    [ 62.35%] ··· Running indexing.MultiIndexing.time_multiindex_get_indexer                                                2.08±0.08ms\r\n    [ 62.65%] ··· Running indexing.MultiIndexing.time_multiindex_large_get_loc                                                  256±6μs\r\n    [ 62.95%] ··· Running indexing.MultiIndexing.time_multiindex_large_get_loc_warm                                             310±6ms\r\n    [ 63.25%] ··· Running indexing.MultiIndexing.time_multiindex_med_get_loc                                                 4.40±0.1μs\r\n    [ 63.55%] ··· Running indexing.MultiIndexing.time_multiindex_med_get_loc_warm                                           4.23±0.02ms\r\n    [ 63.86%] ··· Running indexing.MultiIndexing.time_multiindex_slicers                                                    5.56±0.04ms\r\n    [ 64.16%] ··· Running indexing.MultiIndexing.time_multiindex_small_get_loc_warm                                         4.30±0.06ms\r\n    [ 64.46%] ··· Running indexing.MultiIndexing.time_multiindex_string_get_loc                                             4.13±0.03μs\r\n    [ 64.76%] ··· Running indexing.MultiIndexing.time_remove_unused_levels                                                      404±6μs\r\n    [ 65.06%] ··· Running indexing.MultiIndexing.time_series_xs_mi_ix                                                           273±4μs\r\n    [ 65.36%] ··· Running indexing.PanelIndexing.time_subset                                                                   935±10μs\r\n    [ 65.66%] ··· Running indexing.StringIndexing.time_get_value                                                              390±0.3ms\r\n    [ 65.96%] ··· Running indexing.StringIndexing.time_getitem_label_slice                                                     366±10ms\r\n    [ 66.27%] ··· Running indexing.StringIndexing.time_getitem_pos_slice                                                       53.8±1μs\r\n    [ 66.57%] ··· Running inference.DtypeInfer.time_timedelta64_1                                                            61.3±0.4ms\r\n    [ 66.87%] ··· Running inference.DtypeInfer.time_timedelta64_2                                                           10.1±0.05ms\r\n    [ 67.17%] ··· Running period.period_standard_indexing.time_align                                                            946±9μs\r\n    [ 67.47%] ··· Running period.period_standard_indexing.time_get_loc                                                       10.4±0.4μs\r\n    [ 67.77%] ··· Running period.period_standard_indexing.time_intersection                                                    194±10μs\r\n    [ 68.07%] ··· Running period.period_standard_indexing.time_series_loc                                                    66.3±0.4μs\r\n    [ 68.37%] ··· Running period.period_standard_indexing.time_shallow_copy                                                 8.78±0.05μs\r\n    [ 68.67%] ··· Running period.period_standard_indexing.time_shape                                                            442±4ns\r\n    [ 68.98%] ··· Running reindex.Reindexing.time_reindex_columns                                                               507±4μs\r\n    [ 69.28%] ··· Running reindex.Reindexing.time_reindex_dates                                                                 278±1μs\r\n    [ 69.58%] ··· Running reindex.Reindexing.time_reindex_multiindex                                                            185±3ms\r\n    [ 69.88%] ··· Running replace.replace_convert.time_replace_frame_timedelta                                                  415±4ms\r\n    [ 70.18%] ··· Running replace.replace_convert.time_replace_series_timedelta                                                 261±1ms\r\n    [ 70.48%] ··· Running timedelta.DatetimeAccessor.time_dt_accessor                                                        26.3±0.2μs\r\n    [ 70.78%] ··· Running timedelta.ToTimedelta.time_convert_coerce                                                          58.3±0.2ms\r\n    [ 71.08%] ··· Running timedelta.ToTimedelta.time_convert_ignore                                                          57.6±0.8ms\r\n    [ 71.39%] ··· Running timedelta.ToTimedelta.time_convert_int                                                                119±1μs\r\n    [ 71.69%] ··· Running timedelta.ToTimedelta.time_convert_string                                                         16.2±0.08ms\r\n    [ 71.99%] ··· Running timedelta.ToTimedelta.time_convert_string_seconds                                                  9.86±0.1ms\r\n    [ 72.29%] ··· Running timeseries.AsOf.time_asof                                                                          6.67±0.1ms\r\n    [ 72.59%] ··· Running timeseries.AsOf.time_asof_nan                                                                      6.50±0.2ms\r\n    [ 72.89%] ··· Running timeseries.AsOf.time_asof_nan_single                                                              3.27±0.03ms\r\n    [ 73.19%] ··· Running timeseries.AsOf.time_asof_single                                                                   29.1±0.4μs\r\n    [ 73.49%] ··· Running timeseries.AsOf.time_asof_single_early                                                             23.3±0.3μs\r\n    [ 73.80%] ··· Running timeseries.AsOfDataFrame.time_asof                                                                 34.6±0.8ms\r\n    [ 74.10%] ··· Running timeseries.AsOfDataFrame.time_asof_nan                                                             40.2±0.5ms\r\n    [ 74.40%] ··· Running timeseries.AsOfDataFrame.time_asof_nan_single                                                      12.1±0.1ms\r\n    [ 74.70%] ··· Running timeseries.AsOfDataFrame.time_asof_single                                                          10.3±0.1ms\r\n    [ 75.00%] ··· Running timeseries.AsOfDataFrame.time_asof_single_early                                                      85.7±1μs\r\n    [ 75.30%] ··· Running timeseries.DatetimeAccessor.time_dt_accessor                                                       22.2±0.6μs\r\n    [ 75.60%] ··· Running timeseries.DatetimeAccessor.time_dt_accessor_normalize                                            5.34±0.09ms\r\n    [ 75.90%] ··· Running timeseries.DatetimeIndex.time_add_offset_delta                                                                1.77±0.01ms\r\n    [ 76.20%] ··· Running timeseries.DatetimeIndex.time_add_offset_fast                                                                                                              7.22±0.03ms\r\n    [ 76.51%] ··· Running timeseries.DatetimeIndex.time_add_offset_slow                                                                                                                 471±10ms\r\n    [ 76.81%] ··· Running timeseries.DatetimeIndex.time_add_timedelta                                                                                                                   1.68±0ms\r\n    [ 77.11%] ··· Running timeseries.DatetimeIndex.time_dti_factorize                                                                                                                7.44±0.04ms\r\n    [ 77.41%] ··· Running timeseries.DatetimeIndex.time_dti_tz_factorize                                                                                                              7.99±0.1ms\r\n    [ 77.71%] ··· Running timeseries.DatetimeIndex.time_infer_dst                                                                                                                    2.47±0.06ms\r\n    [ 78.01%] ··· Running timeseries.DatetimeIndex.time_infer_freq_business                                                                                                          7.15±0.02ms\r\n    [ 78.31%] ··· Running timeseries.DatetimeIndex.time_infer_freq_daily                                                                                                             7.57±0.02ms\r\n    [ 78.61%] ··· Running timeseries.DatetimeIndex.time_infer_freq_none                                                                                                              16.7±0.06ms\r\n    [ 78.92%] ··· Running timeseries.DatetimeIndex.time_normalize                                                                                                                    3.01±0.06ms\r\n    [ 79.22%] ··· Running timeseries.DatetimeIndex.time_reset_index                                                                                                                    356±0.4μs\r\n    [ 79.52%] ··· Running timeseries.DatetimeIndex.time_reset_index_tz                                                                                                                  611±80μs\r\n    [ 79.82%] ··· Running timeseries.DatetimeIndex.time_timeseries_is_month_start                                                                                                        432±3μs\r\n    [ 80.12%] ··· Running timeseries.DatetimeIndex.time_timestamp_tzinfo_cons                                                                                                         10.4±0.3μs\r\n    [ 80.42%] ··· Running timeseries.DatetimeIndex.time_unique                                                                                                                         120±0.9μs\r\n    [ 80.72%] ··· Running timeseries.Iteration.time_iter_datetimeindex                                                                                                                   653±4ms\r\n    [ 81.02%] ··· Running timeseries.Iteration.time_iter_datetimeindex_preexit                                                                                                        11.9±0.1ms\r\n    [ 81.33%] ··· Running timeseries.Iteration.time_iter_periodindex                                                                                                                       1.94s\r\n    [ 81.63%] ··· Running timeseries.Iteration.time_iter_periodindex_preexit                                                                                                          20.5±0.4ms\r\n    [ 81.93%] ··· Running timeseries.Offsets.time_custom_bday_apply                                                                                                                     26.2±2μs\r\n    [ 82.23%] ··· Running timeseries.Offsets.time_custom_bday_apply_dt64                                                                                                                27.8±1μs\r\n    [ 82.53%] ··· Running timeseries.Offsets.time_custom_bday_cal_decr                                                                                                                40.3±0.9μs\r\n    [ 82.83%] ··· Running timeseries.Offsets.time_custom_bday_cal_incr                                                                                                                  35.4±2μs\r\n    [ 83.13%] ··· Running timeseries.Offsets.time_custom_bday_cal_incr_n                                                                                                                35.2±1μs\r\n    [ 83.43%] ··· Running timeseries.Offsets.time_custom_bday_cal_incr_neg_n                                                                                                          39.8±0.8μs\r\n    [ 83.73%] ··· Running timeseries.Offsets.time_custom_bday_decr                                                                                                                    39.2±0.7μs\r\n    [ 84.04%] ··· Running timeseries.Offsets.time_custom_bday_incr                                                                                                                    27.8±0.9μs\r\n    [ 84.34%] ··· Running timeseries.Offsets.time_custom_bmonthbegin_decr_n                                                                                                              149±6μs\r\n    [ 84.64%] ··· Running timeseries.Offsets.time_custom_bmonthbegin_incr_n                                                                                                              171±8μs\r\n    [ 84.94%] ··· Running timeseries.Offsets.time_custom_bmonthend_decr_n                                                                                                                186±2μs\r\n    [ 85.24%] ··· Running timeseries.Offsets.time_custom_bmonthend_incr                                                                                                                 166±10μs\r\n    [ 85.54%] ··· Running timeseries.Offsets.time_custom_bmonthend_incr_n                                                                                                                167±3μs\r\n    [ 85.84%] ··· Running timeseries.Offsets.time_timeseries_day_apply                                                                                                                28.6±0.4μs\r\n    [ 86.14%] ··· Running timeseries.Offsets.time_timeseries_day_incr                                                                                                                   33.0±1μs\r\n    [ 86.45%] ··· Running timeseries.Offsets.time_timeseries_year_apply                                                                                                               12.1±0.4μs\r\n    [ 86.75%] ··· Running timeseries.Offsets.time_timeseries_year_incr                                                                                                                  14.8±1μs\r\n    [ 87.05%] ··· Running timeseries.ResampleDataFrame.time_max_numpy                                                                                                                2.26±0.06ms\r\n    [ 87.35%] ··· Running timeseries.ResampleDataFrame.time_max_string                                                                                                                2.48±0.1ms\r\n    [ 87.65%] ··· Running timeseries.ResampleDataFrame.time_mean_numpy                                                                                                               2.22±0.04ms\r\n    [ 87.95%] ··· Running timeseries.ResampleDataFrame.time_mean_string                                                                                                               2.03±0.1ms\r\n    [ 88.25%] ··· Running timeseries.ResampleDataFrame.time_min_numpy                                                                                                                2.54±0.05ms\r\n    [ 88.55%] ··· Running timeseries.ResampleDataFrame.time_min_string                                                                                                                2.41±0.2ms\r\n    [ 88.86%] ··· Running timeseries.ResampleSeries.time_1min_5min_mean                                                                                                              1.05±0.02ms\r\n    [ 89.16%] ··· Running timeseries.ResampleSeries.time_1min_5min_ohlc                                                                                                              1.09±0.01ms\r\n    [ 89.46%] ··· Running timeseries.ResampleSeries.time_period_downsample_mean                                                                                                       11.3±0.1ms\r\n    [ 89.76%] ··· Running timeseries.ResampleSeries.time_resample_datetime64                                                                                                         1.69±0.07ms\r\n    [ 90.06%] ··· Running timeseries.ResampleSeries.time_timestamp_downsample_mean                                                                                                    4.97±0.2ms\r\n    [ 90.36%] ··· Running timeseries.SemiMonthOffset.time_begin_apply                                                                                                                   59.6±2μs\r\n    [ 90.66%] ··· Running timeseries.SemiMonthOffset.time_begin_apply_index                                                                                                             526±20ms\r\n    [ 90.96%] ··· Running timeseries.SemiMonthOffset.time_begin_decr                                                                                                                    68.3±3μs\r\n    [ 91.27%] ··· Running timeseries.SemiMonthOffset.time_begin_decr_n                                                                                                                64.0±0.5μs\r\n    [ 91.57%] ··· Running timeseries.SemiMonthOffset.time_begin_decr_rng                                                                                                                 465±3ms\r\n    [ 91.87%] ··· Running timeseries.SemiMonthOffset.time_begin_incr                                                                                                                    60.6±3μs\r\n    [ 92.17%] ··· Running timeseries.SemiMonthOffset.time_begin_incr_n                                                                                                                  67.7±1μs\r\n    [ 92.47%] ··· Running timeseries.SemiMonthOffset.time_begin_incr_rng                                                                                                                 508±4ms\r\n    [ 92.77%] ··· Running timeseries.SemiMonthOffset.time_end_apply                                                                                                                     52.2±1μs\r\n    [ 93.07%] ··· Running timeseries.SemiMonthOffset.time_end_apply_index                                                                                                                513±9ms\r\n    [ 93.37%] ··· Running timeseries.SemiMonthOffset.time_end_decr                                                                                                                      63.9±1μs\r\n    [ 93.67%] ··· Running timeseries.SemiMonthOffset.time_end_decr_n                                                                                                                    71.6±4μs\r\n    [ 93.98%] ··· Running timeseries.SemiMonthOffset.time_end_decr_rng                                                                                                                  504±10ms\r\n    [ 94.28%] ··· Running timeseries.SemiMonthOffset.time_end_incr                                                                                                                      64.0±2μs\r\n    [ 94.58%] ··· Running timeseries.SemiMonthOffset.time_end_incr_n                                                                                                                    67.0±3μs\r\n    [ 94.88%] ··· Running timeseries.SemiMonthOffset.time_end_incr_rng                                                                                                                   496±5ms\r\n    [ 95.18%] ··· Running timeseries.SeriesArithmetic.time_add_offset_delta                                                                                                           3.64±0.2ms\r\n    [ 95.48%] ··· Running timeseries.SeriesArithmetic.time_add_offset_fast                                                                                                            8.91±0.2ms\r\n    [ 95.78%] ··· Running timeseries.SeriesArithmetic.time_add_offset_slow                                                                                                               468±5ms\r\n    [ 96.08%] ··· Running timeseries.TimeDatetimeConverter.time_convert                                                                                                              4.97±0.09ms\r\n    [ 96.39%] ··· Running timeseries.TimeSeries.time_add_irregular                                                                                                                    10.5±0.1ms\r\n    [ 96.69%] ··· Running timeseries.TimeSeries.time_large_lookup_value                                                                                                              2.07±0.02ms\r\n    [ 96.99%] ··· Running timeseries.TimeSeries.time_sort_index_monotonic                                                                                                               64.8±1μs\r\n    [ 97.29%] ··· Running timeseries.TimeSeries.time_sort_index_non_monotonic                                                                                                         9.15±0.1ms\r\n    [ 97.59%] ··· Running timeseries.TimeSeries.time_timeseries_slice_minutely                                                                                                        63.7±0.2μs\r\n    [ 97.89%] ··· Running timeseries.ToDatetime.time_format_YYYYMMDD                                                                                                                 5.04±0.01ms\r\n    [ 98.19%] ··· Running timeseries.ToDatetime.time_format_exact                                                                                                                        513±3ms\r\n    [ 98.49%] ··· Running timeseries.ToDatetime.time_format_no_exact                                                                                                                     564±6ms\r\n    [ 98.80%] ··· Running timeseries.ToDatetime.time_iso8601                                                                                                                         4.00±0.07ms\r\n    [ 99.10%] ··· Running timeseries.ToDatetime.time_iso8601_format                                                                                                                  4.05±0.04ms\r\n    [ 99.40%] ··· Running timeseries.ToDatetime.time_iso8601_format_no_sep                                                                                                            4.46±0.2ms\r\n    [ 99.70%] ··· Running timeseries.ToDatetime.time_iso8601_nosep                                                                                                                    3.97±0.1ms\r\n    [100.00%] ··· Running timeseries.ToDatetime.time_iso8601_tz_spaceformat                                                                                                              202±2ms       before           after         ratio\r\n         [f68bf254]       [e369c1fc]\r\n    +         202±2ms          223±5ms     1.10  timeseries.ToDatetime.time_iso8601_tz_spaceformat\r\n    -       390±0.3ms          354±3ms     0.91  indexing.StringIndexing.time_get_value\r\n    -      10.4±0.3μs         9.41±0μs     0.90  timeseries.DatetimeIndex.time_timestamp_tzinfo_cons\r\n    -        67.0±3μs         60.3±1μs     0.90  timeseries.SemiMonthOffset.time_end_incr_n\r\n    -        475±10μs          423±5μs     0.89  indexing.Int64Indexing.time_getitem_list_like\r\n    -     2.54±0.05ms      2.23±0.04ms     0.88  timeseries.ResampleDataFrame.time_min_numpy\r\n    -        67.7±1μs       59.3±0.9μs     0.88  timeseries.SemiMonthOffset.time_begin_incr_n\r\n    -      39.8±0.8μs       34.3±0.4μs     0.86  timeseries.Offsets.time_custom_bday_cal_incr_neg_n\r\n    -     2.22±0.04ms      1.91±0.02ms     0.86  timeseries.ResampleDataFrame.time_mean_numpy\r\n    -        59.6±2μs       51.4±0.5μs     0.86  timeseries.SemiMonthOffset.time_begin_apply\r\n    -        26.2±2μs       22.5±0.2μs     0.86  timeseries.Offsets.time_custom_bday_apply\r\n    -        219±10μs          188±2μs     0.86  indexing.DataFrameIndexing.time_iloc_dups\r\n    -       120±0.9μs        103±0.1μs     0.86  timeseries.DatetimeIndex.time_unique\r\n    -      39.2±0.7μs       33.4±0.4μs     0.85  timeseries.Offsets.time_custom_bday_decr\r\n    -        35.2±1μs       29.9±0.5μs     0.85  timeseries.Offsets.time_custom_bday_cal_incr_n\r\n    -         564±6ms          479±6ms     0.85  timeseries.ToDatetime.time_format_no_exact\r\n    -        454±20μs          355±3μs     0.78  indexing.Int64Indexing.time_loc_list_like\r\n    -         185±3ms       74.8±0.4ms     0.40  reindex.Reindexing.time_reindex_multiindex\r\n    \r\n    SOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343655983",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343655983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343655983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY1NTk4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T10:44:14Z",
    "updated_at": "2017-11-11T10:44:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "your new asv did not appear to run"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343662859",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343662859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343662859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY2Mjg1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T12:55:31Z",
    "updated_at": "2017-11-11T12:55:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "you don't need to post the entire run, just the changed benches."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343663140",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343663140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343663140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY2MzE0MA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-11T13:00:07Z",
    "updated_at": "2017-11-11T13:00:25Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=h1) Report\n> Merging [#18225](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/f68bf254a5a9503bbaef64e23bd53cd85527d20e?src=pr&el=desc) will **decrease** coverage by `0.04%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18225/graphs/tree.svg?src=pr&token=eZ4WkYLtcO&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18225      +/-   ##\n==========================================\n- Coverage   91.42%   91.38%   -0.05%     \n==========================================\n  Files         163      163              \n  Lines       50068    50065       -3     \n==========================================\n- Hits        45776    45753      -23     \n- Misses       4292     4312      +20\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.19% <100%> (-0.03%)` | :arrow_down: |\n| #single | `40.35% <0%> (-0.06%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/timedeltas.py](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy90aW1lZGVsdGFzLnB5) | `91.12% <100%> (-0.06%)` | :arrow_down: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `63.38% <0%> (-1.82%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.8% <0%> (-0.1%)` | :arrow_down: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.48% <0%> (+0.09%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=footer). Last update [f68bf25...3c5d782](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343663144",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343663144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343663144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY2MzE0NA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-11T13:00:15Z",
    "updated_at": "2017-11-12T16:24:19Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@fbe15d0`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18225/graphs/tree.svg?width=650&height=150&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master   #18225   +/-   ##\n=========================================\n  Coverage          ?   91.38%           \n=========================================\n  Files             ?      163           \n  Lines             ?    50065           \n  Branches          ?        0           \n=========================================\n  Hits              ?    45753           \n  Misses            ?     4312           \n  Partials          ?        0\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.19% <100%> (?)` | |\n| #single | `40.35% <0%> (?)` | |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/timedeltas.py](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy90aW1lZGVsdGFzLnB5) | `91.12% <100%> (ø)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=footer). Last update [fbe15d0...08a13fb](https://codecov.io/gh/pandas-dev/pandas/pull/18225?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343671338",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343671338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343671338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY3MTMzOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T15:07:14Z",
    "updated_at": "2017-11-11T16:48:58Z",
    "author_association": "MEMBER",
    "body": "Changes made. See below for sample benchmark run. \r\n\r\nAs far as the increase, on some runs microseconds failed, while other runs nanoseconds failed. There was always one or the other. I think it has to do with some overhead in moving the computations out of timedeltas.pyx into np_datetimes.c but will report back with what I find\r\n\r\n    before        after         ratio\r\n    +188±1ns       210±2ns       1.12  timedelta.TimedeltaProperties.time_timedelta_microseconds\r\n    -658±4ms      1.65±0.05ms    0.00  timedelta.DatetimeAccessor.time_timedelta_dt_accessor_microseconds\r\n    -695±4ms      1.63±0.05ms    0.00  timedelta.DatetimeAccessor.time_timedelta_dt_accessor_seconds\r\n    -684±4ms      1.59±0.01ms    0.00  timedelta.DatetimeAccessor.time_timedelta_dt_accessor_nanoseconds\r\n    -681±4ms      1.57±0.02ms    0.00  timedelta.DatetimeAccessor.time_timedelta_dt_accessor_days"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343676086",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343676086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343676086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY3NjA4Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T16:22:02Z",
    "updated_at": "2017-11-11T16:22:02Z",
    "author_association": "MEMBER",
    "body": "This is nice.  Is the datetime.c bit the same as the numpy version?  Can any of it be `cdef extern`ed from numpy instead of implemented directly?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343677693",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343677693",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343677693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzY3NzY5Mw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-11T16:47:23Z",
    "updated_at": "2017-11-11T16:47:23Z",
    "author_association": "MEMBER",
    "body": "I didn't see any method for converting a timedelta to a timedeltastruct in  [numpy's datetime.c](https://github.com/numpy/numpy/blob/68fd82271b9ea5a9e50d4e761061dfcca851382a/numpy/core/src/multiarray/datetime.c#L673)\r\n\r\nFWIW I noticed some of the Timedelta properties defined in timedelta.pyx (namely days, seconds and microseconds) are superfluous as they already defined in [Cython's source](https://github.com/python/cpython/blob/191e993365ac3206f46132dcf46236471ec54bfa/Lib/datetime.py#L491). Do you think it's worth removing them from pandas as part of this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343747876",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343747876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343747876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc0Nzg3Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T16:12:53Z",
    "updated_at": "2017-11-12T16:12:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd \r\n\r\nthis looks good, just rebase on master.\r\n\r\n> FWIW I noticed some of the Timedelta properties defined in timedelta.pyx (namely days, seconds and microseconds) are superfluous as they already defined in Cython's source. Do you think it's worth removing them from pandas as part of this?\r\n\r\nI *think* you could do this (in a followup). The reason to leave them is that we have a consistent doc-string, and then future readers are not wondering where the 'missing' methods are. It might be a slight perf boost (though not as much as @jbrockmendel got with microseconds on Timestamp). \r\n\r\nSo if you want to attack that would be great. (but in a followup)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343748785",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343748785",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343748785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc0ODc4NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T16:26:04Z",
    "updated_at": "2017-11-12T16:26:04Z",
    "author_association": "MEMBER",
    "body": "@jreback rebased"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343755123",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-343755123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 343755123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc1NTEyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T18:02:22Z",
    "updated_at": "2017-11-12T18:02:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @WillAyd very nice. keep em coming!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344648160",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-344648160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 344648160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDY0ODE2MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T16:29:13Z",
    "updated_at": "2017-11-15T16:29:13Z",
    "author_association": "MEMBER",
    "body": "np_datetime.c has a `can_cast_timedelta64_units` that is apparently never used.  I don't see it in the diff for this PR.  Has it always been there?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344755048",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18225#issuecomment-344755048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18225",
    "id": 344755048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDc1NTA0OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T22:46:43Z",
    "updated_at": "2017-11-15T22:46:43Z",
    "author_association": "MEMBER",
    "body": "I see it dating back to the start of 2012 when I believe the file was created in 098ce734"
  }
]
