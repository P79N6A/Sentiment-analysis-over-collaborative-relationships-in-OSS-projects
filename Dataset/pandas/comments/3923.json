[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19514870",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19514870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19514870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTE0ODcw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T16:49:24Z",
    "updated_at": "2013-06-16T16:49:24Z",
    "author_association": "MEMBER",
    "body": "fyi it's not entirely true that you must \"manually dispatch\" in the \"f_float64\" \"f_int32\" etc way you can use fused types which do the dispatch for you, but they can be very difficult to debug and kind of awkward to use.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19518706",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19518706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19518706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTE4NzA2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T20:40:43Z",
    "updated_at": "2013-06-16T20:50:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I propose using the [example from the cython docs](http://docs.cython.org/src/quickstart/cythonize.html):\n\n```\ndef f(x):\n    return x**2-x\n\ndef integrate_f(a, b, N):\n    s = 0\n    dx = (b-a)/N\n    for i in range(int(N)):  # annoyingly int seems to be required here:  #3928\n        s += f(a+i*dx)\n    return s * dx\n```\n\nWe want to apply that to DataFrame:\n\n```\ndf = pd.DataFrame({'a': randn(100), 'b': randn(100), 'N': randint(10, 100, (100))})\n    N         a         b\n0  93 -0.017216  0.329569\n1  84  0.354537  0.314897\n2  39  2.948030 -0.263055\n3  57  0.751853  1.753032\n4  42 -0.378684  2.685732\n```\n\n```\ndf.apply(lambda x: integrate_f(x['a'], x['b'], x['N']), axis=1).head()\n0   -0.041781\n1    0.008825\n2   -4.461920\n3    0.386990\n4    2.797359\ndtype: float64\n```\n\nIt has ints and float columns, so may require the blocks trick...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19520053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19520053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19520053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIwMDUz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T22:07:51Z",
    "updated_at": "2013-06-16T22:07:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is a good example of using cython (I can put something together for this) - it shows a big speed improvement, but I'm not sure if it's a good example for leveraging numpy arrays.... ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19520111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19520111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19520111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIwMTEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T22:12:53Z",
    "updated_at": "2013-06-16T22:12:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "ideally prob have an extended example of solving this problem using apply\nthen maybe using a function passed to cython (which is a cython function) which operates on and returns ndarrays (which are then wrapped in frames) \n\nkind of like the cython ndarray example \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19520199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19520199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19520199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIwMTk5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T22:18:53Z",
    "updated_at": "2013-06-16T22:18:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "So essentially do the apply yourself (all in cython)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19520257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19520257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19520257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIwMjU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T22:24:08Z",
    "updated_at": "2013-06-16T22:24:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that would be a nice non-trivial example\nmaybe pass in the floats, ints\nsupply the integrate and f as cython functions snd return the final ndarray\nand provide a wrapping frame\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19520691",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19520691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19520691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIwNjkx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T22:54:39Z",
    "updated_at": "2013-06-16T22:54:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Created working cython f and integrate f (plain and typed), working great.\n\nAny ideas why this might compile but not import (is this the kind of thing you meant?):\n\n```\nimport numpy as np\ncimport numpy as np\n\ncpdef apply_integrate_f(np.ndarray col_a, np.ndarray col_b, np.ndarray col_N):\n    assert (col_a.dtype == np.float and col_b.dtype == np.float and col_N.dtype == np.int)\n    assert (len(col_a) == len(col_b) == len(col_N))\n    cdef np.ndarray res = np.zeros(len(col_a), dtype=np.float)\n    # cdef np.ndarray dx = col_a * col_b / col_N\n    for i in range(len(col_a)):\n        res[i] = integrate_f_typed(col_a[i], col_b[i], col_N[i])\n    return res\n```\n\nIt comes up with a lovely message part way though the stacktrace :)\n\n```\n# XXX -- this is a Vile HACK!\n```\n\n```\n...lots like this\nUsers/234BroadWalk/.pyxbld/temp.macosx-10.6-intel-2.7/pyrex/integrate.c:4069: error: ‘PyUFuncObject’ undeclared (first use in this function)\nlipo: can't figure out the architecture type of: /var/folders/hc/qwq7bjd535xgr4_vl7kjkxsw0000gp/T//cc3pLpao.out\n---------------------------------------------------------------------------\n... can post all if helpful?\nImportError: Building module integrate failed: [\"CompileError: command 'gcc-4.2' failed with exit status 1\\n\"]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19520782",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19520782",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19520782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIwNzgy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T23:03:08Z",
    "updated_at": "2013-06-16T23:03:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "never seen that one\ncan u show integrated_f_typed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19521051",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19521051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19521051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIxMDUx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T23:22:02Z",
    "updated_at": "2013-06-16T23:22:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\ncdef double f_typed(double x) except? -2:\n    return x**2-x\n\ncpdef integrate_f_typed(double a, double b, int N):\n    cdef int i\n    cdef double s, dx\n    s = 0\n    dx = (b-a)/N\n    for i in range(N):\n        s += f_typed(a+i*dx)\n    return s * dx\n```\n\nThese are direct copies from the cython example. :s\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19521069",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19521069",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19521069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIxMDY5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T23:23:28Z",
    "updated_at": "2013-06-16T23:23:28Z",
    "author_association": "MEMBER",
    "body": "@hayd is that error the first one out of the compiler?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19521133",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19521133",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19521133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIxMTMz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T23:28:39Z",
    "updated_at": "2013-06-16T23:28:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I compile it just like this\n\n```\n[~/pandas]$ cython integrate.pyx\n[~/pandas]$\n```\n\nand import in ipython like this:\n\n```\nIn [3]: import pyximport; pyximport.install()\nOut[3]: (None, <pyximport.pyximport.PyxImporter at 0x1042a5dd0>)\n\nIn [4]: import integrate\n# ImportError: Building module integrate failed: [\"CompileError: command 'gcc-4.2' failed with exit status 1\\n\"]\n```\n\n_This method works for the other functions (when apply_integrate_f is not in the pyx file)..._\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19521211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19521211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19521211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIxMjEx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T23:34:20Z",
    "updated_at": "2013-06-16T23:34:20Z",
    "author_association": "MEMBER",
    "body": "why not just paste into ipython\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19521465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19521465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19521465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIxNDY1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-16T23:54:33Z",
    "updated_at": "2013-06-16T23:54:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud ? I think I'm missing something fundamental here.\n\nI just tried using `%%cython_inline` but I get a CompilerCrash, from `AssertionError: Not yet supporting any cimports/includes from string code snippets` on the cimport numpy line. :S\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19521600",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19521600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19521600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIxNjAw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:05:41Z",
    "updated_at": "2013-06-17T00:05:41Z",
    "author_association": "MEMBER",
    "body": "oh i used `%%cython` and then copypasted each function separately\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19521889",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19521889",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19521889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIxODg5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:27:08Z",
    "updated_at": "2013-06-17T00:32:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Somewhat confusingly this worked first time...!! :)  So, I guess nothing was wrong with the functions!\n\n```\nIn [13]: %timeit df.apply(lambda x: integrate_f(x['a'], x['b'], x['N']), axis=1)  # python\n10 loops, best of 3: 37.6 ms per loop\n\nIn [14]: %timeit df.apply(lambda x: integrate_f_plain(x['a'], x['b'], x['N']), axis=1)  # cythonised\n100 loops, best of 3: 11.8 ms per loop\n\nIn [15]: %timeit df.apply(lambda x: integrate_f_typed(x['a'], x['b'], x['N']), axis=1) # cythonised with type\n100 loops, best of 3: 3.57 ms per loop\n\nIn [16]: %timeit apply_integrate_f(df['a'], df['b'], df['N']) # cythonised apply\n1000 loops, best of 3: 1.2 ms per loop\n```\n\nI think this probably makes quite an ok example, it doesn't make use of a ndarray (only 1D) but nonetheless I think it's not too bad. Definitely shows the benefits!\n\nOh... maybe I can grab the float blocks using `.blocks` will see if that makes it even faster.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19521965",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19521965",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19521965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIxOTY1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:32:38Z",
    "updated_at": "2013-06-17T00:43:51Z",
    "author_association": "MEMBER",
    "body": "this\n\n``` cython\ncpdef apply_integrate_f(np.ndarray col_a, np.ndarray col_b, np.ndarray col_N):\n    assert (col_a.dtype == np.float and col_b.dtype == np.float and col_N.dtype == np.int)\n    assert (len(col_a) == len(col_b) == len(col_N))\n    cdef np.ndarray res = np.zeros(len(col_a), dtype=np.float)\n    # cdef np.ndarray dx = col_a * col_b / col_N\n    for i in range(len(col_a)):\n        res[i] = integrate_f_typed(col_a[i], col_b[i], col_N[i])\n    return res\n```\n\ncould be changed to\n\n``` cython\ncimport cython\n@cython.boundscheck(False)\n@cython.wraparound(False)\ncpdef np.ndarray[double] apply_integrate_f(np.ndarray[double] col_a, np.ndarray[double] col_b, np.ndarray[Py_ssize_t] col_N):\n    cdef Py_ssize_t i, n = len(col_N)\n    assert len(col_a) == len(col_b) == n  # only because of above decorators\n    cdef np.ndarray[double] res = np.empty(n)  # does float by default\n    for i in range(n):\n        res[i] = integrate_f_typed(col_a[i], col_b[i], col_N[i])\n    return res\n```\n\nfor some more speedup\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyMTIw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:42:30Z",
    "updated_at": "2013-06-17T00:42:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wowza, that looking swish! For me though: `Cdef functions/classes cannot take arbitrary decorators.` :s\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522135",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522135",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyMTM1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:43:42Z",
    "updated_at": "2013-06-17T00:43:42Z",
    "author_association": "MEMBER",
    "body": "u need to do `cimport cython` sorry i will correct.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522144",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyMTQ0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:44:38Z",
    "updated_at": "2013-06-17T00:44:38Z",
    "author_association": "MEMBER",
    "body": "fyi make sure u give the loop variable a type if it makes sense since i think cython will use an `object` if u don't\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522180",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyMTgw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:47:10Z",
    "updated_at": "2013-06-17T00:47:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "ah of course! It's getting quite late, my brain has stopped working.\n\nWhat's the `Py_ssize_t i` stuff about?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522217",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyMjE3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:49:59Z",
    "updated_at": "2013-06-17T00:49:59Z",
    "author_association": "MEMBER",
    "body": "[python indexing type](http://www.python.org/dev/peps/pep-0353/)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522247",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522247",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyMjQ3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:52:13Z",
    "updated_at": "2013-06-17T00:52:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow!\n\n```\nIn [35]: %timeit apply_integrate_f_wrap(df['a'], df['b'], df['N'])\n1000 loops, best of 3: 354 us per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyMjU4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T00:52:54Z",
    "updated_at": "2013-06-17T00:52:54Z",
    "author_association": "MEMBER",
    "body": "u might even be able to squeeze even more out if u use cython memoryviews\n\n``` cython\ncimport cython\n@cython.boundscheck(False)\n@cython.wraparound(False)\ncpdef np.ndarray[double] apply_integrate_f(double[:] col_a, double[:] col_b, Py_ssize_t[:] col_N):\n    cdef Py_ssize_t i, n = len(col_N)\n    assert len(col_a) == len(col_b) == n  # only because of above decorators\n    cdef np.ndarray[double] res = np.empty(n)  # does float by default\n    for i in range(n):\n        res[i] = integrate_f_typed(col_a[i], col_b[i], col_N[i])\n    return res\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522522",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyNTIy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T01:10:21Z",
    "updated_at": "2013-06-17T01:10:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Was wondering if we could have had an example using the float block, but I can only make it twice as slow as yours...\n\n```\napply_integrate_f_wrap_blocks(df.blocks['float64'].values, df['N'])\n```\n\n```\ncimport cython\n@cython.boundscheck(False)\n@cython.wraparound(False)\ncpdef np.ndarray[double] apply_integrate_f_wrap_blocks(np.ndarray[double, ndim=2] cols_ab, np.ndarray[Py_ssize_t] col_N):\n    cdef Py_ssize_t i, n = len(col_N)\n    # assert shape\n    assert len(cols_ab) == n  # only because of above decorators\n    cdef np.ndarray[double] res = np.empty(n)  # does float by default\n    for i in range(n):\n        res[i] = integrate_f_typed(cols_ab[i][0], cols_ab[i][1], col_N[i])\n    return res\n```\n\nBarking up the wrong tree here?\n\n(I think already this looking like it's going to be a nice thing to write up!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19522562",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19522562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19522562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTIyNTYy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T01:12:38Z",
    "updated_at": "2013-06-17T01:14:25Z",
    "author_association": "MEMBER",
    "body": "i suppose. but u could also just do\n\n``` python\napply_integrate_f(*df.blocks['float64'].values.T, col_N=df['N'])\n```\n\na bit terse, but it gets the job done.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19538016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19538016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19538016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTM4MDE2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T10:53:43Z",
    "updated_at": "2013-06-17T11:25:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there a neat way to get the stdout from things like prun and timeit into the docs:\n\n```\n.. ipython:: python\n   :verbatim\n\n   %timeit df.apply(lambda x: integrate_f(x['a'], x['b'], x['c']), axis=1)\n```\n\nseems to only capture printed things... (i.e. nothing in this case)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19567145",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19567145",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19567145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTY3MTQ1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T19:06:03Z",
    "updated_at": "2013-06-20T00:17:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "very WIP, but here's a initial draft (see PR)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19568430",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19568430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19568430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTY4NDMw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T19:26:46Z",
    "updated_at": "2013-06-17T19:26:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud Thanks for catching that, now I can see all the other errors... :s\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19568543",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19568543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19568543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTY4NTQz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-17T19:28:59Z",
    "updated_at": "2013-06-17T19:28:59Z",
    "author_association": "MEMBER",
    "body": "no prob. doc builds are finnicky...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19722509",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3923#issuecomment-19722509",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3923",
    "id": 19722509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzIyNTA5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-19T23:40:06Z",
    "updated_at": "2013-06-19T23:40:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud it somehow came together magically at the end, it is insanely sensitive to spacing.. et al. Thanks for your help and being so patient!\n"
  }
]
