[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352319759",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18815#issuecomment-352319759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18815",
    "id": 352319759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjMxOTc1OQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-12-18T03:53:26Z",
    "updated_at": "2017-12-19T05:19:55Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18815?src=pr&el=h1) Report\n> Merging [#18815](https://codecov.io/gh/pandas-dev/pandas/pull/18815?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/b6a7cc9d4686f62596de031c9cc4a1d62d12c52e?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18815/graphs/tree.svg?height=150&width=650&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/18815?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18815      +/-   ##\n==========================================\n- Coverage   91.64%   91.62%   -0.02%     \n==========================================\n  Files         154      154              \n  Lines       51408    51408              \n==========================================\n- Hits        47113    47104       -9     \n- Misses       4295     4304       +9\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.49% <ø> (ø)` | :arrow_up: |\n| #single | `40.83% <ø> (-0.12%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18815?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18815/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18815/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.68% <0%> (-0.11%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18815?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18815?src=pr&el=footer). Last update [b6a7cc9...e8eda6a](https://codecov.io/gh/pandas-dev/pandas/pull/18815?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352411171",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18815#issuecomment-352411171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18815",
    "id": 352411171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjQxMTE3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T12:22:34Z",
    "updated_at": "2017-12-18T12:22:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 on this, does asv supported nested benchmarks, e.g. can we create a ``benchmarks/io/json.....`` and so on and have it work?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352632699",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18815#issuecomment-352632699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18815",
    "id": 352632699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjYzMjY5OQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T03:54:28Z",
    "updated_at": "2017-12-19T03:54:28Z",
    "author_association": "MEMBER",
    "body": "Yup. Created a new `io` folder with `csv.py` and `json.py`\r\n\r\n```\r\nasv dev -b ^io[^_]\r\n· Discovering benchmarks\r\n· Running 31 total benchmarks (1 commits * 1 environments * 31 benchmarks)\r\n[  0.00%] ·· Building for existing-py_home_matt_anaconda_envs_pandas_dev_bin_python\r\n[  0.00%] ·· Benchmarking existing-py_home_matt_anaconda_envs_pandas_dev_bin_python\r\n[  3.23%] ··· Running io.csv.ReadCSVCategorical.time_convert_direct                                          98.1ms\r\n[  6.45%] ··· Running io.csv.ReadCSVCategorical.time_convert_post                                             143ms\r\n[  9.68%] ··· Running io.csv.ReadCSVComment.time_comment                                                     55.6ms\r\n[ 12.90%] ··· Running io.csv.ReadCSVDInferDatetimeFormat.time_read_csv                                           ok\r\n[ 12.90%] ···· \r\n               ======================= ======== ========= ========\r\n               --                                 format          \r\n               ----------------------- ---------------------------\r\n                infer_datetime_format   custom   iso8601    ymd   \r\n               ======================= ======== ========= ========\r\n                         True           22.9ms    4.62ms   4.83ms \r\n                        False           615ms     3.46ms   3.22ms \r\n               ======================= ======== ========= ========\r\n\r\n[ 16.13%] ··· Running io.csv.ReadCSVFloatPrecision.time_read_csv                                                 ok\r\n[ 16.13%] ···· \r\n               ===== ========== ========== ================ ========== ========== ================\r\n               --                              decimal / float_precision                          \r\n               ----- -----------------------------------------------------------------------------\r\n                sep   . / None   . / high   . / round_trip   _ / None   _ / high   _ / round_trip \r\n               ===== ========== ========== ================ ========== ========== ================\r\n                 ,     3.97ms     4.01ms        5.18ms        4.20ms     4.17ms        4.14ms     \r\n                 ;     4.08ms     3.75ms        5.27ms        4.12ms     4.09ms        4.24ms     \r\n               ===== ========== ========== ================ ========== ========== ================\r\n\r\n[ 19.35%] ··· Running io.csv.ReadCSVFloatPrecision.time_read_csv_python_engine                                   ok\r\n[ 19.35%] ···· \r\n               ===== ========== ========== ================ ========== ========== ================\r\n               --                              decimal / float_precision                          \r\n               ----- -----------------------------------------------------------------------------\r\n                sep   . / None   . / high   . / round_trip   _ / None   _ / high   _ / round_trip \r\n               ===== ========== ========== ================ ========== ========== ================\r\n                 ,     7.93ms     7.76ms        7.70ms        6.14ms     6.21ms        6.21ms     \r\n                 ;     7.69ms     7.80ms        7.72ms        6.16ms     6.36ms        6.23ms     \r\n               ===== ========== ========== ================ ========== ========== ================\r\n\r\n[ 22.58%] ··· Running io.csv.ReadCSVParseDates.time_baseline                                                 2.91ms\r\n[ 25.81%] ··· Running io.csv.ReadCSVParseDates.time_multiple_date                                            2.91ms\r\n[ 29.03%] ··· Running io.csv.ReadCSVSkipRows.time_skipprows                                                      ok\r\n[ 29.03%] ···· \r\n               ========== ========\r\n                skiprows          \r\n               ---------- --------\r\n                  None     46.1ms \r\n                 10000     30.7ms \r\n               ========== ========\r\n\r\n[ 32.26%] ··· Running io.csv.ReadCSVThousands.time_thousands                                                     ok\r\n[ 32.26%] ···· \r\n               ===== ======== ========\r\n               --        thousands    \r\n               ----- -----------------\r\n                sep    None      ,    \r\n               ===== ======== ========\r\n                 ,    38.3ms   35.9ms \r\n                 |    39.1ms   38.6ms \r\n               ===== ======== ========\r\n\r\n[ 35.48%] ··· Running io.csv.ReadUint64Integers.time_read_uint64                                             8.76ms\r\n[ 38.71%] ··· Running io.csv.ReadUint64Integers.time_read_uint64_na_values                                   13.1ms\r\n[ 41.94%] ··· Running io.csv.ReadUint64Integers.time_read_uint64_neg_values                                  13.1ms\r\n[ 45.16%] ··· Running io.csv.S3.time_read_csv_10_rows                                                            ok\r\n[ 45.16%] ···· \r\n               ============= ======== =======\r\n               --                 engine     \r\n               ------------- ----------------\r\n                compression   python     c   \r\n               ============= ======== =======\r\n                    None      6.15s    6.53s \r\n                    gzip      6.78s    6.15s \r\n                    bz2       34.0s     n/a  \r\n               ============= ======== =======\r\n\r\n[ 48.39%] ··· Running io.csv.ToCSV.time_frame                                                                    ok\r\n[ 48.39%] ···· \r\n               ======= ========\r\n                 kind          \r\n               ------- --------\r\n                 wide   107ms  \r\n                 long   190ms  \r\n                mixed   41.4ms \r\n               ======= ========\r\n\r\n[ 51.61%] ··· Running io.csv.ToCSVDatetime.time_frame_date_formatting                                        21.9ms\r\n[ 54.84%] ··· Running io.json.ReadJSON.time_read_json                                                            ok\r\n[ 54.84%] ···· \r\n               ========= ======= ==========\r\n               --              index       \r\n               --------- ------------------\r\n                 orient    int    datetime \r\n               ========= ======= ==========\r\n                 split    254ms    270ms   \r\n                 index    7.43s    7.55s   \r\n                records   610ms    618ms   \r\n               ========= ======= ==========\r\n\r\n[ 58.06%] ··· Running io.json.ReadJSONLines.peakmem_read_json_lines                                              ok\r\n[ 58.06%] ···· \r\n               ========== ======\r\n                 index          \r\n               ---------- ------\r\n                  int      192M \r\n                datetime   192M \r\n               ========== ======\r\n\r\n[ 61.29%] ··· Running io.json.ReadJSONLines.peakmem_read_json_lines_concat                                       ok\r\n[ 61.29%] ···· \r\n               ========== ======\r\n                 index          \r\n               ---------- ------\r\n                  int      164M \r\n                datetime   164M \r\n               ========== ======\r\n\r\n[ 64.52%] ··· Running io.json.ReadJSONLines.time_read_json_lines                                                 ok\r\n[ 64.52%] ···· \r\n               ========== =======\r\n                 index           \r\n               ---------- -------\r\n                  int      715ms \r\n                datetime   711ms \r\n               ========== =======\r\n\r\n[ 67.74%] ··· Running io.json.ReadJSONLines.time_read_json_lines_concat                                          ok\r\n[ 67.74%] ···· \r\n               ========== =======\r\n                 index           \r\n               ---------- -------\r\n                  int      748ms \r\n                datetime   748ms \r\n               ========== =======\r\n\r\n[ 70.97%] ··· Running io.json.ToJSON.time_delta_int_tstamp                                                       ok\r\n[ 70.97%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    236ms \r\n                columns   231ms \r\n                 index    381ms \r\n               ========= =======\r\n\r\n[ 74.19%] ··· Running io.json.ToJSON.time_delta_int_tstamp_lines                                                 ok\r\n[ 74.19%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    541ms \r\n                columns   541ms \r\n                 index    539ms \r\n               ========= =======\r\n\r\n[ 77.42%] ··· Running io.json.ToJSON.time_float_int                                                              ok\r\n[ 77.42%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    220ms \r\n                columns   213ms \r\n                 index    370ms \r\n               ========= =======\r\n\r\n[ 80.65%] ··· Running io.json.ToJSON.time_float_int_lines                                                        ok\r\n[ 80.65%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    577ms \r\n                columns   569ms \r\n                 index    567ms \r\n               ========= =======\r\n\r\n[ 83.87%] ··· Running io.json.ToJSON.time_float_int_str                                                          ok\r\n[ 83.87%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    237ms \r\n                columns   214ms \r\n                 index    387ms \r\n               ========= =======\r\n\r\n[ 87.10%] ··· Running io.json.ToJSON.time_float_int_str_lines                                                    ok\r\n[ 87.10%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    595ms \r\n                columns   598ms \r\n                 index    600ms \r\n               ========= =======\r\n\r\n[ 90.32%] ··· Running io.json.ToJSON.time_floats_with_dt_index                                                   ok\r\n[ 90.32%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    181ms \r\n                columns   206ms \r\n                 index    208ms \r\n               ========= =======\r\n\r\n[ 93.55%] ··· Running io.json.ToJSON.time_floats_with_dt_index_lines                                             ok\r\n[ 93.55%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    446ms \r\n                columns   447ms \r\n                 index    444ms \r\n               ========= =======\r\n\r\n[ 96.77%] ··· Running io.json.ToJSON.time_floats_with_int_idex_lines                                             ok\r\n[ 96.77%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    439ms \r\n                columns   439ms \r\n                 index    440ms \r\n               ========= =======\r\n\r\n[100.00%] ··· Running io.json.ToJSON.time_floats_with_int_index                                                  ok\r\n[100.00%] ···· \r\n               ========= =======\r\n                 orient         \r\n               --------- -------\r\n                 split    160ms \r\n                columns   173ms \r\n                 index    183ms \r\n               ========= =======\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352723075",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18815#issuecomment-352723075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18815",
    "id": 352723075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjcyMzA3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T11:34:25Z",
    "updated_at": "2017-12-19T11:34:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @mroeschke \r\n\r\nideally would consolidate the rest of the io benchmarks in io/ "
  }
]
