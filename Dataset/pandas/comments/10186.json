[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/104296794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10186#issuecomment-104296794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10186",
    "id": 104296794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDI5Njc5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-21T14:27:28Z",
    "updated_at": "2015-05-21T14:27:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "So i would operate on both values/categories:\n\n`intersection` you should take the intersection of the categories as well\n`union` take the union of categories.\n`difference` has to take the categories of lhs\n`sym_diff` take the sym_diff of the categories (so make this a CI as well)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/104296962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10186#issuecomment-104296962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10186",
    "id": 104296962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDI5Njk2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-21T14:27:48Z",
    "updated_at": "2015-05-21T14:27:48Z",
    "author_association": "MEMBER",
    "body": "One option to consider is to (for now) only allow these operations with indexes with the same categories\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/104297862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10186#issuecomment-104297862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10186",
    "id": 104297862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDI5Nzg2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-21T14:29:52Z",
    "updated_at": "2015-05-21T14:29:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you simply call `self._create_categorical` on the rhs to coerce nicely \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/104888147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10186#issuecomment-104888147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10186",
    "id": 104888147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDg4ODE0Nw==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-23T12:21:28Z",
    "updated_at": "2015-05-23T12:27:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMO (and I think not all agree here), a `Categorical` defines a new type and is therefore similar to an `int` or a `string` (e.g. a number of type `int` can be one value of `int_min..int_max`, similar to a value in a `Categorical`, which can only be one of the `categories` in that `Categorical`). \n\nTherefore a `CategoricalIndex` should behave similar as two index of type int if the `categories` (and `ordered`) are the same and similar to one int and one string index f they have different `categories` / `ordered`.\n\nSo:\n\n``` python\n>>> pd.Index([1, 2, 3, 1, 2, 3]).intersection(pd.Index([\"2\", \"3\", \"4\", \"2\", \"3\", \"4\"]))\nIndex([], dtype='object')\n>>> pd.CategoricalIndex([1, 2, 3, 1, 2, 3]).intersection(pd.CategoricalIndex([2, 3, 4, 2, 3, 4]))\n# because the underlying categoricals have different categories [1,2,3]  and [2,3,4}\nIndex([], dtype='object') \n```\n\nSee also this:\n\n``` python\n>>> pd.Categorical([1,2,3], ordered=True) > pd.Categorical([2,3,4], ordered=True)\nTypeError: Categoricals can only be compared if 'categories' are the same\n>>> 1 > \"2\" # on py3, py2 is ...\nTypeError: unorderable types: int() > str()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/104904148",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10186#issuecomment-104904148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10186",
    "id": 104904148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDkwNDE0OA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-23T14:44:50Z",
    "updated_at": "2015-05-23T14:44:50Z",
    "author_association": "MEMBER",
    "body": "For reference, R doesn't care the order of categories and remove duplicated categories.\n\n``` r\nintersect(as.factor(c(1, 2, 3)), as.factor(c(2, 3, 4)))\n# [1] \"2\" \"3\"\nintersect(as.factor(c(1, 2, 3, 1, 2, 3)), as.factor(c(2, 3, 4, 2, 3, 4)))\n# [1] \"2\" \"3\"\n\nintersect(c(1, 2, 3, 1, 2, 3), c(2, 3, 4, 2, 3, 4))\n# [1] 2 3\n```\n\nLet me summarize current opinions and choises. If I misunderstand, please lmk:\n\n|  | Category order is identical | Category order is different |\n| :-- | :-- | :-- |\n| Categories are identical | Perform set ops against values and categories. Result of values should be identical as the normal index's result. | Ignore order and perform set ops (1), return empty(2) or raise error(3)? |\n| Categories are different | - | Ignore order and perform set ops (1), return empty(2) or raise error(3)? |\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/320535795",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10186#issuecomment-320535795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10186",
    "id": 320535795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDUzNTc5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-06T22:02:57Z",
    "updated_at": "2017-08-06T22:02:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Resurrecting this as part of my CategoricalDtype refactor. The semantics in `union_categoricals` are good for `union` I think:\r\n\r\n- ordered must match\r\n- when ordered, all categories must match\r\n\r\nCurrently `CategoricalIndex.union(other)` discards the `.ordered`, which isn't great.\r\n\r\n```python\r\nIn [22]: a = pd.CategoricalIndex(['a', 'b'], categories=['a', 'b', 'c'], ordered=True)\r\n\r\nIn [23]: b = pd.CategoricalIndex(['b', 'c'], categories=['a', 'b', 'c'], ordered=True)\r\n\r\nIn [24]: a.union(b).ordered\r\nOut[24]: False\r\n```\r\n\r\nI think we'll follow those rules on the categories for each of the set operations."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321883510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10186#issuecomment-321883510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10186",
    "id": 321883510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTg4MzUxMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T18:16:39Z",
    "updated_at": "2017-08-11T18:16:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, I think we can handle additional cases with `union_categories` when both are ordered.  Currently we require that categories match exactly when ordered. We could easily support\r\n\r\n- `x | y` when `x` is a strict subset of `y`: `{a < b} | {a < b < c} -> {a < b < c}`\r\n- `x | y` when `x - y` are all greater than the max(y), or less then min(y).\r\n   e.g. `{a < b < c < d} | {a < b < c} -> {a < b < c < d}`\r\n\r\nWe could even support union over categoricals with \"gaps\" like\r\n\r\n`{a < b < d < e} | {a < b < c < d < e} -> { a < b < c < d < e}`\r\n\r\nThese rules should work for intersect, difference, and symmetric difference too."
  }
]
