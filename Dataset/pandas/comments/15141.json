[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272828650",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-272828650",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 272828650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjgyODY1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T10:45:17Z",
    "updated_at": "2017-01-16T10:45:17Z",
    "author_association": "MEMBER",
    "body": "You are starting with a DatetimeIndex (so index of Timestamps), so also after grouping this will give you Timestamps. If you want periods, you can start with Periods (eg using `period_range` instead of ``date_range``). \r\nOr you can convert those Timestamps to Periods afterwards, if you want Periods:\r\n\r\n```\r\nIn [82]: df.groupby(pd.TimeGrouper('W')).mean()\r\nOut[82]: \r\n                   0         1\r\n2010-01-03  0.639762  0.376022\r\n2010-01-10  0.663659  0.543635\r\n2010-01-17  0.286419  0.395908\r\n2010-01-24  0.420077  0.470722\r\n2010-01-31  0.440236  0.473810\r\n\r\nIn [83]: df.groupby(pd.TimeGrouper('W')).mean().to_period()\r\nOut[83]: \r\n                              0         1\r\n2009-12-28/2010-01-03  0.639762  0.376022\r\n2010-01-04/2010-01-10  0.663659  0.543635\r\n2010-01-11/2010-01-17  0.286419  0.395908\r\n2010-01-18/2010-01-24  0.420077  0.470722\r\n2010-01-25/2010-01-31  0.440236  0.473810\r\n```\r\n\r\nNote that in this case `df.resample('W')` instead of `df.groupby(pd.TimeGrouper('W'))` is actually nicer IMO."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272830423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-272830423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 272830423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjgzMDQyMw==",
    "user": {
      "login": "jimbasquiat",
      "id": 19773990,
      "node_id": "MDQ6VXNlcjE5NzczOTkw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19773990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimbasquiat",
      "html_url": "https://github.com/jimbasquiat",
      "followers_url": "https://api.github.com/users/jimbasquiat/followers",
      "following_url": "https://api.github.com/users/jimbasquiat/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimbasquiat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimbasquiat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimbasquiat/subscriptions",
      "organizations_url": "https://api.github.com/users/jimbasquiat/orgs",
      "repos_url": "https://api.github.com/users/jimbasquiat/repos",
      "events_url": "https://api.github.com/users/jimbasquiat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimbasquiat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T10:53:46Z",
    "updated_at": "2017-01-16T11:02:01Z",
    "author_association": "NONE",
    "body": "OK thanks!  If I do` df.groupby(pd.TimeGrouper('W')).mean().to_period()` I receive  `PeriodIndex(['2009-12-28/2010-01-03', '2010-01-04/2010-01-10',\r\n             '2010-01-11/2010-01-17', '2010-01-18/2010-01-24',\r\n             '2010-01-25/2010-01-31'],\r\n            dtype='period[W-SUN]', freq='W-SUN')` .I'm even more confused now. What does ` dtype='period[W-SUN]'` stands for?\r\n\r\nAlso just as a \"cosmetic\" thing: I am only after the list of periods. I can do it with the solution you suggested: `df.groupby(pd.TimeGrouper('W')).mean().to_period().index` But would there be no other way passing by the .groups attribute? This would be more readable and consistent in terms of coding."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272857718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-272857718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 272857718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjg1NzcxOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T13:07:37Z",
    "updated_at": "2017-01-16T13:07:37Z",
    "author_association": "MEMBER",
    "body": "> What does dtype='period[W-SUN]'\r\n\r\nSee http://pandas.pydata.org/pandas-docs/stable/timeseries.html#anchored-offsets, this means 'weekly, but anchored at the sunday' (because your original timestamps that represented the full week were sundays). I have to admit that the documentation can certainly be improved here.\r\n\r\n>  I am only after the list of periods. .. But would there be no other way passing by the .groups attribute?\r\n\r\nApparently, when grouping on a period index, then the `.groups` attribute does not work (this may be a bug). But starting from the timestamp keys, you could do:\r\n\r\n```\r\nIn [26]: [p.to_period() for p in df.groupby(pd.TimeGrouper('W')).groups.keys()]\r\nOut[26]: \r\n[Period('2010-01-04/2010-01-10', 'W-SUN'),\r\n Period('2010-01-25/2010-01-31', 'W-SUN'),\r\n Period('2010-01-11/2010-01-17', 'W-SUN'),\r\n Period('2010-01-18/2010-01-24', 'W-SUN'),\r\n Period('2009-12-28/2010-01-03', 'W-SUN')]\r\n```\r\n\r\nAlthough you probably need to think about why you need those, and if there is not a better method to do the same."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273048216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273048216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273048216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzA0ODIxNg==",
    "user": {
      "login": "jimbasquiat",
      "id": 19773990,
      "node_id": "MDQ6VXNlcjE5NzczOTkw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19773990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimbasquiat",
      "html_url": "https://github.com/jimbasquiat",
      "followers_url": "https://api.github.com/users/jimbasquiat/followers",
      "following_url": "https://api.github.com/users/jimbasquiat/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimbasquiat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimbasquiat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimbasquiat/subscriptions",
      "organizations_url": "https://api.github.com/users/jimbasquiat/orgs",
      "repos_url": "https://api.github.com/users/jimbasquiat/repos",
      "events_url": "https://api.github.com/users/jimbasquiat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimbasquiat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T08:12:04Z",
    "updated_at": "2017-01-17T08:25:28Z",
    "author_association": "NONE",
    "body": "> this means 'weekly, but anchored at the sunday'\r\n\r\nThis is not my question. My question is: \"Why is it stated as a dtype _for the timestamps_?\"\r\n\r\nThis was my question to begin with. If you look at my first post you can see the Timestamps are stated as follow: `Timestamp('2010-01-03 00:00:00', freq='W-SUN')`. Why would a Timestamp have a period  as a dtype?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273148142",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273148142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273148142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE0ODE0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T13:05:51Z",
    "updated_at": "2017-01-17T13:05:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jimbasquiat this is as expected.\r\n\r\n```\r\nIn [9]: df.groupby(pd.TimeGrouper('W')).mean().to_period().index\r\nOut[9]: PeriodIndex(['2009-12-28/2010-01-03', '2010-01-04/2010-01-10', '2010-01-11/2010-01-17', '2010-01-18/2010-01-24', '2010-01-25/2010-01-31'], dtype='period[W-SUN]', freq='W-SUN')\r\n```\r\n\r\n``PeriodIndex`` has a pandas extension dtype. This indicates the frequency of the periods contained in it.\r\n\r\nsee the whatsnew here: http://pandas.pydata.org/pandas-docs/stable/whatsnew.html#period-changes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273148739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273148739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273148739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE0ODczOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T13:06:44Z",
    "updated_at": "2017-01-17T13:06:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "also note #12871 ; period resampling is in flux and being worked on. contributions are welcome."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273152806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273152806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273152806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE1MjgwNg==",
    "user": {
      "login": "jimbasquiat",
      "id": 19773990,
      "node_id": "MDQ6VXNlcjE5NzczOTkw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19773990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimbasquiat",
      "html_url": "https://github.com/jimbasquiat",
      "followers_url": "https://api.github.com/users/jimbasquiat/followers",
      "following_url": "https://api.github.com/users/jimbasquiat/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimbasquiat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimbasquiat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimbasquiat/subscriptions",
      "organizations_url": "https://api.github.com/users/jimbasquiat/orgs",
      "repos_url": "https://api.github.com/users/jimbasquiat/repos",
      "events_url": "https://api.github.com/users/jimbasquiat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimbasquiat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T13:21:50Z",
    "updated_at": "2017-01-17T13:22:05Z",
    "author_association": "NONE",
    "body": "I am not sure why I have to repeat my question for the 3rd time... I am not talking about a PeriodIndex but a Timestamp object. Do I have to copy-paste here my inital post?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273156708",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273156708",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273156708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE1NjcwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T13:29:36Z",
    "updated_at": "2017-01-17T13:29:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jimbasquiat that's correct as well. its simply a frequency attached to a ``Timestamp``. not sure what the problem is."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273159161",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273159161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273159161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE1OTE2MQ==",
    "user": {
      "login": "jimbasquiat",
      "id": 19773990,
      "node_id": "MDQ6VXNlcjE5NzczOTkw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19773990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimbasquiat",
      "html_url": "https://github.com/jimbasquiat",
      "followers_url": "https://api.github.com/users/jimbasquiat/followers",
      "following_url": "https://api.github.com/users/jimbasquiat/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimbasquiat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimbasquiat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimbasquiat/subscriptions",
      "organizations_url": "https://api.github.com/users/jimbasquiat/orgs",
      "repos_url": "https://api.github.com/users/jimbasquiat/repos",
      "events_url": "https://api.github.com/users/jimbasquiat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimbasquiat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T13:37:11Z",
    "updated_at": "2017-01-17T13:37:11Z",
    "author_association": "NONE",
    "body": "@jreback Is there any documentation somewhere about such Timestamp object? To me it makes little sense. The dtype for a Timestamp should be datetime64 or those \"<M8...\"  no? A Timestamp with a frequency, is it not the definition of a Period? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273173559",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273173559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273173559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE3MzU1OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T14:13:21Z",
    "updated_at": "2017-01-17T14:13:21Z",
    "author_association": "MEMBER",
    "body": "Not sure if there is much information on the freq attribute for the individual Timestamp objects, but the frequency of the Timestamps is mainly of importance if you have a regular index of them:\r\n\r\n```\r\nIn [8]: pd.date_range(\"2016-01-01\", periods=3, freq='D')\r\nOut[8]: DatetimeIndex(['2016-01-01', '2016-01-02', '2016-01-03'], dtype='datetime64[ns]', freq='D')\r\n\r\nIn [9]: pd.date_range(\"2016-01-01\", periods=3, freq='D')[0]\r\nOut[9]: Timestamp('2016-01-01 00:00:00', freq='D')\r\n```\r\n\r\nSo a accessing a single element here just kind of 'inherits' the frequency of the DatetimeIndex.\r\n\r\nThe Timestamp is a scalar and has no dtype attribute. But the dtype of an index or series of those values is certainly 'datetime64[ns]'.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273184725",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273184725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273184725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE4NDcyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T14:39:00Z",
    "updated_at": "2017-01-17T14:39:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "So a ``Timestamp`` with a freq is de-facto a ``Period``.\r\n```\r\nIn [2]: t = Timestamp('2010-01-03 00:00:00', freq='W-SUN')\r\n\r\nIn [3]: t\r\nOut[3]: Timestamp('2010-01-03 00:00:00', freq='W-SUN')\r\n\r\nIn [4]: t.to_period()\r\nOut[4]: Period('2009-12-28/2010-01-03', 'W-SUN')\r\n\r\nIn [5]: t.to_period().to_timestamp(how='start')\r\nOut[5]: Timestamp('2009-12-28 00:00:00')\r\n\r\nIn [6]: t.to_period().to_timestamp(how='end')\r\nOut[6]: Timestamp('2010-01-03 00:00:00')\r\n```\r\n\r\nHowever, I suspect that this is an implementation detail. IOW, resampling with Periods is still pretty buggy and these are prob just easier to deal with. Further in prior implementation of pandas (well actually currently as well, though a PR is in the works), ``Periods`` are much less performant than ``Timestamp``, so it may be that a freq attached Timestamp is convenient.\r\n\r\n@jimbasquiat I will create an issue specifically to address this. If you want to do some legwork to see if it is possible to instead return ``Periods`` where we now do ``Timestamp`` with a freq\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273188120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273188120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273188120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE4ODEyMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T14:47:50Z",
    "updated_at": "2017-01-17T14:48:06Z",
    "author_association": "MEMBER",
    "body": "> to see if it is possible to instead return Periods where we now do Timestamp with a freq\r\n\r\nIs that something we actually want? -> OK see your other issue, will comment there"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273189609",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273189609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273189609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE4OTYwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T14:52:03Z",
    "updated_at": "2017-01-17T14:52:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I created #15146 for that very discussion.\r\n\r\nmy answer is if there are actually no differences then sure."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273190124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273190124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273190124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzE5MDEyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T14:53:32Z",
    "updated_at": "2017-01-17T14:53:32Z",
    "author_association": "MEMBER",
    "body": "@jreback yes, updated my comment above that I saw that and commented over there."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/273266889",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15141#issuecomment-273266889",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15141",
    "id": 273266889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzI2Njg4OQ==",
    "user": {
      "login": "jimbasquiat",
      "id": 19773990,
      "node_id": "MDQ6VXNlcjE5NzczOTkw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19773990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jimbasquiat",
      "html_url": "https://github.com/jimbasquiat",
      "followers_url": "https://api.github.com/users/jimbasquiat/followers",
      "following_url": "https://api.github.com/users/jimbasquiat/following{/other_user}",
      "gists_url": "https://api.github.com/users/jimbasquiat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jimbasquiat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jimbasquiat/subscriptions",
      "organizations_url": "https://api.github.com/users/jimbasquiat/orgs",
      "repos_url": "https://api.github.com/users/jimbasquiat/repos",
      "events_url": "https://api.github.com/users/jimbasquiat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jimbasquiat/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-17T19:08:33Z",
    "updated_at": "2017-01-17T19:08:33Z",
    "author_association": "NONE",
    "body": "Thank you guys for picking it up. In my earliest example with the groupby I think returning a Period would have made more sense. In the example you are giving with the Date Range probably not. I am not sure I can be of help on that topic as I am very new to Pandas (started learning it about 3 weeks ago). But thanks!"
  }
]
