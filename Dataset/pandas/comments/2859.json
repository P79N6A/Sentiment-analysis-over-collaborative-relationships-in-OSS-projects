[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13466186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2859#issuecomment-13466186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2859",
    "id": 13466186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDY2MTg2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-12T23:33:34Z",
    "updated_at": "2013-02-13T00:21:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #60, #2485, #2695\nalso #2407, #2242 (for multi-dim)\n\nthis is non-trivial and almost always not necessary\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13496423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2859#issuecomment-13496423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2859",
    "id": 13496423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDk2NDIz",
    "user": {
      "login": "lukauskas",
      "id": 108413,
      "node_id": "MDQ6VXNlcjEwODQxMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/108413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukauskas",
      "html_url": "https://github.com/lukauskas",
      "followers_url": "https://api.github.com/users/lukauskas/followers",
      "following_url": "https://api.github.com/users/lukauskas/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukauskas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukauskas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukauskas/subscriptions",
      "organizations_url": "https://api.github.com/users/lukauskas/orgs",
      "repos_url": "https://api.github.com/users/lukauskas/repos",
      "events_url": "https://api.github.com/users/lukauskas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukauskas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-13T14:39:08Z",
    "updated_at": "2013-02-13T14:39:08Z",
    "author_association": "NONE",
    "body": "In the cases described here it looks trivial, \nI have submitted a pull request that should fix these cases and similar cases.\n`test_fast.sh` seems to work fine\n\nThough I agree that a major refactoring might be needed to do this properly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13497438",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2859#issuecomment-13497438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2859",
    "id": 13497438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDk3NDM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-13T14:59:08Z",
    "updated_at": "2013-02-13T14:59:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "this 'works' but will not change your ability to subclass\n\nis there a specific case that sub classing would solve your problem rather than composition?\nalso MetaDataFrame might be useful \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13502339",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2859#issuecomment-13502339",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2859",
    "id": 13502339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTAyMzM5",
    "user": {
      "login": "lukauskas",
      "id": 108413,
      "node_id": "MDQ6VXNlcjEwODQxMw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/108413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukauskas",
      "html_url": "https://github.com/lukauskas",
      "followers_url": "https://api.github.com/users/lukauskas/followers",
      "following_url": "https://api.github.com/users/lukauskas/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukauskas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukauskas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukauskas/subscriptions",
      "organizations_url": "https://api.github.com/users/lukauskas/orgs",
      "repos_url": "https://api.github.com/users/lukauskas/repos",
      "events_url": "https://api.github.com/users/lukauskas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukauskas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-13T16:18:54Z",
    "updated_at": "2013-02-13T16:18:54Z",
    "author_association": "NONE",
    "body": "Well, I do not think there is a case where subclassing could not be exchanged by composition. \nOne can always emulate inheritance with composition as in make both classes have the same API and one call another, yet it is tedious, and may be inefficient computationally.\n\nIn my case I subclass `DataFrame` in order to provide additional functionality that is only relevant with the data I am dealing with. That is, I want to keep the benefits of having a `DataFrame`, but add an additional function to operate on the values as well as have a bit of validation when the values do not make any sense any more. \n\nI could easily change the function to be external to the class and take DataFrame as a parameter,\nbut doing `some_data.foo()` is a bit more convenient than `foo(some_data)`.\n\nI also could use something like `MetaDataFrame` to get the same `some_data.foo()`, but I am not too keen on this solution as it is kind of a hacky way of doing inheritance. This would make all functions that rely on the functionality of `DataFrame` be aware of the fact that `MetaDataFrame` is essentially the same thing.\nThat is, the following code would need to be changed:\n\n``` python\ndef foo(data_frame):\n    if isinstance(data_frame, DataFrame):\n        return data_frame.mean()\n    elif isinstance(data_frame, SomethingElse):\n        return data_frame.foo()\n    else:\n       raise ValueError(\"foo() expects its input to be either DataFrame or SomethingElse. {0} given\".format(type(data_frame))\n```\n\nThat is one example where subclassing might be necessary.\nSubclassing is necessary to be able to call protected methods too, in case people have to do so.\nOf course, there are workarounds in both of these cases too.\n\nI think it all boils down to whether the subclass is trying to be a `DataFrame`, or is just using a `DataFrame`.\n\nBut I do not think that this discussion changes the fact that the code should not be hardcoding the explicit constructor, and using things like `cls` where appropriate. At some point there might be a need to refactor\nthe whole class, move these bits somewhere else (maybe to subclasses or mixins) and it might be painful to do so with hardcoded things in it.\n\nI have changed all the occurrences of `DataFrame` constructs in the class, and would think that maybe unifying calls to `Series` constructors might be useful as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13502946",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2859#issuecomment-13502946",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2859",
    "id": 13502946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTAyOTQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-13T16:29:42Z",
    "updated_at": "2013-02-13T16:29:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I encourage to read the discussions I pointed to above\nall of your points have been addressed\n\nit is quite straightforward to add a function to do 'x' which makes it look native\nand has the same call syntax\n\n in python there are no 'protected' methods, u can call whatever you want\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44498211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2859#issuecomment-44498211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2859",
    "id": 44498211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDk4MjEx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T06:20:11Z",
    "updated_at": "2014-05-29T06:20:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "duplicate of those mentioned above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/283953610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2859#issuecomment-283953610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2859",
    "id": 283953610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mzk1MzYxMA==",
    "user": {
      "login": "vi3k6i5",
      "id": 3116482,
      "node_id": "MDQ6VXNlcjMxMTY0ODI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3116482?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vi3k6i5",
      "html_url": "https://github.com/vi3k6i5",
      "followers_url": "https://api.github.com/users/vi3k6i5/followers",
      "following_url": "https://api.github.com/users/vi3k6i5/following{/other_user}",
      "gists_url": "https://api.github.com/users/vi3k6i5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vi3k6i5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vi3k6i5/subscriptions",
      "organizations_url": "https://api.github.com/users/vi3k6i5/orgs",
      "repos_url": "https://api.github.com/users/vi3k6i5/repos",
      "events_url": "https://api.github.com/users/vi3k6i5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vi3k6i5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T13:33:48Z",
    "updated_at": "2017-03-03T13:33:48Z",
    "author_association": "NONE",
    "body": "@lukauskas would you consider this as a possible solution to your question? http://stackoverflow.com/a/42580274/3027854"
  }
]
