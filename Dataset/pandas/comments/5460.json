[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35975502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5460#issuecomment-35975502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5460",
    "id": 35975502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTc1NTAy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-25T05:08:48Z",
    "updated_at": "2014-02-25T05:08:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 on making those ones you mention public right now, and esp. things which subclasses may rely on.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44269700",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5460#issuecomment-44269700",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5460",
    "id": 44269700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjY5NzAw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-27T12:39:17Z",
    "updated_at": "2014-05-27T12:39:17Z",
    "author_association": "MEMBER",
    "body": "@shoyer want to continue the conversation here from #7243? Interested to hear what kind of indexes you want to create \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44474502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5460#issuecomment-44474502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5460",
    "id": 44474502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDc0NTAy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T22:46:29Z",
    "updated_at": "2014-05-28T23:51:17Z",
    "author_association": "MEMBER",
    "body": "OK, let me give two concrete examples of new types of indices I'd like to be able to integrate with pandas:\n1. `CellIndex`: an index where individual values correspond to intervals between start and stop value (given by integers, floating point numbers or datetimes). Typically, these intervals would have a fixed size and be non-overlapping. The idea is to have a natural representation of the grid cells used in physical models. For example, all latitude intervals at 0.5 degree increments, or datetime intervals between 12:00Z and 11:59Z the following day (note that because of the offset, the later cannot be represented with a `PeriodIndex`). Ideally, one could do a label based look-up by a value, and it would automatically select the right bin. Note: It occurs to me now that these \"cells\" are somewhat similar to the proposal CategoricalBlock (#7217).\n2. An index wrapper Index that adds new functionality. For example, in [xray](http://github.com/xray/xray) we have [`xray.Coordinate`](http://xray.readthedocs.org/en/stable/generated/xray.Coordinate.html), which is essentially a generic wrapper for `pandas.Index` objects with a bit of new functionality:\n   - It can store arbitrary metadata along with the index in an OrderedDict (the `attrs` attribute).\n   - It's not necessary for all the values to be loaded into memory (e.g., from disk or over a network) until they are actually needed.\n   - It also has a few other minor tweaks to make thing more convenient for us, e.g., how it handles mathematical operations.\n\nOn a related note: I can't even make this second type of index convert properly when used as the argument of `pandas.Index`, because despite implementing an `__array__` method on my Index wrapper pandas checks for explicit `ndarray` subclasses and otherwise falls back to converting via `list` in `com._asarray_tuplesafe`. This means I end up with a list of my 0-dimensional labeled arrays:\n\n```\nimport xray\nimport pandas as pd\nx = xray.Coordinate('x', ['a', 'b', 'c'])\nprint 'what I get:'\nprint pd.Index(x)\nprint 'what I want:'\nprint pd.Index(['a', 'b', 'c'])\n```\n\n```\nwhat I get:\nIndex([<xray.Variable ()>\\narray('a', \\n      dtype='|S1')\\nAttributes:\\n    Empty, <xray.Variable ()>\\narray('b', \\n      dtype='|S1')\\nAttributes:\\n    Empty, <xray.Variable ()>\\narray('c', \\n      dtype='|S1')\\nAttributes:\\n    Empty], dtype='object')\nwhat I want:\nIndex([u'a', u'b', u'c'], dtype='object')\n```\n\n(Of course, my Index wrapper is neither an actual `pandas.Index` nor `numpy.ndarray` subclass, although it is both ndarray-like and index-like.) Actually, I think I will submit a PR to fix this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44523850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5460#issuecomment-44523850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5460",
    "id": 44523850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTIzODUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-29T11:47:38Z",
    "updated_at": "2014-05-29T11:47:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer this sounds reasonable. I think could put in #7270. Then I think you can simply try adding n an index that quack like an Index. Pls report and further issues and we'll see what needs modification. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44605460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5460#issuecomment-44605460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5460",
    "id": 44605460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjA1NDYw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-30T01:23:55Z",
    "updated_at": "2014-05-30T01:24:35Z",
    "author_association": "MEMBER",
    "body": "Thanks for the quick merge with #7270!\n\nThat provides an immediate fix: my  \"index wrappers\" (my case 2) can now be converted into real `pandas.Index objects`, but there's no still duck typing for indices. Looks like the place to add that would be `pandas.core.index._ensure_index`. I will investigate further to see if I can get that working.\n"
  }
]
