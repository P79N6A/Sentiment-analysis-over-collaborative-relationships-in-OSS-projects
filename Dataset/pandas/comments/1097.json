[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5253235",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1097#issuecomment-5253235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1097",
    "id": 5253235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTMyMzU=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-20T21:08:40Z",
    "updated_at": "2012-04-20T21:08:40Z",
    "author_association": "MEMBER",
    "body": "Pretty far along with this in git master, though I haven't written any documentation yet. There are currently optimized cython functions for sum, mean, min, max, prod, std, var, and OHLC, and you can additionally pass any numpy reduction function:\n\n```\nIn [4]: ts = Series(np.random.randn(100000), index=date_range('1/1/2000', periods=100000, freq='100ms'))\n\nIn [5]: ts\nOut[5]: \n2000-01-01 00:00:00           0.116037\n2000-01-01 00:00:00.100000   -0.634925\n2000-01-01 00:00:00.200000   -1.710293\n2000-01-01 00:00:00.300000    0.847847\n2000-01-01 00:00:00.400000    0.753553\n2000-01-01 00:00:00.500000   -0.143311\n2000-01-01 00:00:00.600000    2.165884\n2000-01-01 00:00:00.700000   -0.346302\n2000-01-01 00:00:00.800000   -1.865391\n2000-01-01 00:00:00.900000    0.178999\n2000-01-01 00:00:01           1.107242\n2000-01-01 00:00:01.100000    0.199658\n2000-01-01 00:00:01.200000   -0.253495\n2000-01-01 00:00:01.300000    0.034168\n2000-01-01 00:00:01.400000    0.333419\n...\n2000-01-01 02:46:38.500000   -0.451751\n2000-01-01 02:46:38.600000   -0.419085\n2000-01-01 02:46:38.700000   -1.196285\n2000-01-01 02:46:38.800000   -0.051274\n2000-01-01 02:46:38.900000    2.019622\n2000-01-01 02:46:39          -0.922553\n2000-01-01 02:46:39.100000    0.853276\n2000-01-01 02:46:39.200000    0.516307\n2000-01-01 02:46:39.300000    1.667102\n2000-01-01 02:46:39.400000   -1.016659\n2000-01-01 02:46:39.500000   -0.168478\n2000-01-01 02:46:39.600000    0.449904\n2000-01-01 02:46:39.700000    0.948254\n2000-01-01 02:46:39.800000   -0.243552\n2000-01-01 02:46:39.900000   -0.998517\nLength: 100000\n\nIn [10]: ts.convert('5min', how=lambda x: x.max() - x.min())\nOut[10]: \n2000-01-01 00:00:00    0.000000\n2000-01-01 00:05:00    6.967581\n2000-01-01 00:10:00    6.609030\n2000-01-01 00:15:00    7.150219\n2000-01-01 00:20:00    7.232781\n2000-01-01 00:25:00    7.426937\n2000-01-01 00:30:00    7.152898\n2000-01-01 00:35:00    7.565959\n2000-01-01 00:40:00    6.635516\n2000-01-01 00:45:00    7.059401\n2000-01-01 00:50:00    6.551597\n2000-01-01 00:55:00    6.608363\n2000-01-01 01:00:00    6.550120\n2000-01-01 01:05:00    7.170704\n2000-01-01 01:10:00    7.073000\n2000-01-01 01:15:00    7.198666\n2000-01-01 01:20:00    7.254109\n2000-01-01 01:25:00    6.812853\n2000-01-01 01:30:00    7.323174\n2000-01-01 01:35:00    7.278106\n2000-01-01 01:40:00    7.582234\n2000-01-01 01:45:00    6.674765\n2000-01-01 01:50:00    7.567135\n2000-01-01 01:55:00    6.450379\n2000-01-01 02:00:00    6.923727\n2000-01-01 02:05:00    6.207973\n2000-01-01 02:10:00    7.502840\n2000-01-01 02:15:00    6.889956\n2000-01-01 02:20:00    6.488860\n2000-01-01 02:25:00    6.967548\n2000-01-01 02:30:00    7.354744\n2000-01-01 02:35:00    6.889317\n2000-01-01 02:40:00    7.103389\n2000-01-01 02:45:00    6.268222\n2000-01-01 02:50:00    7.064068\n```\n\nI'm somewhat undecided about calling it `asfreq` versus `convert`. You can choose which end of the half-open interval is closed and how to label the result (with the left or right bin edge). Also working on adding data types to represent intervals (like the interval 9:30-9:35 as a index data type)\n\nWould be happy to get you in the code base working on the API and kicking the tires\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5365994",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1097#issuecomment-5365994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1097",
    "id": 5365994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjU5OTQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-26T19:41:58Z",
    "updated_at": "2012-04-26T19:41:58Z",
    "author_association": "MEMBER",
    "body": "This is handled by the new `resample` method. It'd be great for you to take a look at see if there are some additional nice features to add to it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5407383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1097#issuecomment-5407383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1097",
    "id": 5407383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDczODM=",
    "user": {
      "login": "jonathanrocher",
      "id": 593945,
      "node_id": "MDQ6VXNlcjU5Mzk0NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/593945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanrocher",
      "html_url": "https://github.com/jonathanrocher",
      "followers_url": "https://api.github.com/users/jonathanrocher/followers",
      "following_url": "https://api.github.com/users/jonathanrocher/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanrocher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanrocher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanrocher/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanrocher/orgs",
      "repos_url": "https://api.github.com/users/jonathanrocher/repos",
      "events_url": "https://api.github.com/users/jonathanrocher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanrocher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-29T18:32:03Z",
    "updated_at": "2012-04-29T18:32:03Z",
    "author_association": "NONE",
    "body": "I will have a look to the code. My first reaction would be that these feature should be together inside asfreq, to simplify the API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5407384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1097#issuecomment-5407384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1097",
    "id": 5407384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDczODQ=",
    "user": {
      "login": "jonathanrocher",
      "id": 593945,
      "node_id": "MDQ6VXNlcjU5Mzk0NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/593945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanrocher",
      "html_url": "https://github.com/jonathanrocher",
      "followers_url": "https://api.github.com/users/jonathanrocher/followers",
      "following_url": "https://api.github.com/users/jonathanrocher/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanrocher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanrocher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanrocher/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanrocher/orgs",
      "repos_url": "https://api.github.com/users/jonathanrocher/repos",
      "events_url": "https://api.github.com/users/jonathanrocher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanrocher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-29T18:32:10Z",
    "updated_at": "2012-04-29T18:32:10Z",
    "author_association": "NONE",
    "body": "I will have a look to the code. My first reaction would be that these feature should be together inside asfreq, to simplify the API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5407389",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1097#issuecomment-5407389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1097",
    "id": 5407389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDczODk=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-29T18:32:57Z",
    "updated_at": "2012-04-29T18:32:57Z",
    "author_association": "MEMBER",
    "body": "I was thinking about this today. I think asfreq as a means of resampling is going to become a deprecated API\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5407575",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1097#issuecomment-5407575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1097",
    "id": 5407575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDc1NzU=",
    "user": {
      "login": "jonathanrocher",
      "id": 593945,
      "node_id": "MDQ6VXNlcjU5Mzk0NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/593945?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonathanrocher",
      "html_url": "https://github.com/jonathanrocher",
      "followers_url": "https://api.github.com/users/jonathanrocher/followers",
      "following_url": "https://api.github.com/users/jonathanrocher/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonathanrocher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonathanrocher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonathanrocher/subscriptions",
      "organizations_url": "https://api.github.com/users/jonathanrocher/orgs",
      "repos_url": "https://api.github.com/users/jonathanrocher/repos",
      "events_url": "https://api.github.com/users/jonathanrocher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonathanrocher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-29T19:00:10Z",
    "updated_at": "2012-04-29T19:00:10Z",
    "author_association": "NONE",
    "body": "Looking around at the timeseries scikits to see what they did there, I see now why you called it convert originally. I agree resample is better than convert and I agree we don't need both asfreq and resample. If it was me, I would keep asfreq, because it is more explicit, already exists in pandas, and exists in scikits.TS also. Clearly not the most important... Let me look at the code a bit...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5407676",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1097#issuecomment-5407676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1097",
    "id": 5407676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDc2NzY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-29T19:11:37Z",
    "updated_at": "2012-04-29T19:11:37Z",
    "author_association": "MEMBER",
    "body": "The only issue I've noted with having asfreq-only is the slightly different semantics of resample vs. the old asfreq method. To illustrate:\n\n```\nIn [12]: rng = date_range('1/1/2000', periods=4, freq='M')\n\nIn [13]: ts = Series(randn(len(rng)), index=rng)\n\nIn [14]: ts\nOut[14]: \n2000-01-31    0.542313\n2000-02-29    1.721517\n2000-03-31   -2.097376\n2000-04-30   -0.465502\nFreq: M\n\nIn [16]: ts.resample('W-WED', fill_method='ffill')\nOut[16]: \n2000-02-02    0.542313\n2000-02-09    0.542313\n2000-02-16    0.542313\n2000-02-23    0.542313\n2000-03-01    1.721517\n2000-03-08    1.721517\n2000-03-15    1.721517\n2000-03-22    1.721517\n2000-03-29    1.721517\n2000-04-05   -2.097376\n2000-04-12   -2.097376\n2000-04-19   -2.097376\n2000-04-26   -2.097376\n2000-05-03   -0.465502\nFreq: W-WED\n```\n\nvs. asfreq's old behavior:\n\n```\nIn [17]: ts.asfreq('W-WED', method='ffill')\nOut[17]: \n2000-02-02    0.542313\n2000-02-09    0.542313\n2000-02-16    0.542313\n2000-02-23    0.542313\n2000-03-01    1.721517\n2000-03-08    1.721517\n2000-03-15    1.721517\n2000-03-22    1.721517\n2000-03-29    1.721517\n2000-04-05   -2.097376\n2000-04-12   -2.097376\n2000-04-19   -2.097376\n2000-04-26   -2.097376\nFreq: W-WED\n```\n\n`resample` includes a date after the last date in the original time series, whereas `asfreq` produces no dates outside the bounds of the start / end dates. I would argue that what `resample` does is probably what you want, but I'm worried about breaking legacy code that relied on the old behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5407719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1097#issuecomment-5407719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1097",
    "id": 5407719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MDc3MTk=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-29T19:16:36Z",
    "updated_at": "2012-04-29T19:16:36Z",
    "author_association": "MEMBER",
    "body": "I should also point out that the semantics of asfreq with periods (new data type) is different (and this is more like scikits.timeseries's `asfreq` function):\n\n```\nIn [18]: rng = period_range('1/1/2000', periods=4, freq='M')\n\nIn [19]: ts = Series(randn(len(rng)), index=rng)\n\nIn [20]: ts\nOut[20]: \nJan-2000    0.537704\nFeb-2000   -1.908607\nMar-2000    0.040477\nApr-2000    0.684434\nFreq: M\n\nIn [21]: ts.asfreq('B', how='end')  # last business day of each month now\nOut[21]: \n31-Jan-2000    0.537704\n29-Feb-2000   -1.908607\n31-Mar-2000    0.040477\n28-Apr-2000    0.684434\nFreq: B\n```\n"
  }
]
