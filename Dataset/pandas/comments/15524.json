[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282884001",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-282884001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 282884001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg4NDAwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T22:54:59Z",
    "updated_at": "2017-02-27T22:54:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "datetime parsing is pretty soft, meaning unless it can unequivocably convert something it won't do it. You can certainly force this after the fact via ``.to_datetime(...)``. The default for non-converting something (to *any*) dtype is simply ``object``. This is the safest way to do things.\r\n\r\nI am not sure that I would coerce these empty columns like this (even though we certainly can, at least for non-tz aware, which won't work in your example at all. The dtype is not-defined). This can easily lead to mistakes, not to mention that ``parse_dates=True`` will try to soft coerce lots of things (but I suppose that could ignore a forced conversion).\r\n\r\nthoughts\r\n\r\n@jorisvandenbossche \r\ncc @gfyoung "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282884210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-282884210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 282884210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg4NDIxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T22:55:43Z",
    "updated_at": "2017-02-27T22:56:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adbull can you show a situation when this actually matters / makes a difference? why are you trying to do this? For example concatting an empty frame with one that is correctly dtypes will work, so this doesn't practically make a difference."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282890295",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-282890295",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 282890295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjg5MDI5NQ==",
    "user": {
      "login": "adbull",
      "id": 7279321,
      "node_id": "MDQ6VXNlcjcyNzkzMjE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7279321?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adbull",
      "html_url": "https://github.com/adbull",
      "followers_url": "https://api.github.com/users/adbull/followers",
      "following_url": "https://api.github.com/users/adbull/following{/other_user}",
      "gists_url": "https://api.github.com/users/adbull/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adbull/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adbull/subscriptions",
      "organizations_url": "https://api.github.com/users/adbull/orgs",
      "repos_url": "https://api.github.com/users/adbull/repos",
      "events_url": "https://api.github.com/users/adbull/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adbull/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T23:22:54Z",
    "updated_at": "2017-02-27T23:54:21Z",
    "author_association": "NONE",
    "body": "Well, if I call `read_csv` with a specific column in `parse_dates`, I definitely want the column to be a datetime, and since the column is empty, it _will_ unequivocally succeed in that conversion -- it's not like it can contain a parse error.\r\n\r\nI'm not sure I follow you on the second paragraph? What won't work in my example?\r\n\r\nConcatting an empty frame of dtype `object` to a non-empty one of dtype `datetime64[ns, UTC]` throws an error, is that not intended?\r\n\r\nAnyway, potential use-cases are (a) concatting together multiple csvs, some of which may be empty; (b) regularly loading a csv which is frequently updated, and may or may not be empty. In (a), I would have to assign timezones after concat to stop it throwing an error; in (b), I would have to specifically check whether the frame is empty before attempting any timezone manipulation.\r\n\r\nThe workarounds aren't too hard, it just seems a bit awkward when the simple version would work fine for any other dtype."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282922120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-282922120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 282922120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjkyMjEyMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-28T02:23:26Z",
    "updated_at": "2017-02-28T02:23:26Z",
    "author_association": "MEMBER",
    "body": "@jreback : I'm torn on this.  On the one hand, I agree with you that there is not a lot of value (from a functionality perspective) in supporting this behavior BUT that being said, @adbull does have a point about consistency.  I turn your attention to some other inconsistencies related to this:\r\n~~~python\r\n>>> Series([]).astype(np.datetime64)\r\nSeries([], dtype: datetime64[ns])\r\n>>>\r\n>>> Series([], dtype=np.datetime64)\r\n...\r\nTypeError: cannot convert datetimelike to dtype [datetime64]\r\n~~~"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291272527",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-291272527",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 291272527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI3MjUyNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T21:00:35Z",
    "updated_at": "2017-04-03T21:00:35Z",
    "author_association": "MEMBER",
    "body": "@jreback : Thoughts on what I said <a href=\"https://github.com/pandas-dev/pandas/issues/15524#issuecomment-282922120\">above</a>?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291274316",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-291274316",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 291274316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI3NDMxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T21:07:34Z",
    "updated_at": "2017-04-03T21:07:34Z",
    "author_association": "CONTRIBUTOR",
    "body": ">>> Series([]).astype(np.datetime64)\r\nSeries([], dtype: datetime64[ns])\r\n>>>\r\n>>> Series([], dtype=np.datetime64)\r\n...\r\nTypeError: cannot convert datetimelike to dtype [datetime64]\r\n\r\nis like what we are discussing in #15859 \r\n\r\nI agree that should work. As an aside, I think we need to systematically test all ``.astype`` vs direct construction on empties. (can create another issue if you want). mainly want the test (so if you can add that would be great, just xfailing those things that don't work)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291286137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-291286137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 291286137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI4NjEzNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T21:57:00Z",
    "updated_at": "2017-04-03T21:57:00Z",
    "author_association": "MEMBER",
    "body": "Okay, sounds good.  I suspect that what I presented here is probably related to #15859 initially and will trickle down to patching this issue here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293028057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293028057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293028057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzAyODA1Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T17:55:35Z",
    "updated_at": "2017-04-10T17:55:43Z",
    "author_association": "MEMBER",
    "body": "@jreback : So the Exception raised traces to `maybe_cast_to_datetime`, which specifically checks if the `dtype` specified exactly matches `datetime64[ns]`, which is NOT the same as `np.datetime64` (no frequency in the latter `dtype`).\r\n\r\nThus, we would need to soften the restrictions on casting to `datetime64` (similarly for `timedelta64`).  This is an API change.  Thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293092916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293092916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293092916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzA5MjkxNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T22:06:06Z",
    "updated_at": "2017-04-10T22:06:06Z",
    "author_association": "MEMBER",
    "body": "Also tracked down the cause of the original bug.  `_get_empty_meta`, which is what is called when there is no data to parse has no handling for `parse_dates`, but it does for `dtype`.\r\n\r\nUnfortunately, patching this is not so straightforward because there is a lot of logical surrounding what columns get parsed depending on how you specify `parse_dates`, which feels very duplicative since we have it already for the C and Python engine but in two different implementations (one in Cython and the other in pure Python).\r\n\r\nSo yes, we can easily patch by replicating the `parse_dates` logic, but that does not seem optimal...\r\n\r\n@jreback , @jorisvandenbossche : Thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293209035",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293209035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293209035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzIwOTAzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T09:53:24Z",
    "updated_at": "2017-04-11T09:53:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I think the date parsing needs to be factored out generically applicable to both engines  :> its a project but will make this much more generic (and not sacrifice any perf). Then this is easy."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293251234",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293251234",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293251234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzI1MTIzNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T12:55:47Z",
    "updated_at": "2017-04-11T12:55:47Z",
    "author_association": "MEMBER",
    "body": "@jreback : Any thoughts about my questions <a href=\"https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293028057\">above</a> regarding `Series` ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293281512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293281512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293281512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzI4MTUxMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T14:29:53Z",
    "updated_at": "2017-04-11T14:29:53Z",
    "author_association": "MEMBER",
    "body": "@gfyoung so the question is if we generally interpret `np.datetime64` (if passed by the user) as `'datetime64[ns]'`, since 'ns' is the default resolution? \r\nAnd now how this is handled differs between different functions?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293286353",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293286353",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293286353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzI4NjM1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T14:45:06Z",
    "updated_at": "2017-04-11T14:45:22Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : I think the inconsistency is pretty clearly illustrated in my above comment <a href=\"https://github.com/pandas-dev/pandas/issues/15524#issuecomment-282922120\">here</a>.  It should be one way or the other (raise or interpret as `datetime64[ns]`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293409266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293409266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293409266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQwOTI2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T21:42:49Z",
    "updated_at": "2017-04-11T21:42:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "so we transform ``np.datetime64`` -> ``np.datetime64[ns]`` (well we actually interpret it according to whatever freq it actually is). In *this* case, this just says hey make it the default datetype, so this would be totally fine to do. \r\n\r\n``Series([], dtype=np.datetime64)``, IOW I would be fine accepting this. Note that the logic is in ``pandas.types.cast.maybe_cast_to_datetime``. \r\n\r\nthough you have to see what this *does* break. If its just specific validation tests, then can change those."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293497082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293497082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293497082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzQ5NzA4Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T07:30:25Z",
    "updated_at": "2017-04-12T07:30:25Z",
    "author_association": "MEMBER",
    "body": "I would actually also be fine with following numpy here, which means raising on `dtype=np.datetime64`. I don't see a strong reason to allow this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293511757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293511757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293511757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzUxMTc1Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T08:38:52Z",
    "updated_at": "2017-04-12T08:38:58Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : What do you mean?\r\n~~~python\r\n>>> np.array([], dtype=np.datetime64)\r\narray([], dtype=datetime64)\r\n~~~"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293529683",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293529683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293529683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzUyOTY4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T09:55:00Z",
    "updated_at": "2017-04-12T09:55:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung the bug here is this, right:\r\n\r\n```\r\nIn [2]: pd.read_csv(StringIO('date'), parse_dates=['date']).dtypes\r\nOut[2]: \r\ndate    object\r\ndtype: object\r\n```\r\n\r\nIOW we have an empty date column, which should be coerced to ``datetime64[ns]``\r\n\r\nThis is similar to this behavior. where does ``np.datetime64`` enter this?\r\n```\r\nIn [4]: pd.to_datetime([])\r\nOut[4]: DatetimeIndex([], dtype='datetime64[ns]', freq=None)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293530014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293530014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293530014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzUzMDAxNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T09:56:23Z",
    "updated_at": "2017-04-12T09:56:23Z",
    "author_association": "MEMBER",
    "body": "Sorry, I assumed it was the same as on non-empty array. And in pandas non-empty both already raise:\r\n\r\n```\r\nIn [11]: pd.Series([1], dtype=np.datetime64)\r\n...\r\nTypeError: cannot convert datetimelike to dtype [datetime64]\r\n\r\nIn [12]: pd.Series([1]).astype(np.datetime64)\r\n...\r\nSystemError: <built-in function cast_to_nanoseconds> returned a result with an error set\r\n```\r\n\r\n(although the second error message is not a correct one)\r\n\r\nSo I was mixing the empty and non-empty cases."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293654497",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293654497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293654497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzY1NDQ5Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T17:42:51Z",
    "updated_at": "2017-04-12T17:42:51Z",
    "author_association": "MEMBER",
    "body": "@jreback : The `np.datetime64` issue came about because it seemed pertinent to the original issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293655510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293655510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293655510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzY1NTUxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T17:46:30Z",
    "updated_at": "2017-04-12T17:46:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung yeah not sure where that exactly came up...."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293655837",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293655837",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293655837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzY1NTgzNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T17:47:42Z",
    "updated_at": "2017-04-12T17:48:08Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Those examples you bring up <a href=\"https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293530014\">above</a>, should we follow in `numpy` 's footsteps?  We only use one frequency, so I don't see why those two examples wouldn't work."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293853634",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293853634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293853634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzg1MzYzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T10:34:24Z",
    "updated_at": "2017-04-13T10:34:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung so I don't see where this is passing an explicit ``np.datetime64`` for constrution (could be buried somewhere of course), if that IS the case then I think this is wrong. Can you point to this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293923924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15524#issuecomment-293923924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15524",
    "id": 293923924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzkyMzkyNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T15:11:00Z",
    "updated_at": "2017-04-13T15:11:00Z",
    "author_association": "MEMBER",
    "body": "@jreback : So the original issue does not involve passing an explicit `np.datetime64` (the reason for it occurring is something completely separate from that as later analysis shows)."
  }
]
