[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292808186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15959#issuecomment-292808186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15959",
    "id": 292808186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjgwODE4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T19:47:18Z",
    "updated_at": "2017-04-09T19:47:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "What you are doing is about as inefficient as possible. You want to create all in 1 go. The setting of single keys is for convenience; the expansion is what makes this inefficient, you get a copy each time (of the entire structure).\r\n\r\n```\r\nIn [17]: df = DataFrame([[1, 2], [3, 4]], \r\n    ...:                columns=pd.MultiIndex.from_product([[1.024], [0, 1]], names=list('py')),\r\n    ...:                index=pd.MultiIndex.from_product([[0], [0, 1]], names=list('rx')))\r\n\r\nIn [18]: df\r\nOut[18]: \r\np   1.024   \r\ny       0  1\r\nr x         \r\n0 0     1  2\r\n  1     3  4\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292808704",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15959#issuecomment-292808704",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15959",
    "id": 292808704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjgwODcwNA==",
    "user": {
      "login": "joseortiz3",
      "id": 18585219,
      "node_id": "MDQ6VXNlcjE4NTg1MjE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18585219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joseortiz3",
      "html_url": "https://github.com/joseortiz3",
      "followers_url": "https://api.github.com/users/joseortiz3/followers",
      "following_url": "https://api.github.com/users/joseortiz3/following{/other_user}",
      "gists_url": "https://api.github.com/users/joseortiz3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joseortiz3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joseortiz3/subscriptions",
      "organizations_url": "https://api.github.com/users/joseortiz3/orgs",
      "repos_url": "https://api.github.com/users/joseortiz3/repos",
      "events_url": "https://api.github.com/users/joseortiz3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joseortiz3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T19:55:54Z",
    "updated_at": "2017-04-09T19:58:45Z",
    "author_association": "NONE",
    "body": "Ok, now to address my question: You generated an xy dataset for r=0, p=1.024. Suppose you now have another xy dataset for r=1, p=1.024. How do you obtain a dataframe with both xy sets for r = [0,1] and p=1.024?\r\n\r\nContinuing on to arbitrary r, arbitrary p, how do you obtain a dataframe with any arbitrary collection of xy data for each r and p? Especially when you do not know ahead of time what r and p values you will end up with? (And hence, cannot create it from scratch).\r\n\r\nThe efficiency of this is really not important. I don't care if it takes fifty milliseconds or fifty seconds. I just need to obtain the required multi-dimensional data frame."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292808947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15959#issuecomment-292808947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15959",
    "id": 292808947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjgwODk0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T19:59:28Z",
    "updated_at": "2017-04-09T19:59:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "show what you are meaning "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292809280",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15959#issuecomment-292809280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15959",
    "id": 292809280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjgwOTI4MA==",
    "user": {
      "login": "joseortiz3",
      "id": 18585219,
      "node_id": "MDQ6VXNlcjE4NTg1MjE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18585219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joseortiz3",
      "html_url": "https://github.com/joseortiz3",
      "followers_url": "https://api.github.com/users/joseortiz3/followers",
      "following_url": "https://api.github.com/users/joseortiz3/following{/other_user}",
      "gists_url": "https://api.github.com/users/joseortiz3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joseortiz3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joseortiz3/subscriptions",
      "organizations_url": "https://api.github.com/users/joseortiz3/orgs",
      "repos_url": "https://api.github.com/users/joseortiz3/repos",
      "events_url": "https://api.github.com/users/joseortiz3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joseortiz3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T20:04:32Z",
    "updated_at": "2017-04-09T20:15:00Z",
    "author_association": "NONE",
    "body": "```python\r\n# Pseudocode\r\nhigher_df = Higher_Dimensional_Dataframe() # 4-D Dataframe\r\nfor i in range(100):\r\n    p = rand() # Some random float\r\n    r = randint() # Some random integer\r\n    # Dataframe of unique xy values for a particular p and r.\r\n    df = DataFrame(data = [[ randint() , randint() ], [ randint() ,  randint() ]], \r\n        columns=pd.MultiIndex.from_product([[ p ], [0, 1]], names=list('py')),\r\n        index=pd.MultiIndex.from_product([[ r ], [0, 1]], names=list('rx')))\r\n    # Put each of these dataframes into a single higher-dimensional dataframe.\r\n    higher_df.loc[(r,df.index),(p,df.columns)] = df\r\n# Now I have a dataframe with xy-datasets for an arbitrary collection of p's and r's\r\ndo_stuff(higher_df)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292809850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15959#issuecomment-292809850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15959",
    "id": 292809850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjgwOTg1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T20:15:01Z",
    "updated_at": "2017-04-09T20:15:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "lots of ways to do this.\r\n\r\nhere is one. This is a better question for SO, or you can read some tutorials (and docs).\r\n\r\n```\r\nIn [6]: df = DataFrame({(1.024, 0): np.random.randn(10), (1.024, 1): np.random.randint(0, 10, size=10)},\r\n   ...:     ...:                index=pd.MultiIndex.from_product([range(5), [0, 1]], names=list('rx')))\r\n   ...: df.columns.names = ['foo', 'bar']\r\n   ...: df\r\n   ...: \r\nOut[6]: \r\nfoo     1.024   \r\nbar         0  1\r\nr x             \r\n0 0  1.215597  1\r\n  1  0.475140  3\r\n1 0  1.610304  7\r\n  1 -0.261228  5\r\n2 0  0.476945  6\r\n  1 -0.257677  3\r\n3 0 -2.170884  0\r\n  1  0.743454  3\r\n4 0 -1.721198  4\r\n  1  0.487578  4\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292810880",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15959#issuecomment-292810880",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15959",
    "id": 292810880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjgxMDg4MA==",
    "user": {
      "login": "joseortiz3",
      "id": 18585219,
      "node_id": "MDQ6VXNlcjE4NTg1MjE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18585219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joseortiz3",
      "html_url": "https://github.com/joseortiz3",
      "followers_url": "https://api.github.com/users/joseortiz3/followers",
      "following_url": "https://api.github.com/users/joseortiz3/following{/other_user}",
      "gists_url": "https://api.github.com/users/joseortiz3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joseortiz3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joseortiz3/subscriptions",
      "organizations_url": "https://api.github.com/users/joseortiz3/orgs",
      "repos_url": "https://api.github.com/users/joseortiz3/repos",
      "events_url": "https://api.github.com/users/joseortiz3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joseortiz3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-09T20:31:50Z",
    "updated_at": "2017-04-09T23:03:50Z",
    "author_association": "NONE",
    "body": "Thanks for your help. But I don't think I'm successfully conveying what the problem is. I provided a suggestion, as per the rules.\r\n\r\nIn the end, I just had to iterate point-by-point to get what I want. Inefficient, but my time is worth more."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292878987",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15959#issuecomment-292878987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15959",
    "id": 292878987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mjg3ODk4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T08:09:47Z",
    "updated_at": "2017-04-10T08:09:47Z",
    "author_association": "MEMBER",
    "body": "@joseortiz3 Using a simpler example (without multi-indexes). What you are trying to do is this:\r\n\r\n```\r\nIn [14]: df = pd.DataFrame()\r\n\r\nIn [15]: df.loc[[1,2], [1,2,3]] = data\r\n...\r\nKeyError: '[1 2] not in index'\r\n```\r\n\r\nAnd indeed, this is not supported by pandas at the moment. \r\n\r\nBTW, if you don't know the keys in advance to create the dataframe, my suggestion would be to gather the data in something else (eg append a list, or a few lists for the data, index, columns), and only create the dataframe at the end."
  }
]
