[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373006468",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20342#issuecomment-373006468",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20342",
    "id": 373006468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzAwNjQ2OA==",
    "user": {
      "login": "ericmjl",
      "id": 2631566,
      "node_id": "MDQ6VXNlcjI2MzE1NjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2631566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericmjl",
      "html_url": "https://github.com/ericmjl",
      "followers_url": "https://api.github.com/users/ericmjl/followers",
      "following_url": "https://api.github.com/users/ericmjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericmjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericmjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericmjl/subscriptions",
      "organizations_url": "https://api.github.com/users/ericmjl/orgs",
      "repos_url": "https://api.github.com/users/ericmjl/repos",
      "events_url": "https://api.github.com/users/ericmjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericmjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T12:39:50Z",
    "updated_at": "2018-03-14T12:40:40Z",
    "author_association": "NONE",
    "body": "@woohoo! I'd love for this to come into pandas, so that I don't have to worry about implementing it in pyjanitor! (Issue on my own package, which I'm more than willing to close if this happens: https://github.com/ericmjl/pyjanitor/issues/8)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373006890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20342#issuecomment-373006890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20342",
    "id": 373006890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzAwNjg5MA==",
    "user": {
      "login": "ericmjl",
      "id": 2631566,
      "node_id": "MDQ6VXNlcjI2MzE1NjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2631566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ericmjl",
      "html_url": "https://github.com/ericmjl",
      "followers_url": "https://api.github.com/users/ericmjl/followers",
      "following_url": "https://api.github.com/users/ericmjl/following{/other_user}",
      "gists_url": "https://api.github.com/users/ericmjl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ericmjl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ericmjl/subscriptions",
      "organizations_url": "https://api.github.com/users/ericmjl/orgs",
      "repos_url": "https://api.github.com/users/ericmjl/repos",
      "events_url": "https://api.github.com/users/ericmjl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ericmjl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T12:41:29Z",
    "updated_at": "2018-03-14T12:41:29Z",
    "author_association": "NONE",
    "body": "Also, a hacky implementation to hopefully kickstart things: https://github.com/ericmjl/pyjanitor/blob/index-manipulation/janitor/functions.py#L324\r\n\r\nand\r\n\r\nhttps://github.com/ericmjl/pyjanitor/blob/index-manipulation/janitor/dataframe.py#L57"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373018532",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20342#issuecomment-373018532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20342",
    "id": 373018532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzAxODUzMg==",
    "user": {
      "login": "twiecki",
      "id": 674200,
      "node_id": "MDQ6VXNlcjY3NDIwMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/674200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/twiecki",
      "html_url": "https://github.com/twiecki",
      "followers_url": "https://api.github.com/users/twiecki/followers",
      "following_url": "https://api.github.com/users/twiecki/following{/other_user}",
      "gists_url": "https://api.github.com/users/twiecki/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/twiecki/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/twiecki/subscriptions",
      "organizations_url": "https://api.github.com/users/twiecki/orgs",
      "repos_url": "https://api.github.com/users/twiecki/repos",
      "events_url": "https://api.github.com/users/twiecki/events{/privacy}",
      "received_events_url": "https://api.github.com/users/twiecki/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T13:21:57Z",
    "updated_at": "2018-03-14T13:21:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @TomAugspurger! This would be a great addition.\r\n\r\nOne could make the same case for all other Index methods that return an index besides `rename_axis` and `droplevel()`, too. I wonder if it's worth thinking about a more general solution. E.g. something along the lines of a forward of `df.index_*() -> df.index = df.index.*()`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373092979",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20342#issuecomment-373092979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20342",
    "id": 373092979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzA5Mjk3OQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T16:47:45Z",
    "updated_at": "2018-03-14T16:51:51Z",
    "author_association": "MEMBER",
    "body": "Not against this, but will it have any different functionality than `reset_index` with `drop=True`?\r\n\r\nSeems like that covers what you'd want to do, unless I'm misinterpreting what this is supposed to do:\r\n```python\r\nIn [2]: df = pd.DataFrame(np.arange(16).reshape(4, 4), columns=list('abcd')).set_index(list('abc'))\r\n\r\nIn [3]: df\r\nOut[3]:\r\n           d\r\na  b  c\r\n0  1  2    3\r\n4  5  6    7\r\n8  9  10  11\r\n12 13 14  15\r\n\r\nIn [4]: df.reset_index(level=1, drop=True)\r\nOut[4]:\r\n        d\r\na  c\r\n0  2    3\r\n4  6    7\r\n8  10  11\r\n12 14  15\r\n\r\nIn [5]: df.reset_index(level='c', drop=True)\r\nOut[5]:\r\n        d\r\na  b\r\n0  1    3\r\n4  5    7\r\n8  9   11\r\n12 13  15\r\n\r\nIn [6]: df.reset_index(level=['a', 'c'], drop=True)\r\nOut[6]:\r\n     d\r\nb\r\n1    3\r\n5    7\r\n9   11\r\n13  15\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373109775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20342#issuecomment-373109775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20342",
    "id": 373109775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzEwOTc3NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T17:35:15Z",
    "updated_at": "2018-03-14T17:35:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, good point. I suspect that covers all the needs.\n\nThis would be good to document in reset_index and in MultiIndex.droplevel.\n\nOn Wed, Mar 14, 2018 at 11:47 AM, jschendel <notifications@github.com>\nwrote:\n\n> Not against this, but will it have any different functionality than\n> reset_index with drop=True?\n>\n> Seems like that covers a lot of what you'd want to do:\n>\n> In [2]: df = pd.DataFrame(np.arange(16).reshape(4, 4), columns=list('abcd')).set_index(list('abc'))\n>\n> In [3]: df\n> Out[3]:\n>            d\n> a  b  c0  1  2    34  5  6    78  9  10  1112 13 14  15\n>\n> In [4]: df.reset_index(level=1, drop=True)\n> Out[4]:\n>         d\n> a  c0  2    34  6    78  10  1112 14  15\n>\n> In [5]: df.reset_index(level='c', drop=True)\n> Out[5]:\n>         d\n> a  b0  1    34  5    78  9   1112 13  15\n>\n> In [6]: df.reset_index(level=['a', 'c'], drop=True)\n> Out[6]:\n>      d\n> b1    35    79   1113  15\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/20342#issuecomment-373092979>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIg2mu7QcbSgsWAfFPM-vKhZmLflmks5teUm2gaJpZM4SqWfj>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396004683",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20342#issuecomment-396004683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20342",
    "id": 396004683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjAwNDY4Mw==",
    "user": {
      "login": "tliu30",
      "id": 1294416,
      "node_id": "MDQ6VXNlcjEyOTQ0MTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1294416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tliu30",
      "html_url": "https://github.com/tliu30",
      "followers_url": "https://api.github.com/users/tliu30/followers",
      "following_url": "https://api.github.com/users/tliu30/following{/other_user}",
      "gists_url": "https://api.github.com/users/tliu30/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tliu30/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tliu30/subscriptions",
      "organizations_url": "https://api.github.com/users/tliu30/orgs",
      "repos_url": "https://api.github.com/users/tliu30/repos",
      "events_url": "https://api.github.com/users/tliu30/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tliu30/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T22:59:15Z",
    "updated_at": "2018-06-09T22:59:15Z",
    "author_association": "NONE",
    "body": "Don't think it totally covers everything...sometimes find a need to drop a column-index level, and i don't think reset_index supports columns (for good reason)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404489545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20342#issuecomment-404489545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20342",
    "id": 404489545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDQ4OTU0NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T12:05:18Z",
    "updated_at": "2018-07-12T12:05:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jschendel had a good point that this will overlap with `reset_index` with `drop=True`. The advantages of a dedicated `droplevel` being\r\n\r\n* `droplevel` is just for dropping a level, whereas `reset_index` can drop or insert\r\n* `droplevel` can drop on either axis.\r\n\r\nI don't have a strong opinion on whether we should add it, or better document reset_index."
  }
]
