[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406299037",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-406299037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 406299037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjI5OTAzNw==",
    "user": {
      "login": "hexgnu",
      "id": 138510,
      "node_id": "MDQ6VXNlcjEzODUxMA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/138510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hexgnu",
      "html_url": "https://github.com/hexgnu",
      "followers_url": "https://api.github.com/users/hexgnu/followers",
      "following_url": "https://api.github.com/users/hexgnu/following{/other_user}",
      "gists_url": "https://api.github.com/users/hexgnu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hexgnu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hexgnu/subscriptions",
      "organizations_url": "https://api.github.com/users/hexgnu/orgs",
      "repos_url": "https://api.github.com/users/hexgnu/repos",
      "events_url": "https://api.github.com/users/hexgnu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hexgnu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T14:37:12Z",
    "updated_at": "2018-07-19T14:37:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't see many things relying on SparseArray being an ndarray. Mostly I've seen SparseArray show up out of using a SparseSeries.\r\n\r\nAlso I'm a fan of clean breaks, although I could imagine someone would show up complaining about something regressing so we'd have to be prepared for that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406301101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-406301101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 406301101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMwMTEwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T14:42:56Z",
    "updated_at": "2018-07-19T14:42:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "even though i normally prefer backwards compat\r\n\r\nsparse is holding us back and SparseArray as an EA will allow much internal cleanup \r\n\r\nI think ok to just push this change thru - with a note in the whatsnew"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406303246",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-406303246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 406303246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMwMzI0Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T14:48:59Z",
    "updated_at": "2018-07-19T14:48:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to be clear, things *should* be backwards compatible at the the pandas\nlevel. I don't expect to break much, if anything, once the SparseArray is\nwrapped in a Series / DataFrame (or SparseSeries / SparseDataFrame).\n\nOn Thu, Jul 19, 2018 at 9:43 AM Jeff Reback <notifications@github.com>\nwrote:\n\n> even though i normally prefer backwards compat\n>\n> sparse is holding us back and SparseArray as an EA will allow much\n> internal cleanup\n>\n> I think ok to just push this change thru - with a note in the whatsnew\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/21978#issuecomment-406301101>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIibG35eYFC0EYtFRs7vmNOlHDYgfks5uIJr2gaJpZM4VWQlf>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406548678",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-406548678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 406548678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjU0ODY3OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T09:45:04Z",
    "updated_at": "2018-07-20T09:45:04Z",
    "author_association": "MEMBER",
    "body": "I personally also don't think it is necessarily a problem to no longer subclass, but as Tom, I don't use sparse so hard to really say. \r\n\r\nBut, on the other hand, it would maybe be nice that it is actually *possible* to use ndarray subclasses in our ExtensionArray interface? In that sense this might be a good test case. \r\n\r\nWhat is exactly not working with our interface? \r\nYou mention `asarray`, but that is something we have to fix anyway given the discussion in #14167?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406567183",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-406567183",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 406567183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjU2NzE4Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T10:58:45Z",
    "updated_at": "2018-07-20T10:58:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But, on the other hand, it would maybe be nice that it is actually possible to use ndarray subclasses in our ExtensionArray interface? In that sense this might be a good test case.\r\n\r\nAgreed. They should be compatible, but I never got past `np.asarray(sparse_array)` only returning dense values. I can't figure out *where* things are going wrong, but I assume it's at the C level. I'd rather not have to write the EA in C / Cython."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406571693",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-406571693",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 406571693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjU3MTY5Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T11:19:14Z",
    "updated_at": "2018-07-20T11:19:14Z",
    "author_association": "MEMBER",
    "body": "> but I never got past np.asarray(sparse_array) only returning dense values. \r\n\r\nBut I think we agree that we want to change this (see #14167)\r\n\r\n>  I can't figure out where things are going wrong, but I assume it's at the C level.\r\n\r\nI suppose this is because the actual 'ndarray' is only the non-fills, the 'subclass' part then adds `sp_index` attribute and some methods to interpret the values of itself in light of `sp_index`. \r\n\r\nFor  #14167, the question is if we only want to 'fix' `SparseSeries.__array__` or also `SparseArray.__array__`. But I am not sure if subclassing ndarray still makes sense then (as subclassing should mean you follow the memory model, otherwise making a duck array is more logical I think?)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406580869",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-406580869",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 406580869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjU4MDg2OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T12:05:00Z",
    "updated_at": "2018-07-20T12:05:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I suppose this is because the actual 'ndarray' is only the non-fills, the 'subclass' part then adds sp_index attribute and some methods to interpret the values of itself in light of sp_index.\r\n\r\nAh, yes you're right. The line `result = data.view(cls)` is likely what's doing it. `data` is the observed values, and `cls` is `SparseArray`.\r\n\r\n> (as subclassing should mean you follow the memory model, otherwise making a duck array is more logical I think?)\r\n\r\nAgreed. I'll put up a WIP PR that tries to clean things up by not subclassing ndarray (early next week probably)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408513877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-408513877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 408513877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODUxMzg3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T19:14:46Z",
    "updated_at": "2018-07-27T19:14:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some notes on difficulties with the current EA API for sparse:\r\n\r\n1. unique: `ExtensionArray.unique` expects the output type to the same. That doesn't really make sense for `SparseArray`, we'd like to return a regular ndarray.\r\n2. factorize: `ExtensionArray.factorize` returns `(labels, uniques)` of types `(ndarray, extension_array)`. It'd be *nice* if the `labels` could be an extension array, since we'd like to return a `SparseArray` for labels (and maybe an ndarray for uniques).\r\n\r\nwill add more notes later."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408539806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-408539806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 408539806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODUzOTgwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T21:11:25Z",
    "updated_at": "2018-07-27T21:11:25Z",
    "author_association": "MEMBER",
    "body": "> unique: ExtensionArray.unique expects the output type to the same.\r\n\r\nThat's indeed in the example implementation (and I assume in the tests as well), but are there for the rest cases that we require that? Because other dtypes in pandas also give numpy arrays (so I mean in general that does not necessarily need to be a problem)\r\n\r\n> factorize: It'd be nice if the labels could be an extension array, since we'd like to return a SparseArray for labels\r\n\r\nAh, yes, that's a good point. The question is then maybe how this would be used? Because typically it is used as an indexer, or as the codes for a categorical, and for that sparse is probably not that useful? \r\nFor a groupby it's maybe more useful. Do you have any idea what functionality of the label array is used there?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410471525",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-410471525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 410471525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ3MTUyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-04T19:15:47Z",
    "updated_at": "2018-08-06T14:00:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "(note to self/others): List of behavior changes\r\n\r\n1. SparseArray is no longer a subclass of ndarray\r\n2. SparseArray.dtype is no longer a numpy dtype. Use SparseArray.dtype.subdtype\r\n3. np.array(SparseArray) contains all the values, not just the non-fill values\r\n4. Constructing a SpraseArray with `data` and `sparse_index` will correctly infer `fill_value` from `data`, rather than always using `nan`.\r\n5. SparseArray.fillna(method='ffill' / 'bfill') now issues a PerformanceWarning about converting to dense values.\r\n6. passing ``fill_value`` to ``SparseArray.take`` no longer implies ``allow_fill=True``.\r\n7. ``SparseArray.astype(np.dtype)`` will create a dense NumPy array. To keep astype to a SparseArray with\r\n  a different subdtype, use ``.astype(sparse_dtype)`` or a string like ``.astype('Sparse[float32]')``.\r\n\r\n\r\nexpanding on 4: Our handling of `fill_value` is strange when `sparse_index` is specified. With 0.23.3\r\n\r\n```python\r\nIn [4]: pd.SparseArray([1, 2])\r\nOut[4]:\r\n[1, 2]\r\nFill: 0\r\nIntIndex\r\nIndices: array([0, 1], dtype=int32)\r\n\r\nIn [5]: pd.SparseArray([1, 2], sparse_index=pd.core.sparse.array.IntIndex(4, [1, 2]))\r\nOut[5]:\r\n[nan, 1.0, 2.0, nan]\r\nFill: nan\r\nIntIndex\r\nIndices: array([1, 2], dtype=int32)\r\n```\r\n\r\nI don't think specifying `sparse_index` should change the inferred fill value. I'd expect \r\n\r\n```python\r\nIn [2]: pd.SparseArray([1, 2], sparse_index=pd.core.sparse.array.IntIndex(4, [1, 2]))\r\n   ...:\r\nOut[2]:\r\n[0, 1, 2, 0]\r\nFill: 0\r\nIntIndex\r\nIndices: array([1, 2], dtype=int32)\r\n```\r\n\r\nI'll update as I go.\r\n\r\nFYI, right now I'm just listing these. Some of them (e.g. `.astype(np.dtype)` can be deprecated gracefully. Others, I'm not so sure about."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411112134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-411112134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 411112134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTExMjEzNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T16:09:18Z",
    "updated_at": "2018-08-07T16:09:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "WIP https://github.com/TomAugspurger/pandas/tree/ea-sparse-2\r\n\r\nthe sparse extension tests pass, but lots of stuff is currently broken elsewhere. Won't have as much time to work on this in the near future if anyone wants to pick it up. Otherwise, I'll return to it later."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411865582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-411865582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 411865582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTg2NTU4Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T19:12:25Z",
    "updated_at": "2018-08-09T19:12:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, so `SparseArray` and `SparseSeries` default to different sparse `kind`s. Any objections to making those match? Any preferences on `integer` vs. `block`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412539450",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-412539450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 412539450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjUzOTQ1MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T14:33:45Z",
    "updated_at": "2018-08-13T14:33:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "`sparse_reindex` seems buggy. Anyone have an idea what it's supposed to do? (this is in our test suite. probably xfailling for now).\r\n\r\n\r\n```python\r\nIn [71]: s = pd.SparseSeries(np.arange(6, dtype='f8'))\r\n\r\nIn [72]: s\r\nOut[72]:\r\n0    0.0\r\n1    1.0\r\n2    2.0\r\n3    3.0\r\n4    4.0\r\n5    5.0\r\ndtype: float64\r\nBlockIndex\r\nBlock locations: array([0], dtype=int32)\r\nBlock lengths: array([6], dtype=int32)\r\n\r\nIn [73]: s.sparse_reindex(pd.core.sparse.array.IntIndex(10, [2, 4, 5]))\r\nOut[73]:\r\n0    NaN\r\n1    NaN\r\n2    2.0\r\n3    NaN\r\n4    4.0\r\n5    5.0\r\n     NaN\r\n     NaN\r\n     NaN\r\n     NaN\r\ndtype: float64\r\nIntIndex\r\nIndices: array([2, 4, 5], dtype=int32)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412541930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-412541930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 412541930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU0MTkzMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T14:40:45Z",
    "updated_at": "2018-08-13T14:40:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, seems to be used in `pandas.core.sparse.frame.homogenize`, which I've never heard of before..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412566887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-412566887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 412566887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU2Njg4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:52:21Z",
    "updated_at": "2018-08-13T15:52:21Z",
    "author_association": "MEMBER",
    "body": "That let me wonder: should this be public? Or more in general, are the sparse index objects considered public? (you can pass it in the `SparseSeries` constructor currently, but the objects are never used in the docs / not exposed top-level)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412568247",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21978#issuecomment-412568247",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21978",
    "id": 412568247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU2ODI0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:56:12Z",
    "updated_at": "2018-08-13T15:56:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, they're not in the official public API, but they were likely not considered in the `pandas.core` privatization shuffle.\r\n \r\nSo, I don't really know. I suppose it depends on if people find them useful (@hexgnu @kernc @Licht-T), otherwise I would default to making them private implementation details of SparseArray."
  }
]
