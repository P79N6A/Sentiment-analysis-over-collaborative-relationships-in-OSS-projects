[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14656291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14656291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14656291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjU2Mjkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T02:18:27Z",
    "updated_at": "2013-03-09T02:18:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a workaround for solving your particular issue. \n\nThe problem is passing a tuple of indexers is tantamount to this:\n\n`df.ix[row_indexer,col_indexer]`  generates this `tuple(row_indexer,col_indexer)`\n\nso passing a tuple is ambiguous; this is handled for a len 2 tuple however (there is currently no method to 'decide' if you are passing a tuple to index axis=0 with a tuple on a multi-index or index axis0 and axis1)\n\n```\nThis is ambiguous (and is indexing on axis0 for loc0 but axis1 for loc[1])\nIn [14]: df.ix[loc[0],loc[1]]\nOut[14]: \nA1  A2  A3  A4\n0   0   2   0     3\n2   0   1   3     1\n3   1   3   3     0\n0   1   3   3     1\n2   1   1   4     0\n0   2   2   3     2\n1   2   4   1     2\n2   3   2   2     3\n4   4   4   3     2\n3   3   0   0     2\n2   4   0   1     1\n    3   3   3     0\n4   3   0   1     0\n2   3   3   4     1\n    0   2   4     0\n...\n4   3   1   3     2\n0   0   4   1     2\n2   0   4   3     1\n    1   4   4     2\n    4   3   2     4\n0   2   2   3     2\n3   4   1   1     2\n    1   3   3     4\n2   1   0   1     0\n            3     2\n3   4   4   2     0\n1   4   2   2     0\n2   0   1   1     0\n1   2   2   3     4\n3   4   1   4     3\nName: A9, Length: 19888, dtype: int64\n\nThis is what I think you actually want\nIn [8]: df.ix[loc[0]].ix[loc[1]]\nOut[8]: \n<class 'pandas.core.frame.DataFrame'>\nMultiIndex: 4009 entries, (4, 4, 3) to (3, 1, 3)\nData columns:\nA5    4009  non-null values\nA6    4009  non-null values\nA7    4009  non-null values\nA8    4009  non-null values\nA9    4009  non-null values\ndtypes: int64(5)\n\nDefine this function\n\ndef partial_indexer(df, tup, axis=0):\n            if not isinstance(tup, (tuple,list)):\n                raise Exception(\"must pass a tuple or a list\")\n            if len(tup) > df.index.levels:\n                raise Exception(\"too many indexing levels\")\n\n            for i, key in enumerate(tup):\n                df = df.xs(key, axis=axis)\n            return df\n\nIn [9]: partial_indexer(df,loc[0:2])\nOut[9]: \n<class 'pandas.core.frame.DataFrame'>\nMultiIndex: 4009 entries, (4, 4, 3) to (3, 1, 3)\nData columns:\nA5    4009  non-null values\nA6    4009  non-null values\nA7    4009  non-null values\nA8    4009  non-null values\nA9    4009  non-null values\ndtypes: int64(5)\n\nIn [10]: partial_indexer(df,loc)\nOut[10]: \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 210 entries, 3 to 1\nData columns:\nA5    210  non-null values\nA6    210  non-null values\nA7    210  non-null values\nA8    210  non-null values\nA9    210  non-null values\ndtypes: int64(5)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14657932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14657932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14657932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjU3OTMy",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T04:39:12Z",
    "updated_at": "2013-03-09T04:39:12Z",
    "author_association": "NONE",
    "body": "Good catch on the df.ix[loc[0],loc[1]] not correctly selecting what I intended. Indeed I meant to select df.ix[loc[0]].ix[loc[1]]. Thanks for the partial_indexer function.\n\nIf the df.ix[row, col] method converts the index arguments to a tuple(row, col) are the following correctly interpreted as I have shown:\n\ndf.ix[1, 4, 1, 3, :] correctly partially selects the data.\n(1,4,1,3, slice(None, None, None))\n\ndf.ix[(1, 4, 1, 3), :] does not work Key Error\n((1, 4, 1, 3), slice(None, None, None))\n\ndf.ix[1, 4, 1, 3, 1] does not work --> Too many Indexers. Not sure how to partially select using all indices.\n(1, 4, 1, 3, 1)\n\ndf.ix[1, 4, 1, 3, 1, :] does not work either --> Too many Indexers\n\nbut this works... df.ix[df[0:1].index] \nSelecting by one MultiIndex and does not drop the index columns and correctly returns the partial data. \n\nPerhaps it would make sense to accept a tuple of tuples to partition the row/col selections.\n\n((ordered tuple of row indexers),(ordered tuple of col indexers)) \n\nthen the outer tuple can be unpacked and you have two separate objects for partially selecting from both rows and cols.\n\n-Gagi\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14670004",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14670004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14670004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjcwMDA0",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T20:30:57Z",
    "updated_at": "2013-03-09T20:30:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "These are scenarios where i prefer `xs` over `ix`. Also with `xs` user has control of copy versus view.\n\n``` python\nIn [44]: df.xs([loc[0], loc[1]], level=[0, 1])\nOut[44]: \n<class 'pandas.core.frame.DataFrame'>\nMultiIndex: 4003 entries, (0, 2, 3) to (2, 4, 4)\nData columns:\nA5    4003  non-null values\nA6    4003  non-null values\nA7    4003  non-null values\nA8    4003  non-null values\nA9    4003  non-null values\ndtypes: int64(5)\n```\n\n```\nIn [45]: df.xs([loc[1], loc[3]], level=[1, 3])\nOut[45]: \n<class 'pandas.core.frame.DataFrame'>\nMultiIndex: 4055 entries, (2, 2, 3) to (3, 1, 1)\nData columns:\nA5    4055  non-null values\nA6    4055  non-null values\nA7    4055  non-null values\nA8    4055  non-null values\nA9    4055  non-null values\ndtypes: int64(5)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14699192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14699192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14699192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Njk5MTky",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-11T06:24:39Z",
    "updated_at": "2013-03-11T06:24:39Z",
    "author_association": "NONE",
    "body": "I see that df.xs does seem to support partial indexing as expected. Is it possible to call df.xs without explicitly passing the level? I level is not passed could it default to a list from 1 to the number of dimensions passed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14707409",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14707409",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14707409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzA3NDA5",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-11T11:07:17Z",
    "updated_at": "2013-03-11T11:07:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "It should default to the first n levels (n=length of the key), but it does not (at least not on master any more, see also #1796).\n\n``` python\nIn [28]: df.xs([loc[0], loc[1]])\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n...\nKeyError: 'MultiIndex lexsort depth 0, key was length 2'\n\nIn [29]: df.xs([loc[0], loc[1]], level=[0, 1])\nOut[29]:\n<class 'pandas.core.frame.DataFrame'>\nMultiIndex: 4047 entries, (2, 1, 3) to (1, 1, 0)\nData columns:\nA5    4047  non-null values\nA6    4047  non-null values\nA7    4047  non-null values\nA8    4047  non-null values\nA9    4047  non-null values\ndtypes: int64(5)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14726105",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14726105",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14726105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzI2MTA1",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-11T17:09:17Z",
    "updated_at": "2013-03-11T17:09:17Z",
    "author_association": "NONE",
    "body": "With a similar DataFrame as above, df.xs can't partially select rows where the passed tuple length equals the total number of levels in the MultIndex. For example below we know (0, 1, 0, 4, 3) will return at least the first row of the data set. Using df.xs cant access rows indexed by (0, 1, 0, 4, 3). However using df.ix[df[0:1].index] to directly access rows that match the first rows index works.\n\n``` python\n\nIn [35]: df\nOut[35]: <class 'pandas.core.frame.DataFrame'>\nMultiIndex: 100000 entries, (0, 1, 0, 4, 3) to (2, 0, 4, 1, 1)\nData columns:\nA5    100000  non-null values\nA6    100000  non-null values\nA7    100000  non-null values\nA8    100000  non-null values\nA9    100000  non-null values\ndtypes: int64(5)\n\nIn [36]: loc\nOut[36]: (2, 3, 2, 4)\n\nIn [37]: df.xs(loc, level=[0,1,2,3])\nOut[37]: <class 'pandas.core.frame.DataFrame'>\nInt64Index: 201 entries, 1 to 3\nData columns:\nA5    201  non-null values\nA6    201  non-null values\nA7    201  non-null values\nA8    201  non-null values\nA9    201  non-null values\ndtypes: int64(5)\n\nIn [38]: df.xs((0, 1, 0, 4, 3), level=[0,1,2,3,4])\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-38-d8180b507e6b> in <module>()\n----> 1 df.xs((0, 1, 0, 4, 3), level=[0,1,2,3,4])\n\nC:\\Python27\\lib\\site-packages\\pandas\\core\\frame.py in xs(self, key, axis, level, copy)\n   2291         labels = self._get_axis(axis)\n   2292         if level is not None:\n-> 2293             loc, new_ax = labels.get_loc_level(key, level=level)\n   2294 \n   2295             if not copy and not isinstance(loc, slice):\n\nC:\\Python27\\lib\\site-packages\\pandas\\core\\index.py in get_loc_level(self, key, level)\n   2243 \n   2244                 result = loc if result is None else result & loc\n-> 2245             return result, _drop_levels(result, level)\n   2246 \n   2247         level = self._get_level_number(level)\n\nC:\\Python27\\lib\\site-packages\\pandas\\core\\index.py in _drop_levels(indexer, levels)\n   2227             levels = [self._get_level_number(i) for i in levels]\n   2228             for i in sorted(levels, reverse=True):\n-> 2229                 new_index = new_index.droplevel(i)\n   2230             return new_index\n   2231 \n\nAttributeError: 'Int64Index' object has no attribute 'droplevel'\n\nIn [39]: df.ix[df[0:1].index]\nOut[39]:                 A5  A6  A7  A8  A9\nA0 A1 A2 A3 A4                    \n0  1  0  4  3    1   1   0   4   2\n            3    1   1   3   1   0\n            3    3   2   3   0   0\n            3    4   3   1   1   1\n            3    2   0   1   2   1\n            3    4   1   1   2   4\n            3    0   4   2   1   0\n            3    2   0   2   0   4\n            3    0   0   3   0   3\n            3    1   0   1   2   3\n            3    2   0   3   0   3\n            3    1   3   4   2   3\n            3    3   1   0   1   2\n            3    0   0   1   4   0\n            3    3   1   3   1   4\n            3    4   0   2   2   1\n            3    2   1   0   1   2\n            3    0   1   4   3   2\n            3    4   0   4   4   3\n            3    1   4   0   4   0\n            3    2   1   3   3   0\n            3    3   2   1   0   4\n            3    1   2   0   1   3\n            3    4   1   0   1   4\n            3    3   2   0   0   0\n            3    3   3   3   1   0\n            3    0   0   0   0   3\n            3    1   0   1   0   2\n            3    2   3   2   1   0\n            3    3   0   3   2   4\n            3    3   0   3   3   3\n            3    1   3   4   0   1\n            3    4   4   0   1   4\n            3    0   0   4   3   2\n            3    1   1   2   4   2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14803886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14803886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14803886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODAzODg2",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T21:15:20Z",
    "updated_at": "2013-03-12T21:15:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that your DataFrame has an unsorted index (i somehow did not notice this before). This is important when slicing/indexing on a MultiIndex. For details see [\"The need for sortedness\"](http://pandas.pydata.org/pandas-docs/dev/indexing.html#the-need-for-sortedness)\n\n``` python\nIn [156]: df\nOut[156]: \n<class 'pandas.core.frame.DataFrame'>\nMultiIndex: 100000 entries, (4, 0, 0, 2, 2) to (1, 4, 1, 2, 0)\nData columns:\nA5    100000  non-null values\nA6    100000  non-null values\nA7    100000  non-null values\nA8    100000  non-null values\nA9    100000  non-null values\ndtypes: int64(5)\n\nIn [157]: df.index.lexsort_depth\nOut[157]: 0\n\nIn [158]: df.xs((0,0,0,0,0))\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n...\nKeyError: 'MultiIndex lexsort depth 0, key was length 5'\n\nIn [159]: dfs = df.sort_index()  # sort the index\n\nIn [160]: dfs.index.lexsort_depth\nOut[160]: 5\n\nIn [161]: dfs.xs((0,0,0,0,0))\nOut[161]: \n                A5  A6  A7  A8  A9\nA0 A1 A2 A3 A4                    \n0  0  0  0  0    4   1   0   1   3\n            0    3   0   3   2   4\n            0    4   0   2   2   0\n            0    1   4   4   1   3\n            0    4   4   2   3   0\n            0    4   1   0   3   4\n            0    3   4   3   3   1\n            0    1   3   2   4   2\n            0    1   1   3   1   2\n            0    2   3   2   3   4\n            0    3   3   2   2   2\n            0    4   0   1   3   0\n            0    2   1   4   1   0\n            0    4   1   3   2   1\n            0    3   4   2   0   2\n            0    3   4   2   4   1\n            0    4   4   3   2   3\n            0    3   4   4   0   0\n            0    3   1   4   1   1\n            0    2   4   0   1   4\n            0    4   4   2   3   2\n            0    4   2   0   1   0\n            0    1   4   4   0   3\n            0    0   0   1   0   3\n            0    3   1   1   1   0\n            0    4   3   1   4   2\n            0    0   4   1   2   3\n            0    1   4   3   4   3\n```\n\nGoing back to your original examples, the failing parts work fine after sorting\n\n``` python\nIn [168]: dfs.ix[loc]\nOut[168]: \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 164 entries, 0 to 4\nData columns:\nA5    164  non-null values\nA6    164  non-null values\nA7    164  non-null values\nA8    164  non-null values\nA9    164  non-null values\ndtypes: int64(5)\n\nIn [169]: dfs.ix[loc[0], loc[1], loc[2]]\nOut[169]: \n<class 'pandas.core.frame.DataFrame'>\nMultiIndex: 785 entries, (0, 0) to (4, 4)\nData columns:\nA5    785  non-null values\nA6    785  non-null values\nA7    785  non-null values\nA8    785  non-null values\nA9    785  non-null values\ndtypes: int64(5)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14809965",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14809965",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14809965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODA5OTY1",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T22:28:22Z",
    "updated_at": "2013-03-12T22:46:47Z",
    "author_association": "NONE",
    "body": "Great catch lodagro! Sorting the hierarchical index did fix the df.ix and df.xs methods. The fluke indexing working when appending the null slice was just serving to confuse me further. \n\nFor a future release it might make sense to have a default bool sort_index parameter when calling df.set_index() ensuring that a sorted index is returned.\n\nIssue closed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14815532",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14815532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14815532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODE1NTMy",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-13T00:50:41Z",
    "updated_at": "2013-03-13T00:50:41Z",
    "author_association": "NONE",
    "body": "I was playing around with the partial selection and I ran into an inconsistency with how partially selected data frames are returned. When selecting using a subset of levels you get a df is returned with the fixed/selected levels dropped. When you partially select using a tuple on all levels you get a data frame with all indices returned.\n\nIs there a way to return all indices when sub-selecting on a subset of levels? Is there a way to not return the entire hierarchical index when selecting across all levels?\n\nWith a df similar to the one above, indexed using 5 integer columns and with the hierarchical indices sorted.\n\n``` python\n\nIn [79]: df\nOut[79]: <class 'pandas.core.frame.DataFrame'>\nMultiIndex: 100000 entries, (0, 0, 0, 0, 0) to (4, 4, 4, 4, 4)\nData columns:\nA5    100000  non-null values\nA6    100000  non-null values\nA7    100000  non-null values\nA8    100000  non-null values\nA9    100000  non-null values\ndtypes: int64(5)\n\nIn [80]: df.ix[(0)]\nOut[80]: <class 'pandas.core.frame.DataFrame'>\nMultiIndex: 20011 entries, (0, 0, 0, 0) to (4, 4, 4, 4)\nData columns:\nA5    20011  non-null values\nA6    20011  non-null values\nA7    20011  non-null values\nA8    20011  non-null values\nA9    20011  non-null values\ndtypes: int64(5)\n\nIn [81]: df.ix[(0,1)]\nOut[81]: <class 'pandas.core.frame.DataFrame'>\nMultiIndex: 4007 entries, (0, 0, 0) to (4, 4, 4)\nData columns:\nA5    4007  non-null values\nA6    4007  non-null values\nA7    4007  non-null values\nA8    4007  non-null values\nA9    4007  non-null values\ndtypes: int64(5)\n\nIn [82]: df.ix[(0,1,2)]\nOut[82]: <class 'pandas.core.frame.DataFrame'>\nMultiIndex: 817 entries, (0, 0) to (4, 4)\nData columns:\nA5    817  non-null values\nA6    817  non-null values\nA7    817  non-null values\nA8    817  non-null values\nA9    817  non-null values\ndtypes: int64(5)\n\nIn [83]: df.ix[(0,1,2,3)]\nOut[83]: <class 'pandas.core.frame.DataFrame'>\nInt64Index: 162 entries, 0 to 4\nData columns:\nA5    162  non-null values\nA6    162  non-null values\nA7    162  non-null values\nA8    162  non-null values\nA9    162  non-null values\ndtypes: int64(5)\n\nIn [84]: df.ix[(0,1,2,3,4)]\nOut[84]:                 A5  A6  A7  A8  A9\nA0 A1 A2 A3 A4                    \n0  1  2  3  4    1   2   2   4   2\n            4    1   4   4   1   0\n            4    2   1   4   1   3\n            4    2   4   2   1   1\n            4    1   1   2   1   4\n            4    0   0   2   1   1\n            4    2   0   0   3   1\n            4    2   2   3   3   1\n            4    3   0   3   4   1\n            4    1   1   0   0   1\n            4    2   1   0   2   4\n            4    3   4   1   2   3\n            4    0   4   3   1   0\n            4    4   1   4   1   2\n            4    1   3   4   3   3\n            4    0   1   1   3   1\n            4    2   2   2   0   3\n            4    0   0   1   4   0\n            4    1   0   1   4   2\n            4    1   4   2   2   0\n            4    4   2   0   3   1\n            4    2   1   2   3   2\n            4    4   2   0   1   4\n            4    1   4   1   1   4\n            4    1   0   1   2   4\n            4    2   3   0   1   3\n            4    2   1   3   3   3\n            4    1   2   0   4   2\n            4    3   0   4   4   0\n            4    4   4   2   3   0\n            4    0   0   1   3   2\n            4    4   0   0   0   3\n            4    2   0   3   4   2\n            4    3   3   3   0   2\n            4    4   2   2   0   1\n            4    2   1   3   4   0\n\nIn [86]: df.index.lexsort_depth\nOut[86]: 5\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14930616",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14930616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14930616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTMwNjE2",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-14T21:31:31Z",
    "updated_at": "2013-03-14T21:31:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is no way to control how the index is returned with xs, either full partial or not.\n\nfyi to remove the index you can do `df.reset_index(drop=True)`\n\nSince the discussion has moved away from the original issue (which is resolved i think), would it be ok for you to close this issue and if needed open a new one?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14937662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2995#issuecomment-14937662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2995",
    "id": 14937662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM3NjYy",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-15T00:25:10Z",
    "updated_at": "2013-03-15T00:25:10Z",
    "author_association": "NONE",
    "body": "Closing this issue and opened new issue  #3057 for controlling what index levels are returned when sub-selecting.\n"
  }
]
