[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321568398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-321568398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 321568398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTU2ODM5OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T14:29:31Z",
    "updated_at": "2017-08-10T14:29:31Z",
    "author_association": "MEMBER",
    "body": "A big +1 to add a more convenient way to do achieve string formatting. However, IMO it might be cleaner to have it as a separate `format` method instead of overloading `astype` (although we do this overloading already for 'category' dtype as well)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321657863",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-321657863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 321657863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTY1Nzg2Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T20:01:12Z",
    "updated_at": "2017-08-10T20:01:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #15550\r\n\r\nPersonally I'm not a huge of the overloaded `astype`  (even our existing uses) as it is at times difficult to reason about going back and forth with numpy.  That said it is convenient and generally does what people actually want.\r\n\r\nI'm not sure this is the right api, but in #15550 I suggested something like this to split out the numpy behavior and pandas overrides\r\n```\r\ns.type.astype(....) <- does exactly what numpy does\r\ns.type.to_datetime\r\ns.type.to_string(format=...)\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321672111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-321672111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 321672111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTY3MjExMQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T21:01:04Z",
    "updated_at": "2017-08-10T21:02:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche , a ``.format`` method was my first thought too, but I felt the API got too fragmented:\r\n* ``.astype(dtype)`` for most conversions,\r\n* ``.astype('category', ordered=..., categories=...)`` for categorical series,\r\n* ``.format(...)`` for strings,\r\n* maybe ``pd.to_numeric(...)`` for converting to numeric type\r\n\r\nIn addition, if we have a ``.format``, why not also have ``.to_category``, ``.to_numeric`` etc. and the API gets unwieldy quickly. I'd much prefer to keep conversions in one namespace, to make it easier to learn the conversion API.\r\n\r\nI find @chris-b1 's idea very, very appealing, and it is kind of similar to how ``.plot`` already does it. I'm negative on the name ``type`` though, as it might be confused with ``.dtype`` and also the Python function ``type``. Otherwise I'm +1.\r\n\r\nAn idea: could ``.astype`` just be the catch-all (almost as today) and we set attributes on that to be specific methods? So:\r\n* ``.astype(...)`` (catchall, mostly like today),\r\n* ``.astype.str(...)`` (my proposal above wrt. strings),\r\n* ``.astype.category(...)`` (like current ``.astype('category', ...)`` behaviour),\r\n* ``.astype.datetime(...)`` (to datetime),\r\n* ``.astype.numeric(...)`` (to numeric),\r\n* etc...\r\n\r\nThis is **very** similar to how ``.plot`` does it, which I count as a big positive."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321691563",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-321691563",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 321691563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTY5MTU2Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T22:33:51Z",
    "updated_at": "2017-08-10T22:33:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, the `.astype('category', ordered...)` won't be nescessary once https://github.com/pandas-dev/pandas/pull/16015 is finished. I'd rather not overload `.astype` any more."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321704155",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-321704155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 321704155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTcwNDE1NQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-10T23:59:03Z",
    "updated_at": "2017-08-10T23:59:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, closed by accident."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321969087",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-321969087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 321969087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTk2OTA4Nw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-12T09:32:45Z",
    "updated_at": "2017-08-12T09:32:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "From the there seemes to be support for the *idea*, but the **API** for type conversions has not been settled. This issue is primarily on a ``format`` parameter in ``.astype``, while a larger API discussion is in #15550 already.\r\n\r\nProbably the API discussion needs to be finished first, and then the ``format`` functionality should follow from that, that is; I need to wait a little with this?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321989857",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-321989857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 321989857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTk4OTg1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-12T16:01:52Z",
    "updated_at": "2017-08-12T16:01:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "adding parameters to ``.astype()`` is not a great idea. We already have\r\n\r\n``.to_string(...)`` and could support some kind of ``.astype(str).str.format(..)`` I suppose.\r\n\r\nwhy are you wanting to add complexity to an this API?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322001002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-322001002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 322001002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjAwMTAwMg==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-12T19:27:59Z",
    "updated_at": "2017-08-12T19:27:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "A ``num_series.astype(str).str.format('{+.1f}')`` solution wouldn't work, as the format string ``'{+.1f}'`` requires number as input, and in the ``astype`` step we've already casted into strings. So the format-string needs to be supplied at the same time as the casting into strings, not after.\r\n\r\nThe closest equivalent as far as I know would require an apply: ``num_series.apply('{+.1f}'.format)``. I don't think there is any way around ``.apply`` ATM for custom formatting of numbers into strings, and the need for such formatting is quite common (e.g. for data presentation).\r\n\r\nAnyway, I understand that I'm clearly in the minority wrt. adding a ``format`` parameter to ``astype``. Do you think there's some other acceptable solution, or am I wrong in my understanding, that ``apply`` is the only current way to achieve this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322429533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-322429533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 322429533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjQyOTUzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-15T10:04:09Z",
    "updated_at": "2017-08-15T10:04:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is pretty much a special case. ``.apply`` is fine here. ``.to_string()`` is still the canonical output formatter, which *does* have a ``float_converter`` arg."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/322726778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-322726778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 322726778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMjcyNjc3OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-16T10:13:59Z",
    "updated_at": "2017-08-16T10:13:59Z",
    "author_association": "MEMBER",
    "body": "> We already have .to_string(...) \r\n\r\nThis is something completely different. This converts the full dataframe to a string represenation, while here it is about converting values to formatted string values inside a dataframe\r\n\r\nI like having some way to do this (but the question is indeed in what kind of API), but I would also be OK to end the discussion with the decision that it is not important enough to add specialized functionality and that using the `s.apply(\"{..} ..\".format)` idiom is the recommended way here. But let's at least have that discussion. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323013305",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-323013305",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 323013305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzAxMzMwNQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T09:09:00Z",
    "updated_at": "2017-08-17T10:08:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, ``.to_string`` is not the same as this.\r\n\r\nPandas does offer conversion through ``.astype(str)`` + that pandas has really great support for vectorized string formatting (through the ``.str`` namespace) , so nice string operations in general is supported, but only not for numbers.\r\n\r\nI agree on the benefits of agreeing on a \"canonical\" way for converting numbers to strings and writing up this approved method the docs, even if ``.apply(\"{...}\".format)`` should be the sanctioned way. I  could write that up if needed. However, I do think that ``.apply(\"{...}\".format)`` is ugly and illogical given that pandas does not use ``apply`` for formatting strings."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346977778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17211#issuecomment-346977778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17211",
    "id": 346977778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk3Nzc3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T01:35:01Z",
    "updated_at": "2017-11-26T01:35:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, given the discussion we are having on #18347. more amenable to this.\r\n"
  }
]
