[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465110514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25369#issuecomment-465110514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25369",
    "id": 465110514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTExMDUxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T12:29:38Z",
    "updated_at": "2019-02-19T12:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "you would have to explicitly add support; this is not a bug rather an enhancement requests "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465237933",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25369#issuecomment-465237933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25369",
    "id": 465237933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTIzNzkzMw==",
    "user": {
      "login": "techvslife",
      "id": 616099,
      "node_id": "MDQ6VXNlcjYxNjA5OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/616099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techvslife",
      "html_url": "https://github.com/techvslife",
      "followers_url": "https://api.github.com/users/techvslife/followers",
      "following_url": "https://api.github.com/users/techvslife/following{/other_user}",
      "gists_url": "https://api.github.com/users/techvslife/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techvslife/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techvslife/subscriptions",
      "organizations_url": "https://api.github.com/users/techvslife/orgs",
      "repos_url": "https://api.github.com/users/techvslife/repos",
      "events_url": "https://api.github.com/users/techvslife/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techvslife/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T17:48:49Z",
    "updated_at": "2019-02-20T06:27:23Z",
    "author_association": "NONE",
    "body": "Thank you.  It may be that there should be a warning about this in the docs\r\n(until support is added in numexpr)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465725167",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25369#issuecomment-465725167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25369",
    "id": 465725167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTcyNTE2Nw==",
    "user": {
      "login": "techvslife",
      "id": 616099,
      "node_id": "MDQ6VXNlcjYxNjA5OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/616099?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/techvslife",
      "html_url": "https://github.com/techvslife",
      "followers_url": "https://api.github.com/users/techvslife/followers",
      "following_url": "https://api.github.com/users/techvslife/following{/other_user}",
      "gists_url": "https://api.github.com/users/techvslife/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/techvslife/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/techvslife/subscriptions",
      "organizations_url": "https://api.github.com/users/techvslife/orgs",
      "repos_url": "https://api.github.com/users/techvslife/repos",
      "events_url": "https://api.github.com/users/techvslife/events{/privacy}",
      "received_events_url": "https://api.github.com/users/techvslife/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-20T19:41:16Z",
    "updated_at": "2019-02-20T19:41:54Z",
    "author_association": "NONE",
    "body": "fyi at numexpr, was mentioned that pandas may want to raise an error on unrecognized or unsupported dtypes in the query method rather than let it travel through.  or could auto-fallback to pandas engine so as not to cause errors at all.  but I assume there would be a downside to doing that check in adding overhead.  —so not necessarily recommending but only mentioning it for consideration.   Thanks. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465905900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25369#issuecomment-465905900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25369",
    "id": 465905900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTkwNTkwMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T08:23:42Z",
    "updated_at": "2019-02-21T08:23:42Z",
    "author_association": "MEMBER",
    "body": "> but I assume there would be a downside to doing that check in adding overhead. —so not necessarily recommending but only mentioning it for consideration\r\n\r\nBetter error messages wouldn't hurt I think.  Feel free to try implementing that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465915007",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25369#issuecomment-465915007",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25369",
    "id": 465915007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTkxNTAwNw==",
    "user": {
      "login": "teto",
      "id": 886074,
      "node_id": "MDQ6VXNlcjg4NjA3NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/886074?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teto",
      "html_url": "https://github.com/teto",
      "followers_url": "https://api.github.com/users/teto/followers",
      "following_url": "https://api.github.com/users/teto/following{/other_user}",
      "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
      "organizations_url": "https://api.github.com/users/teto/orgs",
      "repos_url": "https://api.github.com/users/teto/repos",
      "events_url": "https://api.github.com/users/teto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T08:53:50Z",
    "updated_at": "2019-02-21T08:53:50Z",
    "author_association": "NONE",
    "body": "very annoying. Is there a way to setup the eval engine globally? set 'python' as default instead of numexpr ? Right now I have to build environments without numexpr to force panda to fall back on 'python' :s "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465947652",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25369#issuecomment-465947652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25369",
    "id": 465947652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTk0NzY1Mg==",
    "user": {
      "login": "teto",
      "id": 886074,
      "node_id": "MDQ6VXNlcjg4NjA3NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/886074?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/teto",
      "html_url": "https://github.com/teto",
      "followers_url": "https://api.github.com/users/teto/followers",
      "following_url": "https://api.github.com/users/teto/following{/other_user}",
      "gists_url": "https://api.github.com/users/teto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/teto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/teto/subscriptions",
      "organizations_url": "https://api.github.com/users/teto/orgs",
      "repos_url": "https://api.github.com/users/teto/repos",
      "events_url": "https://api.github.com/users/teto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/teto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T10:31:15Z",
    "updated_at": "2019-02-21T10:31:15Z",
    "author_association": "NONE",
    "body": "For a moment I thought I had found the graal with `pd.set_option('compute.use_numexpr', False)` but this doesn't disable numexpr in query/eval it seems so I still have to change my code to add engine=\"python\" ?\r\n"
  }
]
