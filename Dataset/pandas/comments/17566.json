[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330189216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17566#issuecomment-330189216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17566",
    "id": 330189216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDE4OTIxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-18T11:09:44Z",
    "updated_at": "2017-09-18T11:09:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "these are some options\r\n\r\n```\r\nIn [25]: df.reset_index().to_json(orient='records')\r\nOut[25]: '[{\"index\":1356998400000,\"c1\":1,\"c2\":2},{\"index\":1357084800000,\"c1\":3,\"c2\":4}]'\r\n\r\nIn [26]: df.reset_index().to_json(orient='split')\r\nOut[26]: '{\"columns\":[\"index\",\"c1\",\"c2\"],\"index\":[0,1],\"data\":[[1356998400000,1,2],[1357084800000,3,4]]}'\r\n\r\n```\r\n\r\nyou can also register Timestamp as a type with json. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353681905",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17566#issuecomment-353681905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17566",
    "id": 353681905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzY4MTkwNQ==",
    "user": {
      "login": "meditativeape",
      "id": 1092913,
      "node_id": "MDQ6VXNlcjEwOTI5MTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1092913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meditativeape",
      "html_url": "https://github.com/meditativeape",
      "followers_url": "https://api.github.com/users/meditativeape/followers",
      "following_url": "https://api.github.com/users/meditativeape/following{/other_user}",
      "gists_url": "https://api.github.com/users/meditativeape/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meditativeape/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meditativeape/subscriptions",
      "organizations_url": "https://api.github.com/users/meditativeape/orgs",
      "repos_url": "https://api.github.com/users/meditativeape/repos",
      "events_url": "https://api.github.com/users/meditativeape/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meditativeape/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T22:04:38Z",
    "updated_at": "2017-12-22T22:04:54Z",
    "author_association": "NONE",
    "body": "Here's the solution that I came up with:\r\n```\r\ns = pd.Series(df.values.tolist(), index=df.columns) # convert df to series, where each value is the list of all values in a column from the original df\r\ns.to_json()\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410856570",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17566#issuecomment-410856570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17566",
    "id": 410856570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDg1NjU3MA==",
    "user": {
      "login": "pgalilea",
      "id": 1197652,
      "node_id": "MDQ6VXNlcjExOTc2NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1197652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pgalilea",
      "html_url": "https://github.com/pgalilea",
      "followers_url": "https://api.github.com/users/pgalilea/followers",
      "following_url": "https://api.github.com/users/pgalilea/following{/other_user}",
      "gists_url": "https://api.github.com/users/pgalilea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pgalilea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pgalilea/subscriptions",
      "organizations_url": "https://api.github.com/users/pgalilea/orgs",
      "repos_url": "https://api.github.com/users/pgalilea/repos",
      "events_url": "https://api.github.com/users/pgalilea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pgalilea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T21:20:19Z",
    "updated_at": "2018-08-06T21:21:50Z",
    "author_association": "NONE",
    "body": "I'm doing something like this:\r\n\r\n```\r\nfrom collections import OrderedDict\r\nfrom json import dumps\r\n\r\nprint dumps(df1.to_dict(orient='list', into=OrderedDict))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410859133",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17566#issuecomment-410859133",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17566",
    "id": 410859133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDg1OTEzMw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T21:30:09Z",
    "updated_at": "2018-08-06T21:30:09Z",
    "author_association": "MEMBER",
    "body": "This is now possible to do with the `orient='table'` option:\r\n\r\n```python\r\nIn [18]: df = pd.DataFrame([[1, 2], [3, 4]], columns=['c1', 'c2'], index=pd.date_range('2018-01-01', freq='D', periods=2))\r\n\r\nIn [19]: df.to_json(orient='table')\r\nOut[19]: '{\"schema\": {\"fields\":[{\"name\":\"index\",\"type\":\"datetime\"},{\"name\":\"c1\",\"type\":\"integer\"},{\"name\":\"c2\",\"type\":\"integer\"}],\"primaryKey\":[\"index\"],\"pandas_version\":\"0.20.0\"}, \"data\": [{\"index\":\"2018-01-01T00:00:00.000Z\",\"c1\":1,\"c2\":2},{\"index\":\"2018-01-02T00:00:00.000Z\",\"c1\":3,\"c2\":4}]}'\r\n\r\nIn [20]: pd.read_json(df.to_json(orient='table'), orient='table')\r\nOut[20]: \r\n            c1  c2\r\n2018-01-01   1   2\r\n2018-01-02   3   4\r\n```"
  }
]
