[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277798029",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15320#issuecomment-277798029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15320",
    "id": 277798029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzc5ODAyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T20:08:56Z",
    "updated_at": "2017-02-06T20:08:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there a reason you are not using the idiomatic assignment?\r\n\r\n```\r\nIn [5]: df['c'] = 'foo'\r\n\r\nIn [6]: df\r\nOut[6]: \r\n   a  b    c\r\n0  1  2  foo\r\n1  3  4  foo\r\n```\r\n\r\nI suppose this could be allowed. Note that there is NO benefit to actually doing it in ``.eval`` AT ALL. (unlike numeric operations which are accelerated using ``numexpr``).\r\n\r\n@chris-b1 IIRC you worked on some of this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277946621",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15320#issuecomment-277946621",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15320",
    "id": 277946621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzk0NjYyMQ==",
    "user": {
      "login": "tobgu",
      "id": 485836,
      "node_id": "MDQ6VXNlcjQ4NTgzNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/485836?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tobgu",
      "html_url": "https://github.com/tobgu",
      "followers_url": "https://api.github.com/users/tobgu/followers",
      "following_url": "https://api.github.com/users/tobgu/following{/other_user}",
      "gists_url": "https://api.github.com/users/tobgu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tobgu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tobgu/subscriptions",
      "organizations_url": "https://api.github.com/users/tobgu/orgs",
      "repos_url": "https://api.github.com/users/tobgu/repos",
      "events_url": "https://api.github.com/users/tobgu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tobgu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T09:34:42Z",
    "updated_at": "2017-02-07T09:34:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "The example above was just a minimal one to show the problem. The actual code that fails for me takes an expression on another form and transforms it into opertations that are applied to a DataFrame. For this it was very convenient to use eval since it is very straight forward to produce an expression that can be evaluated using eval() given the input. I could produce the same operations in python code (the idiomatic way) it would just require some more code on my side.\r\n\r\nThis has worked fine for me in python 2.7 but now I'm looking into migrating the application to python 3.6 and this error seemed like a regression to me. That's why I reported it (+ to get some input on alternative ways to achieve the same purpose). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277953073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15320#issuecomment-277953073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15320",
    "id": 277953073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzk1MzA3Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T10:01:33Z",
    "updated_at": "2017-02-07T10:01:33Z",
    "author_association": "MEMBER",
    "body": "I can confirm that this is working in python 2.7, but not in python 3. So in any case, this inconsistency is a bug, and it should probably just work for both?\r\n\r\n@tobgu And thanks for reporting!"
  }
]
