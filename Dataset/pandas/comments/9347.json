[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71273699",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71273699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71273699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjczNjk5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T21:59:11Z",
    "updated_at": "2015-01-23T22:00:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note this should only be taken if `Series.unique()` is kept as it is now (https://github.com/pydata/pandas/issues/9346)\n\nI'm also not so sure what is best here: if a categorical is changed from `ordered==True` to `ordered==False`, the order of the categories should not change, which means that in the following case the two categoricals are not equal:\n\n```\ncat1 = Series(Categorical([\"a\",\"c\",\"b\"], ordered=False))\ncat2 = Series(Categorical([\"a\",\"c\",\"b\"]))\ncat2.cat.ordered=False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71275247",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71275247",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71275247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjc1MjQ3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T22:10:31Z",
    "updated_at": "2015-01-23T22:10:31Z",
    "author_association": "MEMBER",
    "body": "IMO `ordered` is effectively part of the dtype and should be immutable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71275666",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71275666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71275666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjc1NjY2",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T22:14:01Z",
    "updated_at": "2015-01-23T22:14:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer: can you elaborate? :-) This is modeled after R's `factor` which lets you set this (but of course this will produce a new factor, not an inplace operation like we have it here) \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71340499",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71340499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71340499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzQwNDk5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-24T22:22:30Z",
    "updated_at": "2015-01-25T09:53:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer the more I think about it, the more sense it makes to not let `s.cat.order` be changeable (only readable). In R that's implicitly there, as every change creates a new factor,\n\nIf that's desirable, we need a `change_ordered(new_order)` method which returns a new copy of the categorical. And remove the setter...\n\n@jreback @jorisvandenbossche any comments?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71346588",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71346588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71346588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzQ2NTg4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T01:50:39Z",
    "updated_at": "2015-01-25T01:50:39Z",
    "author_association": "MEMBER",
    "body": "I don't think we necessarily need a change ordered method; it's straightforward enough to use `Categorical.from_codes(orig.codes, orig.categories, ordered=False)` or even just `Categorical(orig, orig.categories, ordered=False)`.\n\nBy \"part of the dtype\" I'm referring to categorical data as it's defined, e.g., in dynd -- everything that's not the specific values of an array is part of the dtype. From a simplicity perspective, it's nice if that cannot change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71363435",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71363435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71363435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzYzNDM1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T09:52:30Z",
    "updated_at": "2015-01-25T09:53:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "But right now it can change, as it is \"only inplace\", as it is a setter: `s.cat.ordered = False`. It's actually the only part of the `s.cat`-API, which does inplace by default (and only), all others are methods with a default of `inplace=False`.\n\nE.g.\n\n``` python\ndf[\"cat\"] = ...\ndf.cat.cat.ordered = False\n```\n\nwill change the dataframe itself\n\nFor all else, you have to assign again or use inplace=True:\n\n``` python\ndf[\"cat\"] = df.cat.cat.reorder_categories([...])\ndf.cat.cat.reorder_categories([...], inplace=True)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71382378",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71382378",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71382378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzgyMzc4",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T17:31:34Z",
    "updated_at": "2015-01-25T17:31:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "The current method to change the order is not friendly and requires more knowledge than most users would probably have.  Of course, many people would just use\n\n``` python\nordered = pd.Categorical(['a','b','c']), \nunordered = pd.Categorical(ordered, ordered=False)\n```\n\nwhich is a little wasteful but simple.  I could see something like\n\n``` python\nunordered = ordered.swap_ordering()\n```\n\nor \n\n``` python\nordered.swap_ordering(inplace=True)\n```\n\nmaking it more obvious how to remove (or add) ordering.  \n\nOne of the dangers of the current approach to ordering is \n\n``` python\nunordered = pd.Categorical(['a','c','d','b'], ordered=False)\nunordered.ordered=True\n```\n\nwhich seems to work but only by accident.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71392272",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71392272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71392272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzkyMjcy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T20:42:41Z",
    "updated_at": "2015-01-25T20:42:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually we tried to hide `pd.Categorical()` and promoted `s.astype(\"category\")` and `s.cat` instead, so I don't think that's a good option...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71394683",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71394683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71394683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzk0Njgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T21:31:41Z",
    "updated_at": "2015-01-25T21:31:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz I think this PR is fine.\n\nseparate issue is whether to change what `ordered` does now (e.g. make it a immutable property). (so let's open a new one for that).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71394719",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71394719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71394719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzk0NzE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T21:32:20Z",
    "updated_at": "2015-01-25T21:32:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz pls add a release note (API section, maybe add a small example to be clear).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71395439",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-71395439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 71395439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzk1NDM5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T21:48:21Z",
    "updated_at": "2015-01-25T21:48:21Z",
    "author_association": "MEMBER",
    "body": "As a comparison, R _does_ lexicographical sort the categories for unordered factors (but that is the default).\n\nAnd apart from that, I don't know if I find it more logical or not to sort the categories or not. @JanSchulz As you said in another discussion (about the sorting I think), that often 'the order of appearance' in a dataset does not really mean something. So I don't know if I find it worth changing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76865995",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-76865995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 76865995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2ODY1OTk1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-03T01:02:58Z",
    "updated_at": "2015-03-03T01:02:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz can you add a release note (and maybe a short example of the behavior change to 0.16.0)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77475476",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-77475476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 77475476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDc1NDc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-05T23:29:24Z",
    "updated_at": "2015-03-05T23:29:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz can you add a release note explaining this change? otherwise looks gtg.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77537568",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-77537568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 77537568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTM3NTY4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T10:26:09Z",
    "updated_at": "2015-03-06T10:26:09Z",
    "author_association": "MEMBER",
    "body": "@jreback @JanSchulz I am not really sure I think this is a good idea. I think having it sorted lexicographically is more logical, as there is no inherent order in the categories. But you still want to have this somewhat consistent. In that way, sorting it lexicographically makes the most sense I think.\n\nThis is also what R does (but there the default is unordered), and I think also what dynd does in `factor_categorical` (although I don't know if dynd has the distinction between ordered and unordered)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77556067",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-77556067",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 77556067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTU2MDY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T13:10:13Z",
    "updated_at": "2015-03-06T13:10:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [33]: pd.Categorical([\"a\", \"c\", \"b\", \"a\"], categories=['a','c','b'], ordered=None)\nOut[33]: \n[a, c, b, a]\nCategories (3, object): [a < c < b]\n\nIn [34]: pd.Categorical([\"a\", \"c\", \"b\", \"a\"], categories=['a','c','b'], ordered=True)\nOut[34]: \n[a, c, b, a]\nCategories (3, object): [a < c < b]\n\nIn [35]: pd.Categorical([\"a\", \"c\", \"b\", \"a\"], categories=['a','c','b'], ordered=False)\nOut[35]: \n[a, c, b, a]\nCategories (3, object): [a, c, b]\n```\n\n```\nIn [36]: pd.Categorical([\"a\", \"c\", \"b\", \"a\"], ordered=None)\nOut[36]: \n[a, c, b, a]\nCategories (3, object): [a < b < c]\n\nIn [37]: pd.Categorical([\"a\", \"c\", \"b\", \"a\"], ordered=True)\nOut[37]: \n[a, c, b, a]\nCategories (3, object): [a < b < c]\n\nIn [38]: pd.Categorical([\"a\", \"c\", \"b\", \"a\"], ordered=False)\nOut[38]: \n[a, c, b, a]\nCategories (3, object): [a, b, c]\n```\n\nSo think the intent is to have the 2nd section (where no ordering is specified explicity) be turned into the first section by default (for all cases). They will still be ordered/unordered as a Categorical type as indicated by the `ordered` attribute.\n\nThis will effectively remove the default ordering from lexiographic to the discovery order (which is how `.factorize()` works).\n\na couple of options I see\n\n1) leave this alone\n2) make the default as I describe above, e.g. to the order of appearance\n3) require `categories` to be specified when `ordered=True` (e.g. force the user to say the actual ordering)\n4) leave this alone, but make `ordered=None` -> `ordered=False`, e.g. if you don't specify an ordering they your ordering is lexographic but you are not considered ordered (this is the same as 1), but we don't default the order\n\naside from this, I think we need for #9190 \n\n```\ndef set_order(self, ordered, inplace=False):\n    Parameters\n    ----------------\n    ordered : boolean\n       set the ordered attribute for this Categorical to be the passed ordered\n    inplace : boolean, default False\n        modify the categorical inplace\n```\n\nand then raise on `cat.ordered = value` (or could deprecate and suggest `set_order`)\n\nI think 4) is the most logical here. Basically turning default `Categoricals` to unordered. The ordering still remains lexographic, unless otherwise overriden.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77557773",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-77557773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 77557773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTU3Nzcz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T13:25:05Z",
    "updated_at": "2015-03-06T13:30:39Z",
    "author_association": "MEMBER",
    "body": "Yes, I also wanted to raise the idea to have unordered as a default (wanted to make an issue for that, but started with reraising in this issue). Do we discuss that here or open a new one?\n\nI also think `ordered=False` as a default makes more sense:\n- It is more in line with the distinction of 'categorical' vs 'ordinal' variable (eg http://www.ats.ucla.edu/stat/mult_pkg/whatstat/nominal_ordinal_interval.htm), where we provide both in pandas through `Categorical`, but with the 'categorical' meaning as default.\n- Many common examples, saying gender (F, M), country, color, etc have no intrinsic order. So to say that defaulting to unordered makes as much sense I think.\n- In line with the default of R\n- it makes the default more straightforward (now None -> True or False depending on the data type)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77580142",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-77580142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 77580142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTgwMTQy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T15:45:56Z",
    "updated_at": "2016-04-03T18:40:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can live with making it unordered as default.\n\nRegarding the default order on the categories: I actually don't mind much, if you want to have it ordered in most of the case you have to reorder anyway... i would lean slightly to let it be as it is now (lexi sorting and not order of appearance). Someone who is willing to make a decision should do it by either pulling this PR or closing it :-)\n\n-> In line with option 4 above (default to unordered but lexi-sort the categories)\n\nRegarding the method which changes the \"ordered\" property: maybe a `s.cat.as_[un]ordered(inplace=False)` or `s.cat.as_nominal/ordinal(inplace=False)` would be more clear. `set_order` can mean both setting specifically ordered categories or setting the `order` property. \n\nNot sure about deprecation or not. If deprecation, just one cycle?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77715761",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9347#issuecomment-77715761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9347",
    "id": 77715761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzE1NzYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-07T23:14:32Z",
    "updated_at": "2015-03-07T23:14:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #9611\n"
  }
]
