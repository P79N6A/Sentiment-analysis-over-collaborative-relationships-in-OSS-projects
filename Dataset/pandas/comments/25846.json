[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476426159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25846#issuecomment-476426159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25846",
    "id": 476426159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQyNjE1OQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T00:20:09Z",
    "updated_at": "2019-03-26T00:20:09Z",
    "author_association": "MEMBER",
    "body": "We would need a copy pastable example that reproduces the error: http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/477106297",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25846#issuecomment-477106297",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25846",
    "id": 477106297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzEwNjI5Nw==",
    "user": {
      "login": "MichaelSchroter",
      "id": 31654102,
      "node_id": "MDQ6VXNlcjMxNjU0MTAy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/31654102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MichaelSchroter",
      "html_url": "https://github.com/MichaelSchroter",
      "followers_url": "https://api.github.com/users/MichaelSchroter/followers",
      "following_url": "https://api.github.com/users/MichaelSchroter/following{/other_user}",
      "gists_url": "https://api.github.com/users/MichaelSchroter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MichaelSchroter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MichaelSchroter/subscriptions",
      "organizations_url": "https://api.github.com/users/MichaelSchroter/orgs",
      "repos_url": "https://api.github.com/users/MichaelSchroter/repos",
      "events_url": "https://api.github.com/users/MichaelSchroter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MichaelSchroter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T11:24:27Z",
    "updated_at": "2019-03-27T11:24:27Z",
    "author_association": "NONE",
    "body": "Please find the code below.\r\n```python\r\nyears = ['2014','2015','2016','2017','2018']\r\ndata = {'years' : years,\r\n        'F'   : ['A', 'B', 'B', 'C', 'C'],\r\n        'M'   : ['A', 'A', 'A', 'B', 'C']}\r\n\r\ndata = pd.DataFrame.from_dict(data)\r\ndata  = dd.from_pandas(data,npartitions =2)\r\ndata = data.categorize(columns = ['M','F'])\r\nCAM = data['M'].compute()\r\nG = data['F'].compute()\r\nmg = pd.crosstab(G,CAM)\r\nmg = mg.reset_index()\r\n```\r\nError is below:\r\n```python\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-80-049481fd2564> in <module>\r\n----> 1 mg = mg.reset_index()\r\n      2 mg\r\n\r\n~/env/lib/python3.5/site-packages/pandas/core/frame.py in reset_index(self, level, drop, inplace, col_level, col_fill)\r\n   4429                 # to ndarray and maybe infer different dtype\r\n   4430                 level_values = _maybe_casted_values(lev, lab)\r\n-> 4431                 new_obj.insert(0, name, level_values)\r\n   4432 \r\n   4433         new_obj.index = new_index\r\n\r\n~/env/lib/python3.5/site-packages/pandas/core/frame.py in insert(self, loc, column, value, allow_duplicates)\r\n   3471         value = self._sanitize_column(column, value, broadcast=False)\r\n   3472         self._data.insert(loc, column, value,\r\n-> 3473                           allow_duplicates=allow_duplicates)\r\n   3474 \r\n   3475     def assign(self, **kwargs):\r\n\r\n~/env/lib/python3.5/site-packages/pandas/core/internals/managers.py in insert(self, loc, item, value, allow_duplicates)\r\n   1153 \r\n   1154         # insert to the axis; this could possibly raise a TypeError\r\n-> 1155         new_axis = self.items.insert(loc, item)\r\n   1156 \r\n   1157         block = make_block(values=value, ndim=self.ndim,\r\n\r\n~/env/lib/python3.5/site-packages/pandas/core/indexes/category.py in insert(self, loc, item)\r\n    765         code = self.categories.get_indexer([item])\r\n    766         if (code == -1) and not (is_scalar(item) and isna(item)):\r\n--> 767             raise TypeError(\"cannot insert an item into a CategoricalIndex \"\r\n    768                             \"that is not already an existing category\")\r\n    769 \r\n\r\nTypeError: cannot insert an item into a CategoricalIndex that is not already an existing category\r\n```"
  }
]
