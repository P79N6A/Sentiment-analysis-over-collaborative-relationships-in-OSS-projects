[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/153992075",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11522#issuecomment-153992075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11522",
    "id": 153992075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mzk5MjA3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-05T08:52:56Z",
    "updated_at": "2015-11-05T09:19:54Z",
    "author_association": "MEMBER",
    "body": "@PetitLepton Thanks for the report.\n\nCan you show the output of?\n\n```\ncur = connector.cursor()\ncur.execute(\"SELECT id, created_at FROM themes\").fetchall()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154262996",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11522#issuecomment-154262996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11522",
    "id": 154262996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDI2Mjk5Ng==",
    "user": {
      "login": "PetitLepton",
      "id": 9269985,
      "node_id": "MDQ6VXNlcjkyNjk5ODU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9269985?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PetitLepton",
      "html_url": "https://github.com/PetitLepton",
      "followers_url": "https://api.github.com/users/PetitLepton/followers",
      "following_url": "https://api.github.com/users/PetitLepton/following{/other_user}",
      "gists_url": "https://api.github.com/users/PetitLepton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PetitLepton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PetitLepton/subscriptions",
      "organizations_url": "https://api.github.com/users/PetitLepton/orgs",
      "repos_url": "https://api.github.com/users/PetitLepton/repos",
      "events_url": "https://api.github.com/users/PetitLepton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PetitLepton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-06T02:12:18Z",
    "updated_at": "2015-11-06T02:12:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Hi, this one works fine, I was using it so far\n\n``` python\ncur = connector.cursor()\ncur.execute(\"SELECT id, created_at FROM themes\")\ncur.fetchall()\n((1, datetime.datetime(2012, 12, 2, 4, 6, 17)),\n (2, datetime.datetime(2012, 12, 2, 4, 20, 56)),\n (4, datetime.datetime(2012, 12, 2, 4, 57, 39)),\n (5, datetime.datetime(2012, 12, 2, 4, 59, 31)),\n (6, datetime.datetime(2012, 12, 2, 5, 3, 7)),\n ...\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154351171",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11522#issuecomment-154351171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11522",
    "id": 154351171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDM1MTE3MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-06T09:12:01Z",
    "updated_at": "2015-11-06T09:12:01Z",
    "author_association": "MEMBER",
    "body": "Thanks! As I suspected, the problem is that it returns a tuple of tuples instead of a list of tuples, and `DataFrame.from_records` fails on this:\n\n```\nIn [1]: pd.DataFrame.from_records([(1,2), (3,4)])\nOut[1]:\n   0  1\n0  1  2\n1  3  4\n\nIn [2]: pd.DataFrame.from_records(((1,2), (3,4)))\n...\nc:\\users\\vdbosscj\\scipy\\pandas-joris\\pandas\\core\\frame.pyc in _list_to_arrays(da\nta, columns, coerce_float, dtype)\n   5300 def _list_to_arrays(data, columns, coerce_float=False, dtype=None):\n   5301     if len(data) > 0 and isinstance(data[0], tuple):\n-> 5302         content = list(lib.to_object_array_tuples(data).T)\n   5303     else:\n   5304         # list of lists\n\nTypeError: Argument 'rows' has incorrect type (expected list, got tuple)\n```\n\nThis has always been the case in pandas, so I am wondering if this is a change in `pymysql`\n\n@jreback This is easily solved in the sql code by ensuring it is a list before passing to `DataFrame.from_records`, or do you think this is something `from_records` should handle itself?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154714142",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11522#issuecomment-154714142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11522",
    "id": 154714142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDcxNDE0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-07T15:22:22Z",
    "updated_at": "2015-11-07T15:22:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche no, list-of-tuples is the specified type, tuple-of-tuple is not allowed as I think it can signify nested types that would require more parsing (its not allowed in the `DataFrame` constructor either). \n\nI suppose these _might_ be able to be relaxed but would be a separate issue\n\n```\nIn [3]: DataFrame([('a','b')])\nOut[3]: \n   0  1\n0  a  b\n\nIn [4]: DataFrame((('a','b')))\nPandasError: DataFrame constructor not properly called!\n\nIn [5]: DataFrame(np.array([('a','b')]))\nOut[5]: \n   0  1\n0  a  b\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155408910",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11522#issuecomment-155408910",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11522",
    "id": 155408910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQwODkxMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T12:33:46Z",
    "updated_at": "2015-11-10T12:33:46Z",
    "author_association": "MEMBER",
    "body": "OK, no problem. It is easy to ensure in the SQL code that it is a list of tuples and not a tuple of tuples\n"
  }
]
