[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426642219",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426642219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426642219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY0MjIxOQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T13:43:14Z",
    "updated_at": "2018-10-03T20:20:09Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/base.py`](https://github.com/TomAugspurger/pandas/blob/073df470ef2e645dd886d568490da50e4574acb4/pandas/core/dtypes/base.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/frame.py`](https://github.com/TomAugspurger/pandas/blob/073df470ef2e645dd886d568490da50e4574acb4/pandas/core/frame.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/series.py`](https://github.com/TomAugspurger/pandas/blob/073df470ef2e645dd886d568490da50e4574acb4/pandas/core/series.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/dtypes/test_dtypes.py`](https://github.com/TomAugspurger/pandas/blob/073df470ef2e645dd886d568490da50e4574acb4/pandas/tests/dtypes/test_dtypes.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_operators.py`](https://github.com/TomAugspurger/pandas/blob/073df470ef2e645dd886d568490da50e4574acb4/pandas/tests/frame/test_operators.py) !\n\n\n\n##### Comment last updated on October 03, 2018 at 20:20 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426642964",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426642964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426642964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY0Mjk2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T13:45:21Z",
    "updated_at": "2018-10-03T13:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @pambot thoughts on broadening the caught exceptions in https://github.com/pandas-dev/pandas/pull/22975/files#diff-8c2f3d0cbd1523cafd79c45e87124103R100?. According to the docs, only TypeError is \"allowed\" to be raised, but python has no way to enforce that. I'm not sure what's best here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426662208",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426662208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426662208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY2MjIwOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T14:38:55Z",
    "updated_at": "2018-10-03T14:38:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Failure is from #22019 (more evidence that moving the numpydev warnings build to the main section is a good idea).\r\n\r\nI'm going to include a fix for that here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426663789",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426663789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426663789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY2Mzc4OQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-10-03T14:43:22Z",
    "updated_at": "2018-10-04T17:35:46Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22975?src=pr&el=h1) Report\n> Merging [#22975](https://codecov.io/gh/pandas-dev/pandas/pull/22975?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/fea27f0736a4b8f6626da60a6abc2f6e26b8a365?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22975/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/22975?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #22975      +/-   ##\n==========================================\n+ Coverage   92.19%   92.19%   +<.01%     \n==========================================\n  Files         169      169              \n  Lines       50821    50825       +4     \n==========================================\n+ Hits        46852    46857       +5     \n+ Misses       3969     3968       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.61% <100%> (ø)` | :arrow_up: |\n| #single | `42.36% <60%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22975?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/dtypes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/22975/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2Jhc2UucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/22975/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.75% <100%> (ø)` | :arrow_up: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/22975/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.2% <100%> (ø)` | :arrow_up: |\n| [pandas/util/\\_depr\\_module.py](https://codecov.io/gh/pandas-dev/pandas/pull/22975/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvX2RlcHJfbW9kdWxlLnB5) | `65.11% <0%> (-2.33%)` | :arrow_down: |\n| [pandas/core/resample.py](https://codecov.io/gh/pandas-dev/pandas/pull/22975/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzYW1wbGUucHk=) | `96.98% <0%> (+0.01%)` | :arrow_up: |\n| [pandas/core/groupby/grouper.py](https://codecov.io/gh/pandas-dev/pandas/pull/22975/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS9ncm91cGVyLnB5) | `98.16% <0%> (+0.73%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22975?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22975?src=pr&el=footer). Last update [fea27f0...073df47](https://codecov.io/gh/pandas-dev/pandas/pull/22975?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426677768",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426677768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426677768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY3Nzc2OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T15:21:28Z",
    "updated_at": "2018-10-03T15:21:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jbrockmendel for the ops changes to catch that warning from numpy. Does  https://github.com/pandas-dev/pandas/pull/22975/files#diff-1e79abbbdd150d4771b91ea60a4e1cc7R4911 look like the right place to do it? Looking at the call stack, we can do it in either `_combine_match_index` or  `_combine_series_frame` Given that `combine_match_index` dispatches to series (which I think *may* go to EA ops), I don't think we should be catching NumPy warnings there. I'd rather leave that up to the EA authors."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426686147",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426686147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426686147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY4NjE0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T15:42:37Z",
    "updated_at": "2018-10-03T15:42:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Darn, we're back to the failure in `test_ndarray_compat`, which I cannot reproduce locally. https://travis-ci.org/pandas-dev/pandas/jobs/436672887#L2765\r\n\r\n\r\n```\r\n______________________ TestSeriesMisc.test_ndarray_compat ______________________\r\n[gw1] linux -- Python 3.7.0 /home/travis/miniconda3/envs/pandas/bin/python\r\nself = <pandas.tests.series.test_api.TestSeriesMisc object at 0x7f94a64fdbe0>\r\n    def test_ndarray_compat(self):\r\n    \r\n        # test numpy compat with Series as sub-class of NDFrame\r\n        tsdf = DataFrame(np.random.randn(1000, 3), columns=['A', 'B', 'C'],\r\n                         index=date_range('1/1/2000', periods=1000))\r\n    \r\n        def f(x):\r\n            return x[x.idxmax()]\r\n    \r\n>       result = tsdf.apply(f)\r\npandas/tests/series/test_api.py:405: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npandas/core/frame.py:6240: in apply\r\n    return op.get_result()\r\npandas/core/apply.py:151: in get_result\r\n    return self.apply_standard()\r\npandas/core/apply.py:245: in apply_standard\r\n    dummy = Series(empty_arr, index=index, dtype=values.dtype)\r\npandas/core/series.py:277: in __init__\r\n    raise_cast_failure=True)\r\npandas/core/series.py:4270: in _sanitize_array\r\n    subarr = _try_cast(data, True)\r\npandas/core/series.py:4228: in _try_cast\r\n    subarr = maybe_cast_to_integer_array(arr, dtype)\r\npandas/core/dtypes/cast.py:1350: in maybe_cast_to_integer_array\r\n    if np.array_equal(arr, casted):\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\na1 = array([ 6.93066801e-310,  6.93066801e-310,  4.63759004e-310,\r\n        4.63759004e-310,  6.93058871e-310, -3.80607598e+0...93066821e-310, -9.21064254e+018,\r\n        6.93058666e-310, -3.04661570e+290,  0.00000000e+000,\r\n        0.00000000e+000])\r\na2 = array([ 6.93066801e-310,  6.93066801e-310,  4.63759004e-310,\r\n        4.63759004e-310,  6.93058871e-310, -3.80607598e+0...93066821e-310, -9.21064254e+018,\r\n        6.93058666e-310, -3.04661570e+290,  0.00000000e+000,\r\n        0.00000000e+000])\r\n    def array_equal(a1, a2):\r\n        \"\"\"\r\n        True if two arrays have the same shape and elements, False otherwise.\r\n    \r\n        Parameters\r\n        ----------\r\n        a1, a2 : array_like\r\n            Input arrays.\r\n    \r\n        Returns\r\n        -------\r\n        b : bool\r\n            Returns True if the arrays are equal.\r\n    \r\n        See Also\r\n        --------\r\n        allclose: Returns True if two arrays are element-wise equal within a\r\n                  tolerance.\r\n        array_equiv: Returns True if input arrays are shape consistent and all\r\n                     elements equal.\r\n    \r\n        Examples\r\n        --------\r\n        >>> np.array_equal([1, 2], [1, 2])\r\n        True\r\n        >>> np.array_equal(np.array([1, 2]), np.array([1, 2]))\r\n        True\r\n        >>> np.array_equal([1, 2], [1, 2, 3])\r\n        False\r\n        >>> np.array_equal([1, 2], [1, 4])\r\n        False\r\n    \r\n        \"\"\"\r\n        try:\r\n            a1, a2 = asarray(a1), asarray(a2)\r\n        except Exception:\r\n            return False\r\n        if a1.shape != a2.shape:\r\n            return False\r\n>       return bool(asarray(a1 == a2).all())\r\nE       DeprecationWarning: elementwise comparison failed; this will raise an error \r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426688280",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426688280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426688280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY4ODI4MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T15:48:11Z",
    "updated_at": "2018-10-03T15:48:11Z",
    "author_association": "MEMBER",
    "body": "> [...] look like the right place to do it?\r\n\r\nI think it should be higher up the stack where `func` is defined."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426691614",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426691614",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426691614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY5MTYxNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T15:56:47Z",
    "updated_at": "2018-10-03T15:57:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "You're thinking something like this?\r\n\r\n```python\r\ndef func2(...):\r\n    with np.errstate(all='ignore'):\r\n        func(...)\r\n```\r\n\r\nand `func2` is whats actually passed down through the chain."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426696949",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426696949",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426696949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjY5Njk0OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T16:10:19Z",
    "updated_at": "2018-10-03T16:10:19Z",
    "author_association": "MEMBER",
    "body": "> You're thinking something like this?\r\n\r\nClose.  `_combine_match_index` only gets called from one place in `_combine_series_frame`.  `_combine_series_frame` gets called from 3 places.  I'd want to track the problem back and see which of these paths is actually relevant.  i.e. do this particular wrapping as early as possible so as to wrap as little as possible.\r\n\r\nDoes the problem show up exclusively in `comparison(DataFrame, Series)` ops?  That would be the simplest explanation with the cleanest fix."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426703479",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426703479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426703479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjcwMzQ3OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T16:27:58Z",
    "updated_at": "2018-10-03T16:27:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will take a look at who hits this.\r\n\r\njumping back to the other failure, this seems strange. The error is coming in `FrameApply.apply_standard` when we do `dummy = Series(empty_arr, index=index, dtype=values.dtype)`.\r\n\r\nEventually, we get to `_sanitize_array`, which calls `maybe_cast_to_integer_dtype`. But why the `if is_float_dtype(dtype)`?\r\n\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: pd.Series([1., 2], dtype=float)\r\n> /Users/taugspurger/sandbox/pandas-travis-37-numpydev/pandas/core/series.py(4229)_try_cast()\r\n-> subarr = maybe_cast_to_integer_array(arr, dtype)\r\n(Pdb) l\r\n4224            try:\r\n4225                # gh-15832: Check if we are requesting a numeric dype and\r\n4226                # that we can convert the data to the requested dtype.\r\n4227                if is_float_dtype(dtype) or is_integer_dtype(dtype):\r\n4228                    breakpoint()\r\n4229 ->                 subarr = maybe_cast_to_integer_array(arr, dtype)\r\n4230\r\n4231                subarr = maybe_cast_to_datetime(arr, dtype)\r\n4232                # Take care in creating object arrays (but iterators are not\r\n4233                # supported):\r\n4234                if is_object_dtype(dtype) and (is_list_like(subarr) and\r\n(Pdb) dtype\r\ndtype('float64')\r\n```\r\n\r\ncc @gfyoung that's from https://github.com/pandas-dev/pandas/pull/21456, if you recall."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426738693",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426738693",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426738693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjczODY5Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T18:07:52Z",
    "updated_at": "2018-10-03T18:07:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel updated with what should be a more focused filter, though I'm not sure. https://github.com/pandas-dev/pandas/pull/22975/files#diff-f38e1e99cb32831f13ced48de4220eacR141\r\n\r\nAFAICT, the only warning leaking through was truediv when the RHS had 0s. So I replaced `operator.truediv` with a wrapper that sets the errstate.\r\n\r\nCompared to my earlier commit, I think the difference is that\r\n\r\n1. The errstate is applied just to truediv and rtruediv, not every function that reached that else block in `_combine_match_index`.\r\n2. The errstate is applied to `truediv`, regardless of which path it takes. In particular, `ops.dispatch_to_series` is also called with the `silent_truediv` function. That ends up not mattering here, since another errstate is applied down in `expressions._evaluate_standard`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426758848",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426758848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426758848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjc1ODg0OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T19:02:01Z",
    "updated_at": "2018-10-03T19:02:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure what was wrong with \r\nhttps://github.com/pandas-dev/pandas/pull/22975/commits/d88929f38c061d0e4506ba5bc00ab8002a7acb5e, but there were warnings coming through everywhere. Gone with the original approach of all was calling `func` with the errstate set. That matches what we eventually do for series anyway."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426796910",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426796910",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426796910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjc5NjkxMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T20:48:32Z",
    "updated_at": "2018-10-03T20:48:32Z",
    "author_association": "MEMBER",
    "body": "> Gone with the original approach of all was calling func with the errstate set.\r\n\r\nOK.  It's not my favorite thing, but I can live with it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426980948",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426980948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426980948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjk4MDk0OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T11:15:59Z",
    "updated_at": "2018-10-04T11:15:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any other thoughts @jreback, or are we good to merge?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426984485",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22975#issuecomment-426984485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22975",
    "id": 426984485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjk4NDQ4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T11:30:33Z",
    "updated_at": "2018-10-04T11:30:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!"
  }
]
