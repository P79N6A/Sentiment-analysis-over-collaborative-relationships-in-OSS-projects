[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372329125",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-372329125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 372329125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMyOTEyNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T14:30:12Z",
    "updated_at": "2018-03-12T14:30:12Z",
    "author_association": "MEMBER",
    "body": "What also might be useful, thinking about the case of geopandas: somehow an advanced but officially public `fillna` function that works on numeric data. In geopandas I have integer data under the hood I could forward or backward fill or fill with a value. So inside a `GeometryArray.fillna` method I could pass those data to such a `fillna` function together with the specified method/value/limit keywords, and then wrap the result of that in again into `GeometryArray` before returning. \r\nSimilar pattern could be useful for PeriodArray."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376409084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-376409084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 376409084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQwOTA4NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T06:13:27Z",
    "updated_at": "2018-03-27T06:13:27Z",
    "author_association": "MEMBER",
    "body": "Might be missing the larger context here but I recently implemented a Cythonized fill method for groupby objects that writes an array of indexes.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/c36e9f705bdb2843398f6484dbda9458e38a7ce7/pandas/_libs/groupby.pyx#L270\r\n\r\nA subsequent call to `algorithms.take_nd` allows you to get backed \"filled\" values in a performant way agnostic of the object type - is that in the direction of what you are looking for here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376490337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-376490337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 376490337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQ5MDMzNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T11:27:02Z",
    "updated_at": "2018-03-27T11:27:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I think that looks about right, though I think it there would need to be an option to disable sorting for it to be usable outside a groupby context."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376543284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-376543284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 376543284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjU0MzI4NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-27T14:21:16Z",
    "updated_at": "2018-03-27T14:21:16Z",
    "author_association": "MEMBER",
    "body": "The sorting in the GroupBy implementation is only required to ensure that group items are evaluated together. A non-groupby implementation would be simpler and to your point not even not the sort that's in that code"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376914839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-376914839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 376914839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjkxNDgzOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T14:50:11Z",
    "updated_at": "2018-03-28T14:50:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Gotcha. Do you think we could share an implementation between groupby and\nnon-groupby? Is sorting the only difference?\n\n\nOn Tue, Mar 27, 2018 at 9:21 AM, William Ayd <notifications@github.com>\nwrote:\n\n> The sorting in the GroupBy implementation is only required to ensure that\n> group items are evaluated together. A non-groupby implementation would be\n> simpler and to your point not even not the sort that's in that code\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/20300#issuecomment-376543284>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIrUb8Vg8APoiH1NVQ04BCSB-pRO_ks5tikrigaJpZM4SmuSG>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377064219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-377064219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 377064219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA2NDIxOQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T22:52:57Z",
    "updated_at": "2018-03-28T22:52:57Z",
    "author_association": "MEMBER",
    "body": "I don't think they are that far off. In fact (though rather verbose) you could hack the groupby implementation as is to use with a Series\r\n\r\n```python\r\nIn [25]: from pandas._libs import groupby as libgroupby\r\nIn [25]: import pandas.core.algorithms as algorithms\r\nIn [25]: ser = pd.Series([1., np.nan, np.nan, 2, np.nan, 3, np.nan])\r\nIn [25]: idxes = np.zeros_like(ser, dtype=np.int64)  # positions to pass later to take\r\nIn [25]: dummy_labs = np.zeros_like(ser, dtype=np.int64)  # just need the same val for all items\r\nIn [25]: mask = np.isnan(ser.values).view(np.uint8)  # mask of NA vals\r\nIn [25]: libgroupby.group_fillna_indexer(idxes, dummy_labs, mask, 'ffill', -1)\r\n\r\nIn [25]: idxes\r\nOut[25]: array([0, 0, 0, 3, 3, 5, 5])\r\n\r\nIn [27]: algorithms.take_nd(ser.values, idxes)\r\nOut[27]: array([1., 1., 1., 2., 2., 3., 3.])\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377092357",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-377092357",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 377092357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA5MjM1Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T01:35:33Z",
    "updated_at": "2018-03-29T01:35:57Z",
    "author_association": "MEMBER",
    "body": "I don't want to open a pandora's box with this comment but this also has me thinking about our general approach to GroupBy and Series/DataFrame algorithms. The former tend to be copy/paste of the latter with a slight twist to account for Group labels, but I'm wondering if there's not a way for really all of the algorithms to be shared, with the Series/DataFrame ones providing either None or an empty array for Group labels.\r\n\r\nIt's certainly no small undertaking, but it would:\r\n  - Decrease technical debt, by only having on reference implementation and less duplication\r\n  - Decrease behavior nuances and inconsistent keyword support across the various types (ref #20091)\r\n  - Assumedly reduce distribution size from having a smaller code base (?)\r\n\r\nFood for thought"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377168022",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-377168022",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 377168022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzE2ODAyMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T08:50:37Z",
    "updated_at": "2018-03-29T08:50:37Z",
    "author_association": "MEMBER",
    "body": "Not about the bigger issue you raise, but about this specific algorithm. It seems that the existing `pad_1d` algorithm (what Tom posted in the top post) is somewhat faster as the groupby one:\r\n\r\n```\r\nIn [36]: ser = pd.Series(np.arange(100000))\r\n\r\nIn [37]: ser[np.random.randint(0, 100000, 10000)] = np.nan\r\n\r\nIn [38]: %%timeit\r\n    ...: idx = np.arange(len(ser), dtype='int64')\r\n    ...: mask = np.isnan(ser.values)\r\n    ...: pad_1d(idx, mask=mask, dtype='datetime64[ns]')\r\n    ...: idx[idx == iNaT] = -1\r\n    ...: \r\n435 Âµs Â± 20.8 Âµs per loop (mean Â± std. dev. of 7 runs, 1000 loops each)\r\n\r\nIn [39]: %%timeit\r\n    ...: idxes = np.zeros_like(ser, dtype=np.int64)  # positions to pass later to take\r\n    ...: dummy_labs = np.zeros_like(ser, dtype=np.int64)  # just need the same val for all items\r\n    ...: mask = np.isnan(ser.values).view(np.uint8)  # mask of NA vals\r\n    ...: libgroupby.group_fillna_indexer(idxes, dummy_labs, mask, 'ffill', -1)\r\n    ...: \r\n1.81 ms Â± 28 Âµs per loop (mean Â± std. dev. of 7 runs, 1000 loops each)\r\n\r\n```\r\n\r\n(of course I don't know how much overhead there is by the fact it needs to do something with the grouping. But just saying that for the original raised issue, we actually already have all cython infrastructure available, it is more making a higher level function wrapping the above, to make the functionality more easily available)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377265630",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-377265630",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 377265630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzI2NTYzMA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T15:05:34Z",
    "updated_at": "2018-03-29T15:05:34Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche that's interesting, though I'd wonder if just the algos implementation is coded more efficiently and some of that could be ported over to the groupby. I can't imagine the labels (since they are all missing anyway) should add that much overhead, but that would have to be profiled in more detail"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448251373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20300#issuecomment-448251373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20300",
    "id": 448251373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODI1MTM3Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T15:06:10Z",
    "updated_at": "2018-12-18T15:06:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "DatetimeLikeArrayMixin would benefit from this (or a `_values_for_fillna`) as well."
  }
]
