[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298892574",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16214#issuecomment-298892574",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16214",
    "id": 298892574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg5MjU3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T12:08:02Z",
    "updated_at": "2017-05-03T12:08:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "A bit simpler of an example:\r\n\r\n```python\r\n\r\nIn [44]: columns = pd.MultiIndex([['a', 'b', 'c'], ['', '', 'c1']], [[0, 1, 2], [1, 0, 2]])\r\n\r\nIn [45]: pd.DataFrame(columns=columns).reset_index()\r\n```\r\n\r\nPresumably because your `df.columns` has duplicates in the second level. I'll take a closer look later."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298896471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16214#issuecomment-298896471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16214",
    "id": 298896471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg5NjQ3MQ==",
    "user": {
      "login": "dinya",
      "id": 2182222,
      "node_id": "MDQ6VXNlcjIxODIyMjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2182222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinya",
      "html_url": "https://github.com/dinya",
      "followers_url": "https://api.github.com/users/dinya/followers",
      "following_url": "https://api.github.com/users/dinya/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinya/subscriptions",
      "organizations_url": "https://api.github.com/users/dinya/orgs",
      "repos_url": "https://api.github.com/users/dinya/repos",
      "events_url": "https://api.github.com/users/dinya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinya/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T12:28:30Z",
    "updated_at": "2017-05-03T12:28:48Z",
    "author_association": "NONE",
    "body": "@TomAugspurger \r\nYes, it is. Is it pandas restriction? Is only way is renaming duplicates before ``reset_index()`` temporary and renaming them to ``\"\"`` after operation again?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298898597",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16214#issuecomment-298898597",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16214",
    "id": 298898597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODg5ODU5Nw==",
    "user": {
      "login": "dinya",
      "id": 2182222,
      "node_id": "MDQ6VXNlcjIxODIyMjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2182222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dinya",
      "html_url": "https://github.com/dinya",
      "followers_url": "https://api.github.com/users/dinya/followers",
      "following_url": "https://api.github.com/users/dinya/following{/other_user}",
      "gists_url": "https://api.github.com/users/dinya/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dinya/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dinya/subscriptions",
      "organizations_url": "https://api.github.com/users/dinya/orgs",
      "repos_url": "https://api.github.com/users/dinya/repos",
      "events_url": "https://api.github.com/users/dinya/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dinya/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T12:38:21Z",
    "updated_at": "2017-05-03T12:38:21Z",
    "author_association": "NONE",
    "body": "BTW,\r\n\r\n```python\r\nimport pandas as pd\r\n\r\ndef rename_columns(df, template):\r\n    for i, columns in enumerate(df.columns.levels):\r\n        columns = columns.tolist()\r\n        for j, row in enumerate(columns):\r\n            if template in row:\r\n                columns[j] = \"\"\r\n        df.columns.set_levels(columns, level=i, inplace=True)\r\n        \r\n        \r\ndf = pd.DataFrame([[1,2,3], [10,20,30]])\r\ndf.columns = pd.MultiIndex.from_tuples([(\"a\", \"a1\"), (\"b\", \"b1\"), (\"c\", \"c1\")])\r\nrename_columns(df, \"a1\")\r\n\r\ndf[\"d\"] = 1\r\ndf\r\n```\r\n\r\nworks well, but\r\n```python\r\ndf = pd.DataFrame([[1,2,3], [10,20,30]])\r\ndf.columns = pd.MultiIndex.from_tuples([(\"a\", \"a1\"), (\"b\", \"\"), (\"c\", \"c1\")])\r\nrename_columns(df, \"a1\")\r\ndf[\"d\"] = 1\r\ndf\r\n```\r\n\r\nreturns\r\n```text\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-33-515550a9c85a> in <module>()\r\n      2 df.columns = pd.MultiIndex.from_tuples([(\"a\", \"a1\"), (\"b\", \"\"), (\"c\", \"c1\")])\r\n      3 rename_columns(df, \"a1\")\r\n----> 4 df[\"d\"] = 1\r\n      5 df\r\n\r\nC:\\Users\\USER\\AppData\\Local\\Continuum\\Miniconda2\\lib\\site-packages\\pandas\\core\\frame.pyc in __setitem__(self, key, value)\r\n   2417         else:\r\n   2418             # set column\r\n-> 2419             self._set_item(key, value)\r\n   2420 \r\n   2421     def _setitem_slice(self, key, value):\r\n\r\nC:\\Users\\USER\\AppData\\Local\\Continuum\\Miniconda2\\lib\\site-packages\\pandas\\core\\frame.pyc in _set_item(self, key, value)\r\n   2484         self._ensure_valid_index(value)\r\n   2485         value = self._sanitize_column(key, value)\r\n-> 2486         NDFrame._set_item(self, key, value)\r\n   2487 \r\n   2488         # check if we are modifying a copy\r\n\r\nC:\\Users\\USER\\AppData\\Local\\Continuum\\Miniconda2\\lib\\site-packages\\pandas\\core\\generic.pyc in _set_item(self, key, value)\r\n   1498 \r\n   1499     def _set_item(self, key, value):\r\n-> 1500         self._data.set(key, value)\r\n   1501         self._clear_item_cache()\r\n   1502 \r\n\r\nC:\\Users\\USER\\AppData\\Local\\Continuum\\Miniconda2\\lib\\site-packages\\pandas\\core\\internals.pyc in set(self, item, value, check)\r\n   3669         except KeyError:\r\n   3670             # This item wasn't present, just insert at end\r\n-> 3671             self.insert(len(self.items), item, value)\r\n   3672             return\r\n   3673 \r\n\r\nC:\\Users\\USER\\AppData\\Local\\Continuum\\Miniconda2\\lib\\site-packages\\pandas\\core\\internals.pyc in insert(self, loc, item, value, allow_duplicates)\r\n   3767 \r\n   3768         # insert to the axis; this could possibly raise a TypeError\r\n-> 3769         new_axis = self.items.insert(loc, item)\r\n   3770 \r\n   3771         block = make_block(values=value, ndim=self.ndim,\r\n\r\nC:\\Users\\USER\\AppData\\Local\\Continuum\\Miniconda2\\lib\\site-packages\\pandas\\indexes\\multi.pyc in insert(self, loc, item)\r\n   2241 \r\n   2242             new_levels.append(level)\r\n-> 2243             new_labels.append(np.insert(_ensure_int64(labels), loc, lev_loc))\r\n   2244 \r\n   2245         return MultiIndex(levels=new_levels, labels=new_labels,\r\n\r\nC:\\Users\\USER\\AppData\\Local\\Continuum\\Miniconda2\\lib\\site-packages\\numpy\\lib\\function_base.pyc in insert(arr, obj, values, axis)\r\n   4896         # There are some object array corner cases here, but we cannot avoid\r\n   4897         # that:\r\n-> 4898         values = array(values, copy=False, ndmin=arr.ndim, dtype=arr.dtype)\r\n   4899         if indices.ndim == 0:\r\n   4900             # broadcasting is very different here, since a[:,0,:] = ... behaves\r\n\r\nTypeError: long() argument must be a string or a number, not 'slice'\r\n```\r\n\r\nIs the reason is the same?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298901720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16214#issuecomment-298901720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16214",
    "id": 298901720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODkwMTcyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T12:51:57Z",
    "updated_at": "2017-05-03T12:51:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Yes, it is. Is it pandas restriction?\r\n\r\nI don't recall if / where it's enforced. In the docstring for MI, we do say \r\n\r\n```\r\nlevels : sequence of arrays\r\n    The unique labels for each level\r\n```\r\n\r\nIn general, directly manipulating the labels / levels can get you into sticky situations.\r\n\r\nAnd as you say, it's not *just* that there are duplicates. It seems like the empty string matters."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298909812",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16214#issuecomment-298909812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16214",
    "id": 298909812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODkwOTgxMg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-03T13:25:44Z",
    "updated_at": "2017-05-03T13:25:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #11424 - empty string MI labels sometimes get special treatment, guessing it could be related."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299671159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16214#issuecomment-299671159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16214",
    "id": 299671159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY3MTE1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T23:01:59Z",
    "updated_at": "2017-05-06T23:01:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @toobaz "
  }
]
