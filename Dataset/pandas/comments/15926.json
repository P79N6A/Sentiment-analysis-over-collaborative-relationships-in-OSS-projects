[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292329886",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292329886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292329886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMyOTg4Ng==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-04-06T21:31:29Z",
    "updated_at": "2017-04-06T21:31:29Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=h1) Report\n> Merging [#15926](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/4502e82083f4e253630588665a4fc6002c4f32ed?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/15926/graphs/tree.svg?width=650&src=pr&height=150&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #15926      +/-   ##\n==========================================\n+ Coverage   90.96%   90.97%   +<.01%     \n==========================================\n  Files         145      145              \n  Lines       49557    49573      +16     \n==========================================\n+ Hits        45081    45097      +16     \n  Misses       4476     4476\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `88.73% <100%> (ø)` | :arrow_up: |\n| #single | `40.6% <0%> (-0.02%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/reshape.py](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS5weQ==) | `99.3% <100%> (+0.02%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=footer). Last update [4502e82...d761096](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292329962",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292329962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292329962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMyOTk2Mg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-04-06T21:31:39Z",
    "updated_at": "2017-04-11T18:54:58Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=h1) Report\n> Merging [#15926](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/6d90a436674a1e285d4577553b5cb75906a1bd27?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `92.18%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/15926/graphs/tree.svg?src=pr&token=eZ4WkYLtcO&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #15926      +/-   ##\n==========================================\n+ Coverage   90.98%   90.99%   +<.01%     \n==========================================\n  Files         145      145              \n  Lines       49556    49618      +62     \n==========================================\n+ Hits        45090    45150      +60     \n- Misses       4466     4468       +2\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `88.76% <92.18%> (+0.01%)` | :arrow_up: |\n| #single | `40.53% <9.37%> (-0.04%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/reshape.py](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS5weQ==) | `99.3% <100%> (+0.02%)` | :arrow_up: |\n| [pandas/types/cast.py](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree#diff-cGFuZGFzL3R5cGVzL2Nhc3QucHk=) | `85.5% <81.48%> (-0.24%)` | :arrow_down: |\n| [pandas/indexes/multi.py](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree#diff-cGFuZGFzL2luZGV4ZXMvbXVsdGkucHk=) | `96.7% <0%> (ø)` | :arrow_up: |\n| [pandas/io/parsers.py](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree#diff-cGFuZGFzL2lvL3BhcnNlcnMucHk=) | `95.65% <0%> (+0.01%)` | :arrow_up: |\n| [pandas/core/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29tbW9uLnB5) | `91.03% <0%> (+0.34%)` | :arrow_up: |\n| [pandas/types/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=tree#diff-cGFuZGFzL3R5cGVzL2NvbW1vbi5weQ==) | `94.48% <0%> (+0.83%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=footer). Last update [6d90a43...f7ee8f5](https://codecov.io/gh/pandas-dev/pandas/pull/15926?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292338028",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292338028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292338028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjMzODAyOA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:05:54Z",
    "updated_at": "2017-04-06T22:05:54Z",
    "author_association": "NONE",
    "body": "I get hesitating. Let me know your decision before we do a lot work. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292347204",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292347204",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292347204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjM0NzIwNA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-06T22:42:48Z",
    "updated_at": "2017-04-06T22:42:48Z",
    "author_association": "NONE",
    "body": "Alright. Everything but what the option should be called is fixed, the linting too hopefully. :/"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292533580",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292533580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292533580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzMzU4MA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T13:17:32Z",
    "updated_at": "2017-04-07T13:17:32Z",
    "author_association": "NONE",
    "body": "@jreback I'm happy to address these comments. Almost all of this testing code was copied from other parts of the test suite. Should all of that other code be cleaned up as well?\r\n\r\nAlso, are we set on the interface re: the other discussion on the issue thread?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292537074",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292537074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292537074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzNzA3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T13:32:45Z",
    "updated_at": "2017-04-07T13:32:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback I'm happy to address these comments. Almost all of this testing code was copied from other parts of the test suite. Should all of that other code be cleaned up as well?\r\n\r\nsure if you'd like. I haven't looked at *all* code (hahha). So for sure some non-conforming code exists. (things like cleaning up other code usually better in other PR though).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292537421",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292537421",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292537421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzNzQyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T13:34:09Z",
    "updated_at": "2017-04-07T13:34:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am ok with the API. @TomAugspurger @jorisvandenbossche "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292543681",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292543681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292543681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU0MzY4MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T13:58:05Z",
    "updated_at": "2017-04-07T13:58:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you summarize the final API from that other issue? Like one comment said, dropna is a bit weird since we aren't ever dropping rows or cols.\n\nIn a sense, the current behavior is like fillna=0. You do the dummy encoding, with NaN -> NaN, then fill those output NaNs with 0. Your proposal is to not fill them. That's all assuming dummy_na=False. You wouldn't want to allow fillna=None or nan.\n\nSo I could see either fillna=0, or the third value for dummy_na like now. Not a strong preference over those two. With fillna would there be weird interactions with dummy_na?\n\n> On Apr 7, 2017, at 8:34 AM, Jeff Reback <notifications@github.com> wrote:\n> \n> I am ok with the API. @TomAugspurger @jorisvandenbossche\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n> \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292550802",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292550802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292550802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU1MDgwMg==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T14:24:43Z",
    "updated_at": "2017-04-07T14:24:43Z",
    "author_association": "NONE",
    "body": "Yeah I think this is where the rub is and 100% agree! Right now the code is filling missing values by default using something like `fillna=0`. \r\n\r\nHere are the main considerations compiled in one spot:\r\n\r\n1. I searched the rest of the code base and found no examples of a `fillna` keyword in any public API. In fact, pandas already provides a centralized way to fill missing values, so adding something that is different here doesn't make sense. There should be one, and hopefully only one, way to do things.\r\n2. There is the further value checking that might need to be done with a `fillna` keyword.\r\n3. As I stated in the other issue, `dropna=True` is weird since we are not dropping rows. In the other parts of pandas public API, I have only seen this keyword used in reduction-like operations (i.e., summing, taking an average, etc.) where you want the operation to ignore missing values. This usage would deviate from those parts of the API.\r\n4. A further reason `dropna` is weird is that pandas also already provides a public API to drop data, namely the `dropna` method. Again, there should be one and only one way to do things.\r\n\r\nSo I think the best solution is to not fill missing values by default at all and let people use the already provided public API methods to do this. This keeps the API purely idiomatic. Further it would let people do things like drop rows with missing values before or after they apply the `get_dummies` function, making processing with these functions more robust to changes in the order of operations, more idempotent, etc.\r\n\r\nThus my suggested API is\r\n\r\n1. Don't fill any NaN's in any situation.\r\n2. The `dummy_na` keyword just adds the extra column with a flag if there are any NaNs for each row.\r\n\r\nThe current API with the PR as it stands now (i.e., with the `dummy_na='keep'` option) does this\r\n\r\n1. By default (`dummy_na=False`), all NaNs are set to zero.\r\n2. If `dummay_na=True`, fill NaNs to zero and add the column of missing value flags.\r\n3. If `dummy_na='keep'`, don't add an extra missing value column and don't fill missing values to zero.\r\n\r\nIMO, the simpler solution of just not filling missing values with zero by default makes the code easier to reason about, easier to maintain since there is not a maze of options, and fundamentally more consistent with the other pandas API conventions. \r\n\r\nOFC it is possible to go with the second solution above, but this adds more complication to the code, deviates from other parts of the pandas API, and leaves the code harder to reason about. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292558315",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292558315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292558315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU1ODMxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T14:52:01Z",
    "updated_at": "2017-04-07T14:52:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@beckermr ``fillna`` is a function name, the one you are looking for is ``fill_value`` which is pretty common. e.g. see ``.unstack`` or ``.reindex``\r\n\r\nso that actually might be a nice alternative here, though it would have to be ``fill_value=0`` to preserve the existing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292559643",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292559643",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292559643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU1OTY0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T14:56:44Z",
    "updated_at": "2017-04-07T14:56:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the summary, will give feedback later.\n\nJeff is right, anywhere I used fillna it should have been fill_value. \n\n> On Apr 7, 2017, at 9:52 AM, Jeff Reback <notifications@github.com> wrote:\n> \n> @beckermr fillna is a function name, the one you are looking for is fill_value which is pretty common. e.g. see .unstack or .reindex\n> \n> so that actually might be a nice alternative here, though it would have to be fill_value=0 to preserve the existing.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n> \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292560364",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292560364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292560364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU2MDM2NA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T14:59:11Z",
    "updated_at": "2017-04-07T14:59:48Z",
    "author_association": "NONE",
    "body": "Ahhhhh @jreback. Thanks! \r\n\r\nAre there any other examples where `fill_value` is set to something besides `NaN` or `None`? \r\n\r\nI searched the code base and I cannot find any. So using `fill_value=0` would also deviate from the API of (the rest? most of the rest?) of the code.\r\n\r\nWe keep coming up with alternative solutions that generate their own conflicts with other parts of the pandas API. I think this all points to the fact that filling with zero by default is fundamentally in conflict with the rest of the API and so should be deprecated."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292563499",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292563499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292563499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU2MzQ5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T15:10:29Z",
    "updated_at": "2017-04-07T15:10:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "``fill_value=np.nan`` is generally the default.\r\n\r\nSo this *does* deviate from the API (as you have noted) 😄 \r\n\r\nThe question is it is worth breaking this (and it would be a bit break I think).\r\n\r\nas @jorisvandenbossche noted, this is generally a 'final' function so filling is nice implicity.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292566873",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292566873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292566873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU2Njg3Mw==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T15:22:29Z",
    "updated_at": "2017-04-07T15:22:29Z",
    "author_association": "NONE",
    "body": "See my response to this point:\r\n\r\n> The current API makes too many assumptions. Right now, the current API asserts that if a label is missing, it is NONE of the labels you have. This cannot possibly be true in all cases.\r\n>\r\n> Instead, if NaNs were always propagated by default (even if an additional missing label column is added) then users would be required to reason about why their labels are missing and how they should fill nulls.\r\n>\r\n> For example, if labels are missing at random and the rest of the data is representative, then filling the missing one hot encoded rows with the fraction of each label would be a pretty good way to fill nulls.\r\n>\r\n> Of course pandas should not do this either since it should not be making assumptions about the input data.\r\n\r\nBasically, pandas cannot promise that filling zeros is the right thing to do. Making as few assumptions about peoples' input data and letting them do things like\r\n\r\n```python\r\ndata_final = pd.get_dummies(data).fillna(0)\r\n```\r\n\r\nis the preferred solution since it is explicit, idiomatic with respect to the rest of the API, and respectful to the user to give them the option to do what they like. \r\n\r\nBreaking this basic part of the API for just this one function for this one case using an assumption about the input data that we cannot possibly ensure is always true seems like an easy choice to me. Don't break the API. Filling and dropping missing values is a core use of pandas and this bit the of the API should be as pure as possible. \r\n\r\nFurther, there are major version changes for a reason. Pandas regularly pushes backwards incompatible changes in a effort to improve the API and make the code better. My suggested solution is very much inline with this ongoing work.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292569096",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292569096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292569096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU2OTA5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T15:30:42Z",
    "updated_at": "2017-04-07T15:30:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm +1 on adding a `fill_value` with the default of 0.\r\nI'm -1 on outright breaking API, by having the default be `None` or `np.nan` (not sure if this is being proposed or not).\r\nI'm on the fence about adding `fill_value=0` with a deprecation warning that it will change to `None` in the future, probably -0 at this point.\r\n\r\nFortunately, we can defer discussion on what the default should be in the future.\r\nAdding `fill_value=0` is backwards compatible, and let's us start a deprecation cycle if we decide to.\r\n\r\n@beckermr just in case it's not clear, I think you're argument is completely valid. I just am on the fence about whether it's worth deprecating and changing in the future. While pandas has been aggressive about changing APIs, we're *trying* to become more stable. Are you OK with implementing `fill_value=0` for now, and kicking the deprecation stuff down the road?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292572799",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292572799",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292572799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU3Mjc5OQ==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T15:44:01Z",
    "updated_at": "2017-04-07T15:44:01Z",
    "author_association": "NONE",
    "body": "I see your point of course, but I think the purity of the API on this core function is very important. \r\n\r\nI suspect that as the API is cleaned up, there will be less to change. In other words, once it is all internally consistent with clearly correct choices, no more of these changes that break stuff will need to be done in the first place. \r\n\r\nThe other thing to be said is that supporting old features which have turned out to be problematic indefinitely is a bad practice too since it hampers the development of the code base as a whole.\r\n\r\nI do get being queasy about making them. However, I don't think people will realistically ever move away from pandas, unless they move from python too. Given this, it is better to fix stuff sooner rather than later so that pandas can further mature into the core tool it is already.\r\n\r\nI am happy with adding `fill_value=0`. I think we should also mark the deprecation of the zero default to a `NaN` default *now*. This will kick off the deprecation cycle and fix this as soon as realistically possible without really breaking stuff, which I am not in favor of."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292573694",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292573694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292573694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU3MzY5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T15:47:24Z",
    "updated_at": "2017-04-07T15:47:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@beckermr so just to be clear, we would leave ``dummy_na`` (as is) and add ``fill_value=None`` (with deprecation warning), where it would still fill with 0. ?\r\n\r\nok with deprecation actually (though *could* be just a ``DeprecationWarning``), rather than a full-fledged ``FutureWarning``."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292575149",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292575149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292575149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU3NTE0OQ==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T15:52:51Z",
    "updated_at": "2017-04-07T15:54:09Z",
    "author_association": "NONE",
    "body": "Yes, this is close to my proposed solution. I would\r\n\r\n1. Leave `dummy_na` as is.\r\n2. Add `fill_value=0`. (It is weird to me for it to be set to None, but us to fill with zero anyways, so just be explicit and change the keyword later. Edit: You might have meant this. It was not clear to me. Sorry!)\r\n3. Add either a DeprecationWarning or FutureWarning saying that `fill_value` will default to `NaN` or `None` in the future.\r\n4. At some point, change the default and remove the warning.\r\n\r\nI do not know the difference in how `DeprecationWarning` and `FutureWarning` are used so advice on this is much appreciated. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292577425",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292577425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292577425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU3NzQyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T16:01:28Z",
    "updated_at": "2017-04-07T16:01:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes you set ``fill_value=None`` to signal that someone hasn't passed *anything*, so you *know* to warn."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292578466",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292578466",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292578466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU3ODQ2Ng==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T16:05:34Z",
    "updated_at": "2017-04-07T16:05:34Z",
    "author_association": "NONE",
    "body": "Ohhhh ok @jreback. Sounds good. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292578675",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292578675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292578675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjU3ODY3NQ==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T16:06:27Z",
    "updated_at": "2017-04-07T16:06:27Z",
    "author_association": "NONE",
    "body": "@jreback @TomAugspurger Are we all in agreement then? \r\n\r\nI am happy to make the changes OFC."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292659410",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292659410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292659410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjY1OTQxMA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-07T21:44:11Z",
    "updated_at": "2017-04-07T21:44:11Z",
    "author_association": "NONE",
    "body": "I pushed the new version. Let me know what you think.\r\n\r\n@jreback @TomAugspurger for viz"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292718296",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292718296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292718296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcxODI5Ng==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T13:31:42Z",
    "updated_at": "2017-04-08T13:31:42Z",
    "author_association": "NONE",
    "body": "@jreback @TomAugspurger Concerning dtypes, we want to do the following?\r\n\r\n1. If no NaNs and fill_value = np.nan, then return uint8.\r\n2. If NaNs, figure out the minimal type given the type of fill_value and use that.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292718644",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292718644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292718644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcxODY0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T13:37:49Z",
    "updated_at": "2017-04-08T13:38:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback @TomAugspurger Concerning dtypes, we want to do the following?\r\nIf no NaNs and fill_value = np.nan, then return uint8.\r\nIf NaNs, figure out the minimal type given the type of fill_value and use that.\r\n\r\nyep, you can prob just default this to ``float32`` for 2) and ``uint8`` for 1) (the inference will give you ``float64``).  like\r\n\r\n```\r\nif is_integer(fill_value):\r\n     dtype = np.uint8\r\nelif is_float(fill_value):\r\n     dtype = np.float32\r\nelse:\r\n     raise ValueError(.....)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292718724",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292718724",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292718724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcxODcyNA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T13:39:23Z",
    "updated_at": "2017-04-08T13:39:23Z",
    "author_association": "NONE",
    "body": "Cool. For signed ints (i.e., fill_value=-1), should I use int8 or int32?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292719016",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292719016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292719016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcxOTAxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T13:44:25Z",
    "updated_at": "2017-04-08T13:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Cool. For signed ints (i.e., fill_value=-1), should I use int8 or int32?\r\n\r\ngood point, ``int8`` is fine"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292719170",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292719170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292719170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcxOTE3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T13:47:07Z",
    "updated_at": "2017-04-08T13:47:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "to be extra defensive you can do check if ``fill_value`` is in range of ``np.iinfo(np.int8).max`` (and .min), otherwise you can make it a ``int64`` (annoying but pls test as well)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292719218",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292719218",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292719218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcxOTIxOA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T13:48:08Z",
    "updated_at": "2017-04-08T13:48:08Z",
    "author_association": "NONE",
    "body": "Sounds good. A simple if block is not terribly difficult. :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292719235",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292719235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292719235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcxOTIzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T13:48:19Z",
    "updated_at": "2017-04-08T13:48:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "maybe better is to use ``pandas.types.cast.infer_dtype_from_scalar`` and add an argument there ``downcast=False`` (which you will set to ``True``), that for ``int/float`` can implement this logic."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/292719584",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15926#issuecomment-292719584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15926",
    "id": 292719584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjcxOTU4NA==",
    "user": {
      "login": "beckermr",
      "id": 5296416,
      "node_id": "MDQ6VXNlcjUyOTY0MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5296416?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beckermr",
      "html_url": "https://github.com/beckermr",
      "followers_url": "https://api.github.com/users/beckermr/followers",
      "following_url": "https://api.github.com/users/beckermr/following{/other_user}",
      "gists_url": "https://api.github.com/users/beckermr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beckermr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beckermr/subscriptions",
      "organizations_url": "https://api.github.com/users/beckermr/orgs",
      "repos_url": "https://api.github.com/users/beckermr/repos",
      "events_url": "https://api.github.com/users/beckermr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beckermr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-08T13:54:32Z",
    "updated_at": "2017-04-08T13:54:32Z",
    "author_association": "NONE",
    "body": "I see what you mean, but I think this should be a separate issue that can be addressed in another PR. I am guessing the downcasting logic is repeated a lot in the code base? Probably better to look at the other uses and make sure that something centralized makes sense?"
  }
]
