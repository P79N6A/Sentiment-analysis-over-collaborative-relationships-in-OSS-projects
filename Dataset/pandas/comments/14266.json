[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248569753",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248569753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248569753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODU2OTc1Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T10:16:07Z",
    "updated_at": "2016-09-21T10:16:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #12272 for the general usecase (frequency based index) makes this vastly more memory efficient (IOW it already knows `is_unique`, `is_monotonic_increasing` etc.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248571385",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248571385",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248571385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODU3MTM4NQ==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T10:23:39Z",
    "updated_at": "2016-09-21T10:23:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Unfortunately, I don't think a range-based implementation will work for Zipline's specific use-case, since there are lots of irregularities to real-world trading schedules, but a datetime-based range index definitely seems useful for folks with nicely regular data.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248571823",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248571823",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248571823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODU3MTgyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T10:25:53Z",
    "updated_at": "2016-09-21T10:25:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah I suspect what you actually want is a sparse range (IOW a range based, with a mask which is much more memory efficient)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248572857",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248572857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248572857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODU3Mjg1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T10:31:11Z",
    "updated_at": "2016-09-21T10:31:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pydata/pandas/pull/13594 does not seem to matter here (though maybe it did originally)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248602172",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248602172",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248602172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYwMjE3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T12:49:27Z",
    "updated_at": "2016-09-21T12:49:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "so [this](https://github.com/jreback/pandas/commit/4cca9439978ae6490c968795c82cd8b0b1d8cb2e) fixes the issue (it breaks some other things, but those just need a trivial `_ensure_mapping` to fixup.\n\nIIRC quite some time ago we changed the is_monotonic check. It _used_ to _also_ compute uniqueness when it actually is unique, so this is a necessary but not sufficient condition.\n\nHowever we are not using that information and recomputing (and constructing the mapping which is memory heavy).\n\nThis uses the check where possible (and does the re-initialization if needed).\n\njust needs a little fixup and I think will solve the issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248634137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248634137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248634137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYzNDEzNw==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T14:44:25Z",
    "updated_at": "2016-09-21T14:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback thanks for the quick response.  Does your branch also plan to update the other code paths that can trigger hash table creation ?  At a glance, it looks like `get_indexer` does this, as well as `__contains__` for everything except `DatetimeEngine`, which has custom special-case logic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248635123",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248635123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248635123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYzNTEyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T14:47:41Z",
    "updated_at": "2016-09-21T14:47:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "would need some other test cases\n\nthis by definition IS special cased\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248650142",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248650142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248650142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1MDE0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T15:34:39Z",
    "updated_at": "2016-09-21T15:34:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssanderson by-definition `get_indexer` MUST populate the hash table, so for `__contains__` this also seems reasonable (e.g. even if its unique, how do you find the indexer?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248655015",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248655015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248655015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1NTAxNQ==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T15:50:16Z",
    "updated_at": "2016-09-21T15:50:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> so for `__contains__` this also seems reasonable\n\nI'm not sure if you're saying that `__contains__` should always populate, or if you're saying it should avoid populating when possible.  To be clear, `DatetimeEngine` [already implements](https://github.com/pydata/pandas/blob/a7469cf98275a183ad2e4bfafa9706a1ef8d035e/pandas/index.pyx#L517-L524) `__contains__` without a hash table by doing a `searchsorted` and then comparing the value at the located index with the whose containment status was requested.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248656655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248656655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248656655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1NjY1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T15:55:22Z",
    "updated_at": "2016-09-21T15:55:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "and the DTE will avoid populating for the cases we are talking. \n\nFor non-large (e.g. < cutoff) it has always used the existing logic (which does populate). separate / independent whether that should be profiled.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248658252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248658252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248658252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY1ODI1Mg==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T16:00:22Z",
    "updated_at": "2016-09-21T16:00:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> and the DTE will avoid populating for the cases we are talking.\n\nRight.  My original question was whether we should make the other engines have the same behavior as the datetime engine.  It seemed odd to me the different index types would want to make different choices about whether to populate the hash table, but it's possible that that's by design for reasons I missed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248660397",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248660397",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248660397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY2MDM5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T16:07:13Z",
    "updated_at": "2016-09-21T16:07:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "so it IS possible for int64 index as `.searchsorted` would be faster. I _dont't_ think this should be the default for `Index` as I suspect the hashtable impl is much faster that `.searchsorted`. But that could/should be another issue.\n\nBenchmarks on this behavior would be welcome though to make a decision. Profiling is key here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248660765",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248660765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248660765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY2MDc2NQ==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T16:08:17Z",
    "updated_at": "2016-09-21T16:08:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> by-definition `get_indexer` MUST populate the hash table\n\nI'm not sure what you mean when you say that `get_indexer` \"by definition\" has to populate the hash table.  \n\nAs I understand it, `get_indexer` is essentially just a vectorized version of `get_loc`, so assuming we can implement `get_loc` without a hash table (which we've already done for the special case of of a monotonic index), in the worst case we could implement `get_indexer` in terms of a for-loop that calls `get_loc`.  In practice, you could probably do much better than the naive for-loop, especially if the target indexer is also monotonic.\n\nI certainly could see the argument that such a change to `get_indexer` is large enough that it deserves to be a separate PR/discussion.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248661701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248661701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248661701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY2MTcwMQ==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T16:11:33Z",
    "updated_at": "2016-09-21T16:11:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> so it IS possible for int64 index as searchsorted would be faster. I dont't think this should be the default for Index as I suspect the hashtable impl is much faster that searchsorted. But that could/should be another issue.\n\nFair enough.  Another thing to think about here is that there are workloads where the user might accept a slower searchsorted-based index in exchange for memory savings.  In our production Zipline deployments, for example, our bottleneck is almost always RAM, not CPU, so we'd likely be willing to take a performance hit in exchange for an extra couple hundred MB.  The design here is tricky though b/c different users and use-cases will be willing to make different tradeoffs here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248662115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248662115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248662115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY2MjExNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T16:13:01Z",
    "updated_at": "2016-09-21T16:13:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "let me clarify, yes I agree `.get_indexer` could have the same treatment, though it doesn't ATM. So separate issue for that. I wasn't attempting to change things which weren't already implemented the large-sorted-unique behavior (which is a useful special case)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248663148",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248663148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248663148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY2MzE0OA==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T16:16:18Z",
    "updated_at": "2016-09-21T16:16:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool, sounds like we're in agreement.  If I find the time to work on it, would you be interested in a separate PR that extends the no-hash-table algorithms in some of the cases outlined above?  I can't promise for sure that I'll be able to devote a ton of time to it, but zipline leans pretty heavily on DatetimeIndex, so optimizations here can be pretty big wins for us.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248663657",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248663657",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248663657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY2MzY1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T16:18:02Z",
    "updated_at": "2016-09-21T16:18:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes I think that would be great. Please create an issue in any event.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248665512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14266#issuecomment-248665512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14266",
    "id": 248665512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODY2NTUxMg==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-21T16:24:18Z",
    "updated_at": "2016-09-21T16:24:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Opened as https://github.com/pydata/pandas/issues/14273.\n"
  }
]
