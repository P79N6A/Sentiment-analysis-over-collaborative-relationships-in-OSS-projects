[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7718999",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-7718999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 7718999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MTg5OTk=",
    "user": {
      "login": "badgley",
      "id": 1392400,
      "node_id": "MDQ6VXNlcjEzOTI0MDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1392400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/badgley",
      "html_url": "https://github.com/badgley",
      "followers_url": "https://api.github.com/users/badgley/followers",
      "following_url": "https://api.github.com/users/badgley/following{/other_user}",
      "gists_url": "https://api.github.com/users/badgley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/badgley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/badgley/subscriptions",
      "organizations_url": "https://api.github.com/users/badgley/orgs",
      "repos_url": "https://api.github.com/users/badgley/repos",
      "events_url": "https://api.github.com/users/badgley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/badgley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-14T08:06:30Z",
    "updated_at": "2012-08-14T08:06:30Z",
    "author_association": "NONE",
    "body": "Alright going to try to knock this sucker out -- where should I be touching the code? Looks like TextParser already has a date_parser flag in it. But when I trace that down, it runs into some Cython code that feels intimidating. I suspect there already exists a way to specify the frequency of a timeseries index -- is it just a matter of passing some sort of parameter to that part of the code? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7780036",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-7780036",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 7780036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3ODAwMzY=",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-16T08:58:58Z",
    "updated_at": "2012-08-16T08:58:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think the parser can guess. In order to verify that it has a fixed freq, it would need to digest all the datetimes anyways. So it wouldn't really save you much since creating a fixed freq DatetimeIndex is quick. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7924436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-7924436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 7924436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjQ0MzY=",
    "user": {
      "login": "badgley",
      "id": 1392400,
      "node_id": "MDQ6VXNlcjEzOTI0MDA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1392400?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/badgley",
      "html_url": "https://github.com/badgley",
      "followers_url": "https://api.github.com/users/badgley/followers",
      "following_url": "https://api.github.com/users/badgley/following{/other_user}",
      "gists_url": "https://api.github.com/users/badgley/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/badgley/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/badgley/subscriptions",
      "organizations_url": "https://api.github.com/users/badgley/orgs",
      "repos_url": "https://api.github.com/users/badgley/repos",
      "events_url": "https://api.github.com/users/badgley/events{/privacy}",
      "received_events_url": "https://api.github.com/users/badgley/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-22T04:34:01Z",
    "updated_at": "2012-08-22T04:34:01Z",
    "author_association": "NONE",
    "body": "@dalejung thanks for the reply. I think the whole point of the ticket is -- even though making the DatetimeIndex is fast, it comes up so often that we might as well toss a flag in. Are you saying we should just close this down and not fix it? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7925756",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-7925756",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 7925756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MjU3NTY=",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-08-22T06:29:27Z",
    "updated_at": "2012-08-22T06:29:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gbadge I was primarily referring to the ability to guess. \n\nMy point about the fixed freq is that I think the original issue is that he has to resample AFTER parse_dates, which is slow. Instead, he can just not parse dates and set the index to a separately created DatetimeIndex. \n\nhttp://nbviewer.maxdrawdown.com/3422791/default.ipynb\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/8802674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-8802674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 8802674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4MDI2NzQ=",
    "user": {
      "login": "bmu",
      "id": 1622906,
      "node_id": "MDQ6VXNlcjE2MjI5MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1622906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmu",
      "html_url": "https://github.com/bmu",
      "followers_url": "https://api.github.com/users/bmu/followers",
      "following_url": "https://api.github.com/users/bmu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmu/subscriptions",
      "organizations_url": "https://api.github.com/users/bmu/orgs",
      "repos_url": "https://api.github.com/users/bmu/repos",
      "events_url": "https://api.github.com/users/bmu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-23T20:40:03Z",
    "updated_at": "2012-09-23T20:40:03Z",
    "author_association": "NONE",
    "body": "@gbadge thanks for your help.\n\n@dalejung I'm usually working with time series files with regular or irregular time steps, but I don't know before if they are regular or not.\n\nYour approach is good for regular time series. Something like this could be implemented with an additional keyword 'freq' to read_csv.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16275690",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-16275690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 16275690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Mjc1Njkw",
    "user": {
      "login": "patricktokeeffe",
      "id": 1348834,
      "node_id": "MDQ6VXNlcjEzNDg4MzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1348834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patricktokeeffe",
      "html_url": "https://github.com/patricktokeeffe",
      "followers_url": "https://api.github.com/users/patricktokeeffe/followers",
      "following_url": "https://api.github.com/users/patricktokeeffe/following{/other_user}",
      "gists_url": "https://api.github.com/users/patricktokeeffe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patricktokeeffe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patricktokeeffe/subscriptions",
      "organizations_url": "https://api.github.com/users/patricktokeeffe/orgs",
      "repos_url": "https://api.github.com/users/patricktokeeffe/repos",
      "events_url": "https://api.github.com/users/patricktokeeffe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patricktokeeffe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-12T04:46:04Z",
    "updated_at": "2013-04-12T04:46:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "This should not implemented using a `freq` argument if the intent is to pass in some numeric value. If the `read_csv` function is called with `parse_dates=True` then the date parsing function should attempt to determine the frequency on it's own. It's nonsense to expect the frequency to be known and passed to the parsing function. If the user can specify a value for `freq` they might as well reindex it after loading. \n\nMaybe I could understand adding a `determine_freq` boolean argument...\n\nBetter still (for the user), parse the dates then try and determine the frequency anyway using `pd.infer_freq`. It took me quite a while to find this function; since it exists, I'm a little puzzled the date parser doesn't use it by by default. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24872669",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-24872669",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 24872669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODcyNjY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T23:25:36Z",
    "updated_at": "2013-09-21T23:25:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "the dates are created but unless you turn them into a `DatetimeIndex`, e.g. via `pd.to_datetime(...., box=True)` then you won't have automatic freq inferring (and its not completely free to do this, that's why its done lazily).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35052562",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-35052562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 35052562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUyNTYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T03:29:53Z",
    "updated_at": "2014-02-14T03:29:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "not an enhancement, use `pd.infer_freq`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162092752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-162092752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 162092752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjA5Mjc1Mg==",
    "user": {
      "login": "dacoex",
      "id": 8660305,
      "node_id": "MDQ6VXNlcjg2NjAzMDU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8660305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dacoex",
      "html_url": "https://github.com/dacoex",
      "followers_url": "https://api.github.com/users/dacoex/followers",
      "following_url": "https://api.github.com/users/dacoex/following{/other_user}",
      "gists_url": "https://api.github.com/users/dacoex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dacoex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dacoex/subscriptions",
      "organizations_url": "https://api.github.com/users/dacoex/orgs",
      "repos_url": "https://api.github.com/users/dacoex/repos",
      "events_url": "https://api.github.com/users/dacoex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dacoex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T21:55:46Z",
    "updated_at": "2015-12-13T20:39:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "[Edit: corrected code snippet]\n\nSo what is the best way to set the frequency directly from the csv file dates?\n\n```\ndf = df.asfreq(pd.infer_freq(df.index))\n```\n\nAnd why can a infer_freq no be part of the read_csv function\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162510832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1690#issuecomment-162510832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1690",
    "id": 162510832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjUxMDgzMg==",
    "user": {
      "login": "dacoex",
      "id": 8660305,
      "node_id": "MDQ6VXNlcjg2NjAzMDU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8660305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dacoex",
      "html_url": "https://github.com/dacoex",
      "followers_url": "https://api.github.com/users/dacoex/followers",
      "following_url": "https://api.github.com/users/dacoex/following{/other_user}",
      "gists_url": "https://api.github.com/users/dacoex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dacoex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dacoex/subscriptions",
      "organizations_url": "https://api.github.com/users/dacoex/orgs",
      "repos_url": "https://api.github.com/users/dacoex/repos",
      "events_url": "https://api.github.com/users/dacoex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dacoex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-07T12:27:05Z",
    "updated_at": "2015-12-07T12:27:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "similar issue:\nhttps://github.com/pydata/pandas/issues/5613\n"
  }
]
