[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427154289",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427154289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427154289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE1NDI4OQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T20:15:32Z",
    "updated_at": "2018-10-04T20:15:32Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for submitting the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/base.py`](https://github.com/TomAugspurger/pandas/blob/ed56aa39b05434f0650f7cc9631cb84604e044f3/pandas/core/dtypes/base.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/dtypes.py`](https://github.com/TomAugspurger/pandas/blob/ed56aa39b05434f0650f7cc9631cb84604e044f3/pandas/core/dtypes/dtypes.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/base/dtype.py`](https://github.com/TomAugspurger/pandas/blob/ed56aa39b05434f0650f7cc9631cb84604e044f3/pandas/tests/extension/base/dtype.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/decimal/array.py`](https://github.com/TomAugspurger/pandas/blob/ed56aa39b05434f0650f7cc9631cb84604e044f3/pandas/tests/extension/decimal/array.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/json/array.py`](https://github.com/TomAugspurger/pandas/blob/ed56aa39b05434f0650f7cc9631cb84604e044f3/pandas/tests/extension/json/array.py) !\n\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427154340",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427154340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427154340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE1NDM0MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T20:15:43Z",
    "updated_at": "2018-10-04T20:15:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @xhochy @jorisvandenbossche, @znicholls (people who seem to have implemented an extension array outside of pandas). This may subtly break your code if you have a parametrized ExtensionDtype and don't update to set `_metadata`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427163352",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427163352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427163352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE2MzM1Mg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-10-04T20:46:14Z",
    "updated_at": "2018-10-05T09:53:48Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22996?src=pr&el=h1) Report\n> Merging [#22996](https://codecov.io/gh/pandas-dev/pandas/pull/22996?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/d430195ffaa37df2d8fc3ecf26306bb5e06b4ad0?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22996/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/22996?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #22996      +/-   ##\n==========================================\n- Coverage    92.2%   92.19%   -0.01%     \n==========================================\n  Files         169      169              \n  Lines       50822    50831       +9     \n==========================================\n+ Hits        46858    46866       +8     \n- Misses       3964     3965       +1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.61% <100%> (-0.01%)` | :arrow_down: |\n| #single | `42.35% <42.85%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22996?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/dtypes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/22996/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2Jhc2UucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/dtypes.py](https://codecov.io/gh/pandas-dev/pandas/pull/22996/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2R0eXBlcy5weQ==) | `95.54% <100%> (-0.02%)` | :arrow_down: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/22996/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `86.18% <0%> (-0.05%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22996?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22996?src=pr&el=footer). Last update [d430195...b7242f6](https://codecov.io/gh/pandas-dev/pandas/pull/22996?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427180037",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427180037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427180037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzE4MDAzNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T21:44:35Z",
    "updated_at": "2018-10-04T21:44:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Apparently decimal contexts aren't hashable in python 2. Just going to skip."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427233632",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427233632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427233632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzIzMzYzMg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T03:12:47Z",
    "updated_at": "2018-10-05T03:12:47Z",
    "author_association": "MEMBER",
    "body": "What's the apprehension against a metaclass for ExtensionTypes? Couldn't we leverage introspection during class creation to do this automatically instead of requiring users to explicitly define that class attribute?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427311430",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427311430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427311430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzMxMTQzMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T10:02:26Z",
    "updated_at": "2018-10-05T10:02:26Z",
    "author_association": "MEMBER",
    "body": "> What's the apprehension against a metaclass for ExtensionTypes?\r\n\r\nThe docstring mentions performance reasons. \r\n\r\nIn principle we could indeed inspect the signature of the constructor (that's what eg sklearn does to determine what the 'params' of an Estimator are), but personally I am fine with requiring the user to list them explicitly (explicitness also has some value).\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427341328",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427341328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427341328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzM0MTMyOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T12:01:22Z",
    "updated_at": "2018-10-05T12:01:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "> give things a perf check; these can often be expensive checks\r\n\r\nWhere do you have in mind? This PR has no change in behavior anywhere in pandas. All of our ExtensionDtypes, other than IntegerArray already defined a `__hash__`.\r\n\r\n> What's the apprehension against a metaclass for ExtensionTypes? \r\n\r\nI was mainly thinking unnecessary complexity. In the past, every time I've reached for a metaclass there's been a simpler solution. But as Joris mentions, `isinstance(foo, MetaClass)` is quite a bit slower than for regular classes inheriting from object."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427342513",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427342513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427342513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzM0MjUxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T12:06:34Z",
    "updated_at": "2018-10-05T12:06:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Where do you have in mind? This PR has no change in behavior anywhere in pandas. All of our ExtensionDtypes, other than IntegerArray already defined a __hash__.\r\n\r\nwell, run the asv suite. I have changed things like this in the pass and if its not exactly right it can kill perf. These checks are hit *a lot* if practically everything."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427353614",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427353614",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427353614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzM1MzYxNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-05T12:44:22Z",
    "updated_at": "2018-10-05T12:44:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I can check on Sunday. I’m away from the computer for a couple days.\n\nBut again, the only change in pandas would be to not raise an error when trying to hash IntegerDtype. The rest already override hash.\n\n________________________________\nFrom: Jeff Reback <notifications@github.com>\nSent: Friday, October 5, 2018 7:06:49 AM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Mention\nSubject: Re: [pandas-dev/pandas] API: ExtensionDtype Equality and Hashability (#22996)\n\n\nWhere do you have in mind? This PR has no change in behavior anywhere in pandas. All of our ExtensionDtypes, other than IntegerArray already defined a hash.\n\nwell, run the asv suite. I have changed things like this in the pass and if its not exactly right it can kill perf. These checks are hit a lot if practically everything.\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427342513>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHIhDxShkStMZH_b71FvRbhwNN-pQbks5uh0tZgaJpZM4XI1XM>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427581361",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427581361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427581361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzU4MTM2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-06T15:10:55Z",
    "updated_at": "2018-10-06T15:10:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But again, the only change in pandas would be to not raise an error when trying to hash IntegerDtype. The rest already override hash.\r\n\r\nok so prob nothing, but can't hurt to check. thanks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427879311",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427879311",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427879311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzg3OTMxMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T15:30:54Z",
    "updated_at": "2018-10-08T15:30:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just some noise it looks like\r\n\r\n```\r\n+        1.89±0ms         2.42±0ms     1.28  rolling.Methods.time_rolling('DataFrame', 10, 'int', 'sum')\r\n+        9.24±0ms         11.8±0ms     1.28  gil.ParallelRolling.time_rolling('skew')\r\n+        3.16±0ms         4.02±0ms     1.27  offset.OffsetDatetimeIndexArithmetic.time_add_offset(<BusinessDay>)\r\n+         663±0μs          824±0μs     1.24  timeseries.DatetimeIndex.time_to_time('dst')\r\n+        56.3±0ms         69.1±0ms     1.23  rolling.Quantile.time_quantile('DataFrame', 1000, 'int', 0.5, 'higher')\r\n+        3.76±0ms         4.61±0ms     1.22  stat_ops.FrameOps.time_op('sum', 'float', 0, False)\r\n+        66.4±0ms         81.1±0ms     1.22  stat_ops.FrameOps.time_op('skew', 'float', 1, False)\r\n+        1.74±0ms         2.11±0ms     1.21  index_object.Ops.time_divide('int')\r\n+        3.38±0ms         4.08±0ms     1.21  indexing.Take.time_take('datetime')\r\n+         556±0μs          672±0μs     1.21  series_methods.IsInForObjects.time_isin_nans\r\n+        14.3±0ms         17.2±0ms     1.21  join_merge.Join.time_join_dataframe_index_shuffle_key_bigger_sort(True)\r\n+         739±0μs          892±0μs     1.21  ctors.SeriesConstructors.time_series_constructor(<function SeriesConstructors.<lambda> at 0x11bd06d90>, False)\r\n+        37.8±0ms         45.6±0ms     1.21  frame_ctor.FromDicts.time_list_of_dict\r\n+         485±0μs          585±0μs     1.20  offset.ApplyIndex.time_apply_index(<YearBegin: month=1>)\r\n+         243±0ms          293±0ms     1.20  join_merge.ConcatDataFrames.time_f_ordered(1, False)\r\n+        7.54±0ms         9.02±0ms     1.20  categoricals.Rank.time_rank_int_cat_ordered\r\n+        22.7±0ms         26.9±0ms     1.18  io.sql.ReadSQLTableDtypes.time_read_sql_table_column('datetime')\r\n+         120±0ms          142±0ms     1.18  io.hdf.HDFStoreDataFrame.time_read_store_mixed\r\n+        4.11±0ms         4.86±0ms     1.18  rolling.Methods.time_rolling('DataFrame', 10, 'float', 'kurt')\r\n+         505±0μs          596±0μs     1.18  offset.ApplyIndex.time_apply_index(<QuarterBegin: startingMonth=3>)\r\n+        1.06±0ms         1.25±0ms     1.18  indexing.CategoricalIndexIndexing.time_getitem_bool_array('non_monotonic')\r\n+        8.69±0ms         10.2±0ms     1.18  frame_methods.Equals.time_frame_float_unequal\r\n+         212±0ms          248±0ms     1.17  groupby.GroupByMethods.time_dtype_as_group('int', 'skew', 'transformation')\r\n+        10.1±0ms         11.8±0ms     1.17  frame_methods.Apply.time_apply_lambda_mean\r\n+        4.00±0ms         4.67±0ms     1.17  offset.OnOffset.time_on_offset(<CustomBusinessMonthEnd>)\r\n+         680±0ms          791±0ms     1.16  io.stata.Stata.time_read_stata('tc')\r\n+        4.02±0ms         4.65±0ms     1.16  offset.OffsetSeriesArithmetic.time_add_offset(<SemiMonthEnd: day_of_month=15>)\r\n+        48.7±0ms         56.2±0ms     1.16  strings.Methods.time_center\r\n+        9.23±0ms         10.5±0ms     1.14  frame_methods.ToString.time_to_string_floats\r\n+         167±0ms          188±0ms     1.13  reindex.DropDuplicates.time_frame_drop_dups_int(False)\r\n+         941±0μs         1.06±0ms     1.13  indexing.CategoricalIndexIndexing.time_getitem_list('monotonic_decr')\r\n+         323±0ms          364±0ms     1.13  frame_methods.Duplicated.time_frame_duplicated\r\n+         421±0ms          471±0ms     1.12  frame_methods.Duplicated.time_frame_duplicated_wide\r\n+        7.80±0ms         8.71±0ms     1.12  groupby.Categories.time_groupby_nosort\r\n+        3.68±0ms         4.10±0ms     1.12  sparse.Arithmetic.time_make_union(0.01, 0)\r\n+        3.70±0ms         4.13±0ms     1.12  sparse.ArithmeticBlock.time_division(0)\r\n+         355±0ms          396±0ms     1.11  gil.ParallelGroupbyMethods.time_loop(4, 'prod')\r\n+         543±0ms          605±0ms     1.11  gil.ParallelGroupbyMethods.time_parallel(8, 'sum')\r\n+        16.7±0ms         18.6±0ms     1.11  io.pickle.Pickle.time_write_pickle\r\n+         1.03±0s          1.15±0s     1.11  groupby.GroupByMethods.time_dtype_as_group('float', 'mad', 'direct')\r\n+        3.70±0ms         4.10±0ms     1.11  timeseries.ToDatetimeCache.time_dup_string_dates_and_format(True)\r\n+        2.88±0ms         3.19±0ms     1.11  stat_ops.FrameOps.time_op('prod', 'float', 0, True)\r\n+         585±0μs          647±0μs     1.11  offset.ApplyIndex.time_apply_index(<QuarterEnd: startingMonth=3>)\r\n+        35.3±0ms         39.0±0ms     1.11  algorithms.Duplicated.time_duplicated_int('last')\r\n+         140±0ms          154±0ms     1.10  sparse.Arithmetic.time_add(0.01, nan)\r\n+         374±0ms          412±0ms     1.10  gil.ParallelGroupbyMethods.time_loop(4, 'sum')\r\n+        26.5±0ms         29.2±0ms     1.10  strings.Methods.time_lstrip\r\n+        47.7±0ms         52.4±0ms     1.10  rolling.Quantile.time_quantile('Series', 10, 'int', 0.5, 'higher')\r\n```\r\n\r\nthough I'll be sure to check the asv runner tomorrow."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427927473",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427927473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427927473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzkyNzQ3Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T18:04:56Z",
    "updated_at": "2018-10-08T18:04:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Merging tomorrow if no objections."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427973803",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22996#issuecomment-427973803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22996",
    "id": 427973803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzk3MzgwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T20:47:04Z",
    "updated_at": "2018-10-08T20:47:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "if asv is like that then no objections "
  }
]
