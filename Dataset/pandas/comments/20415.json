[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/374461062",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-374461062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 374461062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDQ2MTA2Mg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-03-20T03:27:13Z",
    "updated_at": "2018-12-02T02:11:20Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20415?src=pr&el=h1) Report\n> Merging [#20415](https://codecov.io/gh/pandas-dev/pandas/pull/20415?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/b45eb265dd88648fb02ebb0fdcfb168364ab664e?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/20415/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/20415?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #20415      +/-   ##\n==========================================\n- Coverage   42.46%   42.46%   -0.01%     \n==========================================\n  Files         161      161              \n  Lines       51557    51556       -1     \n==========================================\n- Hits        21892    21891       -1     \n  Misses      29665    29665\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #single | `42.46% <100%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/20415?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/20415/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `55.2% <100%> (-0.06%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20415?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20415?src=pr&el=footer). Last update [b45eb26...6879e89](https://codecov.io/gh/pandas-dev/pandas/pull/20415?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405153742",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-405153742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 405153742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTE1Mzc0Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-16T05:46:14Z",
    "updated_at": "2018-07-16T05:46:14Z",
    "author_association": "MEMBER",
    "body": "This looks close to ready.  Pls rebase."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406827190",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-406827190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 406827190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjgyNzE5MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-21T22:22:44Z",
    "updated_at": "2018-07-21T22:22:44Z",
    "author_association": "MEMBER",
    "body": "Needs rebase.  Aside from that and two small requested edits, this is ready pending OK from @datapythonista ."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406830281",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-406830281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 406830281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjgzMDI4MQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-21T23:41:29Z",
    "updated_at": "2018-07-21T23:41:29Z",
    "author_association": "MEMBER",
    "body": "Thanks for the contribution @ParfaitG.\r\n\r\nYour examples look good, but if you have time it'd be cool to add some extra stuff to this PR (sorry we couldn't provide more clear information during the sprint).\r\n\r\nI'd personally reuse a single docstring for `eq`, `ne`, `gt`, `gte`, `lt`, `lte`. I think we could provide a bit longer description, mainly for new users, but also explain how these methods are more flexible than the equivalent operators (`==`, `!=`, `>`...) as the axis and levels can be specified.\r\n\r\nThen, it'd be good to have the `Parameters` section.\r\n\r\nAlso, the `See Also` section can be included to link to all these methods sharing the docstring.\r\n\r\nFor the examples, what you did looks good, but it could help the users if the dataframes are a bit smaller (something like 2 cols and 3 rows), and the example is a bit more meaningful (e.g. instead of columns `num1`... a value that users can understand and quickly compare between dataframes).\r\n\r\nHow does this sound?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406893980",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-406893980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 406893980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjg5Mzk4MA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-22T20:21:57Z",
    "updated_at": "2018-09-27T23:44:28Z",
    "author_association": "NONE",
    "body": "Hello @ParfaitG! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/ops.py`](https://github.com/ParfaitG/pandas/blob/722ae81e803b437127dda4999997111738e91019/pandas/core/ops.py) !\n\n\n\n##### Comment last updated on September 27, 2018 at 23:44 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406894988",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-406894988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 406894988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjg5NDk4OA==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-22T20:38:59Z",
    "updated_at": "2018-07-22T20:38:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Understood @datapythonista ... please see updated PR with a more comprehensive revision on the comparison operators."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408807770",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-408807770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 408807770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODgwNzc3MA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-30T09:44:09Z",
    "updated_at": "2018-07-30T09:44:09Z",
    "author_association": "MEMBER",
    "body": "Thanks for the update @ParfaitG. It looks better, but as we discussed before, I don't think it is as useful to have the example of each comparison in each page, than to show well why the methods exists, how they are different from the operators, and how you can use them on different axis.\r\n\r\nYesterday I was working on a tutorial that among other things covers this. You can take a look at the `pandas DataFrame` section to get the idea of what I mean: https://github.com/datapythonista/pandas-tutorials/blob/master/02_Data_structures.ipynb\r\n\r\nWhat I think we should do: Get rid of all the `_eq_example_FRAME`... variables, and move the example to the main docstring (just one method to start with). Same for `_comp_others`. If I'm not missing anything, the same exact content is being using in every docstring anyway (so, there is no value on keeping it in a separate variable).\r\n\r\nThen, the example should show:\r\n- Comparing with a scalar (`other` parameter) and the rest of parameters by default.\r\n- Comparing with another `DataFrame`.\r\n- Comparing with `Series`, show how the `axis` parameter changes the behavior.\r\n- Comparing with a `MultiIndex`, show how the `level` parameter changes the behavior.\r\n- Showing the cases where the operator is equivalent to the method\r\n\r\nAs there are many cases to show, you can keep using the different methods in each of them, so more or less all them are covered. Meaning that when you compare with a scalar you can use `eq`, when you compare with a `DataFrame` you can use `gt`, and so on.\r\n\r\nLet me know how does this sound, and if there is anything I can help with."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414084674",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-414084674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 414084674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA4NDY3NA==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-18T20:34:06Z",
    "updated_at": "2018-08-18T20:34:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista ... Did you get my note above regarding the need for double curly braces? The entire docstring is being run with `str.format()` and we need to escape the actuals from format's placeholders. Please advise."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414084973",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-414084973",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 414084973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA4NDk3Mw==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-18T20:39:34Z",
    "updated_at": "2018-08-18T20:39:34Z",
    "author_association": "MEMBER",
    "body": "Oh, I see, didn't see that comment, sorry. As the number of variables is just two, and the number of curly brackets in the docstring is much larger, I think it'd be simpler to use `docstring % dict(var=...` than `docstring.format(...`. What do you think? Is there any advantage in `format`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414086192",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-414086192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 414086192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDA4NjE5Mg==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-18T21:02:55Z",
    "updated_at": "2018-08-18T21:02:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "To stay consistent, most string formatting in `ops.py` uses `format`. And from my understanding, the modulo operator is an outmoded, less preferred way for string interpolation in Python. Nonetheless, I did run validation script and these methods passed. Next week I will report the validation result for a few for your reference."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414864429",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-414864429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 414864429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDg2NDQyOQ==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T00:22:14Z",
    "updated_at": "2018-08-22T00:22:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista  ... agreed. I removed the `if` logic but did not directly pass into `@Appender` due to the line length rules raise by the flake8 check: `git diff upstream/master -u -- \"*.py\" | flake8 --diff`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415052244",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-415052244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 415052244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTA1MjI0NA==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T14:29:45Z",
    "updated_at": "2018-08-22T14:29:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback...Forgive me, I am not aware of doc-tests but I did run the validation string script on all methods (`eq`, `ne`,  etc.). Re blank line between examples, will do in several hours.\r\n\r\n@datapythonista ... Thanks for your help. Curious, should we adjust arithmetic operator doc strings in same manner as comparison operators with a different PR?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415054718",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-415054718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 415054718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTA1NDcxOA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T14:36:28Z",
    "updated_at": "2018-08-22T14:36:28Z",
    "author_association": "MEMBER",
    "body": "@ParfaitG, what @jreback is talking about is #22459. But we still don't have `pandas/core/ops.py` in the CI, so I'd leave adding this docstring to a separate PR where we can add some more files.\r\n\r\nRegarding the arithmetic operator docstring, I didn't checked it, but we have more than 1,000 than need improvements, so I guess it'll be one of them, and it'd be really great if you can work on it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415098287",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-415098287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 415098287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTA5ODI4Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T16:41:41Z",
    "updated_at": "2018-08-22T16:41:41Z",
    "author_association": "MEMBER",
    "body": "> you requested some changes that I think have been addressed. Can you take a look before we merge?\r\n\r\n@datapythonista I think all my concerns have been addressed.\r\n\r\n@ParfaitG Thanks for pushing this through.  It took a little longer than expected, but you really nailed it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415272931",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-415272931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 415272931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTI3MjkzMQ==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T03:33:14Z",
    "updated_at": "2018-08-23T03:33:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista, Please see update with arithmetic operators docstring revamped to resemble comparison operators. I removed the need of separate `df_examples` as previously set up."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415637903",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-415637903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 415637903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTYzNzkwMw==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T03:10:24Z",
    "updated_at": "2018-08-24T03:10:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista, I have updated the DataFrame arithmetic operator docstring. And while I was at it, I updated Series arithmetic docstring. I also come to find out there was no Series comparison docstring. It just reuses the arithmetic docstring. \r\n\r\nSo, I added a brand new docstring for Series comparison operators which also involved adding a new `def` method in *Series* section at bottom. The `ops.py` does compile and all `validation_string` methods with `doc_test` do pass. Please advise on this extensive update. I hope your head doesn't spin for the confusion!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415642575",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-415642575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 415642575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTY0MjU3NQ==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T03:46:45Z",
    "updated_at": "2018-08-24T03:46:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, but both are being called separately above. And docstrings are assigned differently. But you make a good point we can combine and have callers pass args for conditional returns."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415705533",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-415705533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 415705533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTcwNTUzMw==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T09:27:58Z",
    "updated_at": "2018-08-24T09:27:58Z",
    "author_association": "MEMBER",
    "body": "@ParfaitG is it a big problem to address the new changes in a separate PR? The new changes are more substantial and will require some discussions and review, and having the previous changes which were ready to be merged, makes it more complex and time consuming.\r\n\r\nI think you should be able to do a `git reset --soft <VERSION_WITH_PREVIOUS_CHANGES>`, and then create a new branch and commit the changes there."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415748235",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-415748235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 415748235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTc0ODIzNQ==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-24T12:46:51Z",
    "updated_at": "2018-08-24T12:46:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista, Absolutely makes sense. I will rollback in this PR and leave Series methods docstrings unchanged and propose an adjustment after merge."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/416088435",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-416088435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 416088435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjA4ODQzNQ==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-27T01:17:01Z",
    "updated_at": "2018-08-27T01:17:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista, please note I have rolled back and updated the DataFrame arithmetic operator docstring. Let me know your thoughts and any next steps."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424643860",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-424643860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 424643860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDY0Mzg2MA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T09:12:13Z",
    "updated_at": "2018-09-26T09:12:13Z",
    "author_association": "MEMBER",
    "body": "Also, @ParfaitG, I was taking a look at the CI, and seems like we've got tests that validate the operations docstrings, that's why the checks are failing. Can you run the tests, and update the ones that are failing please?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424781876",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-424781876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 424781876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDc4MTg3Ng==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T16:26:34Z",
    "updated_at": "2018-09-26T16:26:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista ... I may need some direction on adding \"doctests\" using that shell script. Do I run your `pytest` command and/or run shell script, `ci/doctests.sh`, then push committed changes to this branch? \r\n\r\nAs for other item, before I ever commit changes, I ran `validate_string` on most operator methods; `flake8-diff` for whitespace and line length; and even `make_html` to visually see doc output. Any other checks to run? I can show `validate_string` results on 1-2 methods as I did in opening of this PR. However, CI test dump shows `add`  might have an issue. I will look into this method and ensure `validate_string` runs correct on ALL methods."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424836841",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-424836841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 424836841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDgzNjg0MQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T19:15:39Z",
    "updated_at": "2018-09-26T19:15:39Z",
    "author_association": "MEMBER",
    "body": "Sorry for the lack of context @ParfaitG. The validations you're doing are perfect, and I don't think your changes have any mistake.\r\n\r\nWhat we would like is that every time someone sends a PR, validate whether all examples in the docstrings are correct. Correct in the way that the shown output is the actual result a user would get if they run the examples. For that, we've got the file `ci/doctests.sh`. While what we'd like is to validate every single docstring in pandas, so far we just added the files `core/series.py`, `core/frame.py` and `core/generic.py`. And even in those, we still have some broken examples, that at the moment we skip, and that we're slowly fixing.\r\n\r\nWhat we think it would be good is to add `core/ops.py` to that validation, as you fix all (or most) of the docstrings in that file. So, not only your changes are correct, but any future change to thoses docstrings will necessarily have to pass the doctests.\r\n\r\nSo, what you can do to make this happen is to edit the file `ci/doctests.sh` and add another validation like the one I sent for `core/generic.py` but for `core/ops.py`. Remove to start with all the stuff in the `-k` parameter (including the parameter itself). Then run the file, and see if there is any broken docstring. If there is any method broken unrelated to the PR, you add its name to the `-k` option. If it's one of the ones you changes (it won't) you fix it. And with some luck, nothing will fail, and we'll start validating all the docstrings on that file since we merge your PR.\r\n\r\nUnrelated to this, if you run the pandas \"normal\" tests, you'll see that some tests are broken. Seems like there are tests validating the content of the docstrings you updated. I assume we wanted to check that when we \"inject\" the docstrings, every method (`add`, `mul`...) gets its docstring, and not anonther. You'll need to update these tests. You can also see in the checks in this conversation, how they are in red. After fixing them they'll be in green, and we'll be ready to merge your changes.\r\n\r\nSorry this is getting a bit too complicated. Let me know if you need help. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425558189",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-425558189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 425558189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU1ODE4OQ==",
    "user": {
      "login": "ParfaitG",
      "id": 13602663,
      "node_id": "MDQ6VXNlcjEzNjAyNjYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/13602663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ParfaitG",
      "html_url": "https://github.com/ParfaitG",
      "followers_url": "https://api.github.com/users/ParfaitG/followers",
      "following_url": "https://api.github.com/users/ParfaitG/following{/other_user}",
      "gists_url": "https://api.github.com/users/ParfaitG/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ParfaitG/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ParfaitG/subscriptions",
      "organizations_url": "https://api.github.com/users/ParfaitG/orgs",
      "repos_url": "https://api.github.com/users/ParfaitG/repos",
      "events_url": "https://api.github.com/users/ParfaitG/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ParfaitG/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T20:34:49Z",
    "updated_at": "2018-09-28T20:34:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@datapythonista ... Please advise on why tests failed. I updated `ci/doctests` per your instruction, finding only one method is defined and failed for `ops.py`: `_gen_eval_kwargs`.  I did notice a few others failed for `frame.py`, `series.py`, and `generic.py` and added those in the skip `-k` argument. Let me know if my implementation was off. Also, per this [PR](https://github.com/pandas-dev/pandas/pull/22701) I had to  remove the `addopts = --strict-data-files` from my `setup.cfg` to get this to work or it kept raising _unrecognized argument_.\r\n\r\nAlso, this time, `validate_string` script failed on the arithmetic methods with something like *summary should be one line*, so I broke the first line up to accommodate, moving *With reverse version, `{reverse}`.* to next line. I think this relates to one of the test fails here. Btw - we do not cover all docstrings for `ops.py`. Recall my earlier attempt that I rolled back to update the `Series` versions of these same comparison and arithmetic operators. We only touch the `DataFrame` versions here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425577017",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-425577017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 425577017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTU3NzAxNw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T21:55:28Z",
    "updated_at": "2018-09-28T21:55:28Z",
    "author_association": "MEMBER",
    "body": "The failure occurs because you are no longer substituting `equiv` so you aren't getting something like `dataframe + other` to show up in the add doctoring, which the test is explicitly checking for."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425683308",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-425683308",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 425683308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTY4MzMwOA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-30T00:03:29Z",
    "updated_at": "2018-09-30T00:03:29Z",
    "author_association": "MEMBER",
    "body": "@ParfaitG I see that the doctest that fails in `ops.py` is just because of quotes:\r\n```\r\nExpected:\r\n    {\"reversed\": True, \"truediv\": True}\r\nGot:\r\n    {'reversed': True, 'truediv': True}\r\n```\r\nBeing such a small change, if you want to change it in this PR, instead of skipping the `_gen_eval_kwargs` test, that would also be good."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429520293",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-429520293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 429520293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTUyMDI5Mw==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-13T07:53:36Z",
    "updated_at": "2018-10-13T07:53:36Z",
    "author_association": "MEMBER",
    "body": "@ParfaitG can you please take care of the conflicts. Merging after that, and when it's all green. Sorry about the delay."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429553999",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-429553999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 429553999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU1Mzk5OQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-13T16:12:42Z",
    "updated_at": "2018-10-13T16:12:42Z",
    "author_association": "MEMBER",
    "body": "thanks for the update @ParfaitG \r\n\r\n@jbrockmendel I think you reviewed this before. Do you mind taking another look and merge it if you're happy?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429556588",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-429556588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 429556588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU1NjU4OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-13T16:44:44Z",
    "updated_at": "2018-10-13T16:44:44Z",
    "author_association": "MEMBER",
    "body": "@datapythonista a handful of questions checking that your comments have been resolved.  If those are all OK, then LGTM."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429563865",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20415#issuecomment-429563865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20415",
    "id": 429563865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU2Mzg2NQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-13T18:18:56Z",
    "updated_at": "2018-10-13T18:18:56Z",
    "author_association": "MEMBER",
    "body": "You're right, didn't see those `index = [...]`.\r\n\r\n@ParfaitG I think you should be able to catch those with `flake8 --doctests pandas/core/ops.py`"
  }
]
