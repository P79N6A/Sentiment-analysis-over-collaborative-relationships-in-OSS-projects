[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/669378",
    "html_url": "https://github.com/pandas-dev/pandas/issues/30#issuecomment-669378",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/30",
    "id": 669378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTM3OA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-01-11T15:55:30Z",
    "updated_at": "2011-01-11T15:55:30Z",
    "author_association": "MEMBER",
    "body": "You identified a weakness (which I was aware of) with the way that date ranges are handled-- not a problem for lower frequency data but here it's a problem. I think it's inherently fixable but I need to think about it. I've been thinking recently about using something like Francesc Alted's carray package to implement an efficient (compressed) tickdata data structure-- since tickdata is fairly compressible I expect that it would work quite well.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/1296060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/30#issuecomment-1296060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/30",
    "id": 1296060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTYwNjA=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-03T10:56:47Z",
    "updated_at": "2011-06-03T10:56:47Z",
    "author_association": "MEMBER",
    "body": "This ought to be remedied by the datetime64 time in NumPy...once it's arrived. I have some ideas to try to do something about it in the meantime\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/1366222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/30#issuecomment-1366222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/30",
    "id": 1366222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjYyMjI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-14T14:17:06Z",
    "updated_at": "2011-06-14T14:17:06Z",
    "author_association": "MEMBER",
    "body": "Not sure exactly how but I appear to have fixed this problem in recent work on DateRange. Note that there's a Second offset in datetools with _significantly_ better performance:\n\n```\nIn [5]: s\nOut[5]: \n2000-01-03 00:00:00    -1.4477377311\n2000-01-04 00:00:00    -0.0657188405266\n2000-01-05 00:00:00    -0.240092884503\n2000-01-06 00:00:00    0.377959314609\n\nIn [6]: %time s.asfreq(DateOffset(seconds=1), method='pad')\nCPU times: user 4.68 s, sys: 0.08 s, total: 4.76 s\nWall time: 4.78 s\n\nIn [7]: %time s.asfreq(datetools.Second(), method='pad')\nCPU times: user 0.33 s, sys: 0.01 s, total: 0.34 s\nWall time: 0.35 s\n```\n"
  }
]
