[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343734765",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18236#issuecomment-343734765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18236",
    "id": 343734765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzczNDc2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T12:46:33Z",
    "updated_at": "2017-11-12T12:46:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Why is the df.plot() much slower than the explicit matplotlib plot when ploting the same dataframe?\r\n\r\n\r\nCould you do some profiling to look where times differ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343739482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18236#issuecomment-343739482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18236",
    "id": 343739482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzczOTQ4Mg==",
    "user": {
      "login": "fredrik-1",
      "id": 29602156,
      "node_id": "MDQ6VXNlcjI5NjAyMTU2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29602156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fredrik-1",
      "html_url": "https://github.com/fredrik-1",
      "followers_url": "https://api.github.com/users/fredrik-1/followers",
      "following_url": "https://api.github.com/users/fredrik-1/following{/other_user}",
      "gists_url": "https://api.github.com/users/fredrik-1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fredrik-1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fredrik-1/subscriptions",
      "organizations_url": "https://api.github.com/users/fredrik-1/orgs",
      "repos_url": "https://api.github.com/users/fredrik-1/repos",
      "events_url": "https://api.github.com/users/fredrik-1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fredrik-1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T14:03:15Z",
    "updated_at": "2017-11-12T14:03:15Z",
    "author_association": "NONE",
    "body": "I am new to profiling in python but I guess the (unecessary) time is spent in:\r\n```\r\n        1    0.000    0.000   70.357   70.357  pandas\\plotting\\_core.py:2611(__call__)\r\n        1    0.000    0.000   70.357   70.357 pandas\\plotting\\_core.py:1850(plot_frame)\r\n        1    0.000    0.000   70.357   70.357  pandas\\plotting\\_core.py:1640(_plot)\r\n        1    0.162    0.162   70.356   70.356  pandas\\plotting\\_core.py:241(generate)\r\n        1    0.613    0.613   69.868   69.868  pandas\\plotting\\_core.py:369(_post_plot_logic_common)\r\n        1    4.507    4.507   69.184   69.184  pandas\\plotting\\_core.py:371(<listcomp>)\r\n  1000001    9.924    0.000   64.677    0.000  pandas\\io\\formats\\printing.py:157(pprint_thing)\r\n  1000001   14.808    0.000   38.582    0.000  pandas\\io\\formats\\printing.py:186(as_escaped_unicode)\r\n  1000000    3.648    0.000   22.603    0.000  numpy\\core\\numeric.py:1905(array_str)\r\n  1000000    8.743    0.000   18.955    0.000 numpy\\core\\arrayprint.py:381(wrapper)\r\n  1000000    6.561    0.000    7.512    0.000  numpy\\core\\arrayprint.py:399(array2string)\r\n  2000696    7.280    0.000    7.280    0.000 {built-in method builtins.hasattr}\r\n  1000001    4.571    0.000    6.814    0.000  pandas\\core\\dtypes\\inference.py:396(is_sequence)\r\n  3003869    3.259    0.000    3.270    0.000 {built-in method builtins.isinstance}\r\n  1001993    2.247    0.000    2.247    0.000 {built-in method builtins.iter}\r\n  1000000    0.951    0.000    0.951    0.000 {method 'item' of 'numpy.ndarray' objects}\r\n  1000000    0.718    0.000    0.718    0.000 {method 'discard' of 'set' objects}\r\n  1000000    0.674    0.000    0.674    0.000 {built-in method _thread.get_ident}\r\n  1000002    0.656    0.000    0.656    0.000 {method 'add' of 'set' objects}\r\n  1000686    0.652    0.000    0.652    0.000 {built-in method builtins.id}\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343740788",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18236#issuecomment-343740788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18236",
    "id": 343740788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc0MDc4OA==",
    "user": {
      "login": "fredrik-1",
      "id": 29602156,
      "node_id": "MDQ6VXNlcjI5NjAyMTU2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29602156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fredrik-1",
      "html_url": "https://github.com/fredrik-1",
      "followers_url": "https://api.github.com/users/fredrik-1/followers",
      "following_url": "https://api.github.com/users/fredrik-1/following{/other_user}",
      "gists_url": "https://api.github.com/users/fredrik-1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fredrik-1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fredrik-1/subscriptions",
      "organizations_url": "https://api.github.com/users/fredrik-1/orgs",
      "repos_url": "https://api.github.com/users/fredrik-1/repos",
      "events_url": "https://api.github.com/users/fredrik-1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fredrik-1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T14:25:06Z",
    "updated_at": "2017-11-12T17:25:40Z",
    "author_association": "NONE",
    "body": "So pandas do a list comprehension for all elements in the index using the function `pprint_thing` to make unicode strings (or something similar). Not that strange that it takes time with millions of rows in the data frame.\r\n\r\nIs it necessary when you (at least in my case) can send the data directly to matplotlib?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343745839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18236#issuecomment-343745839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18236",
    "id": 343745839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzc0NTgzOQ==",
    "user": {
      "login": "fredrik-1",
      "id": 29602156,
      "node_id": "MDQ6VXNlcjI5NjAyMTU2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29602156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fredrik-1",
      "html_url": "https://github.com/fredrik-1",
      "followers_url": "https://api.github.com/users/fredrik-1/followers",
      "following_url": "https://api.github.com/users/fredrik-1/following{/other_user}",
      "gists_url": "https://api.github.com/users/fredrik-1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fredrik-1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fredrik-1/subscriptions",
      "organizations_url": "https://api.github.com/users/fredrik-1/orgs",
      "repos_url": "https://api.github.com/users/fredrik-1/repos",
      "events_url": "https://api.github.com/users/fredrik-1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fredrik-1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-12T15:42:10Z",
    "updated_at": "2017-11-12T17:26:15Z",
    "author_association": "NONE",
    "body": "The following change to `post_plot_logic_common` seems to work in my example:\r\n```\r\ndef _post_plot_logic_common(self, ax, data):\r\n        \"\"\"Common post process for each axes\"\"\"\r\n#        labels = [pprint_thing(key) for key in data.index]\r\n#        labels = dict(zip(range(len(data.index)), labels))\r\n\r\n        if self.orientation == 'vertical' or self.orientation is None:\r\n            if self._need_to_set_index:\r\n                xticklabels = [pprint_thing(data.index[x]) for x in ax.get_xticks()]\r\n#                xticklabels = [labels.get(x, '') for x in ax.get_xticks()]\r\n                ax.set_xticklabels(xticklabels)\r\n            self._apply_axis_properties(ax.xaxis, rot=self.rot,\r\n                                        fontsize=self.fontsize)\r\n            self._apply_axis_properties(ax.yaxis, fontsize=self.fontsize)\r\n        elif self.orientation == 'horizontal':\r\n            if self._need_to_set_index:\r\n                yticklabels = [pprint_thing(data.index[y]) for y in ax.get_yticks()]\r\n#                yticklabels = [labels.get(y, '') for y in ax.get_yticks()]\r\n                ax.set_yticklabels(yticklabels)\r\n            self._apply_axis_properties(ax.yaxis, rot=self.rot,\r\n                                        fontsize=self.fontsize)\r\n            self._apply_axis_properties(ax.xaxis, fontsize=self.fontsize)\r\n        else:  # pragma no cover\r\n            raise ValueError\r\n```\r\nbut this version has problem if get_xticks() don't return an integer index) but I don't really understand how the old code work well in that case either (returning a '' is of course better than an index error but I would think that it would be good to have a tick there also in that case)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343935753",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18236#issuecomment-343935753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18236",
    "id": 343935753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzkzNTc1Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T14:30:57Z",
    "updated_at": "2017-11-13T14:30:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure either. If your index is meaningless, we have the `use_index` keyword, which may be faster for you."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345696441",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18236#issuecomment-345696441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18236",
    "id": 345696441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTY5NjQ0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T13:33:38Z",
    "updated_at": "2017-11-20T13:33:38Z",
    "author_association": "MEMBER",
    "body": "Yeah indeed it is a bit strange as in many cases `get_xticks` don't return a valid index. I think therefore you have the `''` fallback in the current code so it does not error, and I suppose somewhere else it is then overwriting those empty strings with the correct labels (but I didn't further look into that). \r\n\r\nAnyhow, I have a PR that should fix this: https://github.com/pandas-dev/pandas/pull/18373"
  }
]
