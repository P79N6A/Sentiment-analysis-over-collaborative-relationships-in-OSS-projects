[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264048622",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264048622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264048622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDA0ODYyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-01T01:10:44Z",
    "updated_at": "2016-12-01T01:10:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can simply push to this pr as you update FYI"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264197863",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264197863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264197863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDE5Nzg2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-01T15:10:39Z",
    "updated_at": "2016-12-01T15:10:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls add an asv for this, see: http://pandas.pydata.org/pandas-docs/stable/contributing.html#running-the-performance-test-suite"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264228073",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264228073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264228073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDIyODA3Mw==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-01T16:54:31Z",
    "updated_at": "2016-12-01T16:55:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "asv added:\r\n\r\n```\r\n[  0.00%] · For pandas commit hash 4014f118:\r\n[  0.00%] ·· Building for conda-py2.7-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[  0.00%] ·· Benchmarking conda-py2.7-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 50.00%] ··· Running reshape.wide_to_long_big.time_wide_to_long_big                                                                                 130.66ms\r\n[ 50.00%] · For pandas commit hash 06f26b51:\r\n[ 50.00%] ·· Building for conda-py2.7-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[ 50.00%] ·· Benchmarking conda-py2.7-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[100.00%] ··· Running reshape.wide_to_long_big.time_wide_to_long_big                                                                                    2.05s    before     after       ratio\r\n  [06f26b51] [4014f118]\r\n-     2.05s   130.66ms      0.06  reshape.wide_to_long_big.time_wide_to_long_big\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264530194",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264530194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264530194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDUzMDE5NA==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-02T18:44:37Z",
    "updated_at": "2016-12-12T02:33:49Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pandas-dev/pandas/pull/14779?src=pr) is 85.27% (diff: 96.15%)\n> Merging [#14779](https://codecov.io/gh/pandas-dev/pandas/pull/14779?src=pr) into [master](https://codecov.io/gh/pandas-dev/pandas/branch/master?src=pr) will increase coverage by **<.01%**\n\n```diff\n@@             master     #14779   diff @@\n==========================================\n  Files           144        144          \n  Lines         50981      50989     +8   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n+ Hits          43470      43481    +11   \n+ Misses         7511       7508     -3   \n  Partials          0          0          \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last update [cb2d6eb...df1edf8](https://codecov.io/gh/pandas-dev/pandas/compare/cb2d6eb53ebe14f10a713a419a39faa545446a3e...df1edf8e182047f330df02e1697ad6feaff1dbf4?src=pr)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264717573",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264717573",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264717573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDcxNzU3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-04T17:30:16Z",
    "updated_at": "2016-12-04T17:30:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "needs a whatsnew entry (0.20.)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264727052",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264727052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264727052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDcyNzA1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-04T20:03:17Z",
    "updated_at": "2016-12-04T20:03:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "you could add an argument to specify the split (or make it take a regex)\r\n\r\nyes it should get stripped"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264742045",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264742045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264742045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc0MjA0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-04T23:54:35Z",
    "updated_at": "2016-12-04T23:54:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "further, not sure if http://pandas.pydata.org/pandas-docs/stable/reshaping.html#reshaping-by-melt\r\nneeds any updates?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264743761",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264743761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264743761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc0Mzc2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T00:21:25Z",
    "updated_at": "2016-12-05T00:21:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's a regex"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264744087",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264744087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264744087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc0NDA4Nw==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T00:26:30Z",
    "updated_at": "2016-12-05T00:26:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, I didn't get that? And `melt` looks pretty rock solid."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264744916",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264744916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264744916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc0NDkxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T00:38:37Z",
    "updated_at": "2016-12-05T00:38:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nuffe I was referring to ``wide_to_long`` in the docs (e.g. is the example ok).\r\n\r\nyou are splitting on the ``sep`` character, but it could also be a regext, so doing something like\r\n```\r\nIn [7]: re.split('\\s+','A  2010')\r\nOut[7]: ['A', '2010']\r\n\r\nIn [8]: re.split('\\s+','A 2010')\r\nOut[8]: ['A', '2010']\r\n```\r\n\r\nis probably reasonable"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264766934",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264766934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264766934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDc2NjkzNA==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T04:42:59Z",
    "updated_at": "2016-12-05T04:42:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "To keep things simple I propose we break the API of `wide_to_long` and  change the signature to adhere more to how R's `reshape` does this.\r\n\r\n`wide_to_long(df, varying, i, j, sep=' ')`\r\n\r\nI.e. the user passes the names of the time varying column as a list `varying`, and these (`x`) are expected (checked) to adhere to the following rules (more or less what `reshape` assumes):\r\n\r\nbased on `sep` `x` is split into exactly two strings.\r\n`sep` (a single character) is constrained to be  non-alphanumeric: \\s, ., ;, etc...\r\nthe first part is the 'stubname', the second part is the 'time' part\r\n\r\n```python\r\nIn [3]: df = pd.DataFrame({\"A 1970\" : {0 : \"a\", 1 : \"b\", 2 : \"c\"},\r\n   ...:                     \"A 1980\" : {0 : \"d\", 1 : \"e\", 2 : \"f\"},\r\n   ...:                     \"B 1970\" : {0 : 2.5, 1 : 1.2, 2 : .7},\r\n   ...:                     \"B 1980\" : {0 : 3.2, 1 : 1.3, 2 : .1},\r\n   ...:                     \"X\"     : dict(zip(range(3), np.random.randn(3)))\r\n   ...:                    })\r\n   ...: df['id'] = df.index\r\n   ...: df\r\n   ...:\r\nOut[3]:\r\n  A 1970 A 1980  B 1970  B 1980         X  id\r\n0      a      d     2.5     3.2  0.136953   0\r\n1      b      e     1.2     1.3 -1.238109   1\r\n2      c      f     0.7     0.1  1.249809   2\r\n```\r\n\r\n```python\r\nIn [4]: varying = ['A 1970', 'A 1980', 'B 1970', 'B 1980']\r\n   ...: pd.wide_to_long(df, varying, i='id', j='year', sep=' ')\r\n   ...:\r\nOut[4]:\r\n                X  A    B\r\nid year\r\n0  1970  0.136953  a  2.5\r\n1  1970 -1.238109  b  1.2\r\n2  1970  1.249809  c  0.7\r\n0  1980  0.136953  d  3.2\r\n1  1980 -1.238109  e  1.3\r\n2  1980  1.249809  f  0.1\r\n```\r\n\r\nThe user can easily construct the `varying` list with a regex, a doc example can show this.\r\n\r\nIf the existing columns does not adhere to the above specification, they need to be changed to a suitable format first. A doc example can show how this can be easily done with a regex with a backreference.\r\n\r\nWhat do you think?\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264827757",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264827757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264827757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDgyNzc1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T11:12:41Z",
    "updated_at": "2016-12-05T11:12:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "the varying should be a list of tuples\r\nspace separated elements in lists are not pythonic \r\n\r\nbut otherwise looks ok\r\n\r\ncan this be backward compat?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264838619",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264838619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264838619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDgzODYxOQ==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T12:08:40Z",
    "updated_at": "2016-12-05T16:37:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didn't understand the first comment: `varying` is just the names of all columns that should be varying. For a sample dataframe it could be `df.iloc[:, 4:11].columns.tolist()`. I.e. that the names happen to be space separated is just how the data columns ended up looking like in messy real world data?\r\n\r\nAnd I do not think this can be made backward compat because the `varying` argument would be different, `stubnames` would now be computed inside the function.\r\n\r\nThe old doc example were there is no single character separator, f.eks `varying = ['A1970', 'A1980', 'B1970', 'B1980']` will only work by first converting the column names to the allowed format with\r\n\r\n```python\r\ndf.columns.str.replace('([A-B])', '\\\\1.')\r\nIndex([u'A.1970', u'A.1980', u'B.1970', u'B.1980', u'X', u'id'], dtype='object')\r\n```\r\nthen calling `wide_to_long` with `varying = ['A.1970', 'A.1980', 'B.1970', 'B.1980']`\r\n\r\nI do not know if this really is considered too unwieldy...? R's `reshape` interface is perhaps not the most user friendly, but with plenty of doc examples its flexibility should maybe be appreciated?\r\n\r\nThe original function author seemed to have tried to mimic `Stata`s [reshape](http://www.ats.ucla.edu/stat/stata/modules/reshapel.htm) where reshape essentially only would take the stubnames as argument. The problem is that in stata column names are highly constrained (can for ex not have whitespaces or non alphanumeric characters), while in pandas they can be any utf8 string, which makes it much harder to generalize.\r\n\r\nSo if we should preserve the original function authors intention, where the user only supplies stubnames as in Stata, we need to impose some strict assumptions on the column names passed, like the only kind of column names we can have (that are varying) are of the type `PrefixPostfix`, where `Prefix` and `Postfix` are alphanumeric. These are the only ones `Stata`'s `reshape` needs to consider, and what the original `wide_to_long` function implicitly assumes. We can also handle   `PrefixSepPostfix` where `Sep` is a single separating character.\r\n\r\nPerhaps it is just better to make this implicit assumption explicit and keep its \"Stata like\" interface? And make it robust to this specificaton (`PrefixSepPostfix`), because the master branch function breaks with plenty of variations of this. \r\n\r\n(sorry for the messyness here but I ended up spending some time familiarizing myself more with `R`s less user friendly approach to this problem, and `Stata`'s more user friendly but less flexible approach)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/264983166",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-264983166",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 264983166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDk4MzE2Ng==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T21:30:04Z",
    "updated_at": "2016-12-05T21:30:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "So here is an attempt to make the original interface more robust, these two examples fail on the master branch, but should be able to produce the correct result which is:\r\n\r\n```python\r\nIn [12]: df = pd.DataFrame({\r\n    ...:         'A11': ['a11', 'a22', 'a33'],\r\n    ...:         'A12': ['a21', 'a22', 'a23'],\r\n    ...:         'B11': ['b11', 'b12', 'b13'],\r\n    ...:         'B12': ['b21', 'b22', 'b23'],\r\n    ...:         'BB11': [1, 2, 3],\r\n    ...:         'BB12': [4, 5, 6],\r\n    ...:         'BBBX' : [91, 92, 93],\r\n    ...:         'BBBZ' : [91, 92, 93]\r\n    ...:     })\r\n    ...: df['id'] = df.index\r\n    ...: df\r\n    ...:\r\nOut[12]:\r\n   A11  A12  B11  B12  BB11  BB12  BBBX  BBBZ  id\r\n0  a11  a21  b11  b21     1     4    91    91   0\r\n1  a22  a22  b12  b22     2     5    92    92   1\r\n2  a33  a23  b13  b23     3     6    93    93   2\r\n\r\nIn [13]: pd.wide_to_long(df, ['A', 'B', 'BB'], i='id', j='year')\r\nOut[13]:\r\n         BBBX  BBBZ    A    B  BB\r\nid year\r\n0  11      91    91  a11  b11   1\r\n1  11      92    92  a22  b12   2\r\n2  11      93    93  a33  b13   3\r\n0  12      91    91  a21  b21   4\r\n1  12      92    92  a22  b22   5\r\n2  12      93    93  a23  b23   6\r\n```\r\n\r\n```python\r\nIn [14]: df = pd.DataFrame({\r\n    ...:         'A(quarterly)2011': ['a11', 'a22', 'a33'],\r\n    ...:         'A(quarterly)2012': ['a21', 'a22', 'a23'],\r\n    ...:         'B(quarterly)2011': ['b11', 'b12', 'b13'],\r\n    ...:         'B(quarterly)2012': ['b21', 'b22', 'b23'],\r\n    ...:         'BB(quarterly)2011': [1, 2, 3],\r\n    ...:         'BB(quarterly)2012': [4, 5, 6],\r\n    ...:         'BBBX' : [91, 92, 93],\r\n    ...:         'BBBZ' : [91, 92, 93]\r\n    ...:     })\r\n    ...: df['id'] = df.index\r\n    ...: df\r\n    ...:\r\nOut[14]:\r\n  A(quarterly)2011 A(quarterly)2012 B(quarterly)2011 B(quarterly)2012  \\\r\n0              a11              a21              b11              b21\r\n1              a22              a22              b12              b22\r\n2              a33              a23              b13              b23\r\n\r\n   BB(quarterly)2011  BB(quarterly)2012  BBBX  BBBZ  id\r\n0                  1                  4    91    91   0\r\n1                  2                  5    92    92   1\r\n2                  3                  6    93    93   2\r\n\r\nIn [15]: pd.wide_to_long(df, ['A(quarterly)', 'B(quarterly)', 'BB(quarterly)'], i='id', j='year')\r\nOut[15]:\r\n         BBBX  BBBZ A(quarterly) B(quarterly)  BB(quarterly)\r\nid year\r\n0  2011    91    91          a11          b11              1\r\n1  2011    92    92          a22          b12              2\r\n2  2011    93    93          a33          b13              3\r\n0  2012    91    91          a21          b21              4\r\n1  2012    92    92          a22          b22              5\r\n2  2012    93    93          a23          b23              6\r\n```\r\n\r\nThe first one fails because the regex confuses the same substrings in the `id_vars` and `value_vars`, the second ones because of the parenthesis.\r\n\r\n\r\nAssuming a `Prefix(Optional Sep)Postfix` structure on the \"time\" variables, I tried to make it robust:\r\n\r\n```python\r\n [16]: df = pd.DataFrame({\r\n    ...:         'A11': ['a11', 'a22', 'a33'],\r\n    ...:         'A12': ['a21', 'a22', 'a23'],\r\n    ...:         'B11': ['b11', 'b12', 'b13'],\r\n    ...:         'B12': ['b21', 'b22', 'b23'],\r\n    ...:         'BB11': [1, 2, 3],\r\n    ...:         'BB12': [4, 5, 6],\r\n    ...:         'Acat' : [91, 92, 93],\r\n    ...:         'BBBZ' : [91, 92, 93]\r\n    ...:     })\r\n    ...: df['id'] = df.index\r\n    ...: df\r\n    ...:\r\nOut[16]:\r\n   A11  A12  Acat  B11  B12  BB11  BB12  BBBZ  id\r\n0  a11  a21    91  b11  b21     1     4    91   0\r\n1  a22  a22    92  b12  b22     2     5    92   1\r\n2  a33  a23    93  b13  b23     3     6    93   2\r\n```\r\n\r\nraises a `ValueError: ('Ambiguous names: ', ['A11', 'A12', 'Acat'])` .\r\n\r\nWhile the following works\r\n\r\n```python\r\n df = pd.DataFrame({\r\n    ...:         'A-11': ['a11', 'a22', 'a33'],\r\n    ...:         'A-12': ['a21', 'a22', 'a23'],\r\n    ...:         'B-11': ['b11', 'b12', 'b13'],\r\n    ...:         'B-12': ['b21', 'b22', 'b23'],\r\n    ...:         'BB-11': [1, 2, 3],\r\n    ...:         'BB-12': [4, 5, 6],\r\n    ...:         'Acat' : [91, 92, 93],\r\n    ...:         'BBBZ' : [91, 92, 93]\r\n    ...:     })\r\n    ...: df['id'] = df.index\r\n    ...: df\r\n    ...:\r\nOut[18]:\r\n  A-11 A-12  Acat B-11 B-12  BB-11  BB-12  BBBZ  id\r\n0  a11  a21    91  b11  b21      1      4    91   0\r\n1  a22  a22    92  b12  b22      2      5    92   1\r\n2  a33  a23    93  b13  b23      3      6    93   2\r\n\r\nIn [19]: pd.wide_to_long(df, ['A', 'B', 'BB'], i='id', j='year', sep='-')\r\nOut[19]:\r\n         Acat  BBBZ    A    B  BB\r\nid year\r\n0  11      91    91  a11  b11   1\r\n1  11      92    92  a22  b12   2\r\n2  11      93    93  a33  b13   3\r\n0  12      91    91  a21  b21   4\r\n1  12      92    92  a22  b22   5\r\n2  12      93    93  a23  b23   6\r\n```\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/265008709",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-265008709",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 265008709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAwODcwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-05T23:11:39Z",
    "updated_at": "2016-12-05T23:11:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jseabold any thought here.\r\n\r\n@nuffe ideally we want to make this back-compat (you can do introspection in the code to figure out what you are passed and such). And have as simple as API as possible. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/265027748",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-265027748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 265027748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTAyNzc0OA==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T00:54:09Z",
    "updated_at": "2016-12-06T01:15:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have maintained the user friendly (and evidently Stata inspired) interface (and stated what structure this function assumes on the column names), and tried to fix mistakes that arise with various \"pathological\" input, for example if the `stubnames` contains groups that share a substring (which I discovered when I tried different examples in Stata and compared them to `wide_to_long`)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/265732200",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-265732200",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 265732200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTczMjIwMA==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-08T12:47:37Z",
    "updated_at": "2016-12-08T23:31:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I found another \"Stata like\" use case `wide_to_long` doesn't handle at [this](http://www.ats.ucla.edu/stat/stata/modules/reshapel.htm) page: if the data frame does not have a single `id` column that identifies the wide variables, Stata users can supply the necessary column names, fex `['id1', 'id2']`. Currently the user would have to generate a new column that identifies the `['id1', 'id2']` combination and pass that as `id`.\r\n\r\n(I am going to add the option of supplying a list of 'id' variables, it will require another short rewrite since I have to move from using `join` to `merge`, to handle the new multilevel index)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/265996270",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-265996270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 265996270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTk5NjI3MA==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-09T11:49:37Z",
    "updated_at": "2016-12-09T11:53:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sometimes AppVeyor/Travis fails with unrelated tests (like `test_bar_log_subplots`, right now). Any hint on what I should do here? I've looked at the failing cases (unrelated plot methods), and there doesn't seem to be any state that has mutated because for ex. a random number seed has changed. (tests pass on my OS X laptop with both python 2 and python 3 virtual envs). Thanks"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266216291",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-266216291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 266216291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjIxNjI5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-10T15:33:27Z",
    "updated_at": "2016-12-10T15:33:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you rebase, problem with appeveyor which i just fixed"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266293354",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-266293354",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 266293354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjI5MzM1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-11T17:02:27Z",
    "updated_at": "2016-12-11T17:02:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm. some minor comments.\r\n\r\n@jorisvandenbossche "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266303096",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-266303096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 266303096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwMzA5Ng==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-11T19:51:39Z",
    "updated_at": "2016-12-11T19:51:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback another minor issue: sphinx doesn't print the `\\` in the docstring suffix section. The only way I managed to get these printed was to set the entire docstring to a raw string literal, and escape the slash:  `'\\\\d+'`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266304406",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-266304406",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 266304406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwNDQwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-11T20:13:07Z",
    "updated_at": "2016-12-11T20:13:07Z",
    "author_association": "MEMBER",
    "body": "> set the entire docstring to a raw string literal\r\n\r\nYou can indeed do that, but normally then the escaping should not be needed"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266309184",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-266309184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 266309184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjMwOTE4NA==",
    "user": {
      "login": "erikcs",
      "id": 7185264,
      "node_id": "MDQ6VXNlcjcxODUyNjQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7185264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/erikcs",
      "html_url": "https://github.com/erikcs",
      "followers_url": "https://api.github.com/users/erikcs/followers",
      "following_url": "https://api.github.com/users/erikcs/following{/other_user}",
      "gists_url": "https://api.github.com/users/erikcs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/erikcs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/erikcs/subscriptions",
      "organizations_url": "https://api.github.com/users/erikcs/orgs",
      "repos_url": "https://api.github.com/users/erikcs/repos",
      "events_url": "https://api.github.com/users/erikcs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/erikcs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-11T21:26:04Z",
    "updated_at": "2016-12-13T11:43:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Yes this version is back compat. The PR got a bit lengthy because I did more than I anticipated (was originally a simple PR for a quick speed improvement - but I discovered afterwards that there where several use cases the original function couldn't handle). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266895878",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14779#issuecomment-266895878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14779",
    "id": 266895878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Njg5NTg3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T23:31:40Z",
    "updated_at": "2016-12-13T23:32:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @nuffe very nice PR, and you were very responsive!\r\n\r\nif you want to tackle other issues would be much appreciated!"
  }
]
