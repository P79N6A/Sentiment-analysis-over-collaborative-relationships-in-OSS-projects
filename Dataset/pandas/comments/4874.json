[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24670211",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-24670211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 24670211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjcwMjEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T14:52:26Z",
    "updated_at": "2013-09-18T14:52:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "looks good...can you add a test matrix, e.g. cycle thru all axes for each object, then test if it works (ideally also with different types of axes, e.g. string, datetime, period, integer)?\n\nyou can use the test harness in tests/test_generic.py (just leave the exisitng tests where they are), but need a comprehensive test ....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24777265",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-24777265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 24777265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzc3MjY1",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T22:12:05Z",
    "updated_at": "2013-09-19T22:19:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback So was thinking about the test matrix, was thinking something like this:\n\n``` python\ntargets = {}\ntargets['dataframe'] = tm.makeDataFrame\ntargets['time_dataframe'] = tm.makeTimeDataFrame\n\nclass ShiftBattery(object):\n    def test_shift(self):\n        obj = self._construct()\n        obj.shift(1)\n\n    def test_shift_negative(self):\n        obj = self._construct()\n        obj.shift(-3)\n\ndef setup_battery(targets, battery):\n    battery_name = battery.__name__\n    # create a unittest.TestCase subclass for each target\n    for target, maker in targets.items():\n        cls_name = \"Test\" + battery_name + '_' + target\n        cls = makeClass(cls_name, battery, maker)\n        globals()[cls_name] = cls\n\ndef makeClass(cls_name, battery, maker):\n    cls = type(cls_name, (unittest.TestCase, battery), {})\n    cls._construct = lambda self: maker()\n    return cls\n\nsetup_battery(targets, ShiftBattery)\n```\n\nThe idea being that we setup a bunch of targets with different configurations (dtypes, multiindex, etc) and then run them through a battery of tests that should be common to all of them. \n\nThe output would look like:\n\n```\ntest_shift (__main__.TestShiftBattery_dataframe) ... ok\ntest_shift_negative (__main__.TestShiftBattery_dataframe) ... ok\ntest_shift (__main__.TestShiftBattery_time_dataframe) ... ok\ntest_shift_negative (__main__.TestShiftBattery_time_dataframe) ... ok\n```\n\nyay nay?\n\nedit: modified code\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24777757",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-24777757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 24777757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzc3NzU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T22:20:57Z",
    "updated_at": "2013-09-19T22:20:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's fancy! you can also just do it in a function, where you run thru the index types, something like this: https://github.com/pydata/pandas/pull/4850/files#L12R1557\n\nbut what you are doing is fine too (as you create separate tests so easy to see where stuff fails)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24778559",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-24778559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 24778559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzc4NTU5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T22:35:34Z",
    "updated_at": "2013-09-19T22:35:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Constructing test cases that dynamically makes the tests harder to follow\nand harder to maintain. It's really important that test cases should be\nsimple to trace. If you can't just use a few for loops with arguments (or\nhelper functions), you could try is creating a baseclass like ShiftBase,\nand then subclassing it with different setups for Series, Panel, etc. (or\nwhatever you're looking at).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24785908",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-24785908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 24785908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzg1OTA4",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T01:53:59Z",
    "updated_at": "2013-09-20T01:53:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was apprehensive about the indirection too, but I couldn't get test generators/for loops to output enough useful info for each sub-test. Take this example:\n\n``` python\nind = pd.date_range(start=\"2000\", freq=\"D\", periods=10)\ntargets = {}\ntargets['int_series'] = lambda : pd.Series(range(10))\ntargets['bool_series'] = lambda : pd.Series(np.random.randn(10) > 0, index=ind)\ntargets['float_series'] = lambda : pd.Series(np.random.randn(10))\ntargets['string_series'] = lambda : pd.Series(list('asdfqwerzx'), index=ind)\n\nclass ShiftBattery(object):\n    def test_check(self):\n        obj = self._construct()\n        if obj.is_time_series:\n            assert False, \"Don't support time series\"\n\nsetup_battery(targets, ShiftBattery)\n\nclass TestFor(unittest.TestCase):\n    def test_for(self):\n        def check(obj):\n            if obj.is_time_series:\n                assert False, \"Don't support time series\"\n\n        for obj in targets.values():\n            check(obj())\n\nclass TestGenerator(object):\n    def test_for(self):\n        def check(obj):\n            if obj.is_time_series:\n                assert False, \"Don't support time series\"\n\n        for obj in targets.values():\n            yield check, obj()\n\n```\n\nFor loop: \n\n```\n======================================================================\nFAIL: test_for (pandas.tests.test_examples.TestFor)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/datacaliber/Dropbox/Projects/trading/python/externals/pandas/pandas/tests/test_examples.py\", line 34, in test_for\n    check(obj())\n  File \"/Users/datacaliber/Dropbox/Projects/trading/python/externals/pandas/pandas/tests/test_examples.py\", line 31, in check\n    assert False, \"Don't support time series\"\nAssertionError: Don't support time series\n```\n\nGenerator\n\n```\n======================================================================\nFAIL: pandas.tests.test_examples.TestGenerator.test_for(2000-09-19    a\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/datacaliber/Dropbox/Projects/trading/python/externals/nose/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/Users/datacaliber/Dropbox/Projects/trading/python/externals/pandas/pandas/tests/test_examples.py\", line 40, in check\n    assert False, \"Don't support time series\"\nAssertionError: Don't support time series\n\n======================================================================\nFAIL: pandas.tests.test_examples.TestGenerator.test_for(2000-09-19    False\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/datacaliber/Dropbox/Projects/trading/python/externals/nose/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/Users/datacaliber/Dropbox/Projects/trading/python/externals/pandas/pandas/tests/test_examples.py\", line 40, in check\n    assert False, \"Don't support time series\"\nAssertionError: Don't support time series\n```\n\nBattery:\n\n```\n======================================================================\nFAIL: test_check (pandas.tests.test_examples.TestShiftBattery_bool_series)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/datacaliber/Dropbox/Projects/trading/python/externals/pandas/pandas/tests/test_examples.py\", line 23, in test_check\n    assert False, \"Don't support time series\"\nAssertionError: Don't support time series\n\n======================================================================\nFAIL: test_check (pandas.tests.test_examples.TestShiftBattery_string_series)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/datacaliber/Dropbox/Projects/trading/python/externals/pandas/pandas/tests/test_examples.py\", line 23, in test_check\n    assert False, \"Don't support time series\"\nAssertionError: Don't support time series\n\n----------------------------------------------------------------------\n```\n\nThe Battery test is the only one that runs all tests and outputs meaningful nose output. Plus, the Battery doesn't have to know about the targets and can remain simple.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24786809",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-24786809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 24786809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzg2ODA5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T02:29:07Z",
    "updated_at": "2013-09-20T02:29:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would prefer not to inject into globals, when you can use regular inheritance to do the same exact thing.\n\n``` python\nclass ShiftBattery(object):\n    def test_shift(self):\n        self.obj.shift(1)\n\n    def test_shift_negative(self):\n        self.obj.shift(-3)\n\nclass TestShiftDataFrame(ShiftBattery, unittest.TestCase):\n    def setUp(self):\n        self.obj = DataFrame(range(10))\n\nclass TestShiftPanel(ShiftBattery, unittest.TestCase):\n    def setUp(self):\n        self.obj = tm.makePanel()\n```\n\nSometimes it's nice to make it clear that something works the same way across all objects:\n\n``` python\nclass TestShift(unittest.TestCase):\n    def setUp(self):\n        self.objects = [tm.makePanel(), tm.makeCustomDataFrame(5, 5)]\n    def test_shift1(self):\n        for obj in self.objects:\n           obj.shift(1)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24786839",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-24786839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 24786839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzg2ODM5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T02:30:08Z",
    "updated_at": "2013-09-20T02:30:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "As an added bonus, if later you realize that there's an edge case for Panel or Series or something, you can add a test _just_ to that class.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24786928",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-24786928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 24786928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Nzg2OTI4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T02:34:20Z",
    "updated_at": "2013-09-20T02:34:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alternatively, you can create a helper method for _everything_\n\n``` python\nclass TestShift(unittest.TestCase):\n    def _check_int_shift(self, obj):\n        self.obj.shift(1)\n        self.obj.shift(-3)\n    def test_int_series(self):\n        self._check_int_shift(self, int_series)\n    def test_bool_series(self):\n        self._check_bool_shift(self, bool_series)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25123137",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25123137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25123137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTIzMTM3",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T20:44:13Z",
    "updated_at": "2013-09-25T20:44:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback can you take a look at https://gist.github.com/dalejung/6705707. It's just a small util I've been using when generating tests, but I'm not sure if it should go into pandas and if so where.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25123721",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25123721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25123721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTIzNzIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T20:51:55Z",
    "updated_at": "2013-09-25T20:53:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dalejung \n\nyou could put that in `core/indexing.py`.\n\nthat idiom is used in lots of locations in the library....\n\nif you want to split this off, and then search and replace where something like this is used would be great\n\nhere's some places its used now (might be more):\n\n```\n./pandas/core/indexing.py:\n  864 :         tup = [slice(None, None) for _ in range(self.ndim)]\n./pandas/core/internals.py:\n 2298 :         slicer = [slice(None, None) for _ in range(self.ndim)]\n 2403 :         slicer = [slice(None, None) for _ in range(self.ndim)]\n./pandas/io/pytables.py:\n 3793 :         slicer = [ slice(None, None) ] * obj.ndim\n```\n\nalso in `pandas/tests/testing_index.py`, called `_axify`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25125037",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25125037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25125037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTI1MDM3",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T21:10:00Z",
    "updated_at": "2013-09-25T21:10:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "cool cool. Is slicer the correct term for this? I couldn't figure out what to call a tuple of slices. I like slicer.\n\nOn Sep 25, 2013, at 4:51 PM, jreback notifications@github.com wrote:\n\n> @dalejung\n> \n> you could put that in core/indexing.py.\n> \n> that idiom is used in lots of locations in the library....\n> \n> if you want to split this off, and then search and replace where something like this is used would be great\n> \n> here's some places its used now (might be more):\n> \n> ./pandas/core/indexing.py:\n>   864 :         tup = [slice(None, None) for _ in range(self.ndim)]\n> ./pandas/core/internals.py:\n>  2298 :         slicer = [slice(None, None) for _ in range(self.ndim)]\n>  2403 :         slicer = [slice(None, None) for _ in range(self.ndim)]\n> ./pandas/io/pytables.py:\n>  3793 :         slicer = [ slice(None, None) ] \\* obj.ndim\n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25125266",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25125266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25125266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTI1MjY2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T21:13:11Z",
    "updated_at": "2013-09-25T21:13:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "`_axis_slicer`? or `_slicer` ok...\n\nyou may want to change the args a bit as sometimes I just pass in an indexer directly for the axis in question\n\n(this is an internal function, so can prob just add a kw, or maybe make it the first arg)\n\ne.g.\n\n`def _slicer(indexer=None, start=None, stop=None, axis=None)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25126363",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25126363",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25126363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTI2MzYz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T21:29:02Z",
    "updated_at": "2013-09-25T21:29:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "You should change _missing to Ellipsis. Avoids an additional global.\nOn Sep 25, 2013 5:13 PM, \"jreback\" notifications@github.com wrote:\n\n> _axis_slicer? or _slicer ok...\n> \n> you may want to change the args a bit as sometimes I just pass in an\n> indexer directly for the axis in question\n> \n> (this is an internal function, so can prob just add a kw, or maybe make it\n> the first arg)\n> \n> e.g.\n> \n> def _slicer(indexer=None, start=None, stop=None, axis=None)\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4874#issuecomment-25125266\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25126365",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25126365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25126365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTI2MzY1",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T21:29:02Z",
    "updated_at": "2013-09-25T21:29:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, are you sure that works under Python 3? Some comparisons were\ndisallowed in Py3\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25128905",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25128905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25128905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTI4OTA1",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T22:07:46Z",
    "updated_at": "2013-09-25T22:07:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wouldn't using `Ellipsis` as a missing sentinel be confusing considering its only real use is in numerical python? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25130366",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25130366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25130366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTMwMzY2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T22:33:43Z",
    "updated_at": "2013-09-25T22:34:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dalejung I think it will produce the same thing if you set stop to None (because you no longer need to test for start <= 0) and if you pass start > 0, then you want to be slicing `[:3]` so you swap.  Is there ever a time where None would _not_ have that meaning?\n\n``` python\ndef slicer(start, stop=None, axis=None):\n    assert axis is not None, \"Must pass an axis to slicer\"\n    assert isinstance(axis, int), \"Must pass an integer axis to slicer\"\n    if isinstance(start, slice):\n       key = start\n   else:\n       if stop is None and start > 0:\n           stop, start = start, stop\n       key = slice(start, stop)\n   slices = [slice(None) for x in range(axis+1)]\n   slices[axis] = key\n   return tuple(slices)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25131317",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25131317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25131317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTMxMzE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T22:50:19Z",
    "updated_at": "2013-09-25T22:50:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner this is a purleey internal method simply to make easy constructing multiple axis slices (rather than 'manually' doing this in places)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25132821",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25132821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25132821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTMyODIx",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T23:20:43Z",
    "updated_at": "2013-09-25T23:20:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner the original behaved a bit differently,\n\n``` python\nslicer(3, axis=0) => (slice(None, 3, None,)\nslicer(3, None, axis=0) => (slice(3, None, None),) # explict None doesn't flip.\n```\n\nI'm not really tied to that behavior. Going back to missing sentinels, are we standardized on `Ellipsis`? AFAIK, its use is predicated on no one using it outside of numerical python. Wouldn't it be confusing with `pandas`, especially within an indexing related file. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25133281",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25133281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25133281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTMzMjgx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-25T23:30:33Z",
    "updated_at": "2013-09-25T23:30:33Z",
    "author_association": "MEMBER",
    "body": "I'm weakly -1 on using Ellipsis. What's wrong with None? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25134866",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25134866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25134866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTM0ODY2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T00:04:17Z",
    "updated_at": "2013-09-26T00:04:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dalejung you saw my comment above? this has to be able to take an indexer (that doesn't happen to be a slice)\n(\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25135684",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25135684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25135684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTM1Njg0",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T00:24:40Z",
    "updated_at": "2013-09-26T00:24:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback yup. \n\n@cpcloud Using a missing sentinel is for when `func(x)` is semantically different than `func(x, None)`. Basically when `None` is itself a valid argument. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25135761",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25135761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25135761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTM1NzYx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T00:26:38Z",
    "updated_at": "2013-09-26T00:26:38Z",
    "author_association": "MEMBER",
    "body": "@dalejung Yep .. i see .. hm `NotImplemented` could be a possibility\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25137432",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25137432",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25137432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTM3NDMy",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T01:13:36Z",
    "updated_at": "2013-09-26T01:13:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud well, it's not meant for unimplemented paths. It's for setting default behaviors.\n\n``` python\ndef func(x=None):\n    # if x is missing, default to 10\n    if x is None:\n        x = 10\n    ...\n```\n\nThe problem with the above setup is that you can't tell the difference between `func()` and `func(None)` which is a problem if `None` is valid for x. In the above, you can never pass in `None` and have it pass the check. In most cases, a regular `if x is None:` check is fine because `None` is not valid and is itself the missing sentinel. \n\n``` python\ndef func(x=_missing):\n    if x is _missing:\n        x = 10\n```\n\nhandles both `None` and allows default missing behavior. `_missing` is basically any object that's guaranteed to never be passed in; `object()`, `Ellipsis`, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25355641",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-25355641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 25355641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzU1NjQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T12:22:01Z",
    "updated_at": "2013-09-30T12:22:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dalejung how's this coming? waiting for axis slicer, IIRC?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26131147",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-26131147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 26131147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MTMxMTQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-11T11:45:46Z",
    "updated_at": "2013-10-11T11:45:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dalejung hows this coming along?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31552572",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-31552572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 31552572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTUyNTcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-03T20:51:07Z",
    "updated_at": "2014-01-03T20:51:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dalejung want to rebase this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35215229",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-35215229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 35215229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE1MjI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T21:51:09Z",
    "updated_at": "2014-02-16T21:51:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dalejung this should be pretty easy to do now (the underlying `NDFrame.shift` is fixed to handle axes better)....\n\npls rebase\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37128955",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-37128955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 37128955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTI4OTU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-09T15:07:18Z",
    "updated_at": "2014-03-09T15:07:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dalejung still working on this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37142525",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-37142525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 37142525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQyNTI1",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-09T22:44:51Z",
    "updated_at": "2014-03-09T22:44:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Actually, the underlying `NDFrame.shift` change makes this PR redundant. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37142793",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4874#issuecomment-37142793",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4874",
    "id": 37142793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQyNzkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-09T22:55:11Z",
    "updated_at": "2014-03-09T22:55:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm\n\nI think the intent was to integrate Panel.shift\nwhich has special handling ATM\n"
  }
]
