[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/252964568",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14396#issuecomment-252964568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14396",
    "id": 252964568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjk2NDU2OA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-11T16:10:25Z",
    "updated_at": "2016-10-11T18:02:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the report!  It's not obvious to me what the expected behavior is if a fraction is smaller than 1 row.  \n\nEither of your suggestions (flooring at 1, adding a `min_sample` kwarg) seem reasonable - will let others weigh in.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253126674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14396#issuecomment-253126674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14396",
    "id": 253126674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzEyNjY3NA==",
    "user": {
      "login": "datajanko",
      "id": 11876547,
      "node_id": "MDQ6VXNlcjExODc2NTQ3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11876547?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datajanko",
      "html_url": "https://github.com/datajanko",
      "followers_url": "https://api.github.com/users/datajanko/followers",
      "following_url": "https://api.github.com/users/datajanko/following{/other_user}",
      "gists_url": "https://api.github.com/users/datajanko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datajanko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datajanko/subscriptions",
      "organizations_url": "https://api.github.com/users/datajanko/orgs",
      "repos_url": "https://api.github.com/users/datajanko/repos",
      "events_url": "https://api.github.com/users/datajanko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datajanko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T06:00:18Z",
    "updated_at": "2016-10-12T06:00:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chris-b1 you ar right it is not obvious. However, what should be the result when sampling from one element if frac is less than 1? Should it be zero or one. I want to have a sample, so maybe one element at least should be returned. This could be nicely controlled with a min_sample keyword.\nAdditionally, this would implement sample x percent but at least y elements.\n\nOne thing that might be an issue here is that python rounds .5 to 0 instead of 1, in fact, that was the first thing i realized when trying to get counterexamples. By the way, an \"inconsistency\" the other way round appears in the following case:\n\n``` python\nimport pandas as pd\nimport numpy as np\n\ntmp = pd.Series(np.arange(6))\ntmp.sample(frac=0.25)\n\n1    1\n0    0\ndtype: int32\n```\n\nSo here, we python rounds 1.5 to 2 and we get two values, instead of one? I'm not sure what is desired here\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253246258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14396#issuecomment-253246258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14396",
    "id": 253246258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzI0NjI1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T15:25:32Z",
    "updated_at": "2016-10-12T15:25:32Z",
    "author_association": "MEMBER",
    "body": "IMO rounding between 0-1 row should follow the same rule as for > 1 rows (which is just the python rounding rule of `round(..)` I think). \nBut a `min_sample` (or other name) for specifying a minimum sample size seems indeed reasonable. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253332642",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14396#issuecomment-253332642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14396",
    "id": 253332642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzMzMjY0Mg==",
    "user": {
      "login": "datajanko",
      "id": 11876547,
      "node_id": "MDQ6VXNlcjExODc2NTQ3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11876547?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datajanko",
      "html_url": "https://github.com/datajanko",
      "followers_url": "https://api.github.com/users/datajanko/followers",
      "following_url": "https://api.github.com/users/datajanko/following{/other_user}",
      "gists_url": "https://api.github.com/users/datajanko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datajanko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datajanko/subscriptions",
      "organizations_url": "https://api.github.com/users/datajanko/orgs",
      "repos_url": "https://api.github.com/users/datajanko/repos",
      "events_url": "https://api.github.com/users/datajanko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datajanko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T20:40:29Z",
    "updated_at": "2016-10-12T20:40:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, it is just pythons rounding rule. However, the rounding rule between 0 and 1 row is not the same between 1 and 2 rows since round always rounds to the nearest even integer. \n\nPersonally, I'd prefer the min_sample approach\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/253392633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14396#issuecomment-253392633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14396",
    "id": 253392633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzM5MjYzMw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-13T02:08:16Z",
    "updated_at": "2016-10-13T02:08:16Z",
    "author_association": "MEMBER",
    "body": "My two cents is that this behavior is working as it should. If the user cares about rounding in a particular way, they should calculate `n` exactly as they desire.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/254071718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14396#issuecomment-254071718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14396",
    "id": 254071718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA3MTcxOA==",
    "user": {
      "login": "datajanko",
      "id": 11876547,
      "node_id": "MDQ6VXNlcjExODc2NTQ3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11876547?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datajanko",
      "html_url": "https://github.com/datajanko",
      "followers_url": "https://api.github.com/users/datajanko/followers",
      "following_url": "https://api.github.com/users/datajanko/following{/other_user}",
      "gists_url": "https://api.github.com/users/datajanko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datajanko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datajanko/subscriptions",
      "organizations_url": "https://api.github.com/users/datajanko/orgs",
      "repos_url": "https://api.github.com/users/datajanko/repos",
      "events_url": "https://api.github.com/users/datajanko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datajanko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-16T20:18:37Z",
    "updated_at": "2016-10-16T20:18:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks for the reply. However, one example where the min_sample_size might be practical if you have a large number of groups and want to sample a certain fraction of each group but obtain at least one element. In this case, it would be convenient to have the min_sample keyword when you \"apply\" the sample function to the data frame (or groups of the dataframe). \n\nBut if such a behaviour is not desired, I'm okay with that and we could close this issue. \n"
  }
]
