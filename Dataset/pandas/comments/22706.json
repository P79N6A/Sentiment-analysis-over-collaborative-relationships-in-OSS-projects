[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421618986",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22706#issuecomment-421618986",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22706",
    "id": 421618986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTYxODk4Ng==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-15T19:11:04Z",
    "updated_at": "2018-09-15T19:11:04Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report - investigation and PRs are always welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421696127",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22706#issuecomment-421696127",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22706",
    "id": 421696127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTY5NjEyNw==",
    "user": {
      "login": "vuminhle",
      "id": 796283,
      "node_id": "MDQ6VXNlcjc5NjI4Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/796283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vuminhle",
      "html_url": "https://github.com/vuminhle",
      "followers_url": "https://api.github.com/users/vuminhle/followers",
      "following_url": "https://api.github.com/users/vuminhle/following{/other_user}",
      "gists_url": "https://api.github.com/users/vuminhle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vuminhle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vuminhle/subscriptions",
      "organizations_url": "https://api.github.com/users/vuminhle/orgs",
      "repos_url": "https://api.github.com/users/vuminhle/repos",
      "events_url": "https://api.github.com/users/vuminhle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vuminhle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-16T05:03:29Z",
    "updated_at": "2018-09-16T12:37:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "If `record_path` points to a nested dict of dicts, after one `_recursive_extract`, `data` is the inner dict (`{'phones': ...}` in the example)\r\n\r\nWhen `data` is a dict, the for loop [here](https://github.com/pandas-dev/pandas/blob/1c500fb7b3fa08c163e13375d01b9607fcdac0d6/pandas/io/json/normalize.py#L237\r\n) only iterates over the keys.\r\n\r\nDo we assume that `data` is always a list? If that is the case, there are two options:\r\n1. Turn data into a list if it is a dict (similar to line 194).\r\n2. Hoist the for loop into a method. If data is not a list call this method instead of iterating over the elements.\r\n\r\nI prefer (2). Let me know what you think. I can create a PR. \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422618607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22706#issuecomment-422618607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22706",
    "id": 422618607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjYxODYwNw==",
    "user": {
      "login": "vuminhle",
      "id": 796283,
      "node_id": "MDQ6VXNlcjc5NjI4Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/796283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vuminhle",
      "html_url": "https://github.com/vuminhle",
      "followers_url": "https://api.github.com/users/vuminhle/followers",
      "following_url": "https://api.github.com/users/vuminhle/following{/other_user}",
      "gists_url": "https://api.github.com/users/vuminhle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vuminhle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vuminhle/subscriptions",
      "organizations_url": "https://api.github.com/users/vuminhle/orgs",
      "repos_url": "https://api.github.com/users/vuminhle/repos",
      "events_url": "https://api.github.com/users/vuminhle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vuminhle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T01:46:55Z",
    "updated_at": "2018-09-19T01:46:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd : What do you think of the proposed fix? I'll create a PR if you think it's the right thing to do."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422849370",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22706#issuecomment-422849370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22706",
    "id": 422849370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjg0OTM3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T15:34:20Z",
    "updated_at": "2018-09-19T15:34:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Do we assume that data is always a list? If that is the case, there are two options:\r\n\r\nThe docstring claims that either a dict or list of dicts is allowed. The only example with a dict doesn't really do any normalization though:\r\n\r\n```\r\n>>> data = {'A': [1, 2]}\r\n>>> json_normalize(data, 'A', record_prefix='Prefix.')\r\n    Prefix.0\r\n0          1\r\n1          2\r\n```\r\n\r\nI'm inclined to do whatever is easiest to maintain in the long-run, though it's not clear what that is in this case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422928984",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22706#issuecomment-422928984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22706",
    "id": 422928984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjkyODk4NA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T19:27:56Z",
    "updated_at": "2018-09-19T19:27:56Z",
    "author_association": "MEMBER",
    "body": "I don't think we should assume that it is always a list. In my mind the behavior for `record_path` should mirror whatever happens at the top level but just resolving that at the specified `record_path`. These calls have an equivalent return:\r\n\r\n```python\r\nIn [6]: json_normalize({'foo': 1, 'bar': 2, 'baz': 3})\r\nOut[6]: \r\n   bar  baz  foo\r\n0    2    3    1\r\n\r\nIn [7]: json_normalize([{'foo': 1, 'bar': 2, 'baz': 3}])\r\nOut[7]: \r\n   bar  baz  foo\r\n0    2    3    1\r\n```\r\n\r\nSo I would assume the following to also be equivalent (though currently failing)\r\n\r\n```python\r\n>>> json_normalize({'info': {'phones': {'foo': 1, 'bar': 2, 'baz': 3}}}, record_path=['info', 'phones'])\r\n>>> json_normalize({'info': {'phones': [{'foo': 1, 'bar': 2, 'baz': 3}]}}, record_path=['info', 'phones'])"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423031713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22706#issuecomment-423031713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22706",
    "id": 423031713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzAzMTcxMw==",
    "user": {
      "login": "vuminhle",
      "id": 796283,
      "node_id": "MDQ6VXNlcjc5NjI4Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/796283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vuminhle",
      "html_url": "https://github.com/vuminhle",
      "followers_url": "https://api.github.com/users/vuminhle/followers",
      "following_url": "https://api.github.com/users/vuminhle/following{/other_user}",
      "gists_url": "https://api.github.com/users/vuminhle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vuminhle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vuminhle/subscriptions",
      "organizations_url": "https://api.github.com/users/vuminhle/orgs",
      "repos_url": "https://api.github.com/users/vuminhle/repos",
      "events_url": "https://api.github.com/users/vuminhle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vuminhle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T03:52:57Z",
    "updated_at": "2018-09-21T08:48:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "To be clear, I asked about `data` in [`_recursive_extract`](https://github.com/pandas-dev/pandas/blob/1c500fb7b3fa08c163e13375d01b9607fcdac0d6/pandas/io/json/normalize.py#L227) (not the parameter `data` in `json_normalize`).\r\n\r\nI agree with @WillAyd that the list assumption inside `_recursive_extract` is wrong. Inside this function `data` can be anything (list, dict, value). That's why my proposed fix above has a check to deal with non-list type. The proposed fix is as follows:\r\n```python\r\ndef _extract(data, path, seen_meta, level):\r\n    for obj in data: # the body of else clause at L237\r\n        ...\r\n\r\ndef _recursive_extract(data, path, seen_meta, level=0):\r\n    if len(path) > 1: \r\n        # unchanged\r\n    else:\r\n        if isinstance(data, list):\r\n            for obj in data: # similar to the current version\r\n                _extract(obj, path, seen_meta, level) \r\n        else:\r\n            _extract(data, path, seen_meta, level) # this is new to deal with non-list data\r\n```\r\n\r\nNote that the current version is\r\n```python\r\ndef _recursive_extract(data, path, seen_meta, level=0):\r\n    if len(path) > 1: \r\n        # unchanged\r\n    else:\r\n        for obj in data: \r\n            _extract(obj, path, seen_meta, level) \r\n```\r\nwhich raises exception when `data` is not a list."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423640450",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22706#issuecomment-423640450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22706",
    "id": 423640450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzY0MDQ1MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-21T19:03:31Z",
    "updated_at": "2018-09-21T19:03:31Z",
    "author_association": "MEMBER",
    "body": "@vuminhle feel free to submit a PR for code review"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423712080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22706#issuecomment-423712080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22706",
    "id": 423712080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzcxMjA4MA==",
    "user": {
      "login": "vuminhle",
      "id": 796283,
      "node_id": "MDQ6VXNlcjc5NjI4Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/796283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vuminhle",
      "html_url": "https://github.com/vuminhle",
      "followers_url": "https://api.github.com/users/vuminhle/followers",
      "following_url": "https://api.github.com/users/vuminhle/following{/other_user}",
      "gists_url": "https://api.github.com/users/vuminhle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vuminhle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vuminhle/subscriptions",
      "organizations_url": "https://api.github.com/users/vuminhle/orgs",
      "repos_url": "https://api.github.com/users/vuminhle/repos",
      "events_url": "https://api.github.com/users/vuminhle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vuminhle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-22T03:02:41Z",
    "updated_at": "2018-09-22T03:02:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Btw I think #21605 has the same root cause.\r\nPR #22804 should also fix this bug."
  }
]
