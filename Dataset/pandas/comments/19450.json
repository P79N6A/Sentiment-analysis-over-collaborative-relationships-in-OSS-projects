[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361445994",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19450#issuecomment-361445994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19450",
    "id": 361445994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQ0NTk5NA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-01-30T01:28:10Z",
    "updated_at": "2018-01-30T01:31:44Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19450?src=pr&el=h1) Report\n> Merging [#19450](https://codecov.io/gh/pandas-dev/pandas/pull/19450?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/4618a0918e1bbdb40a493d8a32d46ab8c94fd0b4?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/19450/graphs/tree.svg?height=150&width=650&token=eZ4WkYLtcO&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/19450?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #19450      +/-   ##\n==========================================\n- Coverage   91.62%    91.6%   -0.03%     \n==========================================\n  Files         150      150              \n  Lines       48724    48724              \n==========================================\n- Hits        44644    44632      -12     \n- Misses       4080     4092      +12\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.97% <ø> (-0.03%)` | :arrow_down: |\n| #single | `41.74% <ø> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/19450?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/19450/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `65.22% <0%> (-1.74%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19450?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19450?src=pr&el=footer). Last update [4618a09...7034c8e](https://codecov.io/gh/pandas-dev/pandas/pull/19450?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361564453",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19450#issuecomment-361564453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19450",
    "id": 361564453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTU2NDQ1Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T11:24:55Z",
    "updated_at": "2018-01-30T11:24:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "looks ok. needs a perf test, pls run with affinity! "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361636803",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19450#issuecomment-361636803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19450",
    "id": 361636803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTYzNjgwMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T15:51:16Z",
    "updated_at": "2018-01-30T15:51:16Z",
    "author_association": "MEMBER",
    "body": "Will do.  Might take a while.  In the interim, I'm hopeful that #19301 may be good to go, possibly also #19336."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361729727",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19450#issuecomment-361729727",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19450",
    "id": 361729727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTcyOTcyNw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T20:50:15Z",
    "updated_at": "2018-01-30T20:50:15Z",
    "author_association": "MEMBER",
    "body": "One run without affinity, three with.  Recently rebooted the machine, might explain the uncharacteristically stable results.\r\n\r\n```\r\nasv continuous -E virtualenv -f 1.1 master HEAD -b timeseries\r\n[...]\r\n    before     after       ratio\r\n  [238499ab] [7034c8ef]\r\n+    2.32ms     3.41ms      1.47  timeseries.ResampleSeries.time_resample('period', '5min', 'ohlc')\r\n+    2.40ms     3.28ms      1.36  timeseries.ToDatetimeCache.time_dup_seconds_and_unit(False)\r\n-  128.73ms   116.98ms      0.91  timeseries.DatetimeIndex.time_to_time('tz_aware')\r\n-    2.59ms     2.35ms      0.91  timeseries.ResampleSeries.time_resample('datetime', '5min', 'ohlc')\r\n-    6.95ms     3.58ms      0.51  timeseries.ToDatetimeCache.time_dup_seconds_and_unit(True)\r\n```\r\n\r\n```\r\ntaskset 4 asv continuous -E virtualenv -f 1.1 master HEAD -b timeseries\r\n[...]\r\nbefore     after       ratio\r\n  [238499ab] [7034c8ef]\r\n+    2.38ms     2.67ms      1.12  timeseries.ResampleSeries.time_resample('period', '5min', 'ohlc')\r\n-    4.38μs     3.94μs      0.90  timeseries.DatetimeIndex.time_get('dst')\r\n-  498.15ms   440.07ms      0.88  timeseries.ToDatetimeFormat.time_exact\r\n-    7.55ms     6.48ms      0.86  timeseries.Factorize.time_factorize('Asia/Tokyo')\r\n```\r\n\r\n```\r\ntaskset 4 asv continuous -E virtualenv -f 1.1 master HEAD -b timeseries\r\n[...]\r\nbefore     after       ratio\r\n  [238499ab] [7034c8ef]\r\n+    2.05ms     2.31ms      1.13  timeseries.ResampleSeries.time_resample('datetime', '1D', 'ohlc')\r\n-    1.86ms     1.68ms      0.91  timeseries.DatetimeIndex.time_add_timedelta('repeated')\r\n```\r\n\r\n```\r\ntaskset 4 asv continuous -E virtualenv -f 1.1 master HEAD -b timeseries\r\n[...]\r\n    before     after       ratio\r\n  [238499ab] [7034c8ef]\r\n+    2.40ms     2.66ms      1.11  timeseries.ResampleSeries.time_resample('datetime', '5min', 'ohlc')\r\n-   17.84μs    16.14μs      0.90  timeseries.AsOf.time_asof_single('Series')\r\n-  137.94ms   123.97ms      0.90  timeseries.DatetimeIndex.time_to_pydatetime('tz_aware')\r\n-   11.96ms    10.71ms      0.90  timeseries.Iteration.time_iter_preexit(<function period_range at 0x7f37a14670c8>)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361777118",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19450#issuecomment-361777118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19450",
    "id": 361777118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTc3NzExOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T00:03:01Z",
    "updated_at": "2018-01-31T00:03:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls run on a lot more benchmarks, this change affects practically everything. I don't expect anything but, need to check."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361840911",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19450#issuecomment-361840911",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19450",
    "id": 361840911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTg0MDkxMQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T06:52:48Z",
    "updated_at": "2018-01-31T06:52:48Z",
    "author_association": "MEMBER",
    "body": "```taskset 4 asv continuous -E virtualenv -f 1.1 master HEAD\r\n[...]\r\n    before     after       ratio\r\n  [238499ab] [7034c8ef]\r\n+    1.47ms     2.32ms      1.58  sparse.ArithmeticBlock.time_intersect(nan)\r\n+    1.11ms     1.49ms      1.34  inference.NumericInferOps.time_subtract(<type 'numpy.int64'>)\r\n+    2.10ms     2.77ms      1.32  gil.ParallelRolling.time_rolling('rolling_max')\r\n+    9.46μs    12.00μs      1.27  multiindex_object.GetLoc.time_med_get_loc\r\n+    6.33ms     7.94ms      1.25  gil.ParallelReadCSV.time_read_csv('object')\r\n+   52.96ms    65.09ms      1.23  gil.ParallelGroupbyMethods.time_parallel(4, 'max')\r\n+   17.04μs    20.85μs      1.22  offset.OffestDatetimeArithmetic.time_subtract_10(<BusinessYearEnd: month=12>)\r\n+    8.98μs    10.98μs      1.22  offset.OffestDatetimeArithmetic.time_apply(<BusinessMonthBegin>)\r\n+   24.36ms    29.60ms      1.21  gil.ParallelGroupbyMethods.time_parallel(2, 'max')\r\n+    2.02ms     2.45ms      1.21  stat_ops.Correlation.time_corr('pearson')\r\n+   22.94μs    27.18μs      1.18  offset.OffestDatetimeArithmetic.time_subtract_10(<Day>)\r\n+  808.74μs   952.88μs      1.18  inference.NumericInferOps.time_subtract(<type 'numpy.int32'>)\r\n+    9.21μs    10.81μs      1.17  offset.OffestDatetimeArithmetic.time_apply(<BusinessYearEnd: month=12>)\r\n+   10.13μs    11.67μs      1.15  offset.OffestDatetimeArithmetic.time_apply(<SemiMonthBegin: day_of_month=15>)\r\n+    1.76ms     2.03ms      1.15  categoricals.Concat.time_concat\r\n+    6.81μs     7.73μs      1.14  timestamp.TimestampProperties.time_is_quarter_end(None, 'B')\r\n+    2.06ms     2.33ms      1.13  timeseries.ResampleSeries.time_resample('datetime', '1D', 'ohlc')\r\n+     2.41s      2.73s      1.13  groupby.FirstLast.time_groupby_last('object')\r\n+   11.65μs    13.06μs      1.12  offset.OffestDatetimeArithmetic.time_apply_np_dt64(<BusinessDay>)\r\n+   17.12μs    19.16μs      1.12  period.PeriodUnaryMethods.time_asfreq('min')\r\n+   63.06ms    70.42ms      1.12  timeseries.ToDatetimeISO8601.time_iso8601_tz_spaceformat\r\n+   10.90μs    12.17μs      1.12  offset.OffestDatetimeArithmetic.time_apply_np_dt64(<DateOffset: kwds={'months': 2, 'days': 2}>)\r\n+   69.86ms    77.84ms      1.11  gil.ParallelGroupbyMethods.time_parallel(4, 'var')\r\n+    5.59ms     6.22ms      1.11  timeseries.Factorize.time_factorize('Asia/Tokyo')\r\n+   15.32μs    17.02μs      1.11  offset.OffestDatetimeArithmetic.time_add_10(<SemiMonthEnd: day_of_month=15>)\r\n+  837.40ns   928.48ns      1.11  period.PeriodProperties.time_property('M', 'quarter')\r\n+   16.62μs    18.42μs      1.11  offset.OffestDatetimeArithmetic.time_subtract_10(<BusinessDay>)\r\n+   11.01μs    12.20μs      1.11  offset.OffestDatetimeArithmetic.time_apply_np_dt64(<BusinessMonthEnd>)\r\n+   58.41ms    64.71ms      1.11  rolling.Methods.time_rolling('Series', 1000, 'float', 'median')\r\n+    9.21ms    10.20ms      1.11  stat_ops.FrameOps.time_op('skew', 'int', 0, False)\r\n+  125.17ms   138.37ms      1.11  gil.ParallelGroupbyMethods.time_parallel(8, 'count')\r\n+    5.92ms     6.53ms      1.10  groupby.Float32.time_sum\r\n+  763.14μs   840.71μs      1.10  inference.NumericInferOps.time_subtract(<type 'numpy.uint32'>)\r\n+   21.81ms    24.00ms      1.10  offset.OffsetDatetimeIndexArithmetic.time_add_offset(<CustomBusinessDay>)\r\n+    4.74ms     5.22ms      1.10  stat_ops.SeriesMultiIndexOps.time_op(0, 'sem')\r\n-    3.48μs     3.15μs      0.91  timedelta.TimedeltaConstructor.time_from_int\r\n-   10.60μs     9.59μs      0.91  offset.OffestDatetimeArithmetic.time_apply(<QuarterBegin: startingMonth=3>)\r\n-  119.58ms   107.69ms      0.90  gil.ParallelGroupbyMethods.time_parallel(8, 'min')\r\n-   12.22μs    10.97μs      0.90  offset.OffestDatetimeArithmetic.time_apply_np_dt64(<YearBegin: month=1>)\r\n-   30.60ms    27.43ms      0.90  gil.ParallelFactorize.time_parallel(4)\r\n-   11.00μs     9.83μs      0.89  timedelta.TimedeltaConstructor.time_from_components\r\n-   20.33μs    18.12μs      0.89  offset.OffestDatetimeArithmetic.time_add(<CustomBusinessDay>)\r\n-  144.10ms   128.25ms      0.89  timeseries.DatetimeIndex.time_to_pydatetime('tz_aware')\r\n-   29.40ms    26.11ms      0.89  gil.ParallelGroupbyMethods.time_parallel(2, 'sum')\r\n-  325.11μs   288.09μs      0.89  inference.NumericInferOps.time_multiply(<type 'numpy.uint8'>)\r\n-   17.48μs    15.46μs      0.88  offset.OffestDatetimeArithmetic.time_subtract_10(<BusinessQuarterEnd: startingMonth=3>)\r\n-    6.91μs     6.09μs      0.88  algorithms.Duplicated.time_duplicated_string(False)\r\n-  103.69ms    91.25ms      0.88  timedelta.ToTimedeltaErrors.time_convert('coerce')\r\n-   16.28μs    14.30μs      0.88  offset.OffestDatetimeArithmetic.time_subtract(<YearBegin: month=1>)\r\n-   12.94μs    11.32μs      0.87  timestamp.TimestampProperties.time_is_month_end(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>, 'B')\r\n-    3.12ms     2.72ms      0.87  algorithms.Duplicated.time_duplicated_int(False)\r\n-  376.11μs   327.12μs      0.87  inference.NumericInferOps.time_multiply(<type 'numpy.uint16'>)\r\n-  322.78μs   280.49μs      0.87  inference.NumericInferOps.time_multiply(<type 'numpy.int8'>)\r\n-   12.12ms    10.52ms      0.87  multiindex_object.GetLoc.time_small_get_loc_warm\r\n-  601.16ns   516.43ns      0.86  timestamp.TimestampProperties.time_weekday_name(None, 'B')\r\n-   15.89μs    13.65μs      0.86  offset.OffestDatetimeArithmetic.time_add_10(<QuarterBegin: startingMonth=3>)\r\n-  150.32ms   128.97ms      0.86  gil.ParallelGroupbyMethods.time_parallel(8, 'var')\r\n-   11.73ms    10.03ms      0.85  multiindex_object.GetLoc.time_med_get_loc_warm\r\n-   18.55ms    15.82ms      0.85  period.DataFramePeriodColumn.time_setitem_period_column\r\n-  754.02μs   642.96μs      0.85  inference.NumericInferOps.time_add(<type 'numpy.uint32'>)\r\n-   21.19μs    18.02μs      0.85  offset.OffestDatetimeArithmetic.time_add(<Day>)\r\n-    7.92μs     6.73μs      0.85  timestamp.TimestampProperties.time_is_year_start(None, 'B')\r\n-  123.69ms   101.66ms      0.82  gil.ParallelGroupbyMethods.time_parallel(8, 'max')\r\n-   12.10μs     9.86μs      0.81  multiindex_object.GetLoc.time_string_get_loc\r\n-   23.77μs    19.35μs      0.81  period.PeriodUnaryMethods.time_now('M')\r\n-   77.71ms    63.17ms      0.81  groupby.MultiColumn.time_col_select_lambda_sum\r\n-   85.82ms    69.71ms      0.81  join_merge.ConcatDataFrames.time_c_ordered(1, False)\r\n```\r\n\r\n```\r\ntaskset 4 asv continuous -E virtualenv -f 1.1 master HEAD\r\n[...]\r\n    before     after       ratio\r\n  [238499ab] [7034c8ef]\r\n+    2.05ms     3.27ms      1.59  gil.ParallelRolling.time_rolling('rolling_max')\r\n+    1.16μs     1.46μs      1.25  timedelta.TimedeltaConstructor.time_from_missing\r\n+    5.65ms     7.03ms      1.24  gil.ParallelReadCSV.time_read_csv('object')\r\n+   65.03ms    79.15ms      1.22  gil.ParallelGroupbyMethods.time_parallel(4, 'var')\r\n+    2.07ms     2.52ms      1.22  gil.ParallelRolling.time_rolling('rolling_min')\r\n+    6.33μs     7.66μs      1.21  timedelta.TimedeltaConstructor.time_from_string\r\n+    3.26μs     3.90μs      1.19  timedelta.TimedeltaConstructor.time_from_unit\r\n+    9.94μs    11.80μs      1.19  multiindex_object.GetLoc.time_string_get_loc\r\n+  288.30ns   336.67ns      1.17  timestamp.TimestampProperties.time_dayofweek(None, 'B')\r\n+  720.24μs   839.99μs      1.17  inference.NumericInferOps.time_add(<type 'numpy.uint32'>)\r\n+    5.20μs     6.06μs      1.16  timestamp.TimestampOps.time_replace_None('US/Eastern')\r\n+  289.00ns   332.24ns      1.15  timestamp.TimestampProperties.time_is_quarter_start(None, None)\r\n+  888.09μs     1.01ms      1.14  inference.NumericInferOps.time_multiply(<type 'numpy.int32'>)\r\n+   15.10μs    17.12μs      1.13  offset.OffestDatetimeArithmetic.time_add_10(<BusinessDay>)\r\n+  771.36μs   872.03μs      1.13  inference.ToNumericDowncast.time_downcast('datetime64', None)\r\n+   11.50μs    12.98μs      1.13  timestamp.TimestampProperties.time_is_month_start(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>, 'B')\r\n+   56.30ms    63.53ms      1.13  gil.ParallelGroupbyMethods.time_parallel(4, 'sum')\r\n+   18.32μs    20.61μs      1.12  offset.OffestDatetimeArithmetic.time_subtract_10(<SemiMonthBegin: day_of_month=15>)\r\n+    6.82μs     7.65μs      1.12  timestamp.TimestampProperties.time_is_quarter_end(None, 'B')\r\n+   30.52μs    34.03μs      1.12  offset.OffestDatetimeArithmetic.time_subtract_10(<CustomBusinessDay>)\r\n+    6.20ms     6.90ms      1.11  timeseries.Factorize.time_factorize(None)\r\n+  985.93μs     1.10ms      1.11  inference.NumericInferOps.time_multiply(<type 'numpy.uint64'>)\r\n+   11.13μs    12.37μs      1.11  offset.OffestDatetimeArithmetic.time_apply_np_dt64(<BusinessQuarterEnd: startingMonth=3>)\r\n+  273.67μs   303.79μs      1.11  inference.NumericInferOps.time_multiply(<type 'numpy.int8'>)\r\n+   15.61μs    17.33μs      1.11  offset.OffestDatetimeArithmetic.time_subtract_10(<YearEnd: month=12>)\r\n+  771.44μs   854.41μs      1.11  inference.NumericInferOps.time_add(<type 'numpy.float32'>)\r\n+  152.52μs   168.34μs      1.10  join_merge.Concat.time_concat_empty_right(1)\r\n+    5.26ms     5.79ms      1.10  stat_ops.SeriesMultiIndexOps.time_op([0, 1], 'sem')\r\n+   11.27μs    12.41μs      1.10  timestamp.TimestampProperties.time_is_year_start(<DstTzInfo 'Europe/Amsterdam' LMT+0:20:00 STD>, 'B')\r\n+  134.58ms   148.19ms      1.10  gil.ParallelGroupbyMethods.time_parallel(8, 'var')\r\n-   21.32μs    19.37μs      0.91  offset.OffestDatetimeArithmetic.time_add_10(<Day>)\r\n-    1.21ms     1.09ms      0.91  inference.NumericInferOps.time_multiply(<type 'numpy.int64'>)\r\n-   15.67μs    14.19μs      0.91  offset.OffestDatetimeArithmetic.time_add_10(<BusinessQuarterEnd: startingMonth=3>)\r\n-   29.13ms    26.36ms      0.90  join_merge.Concat.time_concat_small_frames(0)\r\n-    4.09ms     3.70ms      0.90  timeseries.ToDatetimeISO8601.time_iso8601\r\n-   17.84μs    16.13μs      0.90  timeseries.AsOf.time_asof_single('Series')\r\n-   18.21μs    16.35μs      0.90  offset.OffestDatetimeArithmetic.time_subtract_10(<BusinessYearEnd: month=12>)\r\n-   65.01ms    58.22ms      0.90  gil.ParallelGroupbyMethods.time_parallel(4, 'max')\r\n-   65.68ms    58.76ms      0.89  gil.ParallelGroupbyMethods.time_parallel(4, 'mean')\r\n-    8.40ms     7.49ms      0.89  frame_methods.MaskBool.time_frame_mask_floats\r\n-   31.52ms    28.11ms      0.89  gil.ParallelFactorize.time_parallel(4)\r\n-  310.70μs   274.38μs      0.88  inference.NumericInferOps.time_add(<type 'numpy.int8'>)\r\n-   29.68ms    26.20ms      0.88  gil.ParallelGroupbyMethods.time_parallel(2, 'last')\r\n-  128.31ms   112.87ms      0.88  gil.ParallelGroupbyMethods.time_parallel(8, 'max')\r\n-    1.01ms   886.81μs      0.88  inference.NumericInferOps.time_subtract(<type 'numpy.int32'>)\r\n-   52.00ms    45.52ms      0.88  plotting.TimeseriesPlotting.time_plot_regular_compat\r\n-   14.88μs    13.03μs      0.88  offset.OffestDatetimeArithmetic.time_add_10(<MonthBegin>)\r\n-   18.81μs    16.36μs      0.87  offset.OffestDatetimeArithmetic.time_apply_np_dt64(<CustomBusinessDay>)\r\n-    3.89ms     3.37ms      0.87  algorithms.Duplicated.time_duplicated_float('first')\r\n-    1.38ms     1.19ms      0.86  stat_ops.FrameOps.time_op('prod', 'int', 0, False)\r\n-   12.26μs    10.60μs      0.86  offset.OffestDatetimeArithmetic.time_apply_np_dt64(<BusinessYearEnd: month=12>)\r\n-    3.09ms     2.62ms      0.85  inference.ToNumeric.time_from_numeric_str('coerce')\r\n-    3.90ms     3.31ms      0.85  algorithms.Duplicated.time_duplicated_float('last')\r\n-   17.10μs    14.35μs      0.84  offset.OffestDatetimeArithmetic.time_subtract(<BusinessMonthEnd>)\r\n-   28.26ms    23.44ms      0.83  gil.ParallelGroupbyMethods.time_parallel(2, 'max')\r\n-   29.33ms    23.86ms      0.81  gil.ParallelGroupbyMethods.time_parallel(2, 'prod')\r\n-   85.89ms    69.82ms      0.81  join_merge.ConcatDataFrames.time_c_ordered(1, False)\r\n-    2.79ms     2.14ms      0.76  stat_ops.Correlation.time_corr('pearson')\r\n-   66.96ms    49.72ms      0.74  gil.ParallelGroupbyMethods.time_parallel(4, 'prod')\r\n-  163.15ms   108.13ms      0.66  gil.ParallelGroupbyMethods.time_loop(8, 'sum')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361905204",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19450#issuecomment-361905204",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19450",
    "id": 361905204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTkwNTIwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T11:30:23Z",
    "updated_at": "2018-01-31T11:30:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!"
  }
]
