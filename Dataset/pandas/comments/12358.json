[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184929804",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-184929804",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 184929804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDkyOTgwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-16T23:53:30Z",
    "updated_at": "2016-02-16T23:53:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "a couple of things:\n\n1) your syntax is incorrect (yes this did work, but it is completely misleading), as its not clear that you actually mean to localize\n\nso construct the index like this. IOW. you have to say, hey this a local UTC time, THEN convert it.\n\n```\ntm = pd.DatetimeIndex(pd.to_datetime([\"2014-01-01 10:10:10\"])).tz_localize('UTC').tz_convert('Europe/Rome')\n\nIn [4]: tm\nOut[4]: DatetimeIndex(['2014-01-01 11:10:10+01:00'], dtype='datetime64[ns, Europe/Rome]', freq=None)\n```\n\n2) `df.set_index(df.tm, inplace=True)`\n\nThis is a nonsensical operation, what do you think this should do?\n\nyou probably mean\n`df.index = df.tm`\n\nYou are effectively setting the index with a 'key' from they array; this technically works as you only have 1 element (otherwise it would raise). but as I said doesn't make any sense.\n\n```\nIn [30]: df.set_index?\nSignature: df.set_index(keys, drop=True, append=False, inplace=False, verify_integrity=False)\nDocstring:\nSet the DataFrame index (row labels) using one or more existing\ncolumns. By default yields a new object.\n\nParameters\n----------\nkeys : column label or list of column labels / arrays\ndrop : boolean, default True\n    Delete columns to be used as the new index\nappend : boolean, default False\n    Whether to append columns to existing index\ninplace : boolean, default False\n    Modify the DataFrame in place (do not create a new object)\nverify_integrity : boolean, default False\n    Check the new index for duplicates. Otherwise defer the check until\n    necessary. Setting to False will improve the performance of this\n    method\n\nExamples\n--------\n>>> indexed_df = df.set_index(['A', 'B'])\n>>> indexed_df2 = df.set_index(['A', [0, 1, 2, 0, 1, 2]])\n>>> indexed_df3 = df.set_index([[0, 1, 2, 0, 1, 2]])\n\nReturns\n-------\ndataframe : DataFrame\nFile:      ~/pandas/pandas/core/frame.py\nType:      instancemethod\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184933518",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-184933518",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 184933518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDkzMzUxOA==",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T00:06:55Z",
    "updated_at": "2016-02-17T00:06:55Z",
    "author_association": "NONE",
    "body": "It seems clear enough to me that if I know the tz of the series, there's no point to \"localize\" it later.\nIn fact, I always start from UTC. pd.to_datetime has an utc keyword which I would have expected to make the DatetimeIndex UTC _and_ tz-aware, which would be what I need 99% of the time, but it doesn't (what's the point of this argument is still unclear to me!?).\n\nAs for setting the index, yes, it's dodgy. It's a reduced test-case from some convoluted code.\nHowever, why does it shift time? I see no reason why in this explicit case it should.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184934905",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-184934905",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 184934905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDkzNDkwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T00:10:09Z",
    "updated_at": "2016-02-17T00:10:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "passing it rather than explicity localizing leads to a lot of ambiguity, what should I doing here?\n\n```\nIn [1]: DatetimeIndex(['2014-01-01 11:10:10+01:00'],tz='UTC')\nOut[1]: DatetimeIndex(['2014-01-01 10:10:10+00:00'], dtype='datetime64[ns, UTC]', freq=None)\n```\n\nas to your second point, it is converted to a numpy array, thus the tz is lost. the first arg only accepts a list or np.array NOT a Series, excactly for this reason.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184937177",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-184937177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 184937177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDkzNzE3Nw==",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T00:17:48Z",
    "updated_at": "2016-02-17T00:17:48Z",
    "author_association": "NONE",
    "body": "tz_localize() converts the timezone, I explicitly don't want it to do any conversion as my dates do not contain any.\n\nIn fact, if I could bug you one more time about this, what's the more efficient way to start from a unix timestamp (obviously in UTC) and get to a localized series?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184938105",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-184938105",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 184938105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDkzODEwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T00:23:16Z",
    "updated_at": "2016-02-17T00:23:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "NO `tz_localize`, SETS the timezone, `tz_convert` converts it!\n\nHere's some examples.\n\nYou CAN use the `utc=True` flag on `pd.to_datetime`; this WILL return it localized to UTC. (just don't do this directly with `DatetimeIndex`. All will be well if you use `pd.to_datetime` for all conversion needs, then operate on the resulting objects\n\n```\nIn [2]: v = Timestamp('20130101').value\n\nIn [3]: v\nOut[3]: 1356998400000000000\n\nIn [4]: pd.to_datetime(v,unit='ns')\nOut[4]: Timestamp('2013-01-01 00:00:00')\n\nIn [5]: pd.to_datetime(v/1000000,unit='ms')\nOut[5]: Timestamp('2013-01-01 00:00:00')\n\nIn [6]: pd.to_datetime(v/1000000,unit='ms').tz_localize('UTC')\nOut[6]: Timestamp('2013-01-01 00:00:00+0000', tz='UTC')\n\nIn [7]: pd.to_datetime(v/1000000,unit='ms',utc=True)\nOut[7]: Timestamp('2013-01-01 00:00:00+0000', tz='UTC')\n\nIn [8]: pd.to_datetime(v/1000000,unit='ms').tz_localize('UTC')\nOut[8]: Timestamp('2013-01-01 00:00:00+0000', tz='UTC')\n\nIn [9]: Series(pd.to_datetime(v/1000000,unit='ms').tz_localize('UTC'))\nOut[9]: \n0   2013-01-01 00:00:00+00:00\ndtype: datetime64[ns, UTC]\n\nIn [10]: Series(pd.to_datetime(v/1000000,unit='ms')).dt.tz_localize('UTC').dt.tz_convert('US/Eastern')\nOut[10]: \n0   2012-12-31 19:00:00-05:00\ndtype: datetime64[ns, US/Eastern]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185172231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-185172231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 185172231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTE3MjIzMQ==",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T12:02:10Z",
    "updated_at": "2016-02-17T12:02:10Z",
    "author_association": "NONE",
    "body": "On Wed, Feb 17 2016, Jeff Reback notifications@github.com wrote:\n\n> You CAN use the utc=True flag on pd.to_datetime; this WILL return it localized\n> to UTC. (just don't do this directly with DatetimeIndex. All will be well if\n> you use pd.to_datetime for all conversion needs, then operate on the resulting\n> objects\n\nOk, this made things a little bit clearer regarding the tz.\nPoint understood.\n\nI'm still not super-happy about the set_index behavior. I've given it\nsome extra-though, but I don't see where and why the tz would be lost.\n\nWhere exactly this conversion happens?\n\nimport pandas as pd\ntm = pd.DatetimeIndex(pd.to_datetime([\"2014-01-01 10:10:10\"]), tz='UTC').tz_convert('Europe/Rome')\ndf = pd.DataFrame({'tm': tm})\nprint(df.set_index(tm).index[0].hour)\nprint(pd.DatetimeIndex(pd.Series(df.tm))[0].hour)\nprint(df.set_index(df.tm).index[0].hour)\n\n=> 11 11 10\n\nIgnore the fact that I could assign to index for a moment.\n\nI'm supplying a type to set_index that should be equivalent to the\nfirst or second print statement.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185199925",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-185199925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 185199925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTE5OTkyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T13:17:08Z",
    "updated_at": "2016-02-17T13:17:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "looks like a bug after all!\n\nfixed by #12365 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185203407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-185203407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 185203407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTIwMzQwNw==",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T13:25:00Z",
    "updated_at": "2016-02-17T13:25:00Z",
    "author_association": "NONE",
    "body": "On Wed, Feb 17 2016, Jeff Reback notifications@github.com wrote:\n\n> looks like a bug after all!\n> \n> fixed by #12365\n\nSorry for being pedantic!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/185203925",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12358#issuecomment-185203925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12358",
    "id": 185203925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NTIwMzkyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-17T13:27:29Z",
    "updated_at": "2016-02-17T13:27:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "no, persistence is good! you got me to actually step thru and see what was happening. always better to test.\n"
  }
]
