[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442969505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23996#issuecomment-442969505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23996",
    "id": 442969505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjk2OTUwNQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T19:49:59Z",
    "updated_at": "2018-11-29T19:49:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "This isn't due to pandas - I had to try this out, but apparently the f string in the closure in the lambda (!) binds late enough so the last value in the dictionary is being used for everything.  e.g.\r\n\r\n```python\r\nqdict = {'B': 'V', 'C': 'Hz', 'D': 's'}\r\nprec = 2\r\nstylers = {}\r\nfor k,v in qdict.items():\r\n    stylers[k] = lambda x: f'{x:.{prec}}{v}'  # v is always s\r\n\r\nstylers['B'](2.0)\r\n# Out[82]: '2.0s'\r\nstylers['C'](2.0)\r\n# Out[83]: '2.0s'\r\nstylers['D'](2.0)\r\n# Out[84]: '2.0s'\r\n```\r\n\r\nMay be a cleaner way, but something like this works, the double `'}}'` is to escape\r\n\r\n```python\r\nqdict = {'B': 'V', 'C': 'Hz', 'D': 's'}\r\nprec = 2\r\nstylers = {}\r\nfor k,v in qdict.items():\r\n    stylers[k] = ('{' + ':.{prec}}}{v}'.format(prec=prec, v=v)).format\r\n\r\nstylers['B'](2.0)\r\nOut[102]: '2.0V'\r\n```\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443265915",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23996#issuecomment-443265915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23996",
    "id": 443265915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzI2NTkxNQ==",
    "user": {
      "login": "DeltaSigma130",
      "id": 22784297,
      "node_id": "MDQ6VXNlcjIyNzg0Mjk3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22784297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DeltaSigma130",
      "html_url": "https://github.com/DeltaSigma130",
      "followers_url": "https://api.github.com/users/DeltaSigma130/followers",
      "following_url": "https://api.github.com/users/DeltaSigma130/following{/other_user}",
      "gists_url": "https://api.github.com/users/DeltaSigma130/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DeltaSigma130/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DeltaSigma130/subscriptions",
      "organizations_url": "https://api.github.com/users/DeltaSigma130/orgs",
      "repos_url": "https://api.github.com/users/DeltaSigma130/repos",
      "events_url": "https://api.github.com/users/DeltaSigma130/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DeltaSigma130/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T16:50:33Z",
    "updated_at": "2018-11-30T16:50:33Z",
    "author_association": "NONE",
    "body": "Thanks for the explanation, and it did turn out to be a Python closure issue.  The issue has nothing to do with the f-strings but with lambdas in a for loop.  The short answer is that the for loop does not create a new scope at every iteration, so the lambda functions all bind to the same `v` variable.  \r\n\r\n[https://docs.python.org/3/faq/programming.html#why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result](url)\r\n[https://stackoverflow.com/questions/2295290/what-do-lambda-function-closures-capture](url)\r\n\r\nFrom the Python FAQ, one other solution is to use default arguments on the lambda function to get the binding at each iteration.\r\n\r\n```python\r\nqdict = {'B': 'V', 'C': 'Hz', 'D': 's'}\r\nprec = 2\r\nstylers = {}\r\nfor k,v in qdict.items():\r\n    stylers[k] = lambda x, v=v: f'{x:.{prec}}{v}'\r\n\r\nstylers['D'](2.0)\r\nOut[27]: '2.0s'\r\n\r\nstylers['B'](2.0)\r\nOut[28]: '2.0V'\r\n```"
  }
]
