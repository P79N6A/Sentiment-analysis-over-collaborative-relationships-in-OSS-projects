[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49225023",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-49225023",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 49225023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjI1MDIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T20:50:48Z",
    "updated_at": "2014-07-16T20:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "see here: https://github.com/jreback/pandas/commit/1fc80e6c2c16b992e9f04ff9d4c66462d773e4b9\n\nI don't buy the 2 NaN output case. very odd thing to do. A nan is a nan\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49225202",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-49225202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 49225202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjI1MjAy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T20:51:56Z",
    "updated_at": "2014-07-16T20:51:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "This currently does not work:\n\n``` python\ncat = pd.Categorical([1,2,3, np.nan], levels=[1,2,3])\ncat.levels = [1,2,3, np.nan]\ncat[1] = np.nan\nexp = np.array([0,3,2,-1])\nself.assert_numpy_array_equal(cat.codes, exp)\n```\n\nI'm not sure if this here is a bug or actually as intended:\n\n```\nIn[18]: idx = _ensure_index([1,2,3,np.nan]) \nIn[19]: idx\nOut[19]: Float64Index([1.0, 2.0, 3.0, nan], dtype='float64')\nIn[20]: idx.get_indexer([np.nan])\nOut[20]: array([-1])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49226217",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-49226217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 49226217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjI2MjE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T20:59:49Z",
    "updated_at": "2014-07-16T20:59:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "with a Floatindex u can't do that\nu have to use hasnans and a check indexer \n\nu really can only have 1 nan if you intend to do any kind of indexing operation rlse how would u know where it goes?\n\nit not a value but an indicator of a missing value \n\nso u can have more than 1 nan but then indexing (eg setitem/getitem) is impossible by value (but u can take by position)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49226587",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-49226587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 49226587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5MjI2NTg3",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-16T21:02:30Z",
    "updated_at": "2014-07-16T21:04:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re \"two times nan in describe\": R has the same problem with \"NA as a level vs NA as missing value\": http://stat.ethz.ch/R-manual/R-devel/library/base/html/factor.html\n\n> If NA is a level, the way to set a code to be missing (as opposed to the code of the missing level) is to use is.na on the left-hand-side of an assignment (as in is.na(f)[i] <- TRUE; indexing inside is.na does not work). Under those circumstances missing values are currently printed as <NA>, i.e., identical to entries of level NA.\n\nR does the same thing, printing NA twice, but once indicating that it is a level `<NA>` and once that it is missing `NA's`:\n\n``` R\n> f <- factor(c(1,2,3,NA), exclude=F)\n> f\n[1] 1    2    3    <NA>\nLevels: 1 2 3 <NA>\n> is.na(f)[1] <- TRUE\n> f\n[1] <NA> 2    3    <NA>\nLevels: 1 2 3 <NA>\n> table(f)\nf\n   1    2    3 <NA> \n   0    1    1    1 \n> summary(f)\n   1    2    3 <NA> NA's \n   0    1    1    1    1 \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49946163",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-49946163",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 49946163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQ2MTYz",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T22:41:23Z",
    "updated_at": "2014-07-23T22:41:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Please have a look ... I added a workaround for `NaN in index` in 39a7531and implemented all the stuff which came up in the end of #7217.\n\nSo, if Travis passes and you are satisfied, I think this is ready to merge.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49946240",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-49946240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 49946240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQ2MjQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T22:42:14Z",
    "updated_at": "2014-07-23T22:42:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I want to fix the issue with nan first\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51593960",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51593960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51593960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTkzOTYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T12:23:36Z",
    "updated_at": "2014-08-08T12:23:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz relating to your comment from #7207 \nWhat more do you want here? I think this groups very nicely, don't show excess stuff.\n\n```\nIn [1]: s = Series(list('aabbccd')).astype('category')\n\nIn [2]: s\nOut[2]: \n0    a\n1    a\n2    b\n3    b\n4    c\n5    c\n6    d\ndtype: category\nLevels (4, object): [a < b < c < d]\n\nIn [3]: s.values.\ns.values.T                     s.values.describe              s.values.from_array            s.values.max                   s.values.order                 s.values.reorder_levels        s.values.take_nd               \ns.values.argsort               s.values.dtype                 s.values.from_codes            s.values.min                   s.values.ordered               s.values.shape                 s.values.to_dense              \ns.values.codes                 s.values.equals                s.values.get_values            s.values.mode                  s.values.ravel                 s.values.sort                  s.values.unique                \ns.values.copy                  s.values.fillna                s.values.levels                s.values.ndim                  s.values.remove_unused_levels  s.values.take                  s.values.view                  \n\nIn [3]: s.values.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51624874",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51624874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51624874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjI0ODc0",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T16:24:47Z",
    "updated_at": "2014-08-08T16:24:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "[The follwoing is just about `Series.cat`, not abaout `Series.values` which should be the underlying data structure (either `numpy.array` or `pd.Categorical`)]\n\nfrom my perspective, the above has way to many methods visible (and some relevant are not even visible): when you have a Series of type `category`, only a few methods should be available under `Series.cat`: `.levels` `.reorder_levels()`, `.remove_unused_levels()` and `.codes`. Everything else is an implementation detail and the functionality is exposed via the normal `Series` methods (`unique`, `min`, `max`,...).\n\nOnly declaring the above 4 methods/properties as API (and only exposing them) will mean that we can switch to a numpy category implementation (which I expect to happen) much more easily without breaking user code and it makes for a nicer tab completion...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51626062",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51626062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51626062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjI2MDYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T16:32:16Z",
    "updated_at": "2014-08-08T16:32:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "numpy cat implementation is pie-in-the-sky. if it happens great. but don't hold your breath. And if it actually does, and we actually switch to it (a big IF, why would it really be any different/better?), so we make a change, so what.\n\nwhat methods are relevant but not visible?\n\nwhat about `.codes,fillna,copy,astype` these seem relevant?\n\nyes they are available (and delegate from series). but as a user wouldn't I expect to see what I can do with the object?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51629171",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51629171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51629171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjI5MTcx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T16:58:35Z",
    "updated_at": "2014-08-08T19:10:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.codes` is, but `.fillna` is done via `Series.fillna()` and not via `Series.cat.fillna()` (same for `copy` and `astype`). If you know what you are doing, fine, just go for `Series.values` and do whatever you want with it, but you also have to watch out for bugs then. \n\nFrom my perspective (using pandas for some not-so-advanced data munging and statistics) I never noticed how numpy arrays are wrapped until I worked on Categorical, so I also never tried to work with `Series.values` and I also think it would be wrong to use methods on the numpy array directly because that would (as far as my understanding goes) lead to strange results like in the `Series(numpyarray)`-case where you can manipulate the `numpyarray` and the Series changes in some cases (depending on view or not).\n\nI'm also a fan of only promoting to API as few methods/properties as possible to have some room for future developments, but that's probably not as problematic in python as it is in java.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51629846",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51629846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51629846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjI5ODQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:04:17Z",
    "updated_at": "2014-08-08T17:04:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, I am on-board with this then. this is actually really easy, \n\njust provide a new `Categorical.__dir__()` with the methods/properties you want (just a list of strings)\n\nIt was a bit non-trivial with datetime, because ipython search all of the base classes (which complicates things). Here base class is pretty trivial so its not an issue (and they ignore anything that starts with '_')).\n\nand need a test as well (see what I did for the .dt tests)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51630319",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51630319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51630319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjMwMzE5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:08:39Z",
    "updated_at": "2014-08-08T19:10:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "But that has a problem too: Looking at the `Categorical` object is like looking at the numpy array and that object should expose every method. So `S.cat.<tab>` should give you a different list of methods than `s.values.<tab>` or `Categorical(...).<tab>`. So I still think it makes sense to replace `s.cat` with a similar object like it is now done with `s.dt` (which has the same objective to hide the internals of the implementation from the user).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51632197",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51632197",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51632197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjMyMTk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:24:39Z",
    "updated_at": "2014-08-08T17:24:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh, I c what you want to do, like a `CategoricalDelegate` or something that is like `DatetimelikeProperties`, delgating as needed (but this is only for a limited purpose).\n\nok then go for it, should be straightforward.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51632858",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51632858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51632858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjMyODU4",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:30:30Z",
    "updated_at": "2014-08-08T17:30:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I current try my idea with the \"generate the dt accessors\" and if that works I will base the cat access on that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51633125",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51633125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51633125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjMzMTI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:33:03Z",
    "updated_at": "2014-08-08T17:33:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I already did it. https://github.com/pydata/pandas/pull/7953/files\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51633515",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51633515",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51633515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjMzNTE1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:36:37Z",
    "updated_at": "2014-08-08T17:36:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just saw it. Damn, you are too fast! :-)\n\nIf `_add_accessors(cls)` get's changed to `_add_accessors(cls, names)`, this will work for cat as well. Then it can also be put into a more generic place.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51634161",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51634161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51634161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM0MTYx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:41:41Z",
    "updated_at": "2014-08-08T17:41:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will push in a minute...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51635211",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51635211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51635211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM1MjEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:50:40Z",
    "updated_at": "2014-08-08T17:50:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/jreback/pandas/commit/a6828b22160b52d859da8f419634b5fc9d35bc2e will form a nice base\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51635550",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51635550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51635550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjM1NTUw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T17:53:32Z",
    "updated_at": "2014-08-08T17:53:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "See here: https://github.com/JanSchulz/pandas/commit/3ad8faad2e3859345a2c06a6102f47548783e1ee\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51642272",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51642272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51642272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjQyMjcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T18:46:19Z",
    "updated_at": "2014-08-08T18:46:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this makes it more generic (and allow CategoricalDelgate to inherit now) : https://github.com/jreback/pandas/commit/e0d8e8b5af99634f428fa3ae62e4933db9d3b159\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51644375",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51644375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51644375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjQ0Mzc1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T19:03:41Z",
    "updated_at": "2014-08-08T19:03:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Damn, you are always a few minutes faster (and have the better result...): just for the reference, here is mine: https://github.com/JanSchulz/pandas/commit/886313005fcacea9d1d2e7185e890d18c0469d0e\n\nIt would be nice of \"Properties\" would move to a more generic place, IMO it's not appropriate to import that from `tseries` in `categorical.py`...\n\nI will base the category_fixup branch on your dt branch\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51645151",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51645151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51645151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjQ1MTUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T19:10:50Z",
    "updated_at": "2014-08-08T19:10:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "create a `CategoricalProperties` which subclasses `PandasDelegate`. You don't need to mess with the `Properties` I created in tseries.datetimelike. Its too specific for what Categorical need (and also not really general enough).\n\nsomething like Properties\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51645215",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51645215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51645215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjQ1MjE1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T19:11:24Z",
    "updated_at": "2014-08-08T19:11:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, will do, thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51659479",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51659479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51659479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjU5NDc5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T21:25:07Z",
    "updated_at": "2014-08-08T21:26:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Damn:\n\n``` python\nIn[50]: cat = pd.Series(pd.Categorical([\"a\",\"b\",\"c\"], levels=[\"c\",\"b\",\"a\"]))\nIn[51]: cat2 = pd.Series(pd.Categorical([\"b\",\"b\",\"b\"], levels=[\"c\",\"b\",\"a\"]))\nIn[52]: cat3 = pd.Series(pd.Categorical([\"a\",\"b\",\"c\"]))\nIn[56]: cat4 = pd.Series(pd.Categorical([\"b\",\"b\",\"b\"]))\n# this is correct\nIn[58]: cat3 > cat4\nOut[57]: \n0    False\n1    False\n2     True\ndtype: bool\n# This is wrong, should be True, False, False because level order is reversed!\nIn[57]: cat > cat2\nOut[56]: \n0    False\n1    False\n2     True\ndtype: bool\n# This should raise?\nIn[59]: cat > cat3\nOut[58]: \n0    False\n1    False\n2    False\ndtype: bool\n```\n\nBTW, why does this not raise:\n\n``` python\nIn[61]: pd.Series(list(\"abc\")) < pd.Series([1,2,3])\nOut[60]: \n0    False\n1    False\n2    False\ndtype: bool\nIn[63]: pd.Series(list(\"abc\")) > pd.Series([1,2,3])\nOut[62]: \n0    True\n1    True\n2    True\ndtype: bool\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51659718",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51659718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51659718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjU5NzE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T21:27:31Z",
    "updated_at": "2014-08-08T21:27:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "the last is a pythonism, 'a' > 1 is True. I suppose its an error.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51659820",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51659820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51659820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjU5ODIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T21:28:30Z",
    "updated_at": "2014-08-08T21:28:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "the comparisons need a delegation wrapper.....coming right up!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51661671",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51661671",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51661671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjYxNjcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T21:49:05Z",
    "updated_at": "2014-08-08T21:49:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/jreback/pandas/commit/35afdc925f2106f1beeb8b00404253362b974699\n\nfixes the boolean comparison issue\n\nneed tests for comparisons with a scalar\n\ne.g. \n\n`cat3 > 5`\n\nin theory your last example works (`cat > cat2`), as ordering is always for the lhs\n\nfyi, ordered vs unordered should prob raise.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51666074",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51666074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51666074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjY2MDc0",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T22:46:54Z",
    "updated_at": "2014-08-08T22:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I came up with some other implementation:\n\n``` python\ndef _cat_compare_op(op):\n    def f(self, other):\n        if isinstance(other, Categorical):\n            # Two categoricals can only be be compared if the levels are the same\n            if not ((self.levels == other.levels).all()):\n                raise TypeError(\"Categoricals can only be compared if 'levels' are the same\")\n            if not (self.ordered == other.ordered):\n                raise TypeError(\"Categoricals can only be compared if 'ordered' is the same\")\n            na_mask = (self._codes == -1) | (other._codes == -1)\n            f = getattr(self._codes, op)\n            ret = f(other._codes)\n            if na_mask.any():\n                # In other series, the leads to False, so do that here too\n                ret[na_mask] = False\n            return ret\n        elif isinstance(other, (np.ndarray, com.ABCSeries)):\n            values = np.asarray(self)\n            f = getattr(values, op)\n            return f(np.asarray(other))\n        else:\n            if other in self.levels:\n                i = self.levels.get_loc(other)\n                return getattr(self._codes, op)(i)\n            else:\n                return np.repeat(False, len(self))\n\n    f.__name__ = op\n\n    return f\n```\n\nOn the other hand: I haven't found any comparison on Series, which was throwing an error, so according to that, we shouldn't raise at all? Different levels are undefined as `1 > object()`, but even worse, as for all other types the comparison outcome is predictable, but not for Categorical.\n\nAren't such comparisons raising on Py3? \n\n[Edit: yep:]\n\n``` python\n[ggplot_py33] C:\\Windows\\System32>python\nPython 3.3.3 |Continuum Analytics, Inc.| (default, Dec 13 2013, 10:31:18) [MSC v\n.1600 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> 1 > object()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: int() > object()\n>>> import pandas as pd\n>>> pd.Series(list(\"abc\")) < pd.Series([1,2,3])\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:\\portabel\\miniconda\\envs\\ggplot_py33\\lib\\site-packages\\pandas\\core\\ops\n.py\", line 543, in wrapper\n    return self._constructor(na_op(self.values, other.values),\n  File \"C:\\portabel\\miniconda\\envs\\ggplot_py33\\lib\\site-packages\\pandas\\core\\ops\n.py\", line 522, in na_op\n    result = lib.vec_compare(x, y.astype(np.object_), op)\n  File \"lib.pyx\", line 661, in pandas.lib.vec_compare (pandas\\lib.c:11253)\nTypeError: unorderable types: str() < int()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51666777",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51666777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51666777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjY2Nzc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T22:56:26Z",
    "updated_at": "2014-08-08T22:56:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "your impl looks done too\n\nhmm not sure about the series comparisons\n(in py3)\n\nI don't think they are tested as they r not well defined \n\nthough for categoricals u can be very strict \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51667233",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7768#issuecomment-51667233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7768",
    "id": 51667233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjY3MjMz",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T23:03:59Z",
    "updated_at": "2014-08-08T23:05:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, \"being strict\" (=the Py3 behaviour) would mean that we only compare \"cat vs cat\", if levels and ordered are the same and additionally \"cat vs scalar\". Everything else raises.\n\nThe Py2 behaviour would be the above but instead of raising, fallback on every other case to comparing values (that's at least predictable...)\n\nAh, and for all comparisons apart from `!=` and `==` this must also raise/fallback if the Categorical is unordered. \n\nAny comments? should the \"fallback\" stay on py2 or should the implementation be strict under all python versions?\n"
  }
]
