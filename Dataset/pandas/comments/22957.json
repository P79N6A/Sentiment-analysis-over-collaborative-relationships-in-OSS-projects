[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426495227",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22957#issuecomment-426495227",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22957",
    "id": 426495227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjQ5NTIyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T02:50:34Z",
    "updated_at": "2018-10-03T02:50:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the rule is that appending any two different types of indexes ends up with `object` dtype.\r\n\r\nThe specific example you showed, Index and PeriodIndex is a definite bug."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426507876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22957#issuecomment-426507876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22957",
    "id": 426507876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjUwNzg3Ng==",
    "user": {
      "login": "pambot",
      "id": 6526199,
      "node_id": "MDQ6VXNlcjY1MjYxOTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6526199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pambot",
      "html_url": "https://github.com/pambot",
      "followers_url": "https://api.github.com/users/pambot/followers",
      "following_url": "https://api.github.com/users/pambot/following{/other_user}",
      "gists_url": "https://api.github.com/users/pambot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pambot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pambot/subscriptions",
      "organizations_url": "https://api.github.com/users/pambot/orgs",
      "repos_url": "https://api.github.com/users/pambot/repos",
      "events_url": "https://api.github.com/users/pambot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pambot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-03T04:27:33Z",
    "updated_at": "2018-10-03T04:27:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't know much about internals, but digging into the bug, this is the code being run:\r\n```\r\ndef is_uniform_join_units(join_units):\r\n    return (\r\n        # all blocks need to have the same type\r\n        all(type(ju.block) is type(join_units[0].block) for ju in join_units) and  # noqa\r\n        # no blocks that would get missing values (can lead to type upcasts)\r\n        # unless we're an extension dtype.\r\n        all(not ju.is_na or ju.block.is_extension for ju in join_units) and\r\n        # no blocks with indexers (as then the dimensions do not fit)\r\n        all(not ju.indexers for ju in join_units) and\r\n        # disregard Panels\r\n        all(ju.block.ndim <= 2 for ju in join_units) and\r\n        # only use this path when there is something to concatenate\r\n        len(join_units) > 1)\r\n```\r\nWhere,\r\n```\r\nIn[3]: join_units\r\nOut[3]: \r\n[JoinUnit(IntBlock: slice(0, 1, 1), 1 x 1, dtype: int64, {}),\r\n JoinUnit(None, {})]\r\n```\r\nSo it looks like `PeriodIndex` is not returning the right kind of `Block`, just a `None` because `indexers` is giving it an `index` of -1. Does any of this ring a bell? Seems to me like `PeriodIndex` should be a `DatetimeBlock` or something?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427966774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22957#issuecomment-427966774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22957",
    "id": 427966774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzk2Njc3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T20:22:16Z",
    "updated_at": "2018-10-08T20:22:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, I suspect that all the PeriodIndex ones will be solved by #22862 (which will be in 0.24)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428013457",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22957#issuecomment-428013457",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22957",
    "id": 428013457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODAxMzQ1Nw==",
    "user": {
      "login": "araraonline",
      "id": 19141454,
      "node_id": "MDQ6VXNlcjE5MTQxNDU0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19141454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/araraonline",
      "html_url": "https://github.com/araraonline",
      "followers_url": "https://api.github.com/users/araraonline/followers",
      "following_url": "https://api.github.com/users/araraonline/following{/other_user}",
      "gists_url": "https://api.github.com/users/araraonline/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/araraonline/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/araraonline/subscriptions",
      "organizations_url": "https://api.github.com/users/araraonline/orgs",
      "repos_url": "https://api.github.com/users/araraonline/repos",
      "events_url": "https://api.github.com/users/araraonline/events{/privacy}",
      "received_events_url": "https://api.github.com/users/araraonline/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T23:43:22Z",
    "updated_at": "2018-10-08T23:43:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, will take that into account (:"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428146858",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22957#issuecomment-428146858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22957",
    "id": 428146858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODE0Njg1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T10:48:35Z",
    "updated_at": "2018-10-09T10:48:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "so this is tested independently (though i suspect itâ€™s not fully tested for a cartesian product of Indexes)\r\n\r\nlook at Index.append (and subclasses of Index)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428394016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22957#issuecomment-428394016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22957",
    "id": 428394016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM5NDAxNg==",
    "user": {
      "login": "araraonline",
      "id": 19141454,
      "node_id": "MDQ6VXNlcjE5MTQxNDU0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19141454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/araraonline",
      "html_url": "https://github.com/araraonline",
      "followers_url": "https://api.github.com/users/araraonline/followers",
      "following_url": "https://api.github.com/users/araraonline/following{/other_user}",
      "gists_url": "https://api.github.com/users/araraonline/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/araraonline/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/araraonline/subscriptions",
      "organizations_url": "https://api.github.com/users/araraonline/orgs",
      "repos_url": "https://api.github.com/users/araraonline/repos",
      "events_url": "https://api.github.com/users/araraonline/events{/privacy}",
      "received_events_url": "https://api.github.com/users/araraonline/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T00:07:00Z",
    "updated_at": "2018-10-10T00:30:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will take a look :). Also believe that some of the errors are raised from functions like Index.union and Index.difference."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462176197",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22957#issuecomment-462176197",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22957",
    "id": 462176197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjE3NjE5Nw==",
    "user": {
      "login": "CDBridger",
      "id": 16039182,
      "node_id": "MDQ6VXNlcjE2MDM5MTgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/16039182?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CDBridger",
      "html_url": "https://github.com/CDBridger",
      "followers_url": "https://api.github.com/users/CDBridger/followers",
      "following_url": "https://api.github.com/users/CDBridger/following{/other_user}",
      "gists_url": "https://api.github.com/users/CDBridger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CDBridger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CDBridger/subscriptions",
      "organizations_url": "https://api.github.com/users/CDBridger/orgs",
      "repos_url": "https://api.github.com/users/CDBridger/repos",
      "events_url": "https://api.github.com/users/CDBridger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CDBridger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-10T21:32:54Z",
    "updated_at": "2019-02-11T03:17:55Z",
    "author_association": "NONE",
    "body": "so if I'm reading this right, the reason why I am getting that exact example error from the first post when running append, is because I have columns between my two frames that have the same name but contain different types of data?\r\n\r\nEDIT: Is there an easy way to find out what the offending columns are? I tried casting every column in my two dataframes to strings (resulting in dtype beig an object) but that didn't seem to fix it. My use case is two seperate CSV's with intersecting columns as well as unique columns that I want to append by stacking them together into one csv while retaining the unique columns from each one and filling them with None/Nan/Null for the rows from the opposing csv.\r\n\r\ne.g \r\n\r\ndf1:\r\n\r\n      A B C D\r\n    0 w x y z\r\n\r\ndf2:\r\n\r\n      C D E\r\n    0 i j k\r\n\r\nmerged df:\r\n\r\n      A B C D E\r\n    0 w x y z  -\r\n    1 - - i j k\r\n\r\nExcept in my case obviously there are many more shared and unique columns (~15 shared columns, 10 unique columns each, total of 35 columns in merged csv/dataframe)"
  }
]
