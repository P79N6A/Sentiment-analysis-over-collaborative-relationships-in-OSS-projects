[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74258169",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-74258169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 74258169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0MjU4MTY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-13T14:08:24Z",
    "updated_at": "2015-02-13T14:08:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have added it to the master issue. Its actuallly pretty straightforward to do this. Note that all that is necessary is a new method, `rolling_idxmax`, which is essentially `rolling_max` but it tracks the index as well; so all that is needed is a modification to `algos.roll_max2` to also record the index. \n\nwant to do a pull-request here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/74470189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-74470189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 74470189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDcwMTg5",
    "user": {
      "login": "PH82",
      "id": 10988803,
      "node_id": "MDQ6VXNlcjEwOTg4ODAz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10988803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PH82",
      "html_url": "https://github.com/PH82",
      "followers_url": "https://api.github.com/users/PH82/followers",
      "following_url": "https://api.github.com/users/PH82/following{/other_user}",
      "gists_url": "https://api.github.com/users/PH82/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PH82/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PH82/subscriptions",
      "organizations_url": "https://api.github.com/users/PH82/orgs",
      "repos_url": "https://api.github.com/users/PH82/repos",
      "events_url": "https://api.github.com/users/PH82/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PH82/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-16T07:47:08Z",
    "updated_at": "2015-02-16T07:47:08Z",
    "author_association": "NONE",
    "body": "Yes that sounds like what I was thinking, pandas.stats.moments.rolling_rank with the same arguments as rank, allowing the user to select a competition method (min, avg....) and whether ranks should be ascending. Not sure I'm familiar enough with the pandas code yet to make any modifications my self to implement the best solution in the environment for this though. Happy to test though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/92552809",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-92552809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 92552809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNTUyODA5",
    "user": {
      "login": "cing",
      "id": 116655,
      "node_id": "MDQ6VXNlcjExNjY1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/116655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cing",
      "html_url": "https://github.com/cing",
      "followers_url": "https://api.github.com/users/cing/followers",
      "following_url": "https://api.github.com/users/cing/following{/other_user}",
      "gists_url": "https://api.github.com/users/cing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cing/subscriptions",
      "organizations_url": "https://api.github.com/users/cing/orgs",
      "repos_url": "https://api.github.com/users/cing/repos",
      "events_url": "https://api.github.com/users/cing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-14T01:20:21Z",
    "updated_at": "2015-04-14T01:20:21Z",
    "author_association": "NONE",
    "body": "I got rolling_indmax and rolling_indxmin working just as @jreback said, recording the index. No extra memory allocation or computation on top of the normal algorithm, just an additional return array from roll_max2/roll_min2 holding the indices. At the PyCon sprint @jreback suggested I return an int64 from the Cython code to store the indices, but I'm pretty sure it has to be a float64 due to possible NaN's, right?\n\nAlso, @PH82 requested rolling_idxaverage but is this really necessary?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/92564950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-92564950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 92564950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkyNTY0OTUw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-14T02:27:01Z",
    "updated_at": "2015-04-14T02:27:01Z",
    "author_association": "MEMBER",
    "body": "@cing you can use -1 to mark missing values values as long as you only use positive indices otherwise (that's pretty standard in pandas)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123345180",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-123345180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 123345180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzM0NTE4MA==",
    "user": {
      "login": "PH82",
      "id": 10988803,
      "node_id": "MDQ6VXNlcjEwOTg4ODAz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10988803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PH82",
      "html_url": "https://github.com/PH82",
      "followers_url": "https://api.github.com/users/PH82/followers",
      "following_url": "https://api.github.com/users/PH82/following{/other_user}",
      "gists_url": "https://api.github.com/users/PH82/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PH82/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PH82/subscriptions",
      "organizations_url": "https://api.github.com/users/PH82/orgs",
      "repos_url": "https://api.github.com/users/PH82/repos",
      "events_url": "https://api.github.com/users/PH82/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PH82/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-21T14:37:06Z",
    "updated_at": "2015-07-21T14:37:06Z",
    "author_association": "NONE",
    "body": "@cing, The average I mention is to determine how to rank ties. Common methods for how to rank ties are:\n\n| Values | Rank (Tie Method=Min) | Rank (Tie Method=Max) | Rank (Tie Method=Avg) |\n| --- | --- | --- | --- |\n| **3** | 4 | 4 | 4 |\n| **1** | 1 | 1 | 1 |\n| **2** | _2_ | _3_ | _2.5_ |\n| **4** | _5_ | _5_ | _5_ |\n| **2** | _2_ | _3_ | _2.5_ |\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123349977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-123349977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 123349977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzM0OTk3Nw==",
    "user": {
      "login": "cing",
      "id": 116655,
      "node_id": "MDQ6VXNlcjExNjY1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/116655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cing",
      "html_url": "https://github.com/cing",
      "followers_url": "https://api.github.com/users/cing/followers",
      "following_url": "https://api.github.com/users/cing/following{/other_user}",
      "gists_url": "https://api.github.com/users/cing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cing/subscriptions",
      "organizations_url": "https://api.github.com/users/cing/orgs",
      "repos_url": "https://api.github.com/users/cing/repos",
      "events_url": "https://api.github.com/users/cing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-21T14:44:06Z",
    "updated_at": "2015-07-21T14:44:43Z",
    "author_association": "NONE",
    "body": "I'll have to take a look at this again, some of the test cases didn't succeed for rolling_idxmax and rolling_idxmin. I didn't implement a rolling_idxavg though, is that truly useful?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123358995",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-123358995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 123358995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzM1ODk5NQ==",
    "user": {
      "login": "PH82",
      "id": 10988803,
      "node_id": "MDQ6VXNlcjEwOTg4ODAz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10988803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PH82",
      "html_url": "https://github.com/PH82",
      "followers_url": "https://api.github.com/users/PH82/followers",
      "following_url": "https://api.github.com/users/PH82/following{/other_user}",
      "gists_url": "https://api.github.com/users/PH82/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PH82/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PH82/subscriptions",
      "organizations_url": "https://api.github.com/users/PH82/orgs",
      "repos_url": "https://api.github.com/users/PH82/repos",
      "events_url": "https://api.github.com/users/PH82/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PH82/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-21T14:57:08Z",
    "updated_at": "2015-07-21T14:59:06Z",
    "author_association": "NONE",
    "body": "I would say so, for my immediate purposes no, but it is a valid tie method\nand quite likely that it would be used in the future, in fact I can think\nof scenarios where I would use it. The rolling_rank I think should\nimplement as much of the non-rolling method as possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/221858548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-221858548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 221858548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTg1ODU0OA==",
    "user": {
      "login": "Dmoonleo",
      "id": 3786004,
      "node_id": "MDQ6VXNlcjM3ODYwMDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3786004?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmoonleo",
      "html_url": "https://github.com/Dmoonleo",
      "followers_url": "https://api.github.com/users/Dmoonleo/followers",
      "following_url": "https://api.github.com/users/Dmoonleo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmoonleo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmoonleo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmoonleo/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmoonleo/orgs",
      "repos_url": "https://api.github.com/users/Dmoonleo/repos",
      "events_url": "https://api.github.com/users/Dmoonleo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmoonleo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T12:36:01Z",
    "updated_at": "2016-05-26T12:36:01Z",
    "author_association": "NONE",
    "body": "I am glad to see there is an issue ticket already, for this rolling rank.\nMay I know the status of this issue? How could I help on this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/221859680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-221859680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 221859680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTg1OTY4MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T12:41:48Z",
    "updated_at": "2016-05-26T12:41:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Dmoonleo the labels indicate the status, meaning that its open and unclaimed. you are welcome to submit a pull-request.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324432697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-324432697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 324432697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQzMjY5Nw==",
    "user": {
      "login": "mcherkassky",
      "id": 1049127,
      "node_id": "MDQ6VXNlcjEwNDkxMjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1049127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcherkassky",
      "html_url": "https://github.com/mcherkassky",
      "followers_url": "https://api.github.com/users/mcherkassky/followers",
      "following_url": "https://api.github.com/users/mcherkassky/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcherkassky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcherkassky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcherkassky/subscriptions",
      "organizations_url": "https://api.github.com/users/mcherkassky/orgs",
      "repos_url": "https://api.github.com/users/mcherkassky/repos",
      "events_url": "https://api.github.com/users/mcherkassky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcherkassky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T19:05:13Z",
    "updated_at": "2017-08-23T19:05:13Z",
    "author_association": "NONE",
    "body": "Is this going to be implemented?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324434696",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-324434696",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 324434696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQzNDY5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T19:13:25Z",
    "updated_at": "2017-08-23T19:13:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mcherkassky you're welcome take take a crack at it. Let us know if you need help getting started."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324440726",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-324440726",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 324440726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQ0MDcyNg==",
    "user": {
      "login": "cing",
      "id": 116655,
      "node_id": "MDQ6VXNlcjExNjY1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/116655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cing",
      "html_url": "https://github.com/cing",
      "followers_url": "https://api.github.com/users/cing/followers",
      "following_url": "https://api.github.com/users/cing/following{/other_user}",
      "gists_url": "https://api.github.com/users/cing/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cing/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cing/subscriptions",
      "organizations_url": "https://api.github.com/users/cing/orgs",
      "repos_url": "https://api.github.com/users/cing/repos",
      "events_url": "https://api.github.com/users/cing/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cing/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T19:38:52Z",
    "updated_at": "2017-08-23T19:38:52Z",
    "author_association": "NONE",
    "body": "I still have the code I wrote back from the good ol' days, but it's worth taking a fresh look because window.pyx has been touched a few times. As a novice, I'd just comment that the windowed rolling algorithm is a bit more complicated than the \"novice\" tag might suggest! Nothing teamwork can't crack though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/324454131",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-324454131",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 324454131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNDQ1NDEzMQ==",
    "user": {
      "login": "mcherkassky",
      "id": 1049127,
      "node_id": "MDQ6VXNlcjEwNDkxMjc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1049127?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcherkassky",
      "html_url": "https://github.com/mcherkassky",
      "followers_url": "https://api.github.com/users/mcherkassky/followers",
      "following_url": "https://api.github.com/users/mcherkassky/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcherkassky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcherkassky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcherkassky/subscriptions",
      "organizations_url": "https://api.github.com/users/mcherkassky/orgs",
      "repos_url": "https://api.github.com/users/mcherkassky/repos",
      "events_url": "https://api.github.com/users/mcherkassky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcherkassky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-23T20:33:15Z",
    "updated_at": "2017-08-23T20:53:41Z",
    "author_association": "NONE",
    "body": "does anyone have an algorithm reference to implement the rolling rank? it doesn't seem trivial\r\n\r\ni'm happy to give it a stab but i don't really follow the discussion above about rolling_idxmax/rolling_idxmin and how that helps get the rolling rank"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350053134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-350053134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 350053134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDA1MzEzNA==",
    "user": {
      "login": "sluo1989",
      "id": 9618051,
      "node_id": "MDQ6VXNlcjk2MTgwNTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9618051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sluo1989",
      "html_url": "https://github.com/sluo1989",
      "followers_url": "https://api.github.com/users/sluo1989/followers",
      "following_url": "https://api.github.com/users/sluo1989/following{/other_user}",
      "gists_url": "https://api.github.com/users/sluo1989/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sluo1989/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sluo1989/subscriptions",
      "organizations_url": "https://api.github.com/users/sluo1989/orgs",
      "repos_url": "https://api.github.com/users/sluo1989/repos",
      "events_url": "https://api.github.com/users/sluo1989/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sluo1989/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T18:26:11Z",
    "updated_at": "2017-12-07T18:26:11Z",
    "author_association": "NONE",
    "body": "Is there anyone still working on the efficient implementation of rolling rank? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350057189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-350057189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 350057189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDA1NzE4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T18:41:49Z",
    "updated_at": "2017-12-07T18:41:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "no would love to have this!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446184269",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-446184269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 446184269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjE4NDI2OQ==",
    "user": {
      "login": "VanyTang",
      "id": 11002061,
      "node_id": "MDQ6VXNlcjExMDAyMDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11002061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/VanyTang",
      "html_url": "https://github.com/VanyTang",
      "followers_url": "https://api.github.com/users/VanyTang/followers",
      "following_url": "https://api.github.com/users/VanyTang/following{/other_user}",
      "gists_url": "https://api.github.com/users/VanyTang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/VanyTang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/VanyTang/subscriptions",
      "organizations_url": "https://api.github.com/users/VanyTang/orgs",
      "repos_url": "https://api.github.com/users/VanyTang/repos",
      "events_url": "https://api.github.com/users/VanyTang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/VanyTang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T12:23:53Z",
    "updated_at": "2018-12-11T12:31:12Z",
    "author_association": "NONE",
    "body": "I propose an algorithm to calculate rolling_rank efficiently.\r\n\r\nSuppose window size is fixed, and rank is defined when the window number is sorted in monotone increasing.\r\n\r\nWe can use a balanced tree to store window data, as it only takes O(logM) for insert, delete and finding operations, where M is the window size. \r\n\r\nIn the procedure of insert, delete operation, we should maintain a field called size of each node representing the count of nodes of this sub-tree, which will be used in calculating rank. If a balanced tree maintain the size field initially (such as Size-Balanced Tree or Weight Balanced Tree), it would be better.\r\n\r\nDue to numbers are organized orderly in a balanced tree, when we want to get the rank of a number in this window, we can just find the corresponding node starting from the tree root, and sum the size of all the left child tree through the finding path. The sum is the rank. This operation is also O(logM).\r\n\r\nFrom the above, when calculating a rolling rank in a length N sequence where window size is M, the total time complexity is O(NlogM). It's much better than that of the naive algorithm (sort and get the rank in each window) O(NMlogM). This algorithm could be M times fast than the original one.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456994497",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9481#issuecomment-456994497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9481",
    "id": 456994497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Njk5NDQ5Nw==",
    "user": {
      "login": "bmpalatiello",
      "id": 16367633,
      "node_id": "MDQ6VXNlcjE2MzY3NjMz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16367633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmpalatiello",
      "html_url": "https://github.com/bmpalatiello",
      "followers_url": "https://api.github.com/users/bmpalatiello/followers",
      "following_url": "https://api.github.com/users/bmpalatiello/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmpalatiello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmpalatiello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmpalatiello/subscriptions",
      "organizations_url": "https://api.github.com/users/bmpalatiello/orgs",
      "repos_url": "https://api.github.com/users/bmpalatiello/repos",
      "events_url": "https://api.github.com/users/bmpalatiello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmpalatiello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-23T22:39:18Z",
    "updated_at": "2019-01-23T22:39:18Z",
    "author_association": "NONE",
    "body": "If there is still interest, my workaround for this is:\r\n```\r\nimport bottleneck as bk\r\n\r\nnorm_rank = bk.move_rank(x.values, n, axis=0)\r\ndenorm = (((norm_rank + 1) / 2) * (n - 1)) + 1\r\ndescend = (n - denorm) + 1\r\n```\r\nThe `bk.move_rank` function returns a normalized rank between -1 and 1. So taking the normalized rank and reverse engineering it to return the actual rank. Then essentially making it descending=True. Obviously the only potential downside is it only provides average ranking for ties. \r\n\r\nRunning it on my small laptop:\r\n```\r\nwindow = 240\r\nx = pd.DataFrame(np.random.randn(100000,4), columns=list('ABCD'), index=pd.date_range('1/1/2000', periods=100000, freq='1H'))\r\n\r\n# Original rollingRankBottleneck above\r\n6.04 s ± 302 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\n# This version\r\n411 ms ± 24.5 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n```\r\n\r\n"
  }
]
