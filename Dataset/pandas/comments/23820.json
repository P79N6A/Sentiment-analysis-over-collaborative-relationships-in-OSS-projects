[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440490578",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23820#issuecomment-440490578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23820",
    "id": 440490578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDQ5MDU3OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T01:09:08Z",
    "updated_at": "2018-11-21T01:09:08Z",
    "author_association": "MEMBER",
    "body": "This is already documented in the API in development:\r\n\r\nhttp://pandas-docs.github.io/pandas-docs-travis/generated/pandas.DataFrame.to_html.html?highlight=to_html\r\n\r\nI'm not clear by the issue if you are asking whether it should be documented or deprecated altogether, though I would be -1 on deprecation (clarification would be helpful)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440840746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23820#issuecomment-440840746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23820",
    "id": 440840746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg0MDc0Ng==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T23:01:25Z",
    "updated_at": "2018-11-21T23:01:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "i'm not au fait with the deprecation process, hence opened an issue to start a discussion.\r\n\r\ni assume that if deprecation is agreed then a deprecation warning is issued in the next release and the change is not made for a couple of releases. I hadn't thought about just removing it from the documentation... that could be a good start.\r\n\r\npersonally, I don't think it's necessary from a user perspective (i.e from df.to_html()) and hence removing it would simplify the API.\r\n\r\nfrom a code perspective, i'm looking to make `HTMLFormatter` a subclass of `DataFrameFormatter` instead of passing the `DataFrameFormatter` object to the `HTMLFormatter` on instantiation.\r\n\r\nThis could naturally evolve in time with enhancements and feature requests into separate subclasses of `HTMLFormatter`.. say `NotebookFormatter` and `ToHTMLFormatter`. Having the notebook parameter in to_html() would not prevent this, just make it less straightforward."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440905168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23820#issuecomment-440905168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23820",
    "id": 440905168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDkwNTE2OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T03:53:09Z",
    "updated_at": "2018-11-22T03:53:09Z",
    "author_association": "MEMBER",
    "body": "I'll admit I'm not terribly familiar with this parameter nor its usage. If you have a code cleanup in mind though I suppose a PR is the best way to go about it unless one of the other core devs objects to the possibility of deprecation here.\r\n\r\nTo answer your question about deprecation, yes we typically issue a `FutureWarning` for deprecated parameters and do the actual removal a few releases later. You can find other examples of these in closed PRs using the Deprecate label"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479702286",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23820#issuecomment-479702286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23820",
    "id": 479702286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTcwMjI4Ng==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-04T00:11:40Z",
    "updated_at": "2019-04-04T00:11:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If you have a code cleanup in mind though I suppose a PR is the best way to go about it unless one of the other core devs objects to the possibility of deprecation here.\r\n\r\ni'll aim to put a draft PR together for the deprecation shortly.\r\n\r\nI'd like to have a base class for to_html that is shared with NotebookFormatter rather than the current situation where HTMLFormatter is the base class of NotebookFormatter. \r\n\r\nHaving notebook parameter in to_html() method effectively means that all the functionality of to_html has to be available with notebook=True option and limits divergence in functionality."
  }
]
