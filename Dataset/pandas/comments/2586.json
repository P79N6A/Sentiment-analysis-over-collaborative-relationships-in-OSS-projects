[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11644816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-11644816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 11644816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjQ0ODE2",
    "user": {
      "login": "qwhelan",
      "id": 440095,
      "node_id": "MDQ6VXNlcjQ0MDA5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/440095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwhelan",
      "html_url": "https://github.com/qwhelan",
      "followers_url": "https://api.github.com/users/qwhelan/followers",
      "following_url": "https://api.github.com/users/qwhelan/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwhelan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwhelan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwhelan/subscriptions",
      "organizations_url": "https://api.github.com/users/qwhelan/orgs",
      "repos_url": "https://api.github.com/users/qwhelan/repos",
      "events_url": "https://api.github.com/users/qwhelan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwhelan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-23T10:24:38Z",
    "updated_at": "2012-12-23T10:24:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Try using the `dayfirst` parameter (new in v0.10.0):\n\n``` python\nIn [4]: read_csv('test.csv', index_col=0, parse_dates=True, dayfirst=True)\nOut[4]: \n                     b\na                     \n2003-03-27 14:55:00  1\n2003-08-03 15:20:00  2\n```\n\nIf you want to specify the datetime format you can use the `date_parser` parameter:\n\n``` python\nIn [5]: read_csv('test.csv', index_col=0, date_parser=lambda x: datetime.strptime(x, '%d.%m.%Y %H:%M:%S.%f'))\nOut[5]: \n                     b\na                     \n2003-03-27 14:55:00  1\n2003-08-03 15:20:00  2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11647381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-11647381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 11647381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjQ3Mzgx",
    "user": {
      "login": "John-Colvin",
      "id": 1867189,
      "node_id": "MDQ6VXNlcjE4NjcxODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1867189?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/John-Colvin",
      "html_url": "https://github.com/John-Colvin",
      "followers_url": "https://api.github.com/users/John-Colvin/followers",
      "following_url": "https://api.github.com/users/John-Colvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/John-Colvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/John-Colvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/John-Colvin/subscriptions",
      "organizations_url": "https://api.github.com/users/John-Colvin/orgs",
      "repos_url": "https://api.github.com/users/John-Colvin/repos",
      "events_url": "https://api.github.com/users/John-Colvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/John-Colvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-23T16:03:05Z",
    "updated_at": "2012-12-23T16:03:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry, my bad for not looking at the API reference closely enough to spot the dayfirst flag.\n\nthe date_parser parameter is what I was using to test using the datetime constructor. In my experience strptime is very slow compared to using the constructor and string slicing. Having some default formats to choose from that then call an optimised parser would seem a good idea.\n\nIt would speed up parsing for those formats while also allowing the user to be strict with the format, without them having to write their own, potentially slow, parsing function.\n\nIt seems worthwhile, what with the recent efforts to make file parsing much faster the date parsing really dominates the runtime of read_csv\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11656189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-11656189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 11656189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjU2MTg5",
    "user": {
      "login": "qwhelan",
      "id": 440095,
      "node_id": "MDQ6VXNlcjQ0MDA5NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/440095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/qwhelan",
      "html_url": "https://github.com/qwhelan",
      "followers_url": "https://api.github.com/users/qwhelan/followers",
      "following_url": "https://api.github.com/users/qwhelan/following{/other_user}",
      "gists_url": "https://api.github.com/users/qwhelan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/qwhelan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/qwhelan/subscriptions",
      "organizations_url": "https://api.github.com/users/qwhelan/orgs",
      "repos_url": "https://api.github.com/users/qwhelan/repos",
      "events_url": "https://api.github.com/users/qwhelan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/qwhelan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T08:33:35Z",
    "updated_at": "2012-12-24T08:33:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here are the benchmarks I'm getting (50k of the format `%d/%M/%Y`):\n\n``` python\nIn [68]: %timeit read_csv('dates.csv', parse_dates=[0], dayfirst=True)\n1 loops, best of 3: 4.6 s per loop\n\nIn [69]: %timeit read_csv('dates.csv', parse_dates=[0], date_parser=lambda x: datetime.strptime(x, '%d/%M/%Y'), dayfirst=True)\n1 loops, best of 3: 1.18 s per loop\n```\n\nAnd for passing directly to the constructor:\n\n``` python\nIn [70]: %timeit data = read_csv('dates.csv')\n10 loops, best of 3: 21.1 ms per loop\n\nIn [71]: %time data.Date = map(lambda x, y, z: datetime(x, y, z), data.Date.map(lambda a: int(a[4:])), data.Date.map(lambda a: int(a[2:3])), data.Date.map(lambda a: int(a[:1])))\nCPU times: user 0.35 s, sys: 0.00 s, total: 0.35 s\nWall time: 0.35 s\n```\n\nSo there's a ~3x speedup by specifying the format, and another ~3x from manually passing to the constructor.\n\nI don't think the user should be forced to pass a date format to get faster performance, especially when there might be multiple columns with different formats. We're currently assuming that a date column is not of a homogeneous format (by calling `parse()` independently on every value). All those independent calls probably means we're seeing a lot of object creation/destruction (ie, compiled regexes that are used once).\n\nIf we have a homogeneity flag, we could call `parse()` on the first row, get the pattern it settled on (may not be currently available from `parse()`), and then construct an array of datetimes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16008363",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-16008363",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 16008363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDA4MzYz",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-07T02:49:17Z",
    "updated_at": "2013-04-07T02:49:17Z",
    "author_association": "MEMBER",
    "body": "I actually added a `format` argument to `to_datetime`-- it might be worth adding to `read_csv`, maybe. Alternately you can parse without using `parse_dates` and use `to_datetime` yourself and it should be reasonably fast.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16031308",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-16031308",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 16031308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDMxMzA4",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-08T03:48:55Z",
    "updated_at": "2013-04-08T03:48:55Z",
    "author_association": "NONE",
    "body": "A 'format' argument would be a great feature in read_csv(). Would save you from writhing the 'fast' parser lambda function with strptime() while also handling the special non-parseable case where you want to just fill parsing errors with a np.nan or NaT. I'm assuming this would use datetime's format strings.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36342625",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-36342625",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 36342625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzQyNjI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-28T11:39:58Z",
    "updated_at": "2014-02-28T11:39:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "the new infer_datetime_format flag solves this problem (though leaving open because ideally you specify the format directly)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38272431",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-38272431",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 38272431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjcyNDMx",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-21T12:45:16Z",
    "updated_at": "2014-03-21T12:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Small point, but just to give an example of a similar use case that should be handled - I have a csv in which some columns are dates and some are datetimes. I need to be able to provide a different format for each column that I want to parse (as per the OP's suggested specification).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38272599",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-38272599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 38272599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjcyNTk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-21T12:47:45Z",
    "updated_at": "2014-03-21T12:47:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@maxgrenderjones interested in doing a PR for this?\n\nas an aside, try `infer_datetime_format` kw (its in 0.13.1), should be able to figure out most common formats.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/432899744",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-432899744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 432899744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjg5OTc0NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T03:14:04Z",
    "updated_at": "2018-10-25T03:14:04Z",
    "author_association": "MEMBER",
    "body": "@mroeschke has this been addressed?  Closeable?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433155409",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-433155409",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 433155409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzE1NTQwOQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T18:21:42Z",
    "updated_at": "2018-10-25T18:21:42Z",
    "author_association": "MEMBER",
    "body": "Doesn't appear so. `read_csv` has a `date_parser` argument that accepts a generic parsing function but I think the ask is for a `format` argument like `pd.to_datetime(..., format='...')`\r\n\r\nBut given that you can also just pass `pd.read_csv(..., date_parser=lambda x: pd.to_datetime(x, format='...'))` as a suitable alternative, I am not sure how on board I am with added a separate `format` argument to `read_csv`. I'd be more clean, but it would grow the already large number of kwargs. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433369715",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-433369715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 433369715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzM2OTcxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T10:54:11Z",
    "updated_at": "2018-10-26T10:54:11Z",
    "author_association": "MEMBER",
    "body": "Yep, agreed that given the huge amount of keywords, we should maybe not add yet another one (although I would personally find a `format` keyword more useful than the current `date_parser`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433437822",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-433437822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 433437822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQzNzgyMg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T15:00:05Z",
    "updated_at": "2018-10-26T15:00:05Z",
    "author_association": "MEMBER",
    "body": "I still think is useful. Having to provide a lambda in the current state is rather wonky from an end user perspective and an explicit format keyword could probably enable much better performance on larger datasets"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440487875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-440487875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 440487875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDQ4Nzg3NQ==",
    "user": {
      "login": "alexbk66",
      "id": 2533315,
      "node_id": "MDQ6VXNlcjI1MzMzMTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2533315?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexbk66",
      "html_url": "https://github.com/alexbk66",
      "followers_url": "https://api.github.com/users/alexbk66/followers",
      "following_url": "https://api.github.com/users/alexbk66/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexbk66/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexbk66/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexbk66/subscriptions",
      "organizations_url": "https://api.github.com/users/alexbk66/orgs",
      "repos_url": "https://api.github.com/users/alexbk66/repos",
      "events_url": "https://api.github.com/users/alexbk66/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexbk66/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T00:57:23Z",
    "updated_at": "2018-11-21T00:57:23Z",
    "author_association": "NONE",
    "body": "Just had this problem in my code - \r\n```\r\ndayfirst = True,\r\ninfer_datetime_format = True\r\n```\r\nstill gets \"2010-10-01\" for \"10/01/2010\""
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440589570",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-440589570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 440589570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDU4OTU3MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T09:09:36Z",
    "updated_at": "2018-11-21T09:09:36Z",
    "author_association": "MEMBER",
    "body": "@alexbk66 that seems like a bug (maybe `dayfirst` is not passed through correctly somewhere), as this combination works fine with `to_datetime`:\r\n\r\n```\r\nIn [81]: pd.to_datetime(\"10/01/2010\", infer_datetime_format=True)                                                                                                                                                   \r\nOut[81]: Timestamp('2010-10-01 00:00:00')\r\n\r\nIn [82]: pd.to_datetime(\"10/01/2010\", infer_datetime_format=True, dayfirst=True)                                                                                                                                    \r\nOut[82]: Timestamp('2010-01-10 00:00:00')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440762638",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-440762638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 440762638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc2MjYzOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T18:14:22Z",
    "updated_at": "2018-11-21T18:14:40Z",
    "author_association": "MEMBER",
    "body": "What do you guys think about expanding `date_parser` to be the following:\r\n\r\n* callable: custom date parser (existing)\r\n* kwargs: parameters to pass to default date converter (proposed)\r\n\r\nThis would address the need for greater customized keyword arguments without bloating or requiring wonky lambda arguments.  Also, if we allow `date_parser` to be `kwargs`, we could then deprecate / remove `dayfirst` and `infer_datetime_format` from the signature and require them to be passed as a `dict` via `date_parser` (i.e. less API bloat)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440797826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-440797826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 440797826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc5NzgyNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T20:22:31Z",
    "updated_at": "2018-11-21T20:22:31Z",
    "author_association": "MEMBER",
    "body": "That sounds like a nice idea to me! \r\nIt's of course not yet that user friendly as a `date_format` keyword, but I would say better than a lambda function that calls to_datetime. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440799209",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-440799209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 440799209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDc5OTIwOQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T20:28:16Z",
    "updated_at": "2018-11-21T20:28:16Z",
    "author_association": "MEMBER",
    "body": "> It's of course not yet that user friendly as a date_format keyword, but I would say better than a lambda function that calls to_datetime.\r\n\r\nWell, who says that we couldn't accept a string (i.e. date format) for `date_parser` ? 😉   I think that could be a good enhancement after the refactor."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440804699",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-440804699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 440804699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgwNDY5OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T20:51:28Z",
    "updated_at": "2018-11-21T20:51:28Z",
    "author_association": "MEMBER",
    "body": "Is the only downside to having a dedicated `format` argument that we already have enough keywords? I still think that as a dedicated keyword is best here, especially given we already have that in `to_datetime`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440820352",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2586#issuecomment-440820352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2586",
    "id": 440820352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDgyMDM1Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T21:45:56Z",
    "updated_at": "2018-11-21T21:48:10Z",
    "author_association": "MEMBER",
    "body": "API bloat isn't the only reason.  Another benefit of this consolidation is that the `read_csv` API becomes agnostic to the signature of `to_datetime`.  We could have 20 keyword arguments for `to_datetime`, but we wouldn't have to change the signature of `read_csv` to accommodate.  That's what we're running into now.  Adding keyword arguments as has been suggested is only a band-aid IMO.\r\n\r\nI also might add that adapting `date_parser` to perform different functions based on `type` would be consistent with other keywords such as `usecols`, `skiprows`, and `parse_dates`."
  }
]
