[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402583272",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21737#issuecomment-402583272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21737",
    "id": 402583272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU4MzI3Mg==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T01:46:16Z",
    "updated_at": "2018-07-05T01:46:16Z",
    "author_association": "MEMBER",
    "body": "Thanks, I can confirm that this issue is occurring on master.\r\n\r\nA simpler demonstration of the bug:\r\n```python\r\nIn [2]: pd.__version__\r\nOut[2]: '0.24.0.dev0+219.g1070976'\r\n\r\nIn [3]: dti = pd.DatetimeIndex(['2017', '2017'], tz='US/Eastern')\r\n\r\nIn [4]: dti\r\nOut[4]: DatetimeIndex(['2017-01-01 00:00:00-05:00', '2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [5]: dti.unique()\r\nOut[5]: DatetimeIndex(['2017-01-01 05:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n```\r\n\r\nSurprisingly, we actually have a test for this, but it doesn't look to be working as intended:\r\nhttps://github.com/pandas-dev/pandas/blob/10709762e95be2b98d68b95db93a287ee5af74d4/pandas/tests/indexes/datetimes/test_datetime.py#L378-L385\r\n\r\nManually inspecting the test shows that the comparing the indexes themselves returns `True`, but comparing the index values individuals returns `False`:\r\n```python\r\nIn [6]: result = dti.unique()\r\n\r\nIn [7]: result\r\nOut[7]: DatetimeIndex(['2017-01-01 05:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [8]: expected = pd.DatetimeIndex(['2017'], tz='US/Eastern')\r\n\r\nIn [9]: expected\r\nOut[9]: DatetimeIndex(['2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [10]: result == expected\r\nOut[10]: array([ True])\r\n\r\nIn [11]: result[0] == expected[0]\r\nOut[11]: False\r\n```\r\nNotice that `result` and `expected` have the same `.values`:\r\n```python\r\nIn [12]: result.values\r\nOut[12]: array(['2017-01-01T05:00:00.000000000'], dtype='datetime64[ns]')\r\n\r\nIn [13]: expected.values\r\nOut[13]: array(['2017-01-01T05:00:00.000000000'], dtype='datetime64[ns]')\r\n```\r\nThis has something to do with what `DatetimeIndex.unique` is doing under the hood, since attempting to reconstruct this from the `Timestamp` objects in question fails to reproduce the comparisons above:\r\n```python\r\nIn [14]: result2 = pd.DatetimeIndex([result[0]])\r\n\r\nIn [15]: result2\r\nOut[15]: DatetimeIndex(['2017-01-01 05:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [16]: expected2 = pd.DatetimeIndex([expected[0]])\r\n\r\nIn [17]: expected2\r\nOut[17]: DatetimeIndex(['2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [18]: result2 == expected2\r\nOut[18]: array([False])\r\n\r\nIn [19]: result2.values\r\nOut[19]: array(['2017-01-01T10:00:00.000000000'], dtype='datetime64[ns]')\r\n\r\nIn [20]: expected2.values\r\nOut[20]: array(['2017-01-01T05:00:00.000000000'], dtype='datetime64[ns]')\r\n```\r\n\r\nFinally, note that `pd.unique` appears to be working correctly:\r\n```python\r\nIn [21]: dti\r\nOut[21]: DatetimeIndex(['2017-01-01 00:00:00-05:00', '2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [22]: pd.unique(dti)\r\nOut[22]: DatetimeIndex(['2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403006257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21737#issuecomment-403006257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21737",
    "id": 403006257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzAwNjI1Nw==",
    "user": {
      "login": "Setur-sjd",
      "id": 38906632,
      "node_id": "MDQ6VXNlcjM4OTA2NjMy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/38906632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Setur-sjd",
      "html_url": "https://github.com/Setur-sjd",
      "followers_url": "https://api.github.com/users/Setur-sjd/followers",
      "following_url": "https://api.github.com/users/Setur-sjd/following{/other_user}",
      "gists_url": "https://api.github.com/users/Setur-sjd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Setur-sjd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Setur-sjd/subscriptions",
      "organizations_url": "https://api.github.com/users/Setur-sjd/orgs",
      "repos_url": "https://api.github.com/users/Setur-sjd/repos",
      "events_url": "https://api.github.com/users/Setur-sjd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Setur-sjd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T11:22:14Z",
    "updated_at": "2018-07-06T11:43:18Z",
    "author_association": "NONE",
    "body": "I faced the same bug yesterday.\r\nIt took me very long to find the bug in the big code and funnily the bug does not occur in pandas 0.22.0.\r\nI have pandas 0.23.0\r\nAnd However something very strange happens that I reproduced and copy here (Sypder Ipython):\r\n\r\n```\r\ndf.head(2)\r\nOut[17]: \r\ntimestamp\r\n2018-01-01 00:00:00.509000+01:00    134240\r\n2018-01-01 00:00:02.509000+01:00    134350\r\nName: Whatever, dtype: int64\r\n\r\ndf.tail(2)\r\nOut[18]: \r\ntimestamp\r\n2018-04-17 18:37:08.973000+02:00    121490\r\n2018-04-17 18:37:10.973000+02:00    121510\r\nName: Whatever, dtype: int64\r\n\r\nall_days = df.index.normalize().unique()\r\n\r\nall_days[0]\r\nOut[20]: Timestamp('2017-12-31 23:00:00+0100', tz='Europe/Berlin')\r\n\r\nall_days\r\nOut[21]: \r\nDatetimeIndex(['2018-01-01 00:00:00+01:00', '2018-01-02 00:00:00+01:00',\r\n               '2018-01-03 00:00:00+01:00', '2018-01-04 00:00:00+01:00',\r\n               '2018-01-05 00:00:00+01:00', '2018-01-06 00:00:00+01:00',\r\n               '2018-01-07 00:00:00+01:00', '2018-01-08 00:00:00+01:00',\r\n               '2018-01-09 00:00:00+01:00', '2018-01-10 00:00:00+01:00',\r\n               ...\r\n               '2018-04-08 00:00:00+02:00', '2018-04-09 00:00:00+02:00',\r\n               '2018-04-10 00:00:00+02:00', '2018-04-11 00:00:00+02:00',\r\n               '2018-04-12 00:00:00+02:00', '2018-04-13 00:00:00+02:00',\r\n               '2018-04-14 00:00:00+02:00', '2018-04-15 00:00:00+02:00',\r\n               '2018-04-16 00:00:00+02:00', '2018-04-17 00:00:00+02:00'],\r\n              dtype='datetime64[ns, Europe/Berlin]', name='timestamp', length=107, freq=None)\r\n```\r\n\r\nHowever, to reproduce it in Jupyter Notebook (just being curious about it), the  bug is shown even different!!\r\n\r\n```\r\nall_days = df.index.normalize().unique()\r\n```\r\nAnd that is \r\n```\r\nall_day[0]\r\n```\r\n:\r\n```\r\nTimestamp('2017-12-31 00:00:00')\r\n``` \r\n@danielwlogan @jschendel "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403091446",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21737#issuecomment-403091446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21737",
    "id": 403091446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzA5MTQ0Ng==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T17:00:44Z",
    "updated_at": "2018-07-06T17:00:44Z",
    "author_association": "MEMBER",
    "body": "So there's some funniness when passing a `DatetimeIndex` into `DatetimeIndex._simple_new`. This is essentially what happens:\r\n\r\n```\r\n# .unique() takes uniques on UTC dates\r\nIn [13]: pd.DatetimeIndex._simple_new(pd.DatetimeIndex(['2017-01-01 05:00:00']), tz='US/Eastern')\r\nOut[13]: DatetimeIndex(['2017-01-01 05:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [14]: pd.DatetimeIndex._simple_new(pd.DatetimeIndex(['2017-01-01 05:00:00']).values, tz='US/Eastern')\r\nOut[14]: DatetimeIndex(['2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n```\r\n\r\nSo there might be a bug that lies deeper when setting a `DatetimeIndex` as opposed to a numpy array on the Block.\r\n\r\nBut adding the `.values` makes this correct, as `In [11]:` in @jschendel's example then returns `True`\r\n\r\n\r\n```\r\n(pandas-dev) matthewroeschke:pandas-mroeschke matthewroeschke$ git diff\r\ndiff --git a/pandas/core/indexes/datetimes.py b/pandas/core/indexes/datetimes.py\r\nindex 966eff582..42a2e531d 100644\r\n--- a/pandas/core/indexes/datetimes.py\r\n+++ b/pandas/core/indexes/datetimes.py\r\n@@ -1072,8 +1072,7 @@ class DatetimeIndex(DatetimeArrayMixin, DatelikeOps, TimelikeOps,\r\n         else:\r\n             naive = self\r\n         result = super(DatetimeIndex, naive).unique(level=level)\r\n-        return self._simple_new(result, name=self.name, tz=self.tz,\r\n-                                freq=self.freq)\r\n+        return self._simple_new(result.values, name=self.name, tz=self.tz, freq=self.freq)\r\n\r\n     def union(self, other):\r\n         \"\"\"\r\n```\r\n```\r\n# With .values patch\r\n\r\nIn [1]: dti = pd.DatetimeIndex(['2017', '2017'], tz='US/Eastern')\r\n\r\nIn [2]: result = dti.unique()\r\n\r\nIn [3]: expected = pd.DatetimeIndex(['2017'], tz='US/Eastern')\r\n\r\nIn [5]: result\r\nOut[5]: DatetimeIndex(['2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [6]: expected\r\nOut[6]: DatetimeIndex(['2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [7]: result == expected\r\nOut[7]: array([ True])\r\n\r\nIn [8]: result[0] == expected[0]\r\nOut[8]: True\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409100167",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21737#issuecomment-409100167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21737",
    "id": 409100167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTEwMDE2Nw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-31T05:33:09Z",
    "updated_at": "2018-07-31T05:33:09Z",
    "author_association": "MEMBER",
    "body": "So this appears fixed on master: (maybe due to #20912)\r\n\r\n```\r\nIn [1]: dti = pd.DatetimeIndex(['2017', '2017'], tz='US/Eastern')\r\n\r\nIn [2]: dti.unique()\r\nOut[2]: DatetimeIndex(['2017-01-01 00:00:00-05:00'], dtype='datetime64[ns, US/Eastern]', freq=None)\r\n\r\nIn [3]: result = dti.unique()\r\n\r\nIn [4]:  expected = pd.DatetimeIndex(['2017'], tz='US/Eastern')\r\n\r\nIn [5]: result == expected\r\nOut[5]: array([ True])\r\n\r\nIn [6]: result[0] == expected[0]\r\nOut[6]: True\r\n\r\nIn [7]: pd.__version__\r\nOut[7]: '0.24.0.dev0+384.gc272c52a5'\r\n```\r\n\r\nAlthough we already have a test for `unique` it would be great to additionally test that the underlying timestamps are equal as noted by @jschendel "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410934330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21737#issuecomment-410934330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21737",
    "id": 410934330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDkzNDMzMA==",
    "user": {
      "login": "danielwlogan",
      "id": 16157159,
      "node_id": "MDQ6VXNlcjE2MTU3MTU5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16157159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielwlogan",
      "html_url": "https://github.com/danielwlogan",
      "followers_url": "https://api.github.com/users/danielwlogan/followers",
      "following_url": "https://api.github.com/users/danielwlogan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielwlogan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielwlogan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielwlogan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielwlogan/orgs",
      "repos_url": "https://api.github.com/users/danielwlogan/repos",
      "events_url": "https://api.github.com/users/danielwlogan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielwlogan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-07T05:04:42Z",
    "updated_at": "2018-08-07T05:04:42Z",
    "author_association": "NONE",
    "body": "Thanks everyone for your work tracking this down and getting a fix in place quickly."
  }
]
