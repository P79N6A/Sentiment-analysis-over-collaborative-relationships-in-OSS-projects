[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27098065",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5314#issuecomment-27098065",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5314",
    "id": 27098065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDk4MDY1",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T14:45:19Z",
    "updated_at": "2013-10-25T14:45:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another thing that would be good to add to Categorical is the ability to categorize an exogenous dataset using already defined categories (namely, I categegorized on some dataset and want to categorize another set based on those categories).  There may be a way to do this already, but it wasn't obvious from looking at the Categorical code and the categories were less than useful as strings.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27104588",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5314#issuecomment-27104588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5314",
    "id": 27104588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA0NTg4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T16:04:20Z",
    "updated_at": "2013-10-25T16:04:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rockg do you mean with a quantitative or categorical/ordinal variable?  If you mean quantitative then, yes, this will be possible. I'm making a Bin class that will have left and right bounds + left/right inclusiveness to wrap this up.  Then it would just be a tweak of `pandas/tools/tile.py:_bins_to_cuts` to allow something like: `cut(my_variable, bins=[list of bins])`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27105384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5314#issuecomment-27105384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5314",
    "id": 27105384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA1Mzg0",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T16:14:33Z",
    "updated_at": "2013-10-25T16:14:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner Yes, with the levels variable in Categorical (which seems like your making more useful).  Your example is precisely what I'm thinking of (along with perhaps another argument to have the first and last bins to go -Inf and Inf, respectively, if that behavior is wanted).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27106057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5314#issuecomment-27106057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5314",
    "id": 27106057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA2MDU3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T16:23:33Z",
    "updated_at": "2013-10-25T16:23:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "that said, because of how the internals work, at least for the moment, it will error out if you pass a set of levels and not all values are contained within them.\n\nIn other words, this will work:\n\n``` python\ncatquan = cut([1, 2, 3, 4, 5], 3)\ncatquan2 = cut([3, 4], bins=catquan.levels)\nassert catquan.levels.equals(catquan2.levels) # True\n```\n\nThis won't work:\n\n``` python\ncatquan = cut([1, 3, 4], 2)\ncatquan2 = cut([1, 2, 3, 4, 5], bins=catquan.levels)\nTypeError: Found value(s) not contained within passed level set.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27106462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5314#issuecomment-27106462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5314",
    "id": 27106462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA2NDYy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T16:28:56Z",
    "updated_at": "2013-10-25T16:28:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess it could be nan instead though... And eventually would handle inf \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27106617",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5314#issuecomment-27106617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5314",
    "id": 27106617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA2NjE3",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T16:31:23Z",
    "updated_at": "2013-10-25T16:31:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another option would be to have a modify levels method that would return a new set of levels with -Inf and Inf which could be passed in as bins.  I guess it's a question of whether cut/qcut should handle it or not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27107117",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5314#issuecomment-27107117",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5314",
    "id": 27107117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTA3MTE3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T16:37:48Z",
    "updated_at": "2013-10-25T16:37:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep, there's a bunch of ways this could work. Let me get something working for this and then we can loop back to the issue of open intervals.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27125580",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5314#issuecomment-27125580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5314",
    "id": 27125580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTI1NTgw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T21:03:26Z",
    "updated_at": "2013-10-25T21:03:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure what I was thinking in my earlier comment - cut leaves as Nan if it's not in range of the bins. \n"
  }
]
