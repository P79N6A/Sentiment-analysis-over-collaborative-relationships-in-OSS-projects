[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3029350",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-3029350",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 3029350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjkzNTA=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T08:06:02Z",
    "updated_at": "2011-12-06T08:06:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMO it would make sense only if one would export to Excel worksheets, in such a case it would be nice to have.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3030688",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-3030688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 3030688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzA2ODg=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T10:40:42Z",
    "updated_at": "2011-12-06T10:40:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "It can also be used to set default _path_ in `DataFrame.save()`, e.g path = DataFrame.name\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3037068",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-3037068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 3037068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzcwNjg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T19:11:40Z",
    "updated_at": "2011-12-06T19:11:40Z",
    "author_association": "MEMBER",
    "body": "Could also be integrated into `DataFrame.to_html` and stuff like that also. I don't think it's too hard to add-- just will be a bit of a slog to make sure the name is passed on in the right places (it was quite a bit of hacking to add `name` to Series). Shoot for January or February sometime\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9451846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-9451846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 9451846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0NTE4NDY=",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-15T16:38:43Z",
    "updated_at": "2012-10-15T16:38:43Z",
    "author_association": "NONE",
    "body": "I'd upvote this one.  I'm using it to auto-title plots and think it would certainly be a nice feature.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10949838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-10949838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 10949838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTQ5ODM4",
    "user": {
      "login": "pmacaodh",
      "id": 2162045,
      "node_id": "MDQ6VXNlcjIxNjIwNDU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2162045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pmacaodh",
      "html_url": "https://github.com/pmacaodh",
      "followers_url": "https://api.github.com/users/pmacaodh/followers",
      "following_url": "https://api.github.com/users/pmacaodh/following{/other_user}",
      "gists_url": "https://api.github.com/users/pmacaodh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pmacaodh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pmacaodh/subscriptions",
      "organizations_url": "https://api.github.com/users/pmacaodh/orgs",
      "repos_url": "https://api.github.com/users/pmacaodh/repos",
      "events_url": "https://api.github.com/users/pmacaodh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pmacaodh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-03T11:42:48Z",
    "updated_at": "2012-12-03T11:42:48Z",
    "author_association": "NONE",
    "body": "I found uses for it too, however the name (as of v0.90) doesn't survive pickling, which if it did, would be useful to have working (my workaround is a bit of a fudge).  To see the problem, try the following:\n\n``` python\nimport pandas as pd\ndf = pd.DataFrame( data=np.ones([6,6]) )\ndf.name = 'Ones'\ndf.save('ones.df')\ndf2 = pd.load('ones.df')\nprint df2.name\n```\n\nI'd love to be able to dive in and contribute a fix, but I'm still not so well-versed in the library and many aspects of Python.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10963804",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-10963804",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 10963804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTYzODA0",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-03T18:01:13Z",
    "updated_at": "2012-12-03T18:01:13Z",
    "author_association": "MEMBER",
    "body": "It's not a simple addition (you have to worry about preserving metadata through computations), but it would be nice. We'll probably look into it in the somewhat near future\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10981134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-10981134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 10981134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTgxMTM0",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-04T02:01:00Z",
    "updated_at": "2012-12-04T02:01:00Z",
    "author_association": "NONE",
    "body": "Hi Paul,\n\nI have written a couple functions that will let you transfer all the custom\nattributes from one dataframe to antother.  Check out the function\ntransfer_attributes()\n\nhttps://github.com/hugadams/pyuvvis/tree/master/pyuvvis/pandas_utils\n\nIn particular, if you save dataframeserial.py, it will save and load your\ndataframes while preserving any custom attributes.  In the file\ndf_attrhandler, you can use the function called \"transfer_attr\" to do\nsomething like:\n\ndf=DataFrame()\ndf.name='test'\ndf2=DataFrame\n\ntransfer_attr(df, df2)\nprint df2.name\n'test'\n\nI agree that persistent custom attributes would be a key development in the\nfuture, and there is already a github issue open for it.  In fact, a\npackage that I\"ll be posting to the list soon, really does depend on these\ncustom attributes.\n\nOn Mon, Dec 3, 2012 at 1:01 PM, Wes McKinney notifications@github.comwrote:\n\n> It's not a simple addition (you have to worry about preserving metadata\n> through computations), but it would be nice. We'll probably look into it in\n> the somewhat near future\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/447#issuecomment-10963804.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11152040",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-11152040",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 11152040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUyMDQw",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T00:22:28Z",
    "updated_at": "2012-12-08T00:22:28Z",
    "author_association": "NONE",
    "body": "Now that I have some time, I wanted to followup with this.\n\nDataFrame, IMO, should have a .name attribute, and df.columns also should have a .name attribute and so should df.index, or at least I've found this useful in my work.\n\nIn any case, I think persistent attributes, and to a lesser extent, instance methods, would be an extremely important addition to pandas.  Here's my reasoning:\n\nEverybody that uses pandas for analysis outside of the scope of timeseries will eventually benefit from customizing/subclassing a DataFrame at some point.  Usually, the dataframe is the ideal object for storing the numerical data, but there is also pertinent information that could go along with it to really customize the object.  For example, a dataframe becomes the ideal choice for a spectroscopy experiment if one can store an extra array, the spectral baseline, outside of the dataframe.  Additionally, experimental metadata ought to be stored.  This is so easily done by adding attributes to the dataframe, that it almost begs to be the canonical way to handle spectral data.\n\nThe functions I wrote in the above link use a crude method to transfer arbitrary attributes between dataframes.  In short, it first examines an empty DataFrame's attributes, and compares these with a list of attributes from the user's dataframe.  Any differences are then transferred to the new dataframe.  As a hack until a better solution presents itself, dataframe returns could call my transfer_attr() function before returning a new DataFrame.  I wouldn't know how to integrate this fully into pandas otherwise.\n\nI know this is low on the priority list, but I really do think that persistent custom attributes would be a big step forward, and not just an appeasement for corner case users.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11152560",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-11152560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 11152560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUyNTYw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T00:47:39Z",
    "updated_at": "2012-12-08T00:47:39Z",
    "author_association": "NONE",
    "body": "Interesting. I'd like to add a couple of notes:\n- You're suggesting **there needs to be a mechanism to attach arbitrary metadata to a Dataframe**.\n  good idea.  \n  I don't though see why custom attributes must be implemented as \"attributes\" in the python sense.\n  a metadata dict with a simple api which is serialized along with the dataframe would take care\n  of most use cases and shouldn't be hard to implement. Is there some requirement you have\n  for which this is not adequate?\n- The .name issue is seperate. The .name(s) attributes are not \"custom\", but are \"baked in\" \n  ,relied on by internal code and can affect other parts of the package in hard to predict ways\n  (see the ongoing excel save/read issue).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11152782",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-11152782",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 11152782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUyNzgy",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T00:59:34Z",
    "updated_at": "2012-12-08T00:59:34Z",
    "author_association": "NONE",
    "body": "y-p,\n\nI would be fine with a metadatadict, or whatever is the most elegant solution to the problem.  The reason that I like adding attributes is for access.  Something like df.name is easier for people to keep up with than df.metadata['name']; however, if you gave the metadata dict attribute access, then df.metadict.name is also pretty simple.  Am I understanding you correctly?  Whatever solution ends up being the most simple to implement, would be useful.\n\nI agree that the name issue is separate.  If .name is too baked in as you say, then sure, don't include it.  But if the pandas Index object also had a way to persist attributes, or a persistent metadata dict, then one could just slap names or whatever attributes they want, onto these object as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11152948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-11152948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 11152948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUyOTQ4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T01:10:25Z",
    "updated_at": "2012-12-08T01:11:07Z",
    "author_association": "NONE",
    "body": "I like the idea of providing attribute access under a predefined  attribute rather then\ndirectly on the object (i.e. `df.tags.measurement_date`) as the latter pollutes the namespace\nand hurts backwards-compatibility when new methods or instance variables are added in\nthe future.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11153175",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-11153175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 11153175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUzMTc1",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-08T01:26:12Z",
    "updated_at": "2012-12-08T01:26:12Z",
    "author_association": "NONE",
    "body": "Whatever is best for pandas would be fine with me.  If the import gets too\ntedious, it is easy enough to make some properties or basic getters/setters\nfor the convienence of the user.  Something like \"get_baseline()\" may be\neasier to present to users than df.tags.baselinedics.baseline1.  In any\ncase, as long as the functionality is there, it will be very useful.\n\nOn Fri, Dec 7, 2012 at 8:10 PM, y-p notifications@github.com wrote:\n\n> directly on the object (i.e. df.tags.measurement_date) as the latter\n> pollutes the namespace\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11232650",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-11232650",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 11232650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjMyNjUw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-11T06:23:35Z",
    "updated_at": "2012-12-11T06:23:35Z",
    "author_association": "NONE",
    "body": "new custom metadata issue at #2485. \n@hugadams - your thoughts (and PR, pending discussion) are welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15926456",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-15926456",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 15926456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTI2NDU2",
    "user": {
      "login": "sglyon",
      "id": 1001948,
      "node_id": "MDQ6VXNlcjEwMDE5NDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1001948?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sglyon",
      "html_url": "https://github.com/sglyon",
      "followers_url": "https://api.github.com/users/sglyon/followers",
      "following_url": "https://api.github.com/users/sglyon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sglyon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sglyon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sglyon/subscriptions",
      "organizations_url": "https://api.github.com/users/sglyon/orgs",
      "repos_url": "https://api.github.com/users/sglyon/repos",
      "events_url": "https://api.github.com/users/sglyon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sglyon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-04T21:52:30Z",
    "updated_at": "2013-04-04T21:52:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Anyone working on adding the name attribute? \n\nAnd where to look for more information on a possible tags property? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15932160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-15932160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 15932160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTMyMTYw",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T00:14:30Z",
    "updated_at": "2013-04-05T00:14:30Z",
    "author_association": "NONE",
    "body": "You can try using the metadataframe class if you want. Let me kn ow and ill\nupdate my repo. You can monkey patch a name attr in but it will return to a\ndefault value everytime a new dataframe is created.\nOn Apr 4, 2013 5:53 PM, \"Spencer Lyon\" notifications@github.com wrote:\n\n> Anyone working on adding the name attribute?\n> \n> And where to look for more information on a possible tags property?\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/447#issuecomment-15926456\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15933233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-15933233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 15933233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTMzMjMz",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-05T00:44:29Z",
    "updated_at": "2013-04-05T00:44:29Z",
    "author_association": "NONE",
    "body": "Alternatively you can create a composite class that stores the name\nattribute. Unfortunately you have to specify which dataframe methods can be\ncalled and still return this class instead of returning a dataframe.  If\nyou only need say two methods of df then this is worth doing. Ultimately\nmetadaraframe is an effort to do this generically for all methods and\ndataframe operators so probably easier to start with it. For just a single\nattribute addition, this is a heavyhanded solution, but all that I know if.\nOn Apr 4, 2013 8:14 PM, \"Adam Hughes\" hughesadam87@gmail.com wrote:\n\n> You can try using the metadataframe class if you want. Let me kn ow and\n> ill update my repo. You can monkey patch a name attr in but it will return\n> to a default value everytime a new dataframe is created.\n> On Apr 4, 2013 5:53 PM, \"Spencer Lyon\" notifications@github.com wrote:\n> \n> > Anyone working on adding the name attribute?\n> > \n> > And where to look for more information on a possible tags property?\n> > \n> > —\n> > Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/447#issuecomment-15926456\n> > .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17236820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-17236820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 17236820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjM2ODIw",
    "user": {
      "login": "JamesPHoughton",
      "id": 4304478,
      "node_id": "MDQ6VXNlcjQzMDQ0Nzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4304478?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamesPHoughton",
      "html_url": "https://github.com/JamesPHoughton",
      "followers_url": "https://api.github.com/users/JamesPHoughton/followers",
      "following_url": "https://api.github.com/users/JamesPHoughton/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesPHoughton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamesPHoughton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesPHoughton/subscriptions",
      "organizations_url": "https://api.github.com/users/JamesPHoughton/orgs",
      "repos_url": "https://api.github.com/users/JamesPHoughton/repos",
      "events_url": "https://api.github.com/users/JamesPHoughton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamesPHoughton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T16:08:29Z",
    "updated_at": "2013-04-30T16:08:29Z",
    "author_association": "NONE",
    "body": "A df name attribute would be useful when slicing panels down to dataframes, parallel to the case where a df column name becomes a series name when sliced. In theory, this should generalize to any number of dimensions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17244813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-17244813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 17244813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjQ0ODEz",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T18:17:32Z",
    "updated_at": "2013-04-30T18:17:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 on this. I was wanting it just a few days ago.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17245413",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-17245413",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 17245413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjQ1NDEz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T18:27:51Z",
    "updated_at": "2013-04-30T18:27:51Z",
    "author_association": "NONE",
    "body": "updated title. we'll see when the rest can follow.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23690062",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-23690062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 23690062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjkwMDYy",
    "user": {
      "login": "kevindavenport",
      "id": 1929051,
      "node_id": "MDQ6VXNlcjE5MjkwNTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1929051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevindavenport",
      "html_url": "https://github.com/kevindavenport",
      "followers_url": "https://api.github.com/users/kevindavenport/followers",
      "following_url": "https://api.github.com/users/kevindavenport/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevindavenport/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevindavenport/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevindavenport/subscriptions",
      "organizations_url": "https://api.github.com/users/kevindavenport/orgs",
      "repos_url": "https://api.github.com/users/kevindavenport/repos",
      "events_url": "https://api.github.com/users/kevindavenport/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevindavenport/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T04:58:34Z",
    "updated_at": "2013-09-03T04:58:34Z",
    "author_association": "NONE",
    "body": "Looking forward to this. Related: http://stackoverflow.com/questions/11672403/adding-my-own-description-attribute-to-a-pandas-dataframe\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23833424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-23833424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 23833424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODMzNDI0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-04T23:19:07Z",
    "updated_at": "2013-09-04T23:19:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hugadams btw - columns and index now get name attributes (if you have a hierarchical index, it's called names...) not sure if that covers what you were looking for in terms of columns and index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23837947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-23837947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 23837947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODM3OTQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-05T01:16:48Z",
    "updated_at": "2013-09-05T01:16:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner I added support for this by just defining _prop_attributes (see Series)\n\nnot complete though as Series mostly uses the original old method \n\nand need a better method to resolve name conflicts and such (eg when u add frames with different names what happens), same issue in Series though\n\nso a bit of a project but all the support is there for this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33230658",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-33230658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 33230658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjMwNjU4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T15:16:59Z",
    "updated_at": "2014-01-24T15:16:59Z",
    "author_association": "NONE",
    "body": "@jreback , does doing this fit in naturally into the NDFrame unification deal?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33231336",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-33231336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 33231336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjMxMzM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T15:24:06Z",
    "updated_at": "2014-01-24T15:24:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "technically this is easy (just add to `_metadata`), but it still needs proper progation...I think its worthwhile, but will take some time to get right \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33238637",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-33238637",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 33238637,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM4NjM3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T16:40:27Z",
    "updated_at": "2014-01-24T16:40:38Z",
    "author_association": "NONE",
    "body": "series names aren't implemented as metadata, and series now derive from NDFrame.\nmetadata is fine (well.. you know how I feel), but names are a special case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33238940",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-33238940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 33238940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM4OTQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T16:43:37Z",
    "updated_at": "2014-01-24T16:43:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p ahh but they are! (well they are in the `_metadata` list). Actually combined with `__finallize__` this makes it possible for sub-classes to implement their own metadata! (e.g. geopandas does this)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33239717",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-33239717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 33239717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjM5NzE3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-24T16:51:53Z",
    "updated_at": "2014-01-24T16:51:53Z",
    "author_association": "NONE",
    "body": "Well... then they didn't used to be.  nevermind. let it sit for another 18 months or so.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41491989",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-41491989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 41491989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDkxOTg5",
    "user": {
      "login": "JamesRamm",
      "id": 2784823,
      "node_id": "MDQ6VXNlcjI3ODQ4MjM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2784823?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamesRamm",
      "html_url": "https://github.com/JamesRamm",
      "followers_url": "https://api.github.com/users/JamesRamm/followers",
      "following_url": "https://api.github.com/users/JamesRamm/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamesRamm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamesRamm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamesRamm/subscriptions",
      "organizations_url": "https://api.github.com/users/JamesRamm/orgs",
      "repos_url": "https://api.github.com/users/JamesRamm/repos",
      "events_url": "https://api.github.com/users/JamesRamm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamesRamm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T09:24:04Z",
    "updated_at": "2014-04-27T09:26:03Z",
    "author_association": "NONE",
    "body": "Another use of a name attribute would be for GUI's dealing with dataframes. I have one such program which allows a user to load many csv files and plot columns from them. The backend uses dataframes to load and store the CSV data. \nThe only useful way I can think of to allow the user to select which dataframe to plot from would be having a human-readable attribute (i.e. a name) describing the dataframe to display on the GUI, which can then be used to grab the correct dataframe. \nI did a work-around by simply inheriting from dataframe and adding a name property. I then reimplemented class methods (like read_csv) to return an instance of 'NamedDataFrame' rather than DataFrame.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/130482410",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-130482410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 130482410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDQ4MjQxMA==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-12T23:41:34Z",
    "updated_at": "2015-08-12T23:44:30Z",
    "author_association": "NONE",
    "body": "in ipython notebook and similar REPL, it would make sense to display dataframe name or more generally custom metadata, like in Excel toolbar (count, min, max, average, sum, nans, numerical count).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132390461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/447#issuecomment-132390461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/447",
    "id": 132390461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjM5MDQ2MQ==",
    "user": {
      "login": "summerela",
      "id": 9097886,
      "node_id": "MDQ6VXNlcjkwOTc4ODY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9097886?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/summerela",
      "html_url": "https://github.com/summerela",
      "followers_url": "https://api.github.com/users/summerela/followers",
      "following_url": "https://api.github.com/users/summerela/following{/other_user}",
      "gists_url": "https://api.github.com/users/summerela/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/summerela/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/summerela/subscriptions",
      "organizations_url": "https://api.github.com/users/summerela/orgs",
      "repos_url": "https://api.github.com/users/summerela/repos",
      "events_url": "https://api.github.com/users/summerela/events{/privacy}",
      "received_events_url": "https://api.github.com/users/summerela/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T23:32:02Z",
    "updated_at": "2015-08-18T23:32:21Z",
    "author_association": "NONE",
    "body": "When saving results of an analysis, resulting in several different outputs, it would be so nice to automatically save and name your output: \n\n```\ndef save_results(df, df_name):\n    if len(df) > 0:\n        print \"Saving {} {} variants to current working directory\".format(len(df), df_name)\n        df.to_csv('{}.csv'.format(df_name), header=True, encoding='utf-8', index=False)\n    else:\n        print \"No {} variants to save.\".format(df_name)\n```\n"
  }
]
