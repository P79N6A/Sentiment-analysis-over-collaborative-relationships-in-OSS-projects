[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49887556",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49887556",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49887556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODg3NTU2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T15:11:42Z",
    "updated_at": "2014-07-23T15:11:42Z",
    "author_association": "MEMBER",
    "body": "This is how `nan`s are encoded. There's no way to order them, so they get a sentinel value for their indexes. In `Float64Index` their locations are stored using a boolean index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49887671",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49887671",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49887671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODg3Njcx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T15:12:24Z",
    "updated_at": "2014-07-23T15:12:24Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz not sure if that answers your question, but maybe sheds some light on why you're getting this result\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49888249",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49888249",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49888249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODg4MjQ5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T15:16:15Z",
    "updated_at": "2014-07-23T15:16:15Z",
    "author_association": "MEMBER",
    "body": "Where is this failing for you? I get a failure during `cat[1] = np.nan`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49888347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49888347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49888347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODg4MzQ3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T15:17:04Z",
    "updated_at": "2014-07-23T15:17:04Z",
    "author_association": "MEMBER",
    "body": "also i would expect `exp == np.array([0, -1, 2, -1])` if assignment did succeed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49896027",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49896027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49896027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk2MDI3",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T16:08:41Z",
    "updated_at": "2014-07-23T16:09:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that the above is run on top of https://github.com/pydata/pandas/pull/7768, which already has a fix for encoding `np.nan` as `-1` if `np.nan` is not in levels.\n\nIn Categoricals, the order which is passed in to the index is enough (no sorting necessary), so IMO it should return the position of the `np.nan`. \n\nIn some other cases this actually happen when I use the internal cython code, e.g. in `pandas.core.categorical._get_codes_for_values`, which correctly encodes `np.nan` as the position in the levels, but in that case uses a `PyObjectHashTable` instead of a `Float64HashTable`.\n\n```\npd.Categorical([1,2,np.nan], levels=[1,2,np.nan]).codes\narray([0, 1, 2])\n```\n\nSo IMO a float index should also consider `np.nan` as a valid index value (or should refuse to have that included). \n\nIf NaN will be a proper value in a float index, I can use that. Otherwise I will probably ensure that I have a object index if NaN is in levels, because this works:\n\n```\nIn[19]: from pandas.core.index import Index\nIn[20]: idx = Index([1,2,np.nan], dtype=\"object\")\nIn[21]: idx.get_indexer([np.nan])\nOut[21]: array([2])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49896300",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49896300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49896300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk2MzAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T16:10:42Z",
    "updated_at": "2014-07-23T16:10:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz where are you directly using `get_indexer`? `factorize` already does this properly\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49897424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49897424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49897424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk3NDI0",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T16:18:52Z",
    "updated_at": "2014-07-23T16:18:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "`Categorical.__setitem__` is using `get_indexer`.\n\nCategorical does not use `factorize` if a level is already passed in but `_get_codes_for_values` in Categorical. But that function also encodes NaN correctly because a \"object\" dtype is ensured\n\n```\nIn[26]: _get_codes_for_values(np.array([1,2,np.nan]), np.array([1,2,np.nan]))\nOut[26]: array([ 0,  1, -1])\nIn[27]: _get_codes_for_values(np.array([1,2,np.nan]), np.array([1,2,np.nan], dtype=\"object\"))\nOut[27]: array([0, 1, 2])\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49897862",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49897862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49897862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk3ODYy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T16:22:09Z",
    "updated_at": "2014-07-23T16:23:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that this bug is not so much about the Categorical useage, but about the inconsistency between Object and Float index, which handle `np.nan` differently.\n\nIMO there ware three ways:\n- do nothing: leave in the inconsistency and don't prevent `np.nan` in float index (IMO a bug -> this here :-)\n- Don't allow `np.nan` in float index but raise in constructor if such a value is passed in\n- allow np.nan and change the hash table to accept `np.nan` like object does.\n\nFrom my standpoint both the last two are fine: either I change the Categorical to change the levels to dtype object of a NaN is in levels or I don't have anything to do in Categorical :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49898035",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49898035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49898035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk4MDM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T16:23:35Z",
    "updated_at": "2014-07-23T16:23:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm. \n\n@cpcloud how tricky to change `Float64HashTable` to enumerate the indexing positions for nans?\nI guess they would all have to be the same! for 1 nan this is fine/expected. Multi-nans are a problem though.\n\n@JanSchulz \n\nobject dtypes are no longer used for `Float64Index`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49898258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49898258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49898258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk4MjU4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T16:25:21Z",
    "updated_at": "2014-07-23T16:25:21Z",
    "author_association": "MEMBER",
    "body": "Hm i'll see ... can take a look tonight\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49898619",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49898619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49898619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5ODk4NjE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T16:28:04Z",
    "updated_at": "2014-07-23T16:28:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz this ONLY works for a unique index and ONLY for object\n\ne.g. I think these could return the same result\n\n```\nIndex([1,2,np.nan]).get_indexer([np.nan])\nIndex([1,2,np.nan],dtype=object).get_indexer([np.nan])\n```\n\nThese both don't know what to do (and so return -1)\n\n```\nIndex([1,np.nan,2,np.nan]).get_indexer_for([np.nan])\nIndex([1,np.nan,2,np.nan],dtype=object).get_indexer_for([np.nan])\n```\n\nSo @JanSchulz still need to be wary of the multiple `np.nan` case (e.g. if you have a `-1` as an indexer I think its an error (separate from this)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49923490",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49923490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49923490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTIzNDkw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T19:33:31Z",
    "updated_at": "2014-07-23T19:33:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Uniqueness isn't a problem with (unique) Categorical levels. \n\nBut why not do the same as with this:\n\n```\nIn[28]: Index([1,2,2,3]).get_indexer_for([2])\nOut[28]: Int64Index([1, 2], dtype='int64')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49924997",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-49924997",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 49924997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTI0OTk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T19:46:04Z",
    "updated_at": "2014-07-23T19:46:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "since you cannot compare `np.nan` with `np.nan` at all, the routines treat them specially (for dtype=`float64`). For `dtype==object` (which is what the backend of `Float64Index` was prior to 0.14.0) this was correct (I guess), but WAY  WAY slower (that's why it was changed). \n\nThis is what @cpcloud will look at (for a single nan case it IS possible to get an indexer).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50278148",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-50278148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 50278148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjc4MTQ4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-27T16:25:21Z",
    "updated_at": "2014-07-27T16:31:52Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz \n\n> Note that this bug is not so much about the Categorical useage, but about the inconsistency between Object and Float index, which handle np.nan differently.\n\nNaNs are not well-behaved objects. They have the property that `nan != nan`, but this screws up some basic assumptions that many Python sequence objects make when comparing their contents with another sequence. For example,\n\n```\nIn [3]: x = np.nan\n\nIn [4]: [x] == [x]\nOut[4]: True\n\nIn [5]: x == x\nOut[5]: False\n```\n\nI looked into the C code here to finally put my curiosity about `nan`s to rest, and it's because the `list_richcompare` function calls `PyObject_RichCompareBool` (as opposed to `PyObject_RichCompare`, which does the right thing) on each element. `PyObject_RichCompareBool` contains these lines (`v` and `w` are both `PyObject *`s):\n\n``` c\n    /* Quick result when objects are the same.\n       Guarantees that identity implies equality. */\n    if (v == w) {\n        if (op == Py_EQ)\n            return 1;\n        else if (op == Py_NE)\n            return 0;\n    }\n```\n\nSo in the case of `nan` (and really any other object that one would choose to override this way), `id(x) == id(x)` does _not_ imply that `x == x` which makes dealing with `nan` a huge PITA.\n\n`object` arrays behave essentially like a `list` which leads to `list`-like comparison behavior:\n\n```\nIn [12]: x = np.array([np.nan, np.nan], object)\n\nIn [13]: x == x\nOut[13]: array([ True,  True], dtype=bool)\n```\n\nFinally, `Float64Index` is now (since 0.14.0 I think) backed by a real `float64` array so it behaves like `nan` should behave. That of course breaks compatibility with older usage, where `Float64Index` was essentially just `Index` with a slightly different name.\n\nI should note that `id(nan) == id(nan)` is just an implementation detail (e.g., `id(float('nan')) != id(float('nan'))`, but it could), but one that certainly matters in this case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50285144",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-50285144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 50285144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjg1MTQ0",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-27T20:42:47Z",
    "updated_at": "2014-07-27T20:42:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I still don't get what it would be so problematic to return the `np.nan` position if the position is known due to the \"boolean index\" (see first comment)? Or is that a performance problem due to the NaN check on the `get_indexer(...)` inputs? My idea of such a thing:\n\n```\n# in Float64Index\ndef get_indexer(self, *args, **kwargs):\n    idx = super(Float64Index, self).get_indexer(*args, **kwargs)\n    if self.hasnans and np.isnan(other): # from __contains__()\n        # get_indexer only works if the index is unique so get_loc will return a single value\n        idx[idx == -1] = self.get_loc(np.nan)\n    return idx\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52348026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-52348026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 52348026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzQ4MDI2",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T19:29:47Z",
    "updated_at": "2014-08-15T19:30:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "If this is fixed, the workaround in categorical.py should be removed:\n\n```\n        # FIXME: the following can be removed after https://github.com/pydata/pandas/issues/7820\n        # is fixed.\n        # float levels do currently return -1 for np.nan, even if np.nan is included in the index\n        # \"repair\" this here\n        if com.isnull(rvalue).any() and com.isnull(self.levels).any():\n            nan_pos = np.where(com.isnull(self.levels))\n            lindexer[lindexer == -1] = nan_pos\n```\n\n[This is in #8007, so not yet merged]\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52348143",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-52348143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 52348143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzQ4MTQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T19:31:06Z",
    "updated_at": "2014-08-15T19:31:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep, @JanSchulz put this on the list of future fixmes for categorical (create a new issue)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52349240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-52349240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 52349240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzQ5MjQw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T19:42:26Z",
    "updated_at": "2014-08-15T19:42:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Isn't it easier to add a todo to this issue that this is taken out when this issue is fixed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52349482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-52349482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 52349482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzQ5NDgy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T19:44:45Z",
    "updated_at": "2014-08-15T19:44:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Seems someone already did in https://github.com/pydata/pandas/pull/7855 :-) So I think this is taken care of.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52349736",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-52349736",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 52349736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzQ5NzM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-15T19:47:16Z",
    "updated_at": "2014-08-15T19:47:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I did that\n\nyes it's easier if their is a specifc issue involved\n\nthe problem is that unless it's at the top it's not obvious and won't get done\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403152885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7820#issuecomment-403152885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7820",
    "id": 403152885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1Mjg4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T21:36:32Z",
    "updated_at": "2018-07-06T21:36:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is ok in master, just needs tests to close"
  }
]
