[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14668591",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2997#issuecomment-14668591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2997",
    "id": 14668591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjY4NTkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T19:07:05Z",
    "updated_at": "2013-03-09T19:07:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "see returning a view vs copy\nhttp://pandas.pydata.org/pandas-docs/dev/indexing.html#advanced-indexing-with-ix\n(try for iloc/loc as well)\n\nyour first operation is returning a copy, the set is in the copy\n\nin general if u are selecting a non-contiguous range (depends on exactly how numpy stores the data) you might get a copy\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14669097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2997#issuecomment-14669097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2997",
    "id": 14669097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjY5MDk3",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T19:38:26Z",
    "updated_at": "2013-03-09T19:38:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "jikes, seems really too much black magic for my taste:\n\n``` python\ndf4.ix[1:2].ix[:,\"d\"] = 7 #works \ndf4.ix[1:2,\"b\":] = 8 #works ->  .ix setting directly on the df4?\ndf4.ix[1:2,\"b\":].ix[:,\"d\"] = 9 #works not...\n```\n\nWouldn't it be more consistent to use copy for every .ix/.iloc/.loc case?\n\n``` python\ndf5 = df4.ix[1:2]\ndf5[\"d\"] = 10\ndf4 #boom\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14669464",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2997#issuecomment-14669464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2997",
    "id": 14669464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjY5NDY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T19:59:04Z",
    "updated_at": "2013-03-09T19:59:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "chaining these call is _only_ necesary in this case https://github.com/pydata/pandas/issues/2995\n`.ix` tries to do the right thing, but its pretty non-trivial whether numpy returns a copy or not\n\nand you do _need_ `.ix` to be able to set in the multi-axis case (e.g. `df5['d'] is not that flexible`)\n\nis there a case you really need and cannot do some other way?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14670398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2997#issuecomment-14670398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2997",
    "id": 14670398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjcwMzk4",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T20:50:17Z",
    "updated_at": "2013-03-09T20:50:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "View or copy, it may seem like a box of chocolates ...\n\nI had in mind that when using label and/or slices a view is returned. Both `df4.ix[1:2,\"b\":]` and `df4.ix[:,\"d\"]` return a view (i beg to differ here with @jreback), however chaining two such calls seem to return a copy .. huuu?\n\n``` python\nIn [49]: df4\nOut[49]: \n     b  c  d\nz a         \n1 a  X  1  5\n2 b  Y  2  6\n3 c  X  3  7\n4 d  Y  4  8\n\nIn [50]: df4.ix[1:2,\"b\":] = 0\n\nIn [51]: df4\nOut[51]: \n     b  c  d\nz a         \n1 a  0  0  0\n2 b  0  0  0\n3 c  X  3  7\n4 d  Y  4  8\n\nIn [52]: df4.ix[:,\"d\"] = 1\n\nIn [53]: df4\nOut[53]: \n     b  c  d\nz a         \n1 a  0  0  1\n2 b  0  0  1\n3 c  X  3  1\n4 d  Y  4  1\n\nIn [54]: df4.ix[1:2,\"b\":].ix[:,\"d\"] = 100   # chaining both does not change df4 ???\n\nIn [55]: df4\nOut[55]: \n     b  c  d\nz a         \n1 a  0  0  1\n2 b  0  0  1\n3 c  X  3  1\n4 d  Y  4  1\n```\n\nAs already mentioned, chaining is not necessary here.\n\n``` python\nIn [67]: df4\nOut[67]: \n     b  c  d\nz a         \n1 a  X  1  5\n2 b  Y  2  6\n3 c  X  3  7\n4 d  Y  4  8\n\nIn [68]: df4.ix[1:2, \"d\"] = 9\n\nIn [69]: df4\nOut[69]: \n     b  c  d\nz a         \n1 a  X  1  9\n2 b  Y  2  9\n3 c  X  3  7\n4 d  Y  4  8\n```\n\nbtw @JanSchulz, have you thought about using `xs` on DataFrames with MultiIndex (see also my reply on your SO question).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14670685",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2997#issuecomment-14670685",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2997",
    "id": 14670685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjcwNjg1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T21:07:56Z",
    "updated_at": "2013-03-09T21:09:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lodagro: I think `df4.ix[1:2,\"b\":]` is using .ix directly to _set_ the value to the df4 DataFrame, so no \"returning a view or copy\" here. The problem starts when this staement is used as a selction, a copy is returned and then ix is used again to set a value on the copy.\n\n@jreback actually the \"you don't know whether a view or copy is returned\" is the problem for more than the double .ix case, as demonstrated by the assignment of a selection to a new variable: in one case changing a value in such a new dataframe changes the value in the original dataframe and in once case not.\n\nsomething along the line of \n1.  develop your code, use ix with a with the real selection criteria and sampling the other axis -> ix returns a copy, tests are ok\n2. remove the sampling, -> .ix starts to return a view, your original data is compromised\n\nI would argue that .ix and every other selection mechanism should always return a copy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14670888",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2997#issuecomment-14670888",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2997",
    "id": 14670888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjcwODg4",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T21:18:32Z",
    "updated_at": "2013-03-09T21:18:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "2013/3/9 JanSchulz notifications@github.com\n\n> @lodagro https://github.com/lodagro: I think df4.ix[1:2,\"b\":] is using\n> .ix directly to _set_ the value to the df4 DataFrame, so no \"returning a\n> view or copy\" here. The problem starts when this staement is used as a\n> selction, a copy is returned and then ix is used again to set a value on\n> the copy.\n> \n> aha, of course\n> \n> @jreback https://github.com/jreback actually the \"you don't know\n> whether a view or copy is returned\" is the problem for more than the double\n> .ix case, as demonstrated by the assignment of a selection to a new\n> variable: in one case changing a value in such a new dataframe changes the\n> value in the original dataframe and in once case not.\n> \n> something along the line of\n> 1. develop your code, use ix with a with the real selection criteria and\n> sampling the other axis -> ix returns a copy, tests are ok\n> 2. remove the sampling, -> .ix starts to return a view, your original data\n> is compromised\n> \n> I would argue that .ix should always return a copy.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/2997#issuecomment-14670685\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14674395",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2997#issuecomment-14674395",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2997",
    "id": 14674395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Njc0Mzk1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-10T01:30:54Z",
    "updated_at": "2013-03-10T02:00:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I would argue that .ix and every other selection mechanism should always return a copy.\n\nThat would kill performance in cases when you're selecting individual indices and contiguous slices in a read-only manner, though, which are the most common use cases for `.ix` (right now these are O(1) operations).\n\nThe only reasonable way to guarantee consistent semantics everywhere without completely sacrificing performance would be to implement some kind of view-but-copy-on-first-write wrapper over `ndarray`, which would be somewhat complicated, especially since `ndarray` objects can be manipulated using low-level buffer protocol (you'd have to find some way of reliably intersecting all mutating operations through such a protocol without too many false positives, but buffer access is used both in read-only and write operations).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25140275",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2997#issuecomment-25140275",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2997",
    "id": 25140275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MTQwMjc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-26T02:42:49Z",
    "updated_at": "2013-09-26T02:42:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "reslved by docs (and use of weak refs to update the caches)\n"
  }
]
