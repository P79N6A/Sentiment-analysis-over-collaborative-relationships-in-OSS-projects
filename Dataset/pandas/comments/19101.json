[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355787454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19101#issuecomment-355787454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19101",
    "id": 355787454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc4NzQ1NA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-06T23:59:23Z",
    "updated_at": "2018-01-06T23:59:23Z",
    "author_association": "MEMBER",
    "body": "Thanks, this appears to happen with any type of set operation that returns empty:\r\n```python\r\nIn [15]: ii1 = pd.interval_range(0, 4)\r\n\r\nIn [16]: ii2 = pd.interval_range(5, 10)\r\n\r\nIn [17]: ii1.intersection(ii2)\r\n---------------------------------------------------------------------------\r\nTypeError: category, object, and string subtypes are not supported for IntervalIndex\r\n```\r\n\r\nUnder the hood, `IntervalIndex` uses `MultiIndex` set ops, and then takes the resulting array of tuples to build the result.  When the result is empty, an empty `object` dtype array is returned by `MultiIndex`, so the inferred dtype is `object`, which is then rejected upon `IntervalIndex` creation.\r\n\r\nWill submit a fix either later today or tomorrow."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355800045",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19101#issuecomment-355800045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19101",
    "id": 355800045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTgwMDA0NQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-07T05:07:32Z",
    "updated_at": "2018-01-07T05:07:32Z",
    "author_association": "MEMBER",
    "body": "It looks like there was a related bug in previous versions where dtype wasn't maintained for empty results:\r\n\r\n```python\r\nIn [2]: pd.__version__\r\nOut[2]: '0.22.0'\r\n\r\nIn [3]: ii = pd.interval_range(0, 4)\r\n\r\nIn [4]: ii.dtype\r\nOut[4]: interval[int64]\r\n\r\nIn [5]: ii.difference(ii)\r\nOut[5]:\r\nIntervalIndex([]\r\n              closed='right',\r\n              dtype='interval[float64]')\r\n```\r\nSeems like the returned dtype should match what a non-empty result would have."
  }
]
