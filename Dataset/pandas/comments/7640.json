[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47737074",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-47737074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 47737074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzM3MDc0",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T04:51:16Z",
    "updated_at": "2014-07-02T04:51:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, in our local in-house n-dim library we have something similar (an IntervalAxis), and it works quite well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47766256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-47766256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 47766256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzY2MjU2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T11:48:18Z",
    "updated_at": "2014-07-02T11:48:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer all for this!\n\nI know you are against this, but I would encorage you to inherit from `Index`. OR create a new base class that is ABC like which we can eventually use as a base class for `Index`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47793388",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-47793388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 47793388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzkzMzg4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T15:43:10Z",
    "updated_at": "2014-07-02T15:43:10Z",
    "author_association": "MEMBER",
    "body": "+1 here too. tho i think `IntervalIndex` might be a better name.\n\n@shoyer great idea and excellent write up :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47806968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-47806968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 47806968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODA2OTY4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-02T17:14:55Z",
    "updated_at": "2014-07-02T17:14:55Z",
    "author_association": "MEMBER",
    "body": "Thanks for the support! I'm not sure when I'll get around to implementing this, but I will add it to my source open backlog :).\n\n@jreback Agreed, for an new index class _inside_ pandas, it is OK to subclass from `Index`. I haven't thought too much about the details of implementing this in pandas yet.\n\n@cpcloud Also agreed, `IntervalIndex` is a better name for the described functionality. I will update the first comment. `CellIndex` makes more sense for an index that is actually constrained to a grid. That would also be useful, but is less general.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50395026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50395026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50395026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzk1MDI2",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T20:28:56Z",
    "updated_at": "2014-07-28T20:28:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would be very useful for me, too.  Currently I'm using a `DatetimeIndex` that's one longer than my data, which are padded with a row of `nan`s at the end, so that `df.index[i]:df.index[i+1]` is the \"index\" corresponding to `iloc[i]`.  It seemed clever when I started the project.\n\nThis also seems like it will help make contiguous groupby (#5494) easier, since it gives a natural choice of index for the groupings.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50396632",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50396632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50396632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMzk2NjMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T20:39:27Z",
    "updated_at": "2014-07-28T20:39:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer \n\nif u (or anyone else)\ncould post test pairs for this would really help it along\n\nessentially test cases for everything from construction to various indexing ops\nthat define as much behavior as possible\n\neg for Int64Index\n\nresult = Index([1,2,3])\nexpected = [1,2,3]\nassert_almost_equal(result,expected)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50400395",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50400395",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50400395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDAwMzk1",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T21:03:27Z",
    "updated_at": "2014-07-28T21:03:27Z",
    "author_association": "NONE",
    "body": "@shoyer \n\nThanks for including me; sorry I didn't notice earlier (mail filter was throwing github alerts out).  Indeed, I think a general interval index is probably a great addition; although, I lack the breadth in vision to see a general solution.\n\nI did actually implement a hacky version of an interval index in pyuvvis that converts a datetime index to intervals of seconds, minutes etc...  The main lesson I learned is that your interval index should be able to map back to the original data.  To do this, I actually retain the original datetimeindex, and use metadata like \"_interval=True\" to navigate between all of the logic.  In my case, this mapping is stored on the TimeSpectra object (dataframe + metadata). \n\nI put a demo of this up in case seeing a hack in action might help in the design of a general solution.\n\nhttp://nbviewer.ipython.org/github/hugadams/pyuvvis/blob/master/examples/Notebooks/intervals.ipynb\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50410132",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50410132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50410132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDEwMTMy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T22:16:54Z",
    "updated_at": "2014-07-28T22:27:22Z",
    "author_association": "MEMBER",
    "body": "@hugadams Looking at your notebook, it appears you may be thinking of a [TimedeltaIndex](https://github.com/pydata/pandas/issues/3009)? \n\nThe idea behind IntervalIndex is somewhat distinct -- although I can imagine that an IntervalIndex wrapping a TimedeltaIndex could be useful in some cases.\n\n@jreback Sounds like a good idea, when I get the chance I will start writing some test cases and add them to this issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50410757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50410757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50410757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDEwNzU3",
    "user": {
      "login": "hugadams",
      "id": 1972276,
      "node_id": "MDQ6VXNlcjE5NzIyNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1972276?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugadams",
      "html_url": "https://github.com/hugadams",
      "followers_url": "https://api.github.com/users/hugadams/followers",
      "following_url": "https://api.github.com/users/hugadams/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugadams/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugadams/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugadams/subscriptions",
      "organizations_url": "https://api.github.com/users/hugadams/orgs",
      "repos_url": "https://api.github.com/users/hugadams/repos",
      "events_url": "https://api.github.com/users/hugadams/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugadams/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-28T22:23:03Z",
    "updated_at": "2014-07-28T22:23:03Z",
    "author_association": "NONE",
    "body": "Ha ya exactly!  Thanks, never even saw this thread.  I'll post my notebook there for reference as well.  I must not understand the intervalindex then.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50589328",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50589328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50589328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTg5MzI4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T08:48:18Z",
    "updated_at": "2014-07-30T08:48:18Z",
    "author_association": "MEMBER",
    "body": "Here are a bunch of test cases: https://github.com/shoyer/pandas/commit/838a59767a0611ea7a07f80f4634cf39d2743046\n\nI can open a PR if that makes things easier.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50607524",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50607524",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50607524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjA3NTI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T12:27:19Z",
    "updated_at": "2014-07-30T12:27:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer that's a nice test suite...link is good for now. but of course expand to an actual impl!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50649670",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50649670",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50649670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjQ5Njcw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T17:23:53Z",
    "updated_at": "2014-07-30T17:23:53Z",
    "author_association": "MEMBER",
    "body": "I have updated the first post with some revisions to implementation details (per by test-cases). Basically, I realized that there is no a strong need to require that intervals be contiguous, and dropping that requirement should add some nice flexibility (e.g., the ability to subsample intervals with `idx[::step]`).\n\n@jreback Haha, I thought that was your job? ;)\n\nIn all seriousness, I will probably get around to this at some point but the existing Index objects are pretty complex. #5080 would help -- I'm not looking forward to writing kludges around this also being an `ndarray`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50650043",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-50650043",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 50650043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjUwMDQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T17:26:26Z",
    "updated_at": "2014-07-30T17:26:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "well this is the removing of ndarray from Index!\n\nhttps://github.com/jreback/pandas/tree/index\n\nalmost done\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61397770",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-61397770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 61397770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxMzk3Nzcw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-02T09:11:00Z",
    "updated_at": "2014-11-02T09:11:00Z",
    "author_association": "MEMBER",
    "body": "First draft PR is up in #8707. So far, this is actually much easier than I feared...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71794646",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-71794646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 71794646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNzk0NjQ2",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-28T07:58:37Z",
    "updated_at": "2015-01-28T07:58:37Z",
    "author_association": "MEMBER",
    "body": "For those of you not following along in #901 (which is honestly a dup of this issue), I am now thinking that the implementation here should probably use an actual interval-tree rather than relying on sortedness.\n\nAlso, for future reference: a suitable data-structure for an index of multi-dimensional intervals  (an `NDIntervalIndex`) is an [\"R-tree\"](http://en.wikipedia.org/wiki/R-tree). And in fact, this is quite a handy data-structure for GIS queries -- there is an R-tree now implemented in Geopandas: https://github.com/geopandas/geopandas/issues/140\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387091110",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-387091110",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 387091110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzA5MTExMA==",
    "user": {
      "login": "blalterman",
      "id": 12834389,
      "node_id": "MDQ6VXNlcjEyODM0Mzg5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12834389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blalterman",
      "html_url": "https://github.com/blalterman",
      "followers_url": "https://api.github.com/users/blalterman/followers",
      "following_url": "https://api.github.com/users/blalterman/following{/other_user}",
      "gists_url": "https://api.github.com/users/blalterman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blalterman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blalterman/subscriptions",
      "organizations_url": "https://api.github.com/users/blalterman/orgs",
      "repos_url": "https://api.github.com/users/blalterman/repos",
      "events_url": "https://api.github.com/users/blalterman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blalterman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T14:54:01Z",
    "updated_at": "2018-05-07T14:54:01Z",
    "author_association": "NONE",
    "body": "I'm not sure if this belongs here or elsewhere. However, I'm trying to not clutter everything uselessly by just adding to the ever growing list of issues. If this belongs elsewhere, I'm happy to move it.\r\n\r\nIs there a reason `pd.cut` returns a `CategoricalIndex` instead of an `IntervalIndex`? The current behavior is\r\n\r\n```python\r\n>>> pd.cut(np.linspace(0,` 100), bins=np.linspace(0, 101, 10)).value_counts().sort_index().index\r\nCategoricalIndex([   (0.0, 11.222], (11.222, 22.444], (22.444, 33.667],\r\n                  (33.667, 44.889], (44.889, 56.111], (56.111, 67.333],\r\n                  (67.333, 78.556], (78.556, 89.778],  (89.778, 101.0]],\r\n                 categories=[(0.0, 11.222], (11.222, 22.444], (22.444, 33.667], (33.667, 44.889], (44.889, 56.111], (56.111, 67.333], (67.333, 78.556], (78.556, 89.778], ...], ordered=True, dtype='category')\r\n```\r\n\r\ninstead of the following.\r\n```python\r\nIntervalIndex([(0.0, 11.222], (11.222, 22.444], (22.444, 33.667], (33.667, 44.889], (44.889, 56.111], (56.111, 67.333], (67.333, 78.556], (78.556, 89.778], (89.778, 101.0]]\r\n              closed='right',\r\n              dtype='interval[float64]')\r\n```\r\n\r\nI would naively think that an `IntervalIndex` would make more sense here. It might also allow simplified plotting behavior such that \r\n\r\n```python\r\ncut = pd.cut(np.linspace(0, 100), bins=np.linspace(0, 101, 10)).value_counts().sort_index()\r\ncut.plot(index_part=\"mid\")\r\n```\r\nwould plot the counts vs. the index mid point."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387235717",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-387235717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 387235717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzIzNTcxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T23:19:28Z",
    "updated_at": "2018-05-07T23:19:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "the categories are an interval index or whatever type we are actually binning\r\n\r\ncut/qcut return categorical always"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387241562",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-387241562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 387241562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI0MTU2Mg==",
    "user": {
      "login": "blalterman",
      "id": 12834389,
      "node_id": "MDQ6VXNlcjEyODM0Mzg5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12834389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blalterman",
      "html_url": "https://github.com/blalterman",
      "followers_url": "https://api.github.com/users/blalterman/followers",
      "following_url": "https://api.github.com/users/blalterman/following{/other_user}",
      "gists_url": "https://api.github.com/users/blalterman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blalterman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blalterman/subscriptions",
      "organizations_url": "https://api.github.com/users/blalterman/orgs",
      "repos_url": "https://api.github.com/users/blalterman/repos",
      "events_url": "https://api.github.com/users/blalterman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blalterman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-07T23:55:04Z",
    "updated_at": "2018-05-07T23:55:04Z",
    "author_association": "NONE",
    "body": "I understand. However, a categorical index does not have the same methods\nand properties available as an interval index. Is it at all reasonable to\nreturn an interval index when the categories are purely numeric? Are there\nreasons to use a categorical over an interval?\n\nBen\n\n---------------------\nB. L. Alterman\nCandidate, Applied Physics\nSolar and Heliospheric Research Group\nClimate and Space Sciences and Engineering\nUniversity of Michigan\nbalterma@umich.edu\n\nOn Mon, May 7, 2018 at 7:19 PM, Jeff Reback <notifications@github.com>\nwrote:\n\n> the categories are an interval index or whatever type we are actually\n> binning\n>\n> cut/qcut return categorical always\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/7640#issuecomment-387235717>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AMPWVbkMDlkY9ZtE0QDOdOjmLJNBG41Gks5twNaXgaJpZM4CJWMy>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387242703",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-387242703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 387242703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI0MjcwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T00:02:19Z",
    "updated_at": "2018-05-08T00:02:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bla1089 I did consider return an ``IntervalIndex`` from cut/qcut. But rejected as:\r\n\r\n- it broken backward compat in a big way\r\n- the implementation of II is not efficient when stored in a Series (going to better in 0.24 with ExtensionArray)\r\n- indexing is quite a bit simpler\r\n\r\nSo in theory it is possible, but I don't really see a compelling reason to switch. cats are a nicer holder type of data like this. What exactly is the issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387243460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7640#issuecomment-387243460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7640",
    "id": 387243460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzI0MzQ2MA==",
    "user": {
      "login": "blalterman",
      "id": 12834389,
      "node_id": "MDQ6VXNlcjEyODM0Mzg5",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12834389?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blalterman",
      "html_url": "https://github.com/blalterman",
      "followers_url": "https://api.github.com/users/blalterman/followers",
      "following_url": "https://api.github.com/users/blalterman/following{/other_user}",
      "gists_url": "https://api.github.com/users/blalterman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blalterman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blalterman/subscriptions",
      "organizations_url": "https://api.github.com/users/blalterman/orgs",
      "repos_url": "https://api.github.com/users/blalterman/repos",
      "events_url": "https://api.github.com/users/blalterman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blalterman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-08T00:06:51Z",
    "updated_at": "2018-05-08T00:06:51Z",
    "author_association": "NONE",
    "body": "@jreback I find myself doing the following type of thing rather often:\r\n\r\n```python\r\ncut = pd.cut(np.linspace(0, 100), bins=np.linspace(0, 101, 10)).value_counts().sort_index()\r\ncut.index = pd.IntervalIndex(cut.index).mid.astype(float)\r\ncut.plot(drawstyle=\"steps-mid\")\r\n```\r\n\r\nI hadn't seen a particular issue for it and I was wondering if I was missing something. The backwards compat issue is certainly relevant."
  }
]
