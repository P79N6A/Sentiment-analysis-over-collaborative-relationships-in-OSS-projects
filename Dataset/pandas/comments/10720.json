[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/130043474",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10720#issuecomment-130043474",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10720",
    "id": 130043474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDA0MzQ3NA==",
    "user": {
      "login": "springcoil",
      "id": 983944,
      "node_id": "MDQ6VXNlcjk4Mzk0NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/983944?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/springcoil",
      "html_url": "https://github.com/springcoil",
      "followers_url": "https://api.github.com/users/springcoil/followers",
      "following_url": "https://api.github.com/users/springcoil/following{/other_user}",
      "gists_url": "https://api.github.com/users/springcoil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/springcoil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/springcoil/subscriptions",
      "organizations_url": "https://api.github.com/users/springcoil/orgs",
      "repos_url": "https://api.github.com/users/springcoil/repos",
      "events_url": "https://api.github.com/users/springcoil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/springcoil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-11T19:52:14Z",
    "updated_at": "2015-08-11T19:52:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was looking at this today, what actually does need to be changed in the code? I'm having trouble understanding the logic that would need this error? Does anyone have an example?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/130092776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10720#issuecomment-130092776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10720",
    "id": 130092776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDA5Mjc3Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-11T22:11:12Z",
    "updated_at": "2015-08-11T22:11:12Z",
    "author_association": "MEMBER",
    "body": "The idea is that when an error is raised by `to_datetime` (all different cases when a the string cannot be parsed), you get an additional message saying that you can use `errors='coerce'` to coerce to NaT and in this way suppress the error.\n\nE.g.:\n\n```\nIn [6]: pd.to_datetime('something', errors='raise')\n\nValueError: Unknown string format\n```\n\ncould say something like \"ValueError: Unknown string format. You can coerce errors to NaT by passing errors='coerce'\"\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/130101005",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10720#issuecomment-130101005",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10720",
    "id": 130101005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDEwMTAwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-11T22:45:51Z",
    "updated_at": "2015-08-11T22:45:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@springcoil so there are lots of tests that assert errors using `to_datetime`. Ideallly would go thru those and see what they produce, and fix those that are not either context sensitive (e.g. maybe can give a more informative message), and also add that you can pass `error='coerce'` to get a `NaT` if desired.\n\nmost of these tests are in `tseries/tests/test_timeseries.py`\n"
  }
]
