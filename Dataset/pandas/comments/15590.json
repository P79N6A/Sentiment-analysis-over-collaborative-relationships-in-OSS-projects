[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284369738",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15590#issuecomment-284369738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15590",
    "id": 284369738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDM2OTczOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T11:19:31Z",
    "updated_at": "2017-03-06T11:19:31Z",
    "author_association": "MEMBER",
    "body": "There is one example in the tutorial docs: http://pandas.pydata.org/pandas-docs/stable/advanced.html#advanced-reindexing-and-alignment\r\n\r\nWhat is not clear about the argument, is that it seems to work for both the passed and calling index:\r\n\r\n```\r\nIn [1]: s = pd.Series(range(2), index=['a', 'c'])\r\n\r\nIn [2]: s_multi = pd.Series(range(9), index=pd.MultiIndex.from_product([['A', 'B', 'C'], ['a', 'b', 'c']]))\r\n\r\n# reindexing a specific level of the calling multi-indexed object\r\nIn [3]: s_multi.reindex(['a', 'c'], level=1)\r\nOut[3]: \r\nA  a    0\r\n   c    2\r\nB  a    3\r\n   c    5\r\nC  a    6\r\n   c    8\r\ndtype: int64\r\n\r\n# broadcasting the calling object along the level of the passed multi-index\r\nIn [4]: s.reindex(s_multi.index, level=1)\r\nOut[4]: \r\nA  a    0.0\r\n   b    NaN\r\n   c    1.0\r\nB  a    0.0\r\n   b    NaN\r\n   c    1.0\r\nC  a    0.0\r\n   b    NaN\r\n   c    1.0\r\ndtype: float64\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284404476",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15590#issuecomment-284404476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15590",
    "id": 284404476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQwNDQ3Ng==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T14:05:16Z",
    "updated_at": "2017-03-06T14:05:16Z",
    "author_association": "MEMBER",
    "body": "Right... while\r\n\r\n``` python\r\nIn [22]: s_multi.reindex(s_multi.drop(('A', 'a')).index, level=1)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-22-9e6994e0de21> in <module>()\r\n----> 1 s_multi.reindex(s_multi.drop(('A', 'a')).index, level=1)\r\n\r\n/home/pietro/nobackup/repo/pandas/pandas/core/series.py in reindex(self, index, **kwargs)\r\n   2372     @Appender(generic._shared_docs['reindex'] % _shared_doc_kwargs)\r\n   2373     def reindex(self, index=None, **kwargs):\r\n-> 2374         return super(Series, self).reindex(index=index, **kwargs)\r\n   2375 \r\n   2376     @Appender(generic._shared_docs['fillna'] % _shared_doc_kwargs)\r\n\r\n/home/pietro/nobackup/repo/pandas/pandas/core/generic.py in reindex(self, *args, **kwargs)\r\n   2331         # perform the reindex on the axes\r\n   2332         return self._reindex_axes(axes, level, limit, tolerance, method,\r\n-> 2333                                   fill_value, copy).__finalize__(self)\r\n   2334 \r\n   2335     def _reindex_axes(self, axes, level, limit, tolerance, method, fill_value,\r\n\r\n/home/pietro/nobackup/repo/pandas/pandas/core/generic.py in _reindex_axes(self, axes, level, limit, tolerance, method, fill_value, copy)\r\n   2344             ax = self._get_axis(a)\r\n   2345             new_index, indexer = ax.reindex(labels, level=level, limit=limit,\r\n-> 2346                                             tolerance=tolerance, method=method)\r\n   2347 \r\n   2348             axis = self._get_axis_number(a)\r\n\r\n/home/pietro/nobackup/repo/pandas/pandas/indexes/multi.py in reindex(self, target, method, level, limit, tolerance)\r\n   1652             target, indexer, _ = self._join_level(target, level, how='right',\r\n   1653                                                   return_indexers=True,\r\n-> 1654                                                   keep_order=False)\r\n   1655         else:\r\n   1656             target = _ensure_index(target)\r\n\r\n/home/pietro/nobackup/repo/pandas/pandas/indexes/base.py in _join_level(self, other, level, how, return_indexers, keep_order)\r\n   2995 \r\n   2996         if isinstance(self, MultiIndex) and isinstance(other, MultiIndex):\r\n-> 2997             raise TypeError('Join on level between two MultiIndex objects '\r\n   2998                             'is ambiguous')\r\n   2999 \r\n\r\nTypeError: Join on level between two MultiIndex objects is ambiguous\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284408801",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15590#issuecomment-284408801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15590",
    "id": 284408801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQwODgwMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T14:22:13Z",
    "updated_at": "2017-03-06T14:22:13Z",
    "author_association": "MEMBER",
    "body": "@toobaz yes, but I *think* that is to be expected? Presuming that it specifies level=1 for both calling and passed index, it is indeed not clear what the result should be (therefore \" is ambiguous\")"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/284414575",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15590#issuecomment-284414575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15590",
    "id": 284414575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDQxNDU3NQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-06T14:41:47Z",
    "updated_at": "2017-03-06T14:41:47Z",
    "author_association": "MEMBER",
    "body": "Yes, you are right, I just think it is worth mentioning it in the docstring (users _might_ expect something from it when the specified level of either of the two indexes is unique)."
  }
]
