[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49939736",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-49939736",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 49939736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTM5NzM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T21:37:32Z",
    "updated_at": "2014-07-23T21:37:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "you need to use `read_sql_query`; `read_sql` uses a heurestic to figure out which of `read_sql_query` or `read_sql_table` needs to be called; its 'wrong' in that since you  have an embedded select I think it thinks  this is a table.\n\nI am not sure this is a bug in the heurestic or user error (in that you need to explicity  call a different function here). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49940816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-49940816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 49940816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQwODE2",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T21:46:44Z",
    "updated_at": "2014-07-23T21:48:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I call it a bug (but feel free to disagree), and here's the one liner to fix it:\n\nwas\n\n``` python\nif pandas_sql.has_table(sql):\n        pandas_sql.meta.reflect(only=[sql])\n        return pandas_sql.read_table(\n            sql, index_col=index_col, coerce_float=coerce_float,\n            parse_dates=parse_dates, columns=columns)\n```\n\nWorks with:\n\n``` python\nif pandas_sql.get_table(sql) is not None:\n        pandas_sql.meta.reflect(only=[sql])\n        return pandas_sql.read_table(\n            sql, index_col=index_col, coerce_float=coerce_float,\n            parse_dates=parse_dates, columns=columns)\n```\n\nNote that the [docs](http://pandas.pydata.org/pandas-docs/dev/generated/pandas.io.sql.read_sql.html) just say that the first argument is a query (maybe I'm missing something, but what else would it be other than a `SELECT` statement?) - it doesn't have to be a table.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49941116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-49941116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 49941116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQxMTE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T21:49:11Z",
    "updated_at": "2014-07-23T21:49:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, seems reasonable. want to do a pull-request (with a tests) for this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49943802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-49943802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 49943802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQzODAy",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T22:15:37Z",
    "updated_at": "2014-07-23T22:15:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will try to. I suck at git, and I have to wait 'til I have access to my linux box so I can build pandas, but I'll do my best :)\n\nIn terms of tests, what do we need? I don't have access to all the different database types that `SQLAlchemy` supports, and so I can't be sure that I'll be writing correct SQL. Is it enough to just have a test in `pandas.io.tests.test_sql.TestMySQLAlchemy` that makes sure you can do a `read_sql` query with an `as foo` subclause? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49943929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-49943929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 49943929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQzOTI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T22:16:59Z",
    "updated_at": "2014-07-23T22:16:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think u can make a reasonable generic one yes?\n\nthis should be tested on all engines\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49944816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-49944816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 49944816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5OTQ0ODE2",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-23T22:26:06Z",
    "updated_at": "2014-07-23T22:26:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK - we'll see what I come up with :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50475945",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-50475945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 50475945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDc1OTQ1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T13:31:10Z",
    "updated_at": "2014-07-29T13:31:10Z",
    "author_association": "MEMBER",
    "body": "@maxgrenderjones Thanks for the report. However, I can't reproduce this. \nCan you see if you still get the error with this small test case?\n\n```\ndf = pd.DataFrame({'a': range(3), 'b':list('abc')})\ndf.to_sql('test', engine, index=False, if_exists='replace')\npd.read_sql('test', engine)\npd.read_sql('SELECT test.a FROM test LIMIT 1', engine)\npd.read_sql('SELECT test.a AS testa FROM test LIMIT 1', engine)\n```\n\nI am running this with sqlalchemy 9.6, MySQL 5.6 and pymysql 0.6.1. Would it be possible it has to do something wih MariaDB or your python driver?\n\nAnd for the docs, if you look at the current one: http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_sql.html, the text should already be updated to reflect the current situation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50476887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-50476887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 50476887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDc2ODg3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T13:39:18Z",
    "updated_at": "2014-07-29T13:39:18Z",
    "author_association": "MEMBER",
    "body": "And BTW, it seems to me like a bug in `has_table`, no? As this should just return False if the table does not exist, or if it is an \"incorrect\" table name (as the error report says). So maybe a bug in sqlalchemy or the python driver you are using (but difficult to say as I couldn't reproduce it)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50488674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-50488674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 50488674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNDg4Njc0",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T15:04:29Z",
    "updated_at": "2014-07-29T15:07:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @jorisvandenbossche, looks like there's more to this one than would appear at first glance\n\nBefore I begin, my versions:\n- SQLAlchemy: 0.9.4\n- Pandas: 0.14.1\n- PyMySQL: 0.6.2.None\n- MySQLdb: 1.2.5\n- oursql: 0.9.3.1\n\nMy test code\n\n``` python\nreload(pandas)\nreload(pandas.io)\nreload(pandas.io.sql)\nfrom IPython.display import display\nfor engine in [model.getOurSQLEngine(), model.getMySQLEngine(), model.getPyMySQLEngine()]:\n    print(engine.dialect.driver)\n    metadata=MetaData(bind=engine)\n    metadata.reflect()\n    df = pandas.DataFrame({'a': range(3), 'b':list('abc')})\n    testtable='test'\n    df.to_sql(testtable, engine, index=False, if_exists='replace')\n    display(pandas.io.sql.read_sql(testtable, engine))\n    try:\n        display(pandas.read_sql(testtable, engine))\n    except Exception as e:\n        print(e)\n    display(pandas.io.sql.read_sql('SELECT %s.a FROM %s LIMIT 1' % (testtable, testtable), engine))\n    display(pandas.io.sql.read_sql('SELECT %s.a AS aid FROM %s LIMIT 1' % (testtable, testtable), engine))\n```\n\nOutput:\n\n```\noursql\na   b\n0   0   a\n1   1   b\n2   2   c\n(ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'test' at line 1\", None) 'test' ()\na\n0   0\naid\n0   0\nmysqldb\na   b\n0   0   a\n1   1   b\n2   2   c\n(ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'test' at line 1\") 'test' ()\na\n0   0\naid\n0   0\npymysql\na   b\n0   0   a\n1   1   b\n2   2   c\n(ProgrammingError) (1064, u\"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'test' at line 1\") 'test' ()\na\n0   0\naid\n0   0\n```\n\nSo note that `pandas.read_sql` throws an exception, but `pandas.io.sql.read_sql` does not. Either way, the issue I was having before, seems to have vanished.\n\nNow run the same code, changing the for loop to:\n\n``` python\nfor engine in [model.getOurSQLEngine(), model.getMySQLEngine(), model.getPyMySQLEngine()]:\n    print(engine.dialect.driver)\n    metadata=MetaData(bind=engine)\n    metadata.reflect()\n    df = pandas.DataFrame({'a': range(3), 'b':list('abc')})\n    testtable='tablewithaverylongname'\n    df.to_sql(testtable, engine, index=False, if_exists='replace')\n    display(pandas.io.sql.read_sql(testtable, engine))\n    try:\n        display(pandas.read_sql(testtable, engine))\n    except Exception as e:\n        print(e)\n    try:\n        display(pandas.io.sql.read_sql('SELECT %s.a FROM %s LIMIT 1' % (testtable, testtable), engine))\n        display(pandas.io.sql.read_sql('SELECT %s.a AS aid FROM %s LIMIT 1' % (testtable, testtable), engine))\n    except Exception as e:\n        print(e)\n```\n\nand our issue comes back again\n\n```\noursql\na   b\n0   0   a\n1   1   b\n2   2   c\n(ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'tablewithaverylongname' at line 1\", None) 'tablewithaverylongname' ()\n(ProgrammingError) (1103, \"Incorrect table name 'SELECT tablewithaverylongname.a FROM tablewithaverylongname LIMIT 1'\", None) 'DESCRIBE `SELECT tablewithaverylongname.a FROM tablewithaverylongname LIMIT 1`' ()\nmysqldb\na   b\n0   0   a\n1   1   b\n2   2   c\n(ProgrammingError) (1064, \"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'tablewithaverylongname' at line 1\") 'tablewithaverylongname' ()\n(ProgrammingError) (1103, \"Incorrect table name 'SELECT tablewithaverylongname.a FROM tablewithaverylongname LIMIT 1'\") 'DESCRIBE `SELECT tablewithaverylongname.a FROM tablewithaverylongname LIMIT 1`' ()\npymysql\na   b\n0   0   a\n1   1   b\n2   2   c\n(ProgrammingError) (1064, u\"You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'tablewithaverylongname' at line 1\") 'tablewithaverylongname' ()\n(ProgrammingError) (1103, u\"Incorrect table name 'SELECT tablewithaverylongname.a FROM tablewithaverylongname LIMIT 1'\") 'DESCRIBE `SELECT tablewithaverylongname.a FROM tablewithaverylongname LIMIT 1`' ()\n```\n\nP.S. fwiw, `tablewithaverylongname` was created successfully, and contains what we expect it to contain\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50519779",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-50519779",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 50519779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNTE5Nzc5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-29T18:42:09Z",
    "updated_at": "2014-07-29T18:42:09Z",
    "author_association": "MEMBER",
    "body": "Hmm, very strange:\n- first, `pd.read_sql` and `pd.io.sql.read_sql` are exactly the same, so that should not give a difference (just look what is printed when you type 'pd.read_sql')\n- If I run your example code on my pymysql engine, I don't get any error for the first example, and I get another error for the second example code (I get `\"Identifier name 'SELECT tablewithaverylongname.a FROM tablewithaverylongname LIMIT 1' is too long\"` -> the 'table name' (the select statement) has become too long because of the long table name)\n\nAre you sure you are picking the correct pandas version? (`pandas.__version__` gives 0.14.1?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51583881",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-51583881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 51583881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTgzODgx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T10:04:21Z",
    "updated_at": "2014-08-08T10:09:15Z",
    "author_association": "MEMBER",
    "body": "@maxgrenderjones See #7961. Can you check if this solves the issue? (difficult to check for me, as I couldn't reproduce it, but this fix should least prevent an error when `has_table` fails).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51586438",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-51586438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 51586438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTg2NDM4",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T10:36:34Z",
    "updated_at": "2014-08-08T10:36:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will do\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52388720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-52388720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 52388720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzg4NzIw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-16T09:36:56Z",
    "updated_at": "2014-08-16T09:36:56Z",
    "author_association": "MEMBER",
    "body": "@maxgrenderjones Have you been able to test it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52433407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-52433407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 52433407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNDMzNDA3",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-17T20:14:54Z",
    "updated_at": "2014-08-17T20:14:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixes the issue. (Note that my previous `pandas.io` is different from `pandas` result was a red herring - I'd called `reload` on one but not the other so they weren't the same thing).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53031688",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7826#issuecomment-53031688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7826",
    "id": 53031688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDMxNjg4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-22T07:36:07Z",
    "updated_at": "2014-08-22T07:36:07Z",
    "author_association": "MEMBER",
    "body": "@maxgrenderjones Thanks for testing!\n"
  }
]
