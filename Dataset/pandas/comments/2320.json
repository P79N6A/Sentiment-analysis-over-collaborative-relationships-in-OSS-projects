[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17852911",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2320#issuecomment-17852911",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2320",
    "id": 17852911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODUyOTEx",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-14T02:09:22Z",
    "updated_at": "2013-05-14T02:09:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Apparently the reason why 'ohlc' does not work for DataFrame.resample is that it only can create new column names `['open','close','high','low']` without prepending it with the original column name. Wouldn't the use of the column name as prefix already enable this function to be useable on DataFrames?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23733873",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2320#issuecomment-23733873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2320",
    "id": 23733873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzMzODcz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T18:04:27Z",
    "updated_at": "2013-09-03T18:04:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "[Example on SO](http://stackoverflow.com/questions/18593427/how-to-convert-time-series-data-with-pandas-and-show-graph-via-highstock):\n\n```\nIn [1]: df = pd.read_clipboard(sep='\\s\\s+')\n\nIn [2]: df\nOut[2]: \n    TIMESTAMP  PRICE      VOLUME\n0  1294311545  24990  1500000000\n1  1294317813  25499  5000000000\n2  1294318449  25499   100000000\n\nIn [3]: df.TIMESTAMP = pd.to_datetime(df.TIMESTAMP, unit='s')\n\nIn [4]: df.set_index('TIMESTAMP', inplace=True)\n\nIn [5]: vol_ohlc = df['VOLUME'].resample('H', how='ohlc')\n\nIn [6]: price_ohlc = df['PRICE'].resample('H', how='ohlc')\n\nIn [7]: pd.concat([vol_ohlc, price_ohlc], 1, keys=['VOLUME', 'PRICE'])\nOut[7]: \n                         VOLUME                                      PRICE  \\\n                           open        high         low       close   open   \nTIMESTAMP                                                                    \n2011-01-06 10:00:00  1500000000  1500000000  1500000000  1500000000  24990   \n2011-01-06 11:00:00         NaN         NaN         NaN         NaN    NaN   \n2011-01-06 12:00:00  5000000000  5000000000   100000000   100000000  25499   \n\n\n                      high    low  close  \nTIMESTAMP                                 \n2011-01-06 10:00:00  24990  24990  24990  \n2011-01-06 11:00:00    NaN    NaN    NaN  \n2011-01-06 12:00:00  25499  25499  25499 \n```\n\nSo lazy implementation of this is just:\n\n```\npd.concat((df.iloc[:, i].resample(rule, how='ohlc')\n                    for i, _ in enumerate(df.columns)),\n                keys=df.columns, \n                axis=1)\n```\n\nNot sure where to put that...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23734804",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2320#issuecomment-23734804",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2320",
    "id": 23734804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzM0ODA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T18:17:03Z",
    "updated_at": "2013-09-03T18:17:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think their is an issue about this already (can't find ATM)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23746293",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2320#issuecomment-23746293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2320",
    "id": 23746293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzQ2Mjkz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T20:57:43Z",
    "updated_at": "2013-09-03T20:57:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback not sure if this should go in groupby's ohlc function, if so was wondering if you know a way to iterate through columns SeriesGroupbys:\n\n```\nipdb> self\n<pandas.core.groupby.DataFrameGroupBy object at 0x101d9b090>\nipdb> for i in self._iterate_slices(): print i\n('PRICE', 2011-01-06 10:59:05    24990\n2011-01-06 12:43:33    25499\n2011-01-06 12:54:09    25499\nName: PRICE, dtype: int64)\n('VOLUME', 2011-01-06 10:59:05    1500000000\n2011-01-06 12:43:33    5000000000\n2011-01-06 12:54:09     100000000\nName: VOLUME, dtype: int64)\nipdb> self['PRICE']  # I want these\n<pandas.core.groupby.SeriesGroupBy object at 0x10455ff10>\n```\n\n(Basically an iloc for DataFrameGroupbys)\n\ncould use column comes via self.obj.columns but that would fail for dupe names.  :(\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23748143",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2320#issuecomment-23748143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2320",
    "id": 23748143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzQ4MTQz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T21:23:49Z",
    "updated_at": "2013-09-03T21:23:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "`get_group` maybe? I would have to step thru...don't know otomh (off the top of my head)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23752705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2320#issuecomment-23752705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2320",
    "id": 23752705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzUyNzA1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-03T22:34:44Z",
    "updated_at": "2013-09-03T22:35:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmmm, not sure there is I created _iterate_column_groupbys to iterate with (name, SeriesGroupby). Then this drops out easy.\n\n_Quite a few methods are broken for certain groupbys, have created issue before about it._\n\nAlso, resample doesn't work with dupe columns atm anyway. Maybe this method will help, atm seem to always be accessed via name (as no other choice).\n"
  }
]
