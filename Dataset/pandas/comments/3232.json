[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15771836",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-15771836",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 15771836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzcxODM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-02T12:22:34Z",
    "updated_at": "2013-04-02T12:22:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@nehalecky as an aside, this is a good case for appending your data with an `HDFStore` , you then get query semantics (and its saved too!) http://pandas.pydata.org/pandas-docs/dev/io.html#hdf5-pytables (and some more advanced examples http://pandas.pydata.org/pandas-docs/dev/cookbook.html#cookbook-hdf)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15818213",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-15818213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 15818213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE4MjEz",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-03T04:47:36Z",
    "updated_at": "2013-04-03T04:47:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @jreback for the note. I do use HDFStore when I persist data to my local machine, and it works great for that, however, the application I am referring to above is persisting data to a remote store, which will eventually have to scale horizontally. For both those reasons, the use of hdf5 isn't an option, unfortunately. :( \n\nActually, for preprocessing analysis, I am storing the raw record data as heavily compressed hdf5 binary in the db now (via pandas HDFStore). This allows me to retrieve individual records and load them directly to DataFrame, tying directly into my analysis stack, which is nice. I am really looking forward to whatever solutions are implemented for binary storage of data frame (#686 and all), but this is how I'm rolling for now. ;) \n\nBTW, this writeup (http://pandas.pydata.org/pandas-docs/dev/io.html#hdf5-pytables) is awesomeness, and your SO answer for pandas workflow is off the charts (http://stackoverflow.com/questions/14262433/large-data-work-flows-using-pandas), thank you!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15828175",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-15828175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 15828175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODI4MTc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-03T09:59:17Z",
    "updated_at": "2013-04-03T09:59:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "glad to here the docs are useful!\n\nHeres another resource: http://pandas.pydata.org/pandas-docs/dev/cookbook.html#hdfstore\n\nContributions needed!\n\nIf you have the time,  http://msgpack.org is probably a reasonable format (though doesn't support compression directly), is I think a good choice, and probably simple too implement (and db storagable).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15929349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-15929349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 15929349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTI5MzQ5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-04T22:55:32Z",
    "updated_at": "2013-04-04T22:55:32Z",
    "author_association": "NONE",
    "body": "In the general case concat can join any two indices types, or `PeriodIndex`'s of different freqs\nor `PeriodIndex`'s of identical freq but with an arbitrary gap, so what you're describing is\nvery much a special case. If the resample time is hurting you in terms of online performance \n(doesn't sound like it), you can always keep the time signatures as a column rather then an index,\nand perform the resample offline.\n\nAnother angle would rely on the fact that although `resample` and `date_range` are both O(N),\n `data_range` (as you would expect) has much nicer constants, so concievavly you could \noptimize by constructing a new dataframe with the values ndaddray and a \nnew index directly constructed from the timestamps of the inital and last sample. \nThat's if your have no timing variation, no dropped samples, and really need to\ncut down processing time anyway you can.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16876445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-16876445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 16876445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc2NDQ1",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-23T18:18:18Z",
    "updated_at": "2013-04-23T18:18:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @y-p, thanks for the tips. \n\nAgreed it's a very special case, and I right now it isn't a major performance issue, however, when we begin to scale, it could be. In the meantime, I'll try and implement your suggestions and I'll keep you posted as to how this performs when we things begin to get bigger. :)\n\nThanks again.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403164461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-403164461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 403164461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE2NDQ2MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:46:16Z",
    "updated_at": "2018-07-06T22:46:16Z",
    "author_association": "MEMBER",
    "body": "Still an issue on 23.2"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439019982",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-439019982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 439019982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTAxOTk4Mg==",
    "user": {
      "login": "scootty1",
      "id": 38665102,
      "node_id": "MDQ6VXNlcjM4NjY1MTAy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/38665102?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scootty1",
      "html_url": "https://github.com/scootty1",
      "followers_url": "https://api.github.com/users/scootty1/followers",
      "following_url": "https://api.github.com/users/scootty1/following{/other_user}",
      "gists_url": "https://api.github.com/users/scootty1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scootty1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scootty1/subscriptions",
      "organizations_url": "https://api.github.com/users/scootty1/orgs",
      "repos_url": "https://api.github.com/users/scootty1/repos",
      "events_url": "https://api.github.com/users/scootty1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scootty1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T12:13:02Z",
    "updated_at": "2018-11-15T12:13:02Z",
    "author_association": "NONE",
    "body": "Still an issue in 0.23.4.\r\nMy current workaround is:\r\n`df.index.freq = df.index.inferred_freq`\r\nIf the index and frequency were continuous before concat, this always seems to be working. \r\nCompared with other methods like resampling or reindexing, this is several orders faster:\r\n```\r\ndf.shape\r\n# Out: (308160, 78)\r\n%timeit df_full.index.freq = df_full.index.inferred_freq\r\n# Out: 73.7 µs ± 8.26 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\r\n%timeit df_full.resample('1T').mean()\r\n# Out: 947 ms ± 58 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n%timeit df_full.reindex(pd.date_range(start=df_full.index[0], end=df_full.index[-1], freq='1T'))\r\n# Out: 117 ms ± 5.22 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n```\r\nSo setting the frequency is about 13k times faster than resample and about 1.6k times faster than reindexing. If it is not known if the indices are contiguous, I'd thus go with reindex. Any opinions/advice on this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439267725",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-439267725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 439267725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTI2NzcyNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T03:10:15Z",
    "updated_at": "2018-11-16T03:10:15Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger did the concat_same_type implementation end up checking if freq could be preserved?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439378805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-439378805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 439378805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTM3ODgwNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T12:29:03Z",
    "updated_at": "2018-11-16T12:29:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nope, but it would certainly make a good standalone PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476464191",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3232#issuecomment-476464191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3232",
    "id": 476464191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQ2NDE5MQ==",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T03:46:15Z",
    "updated_at": "2019-03-26T03:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow! Thanks @jreback and @mroeschke and everyone here!"
  }
]
