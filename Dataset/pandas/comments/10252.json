[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108117167",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108117167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108117167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODExNzE2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T22:34:59Z",
    "updated_at": "2015-06-02T22:34:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @therriault \nshould solve your issue, pls have a look \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108134455",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108134455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108134455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODEzNDQ1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-02T23:53:49Z",
    "updated_at": "2015-06-02T23:53:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I changed this slightly, so that non object/categorical indexes will be coerced (meaning that if you are passing in an object/cat index, or a list of stuff that is object like - e.g. strings), then you would get a categorical out (which is the same as current behavior).\n\nSo the following is essentially equivalent to the above (e.g. we are passing an index-like in, so preserve it) - fyi, this works for lists too, it just needs to be convertible to an Index.\n\n```\nIn [19]: df.groupby(pd.cut(df.x,bins=binedges, labels=pd.DatetimeIndex(['20130101']*len(binlabels))+pd.TimedeltaIndex(binlabels,unit='D'))).y.mean()\nOut[19]: \n2013-01-06      36.464340\n2013-01-16     324.090951\n2013-01-26     591.358244\n2013-02-05    1327.934110\n2013-02-15    1998.929692\n2013-02-25    2813.419476\n2013-03-07    4260.447121\n2013-03-17    5729.868643\n2013-03-27    7208.585942\n2013-04-06    9034.624990\nName: y, dtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108257753",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108257753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108257753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODI1Nzc1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T09:07:15Z",
    "updated_at": "2015-06-03T09:07:15Z",
    "author_association": "MEMBER",
    "body": "@jreback Thanks!\n\nBTW, I understand now our confusion yesterday a bit, you were still talking about the Index that comes out of a groupby with cut, but I think it is simpler to just talk about the output of `cut` itself (as, I think, we agree that a groupby should preserve the dtype, so grouping by a categorical column will give a CategoricalIndex, grouping by an integer column will give a Int64Index, etc ...)\n\nTo summarise with a smaller example:\n\n```\ndf = pd.DataFrame()\ndf['x'] = 100 * np.random.random(5)\ndf['y'] = df.x**2\nbinedges = np.arange(0,110,10)\nbinlabels = np.arange(5,105,10)\n```\n\nSo the **'rule'** is now: _dtype of the resulting Series is the dtype of the provided `binlabels`_ (in 0.16.1 the rule was: always give Categorical Series back):\n\n```\nIn [49]: pd.cut(df.x, bins=binedges, labels=binlabels)\nOut[49]:\n0    65\n1    25\n2    65\n3    65\n4    25\ndtype: int64\n\nIn [50]: pd.cut(df.x, bins=binedges, labels=pd.Categorical(binlabels))\nOut[50]:\n0    65\n1    25\n2    65\n3    65\n4    25\nName: x, dtype: category\nCategories (10, int64): [5 < 15 < 25 < 35 ... 65 < 75 < 85 < 95]\n\n```\n\n(while now (0.16.1) both examples above would return a Categorical Series with integer categories)\n\n@shoyer @TomAugspurger agree with the above?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108262996",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108262996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108262996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODI2Mjk5Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T09:20:07Z",
    "updated_at": "2015-06-03T09:20:07Z",
    "author_association": "MEMBER",
    "body": "@jreback still two comments:\n\n1) What to do with object dtype (as in your last change, you included that when passing eg string array to `labels` (object dtype in pandas), these would result in a Categorical instead of object dtyped Series):\n\n```\nIn [51]: string_labels = np.array(['l_' + str(i) for i in binlabels])\n\nIn [52]: pd.cut(df.x, bins=binedges, labels=string_labels)\nOut[52]:\n0    l_65\n1    l_25\n2    l_65\n3    l_65\n4    l_25\nName: x, dtype: category\nCategories (10, object): [l_5 < l_15 < l_25 < l_35 ... l_65 < l_75 < l_85 < l_95]\n```\n\nThis seems to deviate from the 'rule'. For consistency, I would personally not do this (also return a object Series in the example above, and requiring `labels=pd.Categorical(string_labels)` for obtaining the output above), but I understand that for convenience this can be handy ..\n\n2) How to handle `labels` when the first argument is an array and not a Series. Followng the docs, this should result in a Categorical (which is conceptually equivalent to an array), but now with this PR it returns an Index or a Categorical depending on the labels type:\n\n```\nIn [59]: pd.cut(df.x.values, bins=binedges, labels=binlabels)\nOut[59]: Int64Index([65, 25, 65, 65, 25], dtype='int64')\n\nIn [60]: pd.cut(df.x.values, bins=binedges, labels=pd.Categorical(binlabels))\nOut[60]:\n[65, 25, 65, 65, 25]\nCategories (10, int64): [5 < 15 < 25 < 35 ... 65 < 75 < 85 < 95]\n```\n\nShouldn't the first case be an array?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108368777",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108368777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108368777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODM2ODc3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T12:32:38Z",
    "updated_at": "2015-06-03T12:32:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche slight addition to your rule: when `labels` is not provided the result is a Categorical Series (or maybe an a array once we figure out 2 in your last post).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108373616",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108373616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108373616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODM3MzYxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T12:35:46Z",
    "updated_at": "2015-06-03T12:35:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "no, arrays and Index are equivalent. The output is a `Series`. So by definition you have the values as array-like (we are just discussing the dtype here).\n\n`object` and `categorical` inputs must be the same. Otherwise you have a very odd case of when do output `object` vs. `categorical`. First, the current output is `categorical`, second, these have an almost identical API, and third, you simply lose information if you turn this into an `object` array (as it loses its categories).\n\nThis is ALSO true for integers/datetimes, however I think these are more natural in their non-categorical form already.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108376624",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108376624",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108376624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODM3NjYyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T12:38:15Z",
    "updated_at": "2015-06-03T12:38:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche your last point is the crux of the issue. \n\nWe are making a change here to have the output depend on the input (e.g. what type `labels` actually are).\n\nI think this is for practicality. The output of `pd.cut` is BY DEFINITION a `categorical`. But the user says that instead of the auto-generated labels, they want 'these' labels, BUT they don't want a categorical. So it IS a bit odd.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108380049",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108380049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108380049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODM4MDA0OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T12:42:36Z",
    "updated_at": "2015-06-03T12:45:19Z",
    "author_association": "MEMBER",
    "body": "@jreback Hmm, it is indeed a bit odd, I have to agree.\n\nAnd looking back at older versions (what I forgot yesterday when I looked at this issue), `pd.cut` has always returned a Categorical (also before the implementation of CategoricalBlock and CategoricalIndex, tested with 0.14), _also_ when providing `labels`. \nSo, changing this (eg now returnin int series when providing int labels) _will be_ a API change .. (and not something we should do in a point release, or maybe never)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108382878",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108382878",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108382878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODM4Mjg3OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T12:46:16Z",
    "updated_at": "2015-06-03T12:46:16Z",
    "author_association": "MEMBER",
    "body": "If we look at the original issue that caused this discussion (#10140), that will also be solved by fixing #10254 (at least the plotting issue after the groupby)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108384104",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108384104",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108384104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODM4NDEwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T12:48:07Z",
    "updated_at": "2015-06-03T12:48:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I agree. It IS correct to propgate the labels dtype thru the groupby. Ok let's defer this and see if your plotting 'fix' (at least the first version), solves this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108385696",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-108385696",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 108385696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODM4NTY5Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T12:50:27Z",
    "updated_at": "2015-06-03T12:50:27Z",
    "author_association": "MEMBER",
    "body": "Sorry for missing the point that is has always been a Categorical when I started the discussion yesterday!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110165341",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-110165341",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 110165341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE2NTM0MQ==",
    "user": {
      "login": "therriault",
      "id": 4842513,
      "node_id": "MDQ6VXNlcjQ4NDI1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4842513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therriault",
      "html_url": "https://github.com/therriault",
      "followers_url": "https://api.github.com/users/therriault/followers",
      "following_url": "https://api.github.com/users/therriault/following{/other_user}",
      "gists_url": "https://api.github.com/users/therriault/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therriault/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therriault/subscriptions",
      "organizations_url": "https://api.github.com/users/therriault/orgs",
      "repos_url": "https://api.github.com/users/therriault/repos",
      "events_url": "https://api.github.com/users/therriault/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therriault/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-08T22:48:08Z",
    "updated_at": "2015-06-08T22:48:08Z",
    "author_association": "NONE",
    "body": "Thanks for working through this everyone (and @jreback, sorry for not chiming in earlier). Totally understand the concern about changing the output type, which is not where I meant for this to go at all! \n\nUltimately, it sounds like my original usage just took advantage of an accidental bit of functionality that existed prior to the introduction of categorical indicates but wasn't part of the intended design. As such, if trying to restore it just creates more problems elsewhere, it's probably not worth fixing---it's straightforward enough to work around by assigning `z.index = binlabels` on the next line. (The use of custom bins is what differentiates this from what I'd do with `pd.qcut`---in other circumstances, I've solved the same issue by multiplying by `x = (1/binwidth)`, rounding, then dividing by `x` again, but `pd.cut` seemed a more elegant solution.) If there were an optional `index_type` parameter within `pd.cut` that would attempt to coerce it, that'd make it more convenient, but it wouldn't add much in the way of real functionality.\n\nIn any case, changing the way these are plotted (as you discuss on the other thread) would address the primary issue. My main use case is in creating calibration plots (similar http://scikit-learn.org/stable/auto_examples/calibration/plot_calibration_curve.html, but with custom bins) to validate predictive models (a pretty standard task in the machine learning community). That's why I set the value of the bin to its midpoint and use a numeric scale rather than categorical---there may be empty bins, so a categorical scale that just skips those altogether would make the x- and y-axes out of sync with one another. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110185176",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-110185176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 110185176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDE4NTE3Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-09T00:56:11Z",
    "updated_at": "2015-06-09T00:56:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@therriault thanks for the fb. I think the plotting will be addressed in #10254. Feel free to chime in on that. I am defering the PR that had done on this issue till 0.17.0 and will think about it some more.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/110345158",
    "html_url": "https://github.com/pandas-dev/pandas/pull/10252#issuecomment-110345158",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10252",
    "id": 110345158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDM0NTE1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-09T12:43:58Z",
    "updated_at": "2015-06-09T12:43:58Z",
    "author_association": "MEMBER",
    "body": "@therriault see the discussion in #10254: we are thinking to change the way categoricals are plotted all the same. So in that case, that will not fix your original reported issue and you will still need the workaround.\n\nBTW, for your index, instead of reassigning the indexlabels, you can maybe better just convert your index to an integer one (eg with `z.index = z.index.astype(int)` or `z.index = np.asarray(z.index)`), this will probably be more robust for the case there are bins missing in the result.\n"
  }
]
