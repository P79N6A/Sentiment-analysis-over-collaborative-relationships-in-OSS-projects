[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146322714",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11260#issuecomment-146322714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11260",
    "id": 146322714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjMyMjcxNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T20:47:06Z",
    "updated_at": "2015-10-07T20:47:06Z",
    "author_association": "MEMBER",
    "body": "`corr` on a DataFrame works without another DataFrame? (as it computes the correlation of the combinations of its columns):\n\n```\nIn [4]: df = pd.DataFrame(np.random.randn(10,3))\n\nIn [6]: df.corr()\nOut[6]:\n          0         1         2\n0  1.000000  0.116443  0.127691\n1  0.116443  1.000000  0.472557\n2  0.127691  0.472557  1.000000\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146324502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11260#issuecomment-146324502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11260",
    "id": 146324502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjMyNDUwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T20:52:35Z",
    "updated_at": "2015-10-07T20:52:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "you would have to change the signature of `.corr` to something like:\n\n`def corr(self, other=None, method='pearson', min_periods=1, axis=0, drop=False):`\n\nif `other` is `None` then it becomes `self`. \n\nwith a `Series` is tricker because then you need to know how to broadcast it, e.g. row-wise or column-wise (usually you mean this), though I think we could simply use the `axis` arg for this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241884000",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11260#issuecomment-241884000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11260",
    "id": 241884000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTg4NDAwMA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-23T21:24:42Z",
    "updated_at": "2016-08-23T21:24:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "With the changes to `rolling()`, now `.corr()` is incongruent between the `rolling` & normal implementation:\n\n``` python\n\n# df.corr(series) works with rolling\n\nIn [3]: pd.DataFrame(pd.np.random.rand(10,3)).rolling(window=3).corr(pd.Series(p\n   ...: d.np.random.rand(10)))\nOut[3]: \n          0         1         2\n0       NaN       NaN       NaN\n1       NaN       NaN       NaN\n2 -0.673346  0.020557 -0.907277\n3 -0.751201  0.589850 -0.956764\n4 -0.744613  0.858481 -0.935376\n5 -0.880597  0.611522 -0.990112\n6 -0.968260 -0.530005 -0.095204\n7 -0.241248  0.684507 -0.112472\n8 -0.007827  0.769953 -0.845051\n9 -0.341660  0.995147 -0.994606\n\n# .corr(series) doesn't work without `rolling`:\n\nIn [4]: pd.DataFrame(pd.np.random.rand(10,3)).corr(pd.Series(pd.np.random.rand(1\n   ...: 0)))\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pandas/core/ops.py:716: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n  result = getattr(x, name)(y)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-4-05b6520eb259> in <module>()\n----> 1 pd.DataFrame(pd.np.random.rand(10,3)).corr(pd.Series(pd.np.random.rand(10)))\n\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pandas/core/frame.pyc in corr(self, method, min_periods)\n   4553         mat = numeric_df.values\n   4554 \n-> 4555         if method == 'pearson':\n   4556             correl = _algos.nancorr(com._ensure_float64(mat), minp=min_periods)\n   4557         elif method == 'spearman':\n\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pandas/core/ops.pyc in wrapper(self, other, axis)\n    761                 other = np.asarray(other)\n    762 \n--> 763             res = na_op(values, other)\n    764             if isscalar(res):\n    765                 raise TypeError('Could not compare %s type with Series' %\n\n/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pandas/core/ops.pyc in na_op(x, y)\n    716                 result = getattr(x, name)(y)\n    717                 if result is NotImplemented:\n--> 718                     raise TypeError(\"invalid type comparison\")\n    719             except AttributeError:\n    720                 result = op(x, y)\n\nTypeError: invalid type comparison\n\n```\n"
  }
]
