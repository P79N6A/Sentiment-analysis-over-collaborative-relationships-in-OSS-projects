[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23903299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-23903299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 23903299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAzMjk5",
    "user": {
      "login": "alefnula",
      "id": 188258,
      "node_id": "MDQ6VXNlcjE4ODI1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/188258?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alefnula",
      "html_url": "https://github.com/alefnula",
      "followers_url": "https://api.github.com/users/alefnula/followers",
      "following_url": "https://api.github.com/users/alefnula/following{/other_user}",
      "gists_url": "https://api.github.com/users/alefnula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alefnula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alefnula/subscriptions",
      "organizations_url": "https://api.github.com/users/alefnula/orgs",
      "repos_url": "https://api.github.com/users/alefnula/repos",
      "events_url": "https://api.github.com/users/alefnula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alefnula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-05T21:30:52Z",
    "updated_at": "2013-09-05T21:30:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "It would be also great if something like this could work:\n\n``` python\ndf = pd.DataFrame({'row': list('abc' * 6),\n                   'col': list('xxxxxxyyyyyyzzzzzz'),\n                   'value': np.random.randn(18)+5})\nmean = df.pivot_table(values='value', rows='row',\n                      cols='col', aggfunc='mean')\nerr  = df.pivot_table(values='value', rows='row',\n                      cols='col', aggfunc='std')\nmean.plot(kind='bar', yerr=err)\n```\n\nOr any variation on the subject...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23903739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-23903739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 23903739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAzNzM5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-05T21:37:35Z",
    "updated_at": "2013-09-05T21:37:35Z",
    "author_association": "MEMBER",
    "body": "I've been thinking a little about this API. It's a bit annoying because there umpteen parameters to `matplotlib.errorbar`, so it might be worth making a separate method or a function in `pandas.tools.plotting`. Generally speaking though we don't want to pollute the namespace with a method for every kind of plot, but here it might be necessary.\n\n@alefnula Your input on the API is most welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23904447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-23904447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 23904447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTA0NDQ3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-05T21:49:31Z",
    "updated_at": "2013-09-05T21:50:13Z",
    "author_association": "MEMBER",
    "body": "On second thought, the most obvious of having `plot(kind='line', yerr=yerr, xerr=xerr, **kwds)` is probably the way to go. Maybe allowing `yerr` and `xerr` to be column names?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26095249",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-26095249",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 26095249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDk1MjQ5",
    "user": {
      "login": "kdebrab",
      "id": 1150402,
      "node_id": "MDQ6VXNlcjExNTA0MDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1150402?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kdebrab",
      "html_url": "https://github.com/kdebrab",
      "followers_url": "https://api.github.com/users/kdebrab/followers",
      "following_url": "https://api.github.com/users/kdebrab/following{/other_user}",
      "gists_url": "https://api.github.com/users/kdebrab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kdebrab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kdebrab/subscriptions",
      "organizations_url": "https://api.github.com/users/kdebrab/orgs",
      "repos_url": "https://api.github.com/users/kdebrab/repos",
      "events_url": "https://api.github.com/users/kdebrab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kdebrab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-10T21:56:58Z",
    "updated_at": "2013-10-10T22:13:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not fully mastering the forking, branching, pull requesting process yet, so I try to contribute in this rather primitive way...\n\nThe example of alefnula works perfect if one includes the following few lines at line 1488 of [pandas.tools.plotting](https://github.com/pydata/pandas/blob/master/pandas/tools/plotting.py) (i.e. inside the for loop of the `_make_plot` function):\n\n```\nfrom pandas.core.frame import DataFrame\nif 'yerr' in self.kwds and isinstance(self.kwds['yerr'], DataFrame):\n    kwds['yerr'] = self.kwds['yerr'][label]\n```\n\nWith those lines added, also [this matplotlib gallery example](http://matplotlib.org/examples/pylab_examples/barchart_demo.html) becomes straightforward:\n\n```\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\nindex = tuple('ABDCE')\nmeans_men = (20, 35, 30, 35, 27)\nstd_men = (2, 3, 4, 1, 2)\nmeans_women = (25, 32, 34, 20, 25)\nstd_women = (3, 5, 2, 3, 3)\n\ndf_means = pd.DataFrame({'Men':means_men, 'Women':means_women}, index=index)\ndf_yerr = pd.DataFrame({'Men':std_men, 'Women':std_women}, index=index)\n\nfig, ax = plt.subplots()\ndf_means.plot(kind='bar',\n             ax=ax,\n             color=['b','r'],\n             alpha=0.4,\n             yerr=df_yerr,\n             error_kw={'ecolor': '0.3'})\nax.set(xlabel='Group', ylabel='Scores', title='Scores by group and gender')\nplt.show()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26900519",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-26900519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 26900519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTAwNTE5",
    "user": {
      "login": "athrpf",
      "id": 685082,
      "node_id": "MDQ6VXNlcjY4NTA4Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/685082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/athrpf",
      "html_url": "https://github.com/athrpf",
      "followers_url": "https://api.github.com/users/athrpf/followers",
      "following_url": "https://api.github.com/users/athrpf/following{/other_user}",
      "gists_url": "https://api.github.com/users/athrpf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/athrpf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/athrpf/subscriptions",
      "organizations_url": "https://api.github.com/users/athrpf/orgs",
      "repos_url": "https://api.github.com/users/athrpf/repos",
      "events_url": "https://api.github.com/users/athrpf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/athrpf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-23T12:30:30Z",
    "updated_at": "2013-10-23T12:30:30Z",
    "author_association": "NONE",
    "body": "The solution of kdebrab is definitely the right way to go. However, by default matplotlib uses the same color for the errorbars if no error_kw is provided, which makes it impossible to see. I would suggest using a different default for the error bar colors.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/28932733",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-28932733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 28932733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTMyNzMz",
    "user": {
      "login": "arnaldorusso",
      "id": 1857142,
      "node_id": "MDQ6VXNlcjE4NTcxNDI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1857142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnaldorusso",
      "html_url": "https://github.com/arnaldorusso",
      "followers_url": "https://api.github.com/users/arnaldorusso/followers",
      "following_url": "https://api.github.com/users/arnaldorusso/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnaldorusso/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnaldorusso/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnaldorusso/subscriptions",
      "organizations_url": "https://api.github.com/users/arnaldorusso/orgs",
      "repos_url": "https://api.github.com/users/arnaldorusso/repos",
      "events_url": "https://api.github.com/users/arnaldorusso/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnaldorusso/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-20T21:27:58Z",
    "updated_at": "2013-11-20T21:27:58Z",
    "author_association": "NONE",
    "body": "I have tried this too and could not get this working.\nI also agree with the method cited by [alefnula](https://github.com/alefnula). This was my first try, with no previous knowledge that it could not work.\nOne method that take in consideration the errorbars as a DataFrame or a Serie could be the way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29117541",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-29117541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 29117541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTE3NTQx",
    "user": {
      "login": "r-b-g-b",
      "id": 403541,
      "node_id": "MDQ6VXNlcjQwMzU0MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/403541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r-b-g-b",
      "html_url": "https://github.com/r-b-g-b",
      "followers_url": "https://api.github.com/users/r-b-g-b/followers",
      "following_url": "https://api.github.com/users/r-b-g-b/following{/other_user}",
      "gists_url": "https://api.github.com/users/r-b-g-b/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r-b-g-b/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r-b-g-b/subscriptions",
      "organizations_url": "https://api.github.com/users/r-b-g-b/orgs",
      "repos_url": "https://api.github.com/users/r-b-g-b/repos",
      "events_url": "https://api.github.com/users/r-b-g-b/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r-b-g-b/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-22T23:24:51Z",
    "updated_at": "2013-11-22T23:24:51Z",
    "author_association": "NONE",
    "body": "I've made some headway on implementing this feature (using a lot of the nice suggestions in this thread). Right now my changes allow for errorbars on Line and Bar plots given a list/tuple/ndarray/Series of error values, a DataFrame of label-matched errors, or a column name. There are a couple of things I'm struggling with in terms of code neatness at this point.\n\nLog scale on line plots: the way this currently works is that depending on the values of logx/y keyword arguments, a specific matplotlib function is used (plot, semilogx, semilogy, or loglog). However, the simplest way to get error bars is with the matplotlib's errorbars, which can handle log scales via interacting with the axis directly:\n\n```\nax.set_xscale('log')\nax.set_yscale('log')\n```\n\nI think a clean (but less conservative) way to get around this is to rewrite the line plot code to use matplotlib's plot and handle log axes with ax.set_xscale and ax.set_yscale, which as far as I can tell is what semilogx/y are doing under the hood. Any thoughts? I'll also give it a shot, maybe it's not going to be disruptive as I suspect.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29203701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-29203701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 29203701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjAzNzAx",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T14:08:07Z",
    "updated_at": "2013-11-25T14:08:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can give it a shot.  You'll need to be careful if you're changing things with the `LinePlot` code. Unless I'm looking in the wrong places, I don't think that any of it is tested.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29247606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-29247606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 29247606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ3NjA2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T22:09:50Z",
    "updated_at": "2013-11-25T22:09:50Z",
    "author_association": "MEMBER",
    "body": "It's not directly tested. It's only tested through the user-facing API.\n\n## \n\nBest,\nPhillip Cloud\n\nOn Mon, Nov 25, 2013 at 9:08 AM, Tom Augspurger notifications@github.comwrote:\n\n> You can give it a shot. You'll need to be careful if you're changing\n> things with the LinePlot code. Unless I'm looking in the wrong places, I\n> don't think that any of it is tested.\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/3796#issuecomment-29203701\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29249561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-29249561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 29249561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjQ5NTYx",
    "user": {
      "login": "r-b-g-b",
      "id": 403541,
      "node_id": "MDQ6VXNlcjQwMzU0MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/403541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r-b-g-b",
      "html_url": "https://github.com/r-b-g-b",
      "followers_url": "https://api.github.com/users/r-b-g-b/followers",
      "following_url": "https://api.github.com/users/r-b-g-b/following{/other_user}",
      "gists_url": "https://api.github.com/users/r-b-g-b/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r-b-g-b/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r-b-g-b/subscriptions",
      "organizations_url": "https://api.github.com/users/r-b-g-b/orgs",
      "repos_url": "https://api.github.com/users/r-b-g-b/repos",
      "events_url": "https://api.github.com/users/r-b-g-b/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r-b-g-b/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T22:32:44Z",
    "updated_at": "2013-11-25T22:32:44Z",
    "author_association": "NONE",
    "body": "I'm new to contributing, so I'd welcome any advice on how to make sure this is working properly. I've written some of my own tests, which are basically just running as many different combinations of plot arguments as I can think of. It survives those. Is there anything else I should try?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29251436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-29251436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 29251436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUxNDM2",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T22:58:22Z",
    "updated_at": "2013-11-25T22:58:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Have you pushed your code to a branch yet? Try that and then we can look at it.\n\nHere's some notes on [contributing](https://github.com/pydata/pandas/blob/master/CONTRIBUTING.md#pull-requests), just post if you get stuck somewhere.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29253352",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3796#issuecomment-29253352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3796",
    "id": 29253352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MjUzMzUy",
    "user": {
      "login": "r-b-g-b",
      "id": 403541,
      "node_id": "MDQ6VXNlcjQwMzU0MQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/403541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/r-b-g-b",
      "html_url": "https://github.com/r-b-g-b",
      "followers_url": "https://api.github.com/users/r-b-g-b/followers",
      "following_url": "https://api.github.com/users/r-b-g-b/following{/other_user}",
      "gists_url": "https://api.github.com/users/r-b-g-b/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/r-b-g-b/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/r-b-g-b/subscriptions",
      "organizations_url": "https://api.github.com/users/r-b-g-b/orgs",
      "repos_url": "https://api.github.com/users/r-b-g-b/repos",
      "events_url": "https://api.github.com/users/r-b-g-b/events{/privacy}",
      "received_events_url": "https://api.github.com/users/r-b-g-b/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-25T23:25:28Z",
    "updated_at": "2013-11-25T23:25:28Z",
    "author_association": "NONE",
    "body": "Thanks for the link! I'll try to get up to speed. In the meantime, I've pushed the changes to my github account... https://github.com/gibbonorbiter/pandas. \n"
  }
]
