[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394861836",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21329#issuecomment-394861836",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21329",
    "id": 394861836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg2MTgzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T21:11:40Z",
    "updated_at": "2018-06-05T21:11:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari first class list/set support would require an extension type from the community. as written these are non-idiomatic and non-performant, as well as a headache for indexing. you are much better off NOT using things like this.\r\n\r\nwhat you are asking for is pandas to infer **even more** that it already does. this is not likely to happen. its already way too magical.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394863407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21329#issuecomment-394863407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21329",
    "id": 394863407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg2MzQwNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T21:17:24Z",
    "updated_at": "2018-06-05T21:17:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback How is `.fillna([])` asking to infer anything? It just says: take the argument to this function - in this case `[]` -, and insert it into all the places that are `pd.isnull()`. Fair enough that `dicts` are exempt from this because they get *interpreted*, but why does this have to affect `lists`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394865835",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21329#issuecomment-394865835",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21329",
    "id": 394865835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDg2NTgzNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T21:26:28Z",
    "updated_at": "2018-06-05T21:26:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, when I refactored that code to share it w/ categorical, I couldn't really figure out why we were limiting things to dicts.\r\n\r\nMy best guess is it's because a potential ambiguity between whether the sequence should be \"elementwise\" (use `value[i] to fill self[i]`) or whether the sequence should be treated as a scalar (fill each NA of `self` with `value`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395305625",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21329#issuecomment-395305625",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21329",
    "id": 395305625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTMwNTYyNQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T06:16:51Z",
    "updated_at": "2018-06-07T06:16:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\n\r\nThanks for the input. I think this ambiguity is not so serious. First off `self[i] for i in range(len(value))` does not work for a DF, but more importantly, one can immediately see the effect that the whole list gets filled into every NaN. And with a quick look at the docs, it's clear that a dictionary is needed to distinguish fill-values by column.\r\n\r\nFurthermore, since lists throw errors currently, allowing this would not break any existing code. I think it would be very useful..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/434967437",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21329#issuecomment-434967437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21329",
    "id": 434967437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNDk2NzQzNw==",
    "user": {
      "login": "ODemidenko",
      "id": 11488142,
      "node_id": "MDQ6VXNlcjExNDg4MTQy",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11488142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ODemidenko",
      "html_url": "https://github.com/ODemidenko",
      "followers_url": "https://api.github.com/users/ODemidenko/followers",
      "following_url": "https://api.github.com/users/ODemidenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/ODemidenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ODemidenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ODemidenko/subscriptions",
      "organizations_url": "https://api.github.com/users/ODemidenko/orgs",
      "repos_url": "https://api.github.com/users/ODemidenko/repos",
      "events_url": "https://api.github.com/users/ODemidenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ODemidenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-01T08:20:08Z",
    "updated_at": "2018-11-01T08:20:08Z",
    "author_association": "NONE",
    "body": "Another issue for us is that it is unclear how to implement it efficiently with a custom function. So, supporting filling collections (lists, sets, dicts) actually also resolves performance issue here.\r\n\r\nOtherwise we are using such a func, which is likely to be slower, than potential standard implementation:\r\n```\r\ndef replace_nan(df, col, what):\r\n    nans = df[col].isnull()\r\n    df.loc[nans, col] = [what for isnan in nans.values if isnan]\r\n    return df\r\n```\r\nWe have so many cases when we needed to do `df.fillna({'col_name': []})` in our codebase. that doing it more efficiently can be really noticeable for us."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454688318",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21329#issuecomment-454688318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21329",
    "id": 454688318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY4ODMxOA==",
    "user": {
      "login": "lordgrenville",
      "id": 16547083,
      "node_id": "MDQ6VXNlcjE2NTQ3MDgz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/16547083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lordgrenville",
      "html_url": "https://github.com/lordgrenville",
      "followers_url": "https://api.github.com/users/lordgrenville/followers",
      "following_url": "https://api.github.com/users/lordgrenville/following{/other_user}",
      "gists_url": "https://api.github.com/users/lordgrenville/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lordgrenville/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lordgrenville/subscriptions",
      "organizations_url": "https://api.github.com/users/lordgrenville/orgs",
      "repos_url": "https://api.github.com/users/lordgrenville/repos",
      "events_url": "https://api.github.com/users/lordgrenville/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lordgrenville/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T08:08:50Z",
    "updated_at": "2019-01-16T08:08:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Slightly different from OP's use-case, but I wanted to `fillna()` with a list of values by iterating through the list and using them one by one. Got some ideas on how to do it in [this SO thread](https://stackoverflow.com/q/54203125/6220759). "
  }
]
