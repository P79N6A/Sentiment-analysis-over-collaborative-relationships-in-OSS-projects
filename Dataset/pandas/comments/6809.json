[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46771926",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6809#issuecomment-46771926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6809",
    "id": 46771926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzcxOTI2",
    "user": {
      "login": "asobrien",
      "id": 223897,
      "node_id": "MDQ6VXNlcjIyMzg5Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/223897?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asobrien",
      "html_url": "https://github.com/asobrien",
      "followers_url": "https://api.github.com/users/asobrien/followers",
      "following_url": "https://api.github.com/users/asobrien/following{/other_user}",
      "gists_url": "https://api.github.com/users/asobrien/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asobrien/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asobrien/subscriptions",
      "organizations_url": "https://api.github.com/users/asobrien/orgs",
      "repos_url": "https://api.github.com/users/asobrien/repos",
      "events_url": "https://api.github.com/users/asobrien/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asobrien/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-22T04:07:03Z",
    "updated_at": "2014-06-22T04:12:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "What you want is to directly open an xls file by directly specifiy the URL in `pd.read_excel`:\n\n``` python\npd.read_excel(\"http://www.eia.gov/dnav/pet/xls/PET_PRI_ALLMG_A_EPM0_PTC_DPGAL_M.xls\", \"Data 1\", skiprows=2)\n```\n\nbut currently this returns an `IOError`:\n\n``` python\nIOError: [Errno 2] No such file or directory: 'http://www.eia.gov/dnav/pet/xls/PET_PRI_ALLMG_A_EPM0_PTC_DPGAL_M.xls'\n```\n\nGetting around this currently requires explicit calls to `urllib2` and `StringIO` to read and generate a buffer which can then be passed to `pd.read_csv`:\n\n``` python\ndata_url = \"http://www.eia.gov/dnav/pet/xls/PET_PRI_ALLMG_A_EPM0_PTC_DPGAL_M.xls\"\nxld = urllib2.urlopen(data_url).read()\nxlds = StringIO.StringIO(xld)\ndata = pd.read_excel(xlds, \"Data 1\", skiprows=2)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46771979",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6809#issuecomment-46771979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6809",
    "id": 46771979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzcxOTc5",
    "user": {
      "login": "asobrien",
      "id": 223897,
      "node_id": "MDQ6VXNlcjIyMzg5Nw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/223897?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/asobrien",
      "html_url": "https://github.com/asobrien",
      "followers_url": "https://api.github.com/users/asobrien/followers",
      "following_url": "https://api.github.com/users/asobrien/following{/other_user}",
      "gists_url": "https://api.github.com/users/asobrien/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/asobrien/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/asobrien/subscriptions",
      "organizations_url": "https://api.github.com/users/asobrien/orgs",
      "repos_url": "https://api.github.com/users/asobrien/repos",
      "events_url": "https://api.github.com/users/asobrien/events{/privacy}",
      "received_events_url": "https://api.github.com/users/asobrien/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-22T04:10:42Z",
    "updated_at": "2014-06-22T04:10:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm interested in implementing a method to directly read from a URL in `pd.read_excel`. My initial thought is to utilize a `is_url` boolean keyword argument to explicitly indicate that the `io` string is indeed a URL. The method could then simply be implemented using `urllib2` and `StringIO`, as above.\n\nAny thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46772511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6809#issuecomment-46772511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6809",
    "id": 46772511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NzcyNTEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-22T04:51:28Z",
    "updated_at": "2014-06-22T04:51:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #7531\n"
  }
]
