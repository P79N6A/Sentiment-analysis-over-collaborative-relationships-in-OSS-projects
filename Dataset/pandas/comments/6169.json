[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33594394",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6169#issuecomment-33594394",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6169",
    "id": 33594394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk0Mzk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-29T15:28:50Z",
    "updated_at": "2014-01-29T15:28:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a bug, because of the way multi-index are stored, they are columns and so much be retrieved EVEN when specifiying the columns filter.\n\ncare to do a PR to fix (slightly but not too tricky)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33610060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6169#issuecomment-33610060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6169",
    "id": 33610060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjEwMDYw",
    "user": {
      "login": "glyg",
      "id": 1426279,
      "node_id": "MDQ6VXNlcjE0MjYyNzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1426279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glyg",
      "html_url": "https://github.com/glyg",
      "followers_url": "https://api.github.com/users/glyg/followers",
      "following_url": "https://api.github.com/users/glyg/following{/other_user}",
      "gists_url": "https://api.github.com/users/glyg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glyg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glyg/subscriptions",
      "organizations_url": "https://api.github.com/users/glyg/orgs",
      "repos_url": "https://api.github.com/users/glyg/repos",
      "events_url": "https://api.github.com/users/glyg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glyg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-29T17:48:32Z",
    "updated_at": "2014-01-29T17:48:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess I can give it a shot...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33724581",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6169#issuecomment-33724581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6169",
    "id": 33724581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzI0NTgx",
    "user": {
      "login": "glyg",
      "id": 1426279,
      "node_id": "MDQ6VXNlcjE0MjYyNzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1426279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glyg",
      "html_url": "https://github.com/glyg",
      "followers_url": "https://api.github.com/users/glyg/followers",
      "following_url": "https://api.github.com/users/glyg/following{/other_user}",
      "gists_url": "https://api.github.com/users/glyg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glyg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glyg/subscriptions",
      "organizations_url": "https://api.github.com/users/glyg/orgs",
      "repos_url": "https://api.github.com/users/glyg/repos",
      "events_url": "https://api.github.com/users/glyg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glyg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T19:38:29Z",
    "updated_at": "2014-01-30T19:41:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I did some digging, and I think I got the problem well defined, but not the solution.\n\nFirst, for anyone passing by, this works:\n\n``` python\nixs = store.select('df_mi', columns=['A'])\n```\n\nas well as that:\n\n``` python\nixs = store.select('df_mi', \"foo_name='bar'\", columns=['A'])\n```\n\nSo the problem is in the implementation of the `read` function of the class `AppendableMultiFrameTable` in `pandas.io.pytables`. If the `columns` argument is passed within a `where=...` expression, the following will not be executed:\n\n``` python\n        if columns is not None:\n            for n in self.levels:\n                if n not in columns:\n                    columns.insert(0, n)\n```\n\nFrom that, the columns containing the index won't be retrieved, because they are absent of the `where` expression, which is parsed higher in the class hierarchy. \nSo that's where I'm stuck. As the `columns` argument is effectively `None`, it is absurd to insert the index columns to it. Passing `columns=[n for n in self.levels]` fails also, as will\n `columns=[columns = self.non_index_axes[0][1]` which is the list of all the columns. \n\nSo the only way I see is to somehow modify the `where` kwarg **before** it is passed to this `super(AppendableMultiFrameTable, self).read(columns=columns, **kwargs)` for example by extracting somehow the `columns=['A']` part, or by appending the level names to it....\nI had a look at that, but I fail to see how to do so...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33726019",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6169#issuecomment-33726019",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6169",
    "id": 33726019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzI2MDE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T19:52:48Z",
    "updated_at": "2014-01-30T19:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "so, start off by writing some tests (which use your example), to try to get it to fail.\n\nThen step thru that example to see where the issue is.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33736140",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6169#issuecomment-33736140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6169",
    "id": 33736140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzM2MTQw",
    "user": {
      "login": "glyg",
      "id": 1426279,
      "node_id": "MDQ6VXNlcjE0MjYyNzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1426279?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glyg",
      "html_url": "https://github.com/glyg",
      "followers_url": "https://api.github.com/users/glyg/followers",
      "following_url": "https://api.github.com/users/glyg/following{/other_user}",
      "gists_url": "https://api.github.com/users/glyg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glyg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glyg/subscriptions",
      "organizations_url": "https://api.github.com/users/glyg/orgs",
      "repos_url": "https://api.github.com/users/glyg/repos",
      "events_url": "https://api.github.com/users/glyg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glyg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T21:34:42Z",
    "updated_at": "2014-01-30T21:34:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well I guess I understood the issue, but I don't see how to solve it, because as far as I understand it implies something like modifying the `selection` attribute of the `AppendableMultiFrameTable` object, and I don't see how to do that, it looks pretty obscure to me...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33739995",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6169#issuecomment-33739995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6169",
    "id": 33739995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzM5OTk1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T22:12:21Z",
    "updated_at": "2014-01-30T22:12:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "welll easiest is simply to raise an when `columns` is passed and its in conflict (this is easy because its a varible). don't worry about the columns in where; I can intercept that too (but its deeper).\n\nwriting the tests as a PR would be great though\n"
  }
]
