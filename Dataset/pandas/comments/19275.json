[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359104289",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19275#issuecomment-359104289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19275",
    "id": 359104289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTEwNDI4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T22:14:14Z",
    "updated_at": "2018-01-19T22:14:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "well if you remove it and things don't break that would confirm it no?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359105773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19275#issuecomment-359105773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19275",
    "id": 359105773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTEwNTc3Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-19T22:21:09Z",
    "updated_at": "2018-01-19T22:21:09Z",
    "author_association": "MEMBER",
    "body": "> well if you remove it and things don't break that would confirm it no?\r\n\r\nWell it definitely wouldn't break any of the existing tests; is `core.internals` solidly enough tested that any un-covered code can be removed?\r\n\r\nIf you look at the test coverage the only path that gets hit is https://github.com/pandas-dev/pandas/blob/master/pandas/core/internals.py#L4464 that returns `self` almost immediately:\r\n\r\n```\r\n    def reindex(self, new_axis, indexer=None, method=None, fill_value=None,\r\n                limit=None, copy=True):\r\n        # if we are the same and don't copy, just return\r\n        if self.index.equals(new_axis):\r\n            if copy:\r\n                return self.copy(deep=True)\r\n            else:\r\n                return self                                       # <-- only relevant path\r\n        [... 21 more lines that are never hit ...]\r\n        block = make_block(new_values, copy=copy,\r\n                           placement=slice(0, len(new_axis)))\r\n\r\n        mgr = SingleBlockManager(block, new_axis)\r\n        mgr._consolidate_inplace()\r\n        return mgr\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359280015",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19275#issuecomment-359280015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19275",
    "id": 359280015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTI4MDAxNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-21T20:54:04Z",
    "updated_at": "2018-01-21T20:54:04Z",
    "author_association": "MEMBER",
    "body": "It looks like the only places where BlockManager.reindex gets called are in `Series.__init__` and `SparseSeries.__init__`\r\n\r\nSeries:\r\n```\r\n            elif isinstance(data, SingleBlockManager):\r\n                if index is None:\r\n                    index = data.index\r\n                else:\r\n                    data = data.reindex(index, copy=copy)\r\n```\r\n\r\nSparseSeries\r\n```\r\n            elif isinstance(data, SingleBlockManager):\r\n                if dtype is not None:\r\n                    data = data.astype(dtype)\r\n                if index is None:\r\n                    index = data.index.view()\r\n                else:\r\n                    data = data.reindex(index, copy=False)\r\n```\r\n\r\nIn each case, an extra case after the `if index is None` clause `elif data.index.equals(index): pass` catches _all_ remaining cases that currently pass into the `else:` block.  Given that users shouldn't be passing `SingleBlockManager` manually, I think it'd be OK to require `data.index.equals(index)` in this case so we can remove `BlockManager.reindex`"
  }
]
