[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330019502",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17557#issuecomment-330019502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17557",
    "id": 330019502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDAxOTUwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-17T04:36:44Z",
    "updated_at": "2017-09-17T04:36:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "needs performance checking\r\n\r\nwhatsnew is in the other api changes section"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330619101",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17557#issuecomment-330619101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17557",
    "id": 330619101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDYxOTEwMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T17:51:03Z",
    "updated_at": "2017-09-19T17:51:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "from https://github.com/pandas-dev/pandas/pull/17557#discussion_r139329564\r\n\r\n> Isn't the first example throwing out an error because it's replacing those levels with these?\r\n> levels = FrozenList([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\r\n> And the is_unique method is indeed a more clear way to do it, thanks!\r\n> Also, I'm having troubles running the performance checks with asv ðŸ˜ž Some weird I/O shutil > error while trying to do pip wheel\r\n  \r\nFor the asv, are you using conda? That's typically easiest.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330883684",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17557#issuecomment-330883684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17557",
    "id": 330883684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDg4MzY4NA==",
    "user": {
      "login": "alanbato",
      "id": 11902612,
      "node_id": "MDQ6VXNlcjExOTAyNjEy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11902612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alanbato",
      "html_url": "https://github.com/alanbato",
      "followers_url": "https://api.github.com/users/alanbato/followers",
      "following_url": "https://api.github.com/users/alanbato/following{/other_user}",
      "gists_url": "https://api.github.com/users/alanbato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alanbato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alanbato/subscriptions",
      "organizations_url": "https://api.github.com/users/alanbato/orgs",
      "repos_url": "https://api.github.com/users/alanbato/repos",
      "events_url": "https://api.github.com/users/alanbato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alanbato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-20T15:12:45Z",
    "updated_at": "2017-09-20T15:15:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I ran the command again and I got it to work, but I'm seeing really weird results in the performance test, everything is either above or below 10% . Are these normal?\r\n\r\n<details>\r\n\r\n```\r\n+      96.5Â±0.2ms          367Â±5ms     3.80  frame_methods.Reindex.time_reindex_axis1\r\n+     40.4Â±0.08ms          122Â±5ms     3.02  frame_methods.Reindex.time_reindex_both_axes\r\n+      40.9Â±0.2ms        111Â±0.3ms     2.72  frame_methods.Reindex.time_reindex_both_axes_ix\r\n+      93.2Â±0.1ms          243Â±4ms     2.61  frame_methods.Dropna.time_count_level_axis0_multi\r\n+        29.1Â±2ms         74.5Â±7ms     2.56  frame_methods.Shift.time_shift_axis0\r\n+      29.9Â±0.2ms       74.8Â±0.3ms     2.50  frame_methods.Shift.time_shift_axis_1\r\n+      84.3Â±0.5ms          190Â±3ms     2.25  frame_methods.Dropna.time_count_level_axis1_multi\r\n+     96.0Â±0.05ms          213Â±2ms     2.21  frame_methods.Dropna.time_count_level_axis1_mixed_dtypes_multi\r\n+      109Â±0.08ms            231ms     2.13  frame_methods.Dropna.time_count_level_axis0_mixed_dtypes_multi\r\n+       105Â±0.1ms        219Â±0.7ms     2.10  frame_methods.Dropna.time_dropna_axis1_all\r\n+      104Â±0.03ms            198ms     1.90  frame_methods.Dropna.time_dropna_axis0_all\r\n+      33.9Â±0.9ms         58.5Â±2ms     1.73  binary_ops.TimeseriesTZ.time_timestamp_ops_diff1\r\n+         452Â±2ms            731ms     1.62  frame_methods.Dropna.time_dropna_axis0_all_mixed_dtypes\r\n+         996Â±7ms          1.55Â±0s     1.56  gil.NoGilGroupby.time_groups_2\r\n+     11.0Â±0.02ms           16.7ms     1.51  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('LastWeekOfMonth', 1)\r\n+     11.3Â±0.03ms      17.1Â±0.03ms     1.51  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('FY5253_1', 2)\r\n+     5.22Â±0.01ms       7.81Â±0.3ms     1.50  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('CustomBusinessDay', 1)\r\n+     47.8Â±0.01ms           70.6ms     1.48  frame_methods.Dropna.time_dropna_axis1_any\r\n+     50.9Â±0.04ms           74.9ms     1.47  frame_methods.Dropna.time_dropna_axis0_any\r\n+          2.97ms           4.25ms     1.43  frame_methods.Iteration.time_iteritems_cached\r\n+        1.28Â±0ms      1.82Â±0.03ms     1.42  groupby.GroupBySuite.time_first('float', 100)\r\n+      90.4Â±0.5ms          126Â±4ms     1.40  eval.Eval.time_chained_cmp('python', 1)\r\n+         450Â±0ms            617ms     1.37  frame_methods.Dropna.time_dropna_axis1_all_mixed_dtypes\r\n+     1.10Â±0.01ms      1.51Â±0.04ms     1.37  frame_methods.frame_boolean_row_select.time_frame_boolean_row_select\r\n+     5.36Â±0.01ms       7.31Â±0.3ms     1.36  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('Minute', 1)\r\n+     1.34Â±0.01ms      1.81Â±0.08ms     1.34  groupby.GroupBySuite.time_last('float', 100)\r\n+        1.27Â±0ms      1.70Â±0.06ms     1.34  groupby.GroupBySuite.time_last('int', 100)\r\n+        2.19Â±0ms      2.93Â±0.08ms     1.34  groupby.GroupBySuite.time_head('float', 100)\r\n+     1.27Â±0.01ms      1.67Â±0.03ms     1.32  groupby.GroupBySuite.time_first('int', 100)\r\n+     5.48Â±0.01ms      7.18Â±0.02ms     1.31  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('DateOffset', 2)\r\n+     2.13Â±0.01ms      2.78Â±0.07ms     1.30  groupby.GroupBySuite.time_head('int', 100)\r\n+     6.29Â±0.03ms       8.18Â±0.2ms     1.30  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('Milli', 2)\r\n+     6.47Â±0.01ms      8.41Â±0.02ms     1.30  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('QuarterBegin', 1)\r\n+     6.27Â±0.02ms      8.13Â±0.03ms     1.30  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('Micro', 2)\r\n+     5.85Â±0.01ms      7.57Â±0.01ms     1.29  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('Easter', 1)\r\n+        40.0Â±2ms         51.6Â±2ms     1.29  eval.Eval.time_mult('python', 1)\r\n+     23.6Â±0.09ms       30.5Â±0.2ms     1.29  binary_ops.Timeseries.time_timestamp_ops_diff1\r\n+     29.5Â±0.05ms       38.0Â±0.2ms     1.29  frame_methods.Apply.time_apply_lambda_mean\r\n+         138Â±4ms          178Â±5ms     1.29  gil.NoGilGroupby.time_count_2\r\n+     7.85Â±0.07ms         10.1Â±0ms     1.29  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('CustomBusinessHour', 1)\r\n+     6.29Â±0.02ms      8.08Â±0.01ms     1.28  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('Second', 2)\r\n+         425Â±1ms        546Â±0.8ms     1.28  frame_methods.Apply.time_apply_axis_1\r\n+     6.51Â±0.03ms      8.32Â±0.02ms     1.28  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('BYearBegin', 2)\r\n+     7.29Â±0.02ms      9.30Â±0.02ms     1.28  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('BusinessHour', 1)\r\n+           682ms            866ms     1.27  gil.nogil_read_csv.time_read_csv\r\n+          29.3Î¼s           37.2Î¼s     1.27  timeseries.DatetimeIndex.time_timestamp_tzinfo_cons\r\n+     6.20Â±0.01ms      7.86Â±0.01ms     1.27  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('CustomBusinessDay', 2)\r\n+     6.63Â±0.01ms         8.39Â±0ms     1.27  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('BMonthEnd', 2)\r\n+           674ms            853ms     1.27  frame_methods.Iteration.time_iteritems_indexing\r\n+     4.59Â±0.02ms       5.80Â±0.2ms     1.26  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('DateOffset', 1)\r\n+         175Â±2ms          221Â±2ms     1.26  groupby.GroupBySuite.time_mad('int', 100)\r\n+           17.2s            21.7s     1.26  groupby.GroupBySuite.time_mad('int', 10000)\r\n+       132Â±0.2ms        164Â±0.1ms     1.25  frame_ctor.FromDicts.time_frame_ctor_list_of_dict\r\n+          70.4ms           87.8ms     1.25  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('FY5253Quarter_1', 2)\r\n+       393Â±0.4ms            489ms     1.25  frame_methods.Dropna.time_dropna_axis0_any_mixed_dtypes\r\n+      108Â±0.02ms          134Â±7ms     1.24  frame_methods.frame_getitem_single_column.time_frame_getitem_single_column\r\n+     43.2Â±0.05ms         53.6Â±0ms     1.24  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('FY5253_2', 2)\r\n+      394Â±0.06ms            489ms     1.24  frame_methods.Dropna.time_dropna_axis1_any_mixed_dtypes\r\n+     6.19Â±0.04ms       7.68Â±0.2ms     1.24  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('Second', 1)\r\n+      80.7Â±0.4Î¼s        100Â±0.1Î¼s     1.24  timeseries.Offsets.time_custom_bday_apply_dt64\r\n+      131Â±0.04ms            163ms     1.24  frame_methods.Iteration.time_iteritems\r\n+     5.89Â±0.06ms      7.30Â±0.07ms     1.24  binary_ops.Timeseries.time_series_timestamp_compare\r\n+          42.8ms           52.7ms     1.23  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('FY5253_2', 1)\r\n+           27.5s            33.9s     1.23  groupby.GroupBySuite.time_mad('float', 10000)\r\n+      2.73Â±0.01s       3.36Â±0.03s     1.23  gil.NoGilGroupby.time_groups_4\r\n+     4.99Â±0.06ms       6.13Â±0.2ms     1.23  groupby.GroupBySuite.time_last('int', 10000)\r\n+         274Â±2ms         336Â±30ms     1.23  groupby.GroupBySuite.time_mad('float', 100)\r\n+      42.5Â±0.2Î¼s       52.0Â±0.2Î¼s     1.22  timeseries.Offsets.time_timeseries_year_apply\r\n+      61.1Â±0.4ms         74.4Â±1ms     1.22  groupby.GroupBySuite.time_diff('int', 100)\r\n+     6.25Â±0.05ms      7.62Â±0.01ms     1.22  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('Micro', 1)\r\n+      44.3Â±0.9ms         53.8Â±1ms     1.22  groupby.FirstLast.time_groupby_nth_none('datetime')\r\n+        1.25Â±0ms      1.51Â±0.04ms     1.22  groupby.GroupBySuite.time_cummin('int', 100)\r\n+       120Â±0.3Î¼s        146Â±0.2Î¼s     1.21  timeseries.Offsets.time_timeseries_day_incr\r\n+         214Â±2ms        260Â±0.3ms     1.21  timedelta.ToTimedelta.time_convert_coerce\r\n+     28.2Â±0.06ms         34.1Â±2ms     1.21  frame_methods.Apply.time_apply_np_mean\r\n+     6.12Â±0.01ms       7.38Â±0.2ms     1.21  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('CDay', 1)\r\n+        1.24Â±0ms      1.50Â±0.03ms     1.20  groupby.GroupBySuite.time_cummax('int', 100)\r\n+     5.97Â±0.02ms      7.18Â±0.03ms     1.20  frame_ctor.FromDicts.time_series_ctor_from_dict\r\n+          75.7Î¼s           90.8Î¼s     1.20  index_object.Float64.time_construct\r\n+           11.1s            13.2s     1.20  panel_methods.PanelMethods.time_pct_change_items\r\n+          87.5Î¼s            105Î¼s     1.20  inference.to_numeric.time_from_float\r\n+        5.14Â±0ms       6.14Â±0.4ms     1.20  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('BDay', 1)\r\n+       114Â±0.8ms        136Â±0.6ms     1.19  frame_ctor.FromDicts.time_frame_ctor_nested_dict\r\n+           5.31s            6.31s     1.19  gil.NoGilGroupby.time_groups_8\r\n+           8.96s            10.6s     1.19  groupby.GroupBySuite.time_diff('float', 10000)\r\n+         582Â±2Î¼s          687Â±1Î¼s     1.18  period.period_standard_indexing.time_intersection\r\n+     6.93Â±0.06ms      8.18Â±0.09ms     1.18  groupby.GroupBySuite.time_head('int', 10000)\r\n+     5.29Â±0.05ms       6.22Â±0.1ms     1.18  groupby.GroupBySuite.time_first('int', 10000)\r\n+     1.85Â±0.01ms      2.18Â±0.04ms     1.18  groupby.GroupBySuite.time_cumprod('float', 100)\r\n+      22.6Â±0.1Î¼s       26.5Â±0.1Î¼s     1.17  indexing.DataFrameIndexing.time_get_value_ix\r\n+           1.20s            1.40s     1.17  packers.Excel.time_write_excel_xlsxwriter\r\n+     59.5Â±0.06ms       69.8Â±0.8ms     1.17  categoricals.Categoricals2.time_value_counts_dropna\r\n+         893Â±1Î¼s         1.05Â±0ms     1.17  indexing.MultiIndexing.time_frame_xs_mi_ix\r\n+           8.12s            9.52s     1.17  panel_methods.PanelMethods.time_pct_change_major\r\n+       233Â±0.4Î¼s        273Â±0.3Î¼s     1.17  timeseries.SemiMonthOffset.time_begin_decr_n\r\n+           47.9s            56.0s     1.17  groupby.GroupBySuite.time_describe('int', 10000)\r\n+       208Â±0.2Î¼s        242Â±0.3Î¼s     1.16  timeseries.SemiMonthOffset.time_begin_incr\r\n+     3.95Â±0.01ms       4.60Â±0.3ms     1.16  categoricals.Categoricals.time_constructor_datetimes_with_nat\r\n+     1.29Â±0.01ms      1.50Â±0.05ms     1.16  groupby.GroupBySuite.time_cumsum('int', 100)\r\n+     2.89Â±0.01ms       3.35Â±0.3ms     1.16  frame_methods.frame_from_records_generator.time_frame_from_records_generator_nrows\r\n+     9.17Â±0.03ms       10.6Â±0.1ms     1.16  groupby.GroupBySuite.time_head('float', 10000)\r\n+       146Â±0.3ms          168Â±3ms     1.16  groupby.GroupBySuite.time_pct_change('int', 100)\r\n+        1.21Â±0ms      1.40Â±0.01ms     1.16  groupby.GroupBySuite.time_var('float', 100)\r\n+           8.06s            9.31s     1.15  panel_methods.PanelMethods.time_pct_change_minor\r\n+     5.60Â±0.04ms       6.46Â±0.1ms     1.15  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('MonthBegin', 2)\r\n+      15.7Â±0.1ms       18.1Â±0.4ms     1.15  algorithms.Algorithms.time_add_overflow_pos_scalar\r\n+      31.0Â±0.1ms       35.8Â±0.6ms     1.15  eval.Eval.time_add('numexpr', 1)\r\n+        1.39Â±0ms      1.60Â±0.05ms     1.15  groupby.GroupBySuite.time_cumsum('float', 100)\r\n+           5.65s            6.50s     1.15  groupby.GroupBySuite.time_diff('int', 10000)\r\n+           3.26s            3.76s     1.15  timeseries.SeriesArithmetic.time_add_offset_slow\r\n+        97.2Â±2ms          112Â±3ms     1.15  eval.Eval.time_and('python', 1)\r\n+           154ms            177ms     1.15  frame_methods.Iteration.time_itertuples\r\n+     4.99Â±0.03ms       5.73Â±0.2ms     1.15  groupby.GroupBySuite.time_cummax('int', 10000)\r\n+     6.56Â±0.01ms       7.53Â±0.1ms     1.15  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('SemiMonthBegin', 1)\r\n+          9.84ms           11.3ms     1.15  index_object.Float64.time_boolean_series_indexer\r\n+        1.31Â±0ms      1.50Â±0.04ms     1.14  groupby.GroupBySuite.time_cummax('float', 100)\r\n+     7.73Â±0.06ms       8.84Â±0.1ms     1.14  groupby.GroupBySuite.time_last('float', 10000)\r\n+     1.76Â±0.01ms      2.01Â±0.01ms     1.14  groupby.GroupBySuite.time_cumprod('int', 100)\r\n+      92.4Â±0.3ms          106Â±3ms     1.14  groupby.GroupBySuite.time_diff('float', 100)\r\n+          6.68ms           7.62ms     1.14  inference.DtypeInfer.time_int64\r\n+     1.29Â±0.01ms      1.47Â±0.02ms     1.14  groupby.GroupBySuite.time_cumcount('float', 100)\r\n+     6.04Â±0.04ms       6.86Â±0.7ms     1.14  binary_ops.TimeseriesTZ.time_series_timestamp_compare\r\n+     5.90Â±0.03ms       6.70Â±0.3ms     1.14  binary_ops.Timeseries.time_timestamp_series_compare\r\n+         392Â±1ms          446Â±9ms     1.14  frame_methods.frame_insert_100_columns_begin.time_frame_insert_500_columns_end\r\n+     5.02Â±0.05ms      5.70Â±0.05ms     1.14  groupby.GroupBySuite.time_cummin('int', 10000)\r\n+     5.80Â±0.03ms       6.58Â±0.1ms     1.14  groupby.GroupBySuite.time_cumprod('int', 10000)\r\n+         770Â±6ms          874Â±8ms     1.13  groupby.GroupBySuite.time_describe('float', 100)\r\n+           22.8s            25.9s     1.13  gil.nogil_datetime_fields.time_datetime_field_day\r\n+     7.74Â±0.06ms       8.78Â±0.1ms     1.13  groupby.GroupBySuite.time_first('float', 10000)\r\n+       108Â±0.5ms        122Â±0.3ms     1.13  frame_methods.FrameIsnull.time_isnull_obj\r\n+         819Â±2Î¼s          926Â±2Î¼s     1.13  indexing.MultiIndexing.time_series_xs_mi_ix\r\n+         479Â±2Î¼s         541Â±20Î¼s     1.13  frame_methods.frame_get_dtype_counts.time_frame_get_dtype_counts\r\n+       101Â±0.3ms        114Â±0.2ms     1.13  frame_methods.FrameIsnull.time_isnull_strngs\r\n+     9.86Â±0.06ms       11.1Â±0.8ms     1.13  binary_ops.Ops.time_frame_mult(False, 'default')\r\n+         114Â±1ms          128Â±1ms     1.13  parser_vb.read_csv_categorical.time_convert_direct\r\n+     6.28Â±0.02ms       7.07Â±0.2ms     1.13  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('BQuarterEnd', 2)\r\n+      37.7Â±0.1ms         42.3Â±1ms     1.12  groupby.GroupBySuite.time_any('int', 100)\r\n+     3.82Â±0.05Î¼s      4.29Â±0.02Î¼s     1.12  period.Properties.time_minute\r\n+         264Â±2ms          296Â±3ms     1.12  packers.packers_read_sas.time_read_sas7bdat\r\n+     30.8Â±0.08ms         34.5Â±2ms     1.12  eval.Eval.time_mult('numexpr', 1)\r\n+        2.64Â±0ms      2.96Â±0.09ms     1.12  categoricals.Categoricals2.time_rendering\r\n+      7.40Â±0.1ms       8.29Â±0.1ms     1.12  groupby.GroupBySuite.time_cummin('float', 10000)\r\n+     3.09Â±0.01ms      3.46Â±0.01ms     1.12  groupby.groupby_sum_multiindex.time_groupby_sum_multiindex\r\n+       120Â±0.2ms        135Â±0.4ms     1.12  frame_ctor.FromDicts.time_frame_ctor_nested_dict_int64\r\n+         485Â±2ms          543Â±4ms     1.12  groupby.GroupBySuite.time_describe('int', 100)\r\n+           47.3s            52.9s     1.12  binary_ops.TimeseriesTZ.time_timestamp_ops_diff2\r\n+         603Â±1Î¼s          674Â±2Î¼s     1.12  indexing.DataFrameIndexing.time_iloc_dups\r\n+        1.02Â±0ms      1.14Â±0.04ms     1.12  categoricals.Categoricals.time_constructor_fastpath\r\n+     3.83Â±0.05Î¼s      4.27Â±0.07Î¼s     1.12  period.Properties.time_hour\r\n+     10.8Â±0.04ms      12.0Â±0.07ms     1.11  groupby.groupby_nth.time_groupby_frame_nth_any\r\n+     21.6Â±0.05Î¼s      24.1Â±0.06Î¼s     1.11  indexing.MultiIndexing.time_multiindex_med_get_loc\r\n+       350Â±0.8ms          390Â±2ms     1.11  inference.to_numeric_downcast.time_downcast('string-float', 'float')\r\n+     4.03Â±0.03Î¼s      4.47Â±0.05Î¼s     1.11  period.Properties.time_year\r\n+     2.40Â±0.03ms      2.66Â±0.01ms     1.11  frame_methods.FrameIsnull.time_isnull\r\n+      24.1Â±0.1ms       26.7Â±0.2ms     1.11  reindex.LibFastZip.time_lib_fast_zip\r\n+       103Â±0.6ms        114Â±0.5ms     1.10  strings.StringMethods.time_join_split_expand\r\n+     6.29Â±0.01ms      6.94Â±0.02ms     1.10  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('Day', 2)\r\n+     6.78Â±0.03ms      7.47Â±0.06ms     1.10  frame_methods.Equals.time_frame_float_equal\r\n+     4.97Â±0.02ms      5.48Â±0.05ms     1.10  groupby.GroupBySuite.time_cumsum('int', 10000)\r\n-          26.8Î¼s           24.2Î¼s     0.90  index_object.Float64.time_slice_indexer_even\r\n-          7.60ms           6.81ms     0.90  inference.DtypeInfer.time_float64\r\n-        2.41Â±0ms      2.16Â±0.01ms     0.90  groupby.GroupBySuite.time_sem('float', 100)\r\n-     9.28Â±0.02ms      8.27Â±0.05ms     0.89  groupby.groupby_datetimetz.time_groupby_sum\r\n-         612Â±1ms          546Â±1ms     0.89  inference.to_numeric_downcast.time_downcast('string-nint', 'unsigned')\r\n-        1.07Â±0ms          957Â±3Î¼s     0.89  reindex.Duplicates.time_series_drop_dups_int\r\n-      1.48Â±0.01s          1.32Â±0s     0.89  replace.replace_convert.time_replace_frame_timestamp\r\n-        1.37Â±0ms         1.22Â±0ms     0.89  period.Algorithms.time_value_counts_pindex\r\n-         486Â±4ms          432Â±2ms     0.89  groupby.Transform.time_transform_func\r\n-      42.8Â±0.2Î¼s       38.0Â±0.2Î¼s     0.89  timestamp.TimestampProperties.time_is_year_end\r\n-          40.9ms           36.1ms     0.88  gil.nogil_read_csv.time_read_csv_object\r\n-      18.5Â±0.2ms       16.2Â±0.2ms     0.88  groupby.groupby_nth.time_groupby_series_nth_any\r\n-      82.1Â±0.3Î¼s       71.7Â±0.3Î¼s     0.87  indexing.Int64Indexing.time_getitem_scalar\r\n-      94.5Â±0.2ms       82.4Â±0.2ms     0.87  groupby.GroupBySuite.time_skew('float', 100)\r\n-           752ms          649Â±1ms     0.86  inference.to_numeric_downcast.time_downcast('string-nint', 'signed')\r\n-         380Â±3ms          328Â±1ms     0.86  inference.to_numeric_downcast.time_downcast('string-float', 'signed')\r\n-          44.6ms           38.3ms     0.86  frame_ctor.FrameConstructorDTIndexFromOffsets.time_frame_ctor('FY5253Quarter_1', 1)\r\n-      79.4Â±0.1ms       68.1Â±0.6ms     0.86  groupby.GroupBySuite.time_unique('float', 100)\r\n-      1.54Â±0.01s       1.30Â±0.01s     0.85  replace.replace_convert.time_replace_frame_timedelta\r\n-         959Â±6ms          808Â±5ms     0.84  replace.replace_convert.time_replace_series_timedelta\r\n-          26.9Î¼s           22.5Î¼s     0.84  index_object.Float64.time_slice_indexer_basic\r\n-         273Â±1Î¼s        226Â±0.3Î¼s     0.83  period.period_standard_indexing.time_series_loc\r\n-       106Â±0.7Î¼s       87.5Â±0.5Î¼s     0.82  timeseries.Offsets.time_custom_bday_incr\r\n-      17.2Â±0.3ms       13.7Â±0.3ms     0.80  binary_ops.Ops2.time_frame_int_mod\r\n-      25.8Â±0.4ms       17.5Â±0.7ms     0.68  binary_ops.Ops.time_frame_add(True, 'default')\r\n-      17.4Â±0.3ms       9.88Â±0.5ms     0.57  binary_ops.Ops2.time_frame_float_mod\r\n```\r\n\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330884942",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17557#issuecomment-330884942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17557",
    "id": 330884942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDg4NDk0Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-20T15:16:42Z",
    "updated_at": "2017-09-20T15:16:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `-f 1.1` limits it to only benchmarks that changed by more that 10%.  The results can be noisy, depending on how much load your machine is under while running the benchmarks. Typically anything larger than 1.3 - 1.5 is significant.\r\n\r\nI'll take a look later. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330900764",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17557#issuecomment-330900764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17557",
    "id": 330900764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDkwMDc2NA==",
    "user": {
      "login": "alanbato",
      "id": 11902612,
      "node_id": "MDQ6VXNlcjExOTAyNjEy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11902612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alanbato",
      "html_url": "https://github.com/alanbato",
      "followers_url": "https://api.github.com/users/alanbato/followers",
      "following_url": "https://api.github.com/users/alanbato/following{/other_user}",
      "gists_url": "https://api.github.com/users/alanbato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alanbato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alanbato/subscriptions",
      "organizations_url": "https://api.github.com/users/alanbato/orgs",
      "repos_url": "https://api.github.com/users/alanbato/repos",
      "events_url": "https://api.github.com/users/alanbato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alanbato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-20T16:05:50Z",
    "updated_at": "2017-09-20T16:05:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, ping me when you've gone through it. Thanks @TomAugspurger :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332008263",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17557#issuecomment-332008263",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17557",
    "id": 332008263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjAwODI2Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-25T20:50:08Z",
    "updated_at": "2017-09-25T20:50:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perf looked fine, though the CI failures look relevant."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332049210",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17557#issuecomment-332049210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17557",
    "id": 332049210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjA0OTIxMA==",
    "user": {
      "login": "alanbato",
      "id": 11902612,
      "node_id": "MDQ6VXNlcjExOTAyNjEy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/11902612?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alanbato",
      "html_url": "https://github.com/alanbato",
      "followers_url": "https://api.github.com/users/alanbato/followers",
      "following_url": "https://api.github.com/users/alanbato/following{/other_user}",
      "gists_url": "https://api.github.com/users/alanbato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alanbato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alanbato/subscriptions",
      "organizations_url": "https://api.github.com/users/alanbato/orgs",
      "repos_url": "https://api.github.com/users/alanbato/repos",
      "events_url": "https://api.github.com/users/alanbato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alanbato/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T00:15:59Z",
    "updated_at": "2017-09-26T00:15:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I think I'll need to change those tests because they they have this faulty behavior. Any advice on that?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340311620",
    "html_url": "https://github.com/pandas-dev/pandas/pull/17557#issuecomment-340311620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17557",
    "id": 340311620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDMxMTYyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-29T23:22:20Z",
    "updated_at": "2017-10-29T23:22:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is being closed by #17971. thanks for the effort here. many other issues if you'd like to take a look!"
  }
]
