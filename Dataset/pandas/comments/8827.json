[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63241773",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8827#issuecomment-63241773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8827",
    "id": 63241773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQxNzcz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-16T22:03:37Z",
    "updated_at": "2014-11-16T22:03:37Z",
    "author_association": "MEMBER",
    "body": "@artemyk Thanks! This seems indeed the fix.\n\nI wanted to comment that we should maybe explicitely test for a certain dialect that a dialect-specific name is used (eg for postgresql that it used `timestamp without time zone` instead of `datetime`) to be sure it is dialect specific. But I was thinking now: does your test already cover that because the dialect-agnostic \"create table\" statement would fail to execute on the different dialects?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63250700",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8827#issuecomment-63250700",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8827",
    "id": 63250700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjUwNzAw",
    "user": {
      "login": "artemyk",
      "id": 833768,
      "node_id": "MDQ6VXNlcjgzMzc2OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/833768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemyk",
      "html_url": "https://github.com/artemyk",
      "followers_url": "https://api.github.com/users/artemyk/followers",
      "following_url": "https://api.github.com/users/artemyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemyk/subscriptions",
      "organizations_url": "https://api.github.com/users/artemyk/orgs",
      "repos_url": "https://api.github.com/users/artemyk/repos",
      "events_url": "https://api.github.com/users/artemyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T01:39:53Z",
    "updated_at": "2014-11-17T01:39:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche  Yes, the `CREATE TABLE` is executed under the different dialects in the tests, and then we test that the created table is the same as the dataframe.  I think this is the best way to check that the right schema is getting generated (as opposed to checking for specific strings, for example).  Before this patch, for example, postgres fails the test.\nAdded a release note and squashed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63273216",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8827#issuecomment-63273216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8827",
    "id": 63273216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjczMjE2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T08:31:08Z",
    "updated_at": "2014-11-17T08:31:08Z",
    "author_association": "MEMBER",
    "body": "Thanks a lot!\n"
  }
]
