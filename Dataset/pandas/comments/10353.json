[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111869817",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10353#issuecomment-111869817",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10353",
    "id": 111869817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg2OTgxNw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T19:42:16Z",
    "updated_at": "2015-06-14T19:42:16Z",
    "author_association": "MEMBER",
    "body": "Yep, this looks like a good idea to me.\n\nI don't have strong feelings about how its implemented, though I suspect the mixin approach is the way to go -- that could make it easier to add documentation specific to each class without a lot of duplicated text. (On the other hand, I suspect few people look at the docstrings on groupby methods.) Either way it's pretty straightforward.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111876280",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10353#issuecomment-111876280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10353",
    "id": 111876280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg3NjI4MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T21:11:14Z",
    "updated_at": "2015-06-14T21:11:14Z",
    "author_association": "MEMBER",
    "body": "How is this different than the already existing `df.groupby(..).apply(..)`? (apart from the ability to pass a tuple in pipe)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111876887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10353#issuecomment-111876887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10353",
    "id": 111876887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg3Njg4Nw==",
    "user": {
      "login": "ghl3",
      "id": 1400021,
      "node_id": "MDQ6VXNlcjE0MDAwMjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1400021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghl3",
      "html_url": "https://github.com/ghl3",
      "followers_url": "https://api.github.com/users/ghl3/followers",
      "following_url": "https://api.github.com/users/ghl3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghl3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghl3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghl3/subscriptions",
      "organizations_url": "https://api.github.com/users/ghl3/orgs",
      "repos_url": "https://api.github.com/users/ghl3/repos",
      "events_url": "https://api.github.com/users/ghl3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghl3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T21:23:35Z",
    "updated_at": "2015-06-14T21:23:35Z",
    "author_association": "NONE",
    "body": "It's similar.  df.groupby(..).apply(..) applies the function to the underlying DataFrame in each group, so the function should take a DataFrame.  This pipe implementation would act on the groupby itself, so you pass it functions whose argument is a DataFrameGroupBy.\n\nSo, with this, you could do:\n\n```\ndef f(dfgb):\n    return dfgb.get_group('A')\n\ndfgb.pipe(f)\n```\n\nBut if you tried with apply, it would fail:\n\n```\ndfgb.apply(f)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111878948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10353#issuecomment-111878948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10353",
    "id": 111878948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg3ODk0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T22:01:30Z",
    "updated_at": "2015-06-14T22:01:30Z",
    "author_association": "MEMBER",
    "body": "Ah sorry, misread the fact it would act on the whole GroupBy object instead on the DataFrames/groups.\n\nDo you have an example of a real use case for this? (apart from the dummy example above, just curious)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111879775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10353#issuecomment-111879775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10353",
    "id": 111879775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTg3OTc3NQ==",
    "user": {
      "login": "ghl3",
      "id": 1400021,
      "node_id": "MDQ6VXNlcjE0MDAwMjE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1400021?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghl3",
      "html_url": "https://github.com/ghl3",
      "followers_url": "https://api.github.com/users/ghl3/followers",
      "following_url": "https://api.github.com/users/ghl3/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghl3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghl3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghl3/subscriptions",
      "organizations_url": "https://api.github.com/users/ghl3/orgs",
      "repos_url": "https://api.github.com/users/ghl3/repos",
      "events_url": "https://api.github.com/users/ghl3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghl3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T22:20:13Z",
    "updated_at": "2015-06-17T10:50:48Z",
    "author_association": "NONE",
    "body": "Sure.  One thing I find myself doing a lot with pandas is working on classification problems (as in machine-learning like problems), and in particular using pandas plotting as a means of exploring and diagnosing classification problems.  I've found that a nice way to build helper functions for transforming and plotting data in this domain is to work with a DataFrameGroupBy, where the grouped variable is the class associated with the classification.  It's simply a convenient interface to build functions around, as the class is implicit in the grouped column, and it supports multiple classes or nested classes, etc.  I have many such functions whose first argument is a DataFrameGroupBy.\n\nSo, a common pattern is to start with an initial dataframe, do a lot of transformations on it, and then feed it into a function that takes a DataFrameGroupBy for the purpose of plotting or reporting.  This means that the last function call in my chain of transformations is one that takes a dataframe group by.  With the new piping functions, it would be nice to do something like:\n\n`df = df.pipe(f).pipe(g).pipe(h).groupby('group).pipe(generate_report)`\n\nOf course, all this is possible without adding a pipe function, one can always create a temporary variable or do this in a number of other ways, but since we already have the pipe function on the DataFrame, I think adding it to the GroupBy creates a nice symmetry.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/117320130",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10353#issuecomment-117320130",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10353",
    "id": 117320130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzMyMDEzMA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-30T19:54:01Z",
    "updated_at": "2015-06-30T19:54:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I read the [R data rangling cheatsheet](http://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf) right, then in R-land `df %>% group_by(...) %>% mutate(...)` (or `... %>% summarise(…)`is basically `df.groupby(...).apply(...)` (i.e. apply the function to each group). Not sure if then `pipe` should map to different semantic (e.g. pipe in the complete gb object).\n"
  }
]
