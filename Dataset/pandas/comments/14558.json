[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257808353",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14558#issuecomment-257808353",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14558",
    "id": 257808353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzgwODM1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T09:03:46Z",
    "updated_at": "2016-11-02T09:03:46Z",
    "author_association": "MEMBER",
    "body": "This is because the `dtype` keyword is ignored when `converters` is specified. There is a PR to clarify in the docstring: https://github.com/pandas-dev/pandas/pull/14295. But probably, we could trigger a warning to warn the user about that.\n\nBy the way, I suspect that you want the object type so your integers aren't cast to floats, but note that in many operations you do on such an object dtyped series, you will still get this casting behaviour + having this as object dtype will not be performant.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257812580",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14558#issuecomment-257812580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14558",
    "id": 257812580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzgxMjU4MA==",
    "user": {
      "login": "PyDeq",
      "id": 7268060,
      "node_id": "MDQ6VXNlcjcyNjgwNjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7268060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PyDeq",
      "html_url": "https://github.com/PyDeq",
      "followers_url": "https://api.github.com/users/PyDeq/followers",
      "following_url": "https://api.github.com/users/PyDeq/following{/other_user}",
      "gists_url": "https://api.github.com/users/PyDeq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PyDeq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PyDeq/subscriptions",
      "organizations_url": "https://api.github.com/users/PyDeq/orgs",
      "repos_url": "https://api.github.com/users/PyDeq/repos",
      "events_url": "https://api.github.com/users/PyDeq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PyDeq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T09:24:05Z",
    "updated_at": "2016-11-02T09:24:05Z",
    "author_association": "NONE",
    "body": "> This is because the `dtype` keyword is ignored when `converters` is specified. There is a PR to clarify in the docstring: #14295. But probably, we could trigger a warning to warn the user about that.\n\nThank you for the response. API Reference does not mention the fact that `converters` switches the engine to the Python one. I am looking forward to the docstring clarification. Thank you.\n\n> By the way, I suspect that you want the object type so your integers aren't cast to floats, but note that in many operations you do on such an object dtyped series, you will still get this casting behaviour + having this as object dtype will not be performant.\n\nYes, that's why I do that. In my case, `DataFrame` is just an intermediate format which I use to aggregate my data. AFAIK, I have only two options. Either to do what I do now or to handle my `int`s as `float`s. But since the rest of the code differentiates between `int`s and `float`s I'd have to convert the data twice (from `str` to `float` using `read_table` and from `float` to `int` then). I believe that the first option is better in my case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257814126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14558#issuecomment-257814126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14558",
    "id": 257814126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzgxNDEyNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T09:31:06Z",
    "updated_at": "2016-11-02T09:31:06Z",
    "author_association": "MEMBER",
    "body": "> I'd have to convert the data twice (from str to float using read_table and from float to int then). I believe that the first option is better in my case.\n\nWell, the first conversion from str to float is actually done automatically as 'N/A' by default is recognized as a missing value:\n\n```\nIn [17]: s = 'a\\nN/A\\n1\\n'\n\nIn [18]: pd.read_csv(StringIO(s))\nOut[18]: \n     a\n0  NaN\n1  1.0\n```\n\nSo I think this is the much easier path instead of passing a custom converter.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257817655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14558#issuecomment-257817655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14558",
    "id": 257817655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzgxNzY1NQ==",
    "user": {
      "login": "PyDeq",
      "id": 7268060,
      "node_id": "MDQ6VXNlcjcyNjgwNjA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7268060?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PyDeq",
      "html_url": "https://github.com/PyDeq",
      "followers_url": "https://api.github.com/users/PyDeq/followers",
      "following_url": "https://api.github.com/users/PyDeq/following{/other_user}",
      "gists_url": "https://api.github.com/users/PyDeq/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PyDeq/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PyDeq/subscriptions",
      "organizations_url": "https://api.github.com/users/PyDeq/orgs",
      "repos_url": "https://api.github.com/users/PyDeq/repos",
      "events_url": "https://api.github.com/users/PyDeq/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PyDeq/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T09:46:38Z",
    "updated_at": "2016-11-02T09:46:38Z",
    "author_association": "NONE",
    "body": "OK, that's a good point. But still... From the point of view of my interfaces... Now, I have a function that converts strings to integers which exactly matches the description of the data I use and the function interface remains library-independent. If I change the signature to `float -> int`, it just feels wrong. I promise that I'll keep in mind those possible performance problems but until I hit them, the code simplicity and clarity is preferred over performance optimizations.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257818281",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14558#issuecomment-257818281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14558",
    "id": 257818281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzgxODI4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-02T09:49:21Z",
    "updated_at": "2016-11-02T09:49:21Z",
    "author_association": "MEMBER",
    "body": "OK! Closing this then.\n"
  }
]
