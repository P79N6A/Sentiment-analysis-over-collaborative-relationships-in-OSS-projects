[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16828059",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3421#issuecomment-16828059",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3421",
    "id": 16828059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODI4MDU5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T22:29:09Z",
    "updated_at": "2013-04-22T22:29:09Z",
    "author_association": "NONE",
    "body": "```\nIn [20]: data\nOut[20]: \n                     A         B\nfirst second                    \na     1       0.407523  0.202664\n      2       0.673370  0.971472\nb     1       0.611359  0.203320\n      2       0.242032  0.221088\nc     1       0.200138  0.809587\n      2       0.176861  0.860457\n\nIn [21]: data.ix[[('a',1),('b',1)]]\nOut[21]: \n                     A         B\nfirst second                    \na     1       0.407523  0.202664\nb     1       0.611359  0.203320\n\nIn [22]: data.ix[['a','b']].xs(1,level=1)\nOut[22]: \n              A         B\nfirst                    \na      0.407523  0.202664\nb      0.611359  0.203320\n\nIn [23]: \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16828649",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3421#issuecomment-16828649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3421",
    "id": 16828649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODI4NjQ5",
    "user": {
      "login": "yasirs",
      "id": 400538,
      "node_id": "MDQ6VXNlcjQwMDUzOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/400538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yasirs",
      "html_url": "https://github.com/yasirs",
      "followers_url": "https://api.github.com/users/yasirs/followers",
      "following_url": "https://api.github.com/users/yasirs/following{/other_user}",
      "gists_url": "https://api.github.com/users/yasirs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yasirs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yasirs/subscriptions",
      "organizations_url": "https://api.github.com/users/yasirs/orgs",
      "repos_url": "https://api.github.com/users/yasirs/repos",
      "events_url": "https://api.github.com/users/yasirs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yasirs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T22:42:54Z",
    "updated_at": "2013-04-22T22:42:54Z",
    "author_association": "NONE",
    "body": "Thanks for the quick response! I have two questions:\n1.  What if I had to take a _slice_ for the second index too, i.e., something like `data.ix[['a','b'],[1:3]]`. I want to take a rectangular slice, by giving a range of the first index, and a range of the second index and I want all the data in the cartesian product of the first and second ranges. \n2. I think it is still un-intuitive that in `data.ix[x,y]`, y means the second index but in `data[[x1,x2],y]`, y means a column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16829802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3421#issuecomment-16829802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3421",
    "id": 16829802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODI5ODAy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-22T23:11:31Z",
    "updated_at": "2013-04-22T23:11:31Z",
    "author_association": "NONE",
    "body": "just keep a clear seperation in your head between axis and level\n1. yeah, but that ship has sailed.\n2.  judicious use of reset_index is one way, (I suspect there's a better way)\n\n```\nfrom pandas.util.testing import makeCustomDataframe as mkdf\nIn [36]: df=mkdf(20,5,r_idx_nlevels=3,r_ndupe_l=[4,2,1])\n    ...: print df\n    ...: \nC0                       C_l0_g0 C_l0_g1 C_l0_g2 C_l0_g3 C_l0_g4\nR0      R1      R2                                              \nR_l0_g0 R_l1_g0 R_l2_g0     R0C0    R0C1    R0C2    R0C3    R0C4\n                R_l2_g1     R1C0    R1C1    R1C2    R1C3    R1C4\n        R_l1_g1 R_l2_g2     R2C0    R2C1    R2C2    R2C3    R2C4\n                R_l2_g3     R3C0    R3C1    R3C2    R3C3    R3C4\nR_l0_g1 R_l1_g2 R_l2_g4     R4C0    R4C1    R4C2    R4C3    R4C4\n                R_l2_g5     R5C0    R5C1    R5C2    R5C3    R5C4\n        R_l1_g3 R_l2_g6     R6C0    R6C1    R6C2    R6C3    R6C4\n                R_l2_g7     R7C0    R7C1    R7C2    R7C3    R7C4\nR_l0_g2 R_l1_g4 R_l2_g8     R8C0    R8C1    R8C2    R8C3    R8C4\n                R_l2_g9     R9C0    R9C1    R9C2    R9C3    R9C4\n        R_l1_g5 R_l2_g10   R10C0   R10C1   R10C2   R10C3   R10C4\n                R_l2_g11   R11C0   R11C1   R11C2   R11C3   R11C4\nR_l0_g3 R_l1_g6 R_l2_g12   R12C0   R12C1   R12C2   R12C3   R12C4\n                R_l2_g13   R13C0   R13C1   R13C2   R13C3   R13C4\n        R_l1_g7 R_l2_g14   R14C0   R14C1   R14C2   R14C3   R14C4\n                R_l2_g15   R15C0   R15C1   R15C2   R15C3   R15C4\nR_l0_g4 R_l1_g8 R_l2_g16   R16C0   R16C1   R16C2   R16C3   R16C4\n                R_l2_g17   R17C0   R17C1   R17C2   R17C3   R17C4\n        R_l1_g9 R_l2_g18   R18C0   R18C1   R18C2   R18C3   R18C4\n                R_l2_g19   R19C0   R19C1   R19C2   R19C3   R19C4\n\nIn [37]: df.ix[['R_l0_g0','R_l0_g1']].reset_index(0).ix['R_l1_g0':'R_l1_g2']\nOut[37]: \nC0                    R0 C_l0_g0 C_l0_g1 C_l0_g2 C_l0_g3 C_l0_g4\nR1      R2                                                      \nR_l1_g0 R_l2_g0  R_l0_g0    R0C0    R0C1    R0C2    R0C3    R0C4\n        R_l2_g1  R_l0_g0    R1C0    R1C1    R1C2    R1C3    R1C4\nR_l1_g1 R_l2_g2  R_l0_g0    R2C0    R2C1    R2C2    R2C3    R2C4\n        R_l2_g3  R_l0_g0    R3C0    R3C1    R3C2    R3C3    R3C4\nR_l1_g2 R_l2_g4  R_l0_g1    R4C0    R4C1    R4C2    R4C3    R4C4\n        R_l2_g5  R_l0_g1    R5C0    R5C1    R5C2    R5C3    R5C4\n```\n"
  }
]
