[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38081300",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6669#issuecomment-38081300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6669",
    "id": 38081300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDgxMzAw",
    "user": {
      "login": "mjwillson",
      "id": 4502,
      "node_id": "MDQ6VXNlcjQ1MDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjwillson",
      "html_url": "https://github.com/mjwillson",
      "followers_url": "https://api.github.com/users/mjwillson/followers",
      "following_url": "https://api.github.com/users/mjwillson/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjwillson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjwillson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjwillson/subscriptions",
      "organizations_url": "https://api.github.com/users/mjwillson/orgs",
      "repos_url": "https://api.github.com/users/mjwillson/repos",
      "events_url": "https://api.github.com/users/mjwillson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjwillson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T17:26:23Z",
    "updated_at": "2014-03-19T17:26:23Z",
    "author_association": "NONE",
    "body": "I figured a useful way to achieve this would be something like the following, which also helps out in cases where periods in a period index are of different lengths and you want to take that into account (e.g. calendar months):\n\n``` python\ndef period_series(start_datetime, end_datetime, **period_range_kwargs):\n    \"\"\"Like period_range, but instead of returning a PeriodIndex,\n    returns a Series indexed by the PeriodIndex, whose values are the\n    length (in seconds) of each period which overlaps the requested\n    timestamp range. At the endpoints of the range, this may not be\n    the full length of the period.\n    \"\"\"\n    start_datetime = p.to_datetime(start_datetime)\n    end_datetime = p.to_datetime(end_datetime)\n\n    # this will include both endpoints:\n    index = p.period_range(start_datetime, end_datetime, **period_range_kwargs)\n\n    # Maybe there's a nicer way to do this which avoids the ugly .99999 ?\n    # Note, periods in a PeriodIndex can be of different lengths, e.g. calendar\n    # months.\n    lengths = index.map(lambda x : (x.end_time - x.start_time).total_seconds())\n\n    # need to special-case the first and last value:\n    if len(lengths) == 1:\n        # start period = end period, needs special handling\n        lengths[0] = (end_datetime - start_datetime).total_seconds()\n    else:\n        lengths[0] = (index[0].end_time - start_datetime).total_seconds()\n        lengths[-1] = (end_datetime - index[-1].start_time).total_seconds()\n\n    return p.Series(lengths, index=index)\n```\n\nCan put a pull request together if you think this would be worth having in pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38081658",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6669#issuecomment-38081658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6669",
    "id": 38081658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDgxNjU4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T17:29:02Z",
    "updated_at": "2014-03-19T17:29:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you show a usage of this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38085629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6669#issuecomment-38085629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6669",
    "id": 38085629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDg1NjI5",
    "user": {
      "login": "mjwillson",
      "id": 4502,
      "node_id": "MDQ6VXNlcjQ1MDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjwillson",
      "html_url": "https://github.com/mjwillson",
      "followers_url": "https://api.github.com/users/mjwillson/followers",
      "following_url": "https://api.github.com/users/mjwillson/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjwillson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjwillson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjwillson/subscriptions",
      "organizations_url": "https://api.github.com/users/mjwillson/orgs",
      "repos_url": "https://api.github.com/users/mjwillson/repos",
      "events_url": "https://api.github.com/users/mjwillson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjwillson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T18:02:16Z",
    "updated_at": "2014-03-19T18:12:25Z",
    "author_association": "NONE",
    "body": "In general it feels like most reductions over series with irregular period lengths (like calendar month) really ought to be taking into account the varying period length somehow. So that's one use case.\n\nThe other use case which is made possible once you start taking period lengths into account, is the ability to handle the length of endpoint periods in a tidy pro-rata way when you're working over a time range which doesn't start and end on an exact period boundary.\n\nFor example, if you want to compute a weighted mean of some period-indexed time series over a time range:\n\n[EDIT: use `numpy.average`]\n\n``` python\nperiod_lengths = period_lengths(start_time, end_time, freq=values.index.freq)\nweighted_mean = np.average(values[period_lengths.index], weights=period_lengths)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38087134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6669#issuecomment-38087134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6669",
    "id": 38087134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDg3MTM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T18:14:27Z",
    "updated_at": "2014-03-19T18:14:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you show the example (with the output) for using your procedure (and then w/o for comparison).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38094846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6669#issuecomment-38094846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6669",
    "id": 38094846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDk0ODQ2",
    "user": {
      "login": "mjwillson",
      "id": 4502,
      "node_id": "MDQ6VXNlcjQ1MDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjwillson",
      "html_url": "https://github.com/mjwillson",
      "followers_url": "https://api.github.com/users/mjwillson/followers",
      "following_url": "https://api.github.com/users/mjwillson/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjwillson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjwillson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjwillson/subscriptions",
      "organizations_url": "https://api.github.com/users/mjwillson/orgs",
      "repos_url": "https://api.github.com/users/mjwillson/repos",
      "events_url": "https://api.github.com/users/mjwillson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjwillson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T19:17:56Z",
    "updated_at": "2014-03-19T19:17:56Z",
    "author_association": "NONE",
    "body": "OK -- not sure exactly what you're looking for there, but here's an example of usage:\n\n``` python\nIn [321]: period_lengths('2014-01-14', '2014-05-14', freq='M')\nOut[321]: \n2014-01    1555199.999999\n2014-02    2419199.999999\n2014-03    2678399.999999\n2014-04    2591999.999999\n2014-05    1123200.000000\nFreq: M, dtype: float64\n```\n\nNote how the different lengths of February and March show up, and that, since the start and end dates aren't aligned to month boundaries, the lengths at the endpoints aren't a full month.\n\n(The .9999 thing is a bit silly, but it's just inheriting that from Period.end_date)\n\nIt's just a thought anyway, no worries if you don't think it belongs.\n\nFor some other use cases, it might make more sense to return a series of the proportion of the period overlapping the range, e.g.\n\n``` python\nIn [324]: period_overlap_proportions('2014-01-14', '2014-05-14', freq='M')\nOut[324]: \n2014-01    0.580645\n2014-02    1.000000\n2014-03    1.000000\n2014-04    1.000000\n2014-05    0.433333\nFreq: M, dtype: float64\n```\n\nThis would then be useful if you wanted to sum up a series (like monthly revenue figures) over pro-rata over some range which isn't aligned with the month boundaries.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38095135",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6669#issuecomment-38095135",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6669",
    "id": 38095135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDk1MTM1",
    "user": {
      "login": "mjwillson",
      "id": 4502,
      "node_id": "MDQ6VXNlcjQ1MDI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4502?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjwillson",
      "html_url": "https://github.com/mjwillson",
      "followers_url": "https://api.github.com/users/mjwillson/followers",
      "following_url": "https://api.github.com/users/mjwillson/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjwillson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjwillson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjwillson/subscriptions",
      "organizations_url": "https://api.github.com/users/mjwillson/orgs",
      "repos_url": "https://api.github.com/users/mjwillson/repos",
      "events_url": "https://api.github.com/users/mjwillson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjwillson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T19:20:18Z",
    "updated_at": "2014-03-19T19:20:18Z",
    "author_association": "NONE",
    "body": "A lot of the use cases could also be handled better by numerical integration routines for series of samples, which allow endpoints to lie between sampling points. `scipy.integrate` doesn't seem to allow this at the moment.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38095794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6669#issuecomment-38095794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6669",
    "id": 38095794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDk1Nzk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-19T19:26:02Z",
    "updated_at": "2014-03-19T19:26:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "you might find this interesting: http://pandas.pydata.org/pandas-docs/stable/cookbook.html#miscellaneous (see the numerical integration example)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77760077",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6669#issuecomment-77760077",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6669",
    "id": 77760077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NzYwMDc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-08T16:41:48Z",
    "updated_at": "2015-03-08T16:41:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing. this might involve a transformation of the series to weight by durations. but would need a concrete use case here.\n"
  }
]
