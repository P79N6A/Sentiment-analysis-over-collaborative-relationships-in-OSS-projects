[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441341673",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-441341673",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 441341673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTM0MTY3Mw==",
    "user": {
      "login": "adamrossnelson",
      "id": 10912940,
      "node_id": "MDQ6VXNlcjEwOTEyOTQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10912940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamrossnelson",
      "html_url": "https://github.com/adamrossnelson",
      "followers_url": "https://api.github.com/users/adamrossnelson/followers",
      "following_url": "https://api.github.com/users/adamrossnelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamrossnelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamrossnelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamrossnelson/subscriptions",
      "organizations_url": "https://api.github.com/users/adamrossnelson/orgs",
      "repos_url": "https://api.github.com/users/adamrossnelson/repos",
      "events_url": "https://api.github.com/users/adamrossnelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamrossnelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-24T03:58:28Z",
    "updated_at": "2018-11-28T23:08:12Z",
    "author_association": "NONE",
    "body": "I think I can add to this issue with the following ... The current scheme seems to be that pd.to_stata knows it does not support writing unicode, so if it finds unicode it'll helpfully throw an error.\r\n\r\nHowever, I believe I've found some characters that `pd.to_stata` will write to a Stata data file without throwing an error, but that will cause trouble for Stata's version 117. (Long way here of saying I vote in favor of an enhancement that'll support Version 118).\r\n\r\n#### Code Sample, a copy-pastable example if possible\r\n\r\n```python\r\nimport pandas as pd\r\n\r\n# Make demonstration data. This data contains characters that should\r\n# cause Pandas to throw an error when using df.to_stata().\r\nbad_txt_sneaking_through = ''' Multiline text that sneaks by\r\nHere is one ____\r\nAnother one __·__   Another one __½__\r\nBad bad bad __Á__   Bad bad bad __¦__\r\nStill more __é__    Still more __§__    Still more __®__ '''\r\n\r\ndata_list = []\r\ndata_list.append(['First Record', bad_txt_sneaking_through])\r\ndata_list.append(['Second Record', 'This one will be fine'])\r\n\r\n# Make DataFrame from demonstration data.\r\ndf = pd.DataFrame(data_list, columns=['RecNum', 'Txt'])\r\n\r\n# Write data frame to Stata data file. Shouldn't write but does.\r\n# This file will not open in Stata.\r\ndf.to_stata('Demo_ShouldNotWork.dta', version=117, convert_strl=['Txt'])\r\n\r\n# Write first record which has the offending characters.\r\n# This file will not open in Stata.\r\ndf[0:1].to_stata('Demo_DoesNotWork.dta', version=117, convert_strl=['Txt'])\r\n\r\n# Write second record which has no offending characters.\r\n# This file will open in Stata.\r\ndf[1:2].to_stata('Demo_DoesWork.dta', version=117, convert_strl=['Txt'])\r\n\r\n# Define function that tests diagnosis (bad chacter count)\r\ndef make_it_work(bad_text):\r\n    ret_txt = ''\r\n    for item in bad_text:\r\n        ret_txt += item if len(item.encode(encoding='utf_8')) == 1 else ''\r\n    return(ret_txt)\r\n\r\ndf['Txt'] = df['Txt'].apply(make_it_work)\r\n\r\n# Write data frame to Stata data file. This time it should write and does.\r\n# This file will open in Stata.\r\ndf.to_stata('Demo_ShouldWork.dta', version=117, convert_strl=['Txt'])\r\n```\r\n#### Problem description\r\n\r\nPandas `pd.to_stata` does not throw an error for some characters which are problematic in stata.\r\n\r\nWhen writing Stata data files Pandas usually (and helpfully) throws an error if there are non Latin-1 characters in an StrL data field. However, when I was working with a large dataset I scraped from the web I managed to write a data file without getting an error from Pandas. All was going well. But, Stata was unable to read the file.\r\n\r\nWith some assistance from Stata technical support I believe the correct diagnosis was an issue with under counting the total number of characters in the StrL. Stata technical support indicated to me that Unicode characters will throw off the count. At first I thought this shouldn't be a problem because I thought `pd.to_stata` would handle the issue by throwing an error. As demonstrated below, some characters seem to be able to sneak through.\r\n\r\nIn troubleshooting and documenting the issue I believe the function `make_it_work()` is at least a partial solution. It is crude. This solution might help folks using `pd.to_stata` until there is a more integrated fix. Or, perhaps someone can point me to another solution. I would also put a plug in for enhancing `pd.to_stata so` that it will support writing unicode.\r\n\r\n#### Expected Output\r\n\r\nThus I would vote in favor of future developments finding a method to throw an error for such characters that seem for now to be sneaking through. Here is code and output that produces what would be more helpful. _In the alternative, an enhancement as @kylebarron suggested that would accommodate Unicode would also be an appropriate solution._\r\n\r\n```Python\r\nbad_txt_not_sneaking_through = '''Bad text that does not sneak through...\r\n\r\nHere you go ► '''\r\n\r\ndata_list = []\r\ndata_list.append(['First Record', bad_txt_not_sneaking_through])\r\ndata_list.append(['Second Record', 'This one will be fine'])\r\n\r\ndf = pd.DataFrame(data_list, columns=['RecNum', 'Txt'])\r\n\r\ndf.to_stata('Demo_ShouldNotWork.dta', version=117, convert_strl=['Txt'])\r\n```\r\nOutput (abridged):\r\n```\r\n---------------------------------------------------------------------------\r\nUnicodeEncodeError                        Traceback (most recent call last)\r\n<ipython-input-4-aa00fe80a653> in <module>()\r\n      9 df = pd.DataFrame(data_list, columns=['RecNum', 'Txt'])\r\n     10 \r\n---> 11 df.to_stata('Demo_ShouldNotWork.dta', version=117, convert_strl=['Txt'])\r\n\r\n. . .\r\n\r\nUnicodeEncodeError: 'latin-1' codec can't encode character '\\u25ba' in position 53: ordinal not in range(256)\r\n```\r\n\r\n#### Output of ``pd.show_versions()``\r\n\r\n<details>\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.6.4.final.0\r\npython-bits: 64\r\nOS: Darwin\r\nOS-release: 17.7.0\r\nmachine: x86_64\r\nprocessor: i386\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.UTF-8\r\nLOCALE: en_US.UTF-8\r\n\r\npandas: 0.23.4\r\npytest: 3.3.2\r\npip: 10.0.1\r\nsetuptools: 38.4.0\r\nCython: 0.27.3\r\nnumpy: 1.14.0\r\nscipy: 1.0.0\r\npyarrow: None\r\nxarray: None\r\nIPython: 6.2.1\r\nsphinx: 1.6.6\r\npatsy: 0.5.0\r\ndateutil: 2.6.1\r\npytz: 2017.3\r\nblosc: None\r\nbottleneck: 1.2.1\r\ntables: 3.4.2\r\nnumexpr: 2.6.4\r\nfeather: None\r\nmatplotlib: 2.1.2\r\nopenpyxl: 2.4.10\r\nxlrd: 1.1.0\r\nxlwt: 1.2.0\r\nxlsxwriter: 1.0.2\r\nlxml: 4.1.1\r\nbs4: 4.6.0\r\nhtml5lib: 1.0.1\r\nsqlalchemy: 1.2.1\r\npymysql: None\r\npsycopg2: None\r\njinja2: 2.10\r\ns3fs: None\r\nfastparquet: None\r\npandas_gbq: None\r\npandas_datareader: None\r\n\r\n</details>\r\n\r\n\r\nEdit1: Elaborated intro comments.\r\nEdit2: Added to the expected output session."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446759844",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-446759844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 446759844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Njc1OTg0NA==",
    "user": {
      "login": "kylebarron",
      "id": 15164633,
      "node_id": "MDQ6VXNlcjE1MTY0NjMz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15164633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kylebarron",
      "html_url": "https://github.com/kylebarron",
      "followers_url": "https://api.github.com/users/kylebarron/followers",
      "following_url": "https://api.github.com/users/kylebarron/following{/other_user}",
      "gists_url": "https://api.github.com/users/kylebarron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kylebarron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kylebarron/subscriptions",
      "organizations_url": "https://api.github.com/users/kylebarron/orgs",
      "repos_url": "https://api.github.com/users/kylebarron/repos",
      "events_url": "https://api.github.com/users/kylebarron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kylebarron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T21:58:26Z",
    "updated_at": "2018-12-12T21:58:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adamrossnelson \t\r\n\r\nAll of those characters are included in the Latin-1 encoding, and seem to work fine in Stata. If you want to test it yourself, run this:\r\n```stata\r\nset obs 10\r\ngen x = \"\"\r\nreplace x = \"Here is one __�__\" in 1\r\nreplace x = \"Another one __·__\" in 2\r\nreplace x = \"Another one __½__\" in 3\r\nreplace x = \"Bad bad bad __Á__\" in 4\r\nreplace x = \"Bad bad bad __¦__\" in 5\r\nsaveold test.dta, version(13)\r\n\r\nuse test.dta, clear\r\n```\r\n\r\nSo those characters _should_ work with version 117, and if they don't it's a bug."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447808231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-447808231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 447808231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzgwODIzMQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T11:09:28Z",
    "updated_at": "2018-12-17T11:09:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adamrossnelson You are actually experiencing a different bug.  The files that you can't don't work with Stata don't work because they are only partially written (at least in master). A patch is needed to cleanup writes that fail (ok, but can be difficult to get right, but easy to implement), or to possible reorder the steps so that all of the data checks happen before the file is created (better solution, but may need a lot of work)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447866186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-447866186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 447866186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg2NjE4Ng==",
    "user": {
      "login": "adamrossnelson",
      "id": 10912940,
      "node_id": "MDQ6VXNlcjEwOTEyOTQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10912940?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamrossnelson",
      "html_url": "https://github.com/adamrossnelson",
      "followers_url": "https://api.github.com/users/adamrossnelson/followers",
      "following_url": "https://api.github.com/users/adamrossnelson/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamrossnelson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamrossnelson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamrossnelson/subscriptions",
      "organizations_url": "https://api.github.com/users/adamrossnelson/orgs",
      "repos_url": "https://api.github.com/users/adamrossnelson/repos",
      "events_url": "https://api.github.com/users/adamrossnelson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamrossnelson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T14:33:28Z",
    "updated_at": "2018-12-17T14:33:28Z",
    "author_association": "NONE",
    "body": "@bashtage ... would you suggest starting a new issue? I'd be happy to do that to help track."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447867858",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-447867858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 447867858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg2Nzg1OA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T14:38:50Z",
    "updated_at": "2018-12-17T14:38:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not worth it.  I have the PR ready."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447936922",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-447936922",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 447936922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzkzNjkyMg==",
    "user": {
      "login": "kylebarron",
      "id": 15164633,
      "node_id": "MDQ6VXNlcjE1MTY0NjMz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15164633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kylebarron",
      "html_url": "https://github.com/kylebarron",
      "followers_url": "https://api.github.com/users/kylebarron/followers",
      "following_url": "https://api.github.com/users/kylebarron/following{/other_user}",
      "gists_url": "https://api.github.com/users/kylebarron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kylebarron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kylebarron/subscriptions",
      "organizations_url": "https://api.github.com/users/kylebarron/orgs",
      "repos_url": "https://api.github.com/users/kylebarron/repos",
      "events_url": "https://api.github.com/users/kylebarron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kylebarron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T17:54:23Z",
    "updated_at": "2018-12-17T17:54:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bashtage I might be mistaken, but I felt that the bug was that those characters _should_ be able to be written with the current Pandas writer. The `df.to_stata` documentation says that it supports Latin-1 encoding, and all of those characters in @adamrossnelson 's comment [are present in that encoding](https://en.wikipedia.org/wiki/ISO/IEC_8859-1#Code_page_layout). Therefore it should be able to be written, right?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447938508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-447938508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 447938508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzkzODUwOA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T17:59:05Z",
    "updated_at": "2018-12-17T17:59:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "� copies and pastes as U+FFFD which is not supported in Latin-1.  \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447946866",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-447946866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 447946866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzk0Njg2Ng==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T18:23:44Z",
    "updated_at": "2018-12-17T18:23:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can run this to sanitize it:\r\n\r\n```\r\nimport pandas as pd\r\n\r\n# Make demonstration data. This data contains characters that should\r\n# cause Pandas to throw an error when using df.to_stata().\r\nbad_txt_sneaking_through = ''' Multiline text that sneaks by\r\nHere is one __�__\r\nAnother one __·__   Another one __½__\r\nBad bad bad __Á__   Bad bad bad __¦__\r\nStill more __é__    Still more __§__    Still more __®__ '''\r\n\r\ndata_list = []\r\ndata_list.append(['First Record', bad_txt_sneaking_through])\r\ndata_list.append(['Second Record', 'This one will be fine'])\r\n\r\n# Make DataFrame from demonstration data.\r\ndf = pd.DataFrame(data_list, columns=['RecNum', 'Txt'])\r\n\r\n# Define function that tests diagnosis (bad chacter count)\r\ndef make_it_work(bad_text):\r\n    ret_txt = ''\r\n    for item in bad_text:\r\n        try:\r\n            ret_txt += item.encode('latin-1').decode('latin-1')\r\n        except:\r\n            pass\r\n    return(ret_txt)\r\n\r\ndf2 = df.copy()\r\ndf2['Txt'] = df['Txt'].apply(make_it_work)\r\n\r\ndf2.to_stata('if-it-doesnt-load-there-is-a-bug.dta', version=117, convert_strl=['Txt'])\r\n```\r\n\r\nIt seems that this file is not loadable which suggests there is a bug in multiline strl encoding.  I suppose the first issue is to determine whether strl supports multilines in 117."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448237731",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-448237731",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 448237731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODIzNzczMQ==",
    "user": {
      "login": "kylebarron",
      "id": 15164633,
      "node_id": "MDQ6VXNlcjE1MTY0NjMz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15164633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kylebarron",
      "html_url": "https://github.com/kylebarron",
      "followers_url": "https://api.github.com/users/kylebarron/followers",
      "following_url": "https://api.github.com/users/kylebarron/following{/other_user}",
      "gists_url": "https://api.github.com/users/kylebarron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kylebarron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kylebarron/subscriptions",
      "organizations_url": "https://api.github.com/users/kylebarron/orgs",
      "repos_url": "https://api.github.com/users/kylebarron/repos",
      "events_url": "https://api.github.com/users/kylebarron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kylebarron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T14:25:14Z",
    "updated_at": "2018-12-18T14:25:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't believe the [original issue](https://github.com/pandas-dev/pandas/issues/23573#issue-378846352) of this thread (unicode Stata file writing support) is actually resolved. @adamrossnelson \tposted an example which showed both 1) the need for unicode write support and 2) a bug with the current code. #24337 fixed the bug with the current code; unicode write support is a larger endeavor and is still uncompleted."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448238543",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23573#issuecomment-448238543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23573",
    "id": 448238543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODIzODU0Mw==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T14:27:43Z",
    "updated_at": "2018-12-18T14:27:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, it should be reopened.  It closed an issue in this issue, rather than the issue."
  }
]
