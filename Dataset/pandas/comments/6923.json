[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41043225",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6923#issuecomment-41043225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6923",
    "id": 41043225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQzMjI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T14:05:32Z",
    "updated_at": "2014-04-22T14:06:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you are misunderstanding what I wrote on SO.\nimpossible to keep the attached metadata on a series when its part of a frame. The metadata is simply not kept as its stored as an ndarray.\n\nwith a patch (#6924), the following will work - it will propogate metadata on the combination ONLY\n\n```\nIn [1]: np.random.seed(10)\n\nIn [2]: df1 = DataFrame(np.random.randint(0, 4, (3, 2)), columns=['a', 'b'])\n\nIn [3]: df2 = DataFrame(np.random.randint(0, 4, (3, 2)), columns=['c', 'd'])\n\nIn [4]: DataFrame._metadata = ['filename']\n\nIn [5]: df1.filename = 'fname1.csv'\n\nIn [6]: df2.filename = 'fname2.csv'\n\nIn [7]: def finalize(self, other, method=None, **kwargs):\n   ...:     for name in self._metadata:\n   ...:         if method == 'merge':\n   ...:             left, right = other.left, other.right\n   ...:             value = getattr(left, name, '') + '|' + getattr(right, name, '')\n   ...:             object.__setattr__(self, name, value)\n   ...:         else:\n   ...:             object.__setattr__(self, name, getattr(other, name, ''))\n                return self\nIn [9]: DataFrame.__finalize__ = finalize\n\nIn [10]: result = df1.merge(df2, left_on=['a'], right_on=['c'], how='inner')\n\nIn [11]: result.filename\nOut[11]: 'fname1.csv|fname2.csv'\n```\n\nWhat i think you may want is to use a multi-level frame where the filename is a level\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41044433",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6923#issuecomment-41044433",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6923",
    "id": 41044433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ0NDMz",
    "user": {
      "login": "wcbeard",
      "id": 379413,
      "node_id": "MDQ6VXNlcjM3OTQxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/379413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcbeard",
      "html_url": "https://github.com/wcbeard",
      "followers_url": "https://api.github.com/users/wcbeard/followers",
      "following_url": "https://api.github.com/users/wcbeard/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcbeard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcbeard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcbeard/subscriptions",
      "organizations_url": "https://api.github.com/users/wcbeard/orgs",
      "repos_url": "https://api.github.com/users/wcbeard/repos",
      "events_url": "https://api.github.com/users/wcbeard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcbeard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T14:15:37Z",
    "updated_at": "2014-04-22T14:15:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting, so when I assign metadata/attributes to each series within a dataframe there's no mechanism to keep it? Metadata is only kept on series when treated independently from a dataframe?\n\nIf so, I should still be able to keep dataframe-level metadata as a dict of {Series name: attribute value}, which should still be propagated, correct? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41044934",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6923#issuecomment-41044934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6923",
    "id": 41044934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ0OTM0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T14:19:48Z",
    "updated_at": "2014-04-22T14:20:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@d10genes yes, you _could_ do that if you wanted to. The entire problem arises from how to combine them.\n\nImagine we supported this:\n\n```\ns1.filename='a'\ns2.filename='b'\n```\n\nwhat is `(s1+s2).filename`?\n\nyou might look at https://github.com/kjordahl/geopandas they did a full sub-class of DataFrame/Series and DO propogate metadata.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41045219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6923#issuecomment-41045219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6923",
    "id": 41045219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ1MjE5",
    "user": {
      "login": "wcbeard",
      "id": 379413,
      "node_id": "MDQ6VXNlcjM3OTQxMw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/379413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wcbeard",
      "html_url": "https://github.com/wcbeard",
      "followers_url": "https://api.github.com/users/wcbeard/followers",
      "following_url": "https://api.github.com/users/wcbeard/following{/other_user}",
      "gists_url": "https://api.github.com/users/wcbeard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wcbeard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wcbeard/subscriptions",
      "organizations_url": "https://api.github.com/users/wcbeard/orgs",
      "repos_url": "https://api.github.com/users/wcbeard/repos",
      "events_url": "https://api.github.com/users/wcbeard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wcbeard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T14:21:46Z",
    "updated_at": "2014-04-22T14:21:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "That makes sense, I'll take a look. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41045441",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6923#issuecomment-41045441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6923",
    "id": 41045441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ1NDQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-22T14:23:20Z",
    "updated_at": "2014-04-22T14:23:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "gr8 thanks!\n"
  }
]
