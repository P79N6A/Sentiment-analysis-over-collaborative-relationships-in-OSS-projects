[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/283836254",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15550#issuecomment-283836254",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15550",
    "id": 283836254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzgzNjI1NA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-03T01:19:47Z",
    "updated_at": "2017-03-03T01:19:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was thinking this would be nice the other day.  Don't want to get too carried away with the accesssors, but what about a `.type` (may be a better name) one to stuff these into?\r\n\r\n```python\r\ns.type.astype(...) # numpy style\r\ns.type.to_datetime(...)`\r\n# maybe add?\r\ns.type.to_category(...)\r\n```\r\n\r\nIn general the current `astype(...)` / `to_datetime(...)` difference is a bit confusing.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304145115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15550#issuecomment-304145115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15550",
    "id": 304145115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE0NTExNQ==",
    "user": {
      "login": "kernc",
      "id": 684364,
      "node_id": "MDQ6VXNlcjY4NDM2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kernc",
      "html_url": "https://github.com/kernc",
      "followers_url": "https://api.github.com/users/kernc/followers",
      "following_url": "https://api.github.com/users/kernc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kernc/subscriptions",
      "organizations_url": "https://api.github.com/users/kernc/orgs",
      "repos_url": "https://api.github.com/users/kernc/repos",
      "events_url": "https://api.github.com/users/kernc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kernc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T22:49:00Z",
    "updated_at": "2017-05-25T22:49:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for simply overloading `.astype(..., **kwargs)` with kwargs passed to expecting functions. üëç "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321970541",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15550#issuecomment-321970541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15550",
    "id": 321970541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTk3MDU0MQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-12T09:54:15Z",
    "updated_at": "2017-08-12T09:54:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like @chris-b1 's idea, but I suggest the accessor be called ``.cast`` instead, because \r\nIMO the name ``type`` can be confused with ``.dtype``. So:\r\n* ``s.cast.to_type``,\r\n* ``s.cast.to_datetime``,\r\n* etc.\r\n\r\nI'm +1 on overloading ``.astype``, i.e. making ``astype`` delegate to various subfunction depending on input. That would of course require a upgrade to the docs to avoid confusion.\r\n\r\nI'm -1 on adding the functionality to dataframe/series namespace (e.g. ``s.to_datetime``) as I think the API is already very large and we need to group similar functionality together to lessen the cognitive load of knowing the library."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333341849",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15550#issuecomment-333341849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15550",
    "id": 333341849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzM0MTg0OQ==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-30T23:09:39Z",
    "updated_at": "2017-09-30T23:09:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Bump!  \r\nThe **kwargs are available in `astype` but apparently, they don't work for certain dtypes? The docstrings even mention the kwargs get passed to the constructor but this isn't happening for datetime64.  And what is the constructor for datetime64? Is it `to_datetime` or `Timestamp`?"
  }
]
