[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/187190952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12415#issuecomment-187190952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12415",
    "id": 187190952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzE5MDk1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-22T14:10:16Z",
    "updated_at": "2016-02-22T14:10:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "not really sure what you are asking. `.apply` does its best to infer what you arbitrary function is doing. using lists as elements of a pandas (or numpy object) is just completely non-performant / wrong idiom anyhow. What are you expecting?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/187376935",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12415#issuecomment-187376935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12415",
    "id": 187376935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzM3NjkzNQ==",
    "user": {
      "login": "pkch",
      "id": 1593648,
      "node_id": "MDQ6VXNlcjE1OTM2NDg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1593648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pkch",
      "html_url": "https://github.com/pkch",
      "followers_url": "https://api.github.com/users/pkch/followers",
      "following_url": "https://api.github.com/users/pkch/following{/other_user}",
      "gists_url": "https://api.github.com/users/pkch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pkch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pkch/subscriptions",
      "organizations_url": "https://api.github.com/users/pkch/orgs",
      "repos_url": "https://api.github.com/users/pkch/repos",
      "events_url": "https://api.github.com/users/pkch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pkch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-22T20:48:51Z",
    "updated_at": "2016-02-22T20:51:19Z",
    "author_association": "NONE",
    "body": "It is wrong for large dataframes, for sure. But it's not prohibited by pandas, and for small dataframes it causes no harm. My problem is that the behavior is so unexpected - literally the Series becomes a DataFrame depending on the exact number of columns in the input. Just hard to debug. I'd like pandas to either raise exception or be consistent in its behavior (which is precisely what it's doing when it receives `ndarray` or `Index` or `Series`: it's raising exception when the shape of those doesn't match the shape of the original DF).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/187382560",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12415#issuecomment-187382560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12415",
    "id": 187382560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NzM4MjU2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-22T21:04:30Z",
    "updated_at": "2016-02-22T21:04:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, you can try looking at it, but I dont suspect this is doable. `.apply` tries to figure out what is coming out and based the makeup return an appropriate object. As I said, having embedded lists then doing a non-reducing operation is quite weird.\n"
  }
]
