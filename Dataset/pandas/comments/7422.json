[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45670147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45670147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45670147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjcwMTQ3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-10T20:53:08Z",
    "updated_at": "2014-06-10T20:53:08Z",
    "author_association": "MEMBER",
    "body": "@aergener How did you connect to SQL server (how do you set the default schema)?\n\nIt is a bit strange that when checking for the table it looks in `dbo`, but when writing it used the sepcified `test` schema.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45670550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45670550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45670550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjcwNTUw",
    "user": {
      "login": "aergener",
      "id": 5935200,
      "node_id": "MDQ6VXNlcjU5MzUyMDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5935200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aergener",
      "html_url": "https://github.com/aergener",
      "followers_url": "https://api.github.com/users/aergener/followers",
      "following_url": "https://api.github.com/users/aergener/following{/other_user}",
      "gists_url": "https://api.github.com/users/aergener/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aergener/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aergener/subscriptions",
      "organizations_url": "https://api.github.com/users/aergener/orgs",
      "repos_url": "https://api.github.com/users/aergener/repos",
      "events_url": "https://api.github.com/users/aergener/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aergener/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-10T20:56:18Z",
    "updated_at": "2014-06-10T20:58:14Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche I connected to SQL Server using `sqlalchemy.create_engine`. The default schema is a user setting within SQL Server itself (not specified while connecting in python). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45671388",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45671388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45671388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjcxMzg4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-10T21:02:55Z",
    "updated_at": "2014-06-10T21:03:11Z",
    "author_association": "MEMBER",
    "body": "Can you check `engine.has_table('foobar')`? (instead of the `pd.io.sql.has_table('foobar', engine)` which gave a false False). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45672326",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45672326",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45672326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjcyMzI2",
    "user": {
      "login": "aergener",
      "id": 5935200,
      "node_id": "MDQ6VXNlcjU5MzUyMDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5935200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aergener",
      "html_url": "https://github.com/aergener",
      "followers_url": "https://api.github.com/users/aergener/followers",
      "following_url": "https://api.github.com/users/aergener/following{/other_user}",
      "gists_url": "https://api.github.com/users/aergener/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aergener/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aergener/subscriptions",
      "organizations_url": "https://api.github.com/users/aergener/orgs",
      "repos_url": "https://api.github.com/users/aergener/repos",
      "events_url": "https://api.github.com/users/aergener/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aergener/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-10T21:10:25Z",
    "updated_at": "2014-06-10T21:15:14Z",
    "author_association": "NONE",
    "body": "When the table is in the `test` schema:\n\n```\n>>> engine.has_table('foobar')\nOut[9]: False\n```\n\nWhen creating a table in SQL Server if a schema is not specifically designated, the table will be created in the user's default schema. Perhaps this issue could be fixed if pandas specified a schema for sqlalchemy to use that the user could potentially override?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45790004",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45790004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45790004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzkwMDA0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-11T19:45:22Z",
    "updated_at": "2014-06-11T19:45:22Z",
    "author_association": "MEMBER",
    "body": "I cannot reproduce this with postgresql (set the default schema to something else than the default 'public', but both the checking if the table exists or writing the data uses the same schema I set as default). So I am thinking it is possibly a bug in the sqlalchemy interface to SQL server (just guessing, I don't use SQL server). As `engine.has_table('foobar')` should look in the default schema I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45837896",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45837896",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45837896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODM3ODk2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-12T07:30:10Z",
    "updated_at": "2014-06-12T07:30:10Z",
    "author_association": "MEMBER",
    "body": "@aergener I posted on the sqlalchemy mailing list: https://groups.google.com/forum/?fromgroups#!topic/sqlalchemy/Ktu06z9x97c Can you try what is said there?\n\nSo add `echo='debug'` to `create_engine(  )`, then then look in the logs (those are printed) when you use the `to_sql` function. There should somewhere be a query to get the default schema name.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45919928",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45919928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45919928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTE5OTI4",
    "user": {
      "login": "aergener",
      "id": 5935200,
      "node_id": "MDQ6VXNlcjU5MzUyMDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5935200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aergener",
      "html_url": "https://github.com/aergener",
      "followers_url": "https://api.github.com/users/aergener/followers",
      "following_url": "https://api.github.com/users/aergener/following{/other_user}",
      "gists_url": "https://api.github.com/users/aergener/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aergener/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aergener/subscriptions",
      "organizations_url": "https://api.github.com/users/aergener/orgs",
      "repos_url": "https://api.github.com/users/aergener/repos",
      "events_url": "https://api.github.com/users/aergener/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aergener/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-12T17:08:27Z",
    "updated_at": "2014-06-12T17:08:27Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche  Cool, I'll test this out then get back to you.\n\nAs an aside, I was wondering if you have thought about adding better datatype support to pandas. Specifically, looking at `pandas.io.sql.PandasSQLTable._sqlalchemy_type` all strings in pandas end up as text fields in SQL. I'm not sure about other flavors, but in SQL Server working with text fields is a pain, so it would be nice to have something like `string_repr` option in `to_sql`. Do you have an email I can contact you at? I would like to help with this, as well as get involved with pandas development in general, but I'm not sure how I should go about it, and you seem like the SQL guy around here...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45966008",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45966008",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45966008,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTY2MDA4",
    "user": {
      "login": "aergener",
      "id": 5935200,
      "node_id": "MDQ6VXNlcjU5MzUyMDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5935200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aergener",
      "html_url": "https://github.com/aergener",
      "followers_url": "https://api.github.com/users/aergener/followers",
      "following_url": "https://api.github.com/users/aergener/following{/other_user}",
      "gists_url": "https://api.github.com/users/aergener/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aergener/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aergener/subscriptions",
      "organizations_url": "https://api.github.com/users/aergener/orgs",
      "repos_url": "https://api.github.com/users/aergener/repos",
      "events_url": "https://api.github.com/users/aergener/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aergener/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T01:04:33Z",
    "updated_at": "2014-06-13T01:04:33Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche It looks like it's not picking up anything for the `default_schema_name` and defaulting to `dbo`. Notice how there's no `row` after `2014-06-12 20:56:15,461 DEBUG sqlalchemy.engine.base.Engine Col ('default_schema_name',)`\n\n```\n2014-06-12 20:56:15,459 INFO sqlalchemy.engine.base.Engine SELECT user_name()\n2014-06-12 20:56:15,459 INFO sqlalchemy.engine.base.Engine ()\n2014-06-12 20:56:15,460 DEBUG sqlalchemy.engine.base.Engine Col ('',)\n2014-06-12 20:56:15,460 DEBUG sqlalchemy.engine.base.Engine Row (u'aergener', )\n2014-06-12 20:56:15,460 INFO sqlalchemy.engine.base.Engine \n            SELECT default_schema_name FROM\n            sys.database_principals\n            WHERE name = ?\n            AND type = 'S'\n\n2014-06-12 20:56:15,460 INFO sqlalchemy.engine.base.Engine (u'aergener',)\n2014-06-12 20:56:15,461 DEBUG sqlalchemy.engine.base.Engine Col ('default_schema_name',)\n2014-06-12 20:56:15,467 INFO sqlalchemy.engine.base.Engine SELECT [TABLES_1].[TABLE_NAME] \nFROM [INFORMATION_SCHEMA].[TABLES] AS [TABLES_1] \nWHERE [TABLES_1].[TABLE_SCHEMA] = CAST(? AS NVARCHAR(max)) AND [TABLES_1].[TABLE_TYPE] = ? ORDER BY [TABLES_1].[TABLE_NAME]\n2014-06-12 20:56:15,467 INFO sqlalchemy.engine.base.Engine (u'dbo', u'BASE TABLE')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45986579",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45986579",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45986579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg2NTc5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T08:18:09Z",
    "updated_at": "2014-06-13T08:18:09Z",
    "author_association": "MEMBER",
    "body": "@aergener Hmm I don't know SQL Server, so don't know how it works with users and schema's. Maybe you follow up further at the sqlalchemy mailing thread?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45987477",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45987477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45987477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTg3NDc3",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T08:30:42Z",
    "updated_at": "2014-06-13T08:32:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sounds related to https://github.com/pydata/pandas/issues/7441 -- @jorisvandenbossche, looks like we'll need to be able to pass schema/meta manually to `read_sql` / `to_sql` functions after all? :)\n\n@aergener Try this?\n\n``` python\nengine = create_engine(..., echo='debug')\nmeta = MetaData()\nmeta.reflect(bind=engine, schema='test')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45990179",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45990179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45990179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTkwMTc5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T09:03:44Z",
    "updated_at": "2014-06-13T09:04:33Z",
    "author_association": "MEMBER",
    "body": "@aldanor It is certainly related, but not necesarily the same issue, as 1) this just works with postgresql (if you are a user with another default schema, it just reads and writes from/to that schema), and 2) `engine.has_table()` will still look in the wrong place.\n\nI mean, having a `schema` argument might be a way to circumvent this issue here, but this case should actually work out of the box? (although I don't know SQL Server, so can't say for sure)\n\nUPDATE: my second point can of course be solved with the `engine.has_table( .. , schema=..)` if we have a `schema` argument.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45990610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-45990610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 45990610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1OTkwNjEw",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T09:09:03Z",
    "updated_at": "2014-06-13T09:20:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Can't say much about this case, don't know much about SQL Server either. In Oracle, I had to set the schema equal to original table owner when calling `MetaData#reflect` for meta to be able to reflect anything.\n\nRegarding the original question, found a discussion on schemas in sqlalchemy with SQL Server here: https://groups.google.com/forum/#!topic/sqlalchemy/VZQ_SLprNQA -- again, it boils down to passing schema manually when all else fails. \n\nLooks like there's many ways \"default schema\" could fail, quoting the link above:\n\n> Default Schema Name can be empty if the user logs in via an AD Group. \n> (in fact a Group user cannot be assigned a default schema name before \n> SQL Server 2012...). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46031164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-46031164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 46031164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDMxMTY0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-13T16:23:09Z",
    "updated_at": "2014-06-13T16:23:09Z",
    "author_association": "MEMBER",
    "body": "@aergener If you want to get more involved, very welcome! I am following up a bit the sql issues, but I am by no mean an sql expert (just using postgresql a bit myself). So the experience of other people with other database flavors, more advanced use cases, other database set-ups with users and privileges, etc is very useful. \nSome tips to get started:\n- File an issue for the enhancement ideas you have (eg about the better datatype support), so we can start discussing it. Try to give some example case where this would be useful, a possible interface, ..\n- Try to run the sql test suite with SQL Server (for now it is only tested on travis with postgresql, mysql (with pymysql) and sqlite, SQL Server is not available there). But it would be very useful to extend this testing coverage. For this you should make a class similiar to TestPostgreSQLAlchemy in https://github.com/pydata/pandas/blob/master/pandas/io/tests/test_sql.py#L1112. This could be a good starter.\n- Look through the issue with the SQL label and look if you want to try to tackle one (or non-sql issue also welcome of course!) If you hav any questions about it, just ask in the relevant issue.\n\nSee here for more general advice on getting started with pandas development: http://pandas.pydata.org/developers.html and https://github.com/pydata/pandas/wiki/Contributing. If you have any questions, just ask here or at the pydata mailing list (https://groups.google.com/forum/#!forum/pydata). Questions you have are probably also relevant to others.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50120805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-50120805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 50120805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTIwODA1",
    "user": {
      "login": "JoergRittinger",
      "id": 7314281,
      "node_id": "MDQ6VXNlcjczMTQyODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7314281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoergRittinger",
      "html_url": "https://github.com/JoergRittinger",
      "followers_url": "https://api.github.com/users/JoergRittinger/followers",
      "following_url": "https://api.github.com/users/JoergRittinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoergRittinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoergRittinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoergRittinger/subscriptions",
      "organizations_url": "https://api.github.com/users/JoergRittinger/orgs",
      "repos_url": "https://api.github.com/users/JoergRittinger/repos",
      "events_url": "https://api.github.com/users/JoergRittinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoergRittinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T08:18:43Z",
    "updated_at": "2014-07-25T08:18:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have also problems with the missing `schema` information in `to_sql` when ussing `if_exists='append'`.\nWithin `sql.PandasSQLAlchemy` the functions `get_table` and `has_table` are called with the same parameter `name` starting from the `to_sql` function.\nIn the dialect I use the tables in metadata look like this (which will be used in `get_table`):\n\n```\n>>> self.meta.tables.keys()\n[ ..., 'schema_name.table_name', ...]\n```\n\nOn the other hand the `has_table` function of my engine expects table and schema name as two arguments:\n\n```\ndef has_table(self, connection, table_name, schema=None):\n    ...\n```\n\nSo when I call:\n\n```\npandas_sql.to_sql(\n        frame=dataframe,\n        name='table_name',\n        if_exists='append')\n```\n\n`get_table` will return None. If I call it with:\n\n```\npandas_sql.to_sql(\n        frame=dataframe,\n        name='schema_name.table_name',\n        if_exists='append')\n```\n\n`get_table` will return the table but `has_table` will return False.\n\nAm I correct that this is kind of the same problem as you discussed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50138696",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-50138696",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 50138696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTM4Njk2",
    "user": {
      "login": "maxgrenderjones",
      "id": 6059365,
      "node_id": "MDQ6VXNlcjYwNTkzNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6059365?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxgrenderjones",
      "html_url": "https://github.com/maxgrenderjones",
      "followers_url": "https://api.github.com/users/maxgrenderjones/followers",
      "following_url": "https://api.github.com/users/maxgrenderjones/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxgrenderjones/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxgrenderjones/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxgrenderjones/subscriptions",
      "organizations_url": "https://api.github.com/users/maxgrenderjones/orgs",
      "repos_url": "https://api.github.com/users/maxgrenderjones/repos",
      "events_url": "https://api.github.com/users/maxgrenderjones/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxgrenderjones/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T11:44:35Z",
    "updated_at": "2014-07-25T11:48:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "They're related, and down to the fact that `has_table` and `get_table` do different things.\n\n`has_table` does a SQL query to determine if the table exists, using your own engine's way of doing that query. `get_table` returns the table out of a dictionary of tables that have been loaded by reflection from the database (so it doesn't trigger a SQL query). As a result `has_table` being `True` does not imply that you'll get anything back when you call `get_table`. This therefore results in strange effects if the methods are called in ways that they don't support (see #7826 and #7815).\n\nimho the entry methods (e.g. `to_sql`) should take a schema name, but then pandas will need to somehow be aware that reflection returns `schema_name.table_name` under some circumstances but not others (can SQLAlchemy tell us this?). In other words, `get_table` may need to get much more intelligence than a simple dictionary lookup.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50215056",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-50215056",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 50215056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjE1MDU2",
    "user": {
      "login": "JoergRittinger",
      "id": 7314281,
      "node_id": "MDQ6VXNlcjczMTQyODE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7314281?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JoergRittinger",
      "html_url": "https://github.com/JoergRittinger",
      "followers_url": "https://api.github.com/users/JoergRittinger/followers",
      "following_url": "https://api.github.com/users/JoergRittinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/JoergRittinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JoergRittinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JoergRittinger/subscriptions",
      "organizations_url": "https://api.github.com/users/JoergRittinger/orgs",
      "repos_url": "https://api.github.com/users/JoergRittinger/repos",
      "events_url": "https://api.github.com/users/JoergRittinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JoergRittinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T23:25:49Z",
    "updated_at": "2014-07-26T09:14:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "What do think about replacing the two functions in `PandasSQLAlchemy`:\n\n```\ndef has_table(self, name):\n    return self.engine.has_table(name)\n\ndef get_table(self, table_name):\n    return self.meta.tables.get(table_name)\n```\n\nwith:\n\n```\ndef has_table(self, table_name, schema_name=None):\n    return self.engine.has_table(table_name, schema_name)\n\ndef get_table(self, table_name, schema_name=None):\n    if schema_name:\n        for table in self.metadata.tables.itervalues():\n            if table.name == table_name and table.schema == schema_name:\n                return table\n    else:\n        return self.meta.tables.get(table_name)\n```\n\nof course at many other points schema_name would have to be added to function call\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51479396",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-51479396",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 51479396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDc5Mzk2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T14:31:10Z",
    "updated_at": "2014-08-07T14:31:10Z",
    "author_association": "MEMBER",
    "body": "Hey @aergener, an implementation of schema support is here: #7952. Could you try this out to see if this fixes your problem (if you specify the schema)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51786304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-51786304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 51786304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg2MzA0",
    "user": {
      "login": "aergener",
      "id": 5935200,
      "node_id": "MDQ6VXNlcjU5MzUyMDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5935200?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aergener",
      "html_url": "https://github.com/aergener",
      "followers_url": "https://api.github.com/users/aergener/followers",
      "following_url": "https://api.github.com/users/aergener/following{/other_user}",
      "gists_url": "https://api.github.com/users/aergener/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aergener/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aergener/subscriptions",
      "organizations_url": "https://api.github.com/users/aergener/orgs",
      "repos_url": "https://api.github.com/users/aergener/repos",
      "events_url": "https://api.github.com/users/aergener/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aergener/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T14:21:54Z",
    "updated_at": "2014-08-11T14:21:54Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche I will try this out and get back to you\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51786785",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-51786785",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 51786785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzg2Nzg1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T14:25:28Z",
    "updated_at": "2014-08-11T14:25:28Z",
    "author_association": "MEMBER",
    "body": "@aergener Thanks! BTW, see #7957, an issue on the string representation (`String`/`Text`). You also mentioned something about that above, maybe you can give your experience theren in the issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54623509",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7422#issuecomment-54623509",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7422",
    "id": 54623509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjIzNTA5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T13:19:53Z",
    "updated_at": "2014-09-05T13:19:53Z",
    "author_association": "MEMBER",
    "body": "This should be solved now #7952 is merged. @aergener if the problem still exists, you can always reopen the issue!\n"
  }
]
