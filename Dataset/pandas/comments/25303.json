[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463506828",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25303#issuecomment-463506828",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25303",
    "id": 463506828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzUwNjgyOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T06:24:27Z",
    "updated_at": "2019-02-14T06:25:06Z",
    "author_association": "MEMBER",
    "body": "To be honest I've never fully understood what `numeric_only` is supposed to represent even in other parts of the codebase (ex: groupby ops). That is, conceptually I understand it but not sure all the impacts and nuances to it are well communicated.\r\n\r\nI haven't run into the issue described personally so not sure how much weight my opinion should carry here, but I would be OK with the deprecation you mention"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463544165",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25303#issuecomment-463544165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25303",
    "id": 463544165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzU0NDE2NQ==",
    "user": {
      "login": "arnov",
      "id": 356082,
      "node_id": "MDQ6VXNlcjM1NjA4Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/356082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnov",
      "html_url": "https://github.com/arnov",
      "followers_url": "https://api.github.com/users/arnov/followers",
      "following_url": "https://api.github.com/users/arnov/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnov/subscriptions",
      "organizations_url": "https://api.github.com/users/arnov/orgs",
      "repos_url": "https://api.github.com/users/arnov/repos",
      "events_url": "https://api.github.com/users/arnov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T08:50:53Z",
    "updated_at": "2019-02-14T08:51:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "All valid points!\r\n\r\n- I think the difference in behavior of `min` and `max` when nans are present is arbitrary. I would expect both `min` and `max` to return nan, not only `min`. I don't know what the behavior is for other Series / Dataframes, so let's check that first and keep it consistent\r\n- My thinking was, since numeric_only seems to be broken in `0.24.0`, why not move already to `skipna` without fixing and deprecating `numeric_only`\r\n- Another option would be to support them both temporarily (and make one have precedence over the other), and deprecate `numric_only`, however the defaults behavior is different (`skipna` defaults to `True`, while `numeric_only` defaults to `None`)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463547036",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25303#issuecomment-463547036",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25303",
    "id": 463547036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzU0NzAzNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T09:00:27Z",
    "updated_at": "2019-02-14T09:00:27Z",
    "author_association": "MEMBER",
    "body": ">  I would expect both `min` and `max` to return nan, not only `min`\r\n\r\nTo be consistent with the rest of pandas, I think they both should *skip* NaNs by default, but if you say `skipna=False`, both to return NaN.\r\n\r\nI think the the practical deprecation path could look like:\r\n\r\n- if somebody specifies `numeric_only` (for the categorical case), raise a deprecation warning to say they need to specify `skipna` instead.\r\n- in case of `min` Ã nd if there are NaNs present (the case that would change default behaviour), raise a warning that this will change and say that they can specify `skipna` to silence the warning and already have the future behaviour.\r\n\r\nSo that would indeed mean supporting both keywords temporarily.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463589563",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25303#issuecomment-463589563",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25303",
    "id": 463589563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzU4OTU2Mw==",
    "user": {
      "login": "arnov",
      "id": 356082,
      "node_id": "MDQ6VXNlcjM1NjA4Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/356082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnov",
      "html_url": "https://github.com/arnov",
      "followers_url": "https://api.github.com/users/arnov/followers",
      "following_url": "https://api.github.com/users/arnov/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnov/subscriptions",
      "organizations_url": "https://api.github.com/users/arnov/orgs",
      "repos_url": "https://api.github.com/users/arnov/repos",
      "events_url": "https://api.github.com/users/arnov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T11:14:19Z",
    "updated_at": "2019-02-14T11:14:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've updated the PR. \r\n\r\nThis will keep the old behavior if `numeric_only` is specified, but it will change the default behavior if it is not specified. This is a bit harder to fix, since the default for `skipna` is `True`, so it's impossible to distinguish if it was set or not. See https://github.com/pandas-dev/pandas/blob/master/pandas/core/series.py#L3664 (it's already converted from `None` to `True` here https://github.com/pandas-dev/pandas/blob/master/pandas/core/generic.py#L10950)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463838893",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25303#issuecomment-463838893",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25303",
    "id": 463838893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzgzODg5Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T23:05:23Z",
    "updated_at": "2019-02-14T23:05:23Z",
    "author_association": "MEMBER",
    "body": "> This is a bit harder to fix, since the default for `skipna` is `True`, so it's impossible to distinguish if it was set or not\r\n\r\nAh, yes, that's a complication. We might be able to push the conversion from None to True a bit down into `_reduce`, where we could special case the categorical one (as you are already doing in the PR to deal with the numeric/only/skipna)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464361084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25303#issuecomment-464361084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25303",
    "id": 464361084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDM2MTA4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-16T16:36:54Z",
    "updated_at": "2019-02-16T16:36:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is probably ok to remove / deprecate this for *only* ``Categorical``; the PR #25304 is not acceptable regardless of this change."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464367470",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25303#issuecomment-464367470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25303",
    "id": 464367470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDM2NzQ3MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-16T17:57:13Z",
    "updated_at": "2019-02-16T17:57:13Z",
    "author_association": "MEMBER",
    "body": "> ok to remove / deprecate this for _only_ `Categorical`\r\n\r\nIt is *only* implemented for Categorical, no other array has this keyword, so no problem to only deprecate it there. The `numeric_only` keyword for DataFrame reductions is basically unrelated (except for the fact that it has the same name)."
  }
]
