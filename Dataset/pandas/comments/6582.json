[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37151591",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37151591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37151591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUxNTkx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T03:52:22Z",
    "updated_at": "2014-03-10T03:52:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you post an example input and output? How would this be different from a resample?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37233820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37233820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37233820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMzODIw",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T21:02:07Z",
    "updated_at": "2014-03-10T21:02:07Z",
    "author_association": "NONE",
    "body": "For example, say I have two columns of data, the first is timestamps and the second is temperature.  The data is sampled unevenly.  I was hoping to use `cut` to bin the times into 5 categories each of which contained equal numbers of measurements.  Is this something `resample` can handle?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37243447",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37243447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37243447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQzNDQ3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T22:35:47Z",
    "updated_at": "2014-03-10T22:35:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think resample can do equal sized bins. Do you mind editing an example to the original question, I think that'll make it clearer.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37321184",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37321184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37321184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzIxMTg0",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T17:05:20Z",
    "updated_at": "2014-03-11T17:05:20Z",
    "author_association": "NONE",
    "body": "Took a shot at it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37322115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37322115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37322115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzIyMTE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T17:12:43Z",
    "updated_at": "2014-03-11T17:12:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "You just want something like this?\n\n```\nIn [28]: df = bigframe.reset_index()\n\nIn [29]: df.groupby(df.index % 7).apply(lambda x: Series({ 'start' : x['index'].iloc[0], 'end' : x['index'].iloc[-1], 'value' : x['value'].mean() }))\nOut[29]: \n                  end      start       value\n0 2014-01-31 23:20:00 2014-01-01  184.452251\n1 2014-01-31 23:45:00 2014-01-02  184.793878\n2 2014-02-01 00:10:00 2014-01-03  184.790279\n3 2014-01-31 21:40:00 2014-01-04  184.704260\n4 2014-01-31 22:05:00 2014-01-05  184.999369\n5 2014-01-31 22:30:00 2014-01-06  185.152102\n6 2014-01-31 22:55:00 2014-01-07  185.076598\n\n[7 rows x 3 columns]\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37326349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37326349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37326349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI2MzQ5",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T17:45:19Z",
    "updated_at": "2014-03-11T17:45:19Z",
    "author_association": "NONE",
    "body": "I believe your example only gives the desired behavior when the data is already in chronological order.  Part of what I'd hoped to get from `cut` is that it puts the data in order before binning it.  I think if you did a sort before your groupby this would be the exact behavior I'm after.  My hope was that since the functionality is exactly what `cut` does for a living anyway, that it could be incorporated into `cut` itself.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37326570",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37326570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37326570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI2NTcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T17:47:09Z",
    "updated_at": "2014-03-11T17:48:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "`cut` is really more for continuous data binning; this is just integer partitioning, and what you would use `groupby`. I think we have an open issue about creating a `partition` function to do almost exactly this., see #4059.\n\nThe problem with `cut` in this scenario is you would get potentially really odd dates, if you treat the datetime space as continuous-like. I don't think that's a reasonable soln.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37331162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37331162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37331162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzMxMTYy",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T18:23:36Z",
    "updated_at": "2014-03-11T18:23:36Z",
    "author_association": "NONE",
    "body": "I'm not sure I follow.  In my example above, the data is intentionally sampled pretty unevenly.  (Combination of daily, 9hourly and 25minutely data).  So I would have thought thinking of time as a continuous variable to bin was appropriate in that context.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37332098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37332098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37332098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzMyMDk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T18:30:52Z",
    "updated_at": "2014-03-11T18:30:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is what I would expect if pd.cut handled datetime64[ns](except I don't print the left-right bins), \nbut its the same idea. I don't think this is intuitive.\n\n```\nIn [27]: g,bins = pd.cut(bigframe.index.asi8, 7, retbins=True)\n\nIn [28]: df = bigframe.groupby(g)['value'].mean()\n\nIn [29]: df\nOut[29]: \n(1388531721000000000, 1388917114285714176]    184.568407\n(1388917114285714176, 1389299828571428608]    185.379917\n(1389299828571428608, 1389682542857142784]    184.464207\n(1389682542857142784, 1390065257142857216]    185.334258\n(1390065257142857216, 1390447971428571392]    184.395181\n(1390447971428571392, 1390830685714285824]    185.390527\n(1390830685714285824, 1391213400000000000]    184.447259\nName: value, dtype: float64\n\nIn [30]: df.index = [ Timestamp(int(b)) for b in bins ][:7]\n\nIn [31]: df\nOut[31]: \n2013-12-31 23:15:21              184.568407\n2014-01-05 10:18:34.285714176    185.379917\n2014-01-09 20:37:08.571428608    184.464207\n2014-01-14 06:55:42.857142784    185.334258\n2014-01-18 17:14:17.142857216    184.395181\n2014-01-23 03:32:51.428571392    185.390527\n2014-01-27 13:51:25.714285824    184.447259\nName: value, dtype: float64\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37335072",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37335072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37335072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM1MDcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T18:53:51Z",
    "updated_at": "2014-03-11T18:53:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "You would need some sort of 'rounding' I think\n\n```\nIn [45]: df.index = [ Timestamp(1e12*int((b/1e12))) for b in bins ][:7]\n\nIn [46]: df\nOut[46]: \n2013-12-31 23:03:20    184.568407\n2014-01-05 10:00:00    185.379917\n2014-01-09 20:23:20    184.464207\n2014-01-14 06:46:40    185.334258\n2014-01-18 16:53:20    184.395181\n2014-01-23 03:16:40    185.435758\n2014-01-27 13:40:00    184.398994\nName: value, dtype: float64\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37335381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37335381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37335381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM1Mzgx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T18:56:17Z",
    "updated_at": "2014-03-11T18:56:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps it would help to provide a use case for when you'd want this.\n\nI think I'm with Jeff here, a priori it's a strange result... (even with rounding)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37335493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37335493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37335493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM1NDkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T18:57:22Z",
    "updated_at": "2014-03-11T18:57:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "though I think this should at least have a better error-message....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37338425",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37338425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37338425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM4NDI1",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:22:10Z",
    "updated_at": "2014-03-11T19:25:41Z",
    "author_association": "NONE",
    "body": "I'll see if I can think of another case, but I'd put out there that I think Jeff's two results above are quite intuitive and useful.  Put another way, up above someone said that `cut` is generally used to bin continuous variables...why wouldn't time qualify in an intuitive way?  For example: I can imagine wanting to make histograms of time measurements (an experiment where lots of people report the time that they see some event, for example).  And I might want to report the summary stats for the groups of people who observed the event at similar times.  (Maybe I ask lots of people when they saw a lunar eclipse reach maximum coverage, and I also know all sorts of data about their latitude and longitudes...so I want to bin observers based on when they saw the max-coverage of the eclipse and then see if they all live near eachother....)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37338784",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37338784",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37338784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM4Nzg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:25:13Z",
    "updated_at": "2014-03-11T19:25:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@8one6 not a problem with this result, maybe could just automatically round to second precision (in theory should pass this in). not hard to do.\n\nwant to do a PR for this then? \n\nget's you into some juicy internals!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37339002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37339002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37339002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM5MDAy",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:27:06Z",
    "updated_at": "2014-03-11T19:27:06Z",
    "author_association": "NONE",
    "body": "@jreback I've never actually contributed to a major project like this, and am very shaky on Git in general.  Best place to start?  Best ways to avoid making people angry with potentially-shaky code?  I assume I'd need to write a test or two?  (Never done that.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37339405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37339405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37339405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM5NDA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:30:49Z",
    "updated_at": "2014-03-11T19:30:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pydata/pandas/wiki\n\nclone the repo\n\nlook for where the tests for cut are now `pandas/tests/tests_algos.py`\n\ndevise a simple test/tests that show the new behavior\n\nrun the tests, they _should_ fail\n\ndo a fix\n\nrun until tests pass (and others don't break)\n\nsubmit a PR\n\njust post hear if you need help\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37340719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37340719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37340719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQwNzE5",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:43:12Z",
    "updated_at": "2014-03-11T19:43:12Z",
    "author_association": "NONE",
    "body": "So I was being a bit silly on this.  I think I meant `qcut` everywhere I've written `cut` in all of my examples.  The goal isn't to get evenly sized bins in terms of their extent.  It is to get bins with equal numbers of members.  So should be `qcut`, not `cut`, right?  But I think the same issues apply.  Does that sound right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37341120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-37341120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 37341120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQxMTIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:46:56Z",
    "updated_at": "2014-03-11T19:46:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "same idea (and i think fix will work for both those function) e.g. test for both\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403151313",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6582#issuecomment-403151313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6582",
    "id": 403151313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1MTMxMw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T21:28:02Z",
    "updated_at": "2018-07-06T21:28:02Z",
    "author_association": "MEMBER",
    "body": "`cut` supports datetime data now and is well tested. Closing"
  }
]
