[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29949446",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-29949446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 29949446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTQ5NDQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T23:23:54Z",
    "updated_at": "2013-12-05T23:23:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you put up a small reproducible example if possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29951218",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-29951218",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 29951218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTUxMjE4",
    "user": {
      "login": "bluefir",
      "id": 1903683,
      "node_id": "MDQ6VXNlcjE5MDM2ODM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1903683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluefir",
      "html_url": "https://github.com/bluefir",
      "followers_url": "https://api.github.com/users/bluefir/followers",
      "following_url": "https://api.github.com/users/bluefir/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluefir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluefir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluefir/subscriptions",
      "organizations_url": "https://api.github.com/users/bluefir/orgs",
      "repos_url": "https://api.github.com/users/bluefir/repos",
      "events_url": "https://api.github.com/users/bluefir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluefir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-05T23:53:04Z",
    "updated_at": "2013-12-05T23:53:04Z",
    "author_association": "NONE",
    "body": "I tried quickly but couldn't come up with one that exhibits the same behavior. Can I put the frames into an HDF5 file and somehow ship it to you guys? This would be the easiest way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29952012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-29952012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 29952012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTUyMDEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T00:07:59Z",
    "updated_at": "2013-12-06T00:07:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure....show complete code to get them out...and put on dropbox like service and post the link\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29997612",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-29997612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 29997612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTk3NjEy",
    "user": {
      "login": "bluefir",
      "id": 1903683,
      "node_id": "MDQ6VXNlcjE5MDM2ODM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1903683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluefir",
      "html_url": "https://github.com/bluefir",
      "followers_url": "https://api.github.com/users/bluefir/followers",
      "following_url": "https://api.github.com/users/bluefir/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluefir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluefir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluefir/subscriptions",
      "organizations_url": "https://api.github.com/users/bluefir/orgs",
      "repos_url": "https://api.github.com/users/bluefir/repos",
      "events_url": "https://api.github.com/users/bluefir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluefir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T14:25:17Z",
    "updated_at": "2013-12-06T14:25:17Z",
    "author_association": "NONE",
    "body": "https://www.dropbox.com/s/c0hq6uqn8y5vkbk/issue5647.h5\n\n```\nstore = pd.HDFStore('issue5647.h5', mode='r')\ndf1 = store.select('df1')\ndf2 = store.select('df2')\nstore.close()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30001823",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-30001823",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 30001823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDAxODIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T15:21:56Z",
    "updated_at": "2013-12-06T15:21:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you want something like this\nThe problem is it doesn't know how to match up the 'SourceFundSecNo' with 'FundSecNo'.\n\n```\nIn [72]: x = df2.reset_index()\n\nIn [73]: x['SourceFundSecNo'] = x['FundSecNo']\n\nIn [74]: x.info()\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 94868 entries, 0 to 94867\nData columns (total 5 columns):\nFactorDate              94868  non-null values\nFundSecNo               94868  non-null values\nDemeanGroupId           94868  non-null values\nNormalizationGroupId    94868  non-null values\nSourceFundSecNo         94868  non-null values\ndtypes: datetime64[ns](1), float64(1), int64(3)\nIn [75]: df1.info()\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 71958 entries, 0 to 104014\nData columns (total 3 columns):\nFactorDate         71958  non-null values\nFundSecNo          71958  non-null values\nSourceFundSecNo    71958  non-null values\ndtypes: datetime64[ns](1), int64(2)\n```\n\ninner join\n\n```\nIn [76]: pd.merge(df1,x,on=['FactorDate','SourceFundSecNo']).info()\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 71958 entries, 0 to 71957\nData columns (total 6 columns):\nFactorDate              71958  non-null values\nFundSecNo_x             71958  non-null values\nSourceFundSecNo         71958  non-null values\nFundSecNo_y             71958  non-null values\nDemeanGroupId           71958  non-null values\nNormalizationGroupId    71958  non-null values\ndtypes: datetime64[ns](1), float64(1), int64(4)\n```\n\nouter join I think is what you want (e.g. many-many)\n\n```\nIn [77]: pd.merge(df1,x,on=['FactorDate','SourceFundSecNo'],how='outer').info()\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 103922 entries, 0 to 103921\nData columns (total 6 columns):\nFactorDate              103922  non-null values\nFundSecNo_x             71958  non-null values\nSourceFundSecNo         103922  non-null values\nFundSecNo_y             103922  non-null values\nDemeanGroupId           103922  non-null values\nNormalizationGroupId    103922  non-null values\ndtypes: datetime64[ns](1), float64(3), int64(2)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30003393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-30003393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 30003393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDAzMzkz",
    "user": {
      "login": "bluefir",
      "id": 1903683,
      "node_id": "MDQ6VXNlcjE5MDM2ODM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1903683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluefir",
      "html_url": "https://github.com/bluefir",
      "followers_url": "https://api.github.com/users/bluefir/followers",
      "following_url": "https://api.github.com/users/bluefir/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluefir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluefir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluefir/subscriptions",
      "organizations_url": "https://api.github.com/users/bluefir/orgs",
      "repos_url": "https://api.github.com/users/bluefir/repos",
      "events_url": "https://api.github.com/users/bluefir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluefir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T15:40:41Z",
    "updated_at": "2013-12-06T15:40:41Z",
    "author_association": "NONE",
    "body": "Well, as you can see, the index in df2 is unique (at least it's supposed to be; by the way, is there a function that checks for that, similar to is_lexsorted?). So, the idea is to propagate unique values by (FactorDate, FundSecNo) from df2 into each (FactorDate, SourceFundSecNo) in df1. In other words, many-to-one. This is a pretty standard idea.\n\nI can work around that, sure, but it looks ugly and wastes CPU and memory. The problem is that it worked perfectly in 0.11 while it doesn't work in 0.12. Do you observe the same behavior? If so, why? Was 0.11 behavior wrong? join() is just syntactic sugar for merge(), right? Any toy example I tried to come up with in 0.12 worked as expected.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30004596",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-30004596",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 30004596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDA0NTk2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T15:54:41Z",
    "updated_at": "2013-12-06T15:54:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "join default is 'left', I think you just need 'outer' here. Not sure whyy its different in 0.11; I don't think it changed.\n\nyou can do\n\ndf2.index.is_unique\n(which is True here)\n\n```\nIn [84]: df1.join(df2,on=['FactorDate','SourceFundSecNo'],how='outer')\nOut[84]: \n               FactorDate  FundSecNo  SourceFundSecNo  DemeanGroupId  NormalizationGroupId\n0     2011-10-18 00:00:00        280            12432        1520161                   152\n1883  2011-10-18 00:00:00      12432            12432        1520161                   152\n1     2011-10-18 00:00:00        283              283         350171                    35\n17933 2011-10-18 00:00:00      65213              283         350171                    35\n2     2011-10-18 00:00:00        285              285        1510157                   151\n3     2011-10-18 00:00:00        286              286        1510157                   151\n4     2011-10-18 00:00:00        287              287         350161                    35\n5     2011-10-18 00:00:00        294              294         350175                    35\n6     2011-10-18 00:00:00        300              300         350174                    35\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30006794",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-30006794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 30006794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDA2Nzk0",
    "user": {
      "login": "bluefir",
      "id": 1903683,
      "node_id": "MDQ6VXNlcjE5MDM2ODM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1903683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluefir",
      "html_url": "https://github.com/bluefir",
      "followers_url": "https://api.github.com/users/bluefir/followers",
      "following_url": "https://api.github.com/users/bluefir/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluefir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluefir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluefir/subscriptions",
      "organizations_url": "https://api.github.com/users/bluefir/orgs",
      "repos_url": "https://api.github.com/users/bluefir/repos",
      "events_url": "https://api.github.com/users/bluefir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluefir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T16:19:26Z",
    "updated_at": "2013-12-06T16:19:26Z",
    "author_association": "NONE",
    "body": "At the risk of beating the dead horse here, but I do want 'left'! The fact that 'left' returns no joins at all while 'outer' returns all of them just doesn't make sense. 0.11 behavior did make sense. How can we make sense of test2 below given test3?\n\n```\ntest2 = pd.merge(df1, df2, how='left', left_on=['FactorDate', 'SourceFundSecNo'], right_index=True)\ntest2.info()\n```\n\n> <class 'pandas.core.frame.DataFrame'>\n> Int64Index: 71958 entries, 0 to 104014\n> Data columns (total 5 columns):\n> FactorDate              71958  non-null values\n> FundSecNo               71958  non-null values\n> SourceFundSecNo         71958  non-null values\n> DemeanGroupId           0  non-null values\n> NormalizationGroupId    0  non-null values\n> dtypes: datetime64[ns](1), float64(2), int64(2)\n\n```\ntest3 = pd.merge(df1, df2, how='outer', left_on=['FactorDate', 'SourceFundSecNo'], right_index=True)\ntest3.info()\n```\n\n> <class 'pandas.core.frame.DataFrame'>\n> Int64Index: 103922 entries, 0 to 104014\n> Data columns (total 5 columns):\n> FactorDate              103922  non-null values\n> FundSecNo               71958  non-null values\n> SourceFundSecNo         103922  non-null values\n> DemeanGroupId           103922  non-null values\n> NormalizationGroupId    103922  non-null values\n> dtypes: datetime64[ns](1), float64(3), int64(1)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30008006",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-30008006",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 30008006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDA4MDA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T16:33:28Z",
    "updated_at": "2013-12-06T16:33:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "not sure...maybe andy can chime in @hayd  ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30027094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-30027094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 30027094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMDI3MDk0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-06T20:35:54Z",
    "updated_at": "2013-12-06T20:39:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I think we can see this from the head of df1 and df2, the left doesn't look right (it has only NaNs):\n\n```\nIn [11]: pd.merge(df1.head(), df2.head(), how='outer', left_on=['FactorDate', 'SourceFundSecNo'], right_index=True)\nOut[11]: \n           FactorDate  FundSecNo  SourceFundSecNo  DemeanGroupId  NormalizationGroupId\n0 2011-10-18 00:00:00        280            12432            NaN                   NaN\n1 2011-10-18 00:00:00        283              283         350171                    35\n2 2011-10-18 00:00:00        285              285        1510157                   151\n3 2011-10-18 00:00:00        286              286        1510157                   151\n4 2011-10-18 00:00:00        287              287            NaN                   NaN\n4 2011-10-19 00:00:00        NaN              283         350171                    35\n4 2011-10-19 00:00:00        NaN              285        1510157                   151\n\n[7 rows x 5 columns]\n```\n\n```\n# inner\nIn [12]: pd.merge(df1.head(), df2.head(), left_on=['FactorDate', 'SourceFundSecNo'], right_index=True)\nOut[12]: \n           FactorDate  FundSecNo  SourceFundSecNo  DemeanGroupId  NormalizationGroupId\n1 2011-10-18 00:00:00        283              283         350171                    35\n2 2011-10-18 00:00:00        285              285        1510157                   151\n3 2011-10-18 00:00:00        286              286        1510157                   151 \n\n[3 rows x 5 columns]\n```\n\n```\nIn [13]: pd.merge(df1.head(), df2.head(), how='left', left_on=['FactorDate', 'SourceFundSecNo'], right_index=True)\nOut[13]: \n           FactorDate  FundSecNo  SourceFundSecNo  DemeanGroupId  NormalizationGroupId\n0 2011-10-18 00:00:00        280            12432            NaN                   NaN\n1 2011-10-18 00:00:00        283              283            NaN                   NaN\n2 2011-10-18 00:00:00        285              285            NaN                   NaN\n3 2011-10-18 00:00:00        286              286            NaN                   NaN\n4 2011-10-18 00:00:00        287              287            NaN                   NaN\n\n[5 rows x 5 columns]\n```\n\nClearly these shouldn't all be NaNs...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46309498",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-46309498",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 46309498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzA5NDk4",
    "user": {
      "login": "altaurog",
      "id": 426636,
      "node_id": "MDQ6VXNlcjQyNjYzNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/426636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altaurog",
      "html_url": "https://github.com/altaurog",
      "followers_url": "https://api.github.com/users/altaurog/followers",
      "following_url": "https://api.github.com/users/altaurog/following{/other_user}",
      "gists_url": "https://api.github.com/users/altaurog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altaurog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altaurog/subscriptions",
      "organizations_url": "https://api.github.com/users/altaurog/orgs",
      "repos_url": "https://api.github.com/users/altaurog/repos",
      "events_url": "https://api.github.com/users/altaurog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altaurog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-17T13:55:20Z",
    "updated_at": "2014-06-17T14:08:01Z",
    "author_association": "NONE",
    "body": "I seem to be having the same problem with datetime and string (object).  Here's my MRWE:\n\n```\nIn [1]: import pandas as pd\nIn [2]: dfa = pd.DataFrame([['2012-08-02', 'L', 10],\n   ...:                     ['2012-08-02', 'J', 15],\n   ...:                     ['2013-04-06', 'L', 20],\n   ...:                     ['2013-04-06', 'J', 25],],\n   ...:                      columns=['x','y','a'])\nIn [3]: dfa['x'] = pd.to_datetime(dfa['x'])\nIn [4]: dfb = pd.DataFrame([['2012-08-02','J',1],\n   ...:                     ['2013-04-06','L',2]],\n   ...:                      columns=['x','y','z'], index=[2,4,])\nIn [5]: dfb['x'] = pd.to_datetime(dfb['x'])\nIn [6]: pd.merge(dfa, dfb)  # produces correct result\nOut[6]: \n    a          x  y  z\n0  15 2012-08-02  J  1\n1  20 2013-04-06  L  2\n\n[2 rows x 4 columns]\nIn [7]: dfb.set_index(['x','y']).join(dfa.set_index(['x','y']))  # correct\nOut[7]: \n              z   a\nx          y       \n2012-08-02 J  1  15\n2013-04-06 L  2  20\n\n[2 rows x 2 columns]\nIn [8]: dfb.join(dfa.set_index(['x','y']), on=['x','y'])  # does not produce correct result\nOut[8]: \n           x  y  z   a\n2 2012-08-02  J  1 NaN\n4 2013-04-06  L  2 NaN\n\n[2 rows x 4 columns]\n```\n\nThe problem is, I'd like to retain the index on dfb, so the best option for me would have been the one which doesn't work.  As a workaround I can reset the index on dfb and set the index again after the merge:\n\n```\nIn [9]: pd.merge(dfa, dfb.reset_index()).set_index('index')\nOut[9]: \n        a          x  y  z\nindex                     \n2      15 2012-08-02  J  1\n4      20 2013-04-06  L  2\n\n[2 rows x 4 columns]\n```\n\nThis seems to be related to the fact that it is a MultiIndex and that there is a datetime in the index.  The join() method works just fine if the index is just a simple datetime and it also works with the MultiIndex if I replace the datetime column with int values.\n\n```\nIn [10]: dfb[['x','z']].join(dfa.loc[1:2].set_index(['x']), on=['x'])\nOut[10]: \n           x  z   a  y\n2 2012-08-02  1  15  J\n4 2013-04-06  2  20  L\n\n[2 rows x 4 columns]\nIn [11]: dfa['x'] = [0,0,1,1]\nIn [12]: dfb['x'] = [0,1]\nIn [13]: dfb.join(dfa.set_index(['x','y']), on=['x','y'])\nOut[13]: \n   x  y  z   a\n2  0  J  1  15\n4  1  L  2  20\n\n[2 rows x 4 columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46311806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-46311806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 46311806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzExODA2",
    "user": {
      "login": "altaurog",
      "id": 426636,
      "node_id": "MDQ6VXNlcjQyNjYzNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/426636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altaurog",
      "html_url": "https://github.com/altaurog",
      "followers_url": "https://api.github.com/users/altaurog/followers",
      "following_url": "https://api.github.com/users/altaurog/following{/other_user}",
      "gists_url": "https://api.github.com/users/altaurog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altaurog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altaurog/subscriptions",
      "organizations_url": "https://api.github.com/users/altaurog/orgs",
      "repos_url": "https://api.github.com/users/altaurog/repos",
      "events_url": "https://api.github.com/users/altaurog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altaurog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-17T14:13:33Z",
    "updated_at": "2014-06-17T14:13:33Z",
    "author_association": "NONE",
    "body": "I neglected to mention I'm using pandas 0.13.1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438415030",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-438415030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 438415030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQxNTAzMA==",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T19:58:48Z",
    "updated_at": "2018-11-13T19:58:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this still a problem?  Even as far back as 0.18.1, which is the oldest pandas I can easily install, I get saner results for both @hayd and @altaurog's examples."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438420908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5647#issuecomment-438420908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5647",
    "id": 438420908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQyMDkwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T20:16:32Z",
    "updated_at": "2018-11-13T20:16:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "just use merge_asof here"
  }
]
