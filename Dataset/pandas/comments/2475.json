[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11415095",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2475#issuecomment-11415095",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2475",
    "id": 11415095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDE1MDk1",
    "user": {
      "login": "paulproteus",
      "id": 25457,
      "node_id": "MDQ6VXNlcjI1NDU3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulproteus",
      "html_url": "https://github.com/paulproteus",
      "followers_url": "https://api.github.com/users/paulproteus/followers",
      "following_url": "https://api.github.com/users/paulproteus/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulproteus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulproteus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulproteus/subscriptions",
      "organizations_url": "https://api.github.com/users/paulproteus/orgs",
      "repos_url": "https://api.github.com/users/paulproteus/repos",
      "events_url": "https://api.github.com/users/paulproteus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulproteus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-16T07:15:04Z",
    "updated_at": "2012-12-16T07:15:04Z",
    "author_association": "NONE",
    "body": "This would be a fun task for anyone interested in learning more about using profilers in Python to make code run faster.\n\nAs I see it, there are two next steps here:\n- You need some sample code that uses DatetimeIndex.append (maybe try using it for a while, and write your own sample code that uses it)\n- You need to then run it in a Python profiler and understand the results.\n\nOnce you do that, you'll be able to know how much faster your modified version will be.\n\nTo run code in the Python profiler, the simplest way is to write a standalone Python script that contains the code you want to profile. Let's say it's in \"script.py\".\n\nInstead of running:\n\n<pre>\npython script.py\n</pre>\n\nYou run:\n\n<pre>\npython -m cProfile -o stat.prof script.py\n</pre>\n\nThis loads the cProfile module, which enables profiling, and instructs cProfile to save statistics to stat.prof for later review. It then runs the code in script.py.\n\nThen, you run this:\n\n<pre>\nimport pyprof2calltree\npyprof2calltree.visualize('stat.prof')\n</pre>\n\nAnd you get a text-based visualization of where the time is being spent. (You may need to 'pip install pyprof2calltree' or do something else to get pyprof2calltree on your system.)\n\nI, personally, prefer a graphical visualization, so I do one more step: I install http://kcachegrind.sourceforge.net/html/Home.html and visualize stat.prof with that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403153450",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2475#issuecomment-403153450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2475",
    "id": 403153450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE1MzQ1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T21:39:37Z",
    "updated_at": "2018-07-06T21:39:37Z",
    "author_association": "MEMBER",
    "body": "If we have a specific benchmark where there is a performance bottleneck, we can re-open."
  }
]
