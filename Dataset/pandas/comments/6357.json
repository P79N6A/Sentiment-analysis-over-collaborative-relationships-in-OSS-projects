[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35170247",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35170247",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35170247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTcwMjQ3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T22:36:20Z",
    "updated_at": "2014-02-15T22:37:05Z",
    "author_association": "MEMBER",
    "body": "What do you exactly want to say with this issue? That this should also be possible with two columns of an existing dataframe?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35204368",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35204368",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35204368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjA0MzY4",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T17:37:40Z",
    "updated_at": "2014-02-16T17:37:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes. It would be great to have the feature to take two columns of an existing dateframe and merge them to be one datetime column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35205060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35205060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35205060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjA1MDYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T18:00:24Z",
    "updated_at": "2014-02-16T18:00:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure I get why this is diff/tricky. It is harder to actually make a format that you then want to convert, which, once its a string is very easy.\n\n```\nIn [23]: df = DataFrame(dict(date = date_range('20130101',periods=5), times = np.arange(5)))\n\nIn [24]: df['date'] = df['date'].apply(lambda x: datetime.datetime.strftime(x,'%Y%m%d'))\n\nIn [25]: df['times'] = df['times'].apply(lambda x: \"00:0{0}:00\".format(x))\n\nIn [26]: df\nOut[26]: \n       date     times\n0  20130101  00:00:00\n1  20130102  00:01:00\n2  20130103  00:02:00\n3  20130104  00:03:00\n4  20130105  00:04:00\n\n[5 rows x 2 columns]\n\nIn [27]: df.dtypes\nOut[27]: \ndate     object\ntimes    object\ndtype: object\n\nIn [28]: pd.to_datetime(df['date'] + ' ' + df['times'])\nOut[28]: \n0   2013-01-01 00:00:00\n1   2013-01-02 00:01:00\n2   2013-01-03 00:02:00\n3   2013-01-04 00:03:00\n4   2013-01-05 00:04:00\ndtype: datetime64[ns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35212804",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35212804",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35212804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjEyODA0",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T21:15:39Z",
    "updated_at": "2014-02-16T21:15:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "If it ultimately just boils down to a string concatenation then there is really no benefit in adding a special method for combing dates and times.\n\nI was thinking if the columns were of types `datetime.date` and of type `datetime.time` then the `datetime.combine` could be used.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35212948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35212948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35212948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjEyOTQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T21:20:08Z",
    "updated_at": "2014-02-16T21:20:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "you could certainly do a `datetime.combine` in an `apply`..but since both `datetime.date` and `datetime.time` are just `object` types their is no efficiency (but it works)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35217775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35217775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35217775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE3Nzc1",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T22:12:03Z",
    "updated_at": "2014-02-16T22:12:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Is there a slick way to apply over two columns? Or am I left with just doing `df.apply(lambda x: datetime.combine(lambda x: x.ix[\"date\"], x.ix[\"time\"], axis=1)`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35218215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35218215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35218215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE4MjE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T22:23:58Z",
    "updated_at": "2014-02-16T22:23:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [21]: df = DataFrame([[datetime.date(2013,1,1),datetime.date(2013,1,2)],[datetime.time(10),datetime.time(12)]]).T\n\nIn [22]: df.columns=['date','time']\n\nIn [23]: df\nOut[23]: \n         date      time\n0  2013-01-01  10:00:00\n1  2013-01-02  12:00:00\n\n[2 rows x 2 columns]\n\nIn [24]: df[['date','time']].apply(lambda x: datetime.datetime.combine(*list(x)),axis=1)\nOut[24]: \n0   2013-01-01 10:00:00\n1   2013-01-02 12:00:00\ndtype: datetime64[ns]\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35218222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35218222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35218222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE4MjIy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T22:24:12Z",
    "updated_at": "2014-02-16T22:24:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "not sure how _slick_ that is though :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35218294",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6357#issuecomment-35218294",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6357",
    "id": 35218294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE4Mjk0",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T22:26:41Z",
    "updated_at": "2014-02-16T22:26:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "This does not add much, but it would be a little cool if there were a way to map the columns to arguments to the function being applied:\n\n```\ndf[['date','time']].apply(lambda date,time: datetime.datetime.combine(date, time),axis=1,map=True)\n```\n"
  }
]
