[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392531300",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-392531300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 392531300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjUzMTMwMA==",
    "user": {
      "login": "xhochy",
      "id": 70274,
      "node_id": "MDQ6VXNlcjcwMjc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/70274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xhochy",
      "html_url": "https://github.com/xhochy",
      "followers_url": "https://api.github.com/users/xhochy/followers",
      "following_url": "https://api.github.com/users/xhochy/following{/other_user}",
      "gists_url": "https://api.github.com/users/xhochy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xhochy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xhochy/subscriptions",
      "organizations_url": "https://api.github.com/users/xhochy/orgs",
      "repos_url": "https://api.github.com/users/xhochy/repos",
      "events_url": "https://api.github.com/users/xhochy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xhochy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T13:46:17Z",
    "updated_at": "2018-05-28T13:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Using the latest `pyarrow` master, this may already been fixed. You could try to check if the problem still persists once you install `pyarrow` from the `twosigma` channel (`conda install -c twosigma pyarrow`).\r\n\r\n> Specifying dtype option solves the issue but it isn't convenient that there is no way to set column types after loading the data. It is also strange that to_parquet tries to infer column types instead of using dtypes as stated in .dtypes or .info()\r\n\r\nThe dtypes that are returned by Pandas as not as detailed as those supported and used by Parquet. For example Pandas has the very generic type of `object`. This cannot be saved to Parquet as Parquet is language-agnostic, thus Python objects are not a valid type. Therefore for `object` columns one must look at the actual data and infer a more specific type."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392785796",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-392785796",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 392785796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mjc4NTc5Ng==",
    "user": {
      "login": "Ingvar-Y",
      "id": 39584137,
      "node_id": "MDQ6VXNlcjM5NTg0MTM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/39584137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ingvar-Y",
      "html_url": "https://github.com/Ingvar-Y",
      "followers_url": "https://api.github.com/users/Ingvar-Y/followers",
      "following_url": "https://api.github.com/users/Ingvar-Y/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ingvar-Y/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ingvar-Y/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ingvar-Y/subscriptions",
      "organizations_url": "https://api.github.com/users/Ingvar-Y/orgs",
      "repos_url": "https://api.github.com/users/Ingvar-Y/repos",
      "events_url": "https://api.github.com/users/Ingvar-Y/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ingvar-Y/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T13:56:13Z",
    "updated_at": "2018-05-29T13:56:13Z",
    "author_association": "NONE",
    "body": "> Using the latest pyarrow master, this may already been fixed. You could try to check if the problem still persists once you install pyarrow from the twosigma channel (conda install -c twosigma pyarrow).\r\n\r\nIt is available for Linux only. I'll try to experiment on Linux server but it may take some time.\r\n\r\n> The dtypes that are returned by Pandas as not as detailed as those supported and used by Parquet. For example Pandas has the very generic type of object. This cannot be saved to Parquet as Parquet is language-agnostic, thus Python objects are not a valid type. Therefore for object columns one must look at the actual data and infer a more specific type.\r\n\r\nWhy does the following code work then?\r\n```python\r\nimport pandas as pd\r\ndata = pd.read_csv('pandas_example.csv', dtype = {'A': 'int32', 'B': 'object'})\r\ndata.to_parquet('example.parquet')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395418289",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-395418289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 395418289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTQxODI4OQ==",
    "user": {
      "login": "Ingvar-Y",
      "id": 39584137,
      "node_id": "MDQ6VXNlcjM5NTg0MTM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/39584137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ingvar-Y",
      "html_url": "https://github.com/Ingvar-Y",
      "followers_url": "https://api.github.com/users/Ingvar-Y/followers",
      "following_url": "https://api.github.com/users/Ingvar-Y/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ingvar-Y/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ingvar-Y/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ingvar-Y/subscriptions",
      "organizations_url": "https://api.github.com/users/Ingvar-Y/orgs",
      "repos_url": "https://api.github.com/users/Ingvar-Y/repos",
      "events_url": "https://api.github.com/users/Ingvar-Y/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ingvar-Y/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T13:22:48Z",
    "updated_at": "2018-06-07T13:22:48Z",
    "author_association": "NONE",
    "body": "@xhochy \r\nOK, finally got to experiment on Linux server.\r\n\r\n1. There is still a weird issue with nightly builds. I had a similar problem with being unable to install 0.9.0+ arrow-cpp version as described here:\r\n[https://github.com/dask/dask/issues/3345](url)\r\nWorkaround helped.\r\n2. The problem with mixed type columns still exists in `pyarrow-0.9.0+254`, \r\n```python\r\nimport pandas as pd\r\ndata = pd.read_excel('pandas_example.xlsx', sheet_name = 0)\r\ndata.to_parquet('example.parquet')\r\n```\r\nstill gives `ArrowTypeError: an integer is required (got type str)`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395846762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-395846762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 395846762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg0Njc2Mg==",
    "user": {
      "login": "xhochy",
      "id": 70274,
      "node_id": "MDQ6VXNlcjcwMjc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/70274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xhochy",
      "html_url": "https://github.com/xhochy",
      "followers_url": "https://api.github.com/users/xhochy/followers",
      "following_url": "https://api.github.com/users/xhochy/following{/other_user}",
      "gists_url": "https://api.github.com/users/xhochy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xhochy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xhochy/subscriptions",
      "organizations_url": "https://api.github.com/users/xhochy/orgs",
      "repos_url": "https://api.github.com/users/xhochy/repos",
      "events_url": "https://api.github.com/users/xhochy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xhochy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T18:22:33Z",
    "updated_at": "2018-06-08T18:22:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Ingvar-Y Finally I had some time to look at the data. The problem here is that you have partly strings, partly integer values. What would be the expected type when writing this column? Note that Arrow and Pandas can only have columns of a single type. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396547365",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-396547365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 396547365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjU0NzM2NQ==",
    "user": {
      "login": "Ingvar-Y",
      "id": 39584137,
      "node_id": "MDQ6VXNlcjM5NTg0MTM3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/39584137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Ingvar-Y",
      "html_url": "https://github.com/Ingvar-Y",
      "followers_url": "https://api.github.com/users/Ingvar-Y/followers",
      "following_url": "https://api.github.com/users/Ingvar-Y/following{/other_user}",
      "gists_url": "https://api.github.com/users/Ingvar-Y/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Ingvar-Y/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Ingvar-Y/subscriptions",
      "organizations_url": "https://api.github.com/users/Ingvar-Y/orgs",
      "repos_url": "https://api.github.com/users/Ingvar-Y/repos",
      "events_url": "https://api.github.com/users/Ingvar-Y/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Ingvar-Y/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-12T10:47:18Z",
    "updated_at": "2018-06-12T10:47:18Z",
    "author_association": "NONE",
    "body": "@xhochy It is a string type column that unfortunately has a lot of integer-like values but the expected type is definitely string.\r\n\r\nIMHO, there should be an option to write a column with a string type even if all the values inside are integers - for example, to maintain consistency of column types among multiple files. This is not the case for my example - column B can't have integer type."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418921370",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-418921370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 418921370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODkyMTM3MA==",
    "user": {
      "login": "catawbasam",
      "id": 1277811,
      "node_id": "MDQ6VXNlcjEyNzc4MTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1277811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/catawbasam",
      "html_url": "https://github.com/catawbasam",
      "followers_url": "https://api.github.com/users/catawbasam/followers",
      "following_url": "https://api.github.com/users/catawbasam/following{/other_user}",
      "gists_url": "https://api.github.com/users/catawbasam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/catawbasam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/catawbasam/subscriptions",
      "organizations_url": "https://api.github.com/users/catawbasam/orgs",
      "repos_url": "https://api.github.com/users/catawbasam/repos",
      "events_url": "https://api.github.com/users/catawbasam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/catawbasam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T00:13:18Z",
    "updated_at": "2018-09-06T00:13:18Z",
    "author_association": "NONE",
    "body": "re ' you have partly strings, partly integer values. What would be the expected type when writing this column?'\r\nI would expect it to be a string.  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419043205",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-419043205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 419043205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTA0MzIwNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T10:22:25Z",
    "updated_at": "2018-09-06T10:22:25Z",
    "author_association": "MEMBER",
    "body": "We could have some mechanism to indicate \"this column should have a string type in the final parquet file\", like we have a `dtype` argument for `to_sql` (you can actually already do something like manually this by passing the `schema` argument). \r\nHowever, the problem is that the arrow functions that convert numpy arrays to arrow arrays still give errors for mixed string / integer types, even if you indicate that it should be strings, eg:\r\n\r\n```\r\nIn [7]: pyarrow.array(np.array(['a', 1, 'b'], dtype=object), type=pyarrow.string())\r\n...\r\nArrowInvalid: Error converting from Python objects to String/UTF8: Got Python object of type int but can only handle these types: str, bytes\r\n```\r\n\r\nSo unless that is something arrow would want to change (but personally I would not do that), this would not help for the specific example case in this issue.\r\n\r\nWe could of course still do a conversion on the pandas side, but that would need to be rather custom logic (and a user can de `df.astype({'col': str}).to_parquet(..)` themselves before writing to parquet). \r\nSo I think we can close this issue.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419175116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-419175116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 419175116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTE3NTExNg==",
    "user": {
      "login": "catawbasam",
      "id": 1277811,
      "node_id": "MDQ6VXNlcjEyNzc4MTE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1277811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/catawbasam",
      "html_url": "https://github.com/catawbasam",
      "followers_url": "https://api.github.com/users/catawbasam/followers",
      "following_url": "https://api.github.com/users/catawbasam/following{/other_user}",
      "gists_url": "https://api.github.com/users/catawbasam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/catawbasam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/catawbasam/subscriptions",
      "organizations_url": "https://api.github.com/users/catawbasam/orgs",
      "repos_url": "https://api.github.com/users/catawbasam/repos",
      "events_url": "https://api.github.com/users/catawbasam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/catawbasam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-06T17:23:32Z",
    "updated_at": "2018-09-06T17:23:32Z",
    "author_association": "NONE",
    "body": "In my case, I had read in multiple csv's and done `pandas.concat()`.\r\nSome read in as float and others as string.   `pandas.concat()` stuck them together without any warnings, and the problem became apparent when `to_parquet()` complained.\r\n\r\nSo in that case at least, it may be more an issue with `concat()` than with `to_parquet()`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462590774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-462590774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 462590774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjU5MDc3NA==",
    "user": {
      "login": "amelio-vazquez-reina",
      "id": 1993919,
      "node_id": "MDQ6VXNlcjE5OTM5MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1993919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amelio-vazquez-reina",
      "html_url": "https://github.com/amelio-vazquez-reina",
      "followers_url": "https://api.github.com/users/amelio-vazquez-reina/followers",
      "following_url": "https://api.github.com/users/amelio-vazquez-reina/following{/other_user}",
      "gists_url": "https://api.github.com/users/amelio-vazquez-reina/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amelio-vazquez-reina/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amelio-vazquez-reina/subscriptions",
      "organizations_url": "https://api.github.com/users/amelio-vazquez-reina/orgs",
      "repos_url": "https://api.github.com/users/amelio-vazquez-reina/repos",
      "events_url": "https://api.github.com/users/amelio-vazquez-reina/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amelio-vazquez-reina/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-12T02:38:33Z",
    "updated_at": "2019-02-12T02:43:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMHO we should close this since it's giving people the wrong impression that parquet \"can't handle mixed type columns\", e.g. \"hey ,they have an **open** issue with this title\" (without a clear resolution at the end of the thread). \r\n\r\nAs @jorisvandenbossche  mentioned, the OP's problem is type inference when doing `pd.read_excel()`. It has nothing to do with `to_parquet`, and as he pointed out, the user can always do  `df.astype({'col': str}).to_parquet(..)` to manage and mix types as needed."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462595639",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21228#issuecomment-462595639",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21228",
    "id": 462595639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjU5NTYzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-12T02:58:50Z",
    "updated_at": "2019-02-12T02:58:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "agree here - closing as a usage issue"
  }
]
