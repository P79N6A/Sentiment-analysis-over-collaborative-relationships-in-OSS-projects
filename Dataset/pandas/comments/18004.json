[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340026793",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18004#issuecomment-340026793",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18004",
    "id": 340026793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAyNjc5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T16:57:24Z",
    "updated_at": "2017-10-27T16:57:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @jcrist yep, this should raise"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340034514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18004#issuecomment-340034514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18004",
    "id": 340034514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAzNDUxNA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T17:28:36Z",
    "updated_at": "2017-10-27T17:28:36Z",
    "author_association": "MEMBER",
    "body": "I can confirm this on master with some slightly simpler code:\r\n\r\n```python\r\npd.DataFrame(columns=['x', 'y']).astype('category')\r\n```\r\nI get the segfault when 2+ columns are specified in the example above.  If only one column is specified I get a `NotImplementedError`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340060078",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18004#issuecomment-340060078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18004",
    "id": 340060078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDA2MDA3OA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T19:10:05Z",
    "updated_at": "2017-10-27T19:11:48Z",
    "author_association": "MEMBER",
    "body": "Looks like this boils down to `factorize` in this specific case, and the hash table code in general.\r\n\r\nIn the case of this specific issue, what ultimately is happening is something like this:\r\n```python\r\nIn [3]: arr = np.array([np.array([], dtype=object), np.array([], dtype=object)])\r\n\r\nIn [4]: pd.factorize(arr)\r\nSegmentation fault (core dumped)\r\n```\r\nThis isn't specific to factorize though, and seems to impact functions that rely on hash tables, e.g. `unique`:\r\n```python\r\nIn [3]: arr = np.array([np.array([], dtype=object), np.array([], dtype=object)])\r\n\r\nIn [4]: pd.unique(arr)\r\nSegmentation fault (core dumped)\r\n```\r\n\r\nNote that this isn't segfaulting for integer or float dtypes:\r\n```python\r\nIn [3]: arr = np.array([np.array([], dtype='int64'), np.array([], dtype='int64')])\r\n\r\nIn [4]: pd.factorize(arr)\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-4-65d36072b155> in <module>()\r\n----> 1 pd.factorize(arr)\r\n\r\n/usr/local/lib/python3.4/dist-packages/pandas/core/algorithms.py in factorize(values, sort, order, na_sentinel, size_hint)\r\n    558     uniques = vec_klass()\r\n    559     check_nulls = not is_integer_dtype(original)\r\n--> 560     labels = table.get_labels(values, uniques, 0, na_sentinel, check_nulls)\r\n    561\r\n    562     labels = _ensure_platform_int(labels)\r\n\r\npandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.Int64HashTable.get_labels (pandas/_libs/hashtable.c:15265)()\r\n\r\nValueError: Buffer has wrong number of dimensions (expected 1, got 2)\r\n```\r\n\r\nFollowing the error above, it looks like there's a template approach for int/float dtype hashtables but `StringHashTable` and `PyObjectHashTable`  have their own custom code, which I'm guessing will need to be patched to raise a `ValueError` similar to the one above?  Probably a bit beyond my current knowledge level.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340075913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18004#issuecomment-340075913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18004",
    "id": 340075913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDA3NTkxMw==",
    "user": {
      "login": "cgohlke",
      "id": 483428,
      "node_id": "MDQ6VXNlcjQ4MzQyOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/483428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cgohlke",
      "html_url": "https://github.com/cgohlke",
      "followers_url": "https://api.github.com/users/cgohlke/followers",
      "following_url": "https://api.github.com/users/cgohlke/following{/other_user}",
      "gists_url": "https://api.github.com/users/cgohlke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cgohlke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cgohlke/subscriptions",
      "organizations_url": "https://api.github.com/users/cgohlke/orgs",
      "repos_url": "https://api.github.com/users/cgohlke/repos",
      "events_url": "https://api.github.com/users/cgohlke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cgohlke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-27T20:21:58Z",
    "updated_at": "2017-10-27T21:19:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "The crash is at [inference.pyx#L361](https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/src/inference.pyx#L361), where `values` is an empty array that should not be indexed.\r\n\r\nCould be due to:\r\n```Python\r\n>>> len(np.array([[],[]]))\r\n2\r\n>>> len(np.array([[],[]]).ravel())\r\n0\r\n```\r\n\r\nPossible fix: move `n = len(values)` after `values = values.ravel()`:\r\n```diff\r\ndiff --git a/pandas/_libs/src/inference.pyx b/pandas/_libs/src/inference.pyx\r\nindex b0a64e1cc..c340e870e 100644\r\n--- a/pandas/_libs/src/inference.pyx\r\n+++ b/pandas/_libs/src/inference.pyx\r\n@@ -349,13 +349,13 @@ def infer_dtype(object value, bint skipna=False):\r\n     if values.dtype != np.object_:\r\n         values = values.astype('O')\r\n\r\n+    # make contiguous\r\n+    values = values.ravel()\r\n+\r\n     n = len(values)\r\n     if n == 0:\r\n         return 'empty'\r\n\r\n-    # make contiguous\r\n-    values = values.ravel()\r\n-\r\n     # try to use a valid value\r\n     for i in range(n):\r\n         val = util.get_value_1d(values, i)\r\n\r\n```\r\n\r\nRaises `ValueError: Buffer has wrong number of dimensions (expected 1, got 2)`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/340212430",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18004#issuecomment-340212430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18004",
    "id": 340212430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDIxMjQzMA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-28T18:57:58Z",
    "updated_at": "2017-10-28T18:57:58Z",
    "author_association": "MEMBER",
    "body": "Thanks @cgohlke! Fix looks good and passes all tests locally for me."
  }
]
