[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336858222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17892#issuecomment-336858222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17892",
    "id": 336858222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjg1ODIyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T11:25:00Z",
    "updated_at": "2017-10-16T11:25:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "duplicate of #16353 and #15628\r\n\r\n.apply infers the output dimension based on what you are returning, which looks exactly like a Series. This is not idiomatic pandas, not to mention non-performant."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338631522",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17892#issuecomment-338631522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17892",
    "id": 338631522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODYzMTUyMg==",
    "user": {
      "login": "kmader",
      "id": 116120,
      "node_id": "MDQ6VXNlcjExNjEyMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/116120?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kmader",
      "html_url": "https://github.com/kmader",
      "followers_url": "https://api.github.com/users/kmader/followers",
      "following_url": "https://api.github.com/users/kmader/following{/other_user}",
      "gists_url": "https://api.github.com/users/kmader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kmader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kmader/subscriptions",
      "organizations_url": "https://api.github.com/users/kmader/orgs",
      "repos_url": "https://api.github.com/users/kmader/repos",
      "events_url": "https://api.github.com/users/kmader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kmader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-23T11:38:47Z",
    "updated_at": "2017-10-23T11:38:47Z",
    "author_association": "NONE",
    "body": "I have the same issue (see code below). The top frame (s_df) works perfectly and the bottom one doesn't work at all. The inconsistency of behavior is what I find a bit troubling because adding a column shouldn't change how ```.apply``` works. While this contrived example is very simplified, it is based a real issue where I have a number of date columns that I want to create new columns based on relationships between them (warranty_valid = purchase_date-claim_date<180 days). Is there a more idiomatic pandas way to this?\r\n\r\n```\r\nimport pandas as pd\r\ns_df = pd.DataFrame(dict(a = [1,2]))\r\nprint(s_df.apply(lambda x: [1,2,3],1))\r\nt_df = pd.DataFrame(dict(a = [1,2], b = pd.to_datetime(['2017-10-%02d' % i for i in [1,2]])))\r\nprint(t_df.apply(lambda x: [1,2,3],1))\r\n```"
  }
]
