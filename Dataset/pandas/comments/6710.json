[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38709644",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-38709644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 38709644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzA5NjQ0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T16:57:08Z",
    "updated_at": "2014-03-26T16:57:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm..\n\nI think the error is useful here, rather than providing short row behavior. You said the header was 3 fields (e.g. by specifying `names` and then using those columns).\n\nWhat would you have the results be?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38715566",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-38715566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 38715566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE1NTY2",
    "user": {
      "login": "altaurog",
      "id": 426636,
      "node_id": "MDQ6VXNlcjQyNjYzNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/426636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altaurog",
      "html_url": "https://github.com/altaurog",
      "followers_url": "https://api.github.com/users/altaurog/followers",
      "following_url": "https://api.github.com/users/altaurog/following{/other_user}",
      "gists_url": "https://api.github.com/users/altaurog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altaurog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altaurog/subscriptions",
      "organizations_url": "https://api.github.com/users/altaurog/orgs",
      "repos_url": "https://api.github.com/users/altaurog/repos",
      "events_url": "https://api.github.com/users/altaurog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altaurog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T17:43:00Z",
    "updated_at": "2014-03-26T17:43:00Z",
    "author_association": "NONE",
    "body": "I don't see why the behavior where the first row is short should differ from where the second row is short.  If I specify three columns in the header, then I want three columns.  Any row which has fewer values than that should be filled with NaN, assuming the dtype supports it, thus:\n\n``` python\nIn [100]: mydata='1,2\\n1,2,3\\n4,5,6\\n'\nIn [101]: pd.read_csv(StringIO(mydata), names=['a', 'b', 'c'], usecols=['a', 'c'])\nOut[101]: \n   a   c\n0  1 NaN\n1  1   3\n2  4   6\n\n[3 rows x 2 columns]\n```\n\nThe current behavior is inconsistent and frankly not very useful.  My understanding from the docs is that the intention is to handle real-world data files intelligently and gracefully so we can go about getting our work done.  Raising an exception in this case is neither intelligent nor graceful.\n\nIn any case, I might as well mention that the obvious workaround is to omit `usecols` and slice the DataFrame afterwards:\n\n``` python\nIn [100]: mydata='1,2\\n1,2,3\\n4,5,6\\n'\nIn [101]: df = pd.read_csv(StringIO(mydata), names=['a', 'b', 'c'])[['a', 'c']]\n```\n\nThe result is the same, but this approach sacrifices \"much faster parsing time and lower memory usage\" which we were promised with `usecols`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38717210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-38717210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 38717210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE3MjEw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T17:55:00Z",
    "updated_at": "2014-03-26T17:55:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "the difference is that the first row is a header and this is a mispecification of the names \n\nso you are asking pandas to decide which parameter is valid here\n\nI think that is a good reason to raise an exception\n\nthat said would consider a pull request to modify this to just take the names (and maybe just have a warning) - I think as a user you would want to know that your file is malformed?\n\notherwise you would have set header=None and just used skip lines no ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38719512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-38719512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 38719512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE5NTEy",
    "user": {
      "login": "altaurog",
      "id": 426636,
      "node_id": "MDQ6VXNlcjQyNjYzNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/426636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altaurog",
      "html_url": "https://github.com/altaurog",
      "followers_url": "https://api.github.com/users/altaurog/followers",
      "following_url": "https://api.github.com/users/altaurog/following{/other_user}",
      "gists_url": "https://api.github.com/users/altaurog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altaurog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altaurog/subscriptions",
      "organizations_url": "https://api.github.com/users/altaurog/orgs",
      "repos_url": "https://api.github.com/users/altaurog/repos",
      "events_url": "https://api.github.com/users/altaurog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altaurog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T18:12:16Z",
    "updated_at": "2014-03-26T18:12:16Z",
    "author_association": "NONE",
    "body": "Thanks for your explanation.\n\nIn this case, the first row is not a header and the file is not malformed any more than it would be if subsequent lines were short.  Perhaps I misunderstood, but I was under the impression that header is set to None implicitly when I specify names in the call to read_csv.  In any case, the exception is raised even with an explicit header=None.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38719874",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-38719874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 38719874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzE5ODc0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T18:14:53Z",
    "updated_at": "2014-03-26T18:14:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm...that could be a bug then if `header=None`, want to try to fix this? \n\ntheir is a complex interaction between parameters, this is most probably an untested case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38720960",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-38720960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 38720960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzIwOTYw",
    "user": {
      "login": "altaurog",
      "id": 426636,
      "node_id": "MDQ6VXNlcjQyNjYzNg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/426636?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altaurog",
      "html_url": "https://github.com/altaurog",
      "followers_url": "https://api.github.com/users/altaurog/followers",
      "following_url": "https://api.github.com/users/altaurog/following{/other_user}",
      "gists_url": "https://api.github.com/users/altaurog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altaurog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altaurog/subscriptions",
      "organizations_url": "https://api.github.com/users/altaurog/orgs",
      "repos_url": "https://api.github.com/users/altaurog/repos",
      "events_url": "https://api.github.com/users/altaurog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altaurog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T18:23:52Z",
    "updated_at": "2014-03-26T18:23:52Z",
    "author_association": "NONE",
    "body": "I'm new to pandas.  (I am really impressed and very much enjoying it, I should add.)  I would love to fix this, but I had a look at the code and I wasn't quite able to follow it.  Unfortunately, I don't have the time right now to track this down and fix it.  The performance benefits of `usecols` aren't a big loss for me, so I'm just going to press ahead right now with the workaround I mentioned above.  The fact that it worked without `usecols` seemed to me to indicate it was a bug, though, so I thought I should at least create an issue for it even if I can't fix it.  Now you have one fewer untested cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38721160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-38721160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 38721160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzIxMTYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-26T18:25:29Z",
    "updated_at": "2014-03-26T18:25:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@altaurog great...thanks for reporting. marked as a bug. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141596504",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-141596504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 141596504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTU5NjUwNA==",
    "user": {
      "login": "evanpw",
      "id": 1621449,
      "node_id": "MDQ6VXNlcjE2MjE0NDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1621449?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/evanpw",
      "html_url": "https://github.com/evanpw",
      "followers_url": "https://api.github.com/users/evanpw/followers",
      "following_url": "https://api.github.com/users/evanpw/following{/other_user}",
      "gists_url": "https://api.github.com/users/evanpw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/evanpw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/evanpw/subscriptions",
      "organizations_url": "https://api.github.com/users/evanpw/orgs",
      "repos_url": "https://api.github.com/users/evanpw/repos",
      "events_url": "https://api.github.com/users/evanpw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/evanpw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-18T23:47:02Z",
    "updated_at": "2015-09-18T23:47:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "The case where `usecols` is set actually has explicitly different behavior (in parser.pyx):\n\n``` .python\n# Enforce this unless usecols\nif not self.has_usecols:\n    self.parser.expected_fields = len(self.names)\n```\n\nDo we want to get rid of this check? I don't see a good reason for it (and all tests pass without it), but maybe I'm missing something.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241334512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6710#issuecomment-241334512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6710",
    "id": 241334512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTMzNDUxMg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-22T07:32:17Z",
    "updated_at": "2016-08-22T07:32:17Z",
    "author_association": "MEMBER",
    "body": "An update here: seems like the C engine is happy, but the Python engine is a little sad:\n\n``` python\n>>> from pandas import read_csv\n>>> from pandas.compat import StringIO\n>>>\n>>> data = '1,2\\n1,2,3'\n>>> usecols = ['a', 'c']\n>>> names = ['a', 'b', 'c']\n>>>\n>>> read_csv(StringIO(data), usecols=usecols, names=names, engine='c')\n   a    c\n0  1  NaN\n1  1  3.0\n>>> read_csv(StringIO(data), usecols=usecols, names=names, engine='python')\n...\nValueError: Number of passed names did not match number of header fields in the file\n```\n\nI suspect the error in the Python engine is being raised because we only check the first row and compare it to the header.\n"
  }
]
