[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98179314",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98179314",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98179314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTc5MzE0",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T17:09:26Z",
    "updated_at": "2015-05-01T17:09:37Z",
    "author_association": "NONE",
    "body": "Maybe to clarify: I would be happy if the sliced DF is a copy, I just don't want to copy the original data [I think].\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98202633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98202633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98202633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjAyNjMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T18:41:44Z",
    "updated_at": "2015-05-01T18:41:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "by definition what you are doing is ALWAYS going to be a copy. Frames are stored in columns.\n\n```\nIn [10]: df = DataFrame(np.arange(20).reshape(5,4))\n\nIn [11]: df\nOut[11]: \n    0   1   2   3\n0   0   1   2   3\n1   4   5   6   7\n2   8   9  10  11\n3  12  13  14  15\n4  16  17  18  19\n\nIn [12]: result = df.iloc[[1,2,3]]\n\nIn [13]: result\nOut[13]: \n    0   1   2   3\n1   4   5   6   7\n2   8   9  10  11\n3  12  13  14  15\n\nIn [14]: result.values.base\nOut[14]: \narray([[ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15]])\n\nIn [15]: df._data\nOut[15]: \nBlockManager\nItems: Int64Index([0, 1, 2, 3], dtype='int64')\nAxis 1: Int64Index([0, 1, 2, 3, 4], dtype='int64')\nIntBlock: slice(0, 4, 1), 4 x 5, dtype: int64\n\n\nIn [17]: df._data.blocks[0].values\nOut[17]: \narray([[ 0,  4,  8, 12, 16],\n       [ 1,  5,  9, 13, 17],\n       [ 2,  6, 10, 14, 18],\n       [ 3,  7, 11, 15, 19]])\n```\n\nyou can just access using [17] if you want to get the actual numpy array. Keep in mind, this is ONLY valid for a single-dtyped frame.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98210658",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98210658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98210658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjEwNjU4",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T19:19:48Z",
    "updated_at": "2015-05-01T19:19:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would it be OK for scikit-learn to rely on `._data` / blocks in library code?\n\nThis also isn't great since I've passed DataFrames into scikit-learn that are mixes of int / float. I'm guessing that's a pretty common thing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98214861",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98214861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98214861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjE0ODYx",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T19:40:00Z",
    "updated_at": "2015-05-01T19:40:00Z",
    "author_association": "NONE",
    "body": "Getting a copy of the slice if fine, I'd just like to avoid copying the whole initial data.\nI would like to retain the dataframe structure.\n\nCan you elaborate what it means that this is only valid for single-dtyped frames?\n\nI would like to have something that works on mixed type and single dtype frames and produces a dataframe.\n\nTo elaborate on the use-case:\nWe have a function that does some slicing, `cross_val_score` that takes a model. I want the slicing to work and not destroy the dataframe, in case the user provided a custom model that wants a dataframe.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98216768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98216768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98216768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjE2NzY4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T19:43:13Z",
    "updated_at": "2015-05-01T19:43:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "then use use `.iloc` as you have indicated. I am not sure why you'd have a read-only array in the first place. I suppose that could be handled (it actually borks because its taking with a memory view).\n\nSlicing doesn't touch the original data at all. It will make a copy. (It will hand you a view if its possible, but this is cross-sectional slicing so that is numpy dependent, but ONLY if you have a single-dtype). If you have multiple dtypes, you will ALWAYS get a copy.\n\nWhat is the actual error you are getting?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98216881",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98216881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98216881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjE2ODgx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T19:43:23Z",
    "updated_at": "2015-05-01T19:47:18Z",
    "author_association": "MEMBER",
    "body": "External libraries should not be using the private pandas block system `_data`. I think that suggestion is a non-starter.\n\nI agree that it is weird that read-only arrays don't work with `.iloc`. The ultimate problem appears to be that Cython memory views can't be created on read-only arrays:\nhttps://mail.python.org/pipermail/cython-devel/2013-February/003384.html\n\nTo fix this on our end, we should probably wrap our calls to the internal `take_nd` Cython routines with something that ensures the source arrays are writable. Given that we aren't _actually_ writing to them, I think that should be safe.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98225115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98225115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98225115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjI1MTE1",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T20:23:41Z",
    "updated_at": "2015-05-01T20:23:41Z",
    "author_association": "NONE",
    "body": "The traceback is in #9928, I agree with @shoyer that it seems to be cause by what is described in the cython thread. The solution sounds ok to me but as I said I don't know much about the internals of pandas.\n\nThe non-writeable array comes from joblib. I am not entirely sure about the background and I will investigate if we can get rid of it. I was not aware of the cython behavior when I opened the issue and hoped I was actually doing something wrong.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98228680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98228680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98228680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjI4Njgw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T20:32:08Z",
    "updated_at": "2015-05-01T20:40:37Z",
    "author_association": "MEMBER",
    "body": "Ultimately, I think this issue should be solved in on the Cython end of things -- there are plenty of legitimate users for readonly memory views.  In fact @richardhansen reports in this [this stackoverflow answer](http://stackoverflow.com/a/29067248/809705) that he has a rough patch for this.\n\nIn the meantime, does anyone know how to create a \"writeable\" array from a readonly array with (a) not making any copies of the underlying data and (b) no modifications to the source array? This does not seem to work:\n\n```\narray = np.arange(10.0)\narray.setflags(write=False)\n\narray2 = np.asarray(array)\narray2.setflags(write=True)\nprint array.flags.writeable\n```\n\n```\nTrue\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98229419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98229419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98229419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjI5NDE5",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T20:35:48Z",
    "updated_at": "2015-05-01T20:35:48Z",
    "author_association": "NONE",
    "body": "Ok, I think it is fair of you to punt this to cython. I have to work around it in sklearn anyhow for the moment (even if you fixed it we want to support current stable pandas etc).\nI think `asarray` doesn't do anything if you pass it an array, but\n\n``` python\narray = np.arange(10.0)\narray.setflags(write=False)\n\narray2 = np.array(array)\narray2.setflags(write=True)\nprint array.flags.writeable\n```\n\n> False\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98229559",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98229559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98229559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjI5NTU5",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T20:36:10Z",
    "updated_at": "2015-05-01T20:36:10Z",
    "author_association": "NONE",
    "body": "Feel free to close.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98230569",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98230569",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98230569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjMwNTY5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T20:38:58Z",
    "updated_at": "2015-05-01T20:41:02Z",
    "author_association": "MEMBER",
    "body": "@amueller The problem with calling `np.array` is that you're copying the data... which is generally not ideal (especially for a routine like `.iloc`, which is supposed to be fast). (I just updated my comment from 8 minutes ago to clarify what I'm looking for.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98230992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-98230992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 98230992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjMwOTky",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T20:41:30Z",
    "updated_at": "2015-05-01T20:41:30Z",
    "author_association": "NONE",
    "body": "brainfart. With copy=False it also gives \"True\".\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99116328",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99116328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99116328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MTE2MzI4",
    "user": {
      "login": "ogrisel",
      "id": 89061,
      "node_id": "MDQ6VXNlcjg5MDYx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogrisel",
      "html_url": "https://github.com/ogrisel",
      "followers_url": "https://api.github.com/users/ogrisel/followers",
      "following_url": "https://api.github.com/users/ogrisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions",
      "organizations_url": "https://api.github.com/users/ogrisel/orgs",
      "repos_url": "https://api.github.com/users/ogrisel/repos",
      "events_url": "https://api.github.com/users/ogrisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogrisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T15:30:27Z",
    "updated_at": "2015-05-05T16:57:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a more realistic use case for the same underlying problem. Assume we have some data stored in a file on disk by some data generating process. For instance a process that save 100 random numbers:\n\n```\n>>> import numpy as np\n>>> np.save('/tmp/data.npy', np.random.randn(100))\n```\n\nIn a more realistic setting this file could be several hundreds of GB and would not necessarily fit in memory.\n\nNow assume that we have a second program that wants to use the pandas API to manipulate this data but also wants to leverage the memory mapping feature of numpy to avoid copying the memory between processes running on the same host and only load from the drive the memory pages that are actually used by the program. Wrapping the memory mapped data works fine:\n\n``` python\n>>> import pandas as pd\n>>> import numpy as np\n>>> data = np.load('/tmp/data.npy', mmap_mode='r')\n>>> df = pd.DataFrame(data, columns=['column'])\n```\n\nSlicing the data frame by rows works fine:\n\n``` python\n>>> df.iloc[:3]\n     column\n0  0.419577\n1 -1.050912\n2 -0.562929\n```\n\nHowever fancy indexing on the DataFrame breaks:\n\n``` python\n>>> df.iloc[[1, 2, 3]]\nTraceback (most recent call last):\n  File \"<ipython-input-55-7550557fa06e>\", line 1, in <module>\n    df.iloc[[1, 2, 3]]\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/indexing.py\", line 1217, in __getitem__\n    return self._getitem_axis(key, axis=0)\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/indexing.py\", line 1508, in _getitem_axis\n    return self._get_loc(key, axis=axis)\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/indexing.py\", line 92, in _get_loc\n    return self.obj._ixs(key, axis=axis)\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/frame.py\", line 1714, in _ixs\n    result = self.take(i, axis=axis)\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/generic.py\", line 1351, in take\n    convert=True, verify=True)\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/internals.py\", line 3269, in take\n    axis=axis, allow_dups=True)\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/internals.py\", line 3156, in reindex_indexer\n    for blk in self.blocks]\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/internals.py\", line 3156, in <listcomp>\n    for blk in self.blocks]\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/internals.py\", line 851, in take_nd\n    allow_fill=True, fill_value=fill_value)\n  File \"/Users/ogrisel/venvs/py34/lib/python3.4/site-packages/pandas/core/common.py\", line 823, in take_nd\n    func(arr, indexer, out, fill_value)\n  File \"pandas/src/generated.pyx\", line 3472, in pandas.algos.take_2d_axis0_float64_float64 (pandas/algos.c:89674)\n  File \"stringsource\", line 614, in View.MemoryView.memoryview_cwrapper (pandas/algos.c:175798)\n  File \"stringsource\", line 321, in View.MemoryView.memoryview.__cinit__ (pandas/algos.c:172387)\nValueError: buffer source array is read-only\n```\n\nHowever I don't see any compelling reason why would pandas require write access to the underlying memory mapped buffer.\n\n_Edit:_ in my original comment I used to create the data frame with `pd.DataFrame({'column': data})` which apparently prevents the problem from occurring.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99174284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99174284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99174284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MTc0Mjg0",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T18:38:39Z",
    "updated_at": "2015-05-05T18:38:39Z",
    "author_association": "NONE",
    "body": "@ogrisel as mentioned above, as soon as you get buffer into cython, you'll run into this issue, so pandas can't really do much.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99227037",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99227037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99227037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjI3MDM3",
    "user": {
      "login": "ogrisel",
      "id": 89061,
      "node_id": "MDQ6VXNlcjg5MDYx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogrisel",
      "html_url": "https://github.com/ogrisel",
      "followers_url": "https://api.github.com/users/ogrisel/followers",
      "following_url": "https://api.github.com/users/ogrisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions",
      "organizations_url": "https://api.github.com/users/ogrisel/orgs",
      "repos_url": "https://api.github.com/users/ogrisel/repos",
      "events_url": "https://api.github.com/users/ogrisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogrisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T21:22:53Z",
    "updated_at": "2015-05-05T21:23:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Indeed I had not properly read the end of the discussion. An alternative would be to use the ndarray Cython type instead of the Cython memoryview for those functions.\n\nI did a quick patch on the `generated.pyx` file to check:\n\n```\ndiff --git a/pandas/src/generated.pyx b/pandas/src/generated.pyx\nindex cab3a84..cb9f586 100644\n--- a/pandas/src/generated.pyx\n+++ b/pandas/src/generated.pyx\n@@ -3469,7 +3469,7 @@ def take_2d_axis0_float32_float64(float32_t[:, :] values,\n\n @cython.wraparound(False)\n @cython.boundscheck(False)\n-def take_2d_axis0_float64_float64(float64_t[:, :] values,\n+def take_2d_axis0_float64_float64(ndarray[float64_t, ndim=2] values,\n                                     ndarray[int64_t] indexer,\n                                     float64_t[:, :] out,\n                                     fill_value=np.nan):\n@@ -9360,5 +9360,3 @@ def inner_join_indexer_int64(ndarray[int64_t] left,\n                 j += 1\n\n     return result, lindexer, rindexer\n```\n\nand it seems to make `iloc` work properly on dataframes backed by read-only arrays. Is there any performance benefit or other benefit in using memorviews for the `values` argument of the take_nd_axis\\* functions?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99232035",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99232035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99232035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjMyMDM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T21:42:08Z",
    "updated_at": "2015-05-05T21:42:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ogrisel this was originally done for a non-trivial perf benefit, which requires the memory to be correctly aligned (which is done at a higher level). So would have to see how perf is different.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99252762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99252762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99252762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjUyNzYy",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T22:43:34Z",
    "updated_at": "2015-05-05T22:43:34Z",
    "author_association": "NONE",
    "body": "you have difficulty and effort tags. nice.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99252890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99252890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99252890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjUyODkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T22:44:25Z",
    "updated_at": "2015-05-05T22:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "stolen from astropy\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99253094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99253094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99253094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjUzMDk0",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T22:45:57Z",
    "updated_at": "2015-05-05T22:45:57Z",
    "author_association": "NONE",
    "body": "sorry for OT: @jreback are they working well for you? We mostly use a very vague \"easy\" tag.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99257847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99257847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99257847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjU3ODQ3",
    "user": {
      "login": "ogrisel",
      "id": 89061,
      "node_id": "MDQ6VXNlcjg5MDYx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogrisel",
      "html_url": "https://github.com/ogrisel",
      "followers_url": "https://api.github.com/users/ogrisel/followers",
      "following_url": "https://api.github.com/users/ogrisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions",
      "organizations_url": "https://api.github.com/users/ogrisel/orgs",
      "repos_url": "https://api.github.com/users/ogrisel/repos",
      "events_url": "https://api.github.com/users/ogrisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogrisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T23:16:51Z",
    "updated_at": "2015-05-05T23:20:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe a \"temporary\" workaround would be to have `take_2d_axis0_float64_float64` and the likes call an inline variant that uses the memoryview only when `values.flags.writeable` is `True` and fallback to an inline variant with `ndarray` dtype otherwise. That would introduce some small per-function call overhead but it should not depend on the size of the arrays. The main con would be the added code complexity but as this code is already generated from a template that might be such a big deal. WDYT?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99270585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99270585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99270585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MjcwNTg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T00:20:13Z",
    "updated_at": "2015-05-06T00:20:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ogrisel yes that would work, and shouldn't be too complex. \n\n@amueller I think too soon to tell if the labels are working; We used to have a 'good as first PR' which is now our 'Difficulty Novice'. These were useful at PyCon hackathon. I think also will be useful in the long run, but will take some time to classify things.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99403947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99403947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99403947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NDAzOTQ3",
    "user": {
      "login": "ogrisel",
      "id": 89061,
      "node_id": "MDQ6VXNlcjg5MDYx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogrisel",
      "html_url": "https://github.com/ogrisel",
      "followers_url": "https://api.github.com/users/ogrisel/followers",
      "following_url": "https://api.github.com/users/ogrisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions",
      "organizations_url": "https://api.github.com/users/ogrisel/orgs",
      "repos_url": "https://api.github.com/users/ogrisel/repos",
      "events_url": "https://api.github.com/users/ogrisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogrisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T10:02:30Z",
    "updated_at": "2015-05-06T10:02:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @ogrisel yes that would work, and shouldn't be too complex. \n\nDo you want to do it your-self or would rather me to give it a try?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99460137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99460137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99460137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NDYwMTM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T13:31:19Z",
    "updated_at": "2015-05-06T13:31:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ogrisel be my guest!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99537543",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99537543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99537543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NTM3NTQz",
    "user": {
      "login": "ogrisel",
      "id": 89061,
      "node_id": "MDQ6VXNlcjg5MDYx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/89061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ogrisel",
      "html_url": "https://github.com/ogrisel",
      "followers_url": "https://api.github.com/users/ogrisel/followers",
      "following_url": "https://api.github.com/users/ogrisel/following{/other_user}",
      "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions",
      "organizations_url": "https://api.github.com/users/ogrisel/orgs",
      "repos_url": "https://api.github.com/users/ogrisel/repos",
      "events_url": "https://api.github.com/users/ogrisel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ogrisel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-06T16:58:35Z",
    "updated_at": "2015-05-06T16:58:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I submitted a first draft in #10070. Feedback appreciated.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99659064",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99659064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99659064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5NjU5MDY0",
    "user": {
      "login": "rhansen",
      "id": 1612291,
      "node_id": "MDQ6VXNlcjE2MTIyOTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1612291?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhansen",
      "html_url": "https://github.com/rhansen",
      "followers_url": "https://api.github.com/users/rhansen/followers",
      "following_url": "https://api.github.com/users/rhansen/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhansen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhansen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhansen/subscriptions",
      "organizations_url": "https://api.github.com/users/rhansen/orgs",
      "repos_url": "https://api.github.com/users/rhansen/repos",
      "events_url": "https://api.github.com/users/rhansen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhansen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T00:33:06Z",
    "updated_at": "2015-05-07T00:33:06Z",
    "author_association": "NONE",
    "body": "> In the meantime, does anyone know how to create a \"writeable\" array from a readonly array with (a) not making any copies of the underlying data and (b) no modifications to the source array?\n\nI'm not familiar with pandas, but maybe this gross hack will do what you want:\n\n``` cython\nfrom cpython.buffer cimport PyBUF_WRITABLE, \\\n    PyObject_CheckBuffer, PyObject_GetBuffer\n\ncdef class ForceWritableBufferWrapper:\n    cdef object buf\n    def __cinit__(self, object buf):\n        if not PyObject_CheckBuffer(buf):\n            raise TypeError(\"argument must follow the buffer protocol\")\n        self.buf = buf\n    def __getbuffer__(self, Py_buffer *view, int flags):\n        PyObject_GetBuffer(self.buf, view, flags & ~PyBUF_WRITABLE)\n        view.readonly = 0\n    def __releasebuffer__(self, Py_buffer *view):\n        pass\n```\n\nThis Cython extension type provides a writable buffer interface for any buffer object, even if the underlying buffer is read-only.  Of course this must only be used if you are absolutely certain nobody will write to the buffer, otherwise Bad Things(tm) will happen.\n\nYou can probably do some `__setattr__` and `__getattribute__` magic to make this wrapper act more like the underlying object if you so desire.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99865342",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-99865342",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 99865342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5ODY1MzQy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-07T13:28:26Z",
    "updated_at": "2015-05-07T13:28:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@richardhansen interesting idea. Do you know if this works with `np.memmap` (that is the original usecase). Would this be thread-safe? (I suppose we could just add a with gil to force it anyhow)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100052193",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-100052193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 100052193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDA1MjE5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-08T00:06:40Z",
    "updated_at": "2015-05-08T00:06:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #10070 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100099484",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10043#issuecomment-100099484",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10043",
    "id": 100099484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDA5OTQ4NA==",
    "user": {
      "login": "rhansen",
      "id": 1612291,
      "node_id": "MDQ6VXNlcjE2MTIyOTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1612291?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhansen",
      "html_url": "https://github.com/rhansen",
      "followers_url": "https://api.github.com/users/rhansen/followers",
      "following_url": "https://api.github.com/users/rhansen/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhansen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhansen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhansen/subscriptions",
      "organizations_url": "https://api.github.com/users/rhansen/orgs",
      "repos_url": "https://api.github.com/users/rhansen/repos",
      "events_url": "https://api.github.com/users/rhansen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhansen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-08T04:49:40Z",
    "updated_at": "2015-05-08T05:00:36Z",
    "author_association": "NONE",
    "body": "> Do you know if this works with `np.memmap` (that is the original usecase).\n\nI haven't tested that specific class, but it should work with any object that implements the buffer protocol.\n\n> Would this be thread-safe?\n\nYes.  Just like with most other Cython code, you shouldn't need `with gil` unless you're doing something special (e.g., in a callback invoked by a plain C function that was called in a `with nogil` block).\n"
  }
]
