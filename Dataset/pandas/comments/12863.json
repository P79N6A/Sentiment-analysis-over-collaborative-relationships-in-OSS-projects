[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208445681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-208445681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 208445681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ0NTY4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T16:50:36Z",
    "updated_at": "2016-04-11T16:50:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "what you are doing doesn't make any sense but it is correct.\n\nhttp://docs.scipy.org/doc/numpy-1.10.1/reference/generated/numpy.any.html\n\nI guess this _should_ return a boolean. But to be honest I don't know what numpy is doing.\n\n```\nIn [2]: np.array(['a','b','c'],dtype='object').any()\nOut[2]: 'a'\n```\n\ncc @charris\ncc @njsmith\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208460012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-208460012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 208460012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ2MDAxMg==",
    "user": {
      "login": "charris",
      "id": 77272,
      "node_id": "MDQ6VXNlcjc3Mjcy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/77272?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charris",
      "html_url": "https://github.com/charris",
      "followers_url": "https://api.github.com/users/charris/followers",
      "following_url": "https://api.github.com/users/charris/following{/other_user}",
      "gists_url": "https://api.github.com/users/charris/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charris/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charris/subscriptions",
      "organizations_url": "https://api.github.com/users/charris/orgs",
      "repos_url": "https://api.github.com/users/charris/repos",
      "events_url": "https://api.github.com/users/charris/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charris/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T17:24:54Z",
    "updated_at": "2016-04-11T17:24:54Z",
    "author_association": "NONE",
    "body": "Hmm..., yes, it is correct\n\n```\nIn [1]: 'a' or 'b'\nOut[1]: 'a'\n```\n\nI suppose we could call `bool` on the result for the logical operators.\n\n```\nIn [2]: bool('a' or 'b')\nOut[2]: True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208487847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-208487847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 208487847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ4Nzg0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T18:28:31Z",
    "updated_at": "2016-04-11T18:28:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep, looks like this is the case for `dtype=object` in general\n\n```\nIn [4]: np.array([1,2,3],dtype=object).any()\nOut[4]: 1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208488254",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-208488254",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 208488254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ4ODI1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T18:29:50Z",
    "updated_at": "2016-04-11T18:29:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, I think we will add a `bool()` if its a scalar on the pandas side for compat.\n\n@jdavies1618 want to do a pull-request?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208491818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-208491818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 208491818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ5MTgxOA==",
    "user": {
      "login": "jdavies1618",
      "id": 1591339,
      "node_id": "MDQ6VXNlcjE1OTEzMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1591339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdavies1618",
      "html_url": "https://github.com/jdavies1618",
      "followers_url": "https://api.github.com/users/jdavies1618/followers",
      "following_url": "https://api.github.com/users/jdavies1618/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdavies1618/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdavies1618/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdavies1618/subscriptions",
      "organizations_url": "https://api.github.com/users/jdavies1618/orgs",
      "repos_url": "https://api.github.com/users/jdavies1618/repos",
      "events_url": "https://api.github.com/users/jdavies1618/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdavies1618/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T18:41:46Z",
    "updated_at": "2016-04-11T18:41:46Z",
    "author_association": "NONE",
    "body": "Will do - thanks for the quick feedback!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209610048",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-209610048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 209610048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTYxMDA0OA==",
    "user": {
      "login": "artheist",
      "id": 17328330,
      "node_id": "MDQ6VXNlcjE3MzI4MzMw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17328330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artheist",
      "html_url": "https://github.com/artheist",
      "followers_url": "https://api.github.com/users/artheist/followers",
      "following_url": "https://api.github.com/users/artheist/following{/other_user}",
      "gists_url": "https://api.github.com/users/artheist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artheist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artheist/subscriptions",
      "organizations_url": "https://api.github.com/users/artheist/orgs",
      "repos_url": "https://api.github.com/users/artheist/repos",
      "events_url": "https://api.github.com/users/artheist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artheist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T19:26:07Z",
    "updated_at": "2016-04-13T19:26:07Z",
    "author_association": "NONE",
    "body": "This is weird, it looks like there are some discrepancies in the test suite for nanall and nanany.\n(test_anaylitics.py file in series test suite)\n- In test_all_any, these three lines seems to assert the reported bug is the desired behaviour \n      # Alternative types, with implicit 'object' dtype.\n      s = Series(['abc', True])\n      self.assertEqual('abc', s.any())  # 'abc' || True => 'abc'\n- Also, in the following test test_all_any_params, the first lines which test for NaN are not coherent\n  This line seems to state that NaN is considered true\n      self.assertTrue(s1.all(skipna=False))  # nan && True => True\n  but this line contradicts if:\n      self.assertTrue(np.isnan(s2.any(skipna=False)))  # nan || False => nan\n\nIn my opinion, it would be relevant (and more coherent) to have the same behavior as python any and all buitlin methods, such that:\nany(['abc', True]) -> True\nall(['abc', False]) -> True\nany([float('NaN'), True]) -> True\nall([float('NaN'), True]) - True\nany([float('NaN'), False]) -> True\nall([float('NaN'), False]) - False\n\nIf this is the case, I have a commit that fixes it, but I then would have to change the test suite also.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209733791",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-209733791",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 209733791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTczMzc5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T02:56:53Z",
    "updated_at": "2016-04-14T02:56:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "so what are you proposing for changes?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/210066043",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-210066043",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 210066043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDA2NjA0Mw==",
    "user": {
      "login": "jdavies1618",
      "id": 1591339,
      "node_id": "MDQ6VXNlcjE1OTEzMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1591339?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdavies1618",
      "html_url": "https://github.com/jdavies1618",
      "followers_url": "https://api.github.com/users/jdavies1618/followers",
      "following_url": "https://api.github.com/users/jdavies1618/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdavies1618/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdavies1618/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdavies1618/subscriptions",
      "organizations_url": "https://api.github.com/users/jdavies1618/orgs",
      "repos_url": "https://api.github.com/users/jdavies1618/repos",
      "events_url": "https://api.github.com/users/jdavies1618/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdavies1618/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T17:29:46Z",
    "updated_at": "2016-04-14T17:32:16Z",
    "author_association": "NONE",
    "body": "Here's a pass I took:\n\n--- a/pandas/tests/series/test_analytics.py\n+++ b/pandas/tests/series/test_analytics.py\n@@ -548,16 +548,19 @@ class TestSeriesAnalytics(TestData, tm.TestCase):\n\n```\n          self.assertTrue(bool_series.any())\n          # Alternative types, with implicit 'object' dtype.\n +        # Changed for gh-12863\n          s = Series(['abc', True])\n -        self.assertEqual('abc', s.any())  # 'abc' || True => 'abc'\n +        self.assertEqual(True, s.any())  # 'abc' || True => 'abc'\n\n      def test_all_any_params(self):\n          # Check skipna, with implicit 'object' dtype.\n +        # Changed for gh-12863\n          s1 = Series([np.nan, True])\n          s2 = Series([np.nan, False])\n -        self.assertTrue(s1.all(skipna=False))  # nan && True => True\n +        self.assertTrue(s1.all(skipna=False))  # bool(nan && True) => True\n          self.assertTrue(s1.all(skipna=True))\n -        self.assertTrue(np.isnan(s2.any(skipna=False)))  # nan || False => nan\n +        # Below: bool(nan || False) => False\n +        self.assertFalse(np.isnan(s2.any(skipna=False)))\n          self.assertFalse(s2.any(skipna=True))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/210136647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-210136647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 210136647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDEzNjY0Nw==",
    "user": {
      "login": "artheist",
      "id": 17328330,
      "node_id": "MDQ6VXNlcjE3MzI4MzMw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17328330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artheist",
      "html_url": "https://github.com/artheist",
      "followers_url": "https://api.github.com/users/artheist/followers",
      "following_url": "https://api.github.com/users/artheist/following{/other_user}",
      "gists_url": "https://api.github.com/users/artheist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artheist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artheist/subscriptions",
      "organizations_url": "https://api.github.com/users/artheist/orgs",
      "repos_url": "https://api.github.com/users/artheist/repos",
      "events_url": "https://api.github.com/users/artheist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artheist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T20:34:39Z",
    "updated_at": "2016-04-14T20:34:39Z",
    "author_association": "NONE",
    "body": "There are more complete tests to be done for proper coverage of all possible situation.\nI just made a pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/210136927",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-210136927",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 210136927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDEzNjkyNw==",
    "user": {
      "login": "artheist",
      "id": 17328330,
      "node_id": "MDQ6VXNlcjE3MzI4MzMw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17328330?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artheist",
      "html_url": "https://github.com/artheist",
      "followers_url": "https://api.github.com/users/artheist/followers",
      "following_url": "https://api.github.com/users/artheist/following{/other_user}",
      "gists_url": "https://api.github.com/users/artheist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artheist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artheist/subscriptions",
      "organizations_url": "https://api.github.com/users/artheist/orgs",
      "repos_url": "https://api.github.com/users/artheist/repos",
      "events_url": "https://api.github.com/users/artheist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artheist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T20:35:36Z",
    "updated_at": "2016-04-14T20:35:36Z",
    "author_association": "NONE",
    "body": "Sorry, I was too fast, there are still errors in tests, sorry\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/296389854",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-296389854",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 296389854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjM4OTg1NA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-22T17:47:38Z",
    "updated_at": "2017-04-22T17:47:38Z",
    "author_association": "MEMBER",
    "body": "> I guess this should return a boolean. But to be honest I don't know what numpy is doing.\r\n\r\nNotice this is considered a bug and is (or was) worked on in numpy:\r\nhttps://github.com/numpy/numpy/issues/4352\r\nhttps://github.com/numpy/numpy/pull/5267\r\n\r\nSo that's probably where effort would better be directed.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/296444264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12863#issuecomment-296444264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12863",
    "id": 296444264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NjQ0NDI2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-23T13:42:52Z",
    "updated_at": "2017-04-23T13:42:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "> So that's probably where effort would better be directed.\r\n\r\ngood luck with that. And *even* if a PR was actually proposed / accepted, then this bug would linger in pandas even longer. Much better to do a fix here."
  }
]
