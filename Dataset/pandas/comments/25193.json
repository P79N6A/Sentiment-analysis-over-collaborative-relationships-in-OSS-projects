[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461142165",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461142165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461142165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTE0MjE2NQ==",
    "user": {
      "login": "mgoldey",
      "id": 659477,
      "node_id": "MDQ6VXNlcjY1OTQ3Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/659477?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgoldey",
      "html_url": "https://github.com/mgoldey",
      "followers_url": "https://api.github.com/users/mgoldey/followers",
      "following_url": "https://api.github.com/users/mgoldey/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgoldey/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgoldey/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgoldey/subscriptions",
      "organizations_url": "https://api.github.com/users/mgoldey/orgs",
      "repos_url": "https://api.github.com/users/mgoldey/repos",
      "events_url": "https://api.github.com/users/mgoldey/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgoldey/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-06T18:52:47Z",
    "updated_at": "2019-02-06T18:52:47Z",
    "author_association": "NONE",
    "body": "I believe this to be a function of recent changes because `pandas==0.23.1` *does* install numpy correctly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461299349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461299349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461299349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTI5OTM0OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T06:08:36Z",
    "updated_at": "2019-02-07T06:08:36Z",
    "author_association": "MEMBER",
    "body": "cc @TomAugspurger \r\n\r\nThis is really weird, as doing `pip install pandas` (without `numpy` installed) seems to be just fine..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461324244",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461324244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461324244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTMyNDI0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T08:14:27Z",
    "updated_at": "2019-02-07T08:14:27Z",
    "author_association": "MEMBER",
    "body": "@gfyoung I suppose you tried with binary wheels?\r\n\r\nI can reproduce this with, installing the following in a fresh environment with just python and pip:\r\n\r\n```\r\n(test-pip) joris@joris-XPS-13-9350:~/scipy$ pip install pandas --no-binary :all:\r\nCollecting pandas\r\n  Downloading https://files.pythonhosted.org/packages/81/fd/b1f17f7dc914047cd1df9d6813b944ee446973baafe8106e4458bfb68884/pandas-0.24.1.tar.gz (11.8MB)\r\n    100% |████████████████████████████████| 11.8MB 1.7MB/s \r\n    Complete output from command python setup.py egg_info:\r\n    Traceback (most recent call last):\r\n      File \"/home/joris/miniconda3/envs/test-pip/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 357, in get_provider\r\n        module = sys.modules[moduleOrReq]\r\n    KeyError: 'numpy'\r\n    \r\n    During handling of the above exception, another exception occurred:\r\n    \r\n    Traceback (most recent call last):\r\n      File \"<string>\", line 1, in <module>\r\n      File \"/tmp/pip-install-3txnb8eh/pandas/setup.py\", line 732, in <module>\r\n        ext_modules=maybe_cythonize(extensions, compiler_directives=directives),\r\n      File \"/tmp/pip-install-3txnb8eh/pandas/setup.py\", line 475, in maybe_cythonize\r\n        numpy_incl = pkg_resources.resource_filename('numpy', 'core/include')\r\n      File \"/home/joris/miniconda3/envs/test-pip/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1142, in resource_filename\r\n        return get_provider(package_or_requirement).get_resource_filename(\r\n      File \"/home/joris/miniconda3/envs/test-pip/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 359, in get_provider\r\n        __import__(moduleOrReq)\r\n    ModuleNotFoundError: No module named 'numpy'\r\n    \r\n    ----------------------------------------\r\nCommand \"python setup.py egg_info\" failed with error code 1 in /tmp/pip-install-3txnb8eh/pandas/\r\n```\r\n\r\nFor pandas 0.23.4 it indeed works."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461325908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461325908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461325908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTMyNTkwOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T08:21:13Z",
    "updated_at": "2019-02-07T08:21:13Z",
    "author_association": "MEMBER",
    "body": "From a quick look, this might be caused by the changes in https://github.com/pandas-dev/pandas/pull/21879 (which I don't fully understand though), as it is caused by `maybe_cythonize` being ran in `setup.py` before setuptools is able to check and install dependencies.\r\n\r\ncc @jbrockmendel "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461399383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461399383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461399383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTM5OTM4Mw==",
    "user": {
      "login": "snordhausen",
      "id": 1327310,
      "node_id": "MDQ6VXNlcjEzMjczMTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1327310?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snordhausen",
      "html_url": "https://github.com/snordhausen",
      "followers_url": "https://api.github.com/users/snordhausen/followers",
      "following_url": "https://api.github.com/users/snordhausen/following{/other_user}",
      "gists_url": "https://api.github.com/users/snordhausen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snordhausen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snordhausen/subscriptions",
      "organizations_url": "https://api.github.com/users/snordhausen/orgs",
      "repos_url": "https://api.github.com/users/snordhausen/repos",
      "events_url": "https://api.github.com/users/snordhausen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snordhausen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T12:26:45Z",
    "updated_at": "2019-02-07T12:26:45Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche You are right, this is the change that broke things. I checked with this Dockerfile:\r\n```\r\nFROM alpine:3.8\r\nRUN apk update\r\nRUN apk add g++ libstdc++ python3-dev bash git \r\nRUN pip3 install --upgrade pip\r\n\r\n# With the change\r\n#RUN pip3 install numpy==1.16.1 git+https://github.com/pandas-dev/pandas@df2ccef\r\n# 1 commit before:\r\nRUN pip3 install numpy==1.16.1 git+https://github.com/pandas-dev/pandas@f11738b\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461501704",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461501704",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461501704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTUwMTcwNA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T16:36:11Z",
    "updated_at": "2019-02-07T16:36:11Z",
    "author_association": "MEMBER",
    "body": "`maybe_cythonize` wraps cython's `cythonize`, so we may need to get a fix upstream.  Shorter-term, I suppose there is something that happens within `setuptools.setup` that installs numpy (?) that we could shoe-horn into the top of maybe_cythonize"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461505436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461505436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461505436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTUwNTQzNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T16:45:59Z",
    "updated_at": "2019-02-07T16:45:59Z",
    "author_association": "MEMBER",
    "body": "What I understand from the diff in https://github.com/pandas-dev/pandas/pull/21879 is that before, we just passed `extensions` to the `setup(ext_modules=...)`, and now we already call `cythonize` (or the maybe wrapper) on them inside setup.py. \r\nSo my question then: what is exactly the reason that we started to use `cythonize` ? Or how do other projects deal with it?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461507232",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461507232",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461507232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTUwNzIzMg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T16:50:51Z",
    "updated_at": "2019-02-07T16:50:51Z",
    "author_association": "MEMBER",
    "body": "> what is exactly the reason that we started to use `cythonize` ?\r\n\r\ncythonize is recommended way to compile cython modules.  A lot of the dependency tracking we used to do manually in setup.py cythonize handles automatically.  cythonize also takes care of figuring out which files need to be re-compiled vs are re-usable (I know statsmodels used to do this manually, not sure about pandas)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461543226",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461543226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461543226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU0MzIyNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T18:29:55Z",
    "updated_at": "2019-02-07T18:29:55Z",
    "author_association": "MEMBER",
    "body": "But this `cythonize` should only be called when we actually want to compile *cython* sources? While for an sdist, we already cythonized and you only want to compile the C sources. So should we have some conditional somewhere in there? Related to that, isn't this what the custom `cmd_class` is for? (to cythonize in the `_build_ext`)\r\n\r\n> I suppose there is something that happens within `setuptools.setup` that installs numpy (?) that we could shoe-horn into the top of maybe_cythonize\r\n\r\nCan you detail this thought a bit more?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461547892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461547892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461547892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU0Nzg5Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T18:43:11Z",
    "updated_at": "2019-02-07T18:43:11Z",
    "author_association": "MEMBER",
    "body": ">> I suppose there is something that happens within `setuptools.setup` that installs numpy (?) that we could shoe-horn into the top of maybe_cythonize\r\n\r\n> Can you detail this thought a bit more?\r\n\r\nI don't know what happens within `setuptools.setup`, but am speculating that there is something like:\r\n\r\n```\r\ndef setup(...):\r\n    install_declared_dependencies(...)\r\n    everything_else(...)\r\n```\r\n\r\nSo the thought was that if `maybe_cythonize` being called before `setup` was a problem because dependencies were not installed, this might be fixable by calling `install_declared_dependencies` at the top of `maybe_cythonize`.\r\n\r\nAgain, pure speculation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461553003",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461553003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461553003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU1MzAwMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T18:57:54Z",
    "updated_at": "2019-02-07T18:57:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "We also need to update the release infra or testing to ensure that the pip test environment does not have Cython installed. \n\n> On Feb 7, 2019, at 12:43, jbrockmendel <notifications@github.com> wrote:\n> \n> I suppose there is something that happens within setuptools.setup that installs numpy (?) that we could shoe-horn into the top of maybe_cythonize\n> \n> Can you detail this thought a bit more?\n> \n> I don't know what happens within setuptools.setup, but am speculating that there is something like:\n> \n> def setup(...):\n>     install_declared_dependencies(...)\n>     everything_else(...)\n> So the thought was that if maybe_cythonize being called before setup was a problem because dependencies were not installed, this might be fixable by calling install_declared_dependencies at the top of maybe_cythonize.\n> \n> Again, pure speculation.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461566690",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461566690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461566690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU2NjY5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T19:36:50Z",
    "updated_at": "2019-02-07T19:36:50Z",
    "author_association": "MEMBER",
    "body": "> So the thought was that if `maybe_cythonize` being called before `setup` was a problem because dependencies were not installed, this might be fixable by calling `install_declared_dependencies` at the top of `maybe_cythonize`.\r\n\r\nI don't think we want to start meddling with how setuptools installs dependencies. It seems our use of the custom `cmd_class` made this work before (the check for where numpy's include path is also done in there), so maybe we will need to revert the use of cythonize? (or at least make it conditional on the presence of already compiled c files)\r\n\r\nWe should probably also look again into PEP517/518 support with a pyproject.toml, as it seems that support for that in pip has improved a lot since last time we tried (and reverted).\r\n\r\n> We also need to update the release infra or testing to ensure that the pip test environment does not have Cython installed.\r\n\r\nYes, was thinking the same. But didn't we already have a test for pip installing from source in https://github.com/pandas-dev/pandas-ci ? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461568620",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461568620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461568620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTU2ODYyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-07T19:42:23Z",
    "updated_at": "2019-02-07T19:42:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, yes. We do at\nhttps://github.com/pandas-dev/pandas-ci/blob/master/ci/install.sh#L23.\n\nI guess the issue here is that that env still has *numpy* installed. So we\nshould maybe just create a clean env with just Python and pip.\n\nOn Thu, Feb 7, 2019 at 1:36 PM Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> So the thought was that if maybe_cythonize being called before setup was\n> a problem because dependencies were not installed, this might be fixable by\n> calling install_declared_dependencies at the top of maybe_cythonize.\n>\n> I don't think we want to start meddling with how setuptools installs\n> dependencies. It seems our use of the custom cmd_class made this work\n> before (the check for where numpy's include path is also done in there), so\n> maybe we will need to revert the use of cythonize? (or at least make it\n> conditional on the presence of already compiled c files)\n>\n> We should probably also look again into PEP517/518 support with a\n> pyproject.toml, as it seems that support for that in pip has improved a lot\n> since last time we tried (and reverted).\n>\n> We also need to update the release infra or testing to ensure that the pip\n> test environment does not have Cython installed.\n>\n> Yes, was thinking the same. But didn't we already have a test for pip\n> installing from source in https://github.com/pandas-dev/pandas-ci ?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461566690>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIqC3jEmDXDUCe6RjslVnC762NOv6ks5vLIBZgaJpZM4al35s>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461736635",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461736635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461736635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTczNjYzNQ==",
    "user": {
      "login": "xhochy",
      "id": 70274,
      "node_id": "MDQ6VXNlcjcwMjc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/70274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xhochy",
      "html_url": "https://github.com/xhochy",
      "followers_url": "https://api.github.com/users/xhochy/followers",
      "following_url": "https://api.github.com/users/xhochy/following{/other_user}",
      "gists_url": "https://api.github.com/users/xhochy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xhochy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xhochy/subscriptions",
      "organizations_url": "https://api.github.com/users/xhochy/orgs",
      "repos_url": "https://api.github.com/users/xhochy/repos",
      "events_url": "https://api.github.com/users/xhochy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xhochy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T09:08:59Z",
    "updated_at": "2019-02-08T09:08:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "For declaring build time requirements there is the `pyproject.toml` nowdays: https://www.python.org/dev/peps/pep-0518/ It behaves very similar to `setup_requires` except that `pip` can also deal with. I think `setup_requires` installed dependencies through `distutils`. `pyproject.toml` specified build requirements are installed before `setup.py` is called. \r\n\r\nI'll submit a PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461746433",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461746433",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461746433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTc0NjQzMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T09:45:00Z",
    "updated_at": "2019-02-08T09:45:00Z",
    "author_association": "MEMBER",
    "body": "@xhochy yes, we did that before, but reverted it after lots of troubles (https://github.com/pandas-dev/pandas/issues/20775, https://github.com/pandas-dev/pandas/pull/20718). But as I said above, we should probably look into it again, since it seems that most of the problems we had last year are more or less solved in pip nowadays. I am only not fully sure if we should do it for a bug-fix release though (we could still fix the setup.py for 0.24.x, and then try out the pyproject.toml again for 0.25)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461750056",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461750056",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461750056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTc1MDA1Ng==",
    "user": {
      "login": "xhochy",
      "id": 70274,
      "node_id": "MDQ6VXNlcjcwMjc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/70274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xhochy",
      "html_url": "https://github.com/xhochy",
      "followers_url": "https://api.github.com/users/xhochy/followers",
      "following_url": "https://api.github.com/users/xhochy/following{/other_user}",
      "gists_url": "https://api.github.com/users/xhochy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xhochy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xhochy/subscriptions",
      "organizations_url": "https://api.github.com/users/xhochy/orgs",
      "repos_url": "https://api.github.com/users/xhochy/repos",
      "events_url": "https://api.github.com/users/xhochy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xhochy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T09:57:51Z",
    "updated_at": "2019-02-08T09:57:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I will dig a bit deeper into the `pyproject.toml` problems and see if I can get it working. There are some issues and lengthy bug reports I'm currently scanning but I like this approach and would love to see it working."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461750703",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-461750703",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 461750703,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTc1MDcwMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T10:00:09Z",
    "updated_at": "2019-02-08T10:00:09Z",
    "author_association": "MEMBER",
    "body": "Yes, for sure we should try to add it again (and thanks for looking into it!). I am mainly wondering if we should see it as a fix for this issue (for 0.24.x)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462023920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-462023920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 462023920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjAyMzkyMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-09T08:06:00Z",
    "updated_at": "2019-02-09T08:06:00Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel would you have time to look into this? I might think that with some conditional check before calling the cythonize (whether both cython and numpy are installed, like we now already have a check that cython is installed), it might work"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462433972",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-462433972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 462433972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjQzMzk3Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T18:13:48Z",
    "updated_at": "2019-02-11T18:13:48Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche sure.  Is the desired behavior just to check if numpy is installed and if not raise?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462510899",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-462510899",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 462510899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MjUxMDg5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-11T21:57:03Z",
    "updated_at": "2019-02-11T21:57:03Z",
    "author_association": "MEMBER",
    "body": "Not sure if it should raise. I think you should be able to call `python setup.py ..` without having numpy installed. So eg doing a `python setup.py egg_info` should not call cythonize / require numpy or cython to be installed (as it was before #21879)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/462846000",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-462846000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 462846000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2Mjg0NjAwMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-12T17:08:10Z",
    "updated_at": "2019-02-12T17:08:10Z",
    "author_association": "MEMBER",
    "body": "> So eg doing a `python setup.py egg_info` should not call cythonize / require numpy or cython to be installed\r\n\r\nOK.  The fix that comes to mind is a check inside `maybe_cythonize` to skip cythonizing based on the command line arguments.  At the moment we only skip for `clean`, but that could be extended to egg_info or whatever else (or the check could be reversed so cythonize is only run for build_ext or whatever)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463127810",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-463127810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 463127810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzEyNzgxMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T09:37:55Z",
    "updated_at": "2019-02-13T22:37:30Z",
    "author_association": "MEMBER",
    "body": "I don't know all the possible commands of setuptools enough to know if specifically checking for that would be enough. Best might be to simply test it out. \r\n\r\n> or the check could be reversed so cythonize is only run for build_ext or whatever\r\n\r\nIn any case, it seems to me that there is some duplication now in the setup.py, as we have both functionality to cythonize in the `build_ext` class and in the `maybe_cythonize` you added. But not familiar enough with it to know how it interacts with the coverage that you were trying to solve."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463314318",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-463314318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 463314318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzMxNDMxOA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T18:34:57Z",
    "updated_at": "2019-02-13T18:34:57Z",
    "author_association": "MEMBER",
    "body": "> But now familiar enough with it to know how it interacts with the coverage that you were trying to solve.\r\n\r\nIIRC the coverage implementation isn't quite orthogonal to the usage of `cythonize` but close.  I'm fairly confident that if we had to remove the usage of cythonize, we could do it without removing the coverage implementation.\r\n\r\n> In any case, it seems to me that there is some duplication now in the setup.py, as we have both functionality to cythonize in the `build_ext` class and in the `maybe_cythonize` you added.\r\n\r\nSome of that code is shared.  `maybe_cythonize` calls `build_ext.render_templates`.  I guess the code adding `numpy_incl` to each `ext.include_dirs` could be shared.  Do you see anything else that could be de-duplicated?\r\n\r\n> I don't know all the possible commands of setuptools enough to know if specifically checking for that would be enough\r\n\r\nThis is partially an upstream problem with `cythonize`.  I implemented `maybe_cythonize` to wrap `cythonize` because `python setup.py clean` would incorrectly call `cythonize` if we didn't do a check.  Unless you want to revert the use of `cythonize` (I really hope that's not on the table), I'm pretty sure the place to fix this issue are on line 476 in `maybe_cythonize` where it currently checks for \"clean\".  We should also push the fix upstream (https://github.com/cython/cython/issues/1495).\r\n\r\nI also don't know the setuptools API.  It shouldn't be _that_ hard to find a complete-ish list of the possible commands and sort them by whether cythonize should be called or not, should it?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464108060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-464108060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 464108060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDEwODA2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T16:17:25Z",
    "updated_at": "2019-02-15T16:17:25Z",
    "author_association": "MEMBER",
    "body": "> Unless you want to revert the use of `cythonize` (I really hope that's not on the table)\r\n\r\nWell, I don't care that much how it is done, I mainly care about it being fixed for 0.24.2. I only know that before #21879 it was working, and that I don't have the time to dive into setuptools inner details right now, so if we don't find another solution, reverting it is an option for me. \r\nIn any case, the `maybe_cythonize` is not essential to get a build_ext working. I just removed it, and doing a dev build on master still works fine (but I assume the need for the maybe_cythonized is somehow related to the coverage?).\r\n\r\nBut the suggestion about checking which setup command is ran, might make sense (at least, eg scipy does things like that: https://github.com/scipy/scipy/blob/master/setup.py)\r\n\r\n> This is partially an upstream problem with `cythonize`.\r\n\r\nOr you could also say that their recommendation to use `cythonize` is not a very good one, as mentioned in the last comment on the issue you linked (in their docs, they actually also mention some ways to avoid calling cythonize in certain cases). We already have all the custom build classes (`CleanCommand`, `build_ext`, ..) that deal with this, and the `cythonize`/`maybe_cythonize` seems to be duplicating that partly (but again, I don't have much knowledge of setuptools/cython interaction)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464124446",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-464124446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 464124446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDEyNDQ0Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T17:04:22Z",
    "updated_at": "2019-02-15T17:04:22Z",
    "author_association": "MEMBER",
    "body": "> But the suggestion about checking which setup command is ran, might make sense\r\n\r\nI maintain this is the thing to do.  Go for it.\r\n\r\n> In any case, the `maybe_cythonize` is not essential to get a build_ext working. I just removed it, and doing a dev build on master still works fine (but I assume the need for the maybe_cythonized is somehow related to the coverage?).\r\n\r\n`cythonize` takes care of figuring out the dependencies that were previously explicitly (and error-proned-ly) listed in setup.py.  Using it simplifies that part of setup quite a bit."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464131477",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-464131477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 464131477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDEzMTQ3Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T17:26:00Z",
    "updated_at": "2019-02-15T17:26:00Z",
    "author_association": "MEMBER",
    "body": "> > But the suggestion about checking which setup command is ran, might make sense\r\n>\r\n> I maintain this is the thing to do. Go for it.\r\n\r\nI currently don't have time to look more into it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470096166",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25193#issuecomment-470096166",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25193",
    "id": 470096166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDA5NjE2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-06T12:53:23Z",
    "updated_at": "2019-03-06T12:53:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll look into this today, as I think this is a blocker for 0.24.2?"
  }
]
