[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65211482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65211482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65211482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjExNDgy",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T10:37:58Z",
    "updated_at": "2014-12-02T10:37:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was trying to think through the workflow of such migration and it hit me that there's one thing all those subprojects to be moved away get for free when being under the umbrella of pandas: the utilities aka the boring stuff, like setup scripts, docs, tests, benchmarks & ci infrastructure. Maybe we could think of a way to somehow move crucial parts of those into a subrepo(-s) so that a fix in one place can be easily propagated everywhere.\n\nAlso, as a food for thought, I think there are a lot of non-remote `io` packages that can benefit from moving away and being provided as plugins, e.g. fresh and unstable `stata`, `clipboard`, maybe `excel`. If you ask me, I'd say pretty much every library that works through a 3rdparty dependency could be worth separating and being maintained closer to that dependency package by a person having experience with it. One organizational bonus of such separation would be that pandas will have a lot less _optional_ dependencies.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65215249",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65215249",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65215249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjE1MjQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T11:12:06Z",
    "updated_at": "2014-12-02T11:12:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not in favor of moving any core IO packages eg stata,clipboard,excel\n\none of the mains points of pandas is that it provides a consistent interface with IO\nnot sure having these as separate packages will help that and just add another dependency where except for excel don't actually have any deps\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65220654",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65220654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65220654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjIwNjU0",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T11:58:00Z",
    "updated_at": "2014-12-02T11:58:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "FTR, `clipboard` does have deps, they are simply hidden under a layer of `pandas.util.clipboard`:\n- `gtk`, `PyQT4` and `PySide` modules:\n\n```\n$ grep import pandas/util/clipboard.py \n#   import pyperclip\nimport platform, os\n    import ctypes\n                import gtk\n                    import PyQt4 as qt4\n                    import PyQt4.QtCore\n                    import PyQt4.QtGui\n                        import PySide as qt4\n                        import PySide.QtCore\n                        import PySide.QtGui\n```\n- `pbcopy`,`pbpaste`, `xclip`,`xsel` commands\n\n```\n$ grep \"os\\.\\(popen\\|system\\)\" pandas/util/clipboard.py \n    outf = os.popen('pbcopy', 'w')\n    outf = os.popen('pbpaste', 'r')\n    outf = os.popen('xclip -selection c', 'w')\n    outf = os.popen('xclip -selection c -o', 'r')\n    outf = os.popen('xsel -i', 'w')\n    outf = os.popen('xsel -o', 'r')\n    xclipExists = os.system('which xclip > /dev/null') == 0\n        xselExists = os.system('which xsel > /dev/null') == 0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65220901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65220901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65220901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjIwOTAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T12:00:05Z",
    "updated_at": "2014-12-02T12:00:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr hah..I knew you were going to say that. However, these are system level for the most part and generally included on linux/mac/windows (except the PyQt). So not that big of a deal.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65224592",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65224592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65224592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjI0NTky",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T12:35:34Z",
    "updated_at": "2014-12-02T12:35:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, it depends on what do you call \"core\". I always thought of pandas core being containers+time utils+split/apply/combine+high perf queries/computations.  The rest could (should) just feed data in or out via a high-throughput API.\n\nThat being said, I agree that unified API is good, so it should be sorted out before starting to pull pandas codebase apart. And yes, for practicality reasons, most frequently used io modules could be considered core, too, I just don't have the data to figure out which of them are most popular.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65323278",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65323278",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65323278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzIzMjc4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T23:10:55Z",
    "updated_at": "2014-12-02T23:10:55Z",
    "author_association": "MEMBER",
    "body": "Maybe we should limit the discussion first to the remote data readers? As the other `io` modules are indeed much more fundamental -> this would require a more general discussion on the scope of pandas as the core project. \nAnd the remote data could also be a good exercise to see how smooth this goes / what obstacles there are (things that would also come up in a broader discussion), and that already will be difficult enough to sort out now:\n- the things @immerrr raises on setup scripts, docs, tests, benchmarks & ci infrastructure. Very good points I think. How can we facilitate this from the pandas side? \n- A better defined internal API? (packages that build upon pandas will want to use certain utility functions, such as functions in `core.common`) \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65324569",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65324569",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65324569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI0NTY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T23:20:59Z",
    "updated_at": "2014-12-02T23:20:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think absolutely these sub-projects should use the existing tests (and pandas testing infrastructure).\nDoc building actually could be on independently via readthedocs (no cython in these projects).\nPandas could maintain linkage from its docs to the sub-projects. Though I think they should physically be separate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65378869",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65378869",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65378869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mzc4ODY5",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-03T09:34:27Z",
    "updated_at": "2014-12-03T09:34:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think absolutely these sub-projects should use the existing tests\n\nIt's not obvious from the phrasing, I hope you mean that they should re-use the infrastructure, e.g. build matrix, but neither they shouldn't run tests of _core pandas_ nor _core pandas_ should run tests of its \"plugin\" packages. Which brings me to another issue which I'll describe in separate gh issue.\n\nSpeaking of build matrix, I'd expect the latter to be tested against pandas master and at least one last pandas major release. Or maybe two. The second one would ensure that when running for a fix for last-minute incompatible change in newly released core version one doesn't break the latest major release as of several days ago and don't force users to upgrade both pandas-io-foo and pandas in lockstep. But then again, if one wants to use a bleeding edge version of pandas-io-foo package they should be able to do the same for pandas itself.\n\nAnother issue is that I don't know of a way to include one yaml file inside the other which stacks with the fact that travis.yml should reside in repository root. I'm not yet sure I see how to make travis/appveyor.yml generic enough to require minimal (ideally, none whatsoever?) attention after project is bootstrapped and yet rely on some common submodule so that exact versions can be changed with a single commit to some \"shared\" repo and a single submodule update. Symlinking travis.yml to a submodule might do, but I'm not sure if that works on windows.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65672748",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65672748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65672748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjcyNzQ4",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T17:52:03Z",
    "updated_at": "2014-12-04T17:52:03Z",
    "author_association": "NONE",
    "body": "Hello,\n\nI've been working on a more object oriented approach about DataReader than actual code.\n\nso it can use `urlopen` or `requests` (for now I'm only using requests as my goal was to use `requests-cache`)  https://github.com/pydata/pandas/issues/8713\n\nsee this https://github.com/femtotrader/pandas_datareaders\nSorry, I wasn't aware of this \"issue\".\n\nThis is just a friendly \"fork\", please excuse me.\n\nI would be very pleased to have your feedback about this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65700454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65700454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65700454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzAwNDU0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T20:44:40Z",
    "updated_at": "2014-12-04T20:44:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1, it sucks that someone (stuck in the dark ages) using 0.10 or something can't use data readers (if something's changed in the api since then) without upgrading and potentially breaking/changing lots of their code.\n\nI suspect for the most part we're not using any wild/depreciating commands, that aren't tested elsewhere in pandas, the datafeed codebase... so **IMO testing against master isn't actually that important** (and not doing so makes things much easier), just add the pandas version - e.g. `0.16.rc1` - to travis for the package right before a pandas release... see if anything breaks. We could potentially provide a way to test all these packages from within pandas (for a while **we should keep the tests around in pandas**), but tbh I don't think this is so important: a failure right before a release would be a big edge case (that's why we have RCs) and all you'd have to do is fix up the package and release a new version.\n\nFor the backwards compat these have to dependancies of (and depend on*) pandas right?\n\n_I think the easiest is to add this right here in the pydata umbrella group, or create another group here; that way it can seem more \"official\"._\n\n*though it may be interesting to lift that direction, and have pandas as a soft dependancy (like https://github.com/changhiskhan/poseidon does).\n\nDoes this make sense?\n\n---\n\n@femtotrader did you copy and paste the classes and tests from pandas or is this something different? (I worry a little about change requests dep at the same time as migrating, but +1 on using requests).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65703017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65703017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65703017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzAzMDE3",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-04T21:02:06Z",
    "updated_at": "2014-12-04T21:02:06Z",
    "author_association": "NONE",
    "body": "@hayd this is something different as (except Yahoo Options) in data.py https://github.com/pydata/pandas/blob/master/pandas/io/data.py almost everything is function... no class. Some people considers that we shouldn't depend on `requests`. I think that using these classes we can both depend on requests if we want or use (urllib or urllib2) urlopen.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65902531",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65902531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65902531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTAyNTMx",
    "user": {
      "login": "jnmclarty",
      "id": 6062071,
      "node_id": "MDQ6VXNlcjYwNjIwNzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6062071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnmclarty",
      "html_url": "https://github.com/jnmclarty",
      "followers_url": "https://api.github.com/users/jnmclarty/followers",
      "following_url": "https://api.github.com/users/jnmclarty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnmclarty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnmclarty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnmclarty/subscriptions",
      "organizations_url": "https://api.github.com/users/jnmclarty/orgs",
      "repos_url": "https://api.github.com/users/jnmclarty/repos",
      "events_url": "https://api.github.com/users/jnmclarty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnmclarty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-06T15:42:37Z",
    "updated_at": "2014-12-06T15:42:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "One important consideration is the recruiting effects of newer contributors.  I have points on each of the three, speaking as a rookie myself.  I comment on the docs as well, as @jreback pulled that into this thread.\n\n##### Carve out Documentation\n- Barriers to Entry Reduced.  Stripping out the need to compile the most recent commit, to help fix typos, or clarity, makes complete sense.  I would be more likely to contribute to docs for 0.16, if I could leave 0.14 installed.\n\n###### My recommendation : If anything gets carved out, documentation should be the highest priority.\n\n##### Carve out Data Sources\n- Barriers to Entry Mixed.  For new maintainers, barriers are higher, as mentioned above.  For new contributors, entry barriers are lower, for similar reasons as the Documentation.\n- As other's have said, +1 to finding a way to use the existing pandas framework for the boring stuff.\n\n###### My recommendation : Add a note to the docs advising that maintainers are wanted.  And, as they step up, one by one they can be carved out.  For instance, I could likely learn, and volunteer, to be a maintainer for the World Bank stuff, but I wouldn't necessarily want to be a maintainer for the other stuff.\n\n##### Carve out IO\n- Barriers to Entry Increased.  My (potentially wrong) perception would be that helping on something like this would be more complicated, if it was a separate project. I would be dissuaded from trying.  I would be intimidated by the implications of version mismatch.  Eg. \"For this commit, how do I test against all the necessary, and next, versions of pandas? That sounds hard.\"\n\n###### My recommendation : It has it's benefits, but I think the costs outweigh them.  I think the \"darkages\" reference above has merit, but it is trumped by the complicatedness that pandas would become.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65915618",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65915618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65915618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTE1NjE4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-06T21:54:34Z",
    "updated_at": "2014-12-06T22:17:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnmclarty The problem with carving out docs is IMO that docs and code are \"hard-linked\" (changes in the code api means changing the docs... at the same time), I think @jreback is talking about docs _for_ these sub-projects (not pandas docs in general/core).\n\n_Note: you can change the docs without compiling, you can even [do it within github](https://help.github.com/articles/editing-files-in-another-user-s-repository/)!_\n\nI envision users of older pandas (dark ages) being able to monkey-patch (depending on their code):\n\n```\n# import pandas.io.data as web  # previous way (and still works in newer pandas, but with latest data package)\nimport pandas_data_readers as web  # becomes, to work in older pandas, to use latest data package\n```\n\nThis reminds me of @jreback's presentation \"pandas is pydata middleware\":\n![pandas is pydata middleware](https://pbs.twimg.com/media/B0BeyKMCcAE2nVg.jpg:large)\n\nRipping it out and seeing what happens: https://github.com/hayd/pandas_data_readers (it works without change for pandas 0.13-0.15, there's a few compat import issues pre-0.13 see https://travis-ci.org/hayd/pandas_data_readers/builds/43218562).\n\nEdit: may be easy to also break apart the compat module - would make fixing earlier version easy - not sure if that's feasible though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65923161",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-65923161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 65923161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1OTIzMTYx",
    "user": {
      "login": "jnmclarty",
      "id": 6062071,
      "node_id": "MDQ6VXNlcjYwNjIwNzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6062071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnmclarty",
      "html_url": "https://github.com/jnmclarty",
      "followers_url": "https://api.github.com/users/jnmclarty/followers",
      "following_url": "https://api.github.com/users/jnmclarty/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnmclarty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnmclarty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnmclarty/subscriptions",
      "organizations_url": "https://api.github.com/users/jnmclarty/orgs",
      "repos_url": "https://api.github.com/users/jnmclarty/repos",
      "events_url": "https://api.github.com/users/jnmclarty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnmclarty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-07T01:57:35Z",
    "updated_at": "2014-12-07T01:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd Fair point, on the docs. I admit, I'm relatively new to OS planning concepts like this. I do find it all pretty interesting.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68879870",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-68879870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 68879870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODc5ODcw",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-06T15:30:24Z",
    "updated_at": "2015-01-06T15:30:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think `stata` should be considered unstable. It is heavily tested, written against the Stata file format spec, and hasn't had a show stopper bug\\* in a number of releases (mostly small things like increasing file size in a read/write cycle).\n\n*Excluding big endian issues, which are probably not important for users of big endian systems, assuming these exist.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69571156",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69571156",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69571156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTcxMTU2",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T13:44:25Z",
    "updated_at": "2015-01-12T13:46:42Z",
    "author_association": "NONE",
    "body": "For doc \"Read the docs\" is very convenient https://readthedocs.org/. With webhook you can compile doc on server side when you commit changes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69573501",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69573501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69573501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTczNTAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T14:03:32Z",
    "updated_at": "2015-01-12T14:03:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@femtotrader and for a `datareader` package this will probably work. Readthedocs won't handle a full build which requires things like compiling (that's the reason pandas does not host this way).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69612278",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69612278",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69612278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NjEyMjc4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-12T17:49:52Z",
    "updated_at": "2015-01-12T17:49:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback how would readthedocs for a datareader package sit in the pandas docs (url-wise)? Tbh could just keep the docs as they are on the pandas side, mostly updates to datareaders are just fixes to external APIs?\n\nFrom the (pretty trivial) exercise I did splitting out datareaders, I think we should split it - it means people can use \"old\" pandas and up-to-date (working) datareaders. I think should do the same for `pandas_compat`. Happy to put a PR together and see if it just works<sup>TM</sup>.\n\nNot sure how fits with @femtotrader's thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69726350",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69726350",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69726350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzI2MzUw",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T10:45:32Z",
    "updated_at": "2015-01-13T10:50:40Z",
    "author_association": "NONE",
    "body": "You really want my opinion ;-)\n\nMy `DataReader` version is better because it supports cache and \"that's useful for me\"<sup>TM</sup>  ;-) (but also some other people)\n\nbut yes I think that we should split datareaders to a separate GitHub project, a separate pip package, a separate testing and continuous integration process and have an easy doc build using readthedocs\nso update of this very moving part will be easier and have a link in pandas doc for datareaders\n\nMaybe we should do this in 2 steps.\n\nFirst move and keep exactly same code.\nThen add my wonderful cache features in a second step ;-)\n@twiecki seems interested for zipline see https://github.com/quantopian/zipline/pull/398#issuecomment-69718174\n\nThat's just my opinion.\n\nPS: I can grant access to either http://pandas-datareaders.readthedocs.org/en/latest/ or https://github.com/femtotrader/pandas_datareaders\nthat's not a problem\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69727164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69727164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69727164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzI3MTY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T10:52:27Z",
    "updated_at": "2015-01-13T10:58:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, let's create another package under pydata.\n- name: `pandas-datareader`, `datareader` ? (it will be under `pydata/.....` but the actual package name will user visible\n- I will add the pandas devs and other interested parties as commiters\n- would suggest that 0.1 be exactly the same as the pandas tests/docs/API\n- would suggest that any api transitions be backward-compat for a while\n- this should be a released package before any changes to pandas\n- mark any issues here and open corresponding ones in datareader [here](https://github.com/pydata/pandas/issues?q=is%3Aopen+is%3Aissue+label%3A%22Data+Reader%22), though if these are bug fixes then leave open in pandas as well (for now)\n- if you want to add any deps, e.g. `requests` that would be up to the new package\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69808576",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69808576",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69808576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODA4NTc2",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T19:56:51Z",
    "updated_at": "2015-01-13T19:56:51Z",
    "author_association": "NONE",
    "body": "I also forget to say that I can also grant access to https://pypi.python.org/pypi/pandas_datareaders (even ownership to @wesm and @jreback because they are pandas pypi package owner). I just want this part of Pandas to be improved.\n\nPlease just say me what to do now. I will be able to help friday and a part of next week.\n\nMaybe we could first move the doc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69816306",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69816306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69816306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODE2MzA2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T20:44:25Z",
    "updated_at": "2015-01-13T20:44:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@femtotrader what's the backwards compat situation with using pandas_datareaders vs pandas.\n\nThat is: What we want IMO is to just drop in pandas_datareaders (or whatever) into pandas.io, that way we don't break users code (whilst it's independent/for now they must replace from `pandas.io import ...` with `from pandas_datareader import ...` and it \"just work\"). If we do that does your lib pass the tests?\n\nMake sense?\n\n(also, does your lib work on 3.X? you should add that to travis.)\n\nIMO docs can be last, since if we were to change this it could remain completely behind the scenes. I guess I don't know how much API you've changed/improved and so what a good migration strategy is.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69821567",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69821567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69821567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODIxNTY3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T21:15:52Z",
    "updated_at": "2015-01-13T21:15:52Z",
    "author_association": "MEMBER",
    "body": "FWIW, I have often thought about the fact that pandas is turning into a monolithic \"kitchen-sink\" package, and it might make sense to component-ize a bit (data readers/writers is an obvious one) so that folks can get new data sources without having to deal with upgrading their code bases to account for little API changes (typically where they were accidentally relying on some undocumented, unspecified, or untested) behavior that breaks their code. Now, that's happening less and less now. And nothing to stop you from having all the `DataFrame.to_*` methods, though perhaps that's starting to get a bit busy =) \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69874362",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69874362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69874362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODc0MzYy",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T06:24:20Z",
    "updated_at": "2015-01-14T06:28:05Z",
    "author_association": "NONE",
    "body": "@hayd my lib won't pass the test because in my lib `DataReader` is an object with a `get` method\nI've never test with Python 3.\nsee for example https://github.com/femtotrader/pandas_datareaders/blob/master/tests/test_datareader_google_finance_daily.py\nSo we should forget my lib for now.\nMy idea was to have a DataReader object which could have a `expire_after` parameter defined at `__init__`.\n\nAn other example of my DataReader object is here\nhttps://github.com/femtotrader/pandas_datareaders/blob/master/pandas_datareaders/datareaders/openexchangerates.py\nhttps://github.com/femtotrader/pandas_datareaders/blob/master/tests/test_datareader_openexchangerates.py\nthere is a `get` method to get currency exchange rate matrix\nbut also a `convert` method to convert currencies\n\nMaybe that wasn't a good idea...\nmaybe we should still keep `DataReader` a function (and have all the current code not modified).\nWe should just move current pandas code and doc first.\n\nIn a second step, we will be able to add cache mechanism anyway passing `session` parameter to `DataReader` function (this parameters being defined as `None` by default) so it should be backward-compat.\n\n```\nimport requests_cache\nsession = requests_cache.CachedSession(cache_name='cache', backend='sqlite', expire_after=60*60)\ndf = web.DataReader(symbol, 'google', start, end, session)\n```\n\nWhat is your opinion about it ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69933870",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69933870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69933870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTMzODcw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T15:34:49Z",
    "updated_at": "2015-01-14T15:35:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, let's do this, theres a been 2 patches since I migrated it a month ago, so will do the following.\n- Apply those patches to hayd/...\n- Push to pydata/... (Can I just do that @jreback, we need to decide on a name eitherway though...)\n- Push package to pypi (Note: failing on 0.10- IIRC due to compat)\n- Replace on pandas and make PR to see if it still passes all the tests\n- Make similar lib for compat\n- Get datareaders working on older pandas...\n\nThen @femtotrader add in what you've learned making pandas_datareaders (hopefully with minimal/no breaking API changes). Caching + sessions sounds great!\n\nI'm not sure we can use `pandas_datareaders` as the pypi name as that conflicts with your package (and will break code for people... including yours!) What about just `pandas_data` or `pd_datareaders`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69936345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69936345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69936345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTM2MzQ1",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T15:48:21Z",
    "updated_at": "2015-01-14T15:53:22Z",
    "author_association": "NONE",
    "body": "You can take the project on Pypi it doesn't matter for me\n\nwe just need to use a version number > 0.0.2 for the official `pandas_datareader`.\n\nMy (very few) users will have to use version 0.0.2 of my DataReader or wait for 0.2 pandas official datareader (because there will be no cache in 0.1)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69937115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69937115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69937115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTM3MTE1",
    "user": {
      "login": "femtotrader",
      "id": 5049737,
      "node_id": "MDQ6VXNlcjUwNDk3Mzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5049737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/femtotrader",
      "html_url": "https://github.com/femtotrader",
      "followers_url": "https://api.github.com/users/femtotrader/followers",
      "following_url": "https://api.github.com/users/femtotrader/following{/other_user}",
      "gists_url": "https://api.github.com/users/femtotrader/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/femtotrader/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/femtotrader/subscriptions",
      "organizations_url": "https://api.github.com/users/femtotrader/orgs",
      "repos_url": "https://api.github.com/users/femtotrader/repos",
      "events_url": "https://api.github.com/users/femtotrader/events{/privacy}",
      "received_events_url": "https://api.github.com/users/femtotrader/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T15:52:26Z",
    "updated_at": "2015-01-14T15:52:48Z",
    "author_association": "NONE",
    "body": "I've just add @wesm and @jreback as owner of https://pypi.python.org/pypi/pandas_datareaders\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69937773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69937773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69937773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTM3Nzcz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T15:55:59Z",
    "updated_at": "2015-01-14T15:55:59Z",
    "author_association": "MEMBER",
    "body": "On a name, I more like \"pandas-datareader\" instead of \"pandas_datareader\", and then eg just `datareader` to import. But, of course, just a matter of taste ..\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69938469",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69938469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69938469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTM4NDY5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T15:59:41Z",
    "updated_at": "2015-01-14T15:59:41Z",
    "author_association": "MEMBER",
    "body": "@hayd What do you mean with \"make similar lib for compat\"?\n\nAnd with \"Replace on pandas\"? -> I think we jsut leave it as it is for now, and if everyting is in place just put a deprecation warning on it? (and then remove in a more future release)\n\nOn \"Get datareaders working on older pandas...\", I think up to 0.11 (it is now?) is already very nice (if it would be much effort)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69940934",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8961#issuecomment-69940934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8961",
    "id": 69940934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTQwOTM0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-14T16:12:55Z",
    "updated_at": "2015-01-14T16:12:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche sorry current failure is 0.12- (see https://travis-ci.org/hayd/pandas_data_readers/builds/43218562) it's basically just pandas.compat not having certain functions back then - if we make pandas-compat a sep package we wouldn't have that issue (and I think it would work on 0.10+ for free).\n\nI don't see the reason to not just include it, what's the value in deprecate/remove?\n"
  }
]
