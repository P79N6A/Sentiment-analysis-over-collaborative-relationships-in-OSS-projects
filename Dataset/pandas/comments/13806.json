[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235403796",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235403796",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235403796,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQwMzc5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T21:00:02Z",
    "updated_at": "2016-07-26T21:00:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW, we follow python's logic here\n\n``` python\nIn [40]: float('nan') or 1\nOut[40]: nan\n\nIn [41]: 1 or float('nan')\nOut[41]: 1\n```\n\nYour example is similar, the `NaN | True` vs `True | NaN` is causing the difference.\n\nThanks to short-circuiting, I don't think you can rely on `|` and `or` to be symmetrical.\n\n``` python\n\nIn [44]: True or this_variable_is_undefined\nOut[44]: True\n```\n\nThe reverse of that throws a NameError.\n\n> However, I believe that this may introduce bugs silently\n\nI suspect you're right ðŸ˜„ I don't think we can change this behavior though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235405618",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235405618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235405618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQwNTYxOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T21:06:49Z",
    "updated_at": "2016-07-26T21:07:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I should also say that you can get the desired output by `test.a.str.isnumeric().fillna(False) | test.a.isnull()`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235411582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235411582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235411582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQxMTU4Mg==",
    "user": {
      "login": "josepablog",
      "id": 1832193,
      "node_id": "MDQ6VXNlcjE4MzIxOTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1832193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josepablog",
      "html_url": "https://github.com/josepablog",
      "followers_url": "https://api.github.com/users/josepablog/followers",
      "following_url": "https://api.github.com/users/josepablog/following{/other_user}",
      "gists_url": "https://api.github.com/users/josepablog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josepablog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josepablog/subscriptions",
      "organizations_url": "https://api.github.com/users/josepablog/orgs",
      "repos_url": "https://api.github.com/users/josepablog/repos",
      "events_url": "https://api.github.com/users/josepablog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josepablog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T21:29:58Z",
    "updated_at": "2016-07-26T21:29:58Z",
    "author_association": "NONE",
    "body": "I think I didn't phrase my issue correctly.  We agree that short-circuiting may break commutativity.  \n\nI'm not talking about NaN | True.  I'm talking about:\n code that raises an exception | True\n\nIf you run  `isnumeric`  by itself, on my sample code, an exception is raised for the null values.  The exception is NEVER raised when it's inside an or!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235417264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235417264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235417264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQxNzI2NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T21:52:31Z",
    "updated_at": "2016-07-26T21:52:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, you're saying `test['a'].str.isnumeric()` raises an exception? I don't get one running master.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235420583",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235420583",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235420583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQyMDU4Mw==",
    "user": {
      "login": "josepablog",
      "id": 1832193,
      "node_id": "MDQ6VXNlcjE4MzIxOTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1832193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josepablog",
      "html_url": "https://github.com/josepablog",
      "followers_url": "https://api.github.com/users/josepablog/followers",
      "following_url": "https://api.github.com/users/josepablog/following{/other_user}",
      "gists_url": "https://api.github.com/users/josepablog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josepablog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josepablog/subscriptions",
      "organizations_url": "https://api.github.com/users/josepablog/orgs",
      "repos_url": "https://api.github.com/users/josepablog/repos",
      "events_url": "https://api.github.com/users/josepablog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josepablog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T22:05:46Z",
    "updated_at": "2016-07-26T22:05:46Z",
    "author_association": "NONE",
    "body": "@TomAugspurger thank you for getting back to me.   This raises an exception to me:\n\n`test[ test[\"a\"].str.isnumeric() ]`\n\nWhich is the simplified version we were testing. The code you wrote, doesn't raise an exception for me either.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235422733",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235422733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235422733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQyMjczMw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T22:14:56Z",
    "updated_at": "2016-07-26T22:15:14Z",
    "author_association": "MEMBER",
    "body": "Yeah it raises `ValueError` because `Series` contains `NaN`.\n\n```\n# on current master\ntest[\"a\"].str.isnumeric() \n# 0     True\n# 1      NaN\n# 2     True\n# 3    False\n# Name: a, dtype: object\n```\n\nI think `.str.is_xxx` method should return `False` rather than `NaN` if input is not string likes.\n\n```\n# expected\ntest[\"a\"].str.isnumeric() \n# 0     True\n# 1    False\n# 2     True\n# 3    False\n# Name: a, dtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235424075",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235424075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235424075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQyNDA3NQ==",
    "user": {
      "login": "josepablog",
      "id": 1832193,
      "node_id": "MDQ6VXNlcjE4MzIxOTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1832193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/josepablog",
      "html_url": "https://github.com/josepablog",
      "followers_url": "https://api.github.com/users/josepablog/followers",
      "following_url": "https://api.github.com/users/josepablog/following{/other_user}",
      "gists_url": "https://api.github.com/users/josepablog/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/josepablog/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/josepablog/subscriptions",
      "organizations_url": "https://api.github.com/users/josepablog/orgs",
      "repos_url": "https://api.github.com/users/josepablog/repos",
      "events_url": "https://api.github.com/users/josepablog/events{/privacy}",
      "received_events_url": "https://api.github.com/users/josepablog/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T22:20:51Z",
    "updated_at": "2016-07-26T22:20:51Z",
    "author_association": "NONE",
    "body": "Possibly. I'm more worried about inconsistent behavior inside an or. Look:\n- `test[ test[\"a\"].str.isnumeric() ]` Raises exception, which may be appropriate behavior\n- `test[ test[\"a\"].isnull() | test[\"a\"].str.isnumeric()]`  Does not raise exception due to short-circuiting, therefore this is appropriate behavior\n- `test[ test[\"a\"].str.isnumeric() | test[\"a\"].isnull() ]`Does not raise an exception, **although it should**! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235558036",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235558036",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235558036,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU1ODAzNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T11:23:37Z",
    "updated_at": "2016-07-27T11:23:37Z",
    "author_association": "MEMBER",
    "body": "This boils down to the Series behaviour for `|` with Nans:\n\n```\nIn [10]: pd.Series([True, np.nan]) | pd.Series([False, True])\nOut[10]:\n0     True\n1    False\ndtype: bool\n\nIn [11]: pd.Series([False, True]) | pd.Series([True, np.nan])\nOut[11]:\n0    True\n1    True\ndtype: bool\n```\n\nSo the comparison never propagates the `NaN`. For this reason, you do not get any exception. \nBut, the difference between both is a bit surprising.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235558382",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235558382",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235558382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU1ODM4Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T11:25:41Z",
    "updated_at": "2016-07-27T11:25:41Z",
    "author_association": "MEMBER",
    "body": "The issue about NaNs in booleans is already discussed in https://github.com/pydata/pandas/issues/6528, so closing here as a duplicate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235559116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235559116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235559116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU1OTExNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T11:29:40Z",
    "updated_at": "2016-07-27T11:29:40Z",
    "author_association": "MEMBER",
    "body": "> test[ test[\"a\"].str.isnumeric() | test[\"a\"].isnull() ]Does not raise an exception, although it should! \n\n@josepablog Whether it should raise or not depends on the outcome of `np.nan | True/False`. This currently returns False. If we decide that `False` is the correct outcome, then the above code snippet should not raise. However, it could be argued that `np.nan | True/False` should return `np.nan`, and in that case the above code snippet will raise. But the return value of `np.nan | True/False` is rather independent of this specific use case, and as in my previous comment, this is covered in #6528\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235565913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235565913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235565913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU2NTkxMw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T12:06:55Z",
    "updated_at": "2016-07-27T12:06:55Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche, @TomAugspurger what do you think `.str` accessor to return error case, `NaN` or `False`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235568174",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235568174",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235568174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU2ODE3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T12:18:51Z",
    "updated_at": "2016-07-27T12:18:51Z",
    "author_association": "MEMBER",
    "body": "Ah yes, forgot that part of the issue. Is there any precendence for other of the string methods on how they handle errors / NaNs? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235570091",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13806#issuecomment-235570091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13806",
    "id": 235570091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTU3MDA5MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T12:28:06Z",
    "updated_at": "2016-07-27T12:28:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sinhrks I prefer the current behavior of `str.is_*` propagating NAs.\n1. It seems more consistent with other non-reducing behavior for how it treats NAs (eg. nan + 1 is nan)\n2. If you seems easier to followup the `is_*` with a fillna than to somehow recover the `NA`s if you _do_ want to propagate them.\n\nWe could document this better. This is a common enough gotcha that we should include a warning box in the prose docs. Another option is to add a `fill_value` to all the `is*` methods for NA behavior, defaulting to `None/np.nan`. That would give the behavior a bit more visibility.\n"
  }
]
