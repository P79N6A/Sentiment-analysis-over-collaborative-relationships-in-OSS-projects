[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22540278",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22540278",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22540278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQwMjc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T02:52:02Z",
    "updated_at": "2013-08-13T02:52:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "not a bug see #4531 for an example\n\nthis is a chained accessor and sometimes can work depending on whether the frame has multiple dtypes and the memory layout, but is not guaranteed nor recommended syntax\n\nyou should set via iloc[row,col]\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22540465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22540465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22540465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQwNDY1",
    "user": {
      "login": "dirkbike",
      "id": 3711678,
      "node_id": "MDQ6VXNlcjM3MTE2Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3711678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkbike",
      "html_url": "https://github.com/dirkbike",
      "followers_url": "https://api.github.com/users/dirkbike/followers",
      "following_url": "https://api.github.com/users/dirkbike/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkbike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkbike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkbike/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkbike/orgs",
      "repos_url": "https://api.github.com/users/dirkbike/repos",
      "events_url": "https://api.github.com/users/dirkbike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkbike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T02:59:41Z",
    "updated_at": "2013-08-13T03:00:35Z",
    "author_association": "NONE",
    "body": "Ok, so, say for performance reasons (http://wiki.python.org/moin/PythonSpeed/PerformanceTips#Avoiding_dots...) I wanted to avoid doing repeated dot references to df.iloc[0].  Is there a way I can safely set df.iloc[0] to a local variable and access its contents with another accessor?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22540567",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22540567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22540567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQwNTY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T03:03:38Z",
    "updated_at": "2013-08-13T03:03:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "it's not going to be the bottleneck\nwhat are u trying to do?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22540720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22540720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22540720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQwNzIw",
    "user": {
      "login": "dirkbike",
      "id": 3711678,
      "node_id": "MDQ6VXNlcjM3MTE2Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3711678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkbike",
      "html_url": "https://github.com/dirkbike",
      "followers_url": "https://api.github.com/users/dirkbike/followers",
      "following_url": "https://api.github.com/users/dirkbike/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkbike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkbike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkbike/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkbike/orgs",
      "repos_url": "https://api.github.com/users/dirkbike/repos",
      "events_url": "https://api.github.com/users/dirkbike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkbike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T03:10:04Z",
    "updated_at": "2013-08-13T03:10:04Z",
    "author_association": "NONE",
    "body": "I want to iterate through a data frame and make changes to a row relative to the values in the previous row.  I'm hunting for ways to make the each iteration run faster.  Ideally I'd use something like a rolling_apply with a window of 2, but rolling_apply only works for a single column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22540784",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22540784",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22540784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQwNzg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T03:12:40Z",
    "updated_at": "2013-08-13T03:12:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "much better to create a mask and then assign a new frame\n\nput up a sample frame and what you want the final to look like and I'll show u\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22541027",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22541027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22541027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQxMDI3",
    "user": {
      "login": "dirkbike",
      "id": 3711678,
      "node_id": "MDQ6VXNlcjM3MTE2Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3711678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkbike",
      "html_url": "https://github.com/dirkbike",
      "followers_url": "https://api.github.com/users/dirkbike/followers",
      "following_url": "https://api.github.com/users/dirkbike/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkbike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkbike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkbike/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkbike/orgs",
      "repos_url": "https://api.github.com/users/dirkbike/repos",
      "events_url": "https://api.github.com/users/dirkbike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkbike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T03:23:38Z",
    "updated_at": "2013-08-13T03:35:31Z",
    "author_association": "NONE",
    "body": "Here's an example of my old code.  I'm trying to make the code in the iterate function's for loop run as fast as possible.  Essentially I want every C element to add itself to the product of the current A element and previous B element.\n\n```\nimport pandas\nimport numpy as np\nimport time\n\nlength = 10000\nd = {'a':np.random.randn(length),'b':np.random.randn(length),'c':np.random.randn(length)}\ndf = pandas.DataFrame(d)\n\ndef iterate(df):\n    for i in xrange(1,len(df)):\n        prev = df.iloc[i-1]\n        curr = df.iloc[i]\n        curr['c'] = curr['c'] + prev['b']*curr['a']\n\nprint df.head()\n\nstart = time.time()\niterate(df)\nend = time.time()\n\nprint 'duration: %0.3f' % (end-start)\n\nprint df.head()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22541610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22541610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22541610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQxNjEw",
    "user": {
      "login": "dirkbike",
      "id": 3711678,
      "node_id": "MDQ6VXNlcjM3MTE2Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3711678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkbike",
      "html_url": "https://github.com/dirkbike",
      "followers_url": "https://api.github.com/users/dirkbike/followers",
      "following_url": "https://api.github.com/users/dirkbike/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkbike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkbike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkbike/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkbike/orgs",
      "repos_url": "https://api.github.com/users/dirkbike/repos",
      "events_url": "https://api.github.com/users/dirkbike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkbike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T03:46:39Z",
    "updated_at": "2013-08-13T03:46:39Z",
    "author_association": "NONE",
    "body": "In my full code, the iterating loop is something that gets implemented by user defined class, so it isn't necessarily known ahead of time.  It could, for example, have conditional statements that change the current row before the next iteration is run.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22541626",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22541626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22541626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQxNjI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T03:47:12Z",
    "updated_at": "2013-08-13T03:47:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "This calculation is trivially vectorized\n\n```\nIn [5]: def f():\n   ...:     df2 = df.copy()\n   ...:     for i in xrange(1,len(df2)):\n   ...:         prev = df2.iloc[i-1]\n   ...:         curr = df2.iloc[i]\n   ...:         curr['C'] = curr['C'] + prev['B']*curr['A']\n   ...:     return df2\n   ...: \n\nIn [6]: %timeit f()\n1 loops, best of 3: 600 ms per loop\n```\n\nTry this one\n\n```\n [9]: def g():\n   ...:     df2 = df.copy()\n   ...:     df2['C'] = df2['C'] + df2.shift()['B']*df2['A']\n   ...:     return df2\n   ...: \n\nIn [10]: %timeit g()\n1000 loops, best of 3: 453 µs per loop\n```\n\nAnd they do the same calculation\n\n```\nIn [11]: g().head()\nOut[11]: \n          A         B         C\n0  1.027036 -0.600508       NaN\n1 -1.157011  0.758945  2.822018\n2  0.030327 -3.206018 -1.763926\n3 -0.284152  0.618429  0.049077\n4 -1.528973  1.088540 -2.762662\n\nIn [12]: f().head()\nOut[12]: \n          A         B         C\n0  1.027036 -0.600508 -0.350233\n1 -1.157011  0.758945  2.822018\n2  0.030327 -3.206018 -1.763926\n3 -0.284152  0.618429  0.049077\n4 -1.528973  1.088540 -2.762662\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22541687",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22541687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22541687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQxNjg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T03:49:31Z",
    "updated_at": "2013-08-13T03:49:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "in pandas there are very very few inplace operations by default (actually only setting); this is on purpose. It is almost always faster to construct a new calculated result that to change an existing data structure.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22541732",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22541732",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22541732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQxNzMy",
    "user": {
      "login": "dirkbike",
      "id": 3711678,
      "node_id": "MDQ6VXNlcjM3MTE2Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3711678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkbike",
      "html_url": "https://github.com/dirkbike",
      "followers_url": "https://api.github.com/users/dirkbike/followers",
      "following_url": "https://api.github.com/users/dirkbike/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkbike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkbike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkbike/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkbike/orgs",
      "repos_url": "https://api.github.com/users/dirkbike/repos",
      "events_url": "https://api.github.com/users/dirkbike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkbike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T03:51:55Z",
    "updated_at": "2013-08-13T03:51:55Z",
    "author_association": "NONE",
    "body": "Yeah I see your point.  Very nice.  So, how would I be able to reformulate a conditional statement like this?\n\n```\ndef iterate(df):\n    for i in xrange(1,len(df)):\n        prev = df.iloc[i-1]\n        curr = df.iloc[i]\n        curr['c'] = curr['c'] + prev['b']*curr['a']\n        if curr['c'] > 1.0:\n            curr['b'] -= 0.1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22542102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22542102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22542102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQyMTAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T04:06:42Z",
    "updated_at": "2013-08-13T04:06:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "if it was not recurrent then\n\ndf.loc[df['c']>1,'b'] -= 0.1\n\nhowever since this looks like feedback, you might need to iterate\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22566678",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22566678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22566678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTY2Njc4",
    "user": {
      "login": "dirkbike",
      "id": 3711678,
      "node_id": "MDQ6VXNlcjM3MTE2Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3711678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkbike",
      "html_url": "https://github.com/dirkbike",
      "followers_url": "https://api.github.com/users/dirkbike/followers",
      "following_url": "https://api.github.com/users/dirkbike/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkbike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkbike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkbike/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkbike/orgs",
      "repos_url": "https://api.github.com/users/dirkbike/repos",
      "events_url": "https://api.github.com/users/dirkbike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkbike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T14:01:25Z",
    "updated_at": "2013-08-13T14:07:33Z",
    "author_association": "NONE",
    "body": "Understood.  Could this be a use case to warrant the development of a rolling_apply that works across entire rows?  This situation (non-recurrent conditional operations that depend on previous row contents) shows up a lot for me when I try to use a dataframe as a basis for a time-dependent simulation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22567906",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22567906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22567906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTY3OTA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T14:18:29Z",
    "updated_at": "2013-08-13T14:18:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes this could be an enhancement\n\nyou might want to construct an `ewma` like relation (which is what it seems like you are after); this is very fast as its implemented in cython.\n\nThat's the whole problem with `rolling_apply/apply` the functions evals are slow relative to the looping because you have to keep coming back to python.\n\nSo another option is to look at: http://pandas.pydata.org/pandas-docs/dev/enhancingperf.html\n\nalso if you don't the indexing features of `iloc`, just drop down to a values, e.g. `df.values` gives you back a numpy array which doesn't have some of the indexing niceties, but can be faster (also you may want to lookat `at/iat`: http://pandas.pydata.org/pandas-docs/dev/indexing.html#fast-scalar-value-getting-and-setting\n\nkeep in mine optimizing your computation should be the **last** thing you are doing, first profile!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22573772",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4546#issuecomment-22573772",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4546",
    "id": 22573772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTczNzcy",
    "user": {
      "login": "dirkbike",
      "id": 3711678,
      "node_id": "MDQ6VXNlcjM3MTE2Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3711678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dirkbike",
      "html_url": "https://github.com/dirkbike",
      "followers_url": "https://api.github.com/users/dirkbike/followers",
      "following_url": "https://api.github.com/users/dirkbike/following{/other_user}",
      "gists_url": "https://api.github.com/users/dirkbike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dirkbike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dirkbike/subscriptions",
      "organizations_url": "https://api.github.com/users/dirkbike/orgs",
      "repos_url": "https://api.github.com/users/dirkbike/repos",
      "events_url": "https://api.github.com/users/dirkbike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dirkbike/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-13T15:35:53Z",
    "updated_at": "2013-08-13T15:35:53Z",
    "author_association": "NONE",
    "body": "Thanks for the tips!\n"
  }
]
