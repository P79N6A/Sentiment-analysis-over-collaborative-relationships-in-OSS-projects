[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145925154",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-145925154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 145925154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTkyNTE1NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-06T16:49:49Z",
    "updated_at": "2015-10-06T16:52:34Z",
    "author_association": "MEMBER",
    "body": "A previous similar PR was closed as out of scope for pandas: #6687\n\n@lukovnikov you can go through the discussion there, and see if you have arguments that this should be included, then we can always reconsider.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145932818",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-145932818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 145932818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTkzMjgxOA==",
    "user": {
      "login": "lukovnikov",
      "id": 1732910,
      "node_id": "MDQ6VXNlcjE3MzI5MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1732910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukovnikov",
      "html_url": "https://github.com/lukovnikov",
      "followers_url": "https://api.github.com/users/lukovnikov/followers",
      "following_url": "https://api.github.com/users/lukovnikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukovnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukovnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukovnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/lukovnikov/orgs",
      "repos_url": "https://api.github.com/users/lukovnikov/repos",
      "events_url": "https://api.github.com/users/lukovnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukovnikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-06T17:20:24Z",
    "updated_at": "2015-10-06T17:56:24Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche this is more general than train/test split, you can make as many random splits as you want (and this is something you also mentioned for #6687).\n\nAnd although indexing yourself or using groupby like in #6687 can get you the same, I find having this method much easier, it's a no-brainer that seems interesting if you don't want to depend on sklearn or other libraries for easy splitting or think about it yourself. The .sample() method is also a no-brainer for selecting random samples which could've been done by the users and could also be excluded.\n\nI can also make a general .split() method, with a randomness option but with the same notion of relative sizes of the splits (which, without randomness, are just taken from the beginning).\n\nEdit: I'm not aware what statsmodels provides, maybe they also have something. Anyway, in my opinion an optionally random .split() in pandas would still be interesting, even if it only prevents other dependencies.\n\nEdit: generalized it to an optionally random .split() method.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146073870",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146073870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146073870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjA3Mzg3MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T04:20:35Z",
    "updated_at": "2015-10-07T04:20:35Z",
    "author_association": "MEMBER",
    "body": "From an API design perspective, I think it's much clean to have `.random_split()` rather than a completely general function that lets flags change every bit of behavior it has. Pandas has too many of those already.\n\nOn the whole, I think this _could_ be a reasonable thing to add to pandas as long as it's called `random_split` and not the hopelessly ambiguous `split`. Pandas shouldn't have detailed stats or machine learning routines, but randomized splits really are data science 101.\n\nIf we do want to go forward with this, it's worth looking at the `DataFrame.random_split()` method that was added to dask.dataframe to verify the consistency of the API: https://github.com/blaze/dask/pull/276\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146152672",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146152672",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146152672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjE1MjY3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T10:44:48Z",
    "updated_at": "2015-10-07T10:44:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "#7387 is the master issue for splitting. Pls have a read over the many usecases / features that are needed for general splitting/partitioning.\n\nRandom splitting is a specialization of this `.split` and should not be a separate function, merely an argument here. You are already having a number of arguments, I don't find another to be an issue. It is more confusing IMHO to have to look for random (pun intended) functions.\n\nfurther this API needs to start similarly to [np.split](http://docs.scipy.org/doc/numpy/reference/generated/numpy.split.html)\n\n```\ndef split(self, n=None, weights=None, random=None, axis=0)\n```\n\ncould be a decent start.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146187182",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146187182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146187182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjE4NzE4Mg==",
    "user": {
      "login": "lukovnikov",
      "id": 1732910,
      "node_id": "MDQ6VXNlcjE3MzI5MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1732910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukovnikov",
      "html_url": "https://github.com/lukovnikov",
      "followers_url": "https://api.github.com/users/lukovnikov/followers",
      "following_url": "https://api.github.com/users/lukovnikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukovnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukovnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukovnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/lukovnikov/orgs",
      "repos_url": "https://api.github.com/users/lukovnikov/repos",
      "events_url": "https://api.github.com/users/lukovnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukovnikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T12:50:51Z",
    "updated_at": "2015-10-07T12:50:51Z",
    "author_association": "NONE",
    "body": "@jreback yeah, but the np.split() is a function on np, not on an array so the first argument is already the pandas object we're calling it on. The second argument of np.split() is a int or list of ints, which specifies the number of _equal_ splits or the _indices_ along which to split. In the generalized .split() method here, I aim to accept weights, which are proportionate to the desired relative sizes of the output splits. Accepting a list of indices as arguments in my opinion is a little superfluous. If you already have those indices, why don't you just use them? Anyway, they could be added as a yet another option.\n\nI understand your concern to not to overcrowd the API but I'm more with @shoyer on the issue of a separate random_split() method. It's easier to find a dedicated function with limited number of arguments/switches than reading through long argument descriptions of over-argumented functions.\n\n@shoyer First it was random_split() but in the second commit I made a split() out of it. In my opinion, a dedicated method is also better.\n\nWe could make a collection of splitting methods:\n- isplit() that accepts indices (like numpy.split())\n- rsplit() that accepts weights for relative split sizes\n- random_split() that accepts weights but behaves randomly\n- split(), a method with switching arguments for randomness and indices/weights\n\nOR, similar to what @jreback mentions for #7387 (if I understood that discussion correctly) we could have\n- a split() on GroupBy\n- a shuffle() method on a Frame that returns a GroupBy or a Shuffler Grouper that can be passed to .groupby()\n- but then we might still want at least a simple split() method on a Frame, for non-random splitting (maybe following the numpy semantics) OR a Partitioner Grouper as an argument to .groupby(), like @jreback suggested for #7387.\n\nIn my opinion, the first option is easier for beginners and is a no-brainer (and thus better for wider adoption of pandas) while the second option seems like a cleaner implementation but is less of a no-brainer.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146225268",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146225268",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146225268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjIyNTI2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T15:11:33Z",
    "updated_at": "2015-10-07T15:11:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> but the np.split() is a function on np, not on an array so the first argument is already the pandas object we're calling it on. \n\nthis is the point of the buffer interface, so it in fact is useful, no need to repeat things, except where pandas can add value. This is where a `.split()` method comes in\n\nwe already have `.sample()` so no need for shuffle.\nI think the only API expansion needed here is `.split()`\n\nthis can accomplish all of the objectives with a minimum of keywords. Adding a plethora of methods is just plain confusing and bloats the API. \n\nThis is a very similar method in nature to `.sample` so it should follow a similar pattern.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146227462",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146227462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146227462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjIyNzQ2Mg==",
    "user": {
      "login": "lukovnikov",
      "id": 1732910,
      "node_id": "MDQ6VXNlcjE3MzI5MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1732910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukovnikov",
      "html_url": "https://github.com/lukovnikov",
      "followers_url": "https://api.github.com/users/lukovnikov/followers",
      "following_url": "https://api.github.com/users/lukovnikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukovnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukovnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukovnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/lukovnikov/orgs",
      "repos_url": "https://api.github.com/users/lukovnikov/repos",
      "events_url": "https://api.github.com/users/lukovnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukovnikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T15:18:10Z",
    "updated_at": "2015-10-07T15:22:17Z",
    "author_association": "NONE",
    "body": "@jreback do you mean a `.split()` on a GroupBy or a `.split()` on a Frame?\n\nEdit: the `.split()` I implemented on the Frame (see second commit) already is optionally random. So if I add an optional `indexes` argument (that can not be used with the `weights` argument), you think it's good? The `indexes` argument will have the same semantics as the indexes argument for `np.split()` whereas the `weights` argument allows to specify proportions you want (maybe should be renamed to `proportions`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146232199",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146232199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146232199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjIzMjE5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T15:31:41Z",
    "updated_at": "2015-10-07T15:31:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.split` could exist on a groupby, though not really sure of the semantics, as you can trivially\n\n`[ grp for _, grp in df.groupby(....) ]` is basically what you want, though\n`df.groupby(....).split()` might make sense for some applications here\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146241611",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146241611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146241611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI0MTYxMQ==",
    "user": {
      "login": "lukovnikov",
      "id": 1732910,
      "node_id": "MDQ6VXNlcjE3MzI5MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1732910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukovnikov",
      "html_url": "https://github.com/lukovnikov",
      "followers_url": "https://api.github.com/users/lukovnikov/followers",
      "following_url": "https://api.github.com/users/lukovnikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukovnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukovnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukovnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/lukovnikov/orgs",
      "repos_url": "https://api.github.com/users/lukovnikov/repos",
      "events_url": "https://api.github.com/users/lukovnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukovnikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T15:52:44Z",
    "updated_at": "2015-10-07T15:57:57Z",
    "author_association": "NONE",
    "body": "how can random splits be realized if `.split()` is attached to a `GroupBy`? Then you also need some RandomGrouper to feed to `.groupby()`?\n\nSo my question is: can we put a general `.split()` on a Frame, in which case I can quickly extend the functionality to have `numpy.split()`-like indexes or you don't want `.split()` to become a part of a Frame's API?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146246027",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146246027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146246027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI0NjAyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T16:08:05Z",
    "updated_at": "2015-10-07T16:08:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "it becomes trivial actually (at least for random, not partitioned)\n\n`df.groupby(np.random.randint(0,len(df),size=df)).split()`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146247190",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146247190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146247190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI0NzE5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T16:11:03Z",
    "updated_at": "2015-10-07T16:11:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think `.split()` on the frame is ok, but since we already have `.groupby` which handles partitioned, column splitting and such, it makes a lot more sense on groupby.\n\nthough it _does_ have a different return type (e.g. `.groupby......` returns a pandas object), now it would return a list of them (but I think this is ok here)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146247763",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146247763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146247763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI0Nzc2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T16:12:25Z",
    "updated_at": "2015-10-07T16:12:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "and what I would do to support 'kinds' of splitting is make things like:\n\n`Random`\n`Partition`\n\nwhich are sub-classes of `pd.Grouper` to control exactly how splitting is done. Then you don't have lots of arguments, and it is pretty semantic\n\n```\ndf.groupby(Random(1234)).split()\ndf.groupby(Partition([1,2,3])).split()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146252811",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146252811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146252811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI1MjgxMQ==",
    "user": {
      "login": "lukovnikov",
      "id": 1732910,
      "node_id": "MDQ6VXNlcjE3MzI5MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1732910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukovnikov",
      "html_url": "https://github.com/lukovnikov",
      "followers_url": "https://api.github.com/users/lukovnikov/followers",
      "following_url": "https://api.github.com/users/lukovnikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukovnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukovnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukovnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/lukovnikov/orgs",
      "repos_url": "https://api.github.com/users/lukovnikov/repos",
      "events_url": "https://api.github.com/users/lukovnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukovnikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T16:27:37Z",
    "updated_at": "2015-10-07T16:27:37Z",
    "author_association": "NONE",
    "body": "yes, this seems like a cleaner implementation but maybe a `.split()` on a Frame that uses `.groupby()` internally would also be interesting as a convenience method?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146253655",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146253655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146253655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI1MzY1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T16:30:32Z",
    "updated_at": "2015-10-07T16:30:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could be convinced of that as well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146298541",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146298541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146298541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI5ODU0MQ==",
    "user": {
      "login": "lukovnikov",
      "id": 1732910,
      "node_id": "MDQ6VXNlcjE3MzI5MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1732910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukovnikov",
      "html_url": "https://github.com/lukovnikov",
      "followers_url": "https://api.github.com/users/lukovnikov/followers",
      "following_url": "https://api.github.com/users/lukovnikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukovnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukovnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukovnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/lukovnikov/orgs",
      "repos_url": "https://api.github.com/users/lukovnikov/repos",
      "events_url": "https://api.github.com/users/lukovnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukovnikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T19:11:20Z",
    "updated_at": "2015-10-07T19:11:20Z",
    "author_association": "NONE",
    "body": "so, I hope this implementation is good (if someone could quickly review the code, that would be helpful)\nstill need to write proper tests and test it though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146326185",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146326185",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146326185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjMyNjE4NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T20:57:55Z",
    "updated_at": "2015-10-07T20:57:55Z",
    "author_association": "MEMBER",
    "body": "I am personally not a fan of adding extra objects like `Random` and `Partition` to use with groupby. Using objects for this is more cognitive load than a method for users, and further I also find it a bit unintuitive to have to use groupby when I want to split randomly.\n\n(apart from that, a `split` method on groupby can be useful, but I find it a bit a separate issue)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146351440",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146351440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146351440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjM1MTQ0MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T22:31:27Z",
    "updated_at": "2015-10-07T22:31:27Z",
    "author_association": "MEMBER",
    "body": "I agree with @jorisvandenbossche that I would rather not add extra objects to the API exclusively for use with groupby.\n\nI think a better approach is create alternative methods (other than `.groupby`) that return `GroupBy` like objects. For example, it would make a lot of sense to make this the case for `resample` (removing the need to use `TimeGrouper`), e.g., `df.resample('24H').sum()` instead of `df.resample('24H', how='sum')` (this is a whole different issue, for course).\n\nHowever, it is not clear to me why a groupby object is an intuitive result from a method that produces random partitions or splits. What is the actual use case here? Would you really want to write something like `df.groupby(RandomPartition({'train': 0.7, 'test': 0.3})).apply(model.predict)`? That doesn't look very readable to me. I would rather write:\n\n```\ntest, train = df.random_split([0.7, 0.3])\ntest_predictions = model.predict(test)\ntrain_prediction = model.predict(train)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146361829",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146361829",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146361829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjM2MTgyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T23:12:30Z",
    "updated_at": "2015-10-07T23:12:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "would be \n\ntrain, test = df.groupby(RandomPartition(( 0.7, .3)).split()\n\nin resample\nit's quite easy to return the GroupBy\nbut I think impossible to change and maintain back compatible\n\neg df.resample('24h') defaults to .mean() (if it was None) then this would work\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146362695",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146362695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146362695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjM2MjY5NQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T23:18:25Z",
    "updated_at": "2015-10-07T23:18:25Z",
    "author_association": "MEMBER",
    "body": "I agree that there's no easy way to change resample in a backwards compatible way. Perhaps `how='grouped'` would be a reasonable way to expose this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146551557",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-146551557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 146551557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjU1MTU1Nw==",
    "user": {
      "login": "lukovnikov",
      "id": 1732910,
      "node_id": "MDQ6VXNlcjE3MzI5MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1732910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lukovnikov",
      "html_url": "https://github.com/lukovnikov",
      "followers_url": "https://api.github.com/users/lukovnikov/followers",
      "following_url": "https://api.github.com/users/lukovnikov/following{/other_user}",
      "gists_url": "https://api.github.com/users/lukovnikov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lukovnikov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lukovnikov/subscriptions",
      "organizations_url": "https://api.github.com/users/lukovnikov/orgs",
      "repos_url": "https://api.github.com/users/lukovnikov/repos",
      "events_url": "https://api.github.com/users/lukovnikov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lukovnikov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T13:48:49Z",
    "updated_at": "2015-10-08T13:48:49Z",
    "author_association": "NONE",
    "body": "We could include both approaches (general `.split()` on a Frame and the new Groupers with `.split()` on a GroupBy) in the API. The `.split()` on the GroupBy could prove useful (and is trivial anyway) as it explicitly provides semantics natural for grouped Frame. Probably most people will just use a `.split()` on the Frame though because it's easier to find. However, if someone wants some advanced (random) splitting functionality (wouldn't know what though), one could easily subclass `RandomGrouper` or `OrderedGrouper` and use it with `.groupby()`.\n\nWhat do you think?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158821337",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11253#issuecomment-158821337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11253",
    "id": 158821337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODgyMTMzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T00:11:47Z",
    "updated_at": "2015-11-23T00:11:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing, but if you want to propose a nice API we can re-open\n"
  }
]
