[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276312274",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15272#issuecomment-276312274",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15272",
    "id": 276312274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjMxMjI3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T09:15:14Z",
    "updated_at": "2017-01-31T09:15:14Z",
    "author_association": "MEMBER",
    "body": "@pirsquared Thanks for the report! \r\n\r\nThe `nlargest` and `nsmallest` should indeed be consistent with each other, and produce always the hierarchical index I think.\r\n\r\nThe `apply` one is a more difficult issue. It tries to infer what to do based on the return value. It is true that it is no good that the output shape is not consistent in your example, but of course, the `sample` has also a random aspect, so not sure how this could be solved."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276383907",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15272#issuecomment-276383907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15272",
    "id": 276383907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjM4MzkwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T14:52:02Z",
    "updated_at": "2017-01-31T14:52:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "agree with @jorisvandenbossche here. These are implemented using ``.apply``, which does best-efforts to coerce the final shape. But these should actually use a slightly lower level API which will direct the reshaping in a consistent manner.\r\n\r\nThis is very similar to https://github.com/pandas-dev/pandas/pull/15260#issuecomment-276073724\r\n\r\nwhere we need to *apply* a function , but control the final shape as it cannot be inferred properly."
  }
]
