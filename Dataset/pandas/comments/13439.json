[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225882512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13439#issuecomment-225882512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13439",
    "id": 225882512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTg4MjUxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-14T13:36:02Z",
    "updated_at": "2016-06-14T13:36:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "How difficult is to preprocess the file with xlrd or openpyxl, and pass the modified version (with the additional columns) to `read_excel`.? I haven't used either of those libraries extensively. If it's not too much code we could include it as a cookbook example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226112668",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13439#issuecomment-226112668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13439",
    "id": 226112668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjExMjY2OA==",
    "user": {
      "login": "DocViper666",
      "id": 19929980,
      "node_id": "MDQ6VXNlcjE5OTI5OTgw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19929980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DocViper666",
      "html_url": "https://github.com/DocViper666",
      "followers_url": "https://api.github.com/users/DocViper666/followers",
      "following_url": "https://api.github.com/users/DocViper666/following{/other_user}",
      "gists_url": "https://api.github.com/users/DocViper666/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DocViper666/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DocViper666/subscriptions",
      "organizations_url": "https://api.github.com/users/DocViper666/orgs",
      "repos_url": "https://api.github.com/users/DocViper666/repos",
      "events_url": "https://api.github.com/users/DocViper666/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DocViper666/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-15T07:44:27Z",
    "updated_at": "2016-06-15T12:21:04Z",
    "author_association": "NONE",
    "body": "Thanks for the answer. \n\nWhat I have found as a workaround \n(and please excuse clumsy coding style - I'm a python beginner):\n\n```\n# requires openpyxl version 2.4.0+\n\nfrom openpyxl import load_workbook\nwb = load_workbook(filename='input.xlsx')\nws = wb.get_active_sheet() # ws is now an IterableWorksheet\n\n# iterate thru all cells and if hyperlink found attempt modification of cell\nfor row in ws.rows:\n    for cell in row:\n        try:\n            if len(cell.hyperlink.target)  > 0:\n                cell.value = \"\".join([cell.value,\"|\",cell.hyperlink.target])\n                # Join cell.value and hyperlink target into string (optionally just assign the hyperlink.target to the cell.value\n        except:\n            pass\n\n# save workbook to temp .xlsx (I could not manage to read from buffer...) .\nwb.save(\"temp.xlsx\")\n\n# read with pandas \ndata = pd.read_excel(\"temp.xlsx\")\n\n# take DataSeries and rsplit by \"|\" and expand to 2 columns\nhyper = (data.MyLinks.str.rsplit(\"|\", expand=True))\n\n#set labels\nhyper.columns=[\"Label\",\"Hyperlink\"]\n\n# join them back to dataframe on index\ndata = data.join(hyper, how=\"left\")\n\n# done\n\n```\n\n![output](https://cloud.githubusercontent.com/assets/19929980/16078568/f513b3f6-32ff-11e6-9e4c-79f062e5c6c9.png)\n\nMaybe this is helpful for somebody.\nAn integrated pandas function still would be nice.\n\nBr,\nJoe\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226125747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13439#issuecomment-226125747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13439",
    "id": 226125747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjEyNTc0Nw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-15T08:45:55Z",
    "updated_at": "2016-06-15T08:45:55Z",
    "author_association": "MEMBER",
    "body": "One possible enhancement is to allow user funcs (passed via `converters` kwds) to accept excel `Cell` instances. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226163115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13439#issuecomment-226163115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13439",
    "id": 226163115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjE2MzExNQ==",
    "user": {
      "login": "DocViper666",
      "id": 19929980,
      "node_id": "MDQ6VXNlcjE5OTI5OTgw",
      "avatar_url": "https://avatars3.githubusercontent.com/u/19929980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DocViper666",
      "html_url": "https://github.com/DocViper666",
      "followers_url": "https://api.github.com/users/DocViper666/followers",
      "following_url": "https://api.github.com/users/DocViper666/following{/other_user}",
      "gists_url": "https://api.github.com/users/DocViper666/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DocViper666/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DocViper666/subscriptions",
      "organizations_url": "https://api.github.com/users/DocViper666/orgs",
      "repos_url": "https://api.github.com/users/DocViper666/repos",
      "events_url": "https://api.github.com/users/DocViper666/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DocViper666/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-15T11:41:41Z",
    "updated_at": "2016-06-15T12:07:01Z",
    "author_association": "NONE",
    "body": "@sinhrks:\nThanks for the feedback. Would this allow to target the cell.value and also the cell.hyperlink.target ? Is this supported in the xlrd module that is used for reading the file?\n\n@all: I have updated my workaround in case someone is looking for ideas.\n\n@TomAugspurger : Feel free to used it in the cookbook if fitting\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/226171206",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13439#issuecomment-226171206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13439",
    "id": 226171206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjE3MTIwNg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-15T12:23:01Z",
    "updated_at": "2016-06-15T12:23:01Z",
    "author_association": "MEMBER",
    "body": "@DocViper666 The enhancement should allow something like:\n\n```\npd.read_excel(\"xxx.xlsx\", converters={\"target_col_name\": lambda x: str(x.value) + \"|\"+ str(x.hyperlink.target), raw=True)\n```\n\nAs long as I know, xlrd also has a class corresponding to cell.\n- http://www.lexicon.net/sjmachin/xlrd.html#xlrd.Cell-class\n"
  }
]
