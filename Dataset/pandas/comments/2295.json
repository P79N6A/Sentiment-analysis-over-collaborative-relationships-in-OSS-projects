[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10573890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2295#issuecomment-10573890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2295",
    "id": 10573890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTczODkw",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-20T21:28:50Z",
    "updated_at": "2012-11-20T21:28:50Z",
    "author_association": "MEMBER",
    "body": "It might be a bug; can you post a standalone reproduction of the issue?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10602076",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2295#issuecomment-10602076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2295",
    "id": 10602076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAyMDc2",
    "user": {
      "login": "bluefir",
      "id": 1903683,
      "node_id": "MDQ6VXNlcjE5MDM2ODM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1903683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluefir",
      "html_url": "https://github.com/bluefir",
      "followers_url": "https://api.github.com/users/bluefir/followers",
      "following_url": "https://api.github.com/users/bluefir/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluefir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluefir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluefir/subscriptions",
      "organizations_url": "https://api.github.com/users/bluefir/orgs",
      "repos_url": "https://api.github.com/users/bluefir/repos",
      "events_url": "https://api.github.com/users/bluefir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluefir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-21T15:45:46Z",
    "updated_at": "2012-11-21T15:45:46Z",
    "author_association": "NONE",
    "body": "```\nimport numpy as np\nimport pandas as pd\nfrom pandas import Index, MultiIndex, Series, DataFrame\n\nn_dates = 1000\nn_securities = 2000\nn_factors = 3\nn_versions = 3\n\ndates = pd.date_range('1997-12-31', periods=n_dates, freq='B')\ndates = Index(map(lambda x: x.year * 10000 + x.month * 100 + x.day, dates))\n\nsecid_min = int('10000000', 16)\nsecid_max = int('F0000000', 16)\nstep = (secid_max - secid_min) // (n_securities - 1)\nsecurity_ids = map(lambda x: hex(x)[2:10].upper(), range(secid_min, secid_max + 1, step))\n\ndata_index = MultiIndex(levels=[dates.values, security_ids],\n    labels=[[i for i in xrange(n_dates) for _ in xrange(n_securities)], range(n_securities) * n_dates],\n    names=['date', 'security_id'])\nn_data = len(data_index)\n\nfactors = Index(['factor{}'.format(i) for i in xrange(1, n_factors + 1)])\nversions = ['version{}'.format(i) for i in xrange(1, n_versions + 1)]\nbeta_columns = MultiIndex(levels=[versions, factors.values],\n    labels=[[i for i in xrange(n_versions) for _ in xrange(n_factors)], range(n_factors) * n_versions])\nbetas = DataFrame(index=dates, columns=beta_columns)\n\nfor version in versions:\n    y = Series(np.random.randn(n_data), index=data_index)\n    x = DataFrame(np.random.randn(n_data, n_factors), index=data_index, columns=factors)\n    reg_result = pd.fama_macbeth(y=y, x=x, intercept=False)\n    betas[version] = reg_result._beta_raw\n```\n\n> Traceback (most recent call last):\n>   File \"C:\\Python27\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2431, in safe_execfile\n>     py3compat.execfile(fname,*where)\n>   File \"C:\\Python27\\lib\\site-packages\\IPython\\utils\\py3compat.py\", line 171, in execfile\n>     exec compile(scripttext, filename, 'exec') in glob, loc\n>   File \"D:\\BlueFir\\develop\\python\\AlphaModel\\TestShapes.py\", line 35, in <module>\n>     betas[version] = reg_result._beta_raw\n>   File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\frame.py\", line 1804, in __setitem__\n>     self._set_item(key, value)\n>   File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\frame.py\", line 1844, in _set_item\n>     NDFrame._set_item(self, key, value)\n>   File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\generic.py\", line 493, in _set_item\n>     self._data.set(key, value)\n>   File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\internals.py\", line 884, in set\n>     assert(value.shape[1:] == self.shape[1:])\n> AssertionError\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10603685",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2295#issuecomment-10603685",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2295",
    "id": 10603685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjAzNjg1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-21T16:22:38Z",
    "updated_at": "2012-11-21T16:22:38Z",
    "author_association": "MEMBER",
    "body": "Assigning multiple columns like that doesn't work yet unfortunately. Will see what I can do\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10604231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2295#issuecomment-10604231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2295",
    "id": 10604231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNjA0MjMx",
    "user": {
      "login": "bluefir",
      "id": 1903683,
      "node_id": "MDQ6VXNlcjE5MDM2ODM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1903683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluefir",
      "html_url": "https://github.com/bluefir",
      "followers_url": "https://api.github.com/users/bluefir/followers",
      "following_url": "https://api.github.com/users/bluefir/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluefir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluefir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluefir/subscriptions",
      "organizations_url": "https://api.github.com/users/bluefir/orgs",
      "repos_url": "https://api.github.com/users/bluefir/repos",
      "events_url": "https://api.github.com/users/bluefir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluefir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-21T16:36:50Z",
    "updated_at": "2012-11-21T16:36:50Z",
    "author_association": "NONE",
    "body": "As long as it works for one column, it's not a big deal since you can always iterate through columns. The AssertionError message was confusing though. Thanks for the explanation.\n"
  }
]
