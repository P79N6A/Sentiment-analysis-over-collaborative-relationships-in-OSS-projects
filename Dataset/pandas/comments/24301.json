[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447624848",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24301#issuecomment-447624848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24301",
    "id": 447624848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYyNDg0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-16T08:08:50Z",
    "updated_at": "2018-12-16T08:08:50Z",
    "author_association": "MEMBER",
    "body": "Can you give a code example of what you are meaning? (isn't it expected that in `df + ea` ea is not treated as column-like?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448031292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24301#issuecomment-448031292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24301",
    "id": 448031292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODAzMTI5Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-17T22:59:35Z",
    "updated_at": "2018-12-17T22:59:35Z",
    "author_association": "MEMBER",
    "body": "This came up in #24282 trying to make use of the decorator for IntNA arithmetic ops.  The relevant portion of the test that would be affected is:  (see #24326, turning the tests into something copy/paste-able is much harder than it should be)\r\n```\r\nd = (list(range(8)) +\r\n            [np.nan] +\r\n            list(range(10, 98)) +\r\n            [np.nan] +\r\n            [99, 100])\r\n\r\ndata = integer_array(d)\r\nop = '__add__'\r\n\r\ns = pd.Series(data)\r\nopa = getattr(data, op)\r\n\r\ndf = pd.DataFrame({'A': s})\r\n\r\nwith pytest.raises(NotImplementedError):\r\n    opa(df)\r\n```\r\n\r\nInstead of raising NIE, I want to make `data.__add__(df)` return `NotImplemented`, then making `df.__radd__(data)` do something useful.  Given the way 1-dim objects broadcast, `df.__radd__(data)` correctly raises `ValueError`, so a nonzero amount of gymnastics needs to occur if we want to treat `data` as a column.  Options that come to mind:\r\n\r\n1) make the user operate on data + df['S'], then re-wrap in a DataFrame manually.  Not too bad with one column, but annoying if we were working with many columns.\r\n2) make the user do `(data + df.T).T`, would be nice and clean, but transpose doesn't preserve EA dtypes.\r\n4) make the user do `df.add(data, axis=0)`, but that turns out to raise NotImplementedError with a message that looks spurious (haven't dug into this)\r\n4) allow the user to reshape `data = data.reshape(-1, 1)` like they could with a numpy array, at which point `data + df` would work fine.\r\n\r\nI advocate option 4, as it matches numpy behavior that people are used to and would also let us avoid losing EA dtypes when transposing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448274751",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24301#issuecomment-448274751",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24301",
    "id": 448274751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODI3NDc1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-18T16:09:24Z",
    "updated_at": "2018-12-18T16:09:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't see how that example relates to the original post, which was about DataFrame + EA. Is the issue about DataFrame + Series[ea], in which case alignment matters? Or is it about DataFrame + EA, when there isn't any alignment (but maybe broadcasting?)\r\n\r\nTo me that should behave the same as DataFrame + ndarray\r\n\r\n```python\r\nIn [32]: df = pd.DataFrame({\"A\": [1, 2, 3]})\r\n\r\nIn [33]: df + pd.core.arrays.integer_array([1, 2, 3])\r\n# raises ValueError, just like for ndarray\r\n\r\nIn [38]: df + np.array([1])\r\nOut[38]:\r\n   A\r\n0  2\r\n1  3\r\n2  4\r\n\r\nIn [39]: df + pd.core.arrays.integer_array([1])\r\nOut[39]:\r\n   A\r\n0  2\r\n1  3\r\n2  4\r\n```\r\n\r\nI don't think that last one is dispatching to EA implementation though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448439105",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24301#issuecomment-448439105",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24301",
    "id": 448439105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODQzOTEwNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T01:45:22Z",
    "updated_at": "2018-12-19T01:45:22Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger  Itâ€™s about DataFrame + EA.  The example with a length-1 array is a special case.  Try the same thing with an array with length matching len(df).  Both the EA and ndarray cases should raise ValueError.  But in the ndarray case it can be solved by reshaping, while the EA case cannot."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/448645318",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24301#issuecomment-448645318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24301",
    "id": 448645318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0ODY0NTMxOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-19T15:55:44Z",
    "updated_at": "2018-12-19T15:55:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But in the ndarray case it can be solved by reshaping, while the EA case cannot.\r\n\r\nI don't think that's the recommended way of doing it though. We'd direct users towards `DataFrame.add` in that case.\r\n\r\n\r\n```python\r\nIn [17]: df.add(pd.core.arrays.integer_array(arr), axis=0)\r\n---------------------------------------------------------------------------\r\nNotImplementedError                       Traceback (most recent call last)\r\n<ipython-input-17-84452ee6a044> in <module>\r\n----> 1 df.add(pd.core.arrays.integer_array(arr), axis=0)\r\n\r\n~/sandbox/pandas/pandas/core/ops.py in f(self, other, axis, level, fill_value)\r\n   2016             return _combine_series_frame(self, other, pass_op,\r\n   2017                                          fill_value=fill_value, axis=axis,\r\n-> 2018                                          level=level)\r\n   2019         else:\r\n   2020             if fill_value is not None:\r\n\r\n~/sandbox/pandas/pandas/core/ops.py in _combine_series_frame(self, other, func, fill_value, axis, level)\r\n   1903         axis = self._get_axis_number(axis)\r\n   1904         if axis == 0:\r\n-> 1905             return self._combine_match_index(other, func, level=level)\r\n   1906         else:\r\n   1907             return self._combine_match_columns(other, func, level=level)\r\n\r\n~/sandbox/pandas/pandas/core/frame.py in _combine_match_index(self, other, func, level)\r\n   4925             # fastpath --> operate directly on values\r\n   4926             with np.errstate(all=\"ignore\"):\r\n-> 4927                 new_data = func(left.values.T, right.values).T\r\n   4928             return self._constructor(new_data,\r\n   4929                                      index=left.index, columns=self.columns,\r\n\r\n~/sandbox/pandas/pandas/core/arrays/integer.py in integer_arithmetic_method(self, other)\r\n    585             if getattr(other, 'ndim', 0) > 1:\r\n    586                 raise NotImplementedError(\r\n--> 587                     \"can only perform ops with 1-d structures\")\r\n    588\r\n    589             if isinstance(other, IntegerArray):\r\n\r\nNotImplementedError: can only perform ops with 1-d structures\r\n```\r\n\r\nSo I would focus on getting that working I think.\r\n\r\nIn this case, I think the issue is that `integer_arithmetic_method` doesn't implement broadcasting."
  }
]
