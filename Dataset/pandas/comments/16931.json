[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315560091",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16931#issuecomment-315560091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16931",
    "id": 315560091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU2MDA5MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T20:27:12Z",
    "updated_at": "2017-07-15T20:27:12Z",
    "author_association": "MEMBER",
    "body": "I can now reproduce at least some of these errors locally by adding `matplotlib` to the virtualenv. (I had assumed that that `pip install -r ci/requirements_dev.txt' would get everything needed).  But I still have no earthly idea what is causing them.  The WTFError is not getting hit, so someone I'm declaring it someone else's turn.\r\n\r\nIncidentally, `pip install -r ci/requirements_all.txt` fails because `beautiful-soup` is not recognized.  Maybe that should be `bs4`?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315567252",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16931#issuecomment-315567252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16931",
    "id": 315567252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU2NzI1Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T22:21:37Z",
    "updated_at": "2017-07-15T22:21:37Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel : The `requirements_all.txt` is for `conda`, not `pip`.  That's why you are having the issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/316342544",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16931#issuecomment-316342544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16931",
    "id": 316342544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjM0MjU0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T10:27:37Z",
    "updated_at": "2017-07-19T10:27:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "let's close this one in light of your other PR's."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317116959",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16931#issuecomment-317116959",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16931",
    "id": 317116959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzExNjk1OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-21T21:29:37Z",
    "updated_at": "2017-07-21T21:29:37Z",
    "author_association": "MEMBER",
    "body": "The DataFrame part of this has been merged, but the Series version is still FUBAR.  I'll describe some things I've tried in the hopes that someone smarter than me will find this interesting/annoying enough to take a look at.\r\n\r\nEverything here assumes we have delayed the import of `Series` in `pandas.plotting._core` and `pandas.plotting._tools`.  If I move the `import pandas.plotting._core as _gfx` from the bottom of `core.series` up to the top of the file (without moving the place where `Series.plot` and `Series.hist` are defined), 9 tests fail in `tests.plotting.test_series`.  AFAICT these all plotting series with `PeriodIndex`s.\r\n\r\nThe tracebacks go through `matplotlib.__init__.inner`, so I patched that to print its inputs and and raise regardless.  *I see no obvious difference in inputs* between the version that fails and the version that passes.\r\n\r\nIf I move the import of `_gfx` to right after the definition of `Series`, above the call to `Series._setup_axes`, the tests go through fine.  But I can't find anything that executes within the `class Series` block that would plausibly matter for this.\r\n\r\nNext try: define `plot` and `hist` within `Series` definition, but delay import of `_gfx`:\r\n\r\n```\r\n    @property\r\n    def plot(self):\r\n        import pandas.plotting._core as _gfx  # noqa\r\n        return _gfx.SeriesPlotMethods(self)\r\n\r\n    @property\r\n    def hist(self, by=None, ax=None, grid=True, xlabelsize=None,\r\n                xrot=None, ylabelsize=None, yrot=None, figsize=None,\r\n                bins=10, **kwds):\r\n        import pandas.plotting._core as _gfx  # noqa\r\n        return _gfx.hist_series(self, by=by, ax=ax, grid=grid, xlabelsize=xlabelsize,\r\n                xrot=xrot, ylabelsize=ylabelsize, yrot=yrot, figsize=figsize,\r\n                bins=bins, **kwds)\r\n```\r\n\r\nOK!  Now the tests pass (at least the ones from `tests.plotting.test_series`, still need to run the rest), and all we've lost is the docstrings.  Moving the import of `_gfx` up still causes those 9 tests to fail.  Best guess at this point is that something in the `class Series` block is causing `core.groupby` to be imported, which checks `hasattr(Series, name)` before deciding whether to define (with `exec`) a new method.  That story doesn't quite hold together, but it's all I've got."
  }
]
