[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11379924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2535#issuecomment-11379924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2535",
    "id": 11379924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzc5OTI0",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-14T15:27:22Z",
    "updated_at": "2012-12-14T15:27:22Z",
    "author_association": "MEMBER",
    "body": "Thanks for raising this-- the compression parameter isn't getting picked up by the regular expression code path. i'll look into it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11382593",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2535#issuecomment-11382593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2535",
    "id": 11382593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzgyNTkz",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-14T16:38:34Z",
    "updated_at": "2012-12-14T16:38:34Z",
    "author_association": "MEMBER",
    "body": "Got it working. Note you are missing a `\\` in that regular expression to slurp the trailing space:\n\n```\nIn [5]: df = pd.read_csv('/home/wesm/Downloads/bop_its_det.tsv.gz', compression='gzip', sep=',|\\s*\\t', na_values=[':', ' :', ': '], nrows=10)\n\nIn [6]: df\nOut[6]: \n  currency  post    flow partner geo\\time       2011      2010      2009       2008  \\\n0  MIO_EUR   200  CREDIT     ACP       AT    268.000   190.000   195.000    221.000   \n1  MIO_EUR   200  CREDIT     ACP       BE   1719.000  1524.000  1335.000   1226.000   \n2  MIO_EUR   200  CREDIT     ACP       BG     20.800    15.630     5.338      8.436   \n3  MIO_EUR   200  CREDIT     ACP       CY  112.000 p   100.060    40.900     35.440   \n4  MIO_EUR   200  CREDIT     ACP       CZ     40.426    31.435    22.831     25.142   \n5  MIO_EUR   200  CREDIT     ACP       DE   2943.000  2845.000  2489.000   2962.000   \n6  MIO_EUR   200  CREDIT     ACP       DK    947.709   960.348   774.489    992.355   \n7  MIO_EUR   200  CREDIT     ACP     EA12        NaN       NaN       NaN        NaN   \n8  MIO_EUR   200  CREDIT     ACP     EA13        NaN       NaN       NaN        NaN   \n9  MIO_EUR   200  CREDIT     ACP     EA15        NaN       NaN       NaN  18536.904   \n\n        2007       2006       2005       2004  \n0    176.000    143.000    112.000     49.000  \n1    975.000    422.000    348.000    282.000  \n2     11.249      5.624      3.988      3.686  \n3     22.320     20.220     22.450     62.628  \n4     19.235      5.791     12.810      2.844  \n5   2759.000   2754.000   2168.000   1865.000  \n6    955.762    944.752    816.715    915.738  \n7        NaN  13868.604  11944.563  10195.702  \n8  17463.867  13879.280  11955.662  10208.101  \n9  17594.348  14001.239  11989.206  10281.182  \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11384405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2535#issuecomment-11384405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2535",
    "id": 11384405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzg0NDA1",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-14T17:26:05Z",
    "updated_at": "2012-12-14T17:26:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks Wes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11650875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2535#issuecomment-11650875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2535",
    "id": 11650875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjUwODc1",
    "user": {
      "login": "vishnu2kmohan",
      "id": 3111797,
      "node_id": "MDQ6VXNlcjMxMTE3OTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3111797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vishnu2kmohan",
      "html_url": "https://github.com/vishnu2kmohan",
      "followers_url": "https://api.github.com/users/vishnu2kmohan/followers",
      "following_url": "https://api.github.com/users/vishnu2kmohan/following{/other_user}",
      "gists_url": "https://api.github.com/users/vishnu2kmohan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vishnu2kmohan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vishnu2kmohan/subscriptions",
      "organizations_url": "https://api.github.com/users/vishnu2kmohan/orgs",
      "repos_url": "https://api.github.com/users/vishnu2kmohan/repos",
      "events_url": "https://api.github.com/users/vishnu2kmohan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vishnu2kmohan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-23T21:36:08Z",
    "updated_at": "2012-12-23T21:44:50Z",
    "author_association": "NONE",
    "body": "Hi Wes,\n\nThe CParser doesn't appear to handle the compression flag in 0.10.0\n\n```\nvishnu@grsectoo ~/python/pandas $ cat compression.csv\n\"Time\",\"A\",\"B\"\n\"12/24/2012 12:00:00\",\"1.00\",\"2.00\"\nvishnu@grsectoo ~/python/pandas $ zcat compression.csv.gz \n\"Time\",\"A\",\"B\"\n\"12/24/2012 12:00:00\",\"1.00\",\"2.00\",\nvishnu@grsectoo ~/python/pandas $ bzcat compression.csv.bz2 \n\"Time\",\"A\",\"B\"\n\"12/24/2012 12:00:00\",\"1.00\",\"2.00\"\n```\n\nI've shown my results with Python 3.2.3 and IPython 0.13.1 but it also manifests in Python 2.7.3\n\n```\nvishnu@grsectoo ~/python/pandas $ ipython\nPython 3.2.3 (default, Dec 17 2012, 23:03:08) \nType \"copyright\", \"credits\" or \"license\" for more information.\nIPython 0.13.1 -- An enhanced Interactive Python.\n?         -> Introduction and overview of IPython's features.\n%quickref -> Quick reference.\nhelp      -> Python's own help system.\nobject?   -> Details about 'object', use 'object??' for extra details.\nIn [1]: import pandas as pd\nIn [2]: import gzip\nIn [3]: import bz2\n```\n\nThe raw csv file reads just fine:\n\n```\nIn [4]: with open('compression.csv') as fh:                                  \n    pd.read_csv(fh, sep=',', parse_dates=[0], index_col=[0])\n   ...:     \n```\n\nAttempting to read the compressed version, while passing compression='gzip' fails:\n\n```\nIn [5]: with open('compression.csv.gz') as fh:\n    pd.read_csv(fh, sep=',', parse_dates=[0], index_col=[0], compression='gzip')\n   ...:     \n---------------------------------------------------------------------------\nCParserError                              Traceback (most recent call last)\n<ipython-input-5-3e61cc453d63> in <module>()\n      1 with open('compression.csv.gz') as fh:\n----> 2     pd.read_csv(fh, sep=',', parse_dates=[0], index_col=[0], compression='gzip')\n      3 \n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in parser_f(filepath_or_buffer, sep, dialect, compression, doublequote, escapechar, quotechar, quoting, skipinitialspace, lineterminator, header, index_col, names, prefix, skiprows, skipfooter, skip_footer, na_values, true_values, false_values, delimiter, converters, dtype, usecols, engine, delim_whitespace, as_recarray, na_filter, compact_ints, use_unsigned, low_memory, buffer_lines, warn_bad_lines, error_bad_lines, keep_default_na, thousands, comment, decimal, parse_dates, keep_date_col, dayfirst, date_parser, memory_map, nrows, iterator, chunksize, verbose, encoding, squeeze)\n    390                     buffer_lines=buffer_lines)\n    391 \n--> 392         return _read(filepath_or_buffer, kwds)\n    393 \n    394     parser_f.__name__ = name\n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in _read(filepath_or_buffer, kwds)\n    199 \n    200     # Create the parser.\n--> 201     parser = TextFileReader(filepath_or_buffer, **kwds)\n    202 \n    203     if nrows is not None:\n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in __init__(self, f, engine, **kwds)\n    499             self.options['has_index_names'] = kwds['has_index_names']\n    500 \n--> 501         self._make_engine(self.engine)\n    502 \n    503     def _get_options_with_defaults(self, engine):\n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in _make_engine(self, engine)\n    601     def _make_engine(self, engine='c'):\n    602         if engine == 'c':\n--> 603             self._engine = CParserWrapper(self.f, **self.options)\n    604         else:\n    605             if engine == 'python':\n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in __init__(self, src, **kwds)\n    880         # #2442\n    881         kwds['allow_leading_cols'] = self.index_col is not False\n--> 882         self._reader = _parser.TextReader(src, **kwds)\n    883 \n    884         # XXX\n/usr/lib64/python3.2/site-packages/pandas/_parser.cpython-32.so in pandas._parser.TextReader.__cinit__ (pandas/src/parser.c:3915)()\n/usr/lib64/python3.2/site-packages/pandas/_parser.cpython-32.so in pandas._parser.TextReader._get_header (pandas/src/parser.c:4956)()\n/usr/lib64/python3.2/site-packages/pandas/_parser.cpython-32.so in pandas._parser.TextReader._tokenize_rows (pandas/src/parser.c:6531)()\n/usr/lib64/python3.2/site-packages/pandas/_parser.cpython-32.so in pandas._parser.raise_parser_error (pandas/src/parser.c:16903)()\nCParserError: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'.\n```\n\nHowever if I pass a GzipFile handle instead, we are able to read the csv;\n\n```\nIn [6]: with gzip.GzipFile('compression.csv.gz') as fh:                                  \n    pd.read_csv(fh, sep=',', parse_dates=[0], index_col=[0], compression='gzip')\n   ...:     \n```\n\nAlso, opening a bzip2 version while passing in compression='bz2' fails:\n\n```\nIn [7]: with open('compression.csv.bz2') as fh:\n    pd.read_csv(fh, sep=',', parse_dates=[0], index_col=[0], compression='bz2')\n   ...:     \n---------------------------------------------------------------------------\nCParserError                              Traceback (most recent call last)\n<ipython-input-7-2736c68aa21d> in <module>()\n      1 with open('compression.csv.bz2') as fh:\n----> 2     pd.read_csv(fh, sep=',', parse_dates=[0], index_col=[0], compression='bz2')\n      3 \n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in parser_f(filepath_or_buffer, sep, dialect, compression, doublequote, escapechar, quotechar, quoting, skipinitialspace, lineterminator, header, index_col, names, prefix, skiprows, skipfooter, skip_footer, na_values, true_values, false_values, delimiter, converters, dtype, usecols, engine, delim_whitespace, as_recarray, na_filter, compact_ints, use_unsigned, low_memory, buffer_lines, warn_bad_lines, error_bad_lines, keep_default_na, thousands, comment, decimal, parse_dates, keep_date_col, dayfirst, date_parser, memory_map, nrows, iterator, chunksize, verbose, encoding, squeeze)\n    390                     buffer_lines=buffer_lines)\n    391 \n--> 392         return _read(filepath_or_buffer, kwds)\n    393 \n    394     parser_f.__name__ = name\n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in _read(filepath_or_buffer, kwds)\n    199 \n    200     # Create the parser.\n--> 201     parser = TextFileReader(filepath_or_buffer, **kwds)\n    202 \n    203     if nrows is not None:\n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in __init__(self, f, engine, **kwds)\n    499             self.options['has_index_names'] = kwds['has_index_names']\n    500 \n--> 501         self._make_engine(self.engine)\n    502 \n    503     def _get_options_with_defaults(self, engine):\n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in _make_engine(self, engine)\n    601     def _make_engine(self, engine='c'):\n    602         if engine == 'c':\n--> 603             self._engine = CParserWrapper(self.f, **self.options)\n    604         else:\n    605             if engine == 'python':\n/usr/lib64/python3.2/site-packages/pandas/io/parsers.py in __init__(self, src, **kwds)\n    880         # #2442\n    881         kwds['allow_leading_cols'] = self.index_col is not False\n--> 882         self._reader = _parser.TextReader(src, **kwds)\n    883 \n    884         # XXX\n/usr/lib64/python3.2/site-packages/pandas/_parser.cpython-32.so in pandas._parser.TextReader.__cinit__ (pandas/src/parser.c:3915)()\n/usr/lib64/python3.2/site-packages/pandas/_parser.cpython-32.so in pandas._parser.TextReader._get_header (pandas/src/parser.c:4956)()\n/usr/lib64/python3.2/site-packages/pandas/_parser.cpython-32.so in pandas._parser.TextReader._tokenize_rows (pandas/src/parser.c:6531)()\n/usr/lib64/python3.2/site-packages/pandas/_parser.cpython-32.so in pandas._parser.raise_parser_error (pandas/src/parser.c:16903)()\nCParserError: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'.\n```\n\nPassing a BZ2File handle allows the parser to read the csv:\n\n```\nIn [9]: with bz2.BZ2File('compression.csv.bz2') as fh:   \n    pd.read_csv(fh, sep=',', parse_dates=[0], index_col=[0], compression='bz2')\n   ...:   \n```\n\nVersion:\n\n```\nIn [10]: pd.version.version\nOut[10]: '0.10.0'\n```\n\nPlease re-open/re-consider this issue. It manifests in git master as well.\n\nThanks,\nVishnu\n"
  }
]
