[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430057468",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-430057468",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 430057468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDA1NzQ2OA==",
    "user": {
      "login": "dubielt1",
      "id": 11619193,
      "node_id": "MDQ6VXNlcjExNjE5MTkz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11619193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dubielt1",
      "html_url": "https://github.com/dubielt1",
      "followers_url": "https://api.github.com/users/dubielt1/followers",
      "following_url": "https://api.github.com/users/dubielt1/following{/other_user}",
      "gists_url": "https://api.github.com/users/dubielt1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dubielt1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dubielt1/subscriptions",
      "organizations_url": "https://api.github.com/users/dubielt1/orgs",
      "repos_url": "https://api.github.com/users/dubielt1/repos",
      "events_url": "https://api.github.com/users/dubielt1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dubielt1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T00:16:07Z",
    "updated_at": "2018-10-16T00:16:07Z",
    "author_association": "NONE",
    "body": "I'll make an attempt at this"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430951890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-430951890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 430951890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDk1MTg5MA==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T10:05:58Z",
    "updated_at": "2018-10-18T10:05:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "As flake8 is already being used, wouldn't it make sense to use flake8 plugins to check for those things?\r\n\r\n- [flake8-rst](https://github.com/kataev/flake8-rst) For code in docstrings and *.rst files\r\n  Pull request created on [conda-forge](https://github.com/conda-forge/staged-recipes/pull/6853)\r\n- [flake8-docstrings](https://github.com/PyCQA/flake8-docstrings) A plugin to flake8 to include checks provided by pep257\r\n   Already added to [conda-forge](https://anaconda.org/conda-forge/flake8-docstrings)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/432923028",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-432923028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 432923028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMjkyMzAyOA==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T05:49:56Z",
    "updated_at": "2018-10-25T05:49:56Z",
    "author_association": "MEMBER",
    "body": "Using a plugin makes sense, better not reinvent the wheel. But it'd be good if the plugin is called from the validator script, so devs working on docstrings don't need to execute more than a command to validate that the docstring is all right."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433011024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433011024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433011024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzAxMTAyNA==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T11:14:08Z",
    "updated_at": "2018-10-25T11:14:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm currently including it in ./ci/code_checks.sh under lint section.\r\nHowever as it finds many PEP-8 violations in the *.rst files it might take a while until it can be merged.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433012279",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433012279",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433012279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzAxMjI3OQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T11:18:14Z",
    "updated_at": "2018-10-25T11:18:14Z",
    "author_association": "MEMBER",
    "body": "Feel free to open issues for the PEP-8 problems if in your local branch you can already get the list of problems. If there are many I'd have more than one issue, so different people can work on it at the same time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433020214",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433020214",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433020214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzAyMDIxNA==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-25T11:48:30Z",
    "updated_at": "2018-10-25T11:48:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "[commit](https://github.com/FHaase/pandas/commit/8325caf4a56ea5f2158205551d1cf66ce5776262) \r\nis all it takes to include it.\r\n\r\nso it would get run with `./ci/code-checks.sh lint`\r\n\r\nMany mistakes are:\r\n* F821 undefined name 'Substitution'  -> I would ignore them in documentation context\r\n* E999 SyntaxError: unexpected EOF while parsing \r\n      - mostly because of missing bodys of functions. [missing pass] \r\n      - however E999 also warns about false indentations which actually lead to usefull warnings. \r\n        e.g. pandas/doc/source/gotchas.rst:322:8: E999 IndentationError: unexpected indent\r\n        where the code-block should not be `python` but `console`\r\n\r\nAlso it doesn't catch all occurences of python only\r\n* no ::\r\n* no code-blocks without `python` or `pycon`\r\n* currently no `>>> ` outside of code-blocks [Added a PR]\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433370557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433370557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433370557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzM3MDU1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T10:57:44Z",
    "updated_at": "2018-10-26T10:57:44Z",
    "author_association": "MEMBER",
    "body": "@FHaase thanks for looking into it!\r\n\r\n> F821 undefined name 'Substitution' -> I would ignore them in documentation context\r\n\r\nWhere is this one coming from?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433415541",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433415541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433415541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQxNTU0MQ==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T13:53:46Z",
    "updated_at": "2018-10-26T13:54:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\n./doc/source/contributing_docstring.rst:956:9: F821 undefined name 'Substitution'\r\n./doc/source/contributing_docstring.rst:957:9: F821 undefined name 'Appender'\r\n./doc/source/contributing_docstring.rst:965:14: F821 undefined name 'Parent'\r\n./doc/source/contributing_docstring.rst:966:14: F821 undefined name 'ChildA'\r\n./doc/source/contributing_docstring.rst:967:14: F821 undefined name 'ChildB'\r\n```\r\n\r\n\r\n```\r\n.. code-block:: python\r\n\r\n   class Parent:\r\n       def my_function(self):\r\n           \"\"\"Apply my function to %(klass)s.\"\"\"\r\n           ...\r\n\r\n   class ChildA(Parent):\r\n       @Substitution(klass=\"ChildA\")                                \r\n       @Appender(Parent.my_function.__doc__)\r\n       def my_function(self):\r\n           ...\r\n\r\n   class ChildB(Parent):\r\n       @Substitution(klass=\"ChildB\")                   \r\n       @Appender(Parent.my_function.__doc__)\r\n       def my_function(self):\r\n           ...\r\n\r\nThe resulting docstrings are\r\n```\r\n\r\nThe problem is that in a context of a documentation it would make sense to use names that are not defined, however the plugin checks the code-block as if it was a normal python file.\r\n\r\nForcing to include all names in the documentation would in my opinion lead to cluttered documentation and therefore I would ignore F821 completely.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433586152",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433586152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433586152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzU4NjE1Mg==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-27T03:12:00Z",
    "updated_at": "2018-10-27T03:12:00Z",
    "author_association": "MEMBER",
    "body": "I think we should import `Substitution` and `Appender` in that example. Wouldn't that fix the problem?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433600331",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433600331",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433600331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzYwMDMzMQ==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-27T07:58:41Z",
    "updated_at": "2018-10-27T07:58:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Short answer: Yes\r\nLong answer: F821 validations are a quite common issue.\r\n\r\n`flake8-rst doc --filename=*.rst --select=F821 --bootstrap=\"import pandas as pd; import numpy as np\"`\r\n\r\n```\r\ndoc/source/dsintro.rst:162:9: F821 undefined name 's'\r\ndoc/source/dsintro.rst:661:7: F821 undefined name 'df'\r\ndoc/source/dsintro.rst:661:12: F821 undefined name 'df'\r\ndoc/source/dsintro.rst:668:7: F821 undefined name 'df'\r\ndoc/source/dsintro.rst:668:14: F821 undefined name 'df'\r\ndoc/source/basics.rst:318:12: F821 undefined name 'df'\r\ndoc/source/basics.rst:318:19: F821 undefined name 'df2'\r\ndoc/source/basics.rst:729:8: F821 undefined name 'f'\r\ndoc/source/basics.rst:729:10: F821 undefined name 'g'\r\ndoc/source/basics.rst:729:12: F821 undefined name 'h'\r\ndoc/source/basics.rst:729:14: F821 undefined name 'df'\r\ndoc/source/basics.rst:830:4: F821 undefined name 'df'\r\ndoc/source/basics.rst:830:13: F821 undefined name 'subtract_and_divide'\r\ndoc/source/advanced.rst:1038:13: F821 undefined name 'df'\r\ndoc/source/advanced.rst:1042:14: F821 undefined name 'df'\r\ndoc/source/text.rst:444:9: F821 undefined name 's'\r\ndoc/source/comparison_with_stata.rst:173:4: F821 undefined name 'tips'\r\ndoc/source/comparison_with_stata.rst:179:4: F821 undefined name 'tips'\r\ndoc/source/extending.rst:159:28: F821 undefined name 'ExtensionArray'\r\ndoc/source/extending.rst:159:44: F821 undefined name 'ExtensionScalarOpsMixin'\r\ndoc/source/extending.rst:256:27: F821 undefined name 'Series'\r\ndoc/source/extending.rst:266:30: F821 undefined name 'DataFrame'\r\ndoc/source/extending.rst:326:31: F821 undefined name 'DataFrame'\r\ndoc/source/extending.rst:341:13: F821 undefined name 'SubclassedDataFrame2'\r\ndoc/source/indexing.rst:1355:7: F821 undefined name 'df'\r\ndoc/source/indexing.rst:1744:4: F821 undefined name 'data'\r\ndoc/source/indexing.rst:1744:17: F821 undefined name 'index'\r\ndoc/source/indexing.rst:1799:4: F821 undefined name 'dfmi'\r\ndoc/source/indexing.rst:1799:35: F821 undefined name 'value'\r\ndoc/source/indexing.rst:1801:4: F821 undefined name 'dfmi'\r\ndoc/source/indexing.rst:1801:59: F821 undefined name 'value'\r\ndoc/source/indexing.rst:1807:4: F821 undefined name 'dfmi'\r\ndoc/source/indexing.rst:1807:28: F821 undefined name 'value'\r\ndoc/source/indexing.rst:1809:4: F821 undefined name 'dfmi'\r\ndoc/source/indexing.rst:1809:50: F821 undefined name 'value'\r\ndoc/source/indexing.rst:1834:21: F821 undefined name 'value'\r\ndoc/source/io.rst:1094:4: F821 undefined name 'read_csv'\r\ndoc/source/io.rst:1094:13: F821 undefined name 'path'\r\ndoc/source/io.rst:1102:4: F821 undefined name 'read_csv'\r\ndoc/source/io.rst:1102:13: F821 undefined name 'path'\r\ndoc/source/io.rst:1108:4: F821 undefined name 'read_csv'\r\ndoc/source/io.rst:1108:13: F821 undefined name 'path'\r\ndoc/source/io.rst:1114:4: F821 undefined name 'read_csv'\r\ndoc/source/io.rst:1114:13: F821 undefined name 'path'\r\ndoc/source/io.rst:2354:27: F821 undefined name 'url'\r\ndoc/source/io.rst:2363:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2369:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2375:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2382:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2388:24: F821 undefined name 'url'\r\ndoc/source/io.rst:2389:24: F821 undefined name 'url'\r\ndoc/source/io.rst:2396:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2404:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2425:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2431:22: F821 undefined name 'randn'\r\ndoc/source/io.rst:2442:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2448:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2456:23: F821 undefined name 'url'\r\ndoc/source/io.rst:2692:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2740:26: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2741:26: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2744:12: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2766:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2773:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2780:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2787:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2794:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2861:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2868:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2882:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2893:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2905:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2919:4: F821 undefined name 'read_excel'\r\ndoc/source/io.rst:2937:4: F821 undefined name 'df'\r\ndoc/source/io.rst:2950:4: F821 undefined name 'df'\r\ndoc/source/io.rst:2957:9: F821 undefined name 'ExcelWriter'\r\ndoc/source/io.rst:2958:8: F821 undefined name 'df1'\r\ndoc/source/io.rst:2959:8: F821 undefined name 'df2'\r\ndoc/source/io.rst:2989:13: F821 undefined name 'ExcelWriter'\r\ndoc/source/io.rst:2990:4: F821 undefined name 'df'\r\ndoc/source/io.rst:3039:4: F821 undefined name 'df'\r\ndoc/source/io.rst:3042:13: F821 undefined name 'ExcelWriter'\r\ndoc/source/io.rst:3048:4: F821 undefined name 'df'\r\ndoc/source/io.rst:3733:7: F821 undefined name 'store'\r\ndoc/source/io.rst:3740:7: F821 undefined name 'store'\r\ndoc/source/io.rst:3750:7: F821 undefined name 'store'\r\ndoc/source/io.rst:3750:42: F821 undefined name 'string'\r\ndoc/source/io.rst:4203:4: F821 undefined name 'store'\r\ndoc/source/io.rst:4203:23: F821 undefined name 'df'\r\ndoc/source/io.rst:4734:9: F821 undefined name 'engine'\r\ndoc/source/io.rst:4845:30: F821 undefined name 'engine'\r\ndoc/source/io.rst:4846:30: F821 undefined name 'engine'\r\ndoc/source/io.rst:4861:4: F821 undefined name 'df'\r\ndoc/source/io.rst:4861:23: F821 undefined name 'engine'\r\ndoc/source/io.rst:4862:31: F821 undefined name 'engine'\r\ndoc/source/io.rst:4904:44: F821 undefined name 'engine'\r\ndoc/source/io.rst:4905:58: F821 undefined name 'engine'\r\ndoc/source/io.rst:4993:4: F821 undefined name 'data'\r\ndoc/source/io.rst:4993:24: F821 undefined name 'cnx'\r\ndoc/source/io.rst:4994:44: F821 undefined name 'con'\r\ndoc/source/io.rst:5213:9: F821 undefined name 'do_something'\r\ndoc/source/enhancingperf.rst:233:9: F821 undefined name 'apply_integrate_f'\r\ndoc/source/enhancingperf.rst:233:27: F821 undefined name 'df'\r\ndoc/source/enhancingperf.rst:233:36: F821 undefined name 'df'\r\ndoc/source/enhancingperf.rst:233:45: F821 undefined name 'df'\r\ndoc/source/enhancingperf.rst:239:9: F821 undefined name 'apply_integrate_f'\r\ndoc/source/enhancingperf.rst:239:27: F821 undefined name 'df'\r\ndoc/source/enhancingperf.rst:239:43: F821 undefined name 'df'\r\ndoc/source/enhancingperf.rst:239:59: F821 undefined name 'df'\r\ndoc/source/contributing.rst:645:9: F821 undefined name 'warnings'\r\ndoc/source/contributing.rst:646:9: F821 undefined name 'new_func'\r\ndoc/source/contributing.rst:896:9: F821 undefined name 'tm'\r\ndoc/source/contributing.rst:897:8: F821 undefined name 'df'\r\ndoc/source/contributing.rst:912:5: F821 undefined name 'pytest'\r\ndoc/source/contributing.rst:926:9: F821 undefined name 'warch'\r\ndoc/source/contributing.rst:927:8: F821 undefined name 'warnings'\r\ndoc/source/contributing_docstring.rst:28:9: F821 undefined name 'add'\r\ndoc/source/contributing_docstring.rst:29:9: F821 undefined name 'add'\r\ndoc/source/contributing_docstring.rst:30:9: F821 undefined name 'add'\r\ndoc/source/contributing_docstring.rst:461:16: F821 undefined name 'random'\r\ndoc/source/contributing_docstring.rst:481:18: F821 undefined name 'random'\r\ndoc/source/contributing_docstring.rst:482:27: F821 undefined name 'random'\r\ndoc/source/contributing_docstring.rst:482:41: F821 undefined name 'string'\r\ndoc/source/contributing_docstring.rst:503:19: F821 undefined name 'random'\r\ndoc/source/contributing_docstring.rst:957:9: F821 undefined name 'Substitution'\r\ndoc/source/contributing_docstring.rst:958:9: F821 undefined name 'Appender'\r\ndoc/source/contributing_docstring.rst:964:9: F821 undefined name 'Substitution'\r\ndoc/source/contributing_docstring.rst:965:9: F821 undefined name 'Appender'\r\ndoc/source/contributing_docstring.rst:973:14: F821 undefined name 'Parent'\r\ndoc/source/contributing_docstring.rst:974:14: F821 undefined name 'ChildA'\r\ndoc/source/contributing_docstring.rst:975:14: F821 undefined name 'ChildB'\r\ndoc/source/contributing_docstring.rst:994:5: F821 undefined name 'Appender'\r\ndoc/source/contributing_docstring.rst:994:14: F821 undefined name 'template'\r\ndoc/source/contributing_docstring.rst:994:25: F821 undefined name '_shared_doc_kwargs'\r\ndoc/source/groupby.rst:86:19: F821 undefined name 'obj'\r\ndoc/source/groupby.rst:86:31: F821 undefined name 'key'\r\ndoc/source/groupby.rst:87:19: F821 undefined name 'obj'\r\ndoc/source/groupby.rst:87:31: F821 undefined name 'key'\r\ndoc/source/groupby.rst:88:19: F821 undefined name 'obj'\r\ndoc/source/groupby.rst:88:32: F821 undefined name 'key1'\r\ndoc/source/groupby.rst:88:38: F821 undefined name 'key2'\r\ndoc/source/groupby.rst:1277:4: F821 undefined name 'df'\r\ndoc/source/groupby.rst:1277:42: F821 undefined name 'report_func'\r\ndoc/source/comparison_with_sas.rst:171:4: F821 undefined name 'tips'\r\ndoc/source/timeseries.rst:902:16: F821 undefined name 'DateOffset'\r\n```\r\nbootstrapping pandas as pd, numpy as np reduces the output already.\r\n\r\nThe question that rises is: Does a reader of a documentation require all these names to be defined in order to understand the example? \r\n\r\nIn my opinion: No. And the boilerplate code around every example in the doc makes it even more unreadable and confusing. Documented code-blocks are not meant to be understood by a computer, but by a human. Most of the variables explain themeselves by what they are called: `url` is a url, `key` is a key ...\r\n\r\nI think from all the output above `Substitution` and `Appender` are the most debatable examples.\r\nIf I would read the documentation my first guess would be they were imported anyway. \r\n\r\nSo as a conclusion: Forcing the documentation to have all names defined would force a kind of documentation that is less readable without being more clear.\r\nDeciding weather to specify a name or not should be a choice of the writer for the documentation, when the semantic is clear it's all fine. F821 issues come purely from syntax.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433605269",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433605269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433605269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzYwNTI2OQ==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-27T09:24:58Z",
    "updated_at": "2018-10-27T09:24:58Z",
    "author_association": "MEMBER",
    "body": "I disagree. I think all examples should be explicit in defining or importing all objects, so they run, and users can reproduce them excatly in the way they are presented on the documentation.\r\n\r\nIf I'm new to pandas and I see in the documentation something like:\r\n```\r\ns.head()\r\n```\r\nI don't see how this can be useful to me. I'd rather have:\r\n```\r\nimport pandas\r\ns = pandas.Series([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\r\ns.head()\r\n```\r\nWhich provides all the required information to understand, run, and edit and play with what is being shown.\r\n\r\nWe need to ignore `F821` now, because it will take some time until all examples are fixed, and it'll be good to validate the rest of pep8 in the meantime, but I don't think we should accept or encourage having examples with missing context.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433610649",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433610649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433610649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzYxMDY0OQ==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-27T10:55:56Z",
    "updated_at": "2018-10-27T10:55:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay I see what you mean. My point is forcing every use of `.. code-block:: python` anywhere in the project to be a copy and pasteable example might lead to a more or less confusing situation for the reader. Let me quote some examples:\r\n\r\nfrom `pandas/core/accessor.py `\r\n```\r\nNotes\r\n-----\r\nWhen accessed, your accessor will be initialized with the pandas object\r\nthe user is interacting with. So the signature must be\r\n\r\n.. code-block:: python\r\n\r\n    def __init__(self, pandas_object):  # noqa: E999\r\n        ...\r\n        \r\nFor consistency with pandas methods, you should raise an ``AttributeError``\r\nif the data passed to your accessor has an incorrect dtype. \r\n```\r\nIf I read that, it's absolutely clear what is meant, although it's invalid Syntax [E999]. If I imagine a class, imports, and something written within the function itself, it no longer correlates to ` So the signature must be`.\r\n\r\nHaving to use invalid Syntax is less common.\r\n\r\nfrom `doc/source/groupby.rst`\r\n```\r\npandas objects can be split on any of their axes. The abstract definition of\r\ngrouping is to provide a mapping of labels to group names. To create a GroupBy\r\nobject (more on what the GroupBy object is later), you may do the following:\r\n\r\n.. code-block:: python\r\n\r\n    # default is axis=0\r\n    >>> grouped = obj.groupby(key)\r\n    >>> grouped = obj.groupby(key, axis=1)\r\n    >>> grouped = obj.groupby([key1, key2])\r\n```\r\nwhat exactly obj, key, key1, key2 is is not important at this point of the documentation. And I think it _should be the choice of the writer how abstract the code should be_ to be most clear.\r\n\r\nAfter writing a section with mostly comments like this explaining how it works, someone could include a complete working example in a regular .py file included with [.. literalinclude:: ](https://www.sphinx-doc.org/en/1.8/usage/restructuredtext/directives.html?highlight=literalinclude#directive-literalinclude)\r\n\r\nThat way it's possible to run tests on the code so it can get updated when the api changes. And its flake8 and not flake8-rst that checks the code_style.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433615551",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433615551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433615551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzYxNTU1MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-27T12:18:18Z",
    "updated_at": "2018-10-27T12:18:18Z",
    "author_association": "MEMBER",
    "body": "Note that a bunch of the warnings you listed above in https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433600331 are due to not properly importing the used packages / not properly using the imported name (eg all the `read_excel` warnings should be solved by using `pd.read_excel`). \r\nSee https://github.com/pandas-dev/pandas/issues/9886 for this (already a lot has been cleaned up, but io.rst is clearly still to be done)\r\n\r\nBut, that said, I agree with @FHaase that not all code blocks should be exactly running code. Often, it can be more educational to show a certain snippet.\r\n\r\nBut other things:\r\n\r\n- The flake-rst plugin does not check code blocks in `.. ipython:: python` directives, is that correct? This is the majority of the code blocks\r\n- It seems to me (from the output you show above), that `code-block::` directives are also not checked if they have like IPython input/output prompts in them (like `In [8]: `)\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433623655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-433623655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 433623655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzYyMzY1NQ==",
    "user": {
      "login": "FHaase",
      "id": 41163037,
      "node_id": "MDQ6VXNlcjQxMTYzMDM3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/41163037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FHaase",
      "html_url": "https://github.com/FHaase",
      "followers_url": "https://api.github.com/users/FHaase/followers",
      "following_url": "https://api.github.com/users/FHaase/following{/other_user}",
      "gists_url": "https://api.github.com/users/FHaase/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FHaase/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FHaase/subscriptions",
      "organizations_url": "https://api.github.com/users/FHaase/orgs",
      "repos_url": "https://api.github.com/users/FHaase/repos",
      "events_url": "https://api.github.com/users/FHaase/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FHaase/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-27T14:09:54Z",
    "updated_at": "2018-10-27T14:09:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, currently not everything gets checked. The regex to find the parts is\r\n`\\.\\. (code-block|sourcecode):: (python|pycon)\\n`\r\nI opened a [PR](https://github.com/kataev/flake8-rst/pull/2) to also include ipython within the checks as well as `>>> ...` outside of code-block directives. \r\nSo I hope shortly `.. ipython:: python` directives will be covered.\r\n\r\n* In order to support `In [8]: ` the regex needs to be modified.\r\n* `.. code-block:: ` or the very short `::` without a language specification might contain ruby, java etc. code so linting would be problematic. -> solution could be to disallow these directives.\r\n\r\nI've marked the PR to close this issue, because once flake8-rst finds some python-code it gets checked by flake8 just like any other .py file.\r\nFurther improvements could be done by extending the amount of code that flake8-rst finds, but that is in the scope of that plugin, not this project.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437376337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23154#issuecomment-437376337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23154",
    "id": 437376337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzM3NjMzNw==",
    "user": {
      "login": "datapythonista",
      "id": 10058240,
      "node_id": "MDQ6VXNlcjEwMDU4MjQw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10058240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/datapythonista",
      "html_url": "https://github.com/datapythonista",
      "followers_url": "https://api.github.com/users/datapythonista/followers",
      "following_url": "https://api.github.com/users/datapythonista/following{/other_user}",
      "gists_url": "https://api.github.com/users/datapythonista/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/datapythonista/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/datapythonista/subscriptions",
      "organizations_url": "https://api.github.com/users/datapythonista/orgs",
      "repos_url": "https://api.github.com/users/datapythonista/repos",
      "events_url": "https://api.github.com/users/datapythonista/events{/privacy}",
      "received_events_url": "https://api.github.com/users/datapythonista/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T14:31:36Z",
    "updated_at": "2018-11-09T14:31:36Z",
    "author_association": "MEMBER",
    "body": "Fixed in #23399"
  }
]
