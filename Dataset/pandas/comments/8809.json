[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63060530",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63060530",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63060530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDYwNTMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T12:59:04Z",
    "updated_at": "2014-11-14T12:59:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't like this soln at all. It IS very overlapping with swaplevels and confusing. I think making this local to the swapping you are doing in reshape is more appropriate. Though to be honest I think using mixed labels/levels when they are not all labels or all position should just raise anyhow. This is just asking for trouble.\n\nI think you can upfront validate whether the passed levels are all labels or all positional. If not raise.\n\nI think using named integer levels that are not equivalent to the actual level numbers should be raise on MultiIndex construction. Simply avoid this problem. We DON't need a repeat of the `.ix` behavior here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63141350",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63141350",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63141350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTQxMzUw",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T22:45:39Z",
    "updated_at": "2014-11-14T22:45:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Though to be honest I think using mixed labels/levels when they are not all labels or all position should just raise anyhow.\n> \n> I think you can upfront validate whether the passed levels are all labels or all positional. If not raise.\n\nThis already happens and is unchanged. We only accept mixed int/str if the ints are labels, otherwise raise. It's just tricky because as you say you can have an label that is within the range of the level numbers but doesn't correspond to its level number.\n\n> I think using named integer levels that are not equivalent to the actual level numbers should be raise on MultiIndex construction.\n\nThis would probably be more sensible long term. Don't know what kind of knock on effects it would have though. If you have an index with levels `[0, 1]` does that means you can't pull the 0 level out of the index, or you can but the 1 level automatically changes label?\n\nI'll try to think of a more elegant solution. In the meantime it might be good to get more feedback from @jorisvandenbossche about the motivation behind the bug report. How many people do we think are actually labelling levels with non-matching ints, and why?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63168363",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63168363",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63168363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTY4MzYz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-15T10:53:32Z",
    "updated_at": "2014-11-15T10:53:32Z",
    "author_association": "MEMBER",
    "body": "> > Though to be honest I think using mixed labels/levels when they are not all labels or all position should just raise anyhow.\n> > \n> > I think you can upfront validate whether the passed levels are all labels or all positional. If not raise.\n> \n> This already happens and is unchanged. We only accept mixed int/str if the ints are labels, otherwise raise.\n\nThis indeed already happens, eg with all string level names, you get:\n\n```\nIn [154]: df.stack(level=['animal', 2])\n...\nValueError: level should contain all level names or all level numbers, not a mixture of the two.\n```\n\n> get more feedback from @jorisvandenbossche about the motivation behind the bug report. How many people do we think are actually labelling levels with non-matching ints, and why?\n\nTo be honest, there was absolutely _no_ motivation behind the bug report :-), apart from curiosity what would happen if I tried mixed string-integer level names after seeing the new feature in the whatsnew entries. So I personally wouldn't use it. But I think that if our spec allows it, it should work correctly (or we should raise a warning that `stack` will not work correctly when we detect a case where an integer level name does not match its position).\n\n> I think using named integer levels that are not equivalent to the actual level numbers should be raise on MultiIndex construction.\n- I think this is a bit difficult, as during operations the level names can change/level order can change. Eg when having level names [0, 1] and then doing a `swaplevel` -> raise?, or when doing a `stack` removing one of the levels also changes the position -> raise?\n- Another option, is to just disallow integer level names, and restrict the level names to strings. This would solve any ambiguity in these cases. \n  The problem with this is that level names often originate from column names (so index values), and of course we allow almost any object to be an index value. So this would lead to difficulties/inconsistencies in that regard.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63168555",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63168555",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63168555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTY4NTU1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-15T11:00:53Z",
    "updated_at": "2014-11-15T11:01:03Z",
    "author_association": "MEMBER",
    "body": "By the way, at the moment, the case with _only integer column levels at the 'right' position_ (@jreback the case that would be allowed in your suggestion) also does not work:\n\n```\nIn [168]: columns = MultiIndex.from_tuples([('A', 'cat', 'long'), ('B', 'cat', 'long'), ('A', 'dog', 'short'), ('B', 'dog', 'short')],\n   .....:                                  names=['exp', 'animal', 'hair_length'])\n\nIn [169]: df = DataFrame(randn(4, 4), columns=columns)\n\nIn [170]: df.columns.names = [0, 1, 2]\n\nIn [171]: df\nOut[171]:\n0         A         B         A         B\n1       cat       cat       dog       dog\n2      long      long     short     short\n0 -0.978207  0.442300  1.952685 -0.909283\n1 -0.121663  0.441968 -0.232617 -0.139095\n2  0.346387 -1.027363  0.851873  1.242616\n3  0.872214  0.138330 -2.902060 -0.220452\n```\n\nWith `[0, 1]`, level 0 is repeated, level 1 disappeared:\n\n```\nIn [172]: df.stack(level=[0,1])\nOut[172]:\n2          long     short\n  0 0\n0 A A -0.978207       NaN\n    B  0.442300       NaN\n  B A       NaN  1.952685\n    B       NaN -0.909283\n1 A A -0.121663       NaN\n    B  0.441968       NaN\n  B A       NaN -0.232617\n    B       NaN -0.139095\n2 A A  0.346387       NaN\n    B -1.027363       NaN\n  B A       NaN  0.851873\n    B       NaN  1.242616\n3 A A  0.872214       NaN\n    B  0.138330       NaN\n  B A       NaN -2.902060\n    B       NaN -0.220452\n```\n\nWith `[0, 2]` also level 1 disappeared:\n\n```\nIn [173]: df.stack(level=[0,2])\nOut[173]:\n2              long     short\n  0 2\n0 A long  -0.978207       NaN\n    short  0.442300       NaN\n  B long        NaN  1.952685\n    short       NaN -0.909283\n1 A long  -0.121663       NaN\n    short  0.441968       NaN\n  B long        NaN -0.232617\n    short       NaN -0.139095\n2 A long   0.346387       NaN\n    short -1.027363       NaN\n  B long        NaN  0.851873\n    short       NaN  1.242616\n3 A long   0.872214       NaN\n    short  0.138330       NaN\n  B long        NaN -2.902060\n    short       NaN -0.220452\n```\n\nOnly `[1, 2]` is working correctly:\n\n```\nIn [174]: df.stack(level=[1,2])\nOut[174]:\n0                   A         B\n  1   2\n0 cat long  -0.978207  0.442300\n  dog short  1.952685 -0.909283\n1 cat long  -0.121663  0.441968\n  dog short -0.232617 -0.139095\n2 cat long   0.346387 -1.027363\n  dog short  0.851873  1.242616\n3 cat long   0.872214  0.138330\n  dog short -2.902060 -0.220452\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63202595",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63202595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63202595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjAyNTk1",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-16T03:25:08Z",
    "updated_at": "2014-11-16T03:25:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, I've gone back over this and tried to do it in a more sensible way. No more slightly modified swaplevel method, instead we try to only pass level names to swaplevel (this isn't possible in 100% of cases because levels can have no name/`None` as their label). Should work for both mixed int/str labels and when all level names are ints. Test cases for both alternatives are included.\n\nExample output:\n\n``` python\nimport pandas as pd\nfrom pandas import DataFrame, MultiIndex\nfrom numpy.random import randn\n\ncolumns = MultiIndex.from_tuples([('A', 'cat', 'long'), ('B', 'cat', 'long'), ('A', 'dog', 'short'), ('B', 'dog', 'short')],\n                                 names=['exp', 'animal', 'hair_length'])\ndf = DataFrame(randn(4, 4), columns=columns)\n\ndf.columns.names = ['exp', 'animal', 1]\nprint(df.stack(level=['animal', 1]))\nexp                    A         B\n  animal 1                        \n0 cat    long   0.642593 -0.178835\n  dog    short  0.532905 -0.255136\n1 cat    long   1.107472  0.374333\n  dog    short  0.513399  0.176185\n2 cat    long   0.410521 -0.085423\n  dog    short -0.305200  1.009517\n3 cat    long  -1.772436 -0.819156\n  dog    short -0.923430  0.143579\n\ndf.columns.names = ['exp', 'animal', 0]\nprint(df.stack(level=['animal', 0]))\nexp                    A         B\n  animal 0                        \n0 cat    long   0.642593 -0.178835\n  dog    short  0.532905 -0.255136\n1 cat    long   1.107472  0.374333\n  dog    short  0.513399  0.176185\n2 cat    long   0.410521 -0.085423\n  dog    short -0.305200  1.009517\n3 cat    long  -1.772436 -0.819156\n  dog    short -0.923430  0.143579\n\ndf.columns.names = [0, 1, 2]\ndf.stack(level=[0,1])\nOut[5]: \n2            long     short\n  0 1                      \n0 A cat  0.642593       NaN\n    dog       NaN  0.532905\n  B cat -0.178835       NaN\n    dog       NaN -0.255136\n1 A cat  1.107472       NaN\n    dog       NaN  0.513399\n  B cat  0.374333       NaN\n    dog       NaN  0.176185\n2 A cat  0.410521       NaN\n    dog       NaN -0.305200\n  B cat -0.085423       NaN\n    dog       NaN  1.009517\n3 A cat -1.772436       NaN\n    dog       NaN -0.923430\n  B cat -0.819156       NaN\n    dog       NaN  0.143579\n\ndf.stack(level=[0,2])\nOut[6]: \n1               cat       dog\n  0 2                        \n0 A long   0.642593       NaN\n    short       NaN  0.532905\n  B long  -0.178835       NaN\n    short       NaN -0.255136\n1 A long   1.107472       NaN\n    short       NaN  0.513399\n  B long   0.374333       NaN\n    short       NaN  0.176185\n2 A long   0.410521       NaN\n    short       NaN -0.305200\n  B long  -0.085423       NaN\n    short       NaN  1.009517\n3 A long  -1.772436       NaN\n    short       NaN -0.923430\n  B long  -0.819156       NaN\n    short       NaN  0.143579\n\ndf.stack(level=[1,2])\nOut[7]: \n0                   A         B\n  1   2                        \n0 cat long   0.642593 -0.178835\n  dog short  0.532905 -0.255136\n1 cat long   1.107472  0.374333\n  dog short  0.513399  0.176185\n2 cat long   0.410521 -0.085423\n  dog short -0.305200  1.009517\n3 cat long  -1.772436 -0.819156\n  dog short -0.923430  0.143579\n\n# Out of order int level names\ndf.columns.names = [2, 0, 1]\n\ndf.stack(level=[0, 2])\nOut[10]: \n1            long     short\n  0   2                    \n0 cat A  0.642593       NaN\n      B -0.178835       NaN\n  dog A       NaN  0.532905\n      B       NaN -0.255136\n1 cat A  1.107472       NaN\n      B  0.374333       NaN\n  dog A       NaN  0.513399\n      B       NaN  0.176185\n2 cat A  0.410521       NaN\n      B -0.085423       NaN\n  dog A       NaN -0.305200\n      B       NaN  1.009517\n3 cat A -1.772436       NaN\n      B -0.819156       NaN\n  dog A       NaN -0.923430\n      B       NaN  0.143579\n\ndf.stack(level=[1,2])\nOut[11]: \n0               cat       dog\n  1     2                    \n0 long  A  0.642593       NaN\n        B -0.178835       NaN\n  short A       NaN  0.532905\n        B       NaN -0.255136\n1 long  A  1.107472       NaN\n        B  0.374333       NaN\n  short A       NaN  0.513399\n        B       NaN  0.176185\n2 long  A  0.410521       NaN\n        B -0.085423       NaN\n  short A       NaN -0.305200\n        B       NaN  1.009517\n3 long  A -1.772436       NaN\n        B -0.819156       NaN\n  short A       NaN -0.923430\n        B       NaN  0.143579\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63257045",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63257045",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63257045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjU3MDQ1",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T03:55:17Z",
    "updated_at": "2014-11-17T03:55:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, using `_convert_level_number()` now to find the right level to sort. The build errored out and as far as I can tell I don't have permissions to force a rebuild. Not sure how to do it without making changes. If this looks OK I can squash and re-upload which should run the Travis build again.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63290038",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63290038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63290038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjkwMDM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T11:11:52Z",
    "updated_at": "2014-11-17T11:11:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "looks good!\n\nok, give a nice squash into a single commit and i think good to go.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63299017",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63299017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63299017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjk5MDE3",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T12:40:50Z",
    "updated_at": "2014-11-17T12:40:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Squashed and green, should be good to go.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63299369",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63299369",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63299369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjk5MzY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T12:44:14Z",
    "updated_at": "2014-11-17T12:44:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche loooks good to me, merge when ready\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63320615",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8809#issuecomment-63320615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8809",
    "id": 63320615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMzIwNjE1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-17T15:25:57Z",
    "updated_at": "2014-11-17T15:25:57Z",
    "author_association": "MEMBER",
    "body": "@onesandzeroes Thanks a lot!\n\n@jreback about the integer level names issue we discussed above, I think is a more general problem than this PR, as eg if you do `swaplevel` on a multi-index with integer level names, it _already_ first looks at the names and not the position (so we have already some `.ix`-like behaviour ..)\n"
  }
]
