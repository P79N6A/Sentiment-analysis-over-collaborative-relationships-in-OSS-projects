[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/7001709",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1623#issuecomment-7001709",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1623",
    "id": 7001709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMDE3MDk=",
    "user": {
      "login": "gerigk",
      "id": 1327168,
      "node_id": "MDQ6VXNlcjEzMjcxNjg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1327168?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gerigk",
      "html_url": "https://github.com/gerigk",
      "followers_url": "https://api.github.com/users/gerigk/followers",
      "following_url": "https://api.github.com/users/gerigk/following{/other_user}",
      "gists_url": "https://api.github.com/users/gerigk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gerigk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gerigk/subscriptions",
      "organizations_url": "https://api.github.com/users/gerigk/orgs",
      "repos_url": "https://api.github.com/users/gerigk/repos",
      "events_url": "https://api.github.com/users/gerigk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gerigk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-07-16T09:21:32Z",
    "updated_at": "2012-07-16T09:21:32Z",
    "author_association": "NONE",
    "body": "I don't know whether this is a separate issue but a similar request would be to be able to use a non-unique 1d index for groupby.\nIf I have a MultiIndex I can do df.groupby(level = 'A'), but if the index is only 'A' I have to drop the index and then group by the column. \nMy concrete use case in this context is df.groupby(level='A').first()  where 'A' is the index. It fails whenever I happen to have a 1d index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/176760692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1623#issuecomment-176760692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1623",
    "id": 176760692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Njc2MDY5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-29T13:43:51Z",
    "updated_at": "2016-01-29T13:43:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "should be easy after #11841 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195930769",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1623#issuecomment-195930769",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1623",
    "id": 195930769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTkzMDc2OQ==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-13T10:29:20Z",
    "updated_at": "2016-03-13T10:29:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may be a silly question, but I'm gonna ask it: what should be the result of this `DataFrame.aggregate`?\n\nFor instance, let's consider `df.aggregate(np.sum)`.\nShould the result be like `df.sum()`?\nOr like `df.groupby(df.index).sum()`?\nOr something else?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/196055424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1623#issuecomment-196055424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1623",
    "id": 196055424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjA1NTQyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-13T21:16:43Z",
    "updated_at": "2016-03-13T21:17:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "this would _work_ like `.groupby(...).agg(np.sum)` in the sense that the aggregations will take the same form. But this is an aggregation on the frame itself.\n\ne.g. imagine\n\n`df.agg(['sum', 'count'])`\n`df.agg({'A' : 'sum', 'B' : 'count'})`\n`df.agg({'A' : ['sum','count'], 'B' : ['sum','mean']})`\n\nand equivalent for:\n\n`df.A.agg(['sum','count'])`\n\nand so on\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/196203916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1623#issuecomment-196203916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1623",
    "id": 196203916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjIwMzkxNg==",
    "user": {
      "login": "nbonnotte",
      "id": 9929982,
      "node_id": "MDQ6VXNlcjk5Mjk5ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9929982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nbonnotte",
      "html_url": "https://github.com/nbonnotte",
      "followers_url": "https://api.github.com/users/nbonnotte/followers",
      "following_url": "https://api.github.com/users/nbonnotte/following{/other_user}",
      "gists_url": "https://api.github.com/users/nbonnotte/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nbonnotte/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nbonnotte/subscriptions",
      "organizations_url": "https://api.github.com/users/nbonnotte/orgs",
      "repos_url": "https://api.github.com/users/nbonnotte/repos",
      "events_url": "https://api.github.com/users/nbonnotte/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nbonnotte/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T08:37:23Z",
    "updated_at": "2016-03-14T08:37:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "So there would be no grouping at all?\n\nIn a sense, it would be a generalisation of `DataFrame.apply`, except that it would work also with strings and be able to yield more complex output?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/196298056",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1623#issuecomment-196298056",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1623",
    "id": 196298056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjI5ODA1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T12:53:18Z",
    "updated_at": "2016-11-03T23:34:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes `.apply` and `.aggregate` are synonymous for `.groupby`,`.rolling`, `.resample` already, so having the same for `NDFrame` is a good idea (btw this is quite easy to implement as all of the machinery is already there).\n"
  }
]
