[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398641595",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-398641595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 398641595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODY0MTU5NQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-06-20T06:43:17Z",
    "updated_at": "2018-06-21T00:10:07Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21547?src=pr&el=h1) Report\n> Merging [#21547](https://codecov.io/gh/pandas-dev/pandas/pull/21547?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/5fbb683712ce0312e35e06152cf8410c33cee330?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `98.05%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21547/graphs/tree.svg?height=150&src=pr&token=eZ4WkYLtcO&width=650)](https://codecov.io/gh/pandas-dev/pandas/pull/21547?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #21547      +/-   ##\n==========================================\n+ Coverage   91.91%   91.94%   +0.02%     \n==========================================\n  Files         153      154       +1     \n  Lines       49546    49716     +170     \n==========================================\n+ Hits        45542    45709     +167     \n- Misses       4004     4007       +3\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.34% <98.05%> (+0.02%)` | :arrow_up: |\n| #single | `41.78% <33.76%> (-0.03%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21547?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/21547/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `94.2% <100%> (+0.02%)` | :arrow_up: |\n| [pandas/core/sets.py](https://codecov.io/gh/pandas-dev/pandas/pull/21547/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2V0cy5weQ==) | `98.01% <98.01%> (ø)` | |\n| [pandas/core/arrays/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/21547/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2NhdGVnb3JpY2FsLnB5) | `95.63% <0%> (-0.06%)` | :arrow_down: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/21547/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.12% <0%> (-0.01%)` | :arrow_down: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/21547/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.62% <0%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/category.py](https://codecov.io/gh/pandas-dev/pandas/pull/21547/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9jYXRlZ29yeS5weQ==) | `97.28% <0%> (+0.18%)` | :arrow_up: |\n| [pandas/core/dtypes/cast.py](https://codecov.io/gh/pandas-dev/pandas/pull/21547/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2Nhc3QucHk=) | `88.49% <0%> (+0.26%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21547?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21547?src=pr&el=footer). Last update [5fbb683...8c98d30](https://codecov.io/gh/pandas-dev/pandas/pull/21547?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398642617",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-398642617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 398642617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODY0MjYxNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T06:47:58Z",
    "updated_at": "2018-06-20T06:47:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback IMO there's something that needs to come before tests, and that's having a good idea about the API (which I can't decide by myself; hence the discussion here). Otherwise, a lot of time is sunk in writing obsolete tests.\r\n\r\nCould you please comment on your thoughts for the API choices so far? The rendered docstring should give a good starting point."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398839962",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-398839962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 398839962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODgzOTk2Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T17:53:22Z",
    "updated_at": "2018-06-20T18:03:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I added over 200 tests (including parametrization almost everywhere) that cover everything I could think of. It's hopefully modular enough that renaming/changing the API won't be too much of a hassle.\r\n\r\nI also added the same `'errors'/'fill_value'` parameters to `set.len`, which I could therefore refactor (and cut out a lot of code I had pasted from `pandas/core/strings.py`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399046266",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399046266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399046266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA0NjI2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T09:57:33Z",
    "updated_at": "2018-06-21T09:57:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "at a glance it looks ok, but you have way too much complexity here. all of the ``errors`` options and the ``fill_value``. some simpler ``errors`` are ok, but still to the ``coerce, ignore, raise`` options. \r\n\r\nFurthermore this is fundamentally flawed in that you can use this with *anything*, in reality this should be be restricted to an ``inferred_dtype=='set'``, so that's the first thing to change."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399048398",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399048398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399048398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA0ODM5OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:05:12Z",
    "updated_at": "2018-06-21T10:05:12Z",
    "author_association": "MEMBER",
    "body": "To be the devil's advocate here: given the new accessor registry api: isn't this a perfect case for having this in an external package?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399052519",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399052519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399052519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1MjUxOQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:21:06Z",
    "updated_at": "2018-06-21T10:25:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I don't care much if it's only `'raise'|'ignore'|'coerce'`, just added `'wrap'` for convenience and `'skip'` for performance. The `'errors'/'fill_value'` pair is used in many places, and propsed for `.str`-methods in #13877, so it made sense for me to emulate that. `fill_value` has negligible complexity attached, BTW.\r\n\r\nTo me, the whole point of giving an `'errors'`-parameter is to *be able* to use it with anything, and whether it's lists or strings or whatnot, this should be made available IMO. Especially since it's such a bitch to prepare real-world data to a point where it's just sets (not least because `fillna` doesn't take lists or sets).\r\n\r\nAside from the templatization to avoid repetition, I went out of my way to keep complexity at a minimum. Could you tell me what you find complex? There's one clean-up method for Series, one clean-up for `others`, one method for executing the numpy method (and one putting the pieces together), all nicely segregated..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399052550",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399052550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399052550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1MjU1MA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:21:15Z",
    "updated_at": "2018-06-21T10:21:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I maybe don't fully understand the implications/requirements of accessor registry, but since this is really just a wrapper to make the *existing* numpy methods nan-safe and index-aware, I think this should be part of the core, and not an external package?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399053830",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399053830",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399053830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1MzgzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:26:39Z",
    "updated_at": "2018-06-21T10:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari \r\npls read my last point, which is the main point. sets are not a first class type, that is the first problem to address."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399054276",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399054276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399054276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1NDI3Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:28:26Z",
    "updated_at": "2018-06-21T10:28:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari in reality this is much better done as a real ExtensionArray type. The point of the accessors is to extend with dtype specific functionaility. But first you have to have actual set operations supported.\r\n\r\nFurthermore these are quite non-performant.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399054608",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399054608",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399054608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1NDYwOA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:29:39Z",
    "updated_at": "2018-06-21T10:29:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback To which I responded as follows\r\n> To me, the whole point of giving an 'errors'-parameter is to be able to use it with anything, [...]\r\n\r\nI agree this is an important discussion - but there's normally lots of preprocessing necessary to get this to work with dirty real-world data, and every restriction makes it harder to actually transform real data. Something about consenting adults and all that. ;-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399055627",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399055627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399055627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1NTYyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:33:58Z",
    "updated_at": "2018-06-21T10:33:58Z",
    "author_association": "CONTRIBUTOR",
    "body": " > agree this is an important discussion - but there's normally lots of preprocessing necessary to get this to work with dirty real-world data, and every restriction makes it harder to actually transform real data. Something about consenting adults and all that. ;-)\r\n\r\nsure but that's what pandas does. set intelligent defaults.\r\n\r\nThe issue I have is that this is the very first thing that works on containers *inside* a pandas object. Everything else is a scalar. Sure its 'ok' now, you 'can' use whatever you want but there is no first class support. So need to think about best way / if to provide this support."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399055877",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399055877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399055877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1NTg3Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:34:50Z",
    "updated_at": "2018-06-21T10:44:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \r\nRe: \r\n> @h-vetinari in reality this is much better done as a real ExtensionArray type. The point of the accessors is to extend with dtype specific functionaility. But first you have to have actual set operations supported.\r\n\r\nBut then there are no methods to *transform* the data to a point where the accessor can be used. At least `.str` has `.astype(str)`. Of course, then the `'errors'/'fill_value'` kwargs could be positioned in a potential `.astype(set, errors, fill_value)` call, which does have a certain appeal, I admit.\r\n\r\n> Furthermore these are quite non-performant.\r\n\r\nThis is not a pressing issue IMO; the numpy methods are orders of magnitude faster than writing for-loops already."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399057994",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399057994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399057994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTA1Nzk5NA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-21T10:43:20Z",
    "updated_at": "2018-06-21T10:47:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \r\n> The issue I have is that this is the very first thing that works on containers inside a pandas object. Everything else is a scalar. Sure its 'ok' now, you 'can' use whatever you want but there is no first class support. So need to think about best way / if to provide this support.\r\n\r\nLots of things work on containers already, like `.str.len()`, `.str[slice]`, for lists etc (yes, this is deliberately misusing the `.str`-accessor, but it works).  Also, `.str.extract` and `str.split` with `expand=False` yield lists in Series, for example.\r\n\r\nAnd people *are* using pandas in this way a lot - for clean data, one can just call `map(set)`, `map(list)`, 'map(len)` etc. and continue, but often the clean-up is the biggest headache. Granted, sometimes it's just an intermediate processing step on the way to a DF or a MultiIndex, but sometimes its genuinely a set/list that needs per-row processing. There's several SO questions on this, for example."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399330042",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399330042",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399330042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMzMDA0Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T06:04:44Z",
    "updated_at": "2018-06-22T06:04:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback How do you propose to continue with this? As I said above, I like the idea of:\r\n* a set dtype\r\n* having all the conversion logic in `.astype(set, errors, fill_value)`\r\n* having the `.set` accessor only for that dtype, and then the methods don't need the kwargs themselves\r\n\r\nBut the problem is, I have no idea what creating a new dtype would imply. It would be easy enough to write the code for `.astype(set, errors, fill_value)`, but I'm guessing that's not nearly enough."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399334747",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399334747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399334747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMzNDc0Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T06:26:29Z",
    "updated_at": "2018-06-22T06:27:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback looking at #21160 and related PRs for example, that looks to be a much too tall of an order for me...\r\n\r\nSimilarly for #8640 and the work you refer to in your last comment:\r\n> nice library by xhochy https://github.com/xhochy/fletcher"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399390420",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399390420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399390420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTM5MDQyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T09:57:37Z",
    "updated_at": "2018-06-22T09:57:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas-docs.github.io/pandas-docs-travis/extending.html#extension-types\r\n\r\nthis should be an extension array. the actual impl is pretty easy, it could just e a list of sets. The problem is adding an accessor to disambiguate an object dtype is a bit odd. I am not totally against it, but having a defined dtype is much much cleaner."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399396277",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399396277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399396277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTM5NjI3Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T10:20:07Z",
    "updated_at": "2018-06-22T10:20:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Not sure I follow completely - I'm afraid I'm getting a bit confused between implementing an EA (your link; apparently not so hard) and implementing a new dtype `set` (very hard?).\r\n\r\nFurther up you said:\r\n> [...] this should be be restricted to an inferred_dtype=='set', so that's the first thing to change.\r\n\r\nwhich sounds like implementing a new dtype, and now:\r\n> [...] adding an accessor to disambiguate an object dtype is a bit odd.\r\n\r\nwhich sounds (more) like the version I already implemented (or the same thing translated to EA)? Again, it's not clear to me what the requirements/recommendations are at this point.\r\n\r\nAs a side note, I think that sets are such a fundamental building block in python (as opposed to IP addresses in cyperpandas or gps coordinates in geopandas), that the methods for them shouldn't be externalised to some package - this is what the EA documentation says, if I understand correctly."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399400329",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-399400329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 399400329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTQwMDMyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T10:37:00Z",
    "updated_at": "2018-06-22T10:37:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari whether this is external or not is slightly orthogonal to this discussion, the point of EA is that it *can* be external (or maybe start that way).\r\n\r\nEA is an extension array & a dtype, both of which are first class. That's how I'd like to see sets (and lists and dicts)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424412745",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-424412745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 424412745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQxMjc0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-25T16:29:51Z",
    "updated_at": "2018-09-25T16:29:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as out of scope. This should be an EA type (could potentially be internal), but needs to be restructured to that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/449993683",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21547#issuecomment-449993683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21547",
    "id": 449993683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTk5MzY4Mw==",
    "user": {
      "login": "Florents-Tselai",
      "id": 2118708,
      "node_id": "MDQ6VXNlcjIxMTg3MDg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2118708?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Florents-Tselai",
      "html_url": "https://github.com/Florents-Tselai",
      "followers_url": "https://api.github.com/users/Florents-Tselai/followers",
      "following_url": "https://api.github.com/users/Florents-Tselai/following{/other_user}",
      "gists_url": "https://api.github.com/users/Florents-Tselai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Florents-Tselai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Florents-Tselai/subscriptions",
      "organizations_url": "https://api.github.com/users/Florents-Tselai/orgs",
      "repos_url": "https://api.github.com/users/Florents-Tselai/repos",
      "events_url": "https://api.github.com/users/Florents-Tselai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Florents-Tselai/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-26T16:58:22Z",
    "updated_at": "2018-12-26T16:58:22Z",
    "author_association": "NONE",
    "body": "I also needed something like this, but as @jorisvandenbossche said, initially makes sense to have it as an extension. `pip install pandas-sets`\r\n\r\nYou can have a look here https://github.com/Florents-Tselai/pandas-sets - related post: https://tselai.com/pandas-sets.html.\r\n\r\nThe implementation is very primitive (and based on `StringMethods`) , but it does the job. \r\n\r\nMay come back later with a PR.\r\n\r\n"
  }
]
