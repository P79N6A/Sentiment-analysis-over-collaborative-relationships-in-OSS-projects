[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277689138",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-277689138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 277689138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzY4OTEzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T14:01:12Z",
    "updated_at": "2017-02-06T14:01:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "easier to read example\r\n```\r\nIn [7]: pd.read_excel('test_excel.xls',header=None)\r\nOut[7]: \r\n     0    1    2\r\n0  NaN  1.0  100\r\n1  3.0  2.0  200\r\n2  NaN  3.0  300\r\n3  NaN  NaN  400\r\n\r\nIn [8]: pd.read_excel?\r\n\r\nIn [9]: pd.read_excel('test_excel.xls',header=None,parse_cols=[0])\r\nOut[9]: \r\n   0\r\n0  3\r\n\r\nIn [10]: pd.read_excel('test_excel.xls',header=None,parse_cols=[0,1])\r\nOut[10]: \r\n     0    1\r\n0  NaN  1.0\r\n1  3.0  2.0\r\n2  NaN  3.0\r\n3  NaN  NaN\r\n\r\n```\r\n\r\n[9] does look buggy.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277689289",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-277689289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 277689289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzY4OTI4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T14:01:45Z",
    "updated_at": "2017-02-06T14:01:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chris-b1 as you seem to be the latent excel expert!\r\n\r\nalso, IIRC we had an issue to ``parse_cols`` -> ``usecols``? (deprecation)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277701713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-277701713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 277701713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzcwMTcxMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T14:41:49Z",
    "updated_at": "2017-02-06T14:41:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #4988 for `usecols`.  This does look buggy.\r\n\r\nPersonally, I never use `parse_cols` - there isn't a lot performance benefit, so I just read the whole frame and then select."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303177882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-303177882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 303177882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE3Nzg4Mg==",
    "user": {
      "login": "stanleyguan",
      "id": 5945288,
      "node_id": "MDQ6VXNlcjU5NDUyODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5945288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanleyguan",
      "html_url": "https://github.com/stanleyguan",
      "followers_url": "https://api.github.com/users/stanleyguan/followers",
      "following_url": "https://api.github.com/users/stanleyguan/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanleyguan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanleyguan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanleyguan/subscriptions",
      "organizations_url": "https://api.github.com/users/stanleyguan/orgs",
      "repos_url": "https://api.github.com/users/stanleyguan/repos",
      "events_url": "https://api.github.com/users/stanleyguan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanleyguan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T18:12:10Z",
    "updated_at": "2017-05-22T18:12:10Z",
    "author_association": "NONE",
    "body": "I'm taking a stab at this (from PyCon Sprint)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303193744",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-303193744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 303193744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE5Mzc0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T19:15:23Z",
    "updated_at": "2017-05-22T19:15:23Z",
    "author_association": "MEMBER",
    "body": "From discussion on gitter: this is caused by the fact that the TextParser by default skips empty lines. This is also the default behaviour of `read_csv`, but there this can be controlled by `skip_blank_lines`:\r\n\r\n```\r\nIn [10]: s = \"\"\"a\r\n    ...: 1\r\n    ...: \r\n    ...: 2\r\n    ...: \"\"\"\r\n\r\nIn [11]: pd.read_csv(StringIO(s))\r\nOut[11]: \r\n   a\r\n0  1\r\n1  2\r\n\r\nIn [12]: pd.read_csv(StringIO(s), skip_blank_lines=False)\r\nOut[12]: \r\n     a\r\n0  1.0\r\n1  NaN\r\n2  2.0\r\n```\r\n\r\nSo possible options to go forward here:\r\n\r\n- regard the current behaviour of read_excel (the one reported here, with the difference between parsing a single or multipe columns if you have missing values) as the desired behaviour (mimicking `read_csv`), but then add `skip_blank_lines` as a new keyword arg to have the option to change this\r\n- decide we want to fix this and in `read_excel` never skip blank lines. The this option could just be added to `TextParser` to enable `read_excel` to specify the behaviour.\r\n\r\n@jreback @chris-b1 any preferences?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303195931",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-303195931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 303195931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE5NTkzMQ==",
    "user": {
      "login": "stanleyguan",
      "id": 5945288,
      "node_id": "MDQ6VXNlcjU5NDUyODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5945288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanleyguan",
      "html_url": "https://github.com/stanleyguan",
      "followers_url": "https://api.github.com/users/stanleyguan/followers",
      "following_url": "https://api.github.com/users/stanleyguan/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanleyguan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanleyguan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanleyguan/subscriptions",
      "organizations_url": "https://api.github.com/users/stanleyguan/orgs",
      "repos_url": "https://api.github.com/users/stanleyguan/repos",
      "events_url": "https://api.github.com/users/stanleyguan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanleyguan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T19:24:42Z",
    "updated_at": "2017-05-22T19:24:42Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche Thanks for moving the conversation over.\r\n\r\nSome more illustration with TextParser:\r\n\r\n```\r\nIn [4]: data = [['foo', 3], ['bar', ''], ['', 2], ['foobar', '']]\r\n\r\nIn [5]: TextParser(data, header=None).read()\r\nOut[5]: \r\n        0    1\r\n0     foo  3.0\r\n1     bar  NaN\r\n2     NaN  2.0\r\n3  foobar  NaN\r\n\r\nIn [6]: TextParser([[row[0]] for row in data], header=None).read()\r\nOut[6]: \r\n        0\r\n0     foo\r\n1     bar\r\n2  foobar\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303198033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-303198033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 303198033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE5ODAzMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T19:33:27Z",
    "updated_at": "2017-05-22T19:33:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems like `read_csv` might do this in a different order - skipping lines only if the entire line is blank, then selecting columns - is that reasonable here?\r\n\r\n```\r\npd.read_csv(StringIO(\"\"\"a,b\r\n,1\r\n2,\"\"\"), usecols=['a'])\r\nOut[49]: \r\n     a\r\n0  NaN\r\n1  2.0\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303202319",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-303202319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 303202319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzIwMjMxOQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T19:52:28Z",
    "updated_at": "2017-05-22T19:52:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, since `TextParser` now supports `usecols`, you probably could rip most of the column-specific logic out of `read_excel` and defer it to there, which would replicate read_csv.\r\n\r\n```\r\nfrom pandas.io.parsers import TextParser\r\n\r\nTextParser([['a', 'b'], [1, ''], ['', 2]], usecols='a').read()\r\nOut[54]: \r\n     a\r\n0  1.0\r\n1  NaN\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303202984",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-303202984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 303202984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzIwMjk4NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T19:55:11Z",
    "updated_at": "2017-05-22T19:55:11Z",
    "author_association": "MEMBER",
    "body": "Yes, that looks like a good way to go. \r\nAs the behaviour of `read_csv` (to only skip if the full line is missing, also when you select only some columns) certainly makes sense"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303622246",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-303622246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 303622246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzYyMjI0Ng==",
    "user": {
      "login": "stanleyguan",
      "id": 5945288,
      "node_id": "MDQ6VXNlcjU5NDUyODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5945288?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stanleyguan",
      "html_url": "https://github.com/stanleyguan",
      "followers_url": "https://api.github.com/users/stanleyguan/followers",
      "following_url": "https://api.github.com/users/stanleyguan/following{/other_user}",
      "gists_url": "https://api.github.com/users/stanleyguan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stanleyguan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stanleyguan/subscriptions",
      "organizations_url": "https://api.github.com/users/stanleyguan/orgs",
      "repos_url": "https://api.github.com/users/stanleyguan/repos",
      "events_url": "https://api.github.com/users/stanleyguan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stanleyguan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T05:34:33Z",
    "updated_at": "2017-05-24T05:34:33Z",
    "author_association": "NONE",
    "body": "Deferring the logic to `TextParser` does mean that we will do unnecessary parsing for the columns that will be discarded. Is that acceptable?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303674052",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-303674052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 303674052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY3NDA1Mg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T09:47:47Z",
    "updated_at": "2017-05-24T09:47:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that's fine - because of the way excel data is structured (row oriented XML) the whole file has to be parsed anyways - it might add a little overhead, but small relative to overall reading time. \r\n\r\n```python\r\ndf = pd.DataFrame(np.random.randn(1000, 10), columns=list('qwertyuasd'))\r\ndf.to_excel('tmp.xlsx', index=False)\r\n\r\n%timeit pd.read_excel('tmp.xlsx')\r\n10 loops, best of 3: 111 ms per loop\r\n\r\n%timeit pd.read_excel('tmp.xlsx', parse_cols='a')\r\n10 loops, best of 3: 104 ms per loop\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438416178",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15316#issuecomment-438416178",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15316",
    "id": 438416178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQxNjE3OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T20:01:54Z",
    "updated_at": "2018-11-13T20:01:54Z",
    "author_association": "MEMBER",
    "body": "Not sure when this was patched, but we extensively test `parse_cols` (now called `usecols`) now, and this is no longer a bug. 🎉\r\n\r\nClosing."
  }
]
