[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249422916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14297#issuecomment-249422916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14297",
    "id": 249422916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTQyMjkxNg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-25T13:51:00Z",
    "updated_at": "2016-09-25T13:51:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "This isn't exactly a regression from version `0.18.0` - in that version `interpolate` didn't exist as a resample method, so what you were actually getting was:\n\n``` python\na.resample('15s', base=5).mean().interpolate()\n```\n\nIn `0.18.1` interpolate was added, but does an `asfreq` upsample before interpolating - this upsample only grabs exact matches (times that fall exactly on a bin edge), so some of the data isn't used.   There's  definitely a case that something like the old behavior should be exposed.\n\n``` python\na.resample('15s', base=5).asfreq()\nOut[52]: \n2016-05-25 00:00:35    1.0\n2016-05-25 00:00:50    3.0\n2016-05-25 00:01:05    4.0\n2016-05-25 00:01:20    NaN\n2016-05-25 00:01:35    3.0\n2016-05-25 00:01:50    NaN\n2016-05-25 00:02:05    5.0\n2016-05-25 00:02:20    NaN\n2016-05-25 00:02:35    NaN\n2016-05-25 00:02:50    NaN\n2016-05-25 00:03:05    NaN\n2016-05-25 00:03:20    NaN\n2016-05-25 00:03:35    NaN\n2016-05-25 00:03:50    NaN\n2016-05-25 00:04:05    NaN\n2016-05-25 00:04:20    NaN\n2016-05-25 00:04:35    NaN\n2016-05-25 00:04:50    NaN\n2016-05-25 00:05:05    NaN\n2016-05-25 00:05:20    NaN\n2016-05-25 00:05:35    NaN\n2016-05-25 00:05:50    NaN\nFreq: 15S, dtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249564565",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14297#issuecomment-249564565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14297",
    "id": 249564565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU2NDU2NQ==",
    "user": {
      "login": "dershow",
      "id": 6409820,
      "node_id": "MDQ6VXNlcjY0MDk4MjA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6409820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dershow",
      "html_url": "https://github.com/dershow",
      "followers_url": "https://api.github.com/users/dershow/followers",
      "following_url": "https://api.github.com/users/dershow/following{/other_user}",
      "gists_url": "https://api.github.com/users/dershow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dershow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dershow/subscriptions",
      "organizations_url": "https://api.github.com/users/dershow/orgs",
      "repos_url": "https://api.github.com/users/dershow/repos",
      "events_url": "https://api.github.com/users/dershow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dershow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T13:09:02Z",
    "updated_at": "2016-09-26T13:09:02Z",
    "author_association": "NONE",
    "body": "Is there any way to get Pandas to give me a \"best guess\" at each resampled point in time where it doesn't have an exact value?  I was hoping that interpolating this way would provide that \"best guess\", but it is not doing what I had hoped.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249570835",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14297#issuecomment-249570835",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14297",
    "id": 249570835,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTU3MDgzNQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T13:34:56Z",
    "updated_at": "2016-09-26T13:34:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "One way to do this now is to do an \"aggregating upsample\" first, and then interpolate, which is what was happening in 0.18.\n\n```\na.resample('15s', base=5).first().interpolate()\n\nOut[76]: \n2016-05-25 00:00:35    1.000000\n2016-05-25 00:00:50    3.000000\n2016-05-25 00:01:05    4.000000\n2016-05-25 00:01:20    3.500000\n2016-05-25 00:01:35    3.000000\n2016-05-25 00:01:50    4.000000\n2016-05-25 00:02:05    5.000000\n2016-05-25 00:02:20    5.333333\n2016-05-25 00:02:35    5.666667\n2016-05-25 00:02:50    6.000000\n2016-05-25 00:03:05    6.250000\n2016-05-25 00:03:20    6.500000\n2016-05-25 00:03:35    6.750000\n2016-05-25 00:03:50    7.000000\n2016-05-25 00:04:05    7.125000\n2016-05-25 00:04:20    7.250000\n2016-05-25 00:04:35    7.375000\n2016-05-25 00:04:50    7.500000\n2016-05-25 00:05:05    7.625000\n2016-05-25 00:05:20    7.750000\n2016-05-25 00:05:35    7.875000\n2016-05-25 00:05:50    8.000000\nFreq: 15S, dtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249628781",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14297#issuecomment-249628781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14297",
    "id": 249628781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTYyODc4MQ==",
    "user": {
      "login": "dershow",
      "id": 6409820,
      "node_id": "MDQ6VXNlcjY0MDk4MjA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6409820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dershow",
      "html_url": "https://github.com/dershow",
      "followers_url": "https://api.github.com/users/dershow/followers",
      "following_url": "https://api.github.com/users/dershow/following{/other_user}",
      "gists_url": "https://api.github.com/users/dershow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dershow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dershow/subscriptions",
      "organizations_url": "https://api.github.com/users/dershow/orgs",
      "repos_url": "https://api.github.com/users/dershow/repos",
      "events_url": "https://api.github.com/users/dershow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dershow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T16:54:09Z",
    "updated_at": "2016-09-26T16:54:09Z",
    "author_association": "NONE",
    "body": "But, that is shifting the data by 10s in the above example.  We know that that \"exact\" value at 4:00 is 7.0 and at 3:50 is should be a little bit less (interpolating the input in time gives 6.8333).  That's what I was hoping to get.  Then, interpolating from that to get 4:20 etc.    \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249639160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14297#issuecomment-249639160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14297",
    "id": 249639160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTYzOTE2MA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T17:31:56Z",
    "updated_at": "2016-09-26T17:46:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Try this (maybe this is what interpolate should do by default, interpolating before re-sampling?)\n\n```\nfrom scipy.interpolate import interp1d\n\n# fit the interpolation in integer ns-space\nf = interp1d(a.index.asi8, a.values)\n\n# generating ending bins\ndates = a.resample('15s', base=5).first().index\n\n# apply\npd.Series(f(dates.asi8), dates)\nOut[122]: \n2016-05-25 00:00:35    1.000000\n2016-05-25 00:00:50    3.000000\n2016-05-25 00:01:05    4.000000\n2016-05-25 00:01:20    3.500000\n2016-05-25 00:01:35    3.000000\n2016-05-25 00:01:50    4.000000\n2016-05-25 00:02:05    5.000000\n2016-05-25 00:02:20    5.272727\n2016-05-25 00:02:35    5.545455\n2016-05-25 00:02:50    5.818182\n2016-05-25 00:03:05    6.083333\n2016-05-25 00:03:20    6.333333\n2016-05-25 00:03:35    6.583333\n2016-05-25 00:03:50    6.833333\n2016-05-25 00:04:05    7.041667\n2016-05-25 00:04:20    7.166667\n2016-05-25 00:04:35    7.291667\n2016-05-25 00:04:50    7.416667\n2016-05-25 00:05:05    7.541667\n2016-05-25 00:05:20    7.666667\n2016-05-25 00:05:35    7.791667\n2016-05-25 00:05:50    7.916667\nFreq: 15S, dtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249657399",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14297#issuecomment-249657399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14297",
    "id": 249657399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTY1NzM5OQ==",
    "user": {
      "login": "dershow",
      "id": 6409820,
      "node_id": "MDQ6VXNlcjY0MDk4MjA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6409820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dershow",
      "html_url": "https://github.com/dershow",
      "followers_url": "https://api.github.com/users/dershow/followers",
      "following_url": "https://api.github.com/users/dershow/following{/other_user}",
      "gists_url": "https://api.github.com/users/dershow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dershow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dershow/subscriptions",
      "organizations_url": "https://api.github.com/users/dershow/orgs",
      "repos_url": "https://api.github.com/users/dershow/repos",
      "events_url": "https://api.github.com/users/dershow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dershow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T18:35:29Z",
    "updated_at": "2016-09-26T18:35:29Z",
    "author_association": "NONE",
    "body": "Yes, that is just what I was expecting it would do, and is just what I was looking for. It sure seems more obvious to me that \"interpolating at a given frequency\" should mean \"fill in the missing data points using interpolation\"  Which is just what the example above now does.\nThank you! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285428191",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14297#issuecomment-285428191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14297",
    "id": 285428191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTQyODE5MQ==",
    "user": {
      "login": "kdebrab",
      "id": 1150402,
      "node_id": "MDQ6VXNlcjExNTA0MDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1150402?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kdebrab",
      "html_url": "https://github.com/kdebrab",
      "followers_url": "https://api.github.com/users/kdebrab/followers",
      "following_url": "https://api.github.com/users/kdebrab/following{/other_user}",
      "gists_url": "https://api.github.com/users/kdebrab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kdebrab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kdebrab/subscriptions",
      "organizations_url": "https://api.github.com/users/kdebrab/orgs",
      "repos_url": "https://api.github.com/users/kdebrab/repos",
      "events_url": "https://api.github.com/users/kdebrab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kdebrab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T17:55:08Z",
    "updated_at": "2017-03-09T18:05:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI: one obtains the same correct result by interpolating on the union of old and new index before resampling to the new index:\r\n```\r\n# first obtain the desired new index\r\nnewindex = a.resample('15S', base=5).asfreq().index\r\n\r\n# interpolate on union of old and new index\r\na_union = a.reindex(a.index.union(newindex)).interpolate(method='time')\r\n\r\n# reindex to the new index\r\na_union.reindex(newindex)\r\n\r\nOut[41]: \r\n2016-05-25 00:00:35    1.000000\r\n2016-05-25 00:00:50    3.000000\r\n2016-05-25 00:01:05    4.000000\r\n2016-05-25 00:01:20    3.500000\r\n2016-05-25 00:01:35    3.000000\r\n2016-05-25 00:01:50    4.000000\r\n2016-05-25 00:02:05    5.000000\r\n2016-05-25 00:02:20    5.272727\r\n2016-05-25 00:02:35    5.545455\r\n2016-05-25 00:02:50    5.818182\r\n2016-05-25 00:03:05    6.083333\r\n2016-05-25 00:03:20    6.333333\r\n2016-05-25 00:03:35    6.583333\r\n2016-05-25 00:03:50    6.833333\r\n2016-05-25 00:04:05    7.041667\r\n2016-05-25 00:04:20    7.166667\r\n2016-05-25 00:04:35    7.291667\r\n2016-05-25 00:04:50    7.416667\r\n2016-05-25 00:05:05    7.541667\r\n2016-05-25 00:05:20    7.666667\r\n2016-05-25 00:05:35    7.791667\r\n2016-05-25 00:05:50    7.916667\r\nFreq: 15S, dtype: float64\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285434729",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14297#issuecomment-285434729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14297",
    "id": 285434729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTQzNDcyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T18:18:38Z",
    "updated_at": "2017-03-09T18:18:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kdebrab \r\n\r\nso the reason this happens is because the index is first reindexed to the new time buckets (upsampled) via reindexing, then interpolation happens. So w/o filling (which doesn't happen here), the points that are not on the new interval are dropped.\r\n\r\nSince the point of interpolation is neither filling, nor dropping (rather its interpolation), then this is not correct.\r\n\r\nIf you made this change what breaks in our current test suite?"
  }
]
