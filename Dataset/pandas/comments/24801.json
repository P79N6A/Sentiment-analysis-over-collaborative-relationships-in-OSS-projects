[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454795251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24801#issuecomment-454795251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24801",
    "id": 454795251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDc5NTI1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T14:18:46Z",
    "updated_at": "2019-01-16T14:18:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you fill out the requested info, rather than linking to SO (in case that question is deleted)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454797367",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24801#issuecomment-454797367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24801",
    "id": 454797367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDc5NzM2Nw==",
    "user": {
      "login": "PoeteMaudit",
      "id": 32899037,
      "node_id": "MDQ6VXNlcjMyODk5MDM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/32899037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PoeteMaudit",
      "html_url": "https://github.com/PoeteMaudit",
      "followers_url": "https://api.github.com/users/PoeteMaudit/followers",
      "following_url": "https://api.github.com/users/PoeteMaudit/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoeteMaudit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PoeteMaudit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoeteMaudit/subscriptions",
      "organizations_url": "https://api.github.com/users/PoeteMaudit/orgs",
      "repos_url": "https://api.github.com/users/PoeteMaudit/repos",
      "events_url": "https://api.github.com/users/PoeteMaudit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PoeteMaudit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T14:25:04Z",
    "updated_at": "2019-01-16T15:15:17Z",
    "author_association": "NONE",
    "body": "Let's suppose that I have a pandas dataFrame (`data_stores`) similar to the following:\r\n\r\n    store| item1 | item2 | item3\r\n    ------------------------------\r\n    1    | 45    | 50    | 53  \r\n    1    | 200   | 300   | 250\r\n    2    | 20    | 17    | 21  \r\n    2    | 300   | 350   | 400\r\n\r\nLet's say that I want to aggregate on column `item1` with the `mean` and on columns `item2` and `item3` with the `sum`.\r\n\r\nThis could be commonly done in the following way:\r\n\r\n    data_stores_total= data_stores.groupby(['store'], as_index=False).agg({'item1': 'mean', 'item2': 'sum', 'item3': 'sum' })\r\n\r\nHowever, this **cannot** be done (more efficiently) in the following way:\r\n\r\n     data_stores_total= data_stores.groupby(['store'], as_index=False).agg({'item1': 'mean', ['item2', 'item3']: 'sum' })\r\n\r\nneither in the following way which makes more sense for dictionary keys:\r\n\r\n     data_stores_total= data_stores.groupby(['store'], as_index=False).agg({'mean': 'item1':, 'sum': ['item2', 'item3']})\r\n\r\nIs there any way to do an aggregation with the same function on some columns of a dataframe without writing a new dictionary attribute at the `agg` function for each of them?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454804618",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24801#issuecomment-454804618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24801",
    "id": 454804618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgwNDYxOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T14:46:05Z",
    "updated_at": "2019-01-16T14:46:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI: The keys in a dictionary have to be hashable.\r\n\r\nNo I don't think it's possible to apply an aggregation to a subset like that. It's probably easiest to generate the dict of aggfuncs if you're worried about typing them all out."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454814664",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24801#issuecomment-454814664",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24801",
    "id": 454814664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgxNDY2NA==",
    "user": {
      "login": "PoeteMaudit",
      "id": 32899037,
      "node_id": "MDQ6VXNlcjMyODk5MDM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/32899037?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PoeteMaudit",
      "html_url": "https://github.com/PoeteMaudit",
      "followers_url": "https://api.github.com/users/PoeteMaudit/followers",
      "following_url": "https://api.github.com/users/PoeteMaudit/following{/other_user}",
      "gists_url": "https://api.github.com/users/PoeteMaudit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PoeteMaudit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PoeteMaudit/subscriptions",
      "organizations_url": "https://api.github.com/users/PoeteMaudit/orgs",
      "repos_url": "https://api.github.com/users/PoeteMaudit/repos",
      "events_url": "https://api.github.com/users/PoeteMaudit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PoeteMaudit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T15:13:24Z",
    "updated_at": "2019-01-16T15:13:24Z",
    "author_association": "NONE",
    "body": "Yes, I know. I edited the post. It was just an example to show what I meant."
  }
]
