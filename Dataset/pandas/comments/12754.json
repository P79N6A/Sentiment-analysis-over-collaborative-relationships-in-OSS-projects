[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/203922856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12754#issuecomment-203922856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12754",
    "id": 203922856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzkyMjg1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-31T12:58:19Z",
    "updated_at": "2016-03-31T12:58:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok so here is the repro. When dropping a level if ANOTHER level ends up with all `nan`, then it borks. This is because internally a `.reindex` is done with the labels and these don't end up matching (on anything). Instead I think we can convert this to a positional indexer and just take and this will work.\n\nSo this is a bug.\n\n```\nIn [70]: df = DataFrame({\n'A' : ['one','one','two','two'], \n'B' : [np.nan,np.nan, 1.0, 2.0],\n'C' : ['a','b','c','c'], \n'D' : [1,2,3,4]}).set_index(['A','B','C']).sort_index()\n\nIn [71]: df\nOut[71]: \n           D\nA   B   C   \none NaN a  1\n        b  2\ntwo 1.0 c  3\n    2.0 c  4\n\nIn [72]: df.drop('c',level='C')\nOut[72]: \n            D\nA   B   C    \none NaN a NaN\n        b NaN\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352945620",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12754#issuecomment-352945620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12754",
    "id": 352945620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mjk0NTYyMA==",
    "user": {
      "login": "charlie0389",
      "id": 3690467,
      "node_id": "MDQ6VXNlcjM2OTA0Njc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3690467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/charlie0389",
      "html_url": "https://github.com/charlie0389",
      "followers_url": "https://api.github.com/users/charlie0389/followers",
      "following_url": "https://api.github.com/users/charlie0389/following{/other_user}",
      "gists_url": "https://api.github.com/users/charlie0389/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/charlie0389/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/charlie0389/subscriptions",
      "organizations_url": "https://api.github.com/users/charlie0389/orgs",
      "repos_url": "https://api.github.com/users/charlie0389/repos",
      "events_url": "https://api.github.com/users/charlie0389/events{/privacy}",
      "received_events_url": "https://api.github.com/users/charlie0389/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T02:19:49Z",
    "updated_at": "2017-12-20T02:19:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "This bug is actually more serious - when dropping a level, if another level has *any* ``nan``, then it borks. It is *not* the case, as previously mentioned that another level has to have *all* ``nan``.\r\n\r\n    >> df = pd.DataFrame({\r\n        'A' : ['one','one','two','two'], \r\n        'B' : [pd.np.nan,0.0,1.0,2.0],\r\n        'C' : ['a','b','c','c'], \r\n        'D' : [1,2,3,4]}).set_index(['A','B','C']).sort_index()\r\n\r\n    >> df\r\n\r\n               D\r\n    A   B   C   \r\n    one NaN a  1\r\n        0.0 b  2\r\n    two 1.0 c  3\r\n        2.0 c  4\r\n\r\n    >> df.drop('c', level='C')\r\n\r\n                 D\r\n    A   B   C     \r\n    one NaN a  NaN\r\n        0.0 b  2.0"
  }
]
