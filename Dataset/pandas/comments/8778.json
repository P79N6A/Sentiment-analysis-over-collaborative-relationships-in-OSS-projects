[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64893268",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-64893268",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 64893268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODkzMjY4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-28T13:22:01Z",
    "updated_at": "2014-11-28T13:22:01Z",
    "author_association": "MEMBER",
    "body": "I think this would be a reasonable addition to the api (a `dtype` kwarg in `to_sql`). A way to override the default sqlalchemy type that is used per column. That would enable to workaround such cornercases as above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64968850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-64968850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 64968850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTY4ODUw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-29T23:12:10Z",
    "updated_at": "2014-11-29T23:12:10Z",
    "author_association": "MEMBER",
    "body": "comment from @artemyk in #8926:\n\n>  What if instead of having to specify the types as in this PR, we iterated over the columns with dtype==object, and did pandas.core.common._infer_dtype_from_scalar on their first non-null entry?\n\nI think the problem with that is that the series can also be really mixed (and not only because of the nan's), and then the checking on one scalar can give wrong results. \nBut maybe it would be interesting to have some kind of `infer` function that does not take into account NaNs to determine if something is mixed or not. So that the following would return 'boolean' instead of 'mixed':\n\n```\nIn [61]: s = pd.Series([False, True, np.nan])\n\nIn [62]: pd.lib.infer_dtype(s)\nOut[62]: 'mixed'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64970764",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-64970764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 64970764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTcwNzY0",
    "user": {
      "login": "artemyk",
      "id": 833768,
      "node_id": "MDQ6VXNlcjgzMzc2OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/833768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemyk",
      "html_url": "https://github.com/artemyk",
      "followers_url": "https://api.github.com/users/artemyk/followers",
      "following_url": "https://api.github.com/users/artemyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemyk/subscriptions",
      "organizations_url": "https://api.github.com/users/artemyk/orgs",
      "repos_url": "https://api.github.com/users/artemyk/repos",
      "events_url": "https://api.github.com/users/artemyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T00:30:54Z",
    "updated_at": "2014-11-30T00:30:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Yes, I think that would be very useful (though perhaps the _real_ solution would be to have typed NA values --- I suppose that would require some big structural changes though).  I can see how having the `dtypes` parameter can be good for corner cases, and for solving this issue now, but it would be great if (at least in most cases) NAs could be inserted w.o having to specify dtypes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65002619",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-65002619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 65002619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDAyNjE5",
    "user": {
      "login": "artemyk",
      "id": 833768,
      "node_id": "MDQ6VXNlcjgzMzc2OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/833768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemyk",
      "html_url": "https://github.com/artemyk",
      "followers_url": "https://api.github.com/users/artemyk/followers",
      "following_url": "https://api.github.com/users/artemyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemyk/subscriptions",
      "organizations_url": "https://api.github.com/users/artemyk/orgs",
      "repos_url": "https://api.github.com/users/artemyk/repos",
      "events_url": "https://api.github.com/users/artemyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T22:08:28Z",
    "updated_at": "2014-11-30T22:08:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I looked into how `DataFrame` infers types and it seems like it uses `numpy.array` inference for the most part.  We could use something similar, or, perhaps more robustly,\n\n```\ndef infer_notnull_dtype(series):\n    if series.dtype != 'object':\n        return series.dtype\n    else:\n        s = pd.Series(series[~series.isnull()].tolist())\n        return s.dtype\n```\n\nNot sure how slow this would be for large dataframes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65004415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-65004415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 65004415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDA0NDE1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T22:55:39Z",
    "updated_at": "2014-11-30T22:55:39Z",
    "author_association": "MEMBER",
    "body": "The `tolist` will certainly be not that good for large dataframes I think ... \nBut you have the `lib.infer_dtype` for this, and maybe just providing series[~series.isnull()] to that can already do the trick?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65004461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-65004461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 65004461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDA0NDYx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T22:56:36Z",
    "updated_at": "2014-11-30T22:57:38Z",
    "author_association": "MEMBER",
    "body": "```\nIn [1]: s = pd.Series([False, True, np.nan])\n\nIn [2]: pd.lib.infer_dtype(s)\nOut[2]: 'mixed'\n\nIn [3]: pd.lib.infer_dtype(s[s.notnull()])\nOut[3]: 'boolean'\n```\n\nHmm, this seems certainly like something that can be added to the type interference just before the last step when for object `Text` is returned.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65004521",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-65004521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 65004521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDA0NTIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T22:58:14Z",
    "updated_at": "2014-11-30T22:58:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche yep, much better. In fact the only series you really need to infer is a mixed-type boolean I think. (e.g. if its object, then infer it; check if its mixed, then remove nans and reinfer).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65005780",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-65005780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 65005780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDA1Nzgw",
    "user": {
      "login": "artemyk",
      "id": 833768,
      "node_id": "MDQ6VXNlcjgzMzc2OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/833768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemyk",
      "html_url": "https://github.com/artemyk",
      "followers_url": "https://api.github.com/users/artemyk/followers",
      "following_url": "https://api.github.com/users/artemyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemyk/subscriptions",
      "organizations_url": "https://api.github.com/users/artemyk/orgs",
      "repos_url": "https://api.github.com/users/artemyk/repos",
      "events_url": "https://api.github.com/users/artemyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T23:34:31Z",
    "updated_at": "2014-11-30T23:34:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Oh, nice!  Didn't realize that `lib.infer_dtype` is something that already exists.  I could probably do the patch, though would be easier to wait until #8926 is merged.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65005997",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-65005997",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 65005997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDA1OTk3",
    "user": {
      "login": "artemyk",
      "id": 833768,
      "node_id": "MDQ6VXNlcjgzMzc2OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/833768?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemyk",
      "html_url": "https://github.com/artemyk",
      "followers_url": "https://api.github.com/users/artemyk/followers",
      "following_url": "https://api.github.com/users/artemyk/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemyk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemyk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemyk/subscriptions",
      "organizations_url": "https://api.github.com/users/artemyk/orgs",
      "repos_url": "https://api.github.com/users/artemyk/repos",
      "events_url": "https://api.github.com/users/artemyk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemyk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-30T23:40:30Z",
    "updated_at": "2014-11-30T23:40:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "A little weird though since `infer_dtype` returns different named types than numpy types (the ones we test for in `sql.py`). E.g. 'boolean' vs 'bool', 'integer' vs 'int', etc..  Is there an existing way to standardize these?  Or just setup checks for both variants?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65007667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-65007667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 65007667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MDA3NjY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-01T00:26:39Z",
    "updated_at": "2014-12-01T00:26:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@artemyk these are 'specific' to pandas and not real 'types'. These are to try to figure out things when given unknown input. These are purely internal.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65325884",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-65325884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 65325884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI1ODg0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T23:32:08Z",
    "updated_at": "2014-12-02T23:32:08Z",
    "author_association": "MEMBER",
    "body": "Going to keep this open for now, given the discussion above\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66974298",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8778#issuecomment-66974298",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8778",
    "id": 66974298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTc0Mjk4",
    "user": {
      "login": "clembou",
      "id": 4275603,
      "node_id": "MDQ6VXNlcjQyNzU2MDM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4275603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clembou",
      "html_url": "https://github.com/clembou",
      "followers_url": "https://api.github.com/users/clembou/followers",
      "following_url": "https://api.github.com/users/clembou/following{/other_user}",
      "gists_url": "https://api.github.com/users/clembou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clembou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clembou/subscriptions",
      "organizations_url": "https://api.github.com/users/clembou/orgs",
      "repos_url": "https://api.github.com/users/clembou/repos",
      "events_url": "https://api.github.com/users/clembou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clembou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-15T10:21:59Z",
    "updated_at": "2014-12-15T10:21:59Z",
    "author_association": "NONE",
    "body": "@artemyk @jorisvandenbossche @jreback Thanks a lot all, I just upgraded to 0.15.2 and can confirm that I can now successfully round trip data from / to sql following this bug fix. Due to the second PR I don't even need to use the specific dtypes parameter in my test case!\n"
  }
]
