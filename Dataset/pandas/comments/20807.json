[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383900517",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383900517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383900517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkwMDUxNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T11:41:48Z",
    "updated_at": "2018-04-24T11:41:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "That would break compatibility."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383906659",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383906659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383906659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkwNjY1OQ==",
    "user": {
      "login": "oricou",
      "id": 7228177,
      "node_id": "MDQ6VXNlcjcyMjgxNzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7228177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oricou",
      "html_url": "https://github.com/oricou",
      "followers_url": "https://api.github.com/users/oricou/followers",
      "following_url": "https://api.github.com/users/oricou/following{/other_user}",
      "gists_url": "https://api.github.com/users/oricou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oricou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oricou/subscriptions",
      "organizations_url": "https://api.github.com/users/oricou/orgs",
      "repos_url": "https://api.github.com/users/oricou/repos",
      "events_url": "https://api.github.com/users/oricou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oricou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T12:07:46Z",
    "updated_at": "2018-04-24T12:07:46Z",
    "author_association": "NONE",
    "body": "What!? Is that a magic answer to close issues? I am sorry but you should explain how it would break compatibility and as far as I know breaking compatibility has been done before.\r\n\r\nFrom my understanding all previous code will still work if you *add* this feature."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383922180",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383922180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383922180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkyMjE4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:03:15Z",
    "updated_at": "2018-04-24T13:03:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> and as far as I know breaking compatibility has been done before.\r\n\r\nSorry, I posted before finishing my comment. It'd break compat and I don't see the benefit. I could be missing something though. Could you maybe explain a bit further what you're trying to achieve with a runnable example?\r\n\r\n> From my understanding all previous code will still work if you add this feature.\r\n\r\nHow would that be? Currently the function passed to `f` expects a column or row as it's first argument. With your proposal it would have to expect a positional argument for each row or column. Or am I misunderstanding?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383926523",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383926523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383926523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkyNjUyMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:17:17Z",
    "updated_at": "2018-04-24T13:17:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "For example, suppose we had\r\n\r\n```python\r\nIn [10]: df = pd.DataFrame({\"A\": [1, 2, 3, 4], \"B\": [5, 6, 7, 8]})\r\n\r\nIn [11]: def f(row):\r\n    ...:     return row.A * row.B\r\n ```\r\n\r\nIIUC (which I may not) your proposal would break the following\r\n\r\n```python\r\nIn [12]: df.apply(f, axis=1)\r\nOut[12]:\r\n0     5\r\n1    12\r\n2    21\r\n3    32\r\ndtype: int64\r\n```\r\n\r\nSince `f` would be called with two arguments instead of 1."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383930834",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383930834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383930834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkzMDgzNA==",
    "user": {
      "login": "oricou",
      "id": 7228177,
      "node_id": "MDQ6VXNlcjcyMjgxNzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7228177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oricou",
      "html_url": "https://github.com/oricou",
      "followers_url": "https://api.github.com/users/oricou/followers",
      "following_url": "https://api.github.com/users/oricou/following{/other_user}",
      "gists_url": "https://api.github.com/users/oricou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oricou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oricou/subscriptions",
      "organizations_url": "https://api.github.com/users/oricou/orgs",
      "repos_url": "https://api.github.com/users/oricou/repos",
      "events_url": "https://api.github.com/users/oricou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oricou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:30:11Z",
    "updated_at": "2018-04-24T13:30:11Z",
    "author_association": "NONE",
    "body": "I want to apply a 2 arguments function to 2 columns of my DataFrame. As you said `apply` expect a vector (a column or a row) which means the function given to apply should have one argument. Imagine you have functions with N arguments and you want to map it on all the rows for the N columns you have selected. The best way I have found to do that is the use of a lambda function to call my function (as explained in my first post).\r\n\r\nNow thinking about it, it may be more logic to use `map` instead of `apply` to do what I want. Map a function expecting N arguments to N columns would run row by row the function with the N values. It would behave the same than map with a 1 argument function applied to a Serie.\r\n\r\nExample: \r\n\r\n```pyhon\r\n\r\ndf = pd.DataFrame({'A':[1,2], 'B':[3,4]})\r\ndf.apply(lambda x,y: x+2*y, axis=1)   # does not work\r\n\r\n# what about having?\r\ndf.map(lambda x,y: x+2*y)\r\n```\r\n\r\nSince `map` does not exist for DataFrame, you are not going to break anything."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383931326",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383931326",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383931326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkzMTMyNg==",
    "user": {
      "login": "oricou",
      "id": 7228177,
      "node_id": "MDQ6VXNlcjcyMjgxNzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7228177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oricou",
      "html_url": "https://github.com/oricou",
      "followers_url": "https://api.github.com/users/oricou/followers",
      "following_url": "https://api.github.com/users/oricou/following{/other_user}",
      "gists_url": "https://api.github.com/users/oricou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oricou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oricou/subscriptions",
      "organizations_url": "https://api.github.com/users/oricou/orgs",
      "repos_url": "https://api.github.com/users/oricou/repos",
      "events_url": "https://api.github.com/users/oricou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oricou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:31:34Z",
    "updated_at": "2018-04-24T13:31:34Z",
    "author_association": "NONE",
    "body": "About your example, `apply` would detect that `f` expect 1 argument and there it would behave as it does now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383932452",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383932452",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383932452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkzMjQ1Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:35:01Z",
    "updated_at": "2018-04-24T13:35:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the clarification. Perhaps you could update your original post with your new proposal.\r\n\r\n> Since map does not exist for DataFrame, you are not going to break anything.\r\n\r\nIndeed, this would be preferable. Then we'll have to decide whether the additional method is worth implementing, & maintaining. Especially since your workaround is relatively straightforward.\r\n\r\n> About your example, apply would detect that f expect 1 argument and there it would behave as it does now.\r\n\r\nIn general, we try to avoid magic behavior like this. It often leads to surprising / difficult to debug behavior in unanticipated cases."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383932691",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383932691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383932691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkzMjY5MQ==",
    "user": {
      "login": "oricou",
      "id": 7228177,
      "node_id": "MDQ6VXNlcjcyMjgxNzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7228177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oricou",
      "html_url": "https://github.com/oricou",
      "followers_url": "https://api.github.com/users/oricou/followers",
      "following_url": "https://api.github.com/users/oricou/following{/other_user}",
      "gists_url": "https://api.github.com/users/oricou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oricou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oricou/subscriptions",
      "organizations_url": "https://api.github.com/users/oricou/orgs",
      "repos_url": "https://api.github.com/users/oricou/repos",
      "events_url": "https://api.github.com/users/oricou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oricou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:35:43Z",
    "updated_at": "2018-04-24T13:35:43Z",
    "author_association": "NONE",
    "body": "ok, I update the original post"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383937486",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20807#issuecomment-383937486",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20807",
    "id": 383937486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkzNzQ4Ng==",
    "user": {
      "login": "oricou",
      "id": 7228177,
      "node_id": "MDQ6VXNlcjcyMjgxNzc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7228177?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oricou",
      "html_url": "https://github.com/oricou",
      "followers_url": "https://api.github.com/users/oricou/followers",
      "following_url": "https://api.github.com/users/oricou/following{/other_user}",
      "gists_url": "https://api.github.com/users/oricou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oricou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oricou/subscriptions",
      "organizations_url": "https://api.github.com/users/oricou/orgs",
      "repos_url": "https://api.github.com/users/oricou/repos",
      "events_url": "https://api.github.com/users/oricou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oricou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:49:10Z",
    "updated_at": "2018-04-24T13:49:25Z",
    "author_association": "NONE",
    "body": "BTW I think my workaround is not that easy, it implies you know *x and understand apply and axis. Many users know how to use `numpy.map` and would understand `df.map(f)` but not beeing able to do my workaround."
  }
]
