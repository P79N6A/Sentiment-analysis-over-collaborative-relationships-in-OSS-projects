[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395642511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21374#issuecomment-395642511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21374",
    "id": 395642511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTY0MjUxMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T04:23:38Z",
    "updated_at": "2018-06-08T04:23:38Z",
    "author_association": "MEMBER",
    "body": "@fillipe-gsm : How odd!  Investigation and patch are welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395652431",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21374#issuecomment-395652431",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21374",
    "id": 395652431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTY1MjQzMQ==",
    "user": {
      "login": "uds5501",
      "id": 21087061,
      "node_id": "MDQ6VXNlcjIxMDg3MDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21087061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uds5501",
      "html_url": "https://github.com/uds5501",
      "followers_url": "https://api.github.com/users/uds5501/followers",
      "following_url": "https://api.github.com/users/uds5501/following{/other_user}",
      "gists_url": "https://api.github.com/users/uds5501/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uds5501/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uds5501/subscriptions",
      "organizations_url": "https://api.github.com/users/uds5501/orgs",
      "repos_url": "https://api.github.com/users/uds5501/repos",
      "events_url": "https://api.github.com/users/uds5501/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uds5501/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T05:33:06Z",
    "updated_at": "2018-06-08T05:33:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung @fillipe-gsm maybe the problem lies in the usage of `numpy.imag` casting (if we are using it) , have a look at it's documentation here : https://docs.scipy.org/doc/numpy/reference/generated/numpy.imag.html\r\n\r\nIt also mentions that \" If *val* is real, the type of *val* is used for the output. If val has complex elements, the returned type is float. \" \r\nCan it happen that \"/\" operator triggers the type caster and the \"**(-1)\" doesn't?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397114399",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21374#issuecomment-397114399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21374",
    "id": 397114399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzExNDM5OQ==",
    "user": {
      "login": "fillipe-gsm",
      "id": 10814987,
      "node_id": "MDQ6VXNlcjEwODE0OTg3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10814987?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fillipe-gsm",
      "html_url": "https://github.com/fillipe-gsm",
      "followers_url": "https://api.github.com/users/fillipe-gsm/followers",
      "following_url": "https://api.github.com/users/fillipe-gsm/following{/other_user}",
      "gists_url": "https://api.github.com/users/fillipe-gsm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fillipe-gsm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fillipe-gsm/subscriptions",
      "organizations_url": "https://api.github.com/users/fillipe-gsm/orgs",
      "repos_url": "https://api.github.com/users/fillipe-gsm/repos",
      "events_url": "https://api.github.com/users/fillipe-gsm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fillipe-gsm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T22:59:02Z",
    "updated_at": "2018-06-13T22:59:02Z",
    "author_association": "NONE",
    "body": "@gfyoung @uds5501 \r\nI did some throghout investigation line by line starting in the `pandas.core.computation.eval` module, and I may have found some lead in the `Div` class inside the `pandas.core.computation.ops` module, which seems to be created specially to handle divisions. Given the odd behavior happening only with the \"/\" operator, this makes some sense. Since it is a small code, here it is:\r\n\r\n```python\r\nclass Div(BinOp):\r\n\r\n    \"\"\"Div operator to special case casting.\r\n\r\n    Parameters\r\n    ----------\r\n    lhs, rhs : Term or Op\r\n        The Terms or Ops in the ``/`` expression.\r\n    truediv : bool\r\n        Whether or not to use true division. With Python 3 this happens\r\n        regardless of the value of ``truediv``.\r\n    \"\"\"\r\n\r\n    def __init__(self, lhs, rhs, truediv, *args, **kwargs):\r\n        super(Div, self).__init__('/', lhs, rhs, *args, **kwargs)\r\n\r\n        if not isnumeric(lhs.return_type) or not isnumeric(rhs.return_type):\r\n            raise TypeError(\"unsupported operand type(s) for {0}:\"\r\n                            \" '{1}' and '{2}'\".format(self.op,\r\n                                                      lhs.return_type,\r\n                                                      rhs.return_type))\r\n\r\n        if truediv or PY3:\r\n            # do not upcast float32s to float64 un-necessarily\r\n            acceptable_dtypes = [np.float32, np.float_]\r\n            _cast_inplace(com.flatten(self), acceptable_dtypes, np.float_)\r\n```\r\n\r\nIt seems that this class is simply not ready to handle complex numbers given the instruction `acceptable_dtypes = [np.float32, np.float_]`. Thus, I tried to replace this line with `acceptable_dtypes = [np.float32, np.float_, np.complex_, np.complex64]`. Apparently, this solves the problem:\r\n\r\n```python\r\ndata = {\"a\": [1 + 2j], \"b\": [1 + 1j]}\r\n df = pd.DataFrame(data = data)\r\n df.eval(\"a/b\")\r\n  \r\n0    (1.5+0.5j)\r\ndtype: complex128\r\n```\r\n\r\nWhat do you guys think?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397114590",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21374#issuecomment-397114590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21374",
    "id": 397114590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzExNDU5MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T23:00:02Z",
    "updated_at": "2018-06-13T23:00:02Z",
    "author_association": "MEMBER",
    "body": "@fillipe-gsm : That seems reasonable to me.  A PR for this would be great!"
  }
]
