[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11177299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-11177299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 11177299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc3Mjk5",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-09T22:45:00Z",
    "updated_at": "2012-12-09T22:45:00Z",
    "author_association": "MEMBER",
    "body": "This could be made to work but won't make Index a valid dict key (since `==` is vector compare)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11178246",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-11178246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 11178246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc4MjQ2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T00:05:11Z",
    "updated_at": "2012-12-10T00:05:22Z",
    "author_association": "NONE",
    "body": "since index keys are immutable, having a hash based on them would have enabled a fast check for \nindex inequality without a full vector compare. not sure it's worth it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11178264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-11178264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 11178264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc4MjY0",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T00:06:35Z",
    "updated_at": "2012-12-10T00:06:35Z",
    "author_association": "MEMBER",
    "body": "I'd thought at one point about adding an MD5 hash. That would work for indexes that don't contain Python objects\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11178275",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-11178275",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 11178275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc4Mjc1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T00:07:37Z",
    "updated_at": "2012-12-10T00:07:37Z",
    "author_association": "MEMBER",
    "body": "Well, I guess you could hash the python objects then md5 the array of hash values. Some probability of collisions / equal md5 hash but unequal indexes. harrumph\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11178451",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-11178451",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 11178451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc4NDUx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T00:22:54Z",
    "updated_at": "2012-12-10T00:22:54Z",
    "author_association": "NONE",
    "body": "it would need to be at construction time o'course, otherwise no gain over vector compare,\n`any(idx1==idx2)` does not fail fast, so the best case and worst case are the same.\nBut It turned out that for my case it was enough to check for identity rather then equality.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11178525",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-11178525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 11178525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc4NTI1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-10T00:31:37Z",
    "updated_at": "2012-12-10T00:31:37Z",
    "author_association": "MEMBER",
    "body": "We should just write a custom set of vector compares-- the problem with `np.array_equal` is that it compares _all_ elements rather than failing at the first unequal pair\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12406818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-12406818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 12406818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDA2ODE4",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-18T03:59:58Z",
    "updated_at": "2013-01-18T03:59:58Z",
    "author_association": "MEMBER",
    "body": "Marked as 0.11. Should think about this eventually\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16563437",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-16563437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 16563437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTYzNDM3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-18T08:20:38Z",
    "updated_at": "2013-04-18T08:20:45Z",
    "author_association": "NONE",
    "body": "marked 'someday'.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25424246",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-25424246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 25424246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDI0MjQ2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T04:04:29Z",
    "updated_at": "2013-10-01T04:04:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "`is_` method covers some potential uses for this (i.e., comparing views), definitely would be nice to at least have a short-circuiting equality function that we could use in equals.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/32023331",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2461#issuecomment-32023331",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2461",
    "id": 32023331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDIzMzMx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-10T12:24:30Z",
    "updated_at": "2014-01-10T12:24:30Z",
    "author_association": "NONE",
    "body": "In the year since I haven't needed this again.\nIntuitevely, Index is immutable -> should be hashable. But indices have name(s) and those are mutable.\nAnd this raises tricky issues of identity, equality and context-specific \"right thing to do\".\n\nWould need much stronger use case to commit to semantics on implementaition,\nand I can't think of one now. Leave it until that mystical, musical, majestical day.\n"
  }
]
