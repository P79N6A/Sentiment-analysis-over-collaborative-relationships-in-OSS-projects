[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20584242",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4156#issuecomment-20584242",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4156",
    "id": 20584242,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTg0MjQy",
    "user": {
      "login": "chinux23",
      "id": 387737,
      "node_id": "MDQ6VXNlcjM4NzczNw==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/387737?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chinux23",
      "html_url": "https://github.com/chinux23",
      "followers_url": "https://api.github.com/users/chinux23/followers",
      "following_url": "https://api.github.com/users/chinux23/following{/other_user}",
      "gists_url": "https://api.github.com/users/chinux23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chinux23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chinux23/subscriptions",
      "organizations_url": "https://api.github.com/users/chinux23/orgs",
      "repos_url": "https://api.github.com/users/chinux23/repos",
      "events_url": "https://api.github.com/users/chinux23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chinux23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T03:38:12Z",
    "updated_at": "2013-07-08T03:38:12Z",
    "author_association": "NONE",
    "body": "Nevermind, I think this answers this questions:\nhttp://stackoverflow.com/questions/14224172/equality-in-pandas-dataframes-column-order-matters\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20641237",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4156#issuecomment-20641237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4156",
    "id": 20641237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjQxMjM3",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T22:32:29Z",
    "updated_at": "2013-07-08T22:32:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that this is answered. Especially the creation of dataframes with dictionaries does not give you any control on the order of the columns, because by design, Python standard dictionaries don't care about the order of the entries. If you still like to use dictionaries but would like to have things in order inside them, you could use collections.OrderedDict as a means to create pandas.DataFrames. \nYou can help the busy pandas people by closing this issue if it is solved for you. Thanks!\n"
  }
]
