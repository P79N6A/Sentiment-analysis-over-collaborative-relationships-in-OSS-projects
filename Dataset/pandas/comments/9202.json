[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68940418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9202#issuecomment-68940418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9202",
    "id": 68940418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTQwNDE4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-06T21:50:59Z",
    "updated_at": "2015-01-06T21:50:59Z",
    "author_association": "MEMBER",
    "body": "What do you want to obtain?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68950491",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9202#issuecomment-68950491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9202",
    "id": 68950491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTUwNDkx",
    "user": {
      "login": "colinfang",
      "id": 1499555,
      "node_id": "MDQ6VXNlcjE0OTk1NTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1499555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colinfang",
      "html_url": "https://github.com/colinfang",
      "followers_url": "https://api.github.com/users/colinfang/followers",
      "following_url": "https://api.github.com/users/colinfang/following{/other_user}",
      "gists_url": "https://api.github.com/users/colinfang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colinfang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colinfang/subscriptions",
      "organizations_url": "https://api.github.com/users/colinfang/orgs",
      "repos_url": "https://api.github.com/users/colinfang/repos",
      "events_url": "https://api.github.com/users/colinfang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colinfang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-06T22:59:54Z",
    "updated_at": "2015-01-06T23:03:06Z",
    "author_association": "NONE",
    "body": "I would expect it returns a series which has dtype object.\n\nEach element is a `[row]` which has the type as a list of a series or ndarray.\n\nIn fact, I had expected that `df.apply(fun, axis=1)` returns the similar stuff as below:\n\n``` python\ntmp = []\nfor _, row in df.iterrows():\n    tmp.append(fun(row))\npd.Series(tmp)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68955926",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9202#issuecomment-68955926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9202",
    "id": 68955926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTU1OTI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-06T23:46:54Z",
    "updated_at": "2015-01-06T23:46:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [13]: df.apply(lambda row: [row.values],axis=1)\nOut[13]: \n0    [[0, 0]]\n1    [[1, 1]]\n2    [[2, 2]]\n3    [[3, 3]]\n4    [[4, 4]]\ndtype: object\n```\n\nyou could do this I guess. but this is in general simply not a good idea. Storing non-scalar types in a Series elements is non-performant. You are just looking for trouble.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69005874",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9202#issuecomment-69005874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9202",
    "id": 69005874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDA1ODc0",
    "user": {
      "login": "colinfang",
      "id": 1499555,
      "node_id": "MDQ6VXNlcjE0OTk1NTU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1499555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colinfang",
      "html_url": "https://github.com/colinfang",
      "followers_url": "https://api.github.com/users/colinfang/followers",
      "following_url": "https://api.github.com/users/colinfang/following{/other_user}",
      "gists_url": "https://api.github.com/users/colinfang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colinfang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colinfang/subscriptions",
      "organizations_url": "https://api.github.com/users/colinfang/orgs",
      "repos_url": "https://api.github.com/users/colinfang/repos",
      "events_url": "https://api.github.com/users/colinfang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colinfang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-07T10:48:05Z",
    "updated_at": "2015-01-07T10:48:05Z",
    "author_association": "NONE",
    "body": "Ok, this seems to work.\n\n```\nb = df.apply(lambda row: [row.copy()], axis=1)\n```\n"
  }
]
