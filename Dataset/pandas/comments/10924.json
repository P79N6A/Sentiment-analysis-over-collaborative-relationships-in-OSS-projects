[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135881955",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10924#issuecomment-135881955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10924",
    "id": 135881955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTg4MTk1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-28T20:33:58Z",
    "updated_at": "2015-08-28T20:33:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are inputting an array so the results are plausible and can only be an array\nnot a Series, so the documentation is correct\n\nbtw this is not a very useful thing to do - pandas cannot align the input you give it and so it just returns a straight np.dot\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135888034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10924#issuecomment-135888034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10924",
    "id": 135888034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTg4ODAzNA==",
    "user": {
      "login": "skycaptain",
      "id": 1119641,
      "node_id": "MDQ6VXNlcjExMTk2NDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1119641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skycaptain",
      "html_url": "https://github.com/skycaptain",
      "followers_url": "https://api.github.com/users/skycaptain/followers",
      "following_url": "https://api.github.com/users/skycaptain/following{/other_user}",
      "gists_url": "https://api.github.com/users/skycaptain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skycaptain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skycaptain/subscriptions",
      "organizations_url": "https://api.github.com/users/skycaptain/orgs",
      "repos_url": "https://api.github.com/users/skycaptain/repos",
      "events_url": "https://api.github.com/users/skycaptain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skycaptain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-28T21:08:37Z",
    "updated_at": "2015-08-28T21:13:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I already said and as you pointed out, the result is plausible, since the resulting index bases on the input columns. All I'm saying is, that to my understanding the documentation is incomplete, if the function can return a undocumented type. On the other hand, if one would just input the documented types the function works as expected. So, I'm agreeing on closing this issue, if you think this is more a side effect than a real bug. Apparently, there are some use cases, but these can easily avoided by using indexed pd.DataFrames instead of np.ndarrays.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135892435",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10924#issuecomment-135892435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10924",
    "id": 135892435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTg5MjQzNQ==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-28T21:28:48Z",
    "updated_at": "2015-08-28T21:28:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think input and output type specification can only be done on a best-effort basis -- if input is unexpected then due to duck-typing the code might still work but spit out an unexpected output.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135896502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10924#issuecomment-135896502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10924",
    "id": 135896502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTg5NjUwMg==",
    "user": {
      "login": "skycaptain",
      "id": 1119641,
      "node_id": "MDQ6VXNlcjExMTk2NDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1119641?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/skycaptain",
      "html_url": "https://github.com/skycaptain",
      "followers_url": "https://api.github.com/users/skycaptain/followers",
      "following_url": "https://api.github.com/users/skycaptain/following{/other_user}",
      "gists_url": "https://api.github.com/users/skycaptain/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/skycaptain/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/skycaptain/subscriptions",
      "organizations_url": "https://api.github.com/users/skycaptain/orgs",
      "repos_url": "https://api.github.com/users/skycaptain/repos",
      "events_url": "https://api.github.com/users/skycaptain/events{/privacy}",
      "received_events_url": "https://api.github.com/users/skycaptain/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-28T21:51:13Z",
    "updated_at": "2015-08-28T21:52:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "After all, I'm totally agreeing. I just stumbled over this while debugging my application. Due to duck typing the input type might be unexcepted. The first positional argument will be deligated to numpy, if it's not an instance of ndframe, and the output type is a ndarray. That's ok, if one is aware of this issue and does not run into unexpected exceptions.\n"
  }
]
