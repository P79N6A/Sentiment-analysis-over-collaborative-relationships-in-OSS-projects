[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13737148",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13737148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13737148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzM3MTQ4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T18:57:49Z",
    "updated_at": "2013-02-18T20:26:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not 100% sure, but it looks like a numpy issue:\n\n``` python\nIn [1]: import pandas as pd, sys\n\nIn [2]: import numpy as np\n\nIn [3]: df=pd.DataFrame({'A': {1.0: 0.0, 2.0: 6.0, 3.0: 12.0},\n   ...:                  'C': {1.0: 2.0, 2.0: 8.0, 3.0: 14.0},\n   ...:                  'B': {1.0: 1.0, 2.0: 7.0, 3.0: 13.0}})\n\nIn [4]: i = df.index.view(np.ndarray)\n\nIn [5]: u = df.unstack().astype(np.int_).view(np.ndarray)\n\nIn [6]: i\nOut[6]: array([1.0, 2.0, 3.0], dtype=object)\n\nIn [7]: i.take(u)\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-7-8293b97d15cc> in <module>()\n----> 1 i.take(u)\n\nIndexError: index out of range for array\n\nIn [8]: i\nSegmentation fault (core dumped)\n```\n\nLine 7 only involves numpy types, although the underlying buffers have been touched by pandas (so it's possible it's happening because pandas violated a contract somewhere). `i.take` doesn't seem to have any reason to affect the value of `i` though, since it returns a new object instead of modifying itself: I'm guessing numpy's implementation is modifying `i` for some optimization purpose but it wasn't coded in an exception-safe manner...leaving `i` in some invalid state.\n\nWill dig in a bit more.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13737690",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13737690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13737690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzM3Njkw",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T19:10:42Z",
    "updated_at": "2013-02-18T19:10:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that the `unstack` results after the first `take` are already off (it shouldn't be `2,2,3`).  On a different system I can get\n\n``` python\n>>> df.unstack()\nA  1358910081     0\n   2              6\n   3             12\nB  1358910081     1\n   2              7\n   3             13\nC  1358910081     2\n   2              8\n   3             14\n```\n\ninstead.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13737713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13737713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13737713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzM3NzEz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T19:11:05Z",
    "updated_at": "2013-02-18T19:22:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Changing line 5 to `u = np.asarray(df.unstack().astype(np.int_).copy()).copy()` still results in a segfault as does changing line 4 to either `i = np.asarray(df.index.copy())` or `i = np.asarray(df.index).copy()` seem to make it go away. So seems either `Index` is violating some contract in subclassing `ndarray`, `ndarray.take` is buggy, or both...\n\nEDIT: actually it seems like changing 4 to either option above still segfaults (at least for me), but it requires multiple calls to `ndarray.take` to do so.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13737861",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13737861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13737861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzM3ODYx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T19:13:20Z",
    "updated_at": "2013-02-18T21:37:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dsm054 yes, it looks like the the index contents are being affected by `ndarray.take`, which seems like numpy optimization gone awry (since `ndarray.take` doesn't semantically mutate its `self` argument)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13741301",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13741301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13741301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQxMzAx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T20:26:33Z",
    "updated_at": "2013-02-18T20:26:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "definitely numpy bug (here's with dev numpy)\n\n``` python\nIn [1]: import numpy as np\n\nIn [2]: u = np.asarray([ 0, 6, 12, 1, 7, 13, 2, 8, 14])\n\nIn [3]: i = np.asarray([1.0, 2.0, 3.0]).astype(object)\n\nIn [4]: i\nOut[4]: array([1.0, 2.0, 3.0], dtype=object)\n\nIn [5]: i.take(u)\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n<ipython-input-5-8293b97d15cc> in <module>()\n----> 1 i.take(u)\n\nIndexError: index 6 is out of bounds for axis 0 with size 3\n\nIn [6]: i\nSegmentation fault (core dumped)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13741401",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13741401",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13741401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQxNDAx",
    "user": {
      "login": "dsm054",
      "id": 980054,
      "node_id": "MDQ6VXNlcjk4MDA1NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/980054?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsm054",
      "html_url": "https://github.com/dsm054",
      "followers_url": "https://api.github.com/users/dsm054/followers",
      "following_url": "https://api.github.com/users/dsm054/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsm054/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsm054/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsm054/subscriptions",
      "organizations_url": "https://api.github.com/users/dsm054/orgs",
      "repos_url": "https://api.github.com/users/dsm054/repos",
      "events_url": "https://api.github.com/users/dsm054/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsm054/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T20:28:44Z",
    "updated_at": "2013-02-18T20:28:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should we close this, then, and bump it upstream?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13744592",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13744592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13744592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzQ0NTky",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-18T21:39:42Z",
    "updated_at": "2013-02-18T21:49:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, maybe pandas should work around it by checking index bounds itself first for object arrays (at some minor efficiency cost...)? in which case we might want to leave the issue open for that.\n\nit might be important since `Index` arrays are usually object-based (unless specialized via a subclass)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13754317",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13754317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13754317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzU0MzE3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-19T02:52:45Z",
    "updated_at": "2013-02-19T02:52:45Z",
    "author_association": "MEMBER",
    "body": "why don't you replace the usage of ndarray.take in Index.take with `take_nd` (which should not corrupt memory)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13756388",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-13756388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 13756388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNzU2Mzg4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-19T04:24:29Z",
    "updated_at": "2013-02-19T04:30:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah, that works too...thanks! (it might be marginally faster too because `ndarray.take` is coded for the general nd-case but we have cython specializations for most 1-d cases)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14776069",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14776069",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14776069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzc2MDY5",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T13:54:26Z",
    "updated_at": "2013-03-12T13:54:26Z",
    "author_association": "MEMBER",
    "body": "What's the status here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14787867",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14787867",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14787867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg3ODY3",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T16:57:52Z",
    "updated_at": "2013-03-12T17:05:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry for the lack of update, this turned out to be somewhat of a rabbit hole; basically, we're exposed to this same numpy bug everywhere where we call `ndarray.take` with user-supplied indices, which turns out to be a lot of places. it doesn't make that much sense to just convert one call arbitrarily so I started doing a blanket conversion...but that turns out to be the wrong thing because `ndarray.take` has different semantics with negative indicies than our cythonic takes (i.e. the normal ones, rather than -1 being a dummy value for fill behavior)...lots of tests were broken in subtle ways before I realized the issue and regardless it's unclear if anyone is depending on the normal semantics already (since there's no documentation either way that this is supported officially, afaict).\n\ni think the right thing to do is probably the following:\n1. audit the code and try to disambiguate uses of user-supplied indices and algorithm-generated indices throughout\n2. convert the former to either a bug-free cythonic take that does normal negative indices, or a bounds-checking wrapper around `ndarray.take`\n3. (optional) if new cythonic take is used, then get rid of the whole back and forth \"platform int <-> int64\" conversion mess, which is basically only there to support `ndarray.take`.\n\nbut that's a pretty big change...i don't have free cycles for it right now but if someone else wants to take a look they're free to\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4Mzg0",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:05:36Z",
    "updated_at": "2013-03-12T19:58:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "(btw, in case someone picks this up...there's no bounds checking in `take_nd` in most cases, which might be ok if we can ensure that no user-supplied indices are every passed to it, but maybe it should be addressed to be safe; probably too slow to turn on cython's built-in bounds check though, since that'll check with every access, better thing to do would be to add the minimal checks manually for a row/column of calls at a time)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4Mzk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:05:43Z",
    "updated_at": "2013-03-12T17:10:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is the change I made in `_ixs` in frame.py (this was the old `icol`), as negative user-supplied indicies were incorrect (the change was all wrapped up in the `.iloc` changes). I am sure as @stephenwlin points out there are more user facing changes like this (prob not too many, and most prob hit this code-block anyhow)\n\ncan anyone think of a place where there are user-facing posssibilites of negative indices except:\n- `_ixs/icol`\n- `frame/take`\n\nother uses of negative indices denote labels (or hit `_ixs`) AFAICT\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788557",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788557",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4NTU3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:08:10Z",
    "updated_at": "2013-03-12T17:08:10Z",
    "author_association": "NONE",
    "body": "no bound checking ocassionaly bites with a kindly segfault, #3011, #2775/#2778\nare all those cython functions really in the inner loop?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788605",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4NjA1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:09:03Z",
    "updated_at": "2013-03-12T17:09:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, if all the indices are generated internally and the algorithms to do so are not buggy, then it's technically superfluous to check--there's just no guarantee that that's the case\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4ODA4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:12:29Z",
    "updated_at": "2013-03-12T17:12:29Z",
    "author_association": "NONE",
    "body": "obviously that wasn't the case in those examples.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788861",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4ODYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:13:30Z",
    "updated_at": "2013-03-12T17:13:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "so why don't we do negative index conversion in `frame/take`, and make that only user facing (and can call from `_ixs`), then @stephenwlin can fix the take bugs independently? could also have a flag (for safety sake?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTAz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:14:16Z",
    "updated_at": "2013-03-12T17:14:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p of course :) just saying there's a case for why it wasn't there to begin with (i didn't take it out, it was turned off before I started working on it)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788904",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788904",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTA0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:14:17Z",
    "updated_at": "2013-03-12T17:21:50Z",
    "author_association": "NONE",
    "body": "generate_code.py uses @cython.boundscheck(False) across the board. maybe\nthis can be revamped with the conversion to fused types.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14788962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14788962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14788962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg4OTYy",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:15:14Z",
    "updated_at": "2013-03-12T17:15:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback maybe, i don't know how many user-facing functions there are to look at actually, it's a bit hard to tell what's user-facing and what isn't in python sometimes...it might be less of a deal than i think it is\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14789037",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14789037",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14789037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg5MDM3",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:16:18Z",
    "updated_at": "2013-03-12T17:16:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p i don't think we should pay for per-access bounds checking though, that'll be O(prod(shape)) overhead, unless cython is smart enough to factor out the checks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14789422",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14789422",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14789422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzg5NDIy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:21:29Z",
    "updated_at": "2013-03-12T17:21:29Z",
    "author_association": "NONE",
    "body": "Wouldn't it be a function of access count rather then strictly the shape of the array? probably most \ncython code does do significant work, so point taken in any case. \n\nI'm just thinking of reducing bug surface area, perhaps integrating a boundscheck preamble into the \ncython code would be better.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14790701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14790701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14790701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzkwNzAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T17:40:30Z",
    "updated_at": "2013-03-12T17:51:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "So user facing take is broken as well for negative indicies (because `take_nd` doesn like negative indices)\n(and the 2 cases below have to do whether the internals method take is called or the indexers take is called\n\n```\nIn [5]: df = pd.DataFrame(np.random.rand(8,3))\n\nIn [6]: df.take([0,1,-1])\nOut[6]: \n          0         1         2\n0  0.610429  0.185237  0.174880\n1  0.059846  0.290267  0.012082\n7       NaN       NaN       NaN\n\nIn [7]: df\nOut[7]: \n          0         1         2\n0  0.610429  0.185237  0.174880\n1  0.059846  0.290267  0.012082\n2  0.719515  0.322478  0.953638\n3  0.450850  0.374526  0.781923\n4  0.588323  0.951343  0.995791\n5  0.385074  0.276861  0.720896\n6  0.149348  0.553080  0.652363\n7  0.554311  0.635818  0.148375\n\nIn [8]: df.take([0,1,-1],axis=1)\nOut[8]: \n          0         1   2\n0  0.610429  0.185237 NaN\n1  0.059846  0.290267 NaN\n2  0.719515  0.322478 NaN\n3  0.450850  0.374526 NaN\n4  0.588323  0.951343 NaN\n5  0.385074  0.276861 NaN\n6  0.149348  0.553080 NaN\n7  0.554311  0.635818 NaN\n\n```\n\nbut works for mixed\n\n```\nIn [9]: df['test'] = 'foo'\n\nIn [10]: df.take([0,1,-1],axis=1)\nOut[10]: \n          0         1 test\n0  0.610429  0.185237  foo\n1  0.059846  0.290267  foo\n2  0.719515  0.322478  foo\n3  0.450850  0.374526  foo\n4  0.588323  0.951343  foo\n5  0.385074  0.276861  foo\n6  0.149348  0.553080  foo\n7  0.554311  0.635818  foo\n```\n\nbut not in mixed with axis=0\n\n```\nIn [3]: df = pd.DataFrame(dict(A = np.random.rand(8), B = 'foo'), index=range(8))\n\nIn [4]: df.take([-1],axis=0)\nException: Indices must be nonzero and less than the axis length\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14793767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14793767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14793767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzkzNzY3",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T18:25:18Z",
    "updated_at": "2013-03-12T18:26:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "so should negative indices be allowed everywhere where the user can supply indices, or just through `.ix` and friends?\n\nanyway, regardless of what we allow or don't allow, we need to make sure any user-supplied indices are sanitized before being passed into functions that assume properly bounded indices, so disambiguating the two is important.\n\n@y-p maybe just add an option to generate.py to add bounds checking as a debug tool? also, i'm pretty sure it's only the `take_*` functions that are a potential problem, there's almost certainly no user-supplied indicies going into `pad_*`, `backfill_*`, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14794217",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14794217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14794217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzk0MjE3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T18:31:53Z",
    "updated_at": "2013-03-12T18:31:53Z",
    "author_association": "NONE",
    "body": "Sure, but that's useful as a way to track down segfaults _after_ users report them.\n\nsanitizing is good, but probably less effort to \"head them off at the pass\" in the \ncython function preamble then tracking down all the code paths that lead there.\n\n#3011 was indeed groupby_int64 delegating to take_1d in numpy_helper.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14794670",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14794670",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14794670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzk0Njcw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T18:39:22Z",
    "updated_at": "2013-03-12T18:39:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, i guess that's ok, but if it's just `take_*` etc., we can at least minimize the performance hit but writing the bounds checks manually so they don't repeat checks unnecessarily, rather than relying on the cython ones.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14794897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14794897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14794897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzk0ODk3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T18:43:15Z",
    "updated_at": "2013-03-12T18:43:24Z",
    "author_association": "NONE",
    "body": "+1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14795375",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14795375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14795375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzk1Mzc1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T18:50:49Z",
    "updated_at": "2013-03-12T18:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh actually, i guess that's what you meant by doing it in the preamble...yeah that's fine; actually, you can be a bit more efficient than that (for the normal case) by doing it as you iterate, instead of iterating twice...i'll do that for now until we resolve the semantics/sanitization issue\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14795420",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14795420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14795420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzk1NDIw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T18:51:31Z",
    "updated_at": "2013-03-12T18:51:31Z",
    "author_association": "NONE",
    "body": "In #3011 take_1d was in the inner loop, and it's really the caller that should have done the \ncheck in this case. Though it was another cython function.\n\nProbably need to do case-by-case unfortunately.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14795629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2892#issuecomment-14795629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2892",
    "id": 14795629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Nzk1NjI5",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-12T18:54:57Z",
    "updated_at": "2013-03-12T18:54:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p yeah, in `take_1d` there's only one loop so it needs to check every index anyway, but `take_2d_*` etc. can do it column-by-column or row-by-row during the outer loop\n"
  }
]
