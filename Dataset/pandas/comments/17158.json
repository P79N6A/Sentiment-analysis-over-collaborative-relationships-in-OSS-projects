[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319839371",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17158#issuecomment-319839371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17158",
    "id": 319839371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTgzOTM3MQ==",
    "user": {
      "login": "nathanielatom",
      "id": 3137319,
      "node_id": "MDQ6VXNlcjMxMzczMTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3137319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielatom",
      "html_url": "https://github.com/nathanielatom",
      "followers_url": "https://api.github.com/users/nathanielatom/followers",
      "following_url": "https://api.github.com/users/nathanielatom/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielatom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielatom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielatom/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielatom/orgs",
      "repos_url": "https://api.github.com/users/nathanielatom/repos",
      "events_url": "https://api.github.com/users/nathanielatom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielatom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T01:04:34Z",
    "updated_at": "2017-08-03T01:04:34Z",
    "author_association": "NONE",
    "body": "Also, some info on my use case:\r\n\r\nI want to apply the `tz_localize` method to each Timestamp in the series. I originally tried `tz_localize` on the series itself, but that raised \r\n```\r\nTypeError: index is not a valid DatetimeIndex or PeriodIndex\r\n```\r\nI realize it is possible to achieve this by using `reindex`, but I was wondering if it was possible to do this with Timestamps as Series values as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319918429",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17158#issuecomment-319918429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17158",
    "id": 319918429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTkxODQyOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T09:30:57Z",
    "updated_at": "2017-08-03T09:30:57Z",
    "author_association": "MEMBER",
    "body": "@nathanielatom you can use `tz_localize`/`tz_convert` on the Series through the `dt` accessor:\r\n\r\n```\r\nIn [19]: ts.dt.tz_convert('UTC')\r\nOut[19]: \r\n0   2017-08-01 00:08:46.110998+00:00\r\n1   2017-08-02 00:08:46.110998+00:00\r\n2   2017-08-03 00:08:46.110998+00:00\r\ndtype: datetime64[ns, UTC]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319919390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17158#issuecomment-319919390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17158",
    "id": 319919390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTkxOTM5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-03T09:34:58Z",
    "updated_at": "2017-08-03T09:34:58Z",
    "author_association": "MEMBER",
    "body": "Further, the reason you get the output you see with `apply`, is because apply will first try to invoke the function on all values (which are holded under the hood as a DatetimeIndex, although it are the values of the Series), and only if that fails, will call the function on each element.\r\n\r\nIf you adapt the function a little bit to raise when it doesn't get a scalar value, you see the expected output:\r\n```\r\nIn [21]: def func(elem):\r\n    ...:     assert not hasattr(elem, 'ndim')\r\n    ...:     print(type(elem))\r\n    ...:     return elem\r\n    ...: \r\n\r\nIn [22]: ts.apply(func)\r\n<class 'pandas._libs.tslib.Timestamp'>\r\n<class 'pandas._libs.tslib.Timestamp'>\r\n<class 'pandas._libs.tslib.Timestamp'>\r\nOut[22]: \r\n0   2017-07-31 20:08:46.110998-04:00\r\n1   2017-08-01 20:08:46.110998-04:00\r\n2   2017-08-02 20:08:46.110998-04:00\r\ndtype: datetime64[ns, pytz.FixedOffset(-240)]\r\n```\r\n"
  }
]
