[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43789545",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43789545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43789545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzg5NTQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T17:36:49Z",
    "updated_at": "2014-05-21T17:36:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "and? lots of pandas operations do this\nmore efficient this way\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43796906",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43796906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43796906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzk2OTA2",
    "user": {
      "login": "shashispace",
      "id": 6653139,
      "node_id": "MDQ6VXNlcjY2NTMxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6653139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shashispace",
      "html_url": "https://github.com/shashispace",
      "followers_url": "https://api.github.com/users/shashispace/followers",
      "following_url": "https://api.github.com/users/shashispace/following{/other_user}",
      "gists_url": "https://api.github.com/users/shashispace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shashispace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shashispace/subscriptions",
      "organizations_url": "https://api.github.com/users/shashispace/orgs",
      "repos_url": "https://api.github.com/users/shashispace/repos",
      "events_url": "https://api.github.com/users/shashispace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shashispace/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T18:35:37Z",
    "updated_at": "2014-05-21T18:35:37Z",
    "author_association": "NONE",
    "body": "Hmmn... that's probably true. But it leads to newbies wasting lots of time... anyways, I thought consistency should be preferred over speed. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43798722",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43798722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43798722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzk4NzIy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T18:50:56Z",
    "updated_at": "2014-05-21T18:50:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a very common idiom on python in general; iterating over a list-like. You should NEVER modify something you are iterating over. this is NOT a copy in python space either (though I think it IS allowed to be a copy, maybe in python 3 it is, not sure).\n\nSo maybe a doc warning in that section would be good, informing users that setting values using ANY of the iteration methods IS NOT a good idea.\n\ncan you do a pull-request?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43808883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43808883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43808883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODA4ODgz",
    "user": {
      "login": "shashispace",
      "id": 6653139,
      "node_id": "MDQ6VXNlcjY2NTMxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6653139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shashispace",
      "html_url": "https://github.com/shashispace",
      "followers_url": "https://api.github.com/users/shashispace/followers",
      "following_url": "https://api.github.com/users/shashispace/following{/other_user}",
      "gists_url": "https://api.github.com/users/shashispace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shashispace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shashispace/subscriptions",
      "organizations_url": "https://api.github.com/users/shashispace/orgs",
      "repos_url": "https://api.github.com/users/shashispace/repos",
      "events_url": "https://api.github.com/users/shashispace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shashispace/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T20:22:26Z",
    "updated_at": "2014-05-21T20:22:26Z",
    "author_association": "NONE",
    "body": "So why not make it consistent and return a copy even for homogenous dataframes? (I guess you've already said that it is more efficient.)\n\nI had this issue with something I was running - and I couldn't figure out what was going on, cause a toy example I constructed behaved differently (cuase all its columns were same type) from the main code. I think others would have this issue too - it would be best to make it consistent between the two cases. I have nothing against returning a copy.\n\nSorry, I don't know enough programming to create a proper pull request... embarrassing, I know. I should dive into this stuff. It would be good for me... any tips on how to get started?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43809035",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43809035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43809035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODA5MDM1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T20:23:44Z",
    "updated_at": "2014-05-21T20:23:44Z",
    "author_association": "MEMBER",
    "body": "Check the wiki there are a lot of tips on contributing\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43818490",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43818490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43818490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODE4NDkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T21:46:15Z",
    "updated_at": "2014-05-21T21:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shashispace well performance is worth it not to make a copy when people do `iterrows` (which FYI, is never necessary as there are much better methods). so a doc warning would be in order but that's about it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43820398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43820398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43820398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODIwMzk4",
    "user": {
      "login": "shashispace",
      "id": 6653139,
      "node_id": "MDQ6VXNlcjY2NTMxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6653139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shashispace",
      "html_url": "https://github.com/shashispace",
      "followers_url": "https://api.github.com/users/shashispace/followers",
      "following_url": "https://api.github.com/users/shashispace/following{/other_user}",
      "gists_url": "https://api.github.com/users/shashispace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shashispace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shashispace/subscriptions",
      "organizations_url": "https://api.github.com/users/shashispace/orgs",
      "repos_url": "https://api.github.com/users/shashispace/repos",
      "events_url": "https://api.github.com/users/shashispace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shashispace/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T22:04:29Z",
    "updated_at": "2014-05-21T22:04:29Z",
    "author_association": "NONE",
    "body": "Sounds good. Thanks for indulging me. What are some of the better ways to iterate? I was doing:\nfor i in df.index:\n    df.ix[i,'a'] += 1\n\n(that's a bad example, but you get the idea - I need to pick the column inside the loop...) I found this way considerably slower, though I didn't benchmark it or anything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43820814",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43820814",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43820814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODIwODE0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T22:09:03Z",
    "updated_at": "2014-05-21T22:09:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "you don't iterate or use loops, use a mask instead, e.g.\n\n`df.ix[df['a']>5,'a'] += 1`\n\nthe `df['a']>5` produces a mask, see here: http://pandas-docs.github.io/pandas-docs-travis/indexing.html#boolean-indexing\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43823912",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43823912",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43823912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODIzOTEy",
    "user": {
      "login": "shashispace",
      "id": 6653139,
      "node_id": "MDQ6VXNlcjY2NTMxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6653139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shashispace",
      "html_url": "https://github.com/shashispace",
      "followers_url": "https://api.github.com/users/shashispace/followers",
      "following_url": "https://api.github.com/users/shashispace/following{/other_user}",
      "gists_url": "https://api.github.com/users/shashispace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shashispace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shashispace/subscriptions",
      "organizations_url": "https://api.github.com/users/shashispace/orgs",
      "repos_url": "https://api.github.com/users/shashispace/repos",
      "events_url": "https://api.github.com/users/shashispace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shashispace/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T22:43:18Z",
    "updated_at": "2014-05-21T22:43:18Z",
    "author_association": "NONE",
    "body": "I think I didn't explain it well, let me try again:\n\nI have dataframe with large number of columns, and I need to add a number to a different column in each row. In row one, I might add to 'a', in row 13, I might need to add to column 'b' etc.\n\nWriting this, I realize that I can iterate over the columns.. which would be way more efficient and I can write vectorized code for that. I can't remember if matlab allowed writing to random columns in different rows, is there a vectorized way to do that in pandas?\n\nThanks so so much - greatly appreciate your replies. It's definitely motivated me to get more involved than just using pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43824827",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43824827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43824827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODI0ODI3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T22:54:32Z",
    "updated_at": "2014-05-21T22:54:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "pandas aligns, so just create the rhs with the values and it will work, e.g. something like\n\n```\ns = Series([1,2,3],index=[10,12,20])\ndf.loc[:,['a','c']] += s\n```\n\nwould add the indicates values from s in columns a and c\n\nso easiest to do this column by column, of course depending how you are determining what you are adding in the first place.\n\nmight be even easier to simply construct a frame that you are adding, e.g.\n\n```\nframe_to_add = DataFrame(a = Series([1,2,3],index=[10,20,30]), c = Series([1,2,3],index=[4,5,6]))\ndf += frame_to_add.fillna(0)\n```\n\ndoes it all at once\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43825505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43825505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43825505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODI1NTA1",
    "user": {
      "login": "shashispace",
      "id": 6653139,
      "node_id": "MDQ6VXNlcjY2NTMxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6653139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shashispace",
      "html_url": "https://github.com/shashispace",
      "followers_url": "https://api.github.com/users/shashispace/followers",
      "following_url": "https://api.github.com/users/shashispace/following{/other_user}",
      "gists_url": "https://api.github.com/users/shashispace/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shashispace/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shashispace/subscriptions",
      "organizations_url": "https://api.github.com/users/shashispace/orgs",
      "repos_url": "https://api.github.com/users/shashispace/repos",
      "events_url": "https://api.github.com/users/shashispace/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shashispace/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-21T23:02:46Z",
    "updated_at": "2014-05-21T23:02:46Z",
    "author_association": "NONE",
    "body": "awesome. thanks again.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43880041",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43880041",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43880041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgwMDQx",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T12:15:58Z",
    "updated_at": "2014-05-22T12:15:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \n\n> make a copy when people do iterrows (which FYI, is never necessary as there are much better methods)\n\nI kind of use iterrows when there's a row-by-row operation that includes dot-product of a subset of columns, i.e. something like:\n\n``` python\n\nx = pd.DataFrame(..., columns=['a', 'b', 'c', 'timestamp'])\n\nfor (_, abc), timestamp in izip(x[['a', 'b', 'c']].iterrows(),\n                                x['timestamp']):\n    m = get_matrix(timestamp)\n    yield m.dot(abc)\n```\n\nIs there a better way to perform something like that?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43881175",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43881175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43881175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgxMTc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T12:27:47Z",
    "updated_at": "2014-05-22T12:27:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr no that is reasonable (I would do this by transposing first and use `iteritems()` though if its a large frame I think you might get better slicing perf as you are indexing off of the info axis if I am reading what you are doing correctly.\n\nI often have this issue with say panels (and higher ndims) when I am doing an apply like operation, need to transpose to get good slicing perf (and also want to store them in consistent dimensional space).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43882005",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43882005",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43882005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgyMDA1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T12:36:54Z",
    "updated_at": "2014-05-22T12:36:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wouldn't timestamp column force it to be cast to object dtype when transposed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43882338",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43882338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43882338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODgyMzM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T12:40:39Z",
    "updated_at": "2014-05-22T12:40:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "subset then transpose I think would work (assume abc are floats)\n\ne.g. \n\n```\nfor (_, abc), timestamp in izip(df[['a','b','c']].T.iteritems(), df['timestamp']):\n   ...\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43884357",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43884357",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43884357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODg0MzU3",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T13:02:29Z",
    "updated_at": "2014-05-22T13:02:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, that. I didn't see any tangible improvement in 0.12.0 (which we're still using) so I went with the natural way (transpose does help with `to_dict` though).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43884508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-43884508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 43884508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODg0NTA4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-22T13:04:07Z",
    "updated_at": "2014-05-22T13:04:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeh I suspect your perf limit will be from the actual operation (and not slicing)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/87897880",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7194#issuecomment-87897880",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7194",
    "id": 87897880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3ODk3ODgw",
    "user": {
      "login": "dashesy",
      "id": 873905,
      "node_id": "MDQ6VXNlcjg3MzkwNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/873905?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dashesy",
      "html_url": "https://github.com/dashesy",
      "followers_url": "https://api.github.com/users/dashesy/followers",
      "following_url": "https://api.github.com/users/dashesy/following{/other_user}",
      "gists_url": "https://api.github.com/users/dashesy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dashesy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dashesy/subscriptions",
      "organizations_url": "https://api.github.com/users/dashesy/orgs",
      "repos_url": "https://api.github.com/users/dashesy/repos",
      "events_url": "https://api.github.com/users/dashesy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dashesy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-31T01:59:23Z",
    "updated_at": "2015-03-31T01:59:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "In [my use-case](https://github.com/dashesy/pandas-tsdb/blob/master/influxdb/indb_pd.py) I have a datafame that I need to transform to a list of dictionaries (to record to a timeseries db), and I was seeing odd behaviour until I read the docs (more carefully) and realized iterrows actually may change the underlying data type, like integer could become double. Now I am going to use itertuples as suggested, but just wanted to mention that sometimes the reason for iterating rows is some sort of transformation and not really math, so apply is not intuitive.\n"
  }
]
