[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24526953",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24526953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24526953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI2OTUz",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T17:12:37Z",
    "updated_at": "2013-09-16T17:12:37Z",
    "author_association": "NONE",
    "body": "The behaviour in the test case does look like what I'm hoping for, though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24527821",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24527821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24527821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI3ODIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T17:24:29Z",
    "updated_at": "2013-09-16T17:24:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "updated....\n\nunfortunately not sure what if anything to do about **getitem** and ix for a floating index...hmm\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24529807",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24529807",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24529807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI5ODA3",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T17:51:06Z",
    "updated_at": "2013-09-16T17:51:06Z",
    "author_association": "NONE",
    "body": "For **getitem** and ix, one thing to do is to fix an independent bug that\nforms a superset of this one: that when doing offset indexing, you\nshouldn't call int(), you should call .**index**(). float.**index** raises\nan error, so this would at least tell us that s.ix[4.0] and s.ix[4.0:5]\ncan't be valid offset indexes. Notice that right now:\n\nIn [20]: pandas.Series(np.arange(5))[3.5]\nOut[20]: 3\n\nUsing .**index** is how Python indexing works in general (e.g., what lists\nand tuples do), and it was actually added to Python aeons ago specifically\nso numpy would have a solid standard to be compatible with. Sadly numpy's\nonly now in the process of switching to using this. In 1.8, doing something\nlike np.arange(5)[3.5] will raise a DeprecationWarning, and then in 1.9 or\n1.10 or so it will become an error. But pandas could probably get ahead of\nthe game here if it wanted to. (And should probably keep up in any case!)\n\nThat does still leave the question of what to do with s.ix[4:5] when\nthere's a floating point index which implies that in principle this could\nalways refer to a label-based span. But I guess for backwards compatibility\nyou have to leave that as doing offset-based indexing, so that's that?\n\nOn Mon, Sep 16, 2013 at 6:24 PM, jreback notifications@github.com wrote:\n\n> updated....\n> \n> unfortunately not sure what if anything to do about _getitem_ and ix for\n> a floating index...hmm\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4850#issuecomment-24527821\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24536396",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24536396",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24536396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTM2Mzk2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T19:16:23Z",
    "updated_at": "2013-09-16T19:16:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith updated...take a look\n\nI stub-implemented Float64Index (which means its just a new class, but is still dtype=object)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24548548",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24548548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24548548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTQ4NTQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T22:02:44Z",
    "updated_at": "2013-09-16T22:02:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith \n\nits pretty easy to make `s.ix[2:5]` be the same as `s.ix[2.0:5]`...e.g. make it a float selection\nas this is very rational\n\nhowever `s[2:5]` will be a positional selection, UNLESS since I know this is a float index we make these do slicing selection on the axis (e.g. NO FALLBACK)\n\nIf I basically eliminate fallback, the all 8 of these cases will return the same.\n\nthat seems good (and this will ONLY happen for a float based index).\n\nits an API change, but I don't think too big\n\nthoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24551029",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24551029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24551029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTUxMDI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T22:45:08Z",
    "updated_at": "2013-09-16T22:45:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith \n\nI have removed the fallback stuff, will have to revist at some point. I can take it out, but then semantics become very weird.\n\ne.g.\n\n`s[4]` or `s[4.0]` should do what? KeyError because the float is not there (which is what I think it should do), but\nactually making that happen is a bit non-trivial.\n\nI think what exists now does a pretty good job via `.loc`. (and of course you have `.iloc`), so you can decide what you want.\n\nWith a `Float64Index` **getitem** and `.ix` just have different (and weird) semantics depending on what you are doing. avoid them, until/unless we drop fallback indexing (on FloatIndexes) entirely.\n\nBut that will be another issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24599014",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24599014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24599014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTk5MDE0",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T15:47:20Z",
    "updated_at": "2013-09-17T15:47:20Z",
    "author_association": "NONE",
    "body": "Sorry, with all this back and forth I've gotten pretty lost, and I'm finding your notes just a hair too telegraphic to really follow. Would it be possible to summarize exactly what behavioural changes are now included in this PR?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24599626",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24599626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24599626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTk5NjI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T15:55:31Z",
    "updated_at": "2013-09-17T15:55:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith \n\nI updated the header of this PR\n\n3 changes (which are in order)\n- BUG: provide better .loc semantics on floating indicies\n- API: provide a stub-like implementation of Float64Index\n- BUG: raise on indexing with float keys on a non-float index\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24601151",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24601151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24601151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjAxMTUx",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T16:14:52Z",
    "updated_at": "2013-09-17T16:14:52Z",
    "author_association": "NONE",
    "body": "Sorry, not trying to be dense, but still pretty confused.\n- What are the \"better\" `.loc` semantics that you settled on in the end?\n- Does the addition of the Float64Index create any user-visible behavioural changes, or is it just laying the groundwork for future work?\n- From the tests I had the impression that you changed how `.ix` and `.__getitem__` work with floating indexes, but according to your summary now, you didn't touch these. Which is correct?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24602262",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24602262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24602262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjAyMjYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T16:30:10Z",
    "updated_at": "2013-09-17T16:30:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "look at the first example in the top of the PR, `loc` works under all slicing regimes to give the same result\n\n```\n# loc is clear about slicing on the values ONLY\n\nIn [2]: s.loc[2:5]\nOut[2]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [15]: s.loc[2.0:5.0]\nOut[15]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [16]: s.loc[2.0:5]\nOut[16]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [17]: s.loc[2.1:5]\nOut[17]: \n2.5    1\n5.0    2\ndtype: int64\n```\n\nThis is the 'same' as `.ix` but doesn't have fallback, that's the difference\n- `Float64Index` now exists, but its implementation is the same. Haven't really 'changed' anything\n  on it yet, so it is laying future groundwork\n- no changes to `[]` nor `ix`, these are tested elsewhere in full (I put in some tests, but commented them out) in the current version as they don't have the _correct_ semantics for `Float64Index`....I have a branch to 'fix' it, but seemed like too much of a change (and there were some loose ends), so I took it out.\n\nessentially I CAN remove fallback indexing entirely from `[]` and `ix` (so in reality `ix` would be the same as the new `loc`) FOR `Float64Index` - this will have to be a different PR.\n\nI believe the PR as is solves all of the issues that you brought up. You can simply use `loc` for all of your indexing needs with `Float64Index` and it will do what you expect. There still will remain idiosyncrasies with `[]` and `ix` wrt `Float64Index`, but as I said above, too much changing at once.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24619510",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24619510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24619510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE5NTEw",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T20:27:42Z",
    "updated_at": "2013-09-17T20:27:42Z",
    "author_association": "NONE",
    "body": "Okay, got it now.\n\nThe `.loc` changes for floating point indexes look good to me.\n\nThe handling of the float truncation issue is still a bit wonky. You aren't testing what happens with a non-float-index Series, or with .iloc, when someone puts floats into a fancy index (list/ndarray) or slice, and I'm pretty sure at least slices will still do truncation in this case. And your code can't possibly be fully correct for integer indexing if it never refers to `.__index__`. But it does look better than it was!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24619730",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24619730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24619730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjE5NzMw",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T20:30:24Z",
    "updated_at": "2013-09-17T20:30:24Z",
    "author_association": "NONE",
    "body": "BTW this stuff in `_is_index_slice` that checks for floats being near integers looks dubious to me given these other changes, but not sure.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24623305",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24623305",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24623305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjIzMzA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T21:18:39Z",
    "updated_at": "2013-09-17T21:18:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith this whole fallback notion is wonky! (but is somewhat necessary). Its just that for a Float64Index, I think you never want fallback. Problem is only some of the logic is actually implemented thru the index, some is directly on **getitem** and such. You are welcome to take a stab (on top of this PR or independently) if you like. It is quite easy to break something while fixing another problem. Its like whack a mole.\n\nwhat would be appreciated is a larger set of tests with various kinds of indicies and the expections give various kinds of inputs.\n\ntest_indexing does quite a lot of this, but apparently some cases were missed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24691519",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24691519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24691519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjkxNTE5",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T19:17:51Z",
    "updated_at": "2013-09-18T19:17:51Z",
    "author_association": "NONE",
    "body": "All I'm saying with the \"wonky\" comment is that the behaviour of `Series(np.arange(5))[3.5]` should probably be consistent with the behaviour of `Series(np.arange(5))[3.5:4.5]`. This part has nothing to do with float indices, it just looks to me like an obvious inconsistency/bug in the PR.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24692736",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24692736",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24692736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjkyNzM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T19:34:45Z",
    "updated_at": "2013-09-18T19:34:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "there are some inconsistenties...trying to nail them down...but this is quite complicated!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24693572",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24693572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24693572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjkzNTcy",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T19:46:14Z",
    "updated_at": "2013-09-18T19:46:14Z",
    "author_association": "NONE",
    "body": "Yeah, I hear that!\n\nAnother minor thought that just occurred to me while writing some code that instantiates these: it would be nice if explicitly calling the `Float64Index` constructor would guarantee that you actually get a `Float64Index` (and error out otherwise). Anyone who takes the trouble to call it directly probably is doing so b/c they want to make sure that they're getting its special behaviour. (Of course in my code for now I can't assume `Float64Index` exists so I'll just trust that using an ndarray with float64 dtype will do the job, which I think is right. But still, it'd be nice.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24693759",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24693759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24693759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjkzNzU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T19:48:37Z",
    "updated_at": "2013-09-18T19:48:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "`s = Series([0,1,2],['foo','bar'','bar'])`\n\nwhat should this yield for (this is why this is tricky) as you can make a case that `s[2.0]` shouln't work\nat all, but at the same time when do you decide that\n\n```\ns[2]\ns[2.0]\ns.loc[2]\ns.loc[2.0]\ns.ix[2]\ns.ix[2.0]\ns.iloc[2]\ns.iloc[2.0]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24693824",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24693824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24693824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjkzODI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T19:49:34Z",
    "updated_at": "2013-09-18T19:49:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "in answer to your question, `Float64Index` is still dtype == 'object', but will be inferred if you have at least 1 floating point value (or the dtype of the index is `np.float`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24695378",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24695378",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24695378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk1Mzc4",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:12:26Z",
    "updated_at": "2013-09-18T20:12:26Z",
    "author_association": "NONE",
    "body": "Since there's obviously no label-based indexing going on here, we only have\nto consider what should happen for integer/offset-based indexing.\n\nThe general python rule _for integer/offset-based_ indexing (used by e.g.\nlists), and the one that numpy will switch to in 1.9 or so, is that using\nan object with type 'float' is _always_ an error, no matter whether this\nfloat happens to have an integer value. (Or more specifically, the rule is\nthat an object must either be of type 'int', or else it must have a\n.**index**() method which returns an int.) So every example there with\n[2.0] should become an error eventually, possibly after a deprecation\nperiod.\n\nThe one other questionable case for me is s.loc[2]. I actually think this\nshould be an error -- currently .loc's logic is quite confusing and\n.ix-like, where when it sees an integer it uses some heuristics to guess\nwhether this is a label or an offset. AFAICT the rule right now is:\n- if you have an Int64Index, then that means that all labels are integers,\n  and THEREFORE all integers passed to loc must be labels.\n- if you have a generic Index, then your labels could be _any_ random\n  (hashable) python objects; and in particular, they might or might not be\n  integers, and THEREFORE integers passed to loc might or might not be labels.\n\nThe problem is that when you actually lay out the logic like this you can\nsee that those two THEREFOREs are completely invalid conclusions, logically\nspeaking :-). Straight up post hoc ergo propter hoc.\n\nIMHO to make .loc predictable, the fallback to integer/offset-based\nindexing should only be allowed if the Index can guarantee that _no_ labels\nare integers. (And by \"integers\" we mean, compare == to a Python integer.\nWhich Python floats can do.) So that would mean that .loc ought to be able\nto do integer/offset-based indexing for DatetimeIndex and MultiIndex, but\nnot Index or Int64Index or Float64Index.\n\nIn practice I guess the only _common_ situations where people use\nplain-old-generic 'Index' right now, once Float64Index is added, is for\nall-string indexes. If the above rule is adopted -- the one that says for a\ngeneric Index that can contain anything, .loc must _always_ be label based,\nnever fall back to being integer/offset-based -- then people using\nall-string indexes would probably be happier if a specialized StringIndex\nwas created that relaxed this rule.\n\nOn Wed, Sep 18, 2013 at 8:48 PM, jreback notifications@github.com wrote:\n\n> s = Series([0,1,2],['foo','bar'','bar'])\n> \n> what should this yield for (this is why this is tricky) as you can make a\n> case that s[2.0] shouln't work\n> at all, but at the same time when do you decide that\n> \n> s[2]\n> s[2.0]\n> s.loc[2]\n> s.loc[2.0]\n> s.ix[2]\n> s.ix[2.0]\n> s.iloc[2]\n> s.iloc[2.0]\n> ``\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4850#issuecomment-24693759\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24695513",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24695513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24695513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk1NTEz",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:14:12Z",
    "updated_at": "2013-09-18T20:14:12Z",
    "author_association": "NONE",
    "body": "Shouldn't the rule be, Float64Index is inferred if you have _all_ floating\npoint values? (Or maybe some integers mixed in -- np.asarray([1.0, 2])\nupcasts the integer to a float, which is fine.)\n\nBasicaly Index([1.0, \"hi\", None]) should not return a Float64Index, is what\nI'm saying :-).\n\nOn Wed, Sep 18, 2013 at 8:49 PM, jreback notifications@github.com wrote:\n\n> in answer to your question, Float64Index is still dtype == 'object', but\n> will be inferred if you have at least 1 floating point value (or the dtype\n> of the index is np.float)\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4850#issuecomment-24693824\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24695671",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24695671",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24695671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk1Njcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:16:11Z",
    "updated_at": "2013-09-18T20:16:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "no...`.loc` for both cases will error (now and in 0.12), ALWAYS, that's the point, it NEVER does fallback at ALL\n\nand can't just give up on floating point, e.g. 2.0 as that's the default now\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24696157",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24696157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24696157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk2MTU3",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:22:39Z",
    "updated_at": "2013-09-18T20:22:39Z",
    "author_association": "NONE",
    "body": "Oh, well, I actually like the rule that s.loc[2] should always error out\n(unless there is an item labeled 2 in the index), and certainly if that's\nthe idea then I was overthinking it.\n\nBut that's not actually how it works in my 0.12.0:\n\nIn [6]: pandas.**version**\nOut[6]: '0.12.0'\n\nIn [7]: s = pandas.Series([0,1,2],['foo','bar','bar'])\n\nIn [8]: s.loc[2]\nOut[8]: 2\n\nAFAICT if you have an Int64Index, then .loc acts the way you're saying, and\nif you don't, then .loc will fallback. That's what I was basing my analysis\nabove on.\n\nOn Wed, Sep 18, 2013 at 9:16 PM, jreback notifications@github.com wrote:\n\n> no....loc for both cases will error (now and in 0.12), ALWAYS, that's the\n> point, it NEVER does fallback at ALL\n> \n> and can't just give up on floating point, e.g. 2.0 as that's the default\n> now\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4850#issuecomment-24695671\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24696535",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24696535",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24696535,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk2NTM1",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:28:04Z",
    "updated_at": "2013-09-18T20:28:04Z",
    "author_association": "NONE",
    "body": "And on the floating point thing -- not sure what you mean by \"giving up on\nfloating point\". If you're just saying that we have to be careful about\nchanging how .ix and **getattr** work because of compatibility stuff, then\nthat's fine with me... that's why it's going to take numpy a few releases\nbefore it can make np.arange(10)[2.0] into an error. But it will eventually.\n\nOn Wed, Sep 18, 2013 at 9:16 PM, jreback notifications@github.com wrote:\n\n> no....loc for both cases will error (now and in 0.12), ALWAYS, that's the\n> point, it NEVER does fallback at ALL\n> \n> and can't just give up on floating point, e.g. 2.0 as that's the default\n> now\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4850#issuecomment-24695671\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24696781",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24696781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24696781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk2Nzgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:31:18Z",
    "updated_at": "2013-09-18T20:31:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith actually that `.loc[2]` is a bug (separate).....way too many cases here\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24696904",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24696904",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24696904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk2OTA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:33:02Z",
    "updated_at": "2013-09-18T20:33:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith no that's exactly the point\n\ncurrently `s[2]` and `s[2.0]` work. The argument is that the 2nd should NOT work (all for that), but currently\nit does and pretty hard to fix w/o dropping support entirely.\n\nindexing (probably historical) has lots and lots of cases. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24697458",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24697458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24697458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk3NDU4",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:40:50Z",
    "updated_at": "2013-09-18T20:40:50Z",
    "author_association": "NONE",
    "body": "Okay, yeah.\n\nSo you asked about what [2.0] and [2] should do in all the various cases\nfor s = Series([0,1,2],['foo','bar','bar'])\n\nLet me try and sum up my answer now that we're maybe on the same page :-)\n\n1) All of the [2.0] cases should eventually be errors. When and how this\nhappens is up to you guys, but that's a release engineering problem, not a\nconceptual design problem, so not _my_ problem ;-).\n2) IF .loc is supposed to fall back to integer indexing in some cases, it\nshouldn't do that for a plain-old-Index.\n3) OTOH, IF .loc is _not_ supposed to fall back to integer indexing, then\nobviously .loc[2] should be an error.\n\nSumming up: assuming that .loc is never supposed to fall back, then here's\nwhat ought to happen in each case:\n\ns[2]        # ok\ns[2.0]      # error (someday)\ns.loc[2]    # error\ns.loc[2.0]  # error\ns.ix[2]     # ok\ns.ix[2.0]   # error (someday)\ns.iloc[2]   # ok\ns.iloc[2.0] # error (someday)\n\nDoes that help...?\n\nOn Wed, Sep 18, 2013 at 9:33 PM, jreback notifications@github.com wrote:\n\n> @njsmith https://github.com/njsmith no that's exactly the point\n> \n> currently s[2] and s[2.0] work. The argument is that the 2nd should NOT\n> work (all for that), but currently\n> it does and pretty hard to fix w/o dropping support entirely.\n> \n> indexing (probably historical) has lots and lots of cases.\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4850#issuecomment-24696904\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24697670",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24697670",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24697670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk3Njcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-18T20:43:50Z",
    "updated_at": "2013-09-18T20:43:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith ok....I think I have tests for all scalar indexing (and as above should be case), except the somedays are right now working (e.g. there is fallback on `ix/[]` (the `iloc` doesn't fallback so much as allow a convert of `2.0` to `2`)\n\nmaybe eventually eliminate that (as you suggest)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24768804",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24768804",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24768804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzY4ODA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T19:59:57Z",
    "updated_at": "2013-09-19T19:59:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith \n\nmajor effort here!\n\nfor net-net not a whole lot of outward changes, except now float indexing works pretty nicely\nread the docs and try out; whole lot of tests\n\nstill a couple of warts, e.g. `iloc` coerces exact floats to ints rather than raise in slicing as does `[]/ix` for scalar accessors, but these are pretty minor\n\nfloat indexes should be pretty predictible as slicing will ALWAYS be on the values for `[],ix,loc`, while `iloc` ALWAYS is positional\n\nother types of indexing are pretty unaffected (except some more `TypeError` in invalid slicing/scalar indexing cases)\n\nwhew!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24769092",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24769092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24769092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzY5MDky",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T20:04:38Z",
    "updated_at": "2013-09-19T20:04:38Z",
    "author_association": "NONE",
    "body": "Wow, I'll take a look!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24772719",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4850#issuecomment-24772719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4850",
    "id": 24772719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzcyNzE5",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-19T20:57:19Z",
    "updated_at": "2013-09-19T20:57:19Z",
    "author_association": "NONE",
    "body": "Okay, think that's all my minor comments. This is awesome and much appreciated!\n\nMy one major question is this: having slept on it, I find myself coming around to your argument yesterday that on `Float64Index`, `__getitem__` and `.ix` should _never_ do fallback. There's precedent for this in that `Int64Index` never does fallback for `__getitem__` and `.ix`, and `Float64Index` and `Int64Index` seem like they should behave the same way here -- in both cases what the index class is telling us is that integers are definitely the sort of thing that's being used for labels. (And in `Float64Index`'s case, non-integer floats as well, but that's not really relevant either way to the logic of whether one should do fallback AFAICT.) Also, I'm uncomfortable with the idea that `s[5]` and `s[5:6]` have completely different indexing semantics. And, most importantly, it would guarantee predictable behaviour for things like `.ix[5.0]` -- in the long run like we discussed this will probably never allow fallback, but it'd be nice to get the guarantee early for `Float64Index`, since `Float64Index` is exactly the case where floats falling back to integer indexing are going to be the most confusing and dangerous. Turning off fallback entirely would accomplish that. So... what do you think? I know it's more work, of course :-/\n\nOne more comment: once we've nailed down scalars and slicing, it'd probably be a good idea to go through and add some tests to make sure that fancy-indexing stuff like `s[[5, 6.5, 7]]` is treated consistently with scalars, just to avoid another round of weird surprises later. Intuitively, for all scalars `x`, `s[[x]]` should always give you the same thing as `s[x]` but with 1 extra dimension. So the tests should be pretty easy to generate?\n"
  }
]
