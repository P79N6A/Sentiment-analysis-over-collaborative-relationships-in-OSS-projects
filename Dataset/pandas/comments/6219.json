[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33882394",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6219#issuecomment-33882394",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6219",
    "id": 33882394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODgyMzk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-01T20:23:21Z",
    "updated_at": "2014-02-01T20:23:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you give an example of what you are thinking?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33888257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6219#issuecomment-33888257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6219",
    "id": 33888257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODg4MjU3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T00:40:30Z",
    "updated_at": "2014-02-02T00:44:46Z",
    "author_association": "NONE",
    "body": "Here's a comparison of memory use for a series of 8 char strings stored \nas `dtype='o'` (ragged strings).\nAssuming int32 used for the level/index value, since being in-memory \nmeans we can't handle billions rows anyway.\n\nI used pympler to measure the memory footprint of python string types.\n\n```\n   Description       rows  factors  Per-value [Bytes]  ndarray [MB]  Categorical [MB]\n0  bytestrings  100000000    10000                 48   4577.636719         381.92749\n1      unicode  100000000    10000                 88   8392.333984         382.30896\n```\n\nFor `N` rows with `n` distinct values and `s` being the mem size of a single value\n\nStoring it as an `Index` (ndarray) takes:\n`N*s`\nStoring it as a catagorical (labels and levels / factors and index values) takes: \n`N*sizeof(int32)` + `n*s`\n\nAgain, we don't treat categorical data as categorical and for string data in particular\nthe memory hit is huge since `s >> sizeof(int32)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33888492",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6219#issuecomment-33888492",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6219",
    "id": 33888492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODg4NDky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-02T00:54:03Z",
    "updated_at": "2014-02-02T00:54:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "if this is your usecase, then absolutely this is a great idea. I don't think it would be that difficult actually, you would simply inherit a new  block type, `Categorical` from `Object` (or maybe just `Block`, whatever is easier). Use it for object data that is string-like (and not just a random collection of mixed dtypes like `Object` can hold. use a different container and just provide the `Block` interface.\n\nAlready have all for the hash table stuff so easy to map locations to values (and back) for easy lookups. This is kind of like a `Sparse` container.\n\nDownside is that slicing because more tricky (and potentially slower because you have to 'figure' out what the slice is then create it as opposed to a direct slice of memory, but maybe not so bad because you don't need to potentially copy big memory either).\n\nA nice project. :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34056123",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6219#issuecomment-34056123",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6219",
    "id": 34056123,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDU2MTIz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-04T12:52:14Z",
    "updated_at": "2014-02-04T12:52:28Z",
    "author_association": "NONE",
    "body": "Closing in favor of  #5313, which already covers this.\n"
  }
]
