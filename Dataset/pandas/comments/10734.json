[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127413203",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-127413203",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 127413203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQxMzIwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-03T21:39:37Z",
    "updated_at": "2015-08-03T21:39:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can simply do this:\n\n```\nIn [13]: a.add(b)\nOut[13]: \n    a   b   c\n0 NaN NaN NaN\n1   6 NaN NaN\n2 NaN NaN NaN\n3 NaN NaN NaN\n4 NaN NaN NaN\n```\n\nor\n\n```\nIn [31]: a.add(b,fill_value=0)\nOut[31]: \n    a   b   c\n0   1 NaN NaN\n1   6   2 NaN\n2   5   3   1\n3 NaN NaN   2\n4 NaN NaN   3\n```\n\nmaybe explain what the issue you are seeing. Essentially you are doing this:\n\n```\nIn [32]: a1, b1 = a.align(b)\n\nIn [33]: a1\nOut[33]: \n    a   b   c\n0   1 NaN NaN\n1   3   2 NaN\n2 NaN   3 NaN\n3 NaN NaN NaN\n4 NaN NaN NaN\n\nIn [34]: b1\nOut[34]: \n    a   b   c\n0 NaN NaN NaN\n1   3 NaN NaN\n2   5 NaN   1\n3 NaN NaN   2\n4 NaN NaN   3\n```\n\nso in this example is IS working as adverisied. The `NaN`'s are coming from the addition.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127434702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-127434702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 127434702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQzNDcwMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-03T23:47:59Z",
    "updated_at": "2015-08-03T23:47:59Z",
    "author_association": "MEMBER",
    "body": "@jreback you are fully correct that those (`a.add(b)` or `a.add(b, fill_value=0)`) are the logical functions to use instead of `combine`.\n\nBut, still, it is not really clear what the docs of `combine` even mean with:\n\n> Add two DataFrame objects and do not propagate NaN values, so if for a (column, time) one frame is missing a value, it will default to the other frameâ€™s value (which might be NaN as well)\n\nWhat does 'do not propagate NaN values' mean? What if the result of the function at a certain place in the frame is NaN, what should it do? Not propagate? (but this is what it does) Default to the value in `other`? So this would mean that in `a11 + b11` it gives you `b11` if `a11` is NaN, but `NaN` if `b11` is NaN and `a11` not .. (seems like a very strange operation).\n\nIn any case, docstring can use an update, as it does not seem correct.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/127732238",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-127732238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 127732238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzczMjIzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T19:43:06Z",
    "updated_at": "2015-08-04T19:43:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeh doc-string prob not clear. `.combine` is not really used much (except by `.combine_first`). Its the logical equivalent of `.apply` but for binary functions.\n\nMaybe we should just deprecate this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194530414",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-194530414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 194530414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDUzMDQxNA==",
    "user": {
      "login": "jsevo",
      "id": 5849690,
      "node_id": "MDQ6VXNlcjU4NDk2OTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5849690?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsevo",
      "html_url": "https://github.com/jsevo",
      "followers_url": "https://api.github.com/users/jsevo/followers",
      "following_url": "https://api.github.com/users/jsevo/following{/other_user}",
      "gists_url": "https://api.github.com/users/jsevo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jsevo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jsevo/subscriptions",
      "organizations_url": "https://api.github.com/users/jsevo/orgs",
      "repos_url": "https://api.github.com/users/jsevo/repos",
      "events_url": "https://api.github.com/users/jsevo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jsevo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-09T22:05:50Z",
    "updated_at": "2016-03-09T22:06:19Z",
    "author_association": "NONE",
    "body": "+1 to deprecate. This is pretty confusing. It also has no explanation what `func` ought to be. Is `combine` with `overwrite=True` equivalent to `update`? Not a very clear situation for what must be pretty common operations.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198458423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-198458423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 198458423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODQ1ODQyMw==",
    "user": {
      "login": "auvipy",
      "id": 6212603,
      "node_id": "MDQ6VXNlcjYyMTI2MDM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6212603?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/auvipy",
      "html_url": "https://github.com/auvipy",
      "followers_url": "https://api.github.com/users/auvipy/followers",
      "following_url": "https://api.github.com/users/auvipy/following{/other_user}",
      "gists_url": "https://api.github.com/users/auvipy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/auvipy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/auvipy/subscriptions",
      "organizations_url": "https://api.github.com/users/auvipy/orgs",
      "repos_url": "https://api.github.com/users/auvipy/repos",
      "events_url": "https://api.github.com/users/auvipy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/auvipy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-18T17:13:12Z",
    "updated_at": "2016-03-18T17:13:12Z",
    "author_association": "NONE",
    "body": "I want to depricate this. how to do so? never contributed to pandas before!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/198949358",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-198949358",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 198949358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODk0OTM1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-20T15:23:18Z",
    "updated_at": "2016-03-20T15:23:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "look at how `.combineAdd` is done. note that we can't do this until 0.19.0.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239328857",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-239328857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 239328857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTMyODg1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T00:00:49Z",
    "updated_at": "2016-08-12T00:00:59Z",
    "author_association": "MEMBER",
    "body": "Repeating from https://github.com/pydata/pandas/pull/13970\n\nNot really sure we should actually deprecate `DataFrame.combine`. Although I have never used it, it does serve a purpose that is not possible to achieve with \"the flexible arithmetic methods like `add`\" when you pass it a custom function (unlike the deprecated `combineAdd`, which definitely can be done with `add`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239333210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-239333210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 239333210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTMzMzIxMA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T00:32:37Z",
    "updated_at": "2016-08-12T00:32:37Z",
    "author_association": "MEMBER",
    "body": "`combine` 's `func` spec isn't clear / predictable for users.  I think using `.align` -> arbitrary func is clearer such cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239429073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-239429073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 239429073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQyOTA3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T12:03:54Z",
    "updated_at": "2016-08-12T12:03:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @sinhrks here. To be honest we have seen almost no reports of `.combine` usage over the years (bugs or otherwise), except those we have done. Its not documented, nor does it have a clear well defined purpose. \n\nLet's deprecate. I suppose if we have a big uprising in the community my opinion could change.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239431445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-239431445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 239431445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQzMTQ0NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T12:18:27Z",
    "updated_at": "2016-08-12T12:18:27Z",
    "author_association": "MEMBER",
    "body": "Example usage: combining two dataframes to take the maximum of both frames at each location:\n\n```\nIn [36]: df1 = pd.DataFrame({'a':[1,2,3], 'b':[4,5,6]})\n\nIn [37]: df2 = pd.DataFrame({'b':[6,5,4], 'c':[3,2,1]}, index=[1,2,3])\n\nIn [38]: df1\nOut[38]:\n   a  b\n0  1  4\n1  2  5\n2  3  6\n\nIn [39]: df2\nOut[39]:\n   b  c\n1  6  3\n2  5  2\n3  4  1\n\nIn [40]: df1.combine(df2, func=np.maximum)\nOut[40]:\n    a    b   c\n0 NaN  NaN NaN\n1 NaN  6.0 NaN\n2 NaN  6.0 NaN\n3 NaN  NaN NaN\n\nIn [41]: df1.combine(df2, func=np.maximum, fill_value=-np.inf)\nOut[41]:\n     a    b    c\n0  1.0  4.0  NaN\n1  2.0  6.0  3.0\n2  3.0  6.0  2.0\n3  NaN  4.0  1.0\n```\n\nIs there another easy way to achieve this?\n\nI am the first to say that we actually have too many methods (that's why we deprecated eg the really useless and unpythonic `combineAdd` and `combineMult`), but it's not because something is poorly/wrongly documented, we should deprecate it. The behaviour (as implemented) is actually rather straightforward IMO, and it should be easy to update the docstring to reflect this.\n\nI fully agree that it is probably not used much, and I am also not certain it's worth keeping. But just want to point out that the bad docstring is not a reason to deprecate it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239438998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-239438998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 239438998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQzODk5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T12:57:34Z",
    "updated_at": "2016-08-12T12:58:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche not unreasonable, though your example have never been requested :<\n\nIn this case\n\n```\nIn [40]: df1, df2 = df1.align(df2)\n\nIn [41]: df1\nOut[41]: \n     a    b   c\n0  1.0  4.0 NaN\n1  2.0  5.0 NaN\n2  3.0  6.0 NaN\n3  NaN  NaN NaN\n\nIn [42]: df2\nOut[42]: \n    a    b    c\n0 NaN  NaN  NaN\n1 NaN  6.0  3.0\n2 NaN  5.0  2.0\n3 NaN  4.0  1.0\n\nIn [46]: df1.where(df1>df2).combine_first(df1).combine_first(df2)\nOut[46]: \n     a    b    c\n0  1.0  4.0  NaN\n1  2.0  5.0  3.0\n2  3.0  6.0  2.0\n3  NaN  4.0  1.0\n```\n\nagain a dedicated method for a feature like this may not be entirely useful. Maybe can find some other uses / integrations which make sense. ok so let's discuss some more, @sinhrks can take it out from the PR (and let other bug fixes in).\n\nIn particular from your example, having to 'manually' specify the `fill_value=-np.inf` is really awkward (not that my method is much better :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239469080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-239469080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 239469080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQ2OTA4MA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T14:56:58Z",
    "updated_at": "2016-08-12T15:00:55Z",
    "author_association": "MEMBER",
    "body": "After `df1.align(df2)`:\n\n```\nnp.fmax(df1, df2)\n#      a    b    c\n# 0  1.0  4.0  NaN\n# 1  2.0  6.0  3.0\n# 2  3.0  6.0  2.0\n# 3  NaN  4.0  1.0\n```\n\nWhat I also care is its impl. I think following points cannot be explained for users in clear way:\n- the result's `dtype` is decided by its input dtype, not by what `func` returns. (thus user func must meet the spec)\n- `func` signature changes if data contains datetime-like columns.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278577671",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-278577671",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 278577671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODU3NzY3MQ==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T08:30:37Z",
    "updated_at": "2017-02-09T08:30:37Z",
    "author_association": "MEMBER",
    "body": "can we discuss it for 0.20, @jorisvandenbossche ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331670022",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-331670022",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 331670022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTY3MDAyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-23T21:07:12Z",
    "updated_at": "2017-09-23T21:07:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "thoughts on what to do about this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362169465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10734#issuecomment-362169465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10734",
    "id": 362169465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjE2OTQ2NQ==",
    "user": {
      "login": "stuarteberg",
      "id": 1655821,
      "node_id": "MDQ6VXNlcjE2NTU4MjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1655821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stuarteberg",
      "html_url": "https://github.com/stuarteberg",
      "followers_url": "https://api.github.com/users/stuarteberg/followers",
      "following_url": "https://api.github.com/users/stuarteberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/stuarteberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stuarteberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stuarteberg/subscriptions",
      "organizations_url": "https://api.github.com/users/stuarteberg/orgs",
      "repos_url": "https://api.github.com/users/stuarteberg/repos",
      "events_url": "https://api.github.com/users/stuarteberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stuarteberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T06:15:26Z",
    "updated_at": "2018-02-01T06:15:26Z",
    "author_association": "NONE",
    "body": "FWIW, this confused me for a while today.  As far as I can tell, the [docs](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.combine.html) are misleading at best (maybe even just plain wrong?).\r\n\r\nJust like @jorisvandenbossche above, I was attempting to compute the element-wise max values between two dataframes (with some missing values).  I was surprised to see this:\r\n\r\n```\r\nIn [327]: df1\r\nOut[327]:\r\n     A\r\n0  1.0\r\n1  2.0\r\n2  NaN\r\n3  4.0\r\n\r\nIn [328]: df2\r\nOut[328]:\r\n     A\r\n0  1.0\r\n1  2.0\r\n2  3.0\r\n3  NaN\r\n\r\nIn [329]: df1.combine(df2, np.maximum)\r\nOut[329]:\r\n     A\r\n0  1.0\r\n1  2.0\r\n2  NaN\r\n3  NaN\r\n```\r\n\r\nAm I missing something?"
  }
]
