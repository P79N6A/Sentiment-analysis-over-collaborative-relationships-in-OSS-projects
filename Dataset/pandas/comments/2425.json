[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11075073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2425#issuecomment-11075073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2425",
    "id": 11075073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDc1MDcz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T07:03:02Z",
    "updated_at": "2012-12-06T07:03:47Z",
    "author_association": "NONE",
    "body": "AFICT from the code, the args of ix correspond to the axes, so you're asking for all rows\nand **column** \"two\". which fails.\ncase in point:\n\n``` python\nIn [4]: df.ix[:]\nOut[4]: \n                     A         B         C\nfirst second                              \nbar   one    -0.720545 -0.382630  0.573031\n      two    -0.263034  0.462324 -0.126281\nbaz   one     1.676899 -0.660316  1.216486\n      two    -0.343970  0.234571  0.347938\nfoo   one    -0.563490 -1.136923 -0.450143\n      two    -1.209016  0.044605  0.879672\nqux   one    -0.276785  0.563070 -0.133299\n      two    -0.449211  0.545187 -0.869852\n\nIn [6]: df.ix[:,('A','B')]\nOut[6]: \n                     A         B\nfirst second                    \nbar   one    -0.720545 -0.382630\n      two    -0.263034  0.462324\nbaz   one     1.676899 -0.660316\n      two    -0.343970  0.234571\nfoo   one    -0.563490 -1.136923\n      two    -1.209016  0.044605\nqux   one    -0.276785  0.563070\n      two    -0.449211  0.545187\n```\n\nThis also works\n\n``` python\nIn [10]: df.ix[('foo','two'),:]\nOut[10]: \nA   -1.209016\nB    0.044605\nC    0.879672\nName: (foo, two)\n```\n\nThis however doesn't, which is disappointing:\n\n``` python\nIn [7]: df.ix[(slice(None),'two')]\n/home/user1/src/pandas/pandas/core/internals.pyc in _check_have(self, item)\n   1002     def _check_have(self, item):\n   1003         if item not in self.items:\n-> 1004             raise KeyError('no item named %s' % com.pprint_thing(item))\n   1005 \n   1006     def reindex_axis(self, new_axis, method=None, axis=0, copy=True):\n\nKeyError: u'no item named two'\n```\n\nand maybe that is a bug.\n\nIf your question comes from a real need, \n\n``` python\nIn [7]: df.xs('two',level=1)\nOut[7]: \n              A         B         C\nfirst                              \nbar   -0.677739 -0.740875  0.072675\nbaz    0.061356 -1.522032  1.084492\nfoo   -0.124634 -2.342294 -0.625460\nqux   -0.647809 -0.051477  0.724003\n```\n\nwill get you there, until this is otherwise addressed.\n\np.s. I think you may have mixed up columns and index in your example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11085948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2425#issuecomment-11085948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2425",
    "id": 11085948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg1OTQ4",
    "user": {
      "login": "timcera",
      "id": 297142,
      "node_id": "MDQ6VXNlcjI5NzE0Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/297142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timcera",
      "html_url": "https://github.com/timcera",
      "followers_url": "https://api.github.com/users/timcera/followers",
      "following_url": "https://api.github.com/users/timcera/following{/other_user}",
      "gists_url": "https://api.github.com/users/timcera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timcera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timcera/subscriptions",
      "organizations_url": "https://api.github.com/users/timcera/orgs",
      "repos_url": "https://api.github.com/users/timcera/repos",
      "events_url": "https://api.github.com/users/timcera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timcera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T13:45:51Z",
    "updated_at": "2012-12-06T13:45:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed my example about the column/row confusion - forgot a command during copy/paste...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11087124",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2425#issuecomment-11087124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2425",
    "id": 11087124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMDg3MTI0",
    "user": {
      "login": "timcera",
      "id": 297142,
      "node_id": "MDQ6VXNlcjI5NzE0Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/297142?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timcera",
      "html_url": "https://github.com/timcera",
      "followers_url": "https://api.github.com/users/timcera/followers",
      "following_url": "https://api.github.com/users/timcera/following{/other_user}",
      "gists_url": "https://api.github.com/users/timcera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timcera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timcera/subscriptions",
      "organizations_url": "https://api.github.com/users/timcera/orgs",
      "repos_url": "https://api.github.com/users/timcera/repos",
      "events_url": "https://api.github.com/users/timcera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timcera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T14:21:52Z",
    "updated_at": "2012-12-06T14:21:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a 5 level MultiIndex DataFrame and want to select rows by wildcard one or more of the levels.  I figured out a solution yesterday - outside of the pandas framework by using 'get_level_values' for each level to build a pseudo database.  Works, and actually is fast enough.\n\nWhen trying to use native pandas I was hoping that if 'df.ix' supported 'slice(None)' I could use it for my DataFrame as something like:\n\n```\ndf.ix[('PERLND', 112, 'PWATER', slice(None), 2)]\n```\n\nWhich would wildcard the fourth level - right?  If that make sense, that is what I think I want.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11290617",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2425#issuecomment-11290617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2425",
    "id": 11290617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjkwNjE3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-12T14:29:11Z",
    "updated_at": "2012-12-12T14:29:11Z",
    "author_association": "NONE",
    "body": "related #1766\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30875029",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2425#issuecomment-30875029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2425",
    "id": 30875029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODc1MDI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-18T19:59:09Z",
    "updated_at": "2013-12-18T19:59:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #4036\n"
  }
]
