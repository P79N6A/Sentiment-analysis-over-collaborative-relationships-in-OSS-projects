[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/224402149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13390#issuecomment-224402149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13390",
    "id": 224402149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDQwMjE0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-07T20:22:30Z",
    "updated_at": "2016-06-07T20:22:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "dupe of this: https://github.com/pydata/pandas/issues/12652\n\n```\nIn [7]: def f(x):\n   ...:     x = x.copy()\n   ...:     x['c'] = 1\n   ...:     return x.sort_values('b')\n   ...: \n\nIn [8]: df.groupby('a', as_index=False).apply(f).reset_index(drop=True)\nOut[8]: \n   a  b  c\n0  0  0  1\n1  0  1  1\n2  0  2  1\n3  1  3  1\n4  1  4  1\n5  1  5  1\n6  2  6  1\n7  2  7  1\n8  2  8  1\n```\n\nyou know this is completely inefficient though, right? doing lots of things in groupby is a no-no\n\n```\nIn [11]: df.assign(c=1).sort_values('b').reset_index(drop=True)\nOut[11]: \n   a  b  c\n0  0  0  1\n1  0  1  1\n2  0  2  1\n3  1  3  1\n4  1  4  1\n5  1  5  1\n6  2  6  1\n7  2  7  1\n8  2  8  1\n\n```\n"
  }
]
