[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/357379260",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19200#issuecomment-357379260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19200",
    "id": 357379260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzM3OTI2MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-12T23:07:50Z",
    "updated_at": "2018-01-12T23:07:50Z",
    "author_association": "MEMBER",
    "body": "This appears to be a result of the following code:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/8347ff8c9d8876fa46f73dbc48919a672caef1d2/pandas/core/groupby.py#L3380\r\n\r\nIt affects other aggregation functions like ``size``, ``rank`` and ``cumcount`` that I would expect should always return a number and not a datetime64.\r\n\r\nOne solution I could think of is to blacklist those particular aggregations from being cast, although I'd have to think through where exactly to apply that blacklist. \r\n\r\n``_transform_fast`` in the linked code only receives a lambda function as an argument to execute aggregation. I'm not sure if there's a way to inspect that lambda to see the exact agg function being used, if that's even the approach we would want to take"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/357471016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19200#issuecomment-357471016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19200",
    "id": 357471016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzQ3MTAxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-13T22:08:15Z",
    "updated_at": "2018-01-13T22:08:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "thought we had an issue about this. https://github.com/pandas-dev/pandas/issues/15562 is related.\r\n\r\nOn certain operations we should *not* try to cast (count, size, rank). These are normally dispatched to specific methods for non-transforming groupbys (they just calll the method on Series/FrameGroupBy), this is not a problem. However transform calls a cython function and then does the casting. \r\n\r\nSo need to wade into this and make a better method of doing this. Could certainly pass the name of the function into ``_transform_fast`` (we may at a higher level)."
  }
]
