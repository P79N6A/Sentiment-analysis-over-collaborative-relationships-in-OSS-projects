[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56238824",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56238824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56238824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjM4ODI0",
    "user": {
      "login": "jaimefrio",
      "id": 3343990,
      "node_id": "MDQ6VXNlcjMzNDM5OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3343990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaimefrio",
      "html_url": "https://github.com/jaimefrio",
      "followers_url": "https://api.github.com/users/jaimefrio/followers",
      "following_url": "https://api.github.com/users/jaimefrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaimefrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaimefrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaimefrio/subscriptions",
      "organizations_url": "https://api.github.com/users/jaimefrio/orgs",
      "repos_url": "https://api.github.com/users/jaimefrio/repos",
      "events_url": "https://api.github.com/users/jaimefrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaimefrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T21:33:07Z",
    "updated_at": "2014-09-19T21:33:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is incomplete, and requires making changes to `rolling_cov` and `rolling_corr` to implement them using these new functions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56241304",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56241304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56241304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQxMzA0",
    "user": {
      "login": "jaimefrio",
      "id": 3343990,
      "node_id": "MDQ6VXNlcjMzNDM5OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3343990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaimefrio",
      "html_url": "https://github.com/jaimefrio",
      "followers_url": "https://api.github.com/users/jaimefrio/followers",
      "following_url": "https://api.github.com/users/jaimefrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaimefrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaimefrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaimefrio/subscriptions",
      "organizations_url": "https://api.github.com/users/jaimefrio/orgs",
      "repos_url": "https://api.github.com/users/jaimefrio/repos",
      "events_url": "https://api.github.com/users/jaimefrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaimefrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T21:55:46Z",
    "updated_at": "2014-09-19T21:55:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some examples and timings that I think will show the benefits of having three different Cython implementations:\n\n```\nIn [1]: from pandas.algos import roll_corr, roll_cov, roll_var\nIn [2]: x = np.random.rand(1000000)\nIn [3]: y = np.random.rand(1000000)\n```\n\nIt produces the right results in the general case, and exactly `1.0` when the sequences are identical:\n\n```\nIn [4]: np.allclose(roll_corr(x, y, 100, 1)[1:],\n   ...:             roll_cov(x, y, 100, 1)[1:] / np.sqrt(roll_var(x, 100, 1)[1:] * roll_var(y, 100, 1)[1:]))\nOut[4]: True\n\nIn [5]: np.all(roll_corr(x, x, 100, 1)[1:] == 1)\nOut[5]: True\n```\n\n`roll_var(x)` is almost 1.5x faster than `roll_cov(x, x)`, which I think justifies keeping it around:\n\n```\nIn [6]: %timeit roll_var(x, 100, 1)\n10 loops, best of 3: 23.7 ms per loop\n\nIn [7]: %timeit roll_cov(x, x, 100, 1)\n10 loops, best of 3: 35.2 ms per loop\n\nIn [8]: %timeit roll_cov(x, y, 100, 1)\n10 loops, best of 3: 37.5 ms per loop\n```\n\nAnd the `roll_corr` implementation is about 2x faster than implementing it in terms of `roll_cov` and `roll_var`, which would also force to make those slower:\n\n```\nIn [9]: %timeit roll_corr(x, y, 100, 1)\n10 loops, best of 3: 56.8 ms per loop\n\nIn [10]: %timeit roll_corr(x, x, 100, 1)\n10 loops, best of 3: 42.4 ms per loop\n\nIn [11]: %timeit roll_cov(x, x, 100, 1) / np.sqrt(roll_var(x, 100, 1) * roll_var(y, 100, 1))\n10 loops, best of 3: 116 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56241652",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56241652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56241652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQxNjUy",
    "user": {
      "login": "jaimefrio",
      "id": 3343990,
      "node_id": "MDQ6VXNlcjMzNDM5OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3343990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaimefrio",
      "html_url": "https://github.com/jaimefrio",
      "followers_url": "https://api.github.com/users/jaimefrio/followers",
      "following_url": "https://api.github.com/users/jaimefrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaimefrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaimefrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaimefrio/subscriptions",
      "organizations_url": "https://api.github.com/users/jaimefrio/orgs",
      "repos_url": "https://api.github.com/users/jaimefrio/repos",
      "events_url": "https://api.github.com/users/jaimefrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaimefrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T21:59:26Z",
    "updated_at": "2014-09-19T21:59:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Lastly, the failing tests have to do with what I think are wrong expectations: `roll_corr` should be able to detect `NaN`s in places where `roll_cov / (roll_std * roll_std)` may very well not, and that should not be considered an erroneous behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56242058",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56242058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56242058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQyMDU4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T22:04:07Z",
    "updated_at": "2014-09-19T22:04:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "you may want to add the identities that you have above as tests as well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56242233",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56242233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56242233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQyMjMz",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T22:06:08Z",
    "updated_at": "2014-09-19T22:06:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think tests of those identities (and more) are already in `_test_moments_consistency()`, which is called by `test_ewm_consistency()`, `test_expanding_consistency()`, and `test_rolling_consistency()`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56242501",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56242501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56242501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQyNTAx",
    "user": {
      "login": "jaimefrio",
      "id": 3343990,
      "node_id": "MDQ6VXNlcjMzNDM5OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3343990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaimefrio",
      "html_url": "https://github.com/jaimefrio",
      "followers_url": "https://api.github.com/users/jaimefrio/followers",
      "following_url": "https://api.github.com/users/jaimefrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaimefrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaimefrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaimefrio/subscriptions",
      "organizations_url": "https://api.github.com/users/jaimefrio/orgs",
      "repos_url": "https://api.github.com/users/jaimefrio/repos",
      "events_url": "https://api.github.com/users/jaimefrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaimefrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T22:09:24Z",
    "updated_at": "2014-09-19T22:09:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would force relaxing some of those tests, though, because the build is going to fail...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56242694",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56242694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56242694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQyNjk0",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T22:11:34Z",
    "updated_at": "2014-09-19T22:11:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Which tests will fail? Note that the consistency checks only apply when x and y have the same pattern of `NaN` values:\n\n```\n                        if not x.isnull().equals(y.isnull()):\n                            # can only easily test two Series with similar structure\n                            continue\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56245481",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56245481",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56245481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ1NDgx",
    "user": {
      "login": "jaimefrio",
      "id": 3343990,
      "node_id": "MDQ6VXNlcjMzNDM5OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3343990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaimefrio",
      "html_url": "https://github.com/jaimefrio",
      "followers_url": "https://api.github.com/users/jaimefrio/followers",
      "following_url": "https://api.github.com/users/jaimefrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaimefrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaimefrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaimefrio/subscriptions",
      "organizations_url": "https://api.github.com/users/jaimefrio/orgs",
      "repos_url": "https://api.github.com/users/jaimefrio/repos",
      "events_url": "https://api.github.com/users/jaimefrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaimefrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T22:47:22Z",
    "updated_at": "2014-09-19T22:47:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's a size 3 sliding window going over two consecutive NaNs, e.g. `[3, NaN, NaN, 4]`, when going from `[3, NaN, NaN]` to `[NaN, NaN, 4]`, with `minp = 0` and `ddof = 0`, the resulting variance is not exactly zero, and a `NaN` is not produced.\n\nI could put in an `if nobs <= 1: ssqdm_x = 0` and be done with it...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56246088",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56246088",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56246088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ2MDg4",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T22:55:10Z",
    "updated_at": "2014-09-19T22:55:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah. Another way to deal with it is to first deal with the value exiting the window (so in this case there would be no values in the window) before dealing with the value entering the window.\n\n> On Sep 19, 2014, at 6:47 PM, Jaime notifications@github.com wrote:\n> \n> It's a size 3 sliding window going over two consecutive NaNs, e.g. [3, NaN, NaN, 4], when going from [3, NaN, NaN] to [NaN, NaN, 4], with minp = 0 and ddof = 0, the resulting variance is not exactly zero, and a NaN is not produced.\n> \n> I could put in an if nobs <= 1: ssqdm_x = 0 and be done with it...\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56248156",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56248156",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56248156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjQ4MTU2",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-19T23:26:41Z",
    "updated_at": "2014-09-19T23:26:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like `roll_corr()` checks for repeated values, but `roll_cov()` and `roll_var()` do not. Any particular reason for that?\n\nPutting aside for a moment the checks for repeated values, here are a couple questions:\n1. Is it worth having separate `roll_var` and `roll_cov`?\n2. Is it worth having separate `roll_corr` and `roll_cov`?\n\nMy thoughts:\n1. My gut tells me that there should just be `roll_cov`, and that it can be implemented in such a way that the time penalty for `roll_cov(x, x)` over a dedicated `roll_var(x)` is negligible, or at least tolerable. Easy for me to say...\n2. It's a good observation that a dedicated single-pass `roll_corr(x, y)` is much more efficient than `roll_cov(x, y) / sqrt(roll_var(x) * roll_var(y))`. Note that currently the code does the latter, so we're not talking about slowing things down (beyond point 1). Perhaps the cleanest solution is to have a single `roll_cov_corr(x, y)` that depending on a flag calculates either the covariance or the correlation? Am not sure what the time penalty for that would be (would it need an `if` inside the loop?).\n\nPerhaps it's wishful thinking, but my inclination is to try to implement `rolling_var`, `rolling_cov`, and `rolling_corr` all in terms of a single single-pass `roll_cov_corr` -- which implements checks for all-constant series. Am I being too optimistic / delusional?\n\nNote: As I mentioned previously, I think the code would be simpler (though perhaps not faster) if it first handled the old value (if any) exiting the window and then handled the new (if any) entering the window, rather than trying to handle all four combinations simultaneously.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56252679",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56252679",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56252679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjUyNjc5",
    "user": {
      "login": "jaimefrio",
      "id": 3343990,
      "node_id": "MDQ6VXNlcjMzNDM5OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3343990?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaimefrio",
      "html_url": "https://github.com/jaimefrio",
      "followers_url": "https://api.github.com/users/jaimefrio/followers",
      "following_url": "https://api.github.com/users/jaimefrio/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaimefrio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaimefrio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaimefrio/subscriptions",
      "organizations_url": "https://api.github.com/users/jaimefrio/orgs",
      "repos_url": "https://api.github.com/users/jaimefrio/repos",
      "events_url": "https://api.github.com/users/jaimefrio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaimefrio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T01:13:07Z",
    "updated_at": "2014-09-20T01:13:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a sentimental attachment to the math for the case where one observation comes in and another goes out: you don't find it in the books or in wikipedia, so I had to work it out myself. But of course this is not about not hurting my feelings, it does have its merits...\n\nThe basic code for removing an observation `prev` is:\n\n```\nnobs -= 1\ndelta = prev - mean_x\nmean_x -= delta / nobs\nssqdm_x -= delta *(prev - mean_x)\n```\n\nTo add an observation requires:\n\n```\nnobs += 1\ndelta = val - mean_x\nmean_x += delta / nobs\nssqdm_x += delta * (val - mean_x)\n```\n\nIf you do both in a single step, it is something like\n\n```\ndelta = val - prev\nprev -= mean_x\nmean_x += delta / nobs\nval -= mean_x\nssqdm_x += (val + prev) * delta\n```\n\nI think the key thing here is that, when doing both together, you only have to do one division, which is the expensive operation. I just put together a `simple_roll_var` Cython function implementing your idea and did some timings:\n\n```\nIn [2]: from pandas.algos import roll_var, simple_roll_var\n\nIn [3]: x = np.random.rand(1000000)\nIn [6]: %timeit roll_var(x, 100, 1)\n10 loops, best of 3: 26.4 ms per loop\nIn [7]: %timeit simple_roll_var(x, 100, 1)\n10 loops, best of 3: 34.7 ms per loop\n\nIn [11]: x = np.random.rand(1000)\nIn [12]: %timeit roll_var(x, 10, 1)\n10000 loops, best of 3: 26.3 µs per loop\nIn [13]: %timeit simple_roll_var(x, 100, 1)\n10000 loops, best of 3: 37.5 µs per loop\n```\n\nSo there seems to be a 50% penalty to pay for not doing the \"remove first, then add\" case in a single shot. The timings I posted before kind of show a similar slow down for doing `roll_var` with `roll_cov`. Throw in checks for exact zeros, and you are looking at making `roll_var` something like 2x slower than the best it can be.\n\nThe \"remove first, then add\" strategy also seems to be a little less numerically stable, although the practical implications of that are negligible.\n\nOne last problem of implementing `roll_var` in terms of `roll_cov` is that you can no longer do the `if ssqdm_x <0: ssqdm_x = 0`.\n\nI guess I really like the idea of `roll_var` staying, and its deal-with-all-cases separately approach not changing. ;-)\n\nI am not directly opposed to it detecting exact zeros, but I think it is worth understandingwhy do we want that behavior, if `roll_corr` is going to handle it separately.\n\nLAstly. I am much more open to implementing a monstrous `roll_cov_corr` that handles both functions, even if that makes `roll_cov` slower than it could be.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56254429",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-56254429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 56254429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjU0NDI5",
    "user": {
      "login": "seth-p",
      "id": 7441788,
      "node_id": "MDQ6VXNlcjc0NDE3ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7441788?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seth-p",
      "html_url": "https://github.com/seth-p",
      "followers_url": "https://api.github.com/users/seth-p/followers",
      "following_url": "https://api.github.com/users/seth-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/seth-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seth-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seth-p/subscriptions",
      "organizations_url": "https://api.github.com/users/seth-p/orgs",
      "repos_url": "https://api.github.com/users/seth-p/repos",
      "events_url": "https://api.github.com/users/seth-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seth-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T02:25:38Z",
    "updated_at": "2014-09-20T02:25:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm. Interesting.\n\n> On Sep 19, 2014, at 9:13 PM, Jaime notifications@github.com wrote:\n> \n> I have a sentimental attachment to the math for the case where one observation comes in and another goes out: you don't find it in the books or in wikipedia, so I had to work it out myself. But of course this is not about not hurting my feelings, it does have its merits...\n> \n> The basic code for removing an observation prev is:\n> \n> nobs -= 1\n> delta = prev - mean_x\n> mean_x -= delta / nobs\n> ssqdm_x -= delta *(prev - mean_x)\n> To add an observation requires:\n> \n> nobs += 1\n> delta = val - mean_x\n> mean_x += delta / nobs\n> ssqdm_x += delta \\* (val - mean_x)\n> If you do both in a single step, it is something like\n> \n> delta = val - prev\n> prev -= mean_x\n> mean_x += delta / nobs\n> val -= mean_x\n> ssqdm_x += (val + prev) \\* delta\n> I think the key thing here is that, when doing both together, you only have to do one division, which is the expensive operation. I just put together a simple_roll_var Cython function implementing your idea and did some timings:\n> \n> In [2]: from pandas.algos import roll_var, simple_roll_var\n> \n> In [3]: x = np.random.rand(1000000)\n> In [6]: %timeit roll_var(x, 100, 1)\n> 10 loops, best of 3: 26.4 ms per loop\n> In [7]: %timeit simple_roll_var(x, 100, 1)\n> 10 loops, best of 3: 34.7 ms per loop\n> \n> In [11]: x = np.random.rand(1000)\n> In [12]: %timeit roll_var(x, 10, 1)\n> 10000 loops, best of 3: 26.3 µs per loop\n> In [13]: %timeit simple_roll_var(x, 100, 1)\n> 10000 loops, best of 3: 37.5 µs per loop\n> So there seems to be a 50% penalty to pay for not doing the \"remove first, then add\" case in a single shot. The timings I posted before kind of show a similar slow down for doing roll_var with roll_cov. Throw in checks for exact zeros, and you are looking at making roll_var something like 2x slower than the best it can be.\n> \n> The \"remove first, then add\" strategy also seems to be a little less numerically stable, although the practical implications of that are negligible.\n> \n> One last problem of implementing roll_var in terms of roll_cov is that you can no longer do the if ssqdm_x <0: ssqdm_x = 0.\n> \n> I guess I really like the idea of roll_var staying, and its deal-with-all-cases separately approach not changing. ;-)\n> \n> I am not directly opposed to it detecting exact zeros, but I think it is worth understandingwhy do we want that behavior, if roll_corr is going to handle it separately.\n> \n> LAstly. I am much more open to implementing a monstrous roll_cov_corr that handles both functions, even if that makes roll_cov slower than it could be.\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100509615",
    "html_url": "https://github.com/pandas-dev/pandas/pull/8326#issuecomment-100509615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8326",
    "id": 100509615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDUwOTYxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-09T16:00:41Z",
    "updated_at": "2015-05-09T16:00:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing pls reopen if/when updated\n"
  }
]
