[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24285710",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4013#issuecomment-24285710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4013",
    "id": 24285710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mjg1NzEw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-11T23:58:37Z",
    "updated_at": "2013-09-11T23:58:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "others have thoughts on this? I guess if you're using agg, it ought to maintain the metadata, given that you have to specify columns that already exist. Not sure about other cases.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/38978462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4013#issuecomment-38978462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4013",
    "id": 38978462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTc4NDYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-28T23:31:24Z",
    "updated_at": "2014-03-28T23:31:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a nonsencial example, as it produces a Dataframe where each element is a DataFrame itself. This is not valid as a real grouping. Yes it works, but it is impossible to infer anything from this. If you have a simpler example that you can provide that shows the missing columns, pls show it.\n\nI wouldn't actually do it this way, rather simply get the grouper, iterate it yourself, apply whatever transformation you want and then do what  you want with the results.\n\nGroupby is not meant to handle any and all cases.\n"
  }
]
