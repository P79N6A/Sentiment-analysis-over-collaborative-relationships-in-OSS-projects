[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385650126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20899#issuecomment-385650126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20899",
    "id": 385650126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTY1MDEyNg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T11:23:56Z",
    "updated_at": "2018-05-01T11:25:47Z",
    "author_association": "MEMBER",
    "body": "From #20583 , @jankatins :\r\n> If you have a defined order, where would you put the new categorical into the orders? E.g. good - middle - bad, where would you put 'extreme' -> if you care about order, then you also care about not adding new stuff\r\n\r\nSure: an exception can be when the new categories include the old ones, but that's a very specific case, and I agree the ability to add categories is less relevant for ordered categories (by \"less relevant\" I mean that it could for instance loose the ordering, or append the new ones according to their own order)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386382604",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20899#issuecomment-386382604",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20899",
    "id": 386382604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjM4MjYwNA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-03T17:57:15Z",
    "updated_at": "2018-05-03T17:57:15Z",
    "author_association": "MEMBER",
    "body": "> This is most useful for strings, but could even be useful for storing a large\r\n> array of 64-bit precision items (store the 64-bit items once, then use an int16\r\n> or int32 array for the codes).\r\n\r\n... or even arbitrary Python objects (for which you gain not only RAM, but possibly CPU when e.g. comparing)\r\n\r\nDid I understand correctly that for the case of strings we could expect some significant advantage in storing them as a unique string and map (internally) categories to slices of it, rather than directly map categories to individual strings?"
  }
]
