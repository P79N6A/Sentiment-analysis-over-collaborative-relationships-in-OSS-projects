[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363785050",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19572#issuecomment-363785050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19572",
    "id": 363785050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc4NTA1MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T14:27:03Z",
    "updated_at": "2018-02-07T14:27:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wonder if this is causing collection failures:\r\n\r\n```\r\n==================================== ERRORS ====================================\r\n___________ ERROR at setup of TestPandasContainer.test_read_s3_jsonl ___________\r\n[gw1] linux -- Python 3.5.4 /home/travis/miniconda3/envs/pandas/bin/python\r\n\r\ntips_file = '/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/parser/data/tips.csv'\r\njsonl_file = '/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/parser/data/items.jsonl'\r\n\r\n\u001B[1m    @pytest.fixture(scope='module')\u001B[0m\r\n\u001B[1m    def s3_resource(tips_file, jsonl_file):\u001B[0m\r\n\u001B[1m        \"\"\"Fixture for mocking S3 interaction.\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        The primary bucket name is \"pandas-test\". The following datasets\u001B[0m\r\n\u001B[1m        are loaded.\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        - tips.csv\u001B[0m\r\n\u001B[1m        - tips.csv.gz\u001B[0m\r\n\u001B[1m        - tips.csv.bz2\u001B[0m\r\n\u001B[1m        - items.jsonl\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        A private bucket \"cant_get_it\" is also created. The boto3 s3 resource\u001B[0m\r\n\u001B[1m        is yielded by the fixture.\u001B[0m\r\n\u001B[1m        \"\"\"\u001B[0m\r\n\u001B[1m        pytest.importorskip('s3fs')\u001B[0m\r\n\u001B[1m        moto.mock_s3().start()\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        test_s3_files = [\u001B[0m\r\n\u001B[1m            ('tips.csv', tips_file),\u001B[0m\r\n\u001B[1m            ('tips.csv.gz', tips_file + '.gz'),\u001B[0m\r\n\u001B[1m            ('tips.csv.bz2', tips_file + '.bz2'),\u001B[0m\r\n\u001B[1m            ('items.jsonl', jsonl_file),\u001B[0m\r\n\u001B[1m        ]\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        def add_tips_files(bucket_name):\u001B[0m\r\n\u001B[1m            for s3_key, file_name in test_s3_files:\u001B[0m\r\n\u001B[1m                with open(file_name, 'rb') as f:\u001B[0m\r\n\u001B[1m                    conn.Bucket(bucket_name).put_object(\u001B[0m\r\n\u001B[1m                        Key=s3_key,\u001B[0m\r\n\u001B[1m                        Body=f)\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        boto3 = pytest.importorskip('boto3')\u001B[0m\r\n\u001B[1m        # see gh-16135\u001B[0m\r\n\u001B[1m        bucket = 'pandas-test'\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        conn = boto3.resource(\"s3\", region_name=\"us-east-1\")\u001B[0m\r\n\u001B[1m        conn.create_bucket(Bucket=bucket)\u001B[0m\r\n\u001B[1m>       add_tips_files(bucket)\u001B[0m\r\n\r\n\u001B[1m\u001B[31m/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/conftest.py\u001B[0m:67: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nbucket_name = 'pandas-test'\r\n\r\n\u001B[1m    def add_tips_files(bucket_name):\u001B[0m\r\n\u001B[1m        for s3_key, file_name in test_s3_files:\u001B[0m\r\n\u001B[1m>           with open(file_name, 'rb') as f:\u001B[0m\r\n\u001B[1m\u001B[31mE           FileNotFoundError: [Errno 2] No such file or directory: '/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/parser/data/items.jsonl'\u001B[0m\r\n\r\n\u001B[1m\u001B[31m/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/conftest.py\u001B[0m:56: FileNotFoundError\r\n____________ ERROR at setup of TestS3.test_parse_public_s3n_bucket _____________\r\n[gw1] linux -- Python 3.5.4 /home/travis/miniconda3/envs/pandas/bin/python\r\n\r\ntips_file = '/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/parser/data/tips.csv'\r\njsonl_file = '/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/parser/data/items.jsonl'\r\n\r\n\u001B[1m    @pytest.fixture(scope='module')\u001B[0m\r\n\u001B[1m    def s3_resource(tips_file, jsonl_file):\u001B[0m\r\n\u001B[1m        \"\"\"Fixture for mocking S3 interaction.\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        The primary bucket name is \"pandas-test\". The following datasets\u001B[0m\r\n\u001B[1m        are loaded.\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        - tips.csv\u001B[0m\r\n\u001B[1m        - tips.csv.gz\u001B[0m\r\n\u001B[1m        - tips.csv.bz2\u001B[0m\r\n\u001B[1m        - items.jsonl\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        A private bucket \"cant_get_it\" is also created. The boto3 s3 resource\u001B[0m\r\n\u001B[1m        is yielded by the fixture.\u001B[0m\r\n\u001B[1m        \"\"\"\u001B[0m\r\n\u001B[1m        pytest.importorskip('s3fs')\u001B[0m\r\n\u001B[1m        moto.mock_s3().start()\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        test_s3_files = [\u001B[0m\r\n\u001B[1m            ('tips.csv', tips_file),\u001B[0m\r\n\u001B[1m            ('tips.csv.gz', tips_file + '.gz'),\u001B[0m\r\n\u001B[1m            ('tips.csv.bz2', tips_file + '.bz2'),\u001B[0m\r\n\u001B[1m            ('items.jsonl', jsonl_file),\u001B[0m\r\n\u001B[1m        ]\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        def add_tips_files(bucket_name):\u001B[0m\r\n\u001B[1m            for s3_key, file_name in test_s3_files:\u001B[0m\r\n\u001B[1m                with open(file_name, 'rb') as f:\u001B[0m\r\n\u001B[1m                    conn.Bucket(bucket_name).put_object(\u001B[0m\r\n\u001B[1m                        Key=s3_key,\u001B[0m\r\n\u001B[1m                        Body=f)\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        boto3 = pytest.importorskip('boto3')\u001B[0m\r\n\u001B[1m        # see gh-16135\u001B[0m\r\n\u001B[1m        bucket = 'pandas-test'\u001B[0m\r\n\u001B[1m    \u001B[0m\r\n\u001B[1m        conn = boto3.resource(\"s3\", region_name=\"us-east-1\")\u001B[0m\r\n\u001B[1m        conn.create_bucket(Bucket=bucket)\u001B[0m\r\n\u001B[1m>       add_tips_files(bucket)\u001B[0m\r\n\r\n\u001B[1m\u001B[31m/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/conftest.py\u001B[0m:67: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nbucket_name = 'pandas-test'\r\n\r\n\u001B[1m    def add_tips_files(bucket_name):\u001B[0m\r\n\u001B[1m        for s3_key, file_name in test_s3_files:\u001B[0m\r\n\u001B[1m>           with open(file_name, 'rb') as f:\u001B[0m\r\n\u001B[1m\u001B[31mE           FileNotFoundError: [Errno 2] No such file or directory: '/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/parser/data/items.jsonl'\u001B[0m\r\n\r\n\u001B[1m\u001B[31m/home/travis/miniconda3/envs/pandas/lib/python3.5/site-packages/pandas/tests/io/conftest.py\u001B[0m:56: FileNotFoundError\r\n```\r\n\r\nIt seems like we end up just installing the conda package from conda-forge?\r\n\r\n```\r\n\r\n\r\nThe following packages will be downloaded:\r\n\r\n    package                    |            build\r\n    ---------------------------|-----------------\r\n    pandas-0.22.0              |   py35hf484d3e_0        10.6 MB\r\n\r\nThe following NEW packages will be INSTALLED:\r\n\r\n    pandas:  0.22.0-py35hf484d3e_0            \r\n\r\nThe following packages will be UPDATED:\r\n\r\n    certifi: 2017.11.5-py35_0      conda-forge --> 2018.1.18-py35_0 \r\n    openssl: 1.0.2n-0              conda-forge --> 1.0.2n-hb7f436b_0\r\n\r\nPreparing transaction: ...working... done\r\nVerifying transaction: ...working... done\r\nExecuting transaction: ...working... done\r\n\r\n[show pandas]\r\n# packages in environment at /home/travis/miniconda3/envs/pandas:\r\n#\r\n# Name                    Version                   Build  Channel\r\npandas                    0.22.0           py35hf484d3e_0  \r\npandas-gbq                0.3.0                     <pip>\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/363791267",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19572#issuecomment-363791267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19572",
    "id": 363791267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Mzc5MTI2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-07T14:47:35Z",
    "updated_at": "2018-02-07T14:47:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "this works on master, but not on branches, this is why I moved the build to allowed failures. "
  }
]
