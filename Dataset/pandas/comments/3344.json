[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16526515",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16526515",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16526515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTI2NTE1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T19:05:34Z",
    "updated_at": "2013-04-17T19:05:55Z",
    "author_association": "NONE",
    "body": "There's an issue for implementing a covariance matrix calculation to the package,\nbut I think matrix algebra  falls somewhat outside the scope of pandas.\nIt's not that isn't useful, it's just that since it's not the focus of pandas, it's better to use\na more focused package for BLAS type operations (I may be in the minority view on this).\n\nYou do know you have access to the underlying numpy array through the `.values`\nattribute? that should free you up to take data out of pandas, process it, and then\nturn it back into a dataframe, if you need to.\n\nmarking as someday for now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16526826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16526826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16526826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTI2ODI2",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T19:09:25Z",
    "updated_at": "2013-04-17T19:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for keeping stats that don't rely on an index out of pandas. That crosses a bit too much the fuzzy line I keep in my head for pandas vs. numerical/statistical packages.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16528891",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16528891",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16528891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTI4ODkx",
    "user": {
      "login": "lrq3000",
      "id": 1118942,
      "node_id": "MDQ6VXNlcjExMTg5NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1118942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrq3000",
      "html_url": "https://github.com/lrq3000",
      "followers_url": "https://api.github.com/users/lrq3000/followers",
      "following_url": "https://api.github.com/users/lrq3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrq3000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrq3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrq3000/subscriptions",
      "organizations_url": "https://api.github.com/users/lrq3000/orgs",
      "repos_url": "https://api.github.com/users/lrq3000/repos",
      "events_url": "https://api.github.com/users/lrq3000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrq3000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T19:29:18Z",
    "updated_at": "2013-04-17T19:36:03Z",
    "author_association": "NONE",
    "body": "As I said, .cov() does not support weights, and it's easy to imagine other specific cases where computing manually the dot product of matrices would be necessary.\n\nAlso as I said, Numpy does not provide a way to manually dot product (as far as I know, Numpy also tries to match in some way), thus this would be an \"innovative\" feature of Pandas.\n\nAnd I never said that the produced matrix couldn't have indexes in some way. For example, indexes make perfect sense in a covariance matrix (with the same keys as both indexes and columns), but with the current implementation based on index matching, it is just not possible.\n\nDot product is an important part of most matrix manipulations, and I feel Pandas is losing a big thing here not implementing this possibility \"just by principle\".\n\nPS: of course it's always possible to make a manual implementation in Python, but the performances would be just awful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16529793",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16529793",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16529793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTI5Nzkz",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T19:36:08Z",
    "updated_at": "2013-04-17T19:36:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://statsmodels.sourceforge.net/devel/generated/statsmodels.stats.weightstats.DescrStatsW.html#statsmodels.stats.weightstats.DescrStatsW\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16530484",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16530484",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16530484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMwNDg0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T19:40:52Z",
    "updated_at": "2013-04-17T19:40:52Z",
    "author_association": "NONE",
    "body": "If the the current cov matrix isn't sophisticated enough for your needs, you really should\nfind a python package that does that sort thing well, with all the rest of the decompositions\nand derivatives and Eigenvalue magic you need.\n\nAlso, If numpy doesn't do \"dot product\" as you define it, I guess I'm not sure what you \nmean by the term.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16530503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16530503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16530503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMwNTAz",
    "user": {
      "login": "lrq3000",
      "id": 1118942,
      "node_id": "MDQ6VXNlcjExMTg5NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1118942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrq3000",
      "html_url": "https://github.com/lrq3000",
      "followers_url": "https://api.github.com/users/lrq3000/followers",
      "following_url": "https://api.github.com/users/lrq3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrq3000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrq3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrq3000/subscriptions",
      "organizations_url": "https://api.github.com/users/lrq3000/orgs",
      "repos_url": "https://api.github.com/users/lrq3000/repos",
      "events_url": "https://api.github.com/users/lrq3000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrq3000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T19:41:00Z",
    "updated_at": "2013-04-17T19:41:00Z",
    "author_association": "NONE",
    "body": "Thank's jseabold, this is indeed a good solution.\n\nAnyway, as I said this is only one example. Another example is to compute the weighted median, weighted deviation to the median and weighted covariance matrix based on median. In this case, there is still a need to compute the dot product.\n\nAnd I don't even mention neural nets feed forward and back propagation...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16531507",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16531507",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16531507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMxNTA3",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T19:48:35Z",
    "updated_at": "2013-04-17T19:48:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Neural networks are very far outside the scope of pandas. \n\nI guess my point here is that these are issues that should be filed with statsmodels (help, you don't have pandas support here yet) or PyBrain or scikit-learn (if and when they get neural nets to work within their API) to support pandas objects at all.\n\nIf you want weighted medians, etc. file an enhancement ticket with statsmodels rather than trying to redefine the scope of pandas. That's my opinion at least and like y-p, I may be in the minority of pandas devs (of which I am not one).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16531896",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16531896",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16531896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMxODk2",
    "user": {
      "login": "lrq3000",
      "id": 1118942,
      "node_id": "MDQ6VXNlcjExMTg5NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1118942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrq3000",
      "html_url": "https://github.com/lrq3000",
      "followers_url": "https://api.github.com/users/lrq3000/followers",
      "following_url": "https://api.github.com/users/lrq3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrq3000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrq3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrq3000/subscriptions",
      "organizations_url": "https://api.github.com/users/lrq3000/orgs",
      "repos_url": "https://api.github.com/users/lrq3000/repos",
      "events_url": "https://api.github.com/users/lrq3000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrq3000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T19:56:41Z",
    "updated_at": "2013-04-17T19:58:14Z",
    "author_association": "NONE",
    "body": "@y-p: You're right, sorry I confused myself, I'm talking about matrix multiplication, not dot product (sorry english is not my first language and math terms are sometimes misleading...).\n\nI will give more pratical informations below.\n\nLink to my SO post with a pratical example:\nhttp://stackoverflow.com/questions/15889998/pandas-force-matrix-multiplication\n\nMore example code:\n\n```\nimport pandas\nimport numpy\nt = pandas.Series([1, 2])\nprint(t.values.T * t.values)\n```\n\nThis prints [1 4] instead of the expected matrix:\n\n```\n[1 2\n 2 4]\n```\n\nI could not find any way to get this result other than using numpy.outer(), and even then, it's not really in the dimension I specify (the \"transpose\" just doesn't affect anything for these operations), but always the outer product.\n\nMaybe I am missing a very simple thing here, but really I have crawled through the whole documentation and even a bit of the code of Pandas, and couldn't find a way to do so.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16532160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16532160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16532160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMyMTYw",
    "user": {
      "login": "lrq3000",
      "id": 1118942,
      "node_id": "MDQ6VXNlcjExMTg5NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1118942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrq3000",
      "html_url": "https://github.com/lrq3000",
      "followers_url": "https://api.github.com/users/lrq3000/followers",
      "following_url": "https://api.github.com/users/lrq3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrq3000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrq3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrq3000/subscriptions",
      "organizations_url": "https://api.github.com/users/lrq3000/orgs",
      "repos_url": "https://api.github.com/users/lrq3000/repos",
      "events_url": "https://api.github.com/users/lrq3000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrq3000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:02:17Z",
    "updated_at": "2013-04-17T20:02:17Z",
    "author_association": "NONE",
    "body": "@jseabold: I don't want to reuse existing models (even if that's a great initiative to make available such libraries), but make my own (not out of pure fun but because the existing models can't fit every use, and I don't intend to do stats but rather implement still-in-research models).\n\nContrarywise to what you are describing, I am not talking about making pandas implement a lot of new functionalities like weighted deviation to median, but just matrix multiplication, which I feel is generic enough to be used for a lot of other applications (after all, this is a basic mathematical operation...).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16532733",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16532733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16532733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMyNzMz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:12:55Z",
    "updated_at": "2013-04-17T20:29:34Z",
    "author_association": "NONE",
    "body": "I think what both jseabold and I are saying, is that there's a substantial scientific/data \npython ecosystem out there, and not all tools do or should do all things. \nIf you have focused packages that do only one thing well you end up with better\noverall tools.\npandas is already a much loved pastiche of (hopefully well-chosen) concepts, but  that \ndoesn't justify making it the kitchen sink.\n\nYou will probably find what you need in numpy, scipy, sklearn and other mega projects\nthat have a dedicated team of developers focusing on their area of expertise.\n\nI suggest you consider joining the [pydata mailing list](http://groups.google.com/group/pydata),\nto discuss your needs, where  you may get helpful suggestions from users who have  perhaps solved similar problems.\n\nThat said, having better integration with other parts of the pydata ecosystem is always a \ndiscussion worth having, so if you come across pain points in that direction. that would\nbe a useful topic to bring up.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16532745",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16532745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16532745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMyNzQ1",
    "user": {
      "login": "lrq3000",
      "id": 1118942,
      "node_id": "MDQ6VXNlcjExMTg5NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1118942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrq3000",
      "html_url": "https://github.com/lrq3000",
      "followers_url": "https://api.github.com/users/lrq3000/followers",
      "following_url": "https://api.github.com/users/lrq3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrq3000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrq3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrq3000/subscriptions",
      "organizations_url": "https://api.github.com/users/lrq3000/orgs",
      "repos_url": "https://api.github.com/users/lrq3000/repos",
      "events_url": "https://api.github.com/users/lrq3000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrq3000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:13:10Z",
    "updated_at": "2013-04-17T20:17:16Z",
    "author_association": "NONE",
    "body": "Guys, I understand your point of view, and I agree that indexing is a major feature of Pandas and it pushes the concept so far that it is likely to become a paradigm in its own right.\n\nBut my point of view is that without matrix multiplication, which is a basic operation, you just cannot make a lot of algorithms.\n\nOn a practical side, even if the principle of \"index matching\" couldn't be strictly followed during a matrix multiplication, Pandas could still try to set the right keys afterwards.\n\nExample:\n\n   Matrix A = n x m\n   Matrix B = m x o\n   Matrix C = A x B = n x o\n\nSo of course, we lose the indexes that spanned over the m dimension, but we still do have the keys of the n dimension and o dimension. So it is perfectly possible to set in the resulting DataFrame (or Series) the indexes to be the indexes of A, and the columns keys to be the column keys of B.\n\n@y-p : thank you for your suggestion, I will see if other solutions are currently available and post the results in here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16533168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16533168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16533168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMzMTY4",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:20:53Z",
    "updated_at": "2013-04-17T20:20:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just use the underlying numpy arrays for whatever you want to do and slap your indices back on afterwards. If every dot product I had to compute had indexing overhead the cost would quickly outweigh the gains no matter how efficient the indexing code is. This would certainly be true for something like a back-propagation algorithm. Indeed, I suspect that pure python numpy arrays alone have more overhead than most people would be comfortable with when coding these algorithms.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16533461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16533461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16533461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMzNDYx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:25:47Z",
    "updated_at": "2013-04-17T20:28:49Z",
    "author_association": "NONE",
    "body": "```\nfrom pandas.util.testing import makeCustomDataframe as mkdf\na=mkdf(3,5,data_gen_f=lambda r,c: randint(1,100))\nb=mkdf(5,3,data_gen_f=lambda r,c: randint(1,100))\nc=DataFrame(a.values.dot(b.values),index=a.index,columns=b.columns)\nprint a\nprint b\nprint c\nassert  (a.iloc[0,:].values*b.iloc[:,0].values.T).sum() == c.iloc[0,0]\n\nC0       C_l0_g0  C_l0_g1  C_l0_g2  C_l0_g3  C_l0_g4\nR0                                                  \nR_l0_g0       39       87       88        2       65\nR_l0_g1       59       14       76       10       65\nR_l0_g2       93       69        4       29       58\nC0       C_l0_g0  C_l0_g1  C_l0_g2\nR0                                \nR_l0_g0       76       88       11\nR_l0_g1       66       73       47\nR_l0_g2       78       69       15\nR_l0_g3       47        3       40\nR_l0_g4       54       31       31\nC0       C_l0_g0  C_l0_g1  C_l0_g2\nR0                                \nR_l0_g0    19174    17876     7933\nR_l0_g1    15316    13503     4862\nR_l0_g2    16429    15382     7284\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16534370",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16534370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16534370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM0Mzcw",
    "user": {
      "login": "lrq3000",
      "id": 1118942,
      "node_id": "MDQ6VXNlcjExMTg5NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1118942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrq3000",
      "html_url": "https://github.com/lrq3000",
      "followers_url": "https://api.github.com/users/lrq3000/followers",
      "following_url": "https://api.github.com/users/lrq3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrq3000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrq3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrq3000/subscriptions",
      "organizations_url": "https://api.github.com/users/lrq3000/orgs",
      "repos_url": "https://api.github.com/users/lrq3000/repos",
      "events_url": "https://api.github.com/users/lrq3000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrq3000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:41:59Z",
    "updated_at": "2013-04-17T20:41:59Z",
    "author_association": "NONE",
    "body": "@y-p exactly what I need! Through I wonder in this would work with DataFrame x Series and Series x Series?\n\nAlso, could you please explain me what the assert does?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16534449",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16534449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16534449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM0NDQ5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:43:19Z",
    "updated_at": "2013-04-17T20:43:19Z",
    "author_association": "NONE",
    "body": "Just wanted to make it explicit that it's really a matrix multiplication, without \nyou having to break out a calculator.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16534551",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16534551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16534551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM0NTUx",
    "user": {
      "login": "lrq3000",
      "id": 1118942,
      "node_id": "MDQ6VXNlcjExMTg5NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1118942?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lrq3000",
      "html_url": "https://github.com/lrq3000",
      "followers_url": "https://api.github.com/users/lrq3000/followers",
      "following_url": "https://api.github.com/users/lrq3000/following{/other_user}",
      "gists_url": "https://api.github.com/users/lrq3000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lrq3000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lrq3000/subscriptions",
      "organizations_url": "https://api.github.com/users/lrq3000/orgs",
      "repos_url": "https://api.github.com/users/lrq3000/repos",
      "events_url": "https://api.github.com/users/lrq3000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lrq3000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:45:18Z",
    "updated_at": "2013-04-17T20:46:07Z",
    "author_association": "NONE",
    "body": "Ok that's great! Thank's a lot for your time!\n\nBut still I think that a wrapper method that would do this operation on its own would be just great! (you can't know how much time I have crawled the web and never found a so simple and efficient implementation)\n\nMeanwhile, I'll use that in my own function and check that it's working alright with Series too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16534747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3344#issuecomment-16534747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3344",
    "id": 16534747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM0NzQ3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-17T20:48:49Z",
    "updated_at": "2013-04-17T20:48:49Z",
    "author_association": "NONE",
    "body": "numpy broadcasting should serve you well, and you can explore the section about [monkey patching](http://pandas.pydata.org/pandas-docs/dev/faq.html#adding-features-to-your-pandas-installation) \nin the docs to roll your own dataframe methods easily.\n\nClosing now.\n"
  }
]
