[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15340749",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15340749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15340749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQwNzQ5",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T17:17:42Z",
    "updated_at": "2013-03-23T17:21:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p \n\n> alignment can yield big wins. most def.\n> \n> need to validate that this is what's actually happening though.\n\nAlready almost 99% sure that arrays are not always 128-bit aligned at the start (I tried testing for it manually at runtime from Cython, requiring both input and output arrays to be 128-bit aligned basically eliminates the effect of my refinement, meaning they're almost never both aligned unless randomly so), I don't know if that's causing the entire performance/variability issue but it can't be helping.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15340809",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15340809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15340809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQwODA5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T17:21:16Z",
    "updated_at": "2013-03-23T17:22:29Z",
    "author_association": "NONE",
    "body": "This sounds like it might involve some pain to apply throughout?\n\nJust getting some perf numbers on a toy example, measuring the\nbenefit if any, would be real interesting...\n\nThis really is turning into an ATLAS/BLAS style line of research.. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15340823",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15340823",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15340823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQwODIz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T17:22:18Z",
    "updated_at": "2013-03-23T17:22:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p can probably just target a few key cases (block consolidation, DataFrame construction, etc.) to handle 90%...and with a helper function\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15340886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15340886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15340886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQwODg2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T17:25:58Z",
    "updated_at": "2013-03-23T17:25:58Z",
    "author_association": "NONE",
    "body": "Making performant code often involves making the codebase more fragmented,\nless readable, and raises the entry barrier for new developers to come in. \nJust a good idea to do a spot check to make sure the perf gains are significant \nenough before monkey patching the libc with inline asm....\n\nWould this be somehthing users can employ in their own code, so if they\ninvest the effort, pandas perf will benefit? or does it strictly require changes\nto pandas itself?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15340945",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15340945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15340945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQwOTQ1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T17:29:27Z",
    "updated_at": "2013-03-23T17:30:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p I think just handling allocations that Python does internally is good enough...if someone passes us a non-aligned array then we just won't trigger the optimized case (detecting alignment at runtime is easy, just convert the pointer to an integer and mod 16)...to be honest, just handling the block consolidation case might do 75% of what we need in practice (but not for the test suite, since it almost never consolidates), and that's just one line of code.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15340991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15340991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15340991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQwOTkx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T17:31:49Z",
    "updated_at": "2013-03-23T17:37:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, notice that on the low-end, I've gotten results with my SIMD-triggering small-array optimization like:\n\n```\nframe_reindex_axis0                         0.4789     1.0887     0.4399\nframe_reindex_axis0                         0.4191     0.9355     0.4480\n```\n\nThis happened more than once and on an overnight run with no competing processes, so it's probably not a fluke.\n\nThe high end results:\n\n```\nframe_reindex_axis0                         1.4141     0.4546     3.1107\nframe_reindex_axis0                         1.4211     0.4163     3.4140\n```\n\nmake sense too because it's repeatedly calling the vectorized code in a loop, but the vectorized code needs to check for alignment at the beginning and end of both input and output source arrays. If the stride is not a multiple of 128-bits, then the alignments will be random (since the indexing is random as well) and branch prediction will not only defeated, you'll actually pay a significant penalty having to revert the mispredicted pipeline. (See [Why is processing a sorted array faster than an unsorted array?](http://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-an-unsorted-array))\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15341132",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15341132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15341132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQxMTMy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T17:38:08Z",
    "updated_at": "2013-03-23T17:38:08Z",
    "author_association": "NONE",
    "body": "That looks really promising.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15341752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15341752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15341752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQxNzUy",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T18:11:03Z",
    "updated_at": "2013-03-23T18:14:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wesm any thoughts on the space overhead? (again, worst case would be at 288 bits per row, bumped up to 384 bits per row, all downhill from there. (guess we have to see how much performance improves at that size, first, of course, just curious if you think its enough overhead to be relevant)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15341959",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15341959",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15341959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQxOTU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T18:21:50Z",
    "updated_at": "2013-03-23T18:21:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect there might be a nice trade off here\n\nsay u increase memory by 1.5x but get 1.5 speed improvement\nI would take that say <10000 rows for sure\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15342030",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15342030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15342030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQyMDMw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T18:25:19Z",
    "updated_at": "2013-03-23T18:27:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback looks more like absolute-worst-case 33% (i.e. 1.33x) space for up to 125% (i.e. 2.25x) improvement (or possibly more, with further refinement), we'll see after more testing :)...we can always bump up the minimum size for alignment but that means that anyone with fewer columns per block than the minimum gets the short shrift even if they'd prefer the speed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15342162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15342162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15342162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQyMTYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T18:32:22Z",
    "updated_at": "2013-03-23T18:32:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "then that's even better\n\nwonder how that scales to lots of rows ...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15342488",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15342488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15342488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQyNDg4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T18:50:38Z",
    "updated_at": "2013-03-23T18:50:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p non-cached builds have the same variability, apparently, so your build cacher is vindicated :) (sorry for the bad guess!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15342517",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15342517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15342517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQyNTE3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T18:52:31Z",
    "updated_at": "2013-03-23T18:52:31Z",
    "author_association": "NONE",
    "body": "[link](https://en.wikipedia.org/wiki/Fist_pump)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15343140",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15343140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15343140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQzMTQw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T19:26:40Z",
    "updated_at": "2013-03-23T19:27:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "if 288 -> 384 is ok, then 192 -> 256 should be ok too (same ratio)...so this allows speedup anytime >= 3 int64/float64 are stored together\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15343360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15343360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15343360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQzMzYw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T19:39:38Z",
    "updated_at": "2013-03-23T19:39:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> wonder how that scales to lots of rows ...\n\nThe percent improvement should stay constant (or even get better, due to better branch prediction) as the number of rows increases; the real variable is the size of the copied row (not sure if that's what you meant...)...presumably it should improve the most with smaller rows and then gradually even out until you get to 256 bytes (which is where we start calling `memmove()` anyway)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15344167",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15344167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15344167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ0MTY3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T20:29:41Z",
    "updated_at": "2013-03-23T20:29:41Z",
    "author_association": "NONE",
    "body": "@stephenwlin , do you have a direct way of checking the alignment of arrays? or are you\ninferring it from benchmarks?\n\nI thought perhaps it would be worthwhile to repeat the tests with py33, just in case some\nof the internal wiring saw changes during the great migration, if improvements to this\nwere made in the last couple of years, they probably would have landed in 3.x, not 2.7.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15346833",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15346833",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15346833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ2ODMz",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-23T22:10:28Z",
    "updated_at": "2013-03-24T03:24:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p I can check at runtime easily, it's just hard to get that information out as output from the test suite directly; basically, I just turned off the optimization except in 128-bit alignment cases, and almost all the performance changes (positive and negative) disappeared (because doubles are only 32-bit aligned on my machine, by default, so two arrays that happen to be 128-bit aligned is rare). turning them off except in 64-bit alignment cases made the effect larger than the 128-bit requirement case, but not as much as turning off the requirement entirely. (that's where I'm getting the results that vary from ~0.45 to ~3.4) **EDIT:** I have definitely confirmed that numpy arrays are not 128-bit aligned by default\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15349360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15349360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15349360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzQ5MzYw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T01:10:51Z",
    "updated_at": "2013-03-24T05:23:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "this works for allocating SIMD-friendly arrays:\n- http://pastebin.com/RnmmVsiz\n\noutput:\n- http://pastebin.com/fQVG4Nks\n\n(it handles row/column alignment as long as it can do so within 4/3 of the original size, and it's better than the version above in that it uses the largest usable type for allocation rather than wasting a constant 15 bytes every time...i.e. if uint64 is usable, then the maximum penalty is 8 bytes, if uint32 then 12 bytes, if uint16 then 14 bytes...it even works with float96. **EDIT:** will now also fall back to smaller power of 2 alignments if possible within 4/3 of the original size)\n\ncan one of you on 64-bit run it and make sure all the assertions pass? I can't imagine that they wouldn't...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15355973",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15355973",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15355973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzU1OTcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T12:33:21Z",
    "updated_at": "2013-03-24T12:33:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [21]: %run /home/jreback/aligned_empty.py.txt\n1 uint8 1 => 1 (1.0x)\n2 uint8 2 => 2 (1.0x)\n3 uint8 3 => 4 (1.33333333333x)\n4 uint8 4 => 4 (1.0x)\n5 uint8 5 => 6 (1.2x)\n6 uint8 6 => 8 (1.33333333333x)\n7 uint8 7 => 8 (1.14285714286x)\n8 uint8 8 => 8 (1.0x)\n9 uint8 9 => 12 (1.33333333333x)\n10 uint8 10 => 12 (1.2x)\n11 uint8 11 => 12 (1.09090909091x)\n12 uint8 12 => 16 (1.33333333333x)\n13 uint8 13 => 16 (1.23076923077x)\n14 uint8 14 => 16 (1.14285714286x)\n15 uint8 15 => 16 (1.06666666667x)\n16 uint8 16 => 16 (1.0x)\n1 uint16 2 => 2 (1.0x)\n2 uint16 4 => 4 (1.0x)\n3 uint16 6 => 8 (1.33333333333x)\n4 uint16 8 => 8 (1.0x)\n5 uint16 10 => 12 (1.2x)\n6 uint16 12 => 16 (1.33333333333x)\n7 uint16 14 => 16 (1.14285714286x)\n8 uint16 16 => 16 (1.0x)\n9 uint16 18 => 24 (1.33333333333x)\n10 uint16 20 => 24 (1.2x)\n11 uint16 22 => 24 (1.09090909091x)\n12 uint16 24 => 32 (1.33333333333x)\n13 uint16 26 => 32 (1.23076923077x)\n14 uint16 28 => 32 (1.14285714286x)\n15 uint16 30 => 32 (1.06666666667x)\n16 uint16 32 => 32 (1.0x)\n1 uint32 4 => 4 (1.0x)\n2 uint32 8 => 8 (1.0x)\n3 uint32 12 => 16 (1.33333333333x)\n4 uint32 16 => 16 (1.0x)\n5 uint32 20 => 24 (1.2x)\n6 uint32 24 => 32 (1.33333333333x)\n7 uint32 28 => 32 (1.14285714286x)\n8 uint32 32 => 32 (1.0x)\n9 uint32 36 => 48 (1.33333333333x)\n10 uint32 40 => 48 (1.2x)\n11 uint32 44 => 48 (1.09090909091x)\n12 uint32 48 => 48 (1.0x)\n13 uint32 52 => 64 (1.23076923077x)\n14 uint32 56 => 64 (1.14285714286x)\n15 uint32 60 => 64 (1.06666666667x)\n16 uint32 64 => 64 (1.0x)\n1 float64 8 => 8 (1.0x)\n2 float64 16 => 16 (1.0x)\n3 float64 24 => 32 (1.33333333333x)\n4 float64 32 => 32 (1.0x)\n5 float64 40 => 48 (1.2x)\n6 float64 48 => 48 (1.0x)\n7 float64 56 => 64 (1.14285714286x)\n8 float64 64 => 64 (1.0x)\n9 float64 72 => 80 (1.11111111111x)\n10 float64 80 => 80 (1.0x)\n11 float64 88 => 96 (1.09090909091x)\n12 float64 96 => 96 (1.0x)\n13 float64 104 => 112 (1.07692307692x)\n14 float64 112 => 112 (1.0x)\n15 float64 120 => 128 (1.06666666667x)\n16 float64 128 => 128 (1.0x)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n/usr/local/lib/python2.7/site-packages/ipython-0.13.1-py2.7.egg/IPython/utils/py3compat.pyc in execfile(fname, *where)\n    176             else:\n    177                 filename = fname\n--> 178             __builtin__.execfile(filename, *where)\n\n/home/jreback/aligned_empty.py.txt in <module>()\n     78 test(16, dtype='uint32')\n     79 test(16, dtype='float64')\n---> 80 test(16, dtype='float96')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15356303",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15356303",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15356303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzU2MzAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T12:39:41Z",
    "updated_at": "2013-03-24T12:39:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "fyi...this is how I setup a virtual 32-bit box, you can easily do the same for 64-bit. It has maintained a persistent ssh connection (I have not restarted it), and build many times. (e.g. I just installed numpy 1.7.0 to test ou a change the other day). This is not the exact link I used, but should get you started.\n\nhttp://www.vagrantup.com/\nhttp://docs.openstack.org/diablo/openstack-compute/admin/content/openstack-compute-installation-using-virtualbox-vagrant-and-chef.html\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15362151",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15362151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15362151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzYyMTUx",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T16:35:44Z",
    "updated_at": "2013-03-24T16:40:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, can you do a 64-bit virtual box within a 32-bit host?\n\n> TypeError                                 Traceback (most recent call last)\n> /usr/local/lib/python2.7/site-packages/ipython-0.13.1-py2.7.egg/IPython/utils/py3compat.pyc in execfile(fname, *where)\n>     176             else:\n>     177                 filename = fname\n> --> 178             **builtin**.execfile(filename, *where)\n> \n> /home/jreback/aligned_empty.py.txt in <module>()\n>      78 test(16, dtype='uint32')\n>      79 test(16, dtype='float64')\n> ---> 80 test(16, dtype='float96')\n\nI guess your machine doesn't support 'float96' (at least in 64-bit mode?) 96 doesn't divide evenly into 64-bit, so that makes sense. Anyway, I'll take a look when I get a 64-bit build either way, \"float96\" is a corner case anyway but I wanted to test a type whose size wasn't a factor of 128-bits.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15362295",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15362295",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15362295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzYyMjk1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T16:42:03Z",
    "updated_at": "2013-03-24T16:42:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "these are remote hosts, so u can find exactly what u want (arch and os)\nthen u build your environment and such \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15362520",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15362520",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15362520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzYyNTIw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T16:53:27Z",
    "updated_at": "2013-03-24T16:53:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh ok...well, I might just dual boot, it won't be that hard\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15364458",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15364458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15364458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzY0NDU4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T17:41:02Z",
    "updated_at": "2013-03-24T18:34:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK something very screwy is going on with `frame_reindex_axis0`...I've verified in a C testbed that taking advantage of alignment and contiguity for small arrays can help by up to 40% (and this can be applied to other algos too, and probably with greater benefits if more than just copying is being done), but there's too much noise from other factors and unpredictable outliers to get a clean read from vb_suite.\n\ni'll update this in a week or so after doing a lot of systematic (50 vb-suite overnights) with targeted changes, that should get to the bottom of this.\n\n**EDIT:** ok, just found this, testing a dummy commit (just changed a release notes file) against its immediate parent\n\n```\nframe_reindex_axis0                  1.4083       0.4687       3.0049\n```\n\nsomething is definitely amiss and it will make it hard to get clean performance numbers until we figure this out...\n\nIndependent of the `frame_reindex_axis0` issue though, I do get performance results like:\n\n```\nreindex_frame_level_reindex                 0.8219     1.6047     0.5122\nreindex_frame_level_reindex                 0.8178     1.4096     0.5802\nreindex_frame_level_reindex                 0.8347     1.4042     0.5944\nreindex_frame_level_align                   0.8747     1.4033     0.6233\nreindex_frame_level_reindex                 0.8170     1.2948     0.6310\nreindex_frame_level_align                   0.8664     1.3697     0.6325\nreindex_frame_level_reindex                 0.8344     1.3103     0.6368\nreindex_frame_level_reindex                 0.8205     1.2783     0.6419\nreindex_frame_level_reindex                 0.7967     1.2393     0.6428\nreindex_frame_level_reindex                 0.8046     1.2517     0.6428\n```\n\nfor the top 10 improvements in `reindex_frame_level_*`, versus:\n\n```\nreindex_frame_level_align                   1.3920     1.3016     1.0695\nreindex_frame_level_reindex                 1.3499     1.2603     1.0711\nreindex_frame_level_align                   1.3774     1.2707     1.0839\nreindex_frame_level_align                   1.4130     1.2864     1.0984\nreindex_frame_level_reindex                 1.4262     1.2599     1.1320\nreindex_frame_level_reindex                 1.4292     1.2603     1.1340\nreindex_frame_level_align                   1.4512     1.2794     1.1343\nreindex_frame_level_reindex                 1.4277     1.2287     1.1620\nreindex_frame_level_reindex                 1.4711     1.2557     1.1715\nreindex_frame_level_reindex                 1.4835     1.2424     1.1941\n```\n\nfor the top 10 worst regressions, across 50 tests (0.84586 mean +- 0.17275 standard deviation)...these two tests specifically copy small arrays over and over so would be particularly alignment-sensitive. So I'm still betting on alignment as part of the issue: if we fix the alignment problem we ought to be able to lock in the improvements (modulo whatever random variation is coming from the the unknown noise affecting `frame_reindex_axis0` in particular, but possibly the rest of the suite as well).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15365874",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15365874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15365874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzY1ODc0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T18:51:43Z",
    "updated_at": "2013-03-24T18:51:59Z",
    "author_association": "NONE",
    "body": "tweaked test_perf a bit, should have less overhead, significant if you're running \na short test many times:\n\n```\nλ time ./test_perf.sh -t 7d11531 -b  da54321 -r  frame_reindex_axis0\n\nreal    0m15.694s\nuser    0m12.598s\nsys 0m1.804s\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15368390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15368390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15368390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzY4Mzkw",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T20:24:21Z",
    "updated_at": "2013-03-24T20:31:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "> 0.84586 mean +- 0.17275 standard deviation\n\nactually, just realized geometric mean is more important here, since it's ratios (ratios skew the arithmetic mean higher, since the average of 1/x and x is greater than 1 for positive x)\n\n```\nIn [28]: np.exp(np.log(df[3]).mean()) - 1.0\nOut[28]: -0.17197250073993742\n\nIn [29]: np.exp(np.log(df[3]).std()) - 1.0\nOut[29]: 0.23146744636695282\n```\n\nso it's an average of 17% improvement, +- 23% std deviation...if the deviation is due to a factor that can be controlled somehow, then the improvement could easily be greater that the current average.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15407065",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15407065",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15407065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDA3MDY1",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T17:17:20Z",
    "updated_at": "2013-03-25T22:30:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here are performance results from C with SSE, 32-bit Ubuntu Linux with GCC 4.7.2, -O3 flag.\n\n```\n       naive   memmove    contig       sse\ncount                                     \n2          1  0.694165  1.886186  5.275820\n3          1  0.690138  1.393083  4.196950\n4          1  0.491735  1.142775  3.224919\n5          1  0.608015  1.122087  3.527070\n6          1  0.546905  1.279570  4.005941\n7          1  0.358374  1.449010  3.783525\n8          1  0.565996  1.465419  3.898268\n9          1  0.641629  1.338270  3.209346\n10         1  0.666388  1.251177  3.018939\n11         1  0.495000  1.115493  2.635607\n12         1  0.715945  1.387879  3.212425\n13         1  0.803279  1.288380  2.797422\n14         1  0.784871  1.330000  2.979633\n15         1  0.574341  1.358223  2.288217\n16         1  0.773923  1.365252  2.237864\n17         1  0.837805  1.227882  1.839357\n18         1  0.865311  1.298379  1.956897\n19         1  0.708071  1.302797  1.714467\n20         1  0.880435  1.406537  1.860811\n21         1  0.914513  1.289720  1.877551\n22         1  0.965116  1.321393  1.814208\n23         1  0.855867  1.386364  1.775132\n24         1  0.953092  1.419048  1.977876\n25         1  0.995519  1.318497  1.821038\n26         1  1.023810  1.367179  1.893466\n27         1  0.977011  1.436114  2.023810\n28         1  0.996992  1.364198  1.894286\n29         1  1.083062  1.303922  1.950147\n30         1  1.092715  1.330645  1.976048\n31         1  0.988848  1.379668  1.996997\n32         1  1.108534  1.390852  2.030349\n33         1  1.185121  1.418219  1.932299\n34         1  1.451556  1.659553  2.373547\n35         1  1.229607  1.652792  2.319088\n36         1  1.175795  1.389353  1.858939\n37         1  1.313297  1.416503  1.912467\n38         1  1.233550  1.336345  1.945906\n39         1  1.411504  1.689619  2.155405\n40         1  1.454049  1.676810  2.315942\n41         1  1.477778  1.645361  2.225941\n42         1  1.499051  1.628866  2.234795\n43         1  1.398762  1.564787  2.164159\n44         1  1.482662  1.641079  2.225035\n45         1  1.528155  1.581910  2.162088\n46         1  1.564307  1.520349  2.254310\n47         1  1.414923  1.553447  2.243867\n48         1  1.515444  1.686359  2.350299\n49         1  1.570707  1.640295  2.260174\n50         1  1.587810  1.607741  2.247076\n51         1  1.430698  1.574207  2.121379\n52         1  1.531000  1.616684  2.225291\n53         1  1.596074  1.526680  2.210300\n54         1  1.592516  1.609244  2.197991\n55         1  1.440419  1.577244  2.134181\n56         1  1.528398  1.566528  2.159026\n57         1  1.593717  1.592050  2.137640\n58         1  1.680131  1.626850  2.246715\n59         1  1.494516  1.539014  2.172464\n60         1  1.561458  1.556594  2.105337\n61         1  1.638368  1.517875  2.141210\n62         1  1.597430  1.541322  2.152958\n63         1  1.491474  1.494472  2.121255\n64         1  1.541841  1.568085  2.099715\n...\n497        1  1.359706  1.174881  1.393025\n498        1  1.349453  1.151869  1.371985\n499        1  1.324887  1.167464  1.365672\n500        1  1.315406  1.124708  1.356203\n501        1  1.339171  1.155008  1.354147\n502        1  1.302785  1.165595  1.384909\n503        1  1.349309  1.170264  1.394286\n504        1  1.297445  1.144928  1.346591\n505        1  1.327869  1.151659  1.376771\n506        1  1.345725  1.130367  1.379048\n507        1  1.337037  1.138801  1.342007\n508        1  1.378505  1.179057  1.412835\n509        1  1.327256  1.153724  1.376181\n510        1  1.313474  1.146400  1.364762\n511        1  1.351054  1.183936  1.415946\n512        1  1.345725  1.149206  1.388303\n```\n\n\"count\" is the number of doubles to be copied in a loop, \"naive\" is the equivalent of the simple cython loop (variable strides), \"memmove\" is with a simple call to memmove (no threshold), \"contig\" is loop that assumes contiguous copies, and \"sse\" is an aligned sse version, higher numbers are better.\n\nSo SSE and alignment can definitely make a difference (probably even more so in other algorithms, this is just a basic example).\n\n**EDIT:** Updated the results above with a further refinement.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15407923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15407923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15407923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDA3OTIz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T17:30:15Z",
    "updated_at": "2013-03-25T17:30:15Z",
    "author_association": "NONE",
    "body": "`test_perf` can now save the results frame in a pickle file,\nHope it helps you collect and analyze run data.\na12d480\n\n```\nλ ./test_perf.sh -t 85e7db7 -b fefdcd8 -r axis0 -d o.pickle \n...\n\n-----------------------------------------------------------------------\nTest name                      | target[ms] |  base[ms]  |   ratio    |\n-----------------------------------------------------------------------\nstats_rank2d_axis0_average          28.9161      28.8471       1.0024\nframe_reindex_axis0                  0.8263       0.8147       1.0143\n-----------------------------------------------------------------------\nTest name                      | target[ms] |  base[ms]  |   ratio    |\n-----------------------------------------------------------------------\n\nRatio < 1.0 means the target commit is faster then the baseline.\nSeed used: 1234\n\nTarget [85e7db7] : BUG/CLN: Exception in HDFStore are now ValueError or TypeError \nBase   [fefdcd8] : BUG: GH3163 fixed to_csv with a boundry condition issue at the chunksize break\n\n\n*** Results were also written to the logfile at '/home/user1/src/pandas/vb_suite.log'\n*** The results DataFrame was written to '/home/user1/src/pandas/vb_suite/o.pickle'\n```\n\n``` python\nIn [22]: pd.load(\"vb_suite/o.pickle\")\nOut[22]: \n                               t_head  t_baseline     ratio\nname                                                       \nstats_rank2d_axis0_average  28.916097   28.847098  1.002392\nframe_reindex_axis0          0.826338    0.814686  1.014302\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15423576",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15423576",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15423576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDIzNTc2",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T20:33:18Z",
    "updated_at": "2013-03-25T20:33:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p thanks--I'm already scripted to use to `cat`, `grep`, `sed`, `sort`, and `cut` from the command line, but maybe I'll transition to this next time since it's probably more robust.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15428418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3146#issuecomment-15428418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3146",
    "id": 15428418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDI4NDE4",
    "user": {
      "login": "stephenwlin",
      "id": 2342637,
      "node_id": "MDQ6VXNlcjIzNDI2Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2342637?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenwlin",
      "html_url": "https://github.com/stephenwlin",
      "followers_url": "https://api.github.com/users/stephenwlin/followers",
      "following_url": "https://api.github.com/users/stephenwlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenwlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenwlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenwlin/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenwlin/orgs",
      "repos_url": "https://api.github.com/users/stephenwlin/repos",
      "events_url": "https://api.github.com/users/stephenwlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenwlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T22:00:10Z",
    "updated_at": "2013-03-25T22:34:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "results are updated above, now small arrays w/ <=10 doubles improves 3x-5x, w/ <=64 doubles improves up to 2x, big arrays seem to have steady 1.36x improvement.\n"
  }
]
