[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255441051",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14467#issuecomment-255441051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14467",
    "id": 255441051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTQ0MTA1MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T18:52:12Z",
    "updated_at": "2016-10-21T18:52:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "you have several issues. \n- nested lists are not meaningful for indexes. you generally want a MultiIndex, which you need to explicitly create\n- the data is 3 columns, 2 on the index (you have the reverse)\n\n```\nIn [13]: pd.DataFrame([[1, 2, 3], [4, 5, 6]], columns=list('ABC'), index=['foo', 'bar'])\nOut[13]:\n     A  B  C\nfoo  1  2  3\nbar  4  5  6\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255444615",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14467#issuecomment-255444615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14467",
    "id": 255444615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTQ0NDYxNQ==",
    "user": {
      "login": "madphysicist",
      "id": 4617010,
      "node_id": "MDQ6VXNlcjQ2MTcwMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4617010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/madphysicist",
      "html_url": "https://github.com/madphysicist",
      "followers_url": "https://api.github.com/users/madphysicist/followers",
      "following_url": "https://api.github.com/users/madphysicist/following{/other_user}",
      "gists_url": "https://api.github.com/users/madphysicist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/madphysicist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/madphysicist/subscriptions",
      "organizations_url": "https://api.github.com/users/madphysicist/orgs",
      "repos_url": "https://api.github.com/users/madphysicist/repos",
      "events_url": "https://api.github.com/users/madphysicist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/madphysicist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T19:16:21Z",
    "updated_at": "2016-10-21T19:16:21Z",
    "author_association": "NONE",
    "body": "Then why do cases 1 and 2 work? The problem is that the behavior is inconsistent.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255445904",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14467#issuecomment-255445904",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14467",
    "id": 255445904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTQ0NTkwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-21T19:24:41Z",
    "updated_at": "2016-10-21T19:24:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "the shapes are correct there\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/255565541",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14467#issuecomment-255565541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14467",
    "id": 255565541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTU2NTU0MQ==",
    "user": {
      "login": "madphysicist",
      "id": 4617010,
      "node_id": "MDQ6VXNlcjQ2MTcwMTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4617010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/madphysicist",
      "html_url": "https://github.com/madphysicist",
      "followers_url": "https://api.github.com/users/madphysicist/followers",
      "following_url": "https://api.github.com/users/madphysicist/following{/other_user}",
      "gists_url": "https://api.github.com/users/madphysicist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/madphysicist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/madphysicist/subscriptions",
      "organizations_url": "https://api.github.com/users/madphysicist/orgs",
      "repos_url": "https://api.github.com/users/madphysicist/repos",
      "events_url": "https://api.github.com/users/madphysicist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/madphysicist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-23T02:20:49Z",
    "updated_at": "2016-10-23T02:20:49Z",
    "author_association": "NONE",
    "body": "Case 1 only differs from the \"broken\" case in that is passes in an `ndarray` for `data` instead of a nested list. The multiindex is passed in as a nested list. I do not think that the shape matches there (3 columns vs two element list). My question for that specific one is then how does the exact type of the input affect the way `columns` gets interpreted?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/256351923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14467#issuecomment-256351923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14467",
    "id": 256351923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NjM1MTkyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-26T13:45:48Z",
    "updated_at": "2016-10-26T13:45:48Z",
    "author_association": "MEMBER",
    "body": "@jreback I didn't know you could pass a list of lists to represent a MultiIndex (like you would pass to `MultiIndex.from_arrays`, but in any case it works in certain cases and it not working in the certain example of @madphysicist is inconsistent:\n- So passing a nested list or corresponding array as the _data_ gives the same result\n\n```\nIn [78]: pd.DataFrame([[1, 2, 3], [4, 5, 6]])\nOut[78]: \n   0  1  2\n0  1  2  3\n1  4  5  6\n\nIn [79]: pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6]]))\nOut[79]: \n   0  1  2\n0  1  2  3\n1  4  5  6\n```\n- The same as above, but passing a nested list to `index=` -> nested list is interpreted as a MultiIndex:\n\n```\nIn [82]: pd.DataFrame([[1, 2, 3], [4, 5, 6]], index=[['A', 'A'], ['a', 'b']])\nOut[82]: \n     0  1  2\nA a  1  2  3\n  b  4  5  6\n\nIn [83]: pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6]]), index=[['A', 'A'], ['a', 'b']])\nOut[83]: \n     0  1  2\nA a  1  2  3\n  b  4  5  6\n\nIn [84]: pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6]]), index=[['A', 'A'], ['a', 'b']]).index\nOut[84]: \nMultiIndex(levels=[['A'], ['a', 'b']],\n           labels=[[0, 0], [0, 1]])\n\n```\n- The same for `columns=` -> but now there is a difference between having a list vs array for the _data_:\n\n```\nIn [80]: pd.DataFrame([[1, 2, 3], [4, 5, 6]], columns=[['A', 'A', 'A'], ['a', 'b', 'c']])\n...\nAssertionError: 2 columns passed, passed data had 3 columns\n\nIn [81]: pd.DataFrame(np.array([[1, 2, 3], [4, 5, 6]]), columns=[['A', 'A', 'A'], ['a', 'b', 'c']])\nOut[81]: \n   A      \n   a  b  c\n0  1  2  3\n1  4  5  6\n```\n"
  }
]
