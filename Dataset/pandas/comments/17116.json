[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318869918",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-318869918",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 318869918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg2OTkxOA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-30T00:58:23Z",
    "updated_at": "2017-07-30T00:58:23Z",
    "author_association": "MEMBER",
    "body": "Yes, it sure seems like `pd.Period` should be immutable, though I don't know the historical context.\r\n\r\n> If so, is there a preferred way of imposing that? \r\n\r\nThe standard way is to hide attributes like `freq` behind properties, so they can only be accessed through public APIs, not set, e.g.,\r\n```python\r\nclass Period(object):\r\n    ...\r\n\r\n    @property\r\n    def freq(self):\r\n        return self._freq\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318883721",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-318883721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 318883721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODg4MzcyMQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-30T07:13:25Z",
    "updated_at": "2017-07-30T07:13:25Z",
    "author_association": "MEMBER",
    "body": "OK, I can take care of this.\r\n\r\nAs long as we're looking at futzing with `pd.Period`, this might be a good time to make design decisions about `_libs.period.IncompatibleFrequency`.  See e.g. #17112, #13129, #15183, ...\r\n\r\nRight now two `pd.Period` objects can be compared (sorted, put into a well-behaved Index,...) if and only if they have the same frequency.  AFAICT this choice was made in order to avoid having to take a stand on the other cases.  How about a lexicographic ordering based on (start_time, freq)?  `Timestamp` and `datetime` objects can implicitly have a frequency of zero."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318915512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-318915512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 318915512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODkxNTUxMg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-30T17:12:00Z",
    "updated_at": "2017-07-30T17:12:00Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel Comparisons between periods with different frequencies is also worth discussing, but please open a separate issue for that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318961924",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-318961924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 318961924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODk2MTkyNA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T04:02:01Z",
    "updated_at": "2017-07-31T04:02:01Z",
    "author_association": "MEMBER",
    "body": "In profiling some downstream code I found that `DateOffset.__ne__` and `DateOffset.__eq__` were taking an enormous amount of time.  It looks like this is because it is calling `self._params() == other._params()` in each call to `__eq__`.  Point being: there's some real mileage to be picked up by making `_params()` a `cache_readonly` or something.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319032725",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319032725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319032725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTAzMjcyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T10:43:02Z",
    "updated_at": "2017-07-31T10:44:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that we don't explicity test, nor write down anywhere, the implicit guarantee for the pandas scalars ``Timestamp/Period/Interval`` that they are immutable.\r\n\r\nSo most important are tests here.\r\n\r\nThis is almost trivial to fix. See how ``_Timestamp`` is defined, IOW the attributes are ``cdef readonly``, while ``Period`` are not.\r\n\r\nWould appreciate tests on all of the scalar types."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319126504",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319126504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319126504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTEyNjUwNA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T16:38:26Z",
    "updated_at": "2017-07-31T16:38:26Z",
    "author_association": "MEMBER",
    "body": "> This is almost trivial to fix. See how _Timestamp is defined, IOW the attributes are cdef readonly, while Period are not.\r\n\r\nCurrent definition:\r\n```\r\ncdef class _Period(object):\r\n\r\n    cdef public:\r\n        int64_t ordinal\r\n        object freq\r\n```\r\nSo just change \"cdef public\" to \"cdef readonly\"?\r\n\r\n> Would appreciate tests on all of the scalar types.\r\n\r\nI'm happy to help, but am stretched pretty thin.  For now I need to triage."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319128128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319128128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319128128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTEyODEyOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T16:43:14Z",
    "updated_at": "2017-07-31T16:43:14Z",
    "author_association": "MEMBER",
    "body": "> So just change \"cdef public\" to \"cdef readonly\"?\r\n\r\nYes, that is correct.\r\n\r\n> I'm happy to help, but am stretched pretty thin. For now I need to triage.\r\n\r\nNo worries!  This is not urgent, so feel free to take your time on this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319131966",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319131966",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319131966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTEzMTk2Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T17:03:38Z",
    "updated_at": "2017-07-31T17:03:38Z",
    "author_association": "MEMBER",
    "body": "What about for the non-cython `DateOffset`?  It's got a `kwds` attribute that's a dict."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319159429",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319159429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319159429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTE1OTQyOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T18:43:09Z",
    "updated_at": "2017-07-31T18:43:09Z",
    "author_association": "MEMBER",
    "body": "Changing `ordinal` and `freq` to `cdef readonly` breaks `Period._from_ordinal`, which is called by `Period.__init__`.\r\n\r\n```\r\n    @classmethod\r\n    def _from_ordinal(cls, ordinal, freq):\r\n        \"\"\"\r\n        Fast creation from an ordinal and freq that are already validated!\r\n        \"\"\"\r\n        if ordinal == iNaT:\r\n            return NaT\r\n        else:\r\n            self = _Period.__new__(cls)\r\n            self.ordinal = ordinal\r\n            self.freq = cls._maybe_convert_freq(freq)\r\n            return self\r\n```\r\n\r\nPlease advise."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319162931",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319162931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319162931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTE2MjkzMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T18:55:38Z",
    "updated_at": "2017-07-31T18:55:38Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel : I think what you should do is try to see which attribute you can make `readonly` without breaking anything.  For those that do, try to refactor so that you can initialize as many of these parameters as possible.  I can't see the code ATM to judge how feasible this second sentence is, but I hope that should help for the time being."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319168194",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319168194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319168194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTE2ODE5NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T19:16:06Z",
    "updated_at": "2017-07-31T19:16:06Z",
    "author_association": "MEMBER",
    "body": "There are only two `_Period` attributes that are relevant: `ordinal` and `freq`.  Both of them are currently declared `public`, and both of them are set from within the classmethod `Period._from_ordinal`, which is called at the end of `Period.__init__`.  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319168484",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319168484",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319168484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTE2ODQ4NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T19:17:19Z",
    "updated_at": "2017-07-31T19:17:19Z",
    "author_association": "MEMBER",
    "body": "Can you initialize them in `__new__` ?  Otherwise, it might be difficult to make these `readonly` otherwise."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319171490",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319171490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319171490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTE3MTQ5MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T19:29:45Z",
    "updated_at": "2017-07-31T19:29:45Z",
    "author_association": "MEMBER",
    "body": "Correction: `_from_ordinal` is a classmethod of `_Period`, not `Period`.  Shouldn't make a difference, but be advised.\r\n\r\n> Can you initialize them in `__new__` ? \r\n\r\n`__new__` and cython are both at the edges of my comfort zone.  I'm not the person we want futzing with this.  That said...\r\n\r\nChanging `_from_ordinal` to look like:\r\n```\r\n    @classmethod\r\n    def _from_ordinal(cls, ordinal, freq):\r\n        \"\"\"\r\n        Fast creation from an ordinal and freq that are already validated!\r\n        \"\"\"\r\n        if ordinal == iNaT:\r\n            return NaT\r\n        else:\r\n            freq = cls._maybe_convert_freq(freq)\r\n            self = _Period.__new__(cls, ordinal=ordinal, freq=freq)\r\n            # self = _Period.__new__(cls)\r\n            # self.ordinal = ordinal\r\n            # self.freq = cls._maybe_convert_freq(freq)\r\n            return self\r\n```\r\n\r\nThen the constructor \"works\", but...\r\n```\r\n>>> per = pd.Period('2016Q1', freq='Q')\r\n>>> per\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"pandas/_libs/period.pyx\", line 952, in pandas._libs.period._Period.__repr__ (pandas/_libs/period.c:17168)\r\n    base, mult = frequencies.get_freq_code(self.freq)\r\n  File \"pandas/tseries/frequencies.py\", line 347, in get_freq_code\r\n    base, stride = _base_and_stride(freqstr)\r\n  File \"pandas/tseries/frequencies.py\", line 587, in _base_and_stride\r\n    groups = opattern.match(freqstr)\r\nTypeError: expected string or buffer\r\n```\r\n\r\nAlso `freq` and `ordinal` are set inside `__setstate__`.  No idea what to do about that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/319179400",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-319179400",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 319179400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTE3OTQwMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T20:00:28Z",
    "updated_at": "2017-07-31T20:00:59Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel : I know you said you were stretched thin logistically, so this is great that you've been able to dive into this refactoring with some detail.  No worries if you're stuck.  At least people will know where to pick things up for the time being."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399289937",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-399289937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 399289937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTI4OTkzNw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T01:11:16Z",
    "updated_at": "2018-06-22T01:11:16Z",
    "author_association": "MEMBER",
    "body": "Possibly closed by #21341 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399315149",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-399315149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 399315149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTMxNTE0OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T04:10:47Z",
    "updated_at": "2018-06-22T04:10:47Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel : Would you be able to confirm?  Can we add tests to check?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399479040",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-399479040",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 399479040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTQ3OTA0MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-22T15:22:41Z",
    "updated_at": "2018-06-22T15:22:41Z",
    "author_association": "MEMBER",
    "body": "@gfyoung The original motivations (Period and DateOffset) have been made immutable.  The part I'm not sure about is if there were other scalars @jreback had in mind when making the issue title more general."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404207840",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17116#issuecomment-404207840",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17116",
    "id": 404207840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDIwNzg0MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-11T15:18:09Z",
    "updated_at": "2018-07-11T15:18:09Z",
    "author_association": "MEMBER",
    "body": "Closed by #17239 and #21341"
  }
]
