[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51931052",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51931052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51931052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTMxMDUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T15:31:51Z",
    "updated_at": "2014-08-12T15:31:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "all datetimes are internally (and converted from) kept as `datetime64[ns]` this doesn't make sense.\n\nand conversions are already way complicated. \n\nYou are certainly welcome to try to fix this. but is their an actual usecase?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51931934",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51931934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51931934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTMxOTM0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T15:37:51Z",
    "updated_at": "2014-08-12T15:37:51Z",
    "author_association": "MEMBER",
    "body": "these kinds of dtypes are also parameterized whereas things like int64, float64 etc are not, so it doesn't make sense to pass it in unparameterized.\n\nalso empty series of datetimes are very edge-casey what's the motivation?\n\ni would even argue that passing in the dtype to series is unnecessary 95% of the time (pandas is pretty good about doing the right thing), if you need to coerce to datetimes use `pd.to_datetime`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51933292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51933292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51933292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTMzMjky",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T15:46:34Z",
    "updated_at": "2014-08-12T16:45:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wanted to explicitly create a Series that contained datetimes, and the docstring of `Series` says:\n\n```\ndtype : numpy.dtype or None\n     If None, dtype will be inferred\n```\n\nso I assumed that I could pass in a numpy type. Perhaps it's just a matter of clarifying the docstring?\n\nWhilst I used an empty series as a minimal reproducible example, this does occur for non-empty series too:\n\n```\nSeries([datetime.now()], dtype=np.datetime64) # same error\nSeries([np.datetime64(datetime.now())], dtype=np.datetime64) # same error\n```\n\nThis behaviour does actually work with other numpy dtypes, e.g. `Series([], dtype=np.int64)`, which is what set my expectations.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51935103",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51935103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51935103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTM1MTAz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T15:58:09Z",
    "updated_at": "2014-08-12T15:58:09Z",
    "author_association": "MEMBER",
    "body": "> I wanted to explicitly create a Series that contained datetime\n\nyou can create and then do `pd.to_datetime`\n\ndo you have non-trivial use case?\n\nwould help us evaluate whether this is necessary\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51936165",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51936165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51936165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTM2MTY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T16:05:29Z",
    "updated_at": "2014-08-12T16:05:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Wilfred this is the point of `to_datetime`.  As I said, you could allow this (their are explicity) check for NOT allowing this. But not sure its relevant/usecase. The doc-string is generic. That's why their is an error.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51936750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51936750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51936750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTM2NzUw",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T16:09:24Z",
    "updated_at": "2014-08-12T16:09:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "If all you want is a workaround, note that you _can_ do this:\n\n``` python\n\nIn [1]: import pandas as pd\n\nIn [2]: import numpy as np\n\nIn [3]: pd.Series(dtype='m8[ns]')\nOut[3]: Series([], dtype: timedelta64[ns])\n\nIn [4]: pd.Series(dtype=np.timedelta64(0, 'ns').dtype)\nOut[4]: Series([], dtype: timedelta64[ns])\n```\n\nThe problem is that numpy doesn't make it easy to get from `timedelta64` to `timedelta64[ns]`, but pandas demands nanoseconds.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51937023",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51937023",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51937023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTM3MDIz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T16:11:16Z",
    "updated_at": "2014-08-12T16:11:16Z",
    "author_association": "MEMBER",
    "body": "> numpy doesn't make it easy to get from timedelta64 to timedelta64[ns]\n\nthat's because `timedelta64` without a unit doesn't make sense\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51937364",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51937364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51937364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTM3MzY0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T16:13:35Z",
    "updated_at": "2014-08-12T16:13:35Z",
    "author_association": "MEMBER",
    "body": "even though for some reason numpy still lets you think that it does\n\n```\nIn [18]: np.dtype('m8')\nOut[18]: dtype('<m8')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51938639",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51938639",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51938639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTM4NjM5",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T16:23:08Z",
    "updated_at": "2014-08-12T16:23:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't mean a `timedelta64` object, I mean the `timedelta64` dtype.  AFAIK the only paths to the `timedelta64[ns]` dtype go either through an instance (as in `In[4]`) or through the string `'m8[ns]'`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51938975",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51938975",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51938975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTM4OTc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T16:25:20Z",
    "updated_at": "2014-08-12T16:25:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "we are talking about `M8` here, right? (not `m8`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51939414",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51939414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51939414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTM5NDE0",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T16:28:48Z",
    "updated_at": "2014-08-12T16:28:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Whoops, yes.  The point still stands.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51942423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51942423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51942423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTQyNDIz",
    "user": {
      "login": "Wilfred",
      "id": 70800,
      "node_id": "MDQ6VXNlcjcwODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/70800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Wilfred",
      "html_url": "https://github.com/Wilfred",
      "followers_url": "https://api.github.com/users/Wilfred/followers",
      "following_url": "https://api.github.com/users/Wilfred/following{/other_user}",
      "gists_url": "https://api.github.com/users/Wilfred/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Wilfred/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Wilfred/subscriptions",
      "organizations_url": "https://api.github.com/users/Wilfred/orgs",
      "repos_url": "https://api.github.com/users/Wilfred/repos",
      "events_url": "https://api.github.com/users/Wilfred/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Wilfred/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T16:51:12Z",
    "updated_at": "2014-08-12T16:51:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, perhaps the best solution would be to throw an explicit error about parameterized types, so the user knows how to fix. Something like:\n\n```\nSeries([], dtype=np.datetime64)\nTypeError: Can't use parameterised dtypes. Choose an concrete dtype (e.g. \"datetime64[ns]\" instead of \"datetime\") or let pandas infer the type.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51944350",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51944350",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51944350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTQ0MzUw",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T17:04:26Z",
    "updated_at": "2014-08-12T17:04:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was under the impression that from pandas's point of view, there is one true `datetime64` dtype and that dtype is `datetime64[ns]`, and any other `datetime64` dtype should be cast appropriately.  So I would actually expect that you would get this:\n\n``` python\n\nIn [5]: pd.Series([1], dtype='M8')\nOut[5]: \n0   1970-01-01 00:00:00.000000001\ndtype: datetime64[ns]\n\nIn [6]: pd.Series([1], dtype='M8[s]')\nOut[6]: \n0   1970-01-01 00:00:01\ndtype: datetime64[ns]\n\nIn [7]: pd.Series([1], dtype='m8[s]')\nOut[7]: \n0   00:00:01\ndtype: timedelta64[ns]\n\nIn [8]: pd.Series([1], dtype='m8[Y]')\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-21-f94f55f94a5f> in <module>()\n----> 1 pd.Series([1], dtype='m8[Y]')\n...\nTypeError: cannot convert dtype [timedelta64[Y]] to nanoseconds\n```\n\nCurrently all of these raise.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51945248",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8004#issuecomment-51945248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8004",
    "id": 51945248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxOTQ1MjQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-12T17:10:46Z",
    "updated_at": "2014-08-12T17:10:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "The point was to be explicit and make `to_datetime(....,unit='....')` be the entry point for these. You certainly could accept these (easy, just call `to_datetime`! where the error is now). \n\nTests / impl shoulld be straightforward.\n\nJust never had a reason to actually pass anything like this\n\nas usually this is inferred\n\ne.g. `Series(np.array([1,2,3],dtype='m8[s]')` is ok, the `dtype` parameter is to _coerce_ the input\n\nwhich is actually quite tricky because you first have to interpret it and it CAN be ambiguous\n"
  }
]
