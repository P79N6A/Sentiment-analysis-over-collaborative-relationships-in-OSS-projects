[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3036802",
    "html_url": "https://github.com/pandas-dev/pandas/pull/453#issuecomment-3036802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/453",
    "id": 3036802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY4MDI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T18:53:17Z",
    "updated_at": "2011-12-06T18:53:26Z",
    "author_association": "MEMBER",
    "body": "This is cool. I've also gotten tired of it myself.\n\nWhat would you think with adding some logic that will print `df.to_string()` whenever the DataFrame fits in the console buffer? There are some tricks you can use to get the console width (this would only apply when IPython is in use), if it can't infer the width then it would just default to 80 or something. Been on my todo list for a while (because I also get quite tired of typing `print df.to_string()` as you can imagine). \n\nThere is also the R approach of breaking the DataFrame apart and printing multiple \"rows\" of columns. Not sure how I feel about doing that\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3037788",
    "html_url": "https://github.com/pandas-dev/pandas/pull/453#issuecomment-3037788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/453",
    "id": 3037788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzc3ODg=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-06T20:00:38Z",
    "updated_at": "2011-12-06T20:00:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Using the actual width of the console is the best way to avoid line wraps of course, the current code gives no guarantee that wrapping will not occur. Furthermore this will save a call to `set_printoptions()`, handy for interactive use.\n\nDid some googling on how to retrieve the width of the console in (i)python, this does not look so straight forward, especially across platforms. Need to study this a bit more in detail before i can add the idea you suggest.\n\nThe R approach looks a bit awkward.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3047570",
    "html_url": "https://github.com/pandas-dev/pandas/pull/453#issuecomment-3047570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/453",
    "id": 3047570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDc1NzA=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-07T14:17:37Z",
    "updated_at": "2011-12-07T14:17:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added a clever screen render mode (default nothing is changed!).\nWhen either max_rows, max_columns, or both is set to 0 pandas will figure out how big the terminal is and will not display more rows or/and columns that can fit on it.\n\nTerminal width and height is determined using new method `pandas.util.terminal.get_terminal_size()`, since i only have python on linux, other operating systems are untested. Furthermore i only tried python 2.7 (with and without IPython 0.11). That is why i named this mode _experimental_ in the documentation of `pandas.set_printoptions()`.\n\n``` python\ndef set_printoptions(precision=None, column_space=None, max_rows=None,\n        max_columns=None):\n    \"\"\"\n    Alter default behavior of DataFrame.toString\n\n    precision : int\n        Floating point output precision\n    column_space : int\n        Default space for DataFrame columns, defaults to 12\n    max_rows : int\n    max_columns : int\n        max_rows and max_columns are used in __repr__() methods to decide if\n        to_string() or info() is used to render an object to a string.\n        Either one, or both can be set to 0 (experimental). Pandas will figure\n        out how big the terminal is and will not display more rows or/and\n        columns that can fit on it.\n    \"\"\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3057786",
    "html_url": "https://github.com/pandas-dev/pandas/pull/453#issuecomment-3057786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/453",
    "id": 3057786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTc3ODY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-12-08T04:28:33Z",
    "updated_at": "2011-12-08T04:28:33Z",
    "author_association": "MEMBER",
    "body": "this is awesome. I'm going to use `max_columns=0` as the default...seems to work OK in the IPython HTML notebook also\n"
  }
]
