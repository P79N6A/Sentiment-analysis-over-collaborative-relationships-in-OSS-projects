[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62885623",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8802#issuecomment-62885623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8802",
    "id": 62885623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODg1NjIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T12:50:49Z",
    "updated_at": "2014-11-13T12:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #7888 and associated PR.\n\nTheir was an inconsistency in how date-likes (datetime.date,datetime.datetime,Timestamp) were inferred in a MultiIndex level. This led to the creation of an object dtyped Index rather than a DatetimeIndex. datetime.date are second class objects in pandas as they are not efficiently represented. Is their a reason you are not using Timestamp/datetime.datetime ?\n\nIf you really really want to create this, you can do this:\n\n```\nIn [8]: pd.MultiIndex.from_arrays([Index([datetime.date(2013,1,1)]),['a']])\nOut[8]: \nMultiIndex(levels=[[2013-01-01], [u'a']],\n           labels=[[0], [0]])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62886985",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8802#issuecomment-62886985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8802",
    "id": 62886985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODg2OTg1",
    "user": {
      "login": "eoincondron",
      "id": 9717992,
      "node_id": "MDQ6VXNlcjk3MTc5OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9717992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eoincondron",
      "html_url": "https://github.com/eoincondron",
      "followers_url": "https://api.github.com/users/eoincondron/followers",
      "following_url": "https://api.github.com/users/eoincondron/following{/other_user}",
      "gists_url": "https://api.github.com/users/eoincondron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eoincondron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eoincondron/subscriptions",
      "organizations_url": "https://api.github.com/users/eoincondron/orgs",
      "repos_url": "https://api.github.com/users/eoincondron/repos",
      "events_url": "https://api.github.com/users/eoincondron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eoincondron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T13:03:14Z",
    "updated_at": "2014-11-13T13:12:04Z",
    "author_association": "NONE",
    "body": "Thanks for the reply. I looked for previous related issues but didn’t find them. Sorry if I’ve wasted your time.\nMy reason for using datetime.date objects is that I was using them in conjunction with datetime.time in a Mulitindex (3 levels altogether: (ID, date, time)).\nIt didn’t seem right to have a timestamp with 00:00:00 time component and then a time columns or index level with a different time of day I couldn’t see a way to separate date and time using Pandas objects. Also, doing things like converting the date to a string is a lot messier with the Timestamp if you only want the date component as you have the unwanted time component to deal with.\nI’m pretty new to Python and programming in general ( < 6 months) and I made the decision to go about it this way when I was just getting started.\nWould appreciate any advice in this regard.\n\nFrom: jreback [mailto:notifications@github.com]\nSent: 13 November 2014 12:51\nTo: pydata/pandas\nCc: eoincondron\nSubject: Re: [pandas] Version 0.15 MultiIndex forces Datetime.date objects to Timestamp objects (#8802)\n\nsee #7888https://github.com/pydata/pandas/issues/7888 and associated PR.\n\nTheir was an inconsistency in how date-likes (datetime.date,datetime.datetime,Timestamp) were inferred in a MultiIndex level. This led to the creation of an object dtyped Index rather than a DatetimeIndex. datetime.date are second class objects in pandas as they are not efficiently represented. Is their a reason you are not using Timestamp/datetime.datetime ?\n\nIf you really really want to create this, you can do this:\n\nIn [8]: pd.MultiIndex.from_arrays([Index([datetime.date(2013,1,1)]),['a']])\n\nOut[8]:\n\nMultiIndex(levels=[[2013-01-01], [u'a']],\n\n```\n       labels=[[0], [0]])\n```\n\n—\nReply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/8802#issuecomment-62885623.\n\n---\n\nIMPORTANT: The information contained in this email and/or its attachments is confidential. If you are not the intended recipient, please notify the sender immediately by reply and immediately delete this message and all its attachments. Any review, use, reproduction, disclosure or dissemination of this message or any attachment by an unintended recipient is strictly prohibited. Neither this message nor any attachment is intended as or should be construed as an offer, solicitation or recommendation to buy or sell any security or other financial instrument. Neither the sender, his or her employer nor any of their respective affiliates makes any warranties as to the completeness or accuracy of any of the information contained herein or that this message or any of its attachments is free of viruses.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62890398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8802#issuecomment-62890398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8802",
    "id": 62890398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODkwMzk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T13:33:18Z",
    "updated_at": "2014-11-13T13:33:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "their is no need to keep separate date/time components and it makes is quite inefficient to do so.\n\nYou can get at the date or time components in a number of ways, e.g. if you are resampling, or you can just index on the times. A more complete example would help me understand what you are trying to do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62903111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8802#issuecomment-62903111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8802",
    "id": 62903111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTAzMTEx",
    "user": {
      "login": "eoincondron",
      "id": 9717992,
      "node_id": "MDQ6VXNlcjk3MTc5OTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/9717992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eoincondron",
      "html_url": "https://github.com/eoincondron",
      "followers_url": "https://api.github.com/users/eoincondron/followers",
      "following_url": "https://api.github.com/users/eoincondron/following{/other_user}",
      "gists_url": "https://api.github.com/users/eoincondron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eoincondron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eoincondron/subscriptions",
      "organizations_url": "https://api.github.com/users/eoincondron/orgs",
      "repos_url": "https://api.github.com/users/eoincondron/repos",
      "events_url": "https://api.github.com/users/eoincondron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eoincondron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T15:06:35Z",
    "updated_at": "2014-11-13T15:07:16Z",
    "author_association": "NONE",
    "body": "One example would be using unstack on the time component to convert a column into a data frame with columns corresponding to the times and index given by the remaining levels. Is it possible to do this directly with a DateTimeIndex?\n\nAlso, consider this example using a DateTimeIndex on the second level of a MultiIndex with integers on the first. I'm tryin to locate rows corresponding to a list of index tuples.\nUsing Timestamps, trying to locate two rows simultaneously doesn't work even though it works using each individual tuple:\n\nIn [67]: pairs = [(34142, '20090422'), (34142, '20090423')]\n\ndt_pairs = [(34142, datetime.date(2009, 4, 22)), (34142, datetime.date(2009, 4, 23))]\n\nIn [91]: df.loc[pairs]\nOut[91]: \n                   price  volume time\n(34142, 20090422)    NaN     NaN  NaN\n(34142, 20090423)    NaN     NaN  NaN\n\nIn [93]: df.loc[dt_pairs]\nOut[93]: \n                     price  volume time\n(34142, 2009-04-22)    NaN     NaN  NaN\n(34142, 2009-04-23)    NaN     NaN  NaN\n\nIn [90]: df.loc[pairs[0]]\nOut[90]: \n                  price  volume      time\ntid   date  \n34142 2009-04-22  22.75   31808  08:00:00\n           2009-04-22  22.88  210247  16:35:00\n\nIn [94]: df.loc[dt_pairs[0]]\nOut[94]: \n                  price  volume      time\ntid   date  \n34142 2009-04-22  22.75   31808  08:00:00\n            2009-04-22  22.88  210247  16:35:00\n\nHowever, It works perfectly fine with datetime.date objects in the index:\n\nIn [92]: df2.loc[dt_pairs]\nOut[92]: \n                   price  volume      time\n34142 2009-04-22  22.750   31808  08:00:00\n      2009-04-22  22.880  210247  16:35:00\n      2009-04-23  23.125   12576  08:00:00\n      2009-04-23  22.500  248969  16:35:00\n\nI think I will stick to 0.14 for the current project which already has 2000+ lines of code depending on the use of datetime.date objects and try to incorporate Timestamps into future projects. \nThanks for the feedback.\n"
  }
]
