[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14997831",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-14997831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 14997831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTk3ODMx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-16T02:16:16Z",
    "updated_at": "2013-03-16T02:16:16Z",
    "author_association": "NONE",
    "body": "Right now, pandas is explicitly not thread-safe. Taking any step down this path\nwill inevitably generate lots of pain and changes all over. Python threads see more\nlimited use then in other languages, the upside is correspondingly limited.\n\nYou can always implement per-object or a global pandas lock in your own code,\nif threads are what you want.\n\nPushing back to 0.12, at least.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15007688",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-15007688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 15007688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA3Njg4",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-16T16:34:33Z",
    "updated_at": "2013-03-16T16:34:33Z",
    "author_association": "MEMBER",
    "body": "That's not quite true-- for example most things are threadsafe and we've ensured that e.g. IO functions can be run in separate threads. Perhaps we should just acquire a lock inside the copy functions for now\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15007803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-15007803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 15007803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA3ODAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-16T16:41:11Z",
    "updated_at": "2013-03-16T16:41:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "copy might be thread safe with a single dtype (but prob not)\nmultiple dtypes now are not thread safe \n(as @wes points out a lock will fix all this)\nI would be in favor of providing this as an option, default to False though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15013424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-15013424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 15013424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDEzNDI0",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-16T22:32:00Z",
    "updated_at": "2013-03-16T22:32:00Z",
    "author_association": "NONE",
    "body": "I was thinking of #2440. Perhaps parts of pandas are thread-safe, but\nafik there's no list of what's safe or not and users have hit the non-safe \nparts before this, when they tried.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194841000",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-194841000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 194841000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg0MTAwMA==",
    "user": {
      "login": "kokes",
      "id": 8451755,
      "node_id": "MDQ6VXNlcjg0NTE3NTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8451755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kokes",
      "html_url": "https://github.com/kokes",
      "followers_url": "https://api.github.com/users/kokes/followers",
      "following_url": "https://api.github.com/users/kokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/kokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kokes/subscriptions",
      "organizations_url": "https://api.github.com/users/kokes/orgs",
      "repos_url": "https://api.github.com/users/kokes/repos",
      "events_url": "https://api.github.com/users/kokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T13:37:32Z",
    "updated_at": "2016-03-10T13:37:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I cannot replicate the error posted, see [this gist](https://gist.github.com/kokes/b51cf3cf5172f5c6b23b). Either there have been new developments in atomicity of `pandas` or perhaps `threading` has a different scheduler, or...?\n\n(Tried under both Python 2.7 and 3.5)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194849211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-194849211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 194849211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg0OTIxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T13:52:27Z",
    "updated_at": "2016-03-10T13:52:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "this almost certainly had to do with the unsafe-threadness (is that a word?) with `numexpr`. `numexpr>=2.5` (and even `>=2.4.6`) now don't much with the global thread state. @kokes what version do you have?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194855908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-194855908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 194855908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDg1NTkwOA==",
    "user": {
      "login": "kokes",
      "id": 8451755,
      "node_id": "MDQ6VXNlcjg0NTE3NTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8451755?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kokes",
      "html_url": "https://github.com/kokes",
      "followers_url": "https://api.github.com/users/kokes/followers",
      "following_url": "https://api.github.com/users/kokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/kokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kokes/subscriptions",
      "organizations_url": "https://api.github.com/users/kokes/orgs",
      "repos_url": "https://api.github.com/users/kokes/repos",
      "events_url": "https://api.github.com/users/kokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T14:00:16Z",
    "updated_at": "2016-03-10T14:00:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good! I've got 2.4.6 (under conda), upgraded to 2.5 and got the same.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476376611",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-476376611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 476376611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjM3NjYxMQ==",
    "user": {
      "login": "stuz5000",
      "id": 7799980,
      "node_id": "MDQ6VXNlcjc3OTk5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7799980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stuz5000",
      "html_url": "https://github.com/stuz5000",
      "followers_url": "https://api.github.com/users/stuz5000/followers",
      "following_url": "https://api.github.com/users/stuz5000/following{/other_user}",
      "gists_url": "https://api.github.com/users/stuz5000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stuz5000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stuz5000/subscriptions",
      "organizations_url": "https://api.github.com/users/stuz5000/orgs",
      "repos_url": "https://api.github.com/users/stuz5000/repos",
      "events_url": "https://api.github.com/users/stuz5000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stuz5000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-25T21:03:44Z",
    "updated_at": "2019-03-25T21:20:24Z",
    "author_association": "NONE",
    "body": "> copy might be thread safe with a single dtype \r\n\r\nDoubtful: See: https://github.com/pandas-dev/pandas/issues/25870\r\n\r\nIt seems, you can't can't currently use pandas series for a 'read-only' hash-lookup in a threaded environment.\r\n\r\nIt fails on the second call to Series.reindex(..., copy=True) - I was extremely surprised by it, thinking the operation to be non-mutating. I would have expected any hidden object state, such as built indexes, to be finalized at the end of the first call, and subsequent calls to be safe.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/477297359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2728#issuecomment-477297359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2728",
    "id": 477297359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzI5NzM1OQ==",
    "user": {
      "login": "stuz5000",
      "id": 7799980,
      "node_id": "MDQ6VXNlcjc3OTk5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7799980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stuz5000",
      "html_url": "https://github.com/stuz5000",
      "followers_url": "https://api.github.com/users/stuz5000/followers",
      "following_url": "https://api.github.com/users/stuz5000/following{/other_user}",
      "gists_url": "https://api.github.com/users/stuz5000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stuz5000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stuz5000/subscriptions",
      "organizations_url": "https://api.github.com/users/stuz5000/orgs",
      "repos_url": "https://api.github.com/users/stuz5000/repos",
      "events_url": "https://api.github.com/users/stuz5000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stuz5000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T18:38:56Z",
    "updated_at": "2019-03-27T18:38:56Z",
    "author_association": "NONE",
    "body": "I'm deeply confused about this issue.\r\nThe original discussion was that .copy is not thread safe. My assumption was that it would not be, because someone may be writing to the dataframe. However, is .copy also unsafe in other situations (where no-one is performing impure functional operations, such as modifying the columns/index/labels/cells of a dataframe or series)?\r\n\r\nI ask because, my expectation is that `Series.reindex(..., copy=True)` is a pure function (except for memomization of things like the internal index). Yet it is seem to not be thread safe _while no other types of operation are happening_. Copy is happening, but no-one is writing. So what?\r\n\r\n```\r\ns = pd.Series(...)\r\nf(s)  # Success!\r\n\r\n# Thread 1:\r\n   while True: f(s)  \r\n\r\n# Thread 2:\r\n   while True: f(s)  # BANG! Exception !\r\n```\r\n... where ` f(s): s.reindex(..., copy=True)`. Can the thread-unsafeness of `.copy` really the cause?"
  }
]
