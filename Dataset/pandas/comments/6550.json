[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36734698",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36734698",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36734698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM0Njk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T11:49:24Z",
    "updated_at": "2014-03-05T11:49:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "rolling_mean is doing exactly what it says. Their is a min_periods argument which defaults to the window size (4 in this case). So for example the 7,8,9 for column 1 are Nan.\n\nwhat you are proposing is a `min_periods='sparse'`. I don't think this implementation is trivial as you would have to keep a deque of the collected values (and do this in cython). I suppose could be done, but to be honest your soln is pretty reasonable.\n\nYour results actually are not intuitive to me because the lookback window is data dependent.\n\nI think we would accept a PR for this that adds this behavior if you are interested. Would need some examples and docs.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36746749",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36746749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36746749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzQ2NzQ5",
    "user": {
      "login": "Loanwolf",
      "id": 6859813,
      "node_id": "MDQ6VXNlcjY4NTk4MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6859813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Loanwolf",
      "html_url": "https://github.com/Loanwolf",
      "followers_url": "https://api.github.com/users/Loanwolf/followers",
      "following_url": "https://api.github.com/users/Loanwolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Loanwolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Loanwolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Loanwolf/subscriptions",
      "organizations_url": "https://api.github.com/users/Loanwolf/orgs",
      "repos_url": "https://api.github.com/users/Loanwolf/repos",
      "events_url": "https://api.github.com/users/Loanwolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Loanwolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T14:27:07Z",
    "updated_at": "2014-03-05T14:27:07Z",
    "author_association": "NONE",
    "body": "hi, I think this is quite significant as the moment functions that call rolling_mean(), which looks to be many, will give highly unexpected results as the windows used in the calculations will differ through time, not sure if you had a look at the comments in my SO link.  To my mind the answer with the dropna() .apply is a true rolling mean vs the current implementation with min_periods=0. \n\nAs an example think of time series applications with just a few nan's and large windows. If you set min_periods to window, it would miss out lots of data post nan but then get the true rolling mean, which I guess is the default at the moment. Or set min_periods=0 , but then calculating things like rolling covar's would be misleading and potentially meaningless the windows will differ through time.\n\nAlso its unclear to me whether the all rolling functions that call other rolling functions would be using the same window until post nan data == window. \n\nMy suggestion would be to change the implementation of min_periods to include the dropna /apply solution at the cost of the extra overhead, but I am sure you guys will have much better ideas. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36747263",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36747263",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36747263,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzQ3MjYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T14:32:31Z",
    "updated_at": "2014-03-05T14:32:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Loanwolf I think you should have a look again. The implementation is correct. _your_ soln is fine, but not what one would expect. If you have a counter-example pls post. \n\n```\nIn [11]: foo = DataFrame(np.arange(0.0,13.0))\nIn [12]: foo['1'] = np.arange(13.0,26.0)\nIn [13]: foo.ix[4:6,0] = np.nan\nIn [14]: foo.ix[4:7,1] = np.nan\nIn [15]: bar = rolling_mean(foo, 4)\n```\n\n```\nIn [21]: pd.rolling_mean(foo, 4, min_periods=4)\nOut[21]: \n       0     1\n0    NaN   NaN\n1    NaN   NaN\n2    NaN   NaN\n3    1.5  14.5\n4    NaN   NaN\n5    NaN   NaN\n6    NaN   NaN\n7    NaN   NaN\n8    NaN   NaN\n9    NaN   NaN\n10   8.5   NaN\n11   9.5  22.5\n12  10.5  23.5\n\n[13 rows x 2 columns]\n\nIn [22]: pd.rolling_mean(foo, 4, min_periods=1)\nOut[22]: \n       0     1\n0    0.0  13.0\n1    0.5  13.5\n2    1.0  14.0\n3    1.5  14.5\n4    2.0  15.0\n5    2.5  15.5\n6    3.0  16.0\n7    7.0   NaN\n8    7.5  21.0\n9    8.0  21.5\n10   8.5  22.0\n11   9.5  22.5\n12  10.5  23.5\n\n[13 rows x 2 columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36755989",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36755989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36755989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzU1OTg5",
    "user": {
      "login": "Loanwolf",
      "id": 6859813,
      "node_id": "MDQ6VXNlcjY4NTk4MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6859813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Loanwolf",
      "html_url": "https://github.com/Loanwolf",
      "followers_url": "https://api.github.com/users/Loanwolf/followers",
      "following_url": "https://api.github.com/users/Loanwolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Loanwolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Loanwolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Loanwolf/subscriptions",
      "organizations_url": "https://api.github.com/users/Loanwolf/orgs",
      "repos_url": "https://api.github.com/users/Loanwolf/repos",
      "events_url": "https://api.github.com/users/Loanwolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Loanwolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T15:48:33Z",
    "updated_at": "2014-03-05T15:48:33Z",
    "author_association": "NONE",
    "body": "understood, the current implementation is correct and not a bug, is just not logical to me, as after a nan you miss a large amount of data on the default or get a expanding then a rolling mean if you set min_period < window .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36761245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36761245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36761245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzYxMjQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T16:26:24Z",
    "updated_at": "2014-03-05T16:26:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have no problem making a kw `sparse=None` as the default, maybe instead of modifying min_periods\n\nand allowing different nan handling; but should not be the default \npandas propogates nans so it is inline with what a pandas user would expectt; I think you 'want' min_periods=1 with a fill concept. _that_ seems odd to me!\n\no the issue is set; if you'd like to do a PR would be a appreciated\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36780585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36780585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36780585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgwNTg1",
    "user": {
      "login": "Loanwolf",
      "id": 6859813,
      "node_id": "MDQ6VXNlcjY4NTk4MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6859813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Loanwolf",
      "html_url": "https://github.com/Loanwolf",
      "followers_url": "https://api.github.com/users/Loanwolf/followers",
      "following_url": "https://api.github.com/users/Loanwolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Loanwolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Loanwolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Loanwolf/subscriptions",
      "organizations_url": "https://api.github.com/users/Loanwolf/orgs",
      "repos_url": "https://api.github.com/users/Loanwolf/repos",
      "events_url": "https://api.github.com/users/Loanwolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Loanwolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T19:09:15Z",
    "updated_at": "2014-03-05T19:09:15Z",
    "author_association": "NONE",
    "body": "sparse=None or sparse=False default is the way to go. makes much more sense.\n\nhave thought of a really good example re my ramblings above, do you want me to code it up or are you  not fussed ?\n\nalso I saw that Numpy has a whole lib on sparse calculations/stats, shot in the dark but perhaps there is something there to help?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36782016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36782016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36782016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzgyMDE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T19:21:40Z",
    "updated_at": "2014-03-05T19:21:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can submit a PR at your leisure! \n\nyou can try using some numpy sparse stuff if you want, but I think direct coding in cython would be better (since the pathway is already their and deals with different dtypes and such).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36786990",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36786990",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36786990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg2OTkw",
    "user": {
      "login": "Loanwolf",
      "id": 6859813,
      "node_id": "MDQ6VXNlcjY4NTk4MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6859813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Loanwolf",
      "html_url": "https://github.com/Loanwolf",
      "followers_url": "https://api.github.com/users/Loanwolf/followers",
      "following_url": "https://api.github.com/users/Loanwolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Loanwolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Loanwolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Loanwolf/subscriptions",
      "organizations_url": "https://api.github.com/users/Loanwolf/orgs",
      "repos_url": "https://api.github.com/users/Loanwolf/repos",
      "events_url": "https://api.github.com/users/Loanwolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Loanwolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T20:05:09Z",
    "updated_at": "2014-03-05T20:05:09Z",
    "author_association": "NONE",
    "body": "understood, could you walk me through the PR or send me a link to a guide if you are too busy, many thanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36789073",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-36789073",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 36789073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg5MDcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T20:24:45Z",
    "updated_at": "2014-03-05T20:24:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pydata/pandas/wiki\n\nessentially u clone pandas master repo\n\nwrite tests that show the new behavior but fail because it's not implemented yet\nmake the changes\ntest some more \nwhen everything passes locally\npush up 2 your remote and submit as a pr\n\nget feedback\nwrite release notes / docs as needed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37646699",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-37646699",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 37646699,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQ2Njk5",
    "user": {
      "login": "Loanwolf",
      "id": 6859813,
      "node_id": "MDQ6VXNlcjY4NTk4MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6859813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Loanwolf",
      "html_url": "https://github.com/Loanwolf",
      "followers_url": "https://api.github.com/users/Loanwolf/followers",
      "following_url": "https://api.github.com/users/Loanwolf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Loanwolf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Loanwolf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Loanwolf/subscriptions",
      "organizations_url": "https://api.github.com/users/Loanwolf/orgs",
      "repos_url": "https://api.github.com/users/Loanwolf/repos",
      "events_url": "https://api.github.com/users/Loanwolf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Loanwolf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T13:31:45Z",
    "updated_at": "2014-03-14T13:31:45Z",
    "author_association": "NONE",
    "body": "hello jreback , sorry i have been away, i had a good look at the PR process and I have to be honest, its beyond my programming abilities . Happy to try and suggest worth while improvements until I am more up to speed.  I am worried I would do a lot more damage than good!!!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37649861",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-37649861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 37649861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjQ5ODYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T14:04:07Z",
    "updated_at": "2014-03-14T14:04:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok....well when someone has time can come back to this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338974049",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6550#issuecomment-338974049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6550",
    "id": 338974049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODk3NDA0OQ==",
    "user": {
      "login": "Tux1",
      "id": 6661307,
      "node_id": "MDQ6VXNlcjY2NjEzMDc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6661307?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Tux1",
      "html_url": "https://github.com/Tux1",
      "followers_url": "https://api.github.com/users/Tux1/followers",
      "following_url": "https://api.github.com/users/Tux1/following{/other_user}",
      "gists_url": "https://api.github.com/users/Tux1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Tux1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Tux1/subscriptions",
      "organizations_url": "https://api.github.com/users/Tux1/orgs",
      "repos_url": "https://api.github.com/users/Tux1/repos",
      "events_url": "https://api.github.com/users/Tux1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Tux1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-24T12:31:57Z",
    "updated_at": "2017-10-24T12:32:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't you just do that something like that :\r\n```\r\nwindow = 20\r\ndef sparse_rolling(x):\r\n\treturn x.dropna().rolling(window).mean().reindex(x.index)\r\ndf = pd.DataFrame(np.random.randn(1000,10)).where(np.random.randint(0,2,(1000,10)) == 1)\r\ndf.apply(sparse_rolling)\r\n```\r\n\r\nit could be easily implemented into `pd.DataFrame.rolling`"
  }
]
