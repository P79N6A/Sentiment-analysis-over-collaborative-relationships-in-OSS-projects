[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216228934",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-216228934",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 216228934,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjIyODkzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T13:03:04Z",
    "updated_at": "2016-05-02T13:03:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose this could be fixed, very odd case though. Using empty levels is really confusing / prob should be banned.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242917011",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-242917011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 242917011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjkxNzAxMQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-27T13:24:24Z",
    "updated_at": "2017-01-16T08:47:28Z",
    "author_association": "MEMBER",
    "body": "From a discussion with @mralgos this morning, there seems to be a specific check in the implementation about this: https://github.com/pandas-dev/pandas/blob/9d10b76fa22382b6017741a1344922c627c881d3/pandas/io/parsers.py#L1124-L1132\r\n\r\nSo it seems this is done on purpose. The question is also what would be the expected output of this should not error. \r\nRemoving the above mentioned code lines, gives you this output\r\n\r\n```\r\ns = \"\"\"a,b\r\n,\r\n1,2\r\n3,4\"\"\"\r\n\r\nIn [4]: pd.read_csv(StringIO(s), header=[0,1])\r\nOut[4]: \r\n                   a                  b\r\n  Unnamed: 0_level_1 Unnamed: 1_level_1\r\n0                  1                  2\r\n1                  3                  4\r\n```\r\n\r\nWhile @jluttine expects a second index level with NaNs?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/243041083",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-243041083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 243041083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzA0MTA4Mw==",
    "user": {
      "login": "jluttine",
      "id": 2195834,
      "node_id": "MDQ6VXNlcjIxOTU4MzQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2195834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jluttine",
      "html_url": "https://github.com/jluttine",
      "followers_url": "https://api.github.com/users/jluttine/followers",
      "following_url": "https://api.github.com/users/jluttine/following{/other_user}",
      "gists_url": "https://api.github.com/users/jluttine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jluttine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jluttine/subscriptions",
      "organizations_url": "https://api.github.com/users/jluttine/orgs",
      "repos_url": "https://api.github.com/users/jluttine/repos",
      "events_url": "https://api.github.com/users/jluttine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jluttine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-29T06:20:20Z",
    "updated_at": "2016-08-29T06:20:20Z",
    "author_association": "NONE",
    "body": "Yep, I would have expected a second index level with NaNs.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/243730938",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-243730938",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 243730938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzczMDkzOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T11:02:37Z",
    "updated_at": "2016-08-31T11:02:37Z",
    "author_association": "MEMBER",
    "body": "cc @gfyoung @chris-b1 Any opinion on whether we should raise an error, fill empty level with 'Unnamed ...' (see https://github.com/pydata/pandas/issues/13054#issuecomment-242917011), or fill empty level with NaNs?\n\nSo case is:\n\n```\ns = \"\"\"a,b\n,\n1,2\n3,4\"\"\"\n\npd.read_csv(StringIO(s), header=[0,1])\n```\n\nIf we don't raise an error, filling with 'Unnamed ..' seems more in line with other cases where a column label is missing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/243964801",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-243964801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 243964801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzk2NDgwMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-01T03:16:45Z",
    "updated_at": "2016-09-01T03:16:45Z",
    "author_association": "MEMBER",
    "body": "I would agree that `Unnamed`, while a little aesthetically unpleasing, is consistent with what we would do as you mentioned @jorisvandenbossche should we choose not to raise an error.  I agree with @jreback that this is an unusual use case, but then again, I see no reason not to ban it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272778802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-272778802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 272778802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc3ODgwMg==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T05:46:45Z",
    "updated_at": "2017-01-16T05:46:45Z",
    "author_association": "NONE",
    "body": "I don't like this \"Unnamed...\" thing in the multilevel columns, when reading from CSV. Some levels of the column are filled only partially in my case. The empty levels of some columns should probably be imported as NaNs. The reason is that it looks less ugly and can be easily replaced with empty string or whatever the user wishes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272785235",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-272785235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 272785235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc4NTIzNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T06:44:00Z",
    "updated_at": "2017-01-16T06:44:00Z",
    "author_association": "MEMBER",
    "body": "@denfromufa : I agree that it is not aesthetically as pleasing, but IMO we should also keep in mind that clarity is of great importance.  `Unnamed: ...` sticks out very clearly in the result to indicate that something was missing in the header provided.  In addition, the naming system protects against duplicate levels, which can make indexing more difficult.\r\n\r\nSo while I do agree about the aesthetics, I would not be in favor of using `NaN` as placeholders.  While I am not against banning the example provided above, I am inclined to stick the `Unnamed` paradigm (which we use in single-level columns) for the time being.\r\n\r\nPerhaps it is best that we first settle (or regather consensus on) the initial matter: is the example in the issue allowed, or should we ban it?  If we decide to ban it, your point (and all other points about the naming) are somewhat moot.  However, we largely agree that the example should be allowed, then we can perhaps open the discussion up about the naming scheme.\r\n\r\nPersonally, I am okay with allowing this example through.  It's unusual, but I see no reason to ban it.  Thoughts, anyone?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272788012",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-272788012",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 272788012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc4ODAxMg==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T07:05:35Z",
    "updated_at": "2017-01-16T07:05:35Z",
    "author_association": "NONE",
    "body": "I ended up not defining the header for columns while reading CSV, and later\ncombining these rows representing​ the levels into one string or tuple with\n\"\" or None used for NaNs respectively. This is not general-purpose solution.\n\nOn Mon, Jan 16, 2017, 12:44 AM gfyoung <notifications@github.com> wrote:\n\n> @denfromufa <https://github.com/denfromufa> : I agree that it is not\n> aesthetically as pleasing, but IMO we should also keep in mind that clarity\n> is of great importance. Unnamed: ... sticks out very clearly in the\n> result to indicate that something was missing in the header provided. In\n> addition, the naming system protects against duplicate levels, which can\n> make indexing more difficult.\n>\n> So while I do agree about the aesthetics, I would not be in favor of using\n> NaN as placeholders. While I am not against banning the example provided\n> above, I am inclined to stick the Unnamed paradigm (which we use in\n> single-level columns) for the time being.\n>\n> Perhaps it is best that we first settle (or regather consensus on) the\n> initial matter: is the example in the issue allowed, or should we ban it?\n> If we decide to ban it, your point (and all other points about the naming)\n> are somewhat moot. However, we largely agree that the example should be\n> allowed, then we can perhaps open the discussion up about the naming scheme.\n>\n> Personally, I am okay with allowing this example through. It's unusual,\n> but I see no reason to ban it. Thoughts, anyone?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/13054#issuecomment-272785235>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AHgZ5fmJA4dY7kAzrryzO-ExMTzH3Wdjks5rSxG5gaJpZM4IVJZg>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272788747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13054#issuecomment-272788747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13054",
    "id": 272788747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Mjc4ODc0Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-16T07:11:26Z",
    "updated_at": "2017-01-16T07:11:26Z",
    "author_association": "MEMBER",
    "body": "@denfromufa : I hate to break it to you, but there is no such thing as a general-purpose solution. :smile:  That's why I'm asking for consensus before we do anything."
  }
]
