[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/221952656",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-221952656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 221952656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMTk1MjY1Ng==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-26T18:20:46Z",
    "updated_at": "2016-05-26T18:20:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "ref https://github.com/pydata/xarray/issues/861\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222031473",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222031473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222031473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjAzMTQ3Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T00:30:27Z",
    "updated_at": "2016-05-27T00:30:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are wanting to construct a `DataFrame`. xarray is a bit extreme for this case. Series is by-definition a single dtyped structure.\n\n```\nIn [5]: DataFrame.from_records(cdt_arr)\nOut[5]: \n     a     b\n0    1   0.4\n1  256 -13.0\n\nIn [6]: DataFrame.from_records(cdt_arr).dtypes\nOut[6]: \na      int64\nb    float32\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222165803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222165803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222165803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE2NTgwMw==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T14:46:55Z",
    "updated_at": "2016-05-27T14:46:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Whether or not my purposes would be better served with a dataframe in this case, I think this is still a valid bug, considering that you can _construct_ and _use_ `Series` perfectly well using a compound datatype, but it crashes when printed.\n\nAs for why you might want to do something like this - occasionally there are uses where the semantics are much easier when you can treat a single value as a scalars rather than multiple columns. One toy example would be operations on coordinate systems:\n\n``` python\nimport pandas as pd\nimport numpy as np\n\nthree_vec = np.dtype([('x', 'f8'), ('y', 'f8'), ('z', 'f8')])\n\ndef rotate_coordinates(x, u, theta):\n    I = np.identity(3)\n\n    ux = np.array([\n        [      0, -u['z'],  u['y']],\n        [ u['z'],       0, -u['x']],\n        [-u['y'],  u['x'],       0]\n    ])\n\n    uu = np.array([\n        [    u['x'] ** 2, u['x'] * u['y'], u['x'] * u['z']],\n        [u['x'] * u['y'],     u['y'] ** 2, u['y'] * u['z']],\n        [u['x'] * u['z'], u['y'] * u['z'],     u['z'] ** 2]\n    ])\n\n    R = np.cos(theta) * I + np.sin(theta) * ux + (1 - np.cos(theta)) * uu\n\n    xx = x.view(np.float64).reshape(x.shape + (-1,)).T\n\n    out_array = (R @ xx).round(15)\n\n    return np.core.records.fromarrays(out_array, dtype=three_vec)\n\n# Rotate these arrays about z\nz = np.array([(0, 0, 1)], dtype=three_vec)[0]\nv1 = np.array([(0, 1, 0), (1, 0, 0)], dtype=three_vec)\nvp = rotate_coordinates(v1, z, np.pi / 2)\n\nprint(v1)\nprint(vp)\n```\n\nNow imagine that I wanted a `pd.DataFrame` containing the start and end of some motion. I could represent it as a `DataFrame` with columns `'start_x'`, `'end_x'`, `'start_y'`, `'end_y'`, etc, and if I wanted to rotate all the coordinates to a new coordinate system, either manually group the columns, then manually re-distribute them, or I could use a compound datatype `three_vec`, have a dataframe with columns `'start'` and `'end'`, then do `df.apply(partial(rotate_coordinates, u=z, theta=np.pi/2), axis=1)`. This is a much cleaner way to both store the data and operate on it. It's similar in principle to the idea that if a first-class `datetime` data type didn't exist, you wouldn't suggest just using a `DataFrame` with columns `'year'`, `'month'`, `'day'`, etc.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222167559",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222167559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222167559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE2NzU1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T14:53:23Z",
    "updated_at": "2016-05-27T14:54:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle you are violating the guarantees of a Series. it is by-definition a singular dtype. The bug is that it accepts (a non-singular one) in the first place. I'll reopen for that purpose. There is NO support for a Series with the use-case you describe. EIther use a DataFrame or xarray.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222168647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222168647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222168647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE2ODY0Nw==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T14:57:20Z",
    "updated_at": "2016-05-27T14:57:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback My suggestion is that compound types _are_ a single type in the same way that a `datetime` is a single type. Complex numbers are also a single type because they have native numpy support, but what about quarternions and other hypercomplex numbers? I think it's reasonable to use records to define the base unit of a scalar, given that it's already supported by numpy.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222169229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222169229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222169229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE2OTIyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T14:59:24Z",
    "updated_at": "2016-05-27T15:00:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle a compound dtype is simply not supported, nor do I think should be. Sure an extension type that is innately a compound type is fine because it singular. But a structured dtype is NOT. it has sub-dtypes. This is just making an already complicated structure WAY more complex.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222169839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222169839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222169839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE2OTgzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T15:01:35Z",
    "updated_at": "2016-05-27T15:01:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "as I said for not this should simply raise `NotImplementedError`. If you want to investigate if this _could_ be suppport w/o major restructuring, then great. If its trivial, sure. But I suspect its not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222170120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222170120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222170120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE3MDEyMA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T15:02:33Z",
    "updated_at": "2016-05-27T15:02:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Does pandas support custom dtypes? I'm not sure that I've ever seen someone create one, other than `pandas`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222170434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222170434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222170434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE3MDQzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T15:03:44Z",
    "updated_at": "2016-05-27T15:03:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pydata/pandas/blob/master/pandas/types/dtypes.py\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222170702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222170702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222170702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE3MDcwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T15:04:43Z",
    "updated_at": "2016-05-27T15:04:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "But these required a lot of support to integrate properly. These are fundamental types. I suppose a Coordinate _could_ also be in that category. But as I said its a MAJOR effort to properly handle things.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222170914",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222170914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222170914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE3MDkxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T15:05:26Z",
    "updated_at": "2016-05-27T15:05:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Principally the issue is efficient storage. What you are suggesting is NOT stored efficiently and that's the problem. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222171100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222171100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222171100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE3MTEwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T15:06:09Z",
    "updated_at": "2016-05-27T15:06:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have NEVER seen a good use of `.apply`, and that's what you are suggesting here. That is SO completely inefficient.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222174303",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222174303",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222174303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE3NDMwMw==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T15:17:58Z",
    "updated_at": "2016-05-27T15:17:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's just a toy example of why the semantics would be useful. You could achieve the same thing with `applymap` or even just `df[:] = rotate_coordinates(df.values, z, theta)`. I don't have any particular understanding of the underlying efficiency of how these things are stored, I was just demonstrating the concept of compound data types that are \"logical\" scalars.\n\nI think it's fine to consider my suggestion a \"low reward / high effort\" enhancement - it may be fundamentally difficult to deal with this sort of thing and not something that comes up a lot, I just think it's worth considering as a \"nice to have\", since, if possible, it would be better to have first-class support for complex datatypes than not.\n\nWhen I have a bit of time I will be happy to look into the underlying details and see if I can get a better understanding of difficulty and/or propose an alternate approach. Probably it will be a while, though, since I have quite a backlog of other stuff to get to.\n\nIn the meantime, I would think this could be profitably handled by just converting compound datatypes to tuple on import, possibly with a warning about the inefficiency of this approach. At least this would allow people who are less performance sensitive to write some wrapper functions to allow the use of normal semantics.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222183868",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13296#issuecomment-222183868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13296",
    "id": 222183868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjE4Mzg2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-27T15:54:28Z",
    "updated_at": "2016-05-27T15:54:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle if you have time for this great. But I don't have time for every enhancement (actually most of them). So if you'd like to propose something great. However the very simplest thing is to raise an error. \n\nIf you are someone wants to implement a better soln. great.\n"
  }
]
