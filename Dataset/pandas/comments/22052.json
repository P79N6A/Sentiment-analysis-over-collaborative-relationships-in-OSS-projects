[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407806102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22052#issuecomment-407806102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22052",
    "id": 407806102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzgwNjEwMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T15:59:27Z",
    "updated_at": "2018-07-25T15:59:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "The order doesn't matter, but the same labels need to be with the same data. e.g.\r\n\r\n```python\r\nIn [31]: a = pd.DataFrame([{'filename':'a'}, {'filename': 'b'}], index=['a', 'b'])\r\n\r\nIn [32]: b = pd.DataFrame([{'filename':'b'}, {'filename': 'a'}], index=['b', 'a'])\r\n\r\nIn [33]: pd.util.testing.assert_frame_equal(a, b)\r\n```\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-33-302d0eeab6d2> in <module>()\r\n----> 1 pd.util.testing.assert_frame_equal(a, b)\r\n\r\n~/Envs/dask-dev/lib/python3.6/site-packages/pandas/util/testing.py in assert_frame_equal(left, right, check_dtype, check_index_type, check_column_type, check_frame_type, check_less_precise, check_names, by_blocks, check_exact, check_datetimelike_compat, check_categorical, check_like, obj)\r\n   1330                        check_exact=check_exact,\r\n   1331                        check_categorical=check_categorical,\r\n-> 1332                        obj='{obj}.index'.format(obj=obj))\r\n   1333\r\n   1334     # column comparison\r\n\r\n~/Envs/dask-dev/lib/python3.6/site-packages/pandas/util/testing.py in assert_index_equal(left, right, exact, check_names, check_less_precise, check_exact, check_categorical, obj)\r\n    858                                      check_less_precise=check_less_precise,\r\n    859                                      check_dtype=exact,\r\n--> 860                                      obj=obj, lobj=left, robj=right)\r\n    861\r\n    862     # metadata comparison\r\n\r\npandas/_libs/testing.pyx in pandas._libs.testing.assert_almost_equal()\r\n\r\npandas/_libs/testing.pyx in pandas._libs.testing.assert_almost_equal()\r\n\r\n~/Envs/dask-dev/lib/python3.6/site-packages/pandas/util/testing.py in raise_assert_detail(obj, message, left, right, diff)\r\n   1033         msg += \"\\n[diff]: {diff}\".format(diff=diff)\r\n   1034\r\n-> 1035     raise AssertionError(msg)\r\n   1036\r\n   1037\r\n\r\nAssertionError: DataFrame.index are different\r\n\r\nDataFrame.index values are different (100.0 %)\r\n[left]:  Index(['a', 'b'], dtype='object')\r\n[right]: Index(['b', 'a'], dtype='object')\r\n```\r\n\r\nBut this passes\r\n\r\n```\r\nIn [34]: pd.util.testing.assert_frame_equal(a, b, check_like=True)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407806325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22052#issuecomment-407806325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22052",
    "id": 407806325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzgwNjMyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-25T16:00:07Z",
    "updated_at": "2018-07-25T16:00:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lassebenni could you make a PR updating the docstring of `assert_frame_equal` to clarify this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408110359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22052#issuecomment-408110359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22052",
    "id": 408110359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODExMDM1OQ==",
    "user": {
      "login": "lassebenni",
      "id": 7990862,
      "node_id": "MDQ6VXNlcjc5OTA4NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7990862?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lassebenni",
      "html_url": "https://github.com/lassebenni",
      "followers_url": "https://api.github.com/users/lassebenni/followers",
      "following_url": "https://api.github.com/users/lassebenni/following{/other_user}",
      "gists_url": "https://api.github.com/users/lassebenni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lassebenni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lassebenni/subscriptions",
      "organizations_url": "https://api.github.com/users/lassebenni/orgs",
      "repos_url": "https://api.github.com/users/lassebenni/repos",
      "events_url": "https://api.github.com/users/lassebenni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lassebenni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-26T14:09:38Z",
    "updated_at": "2018-07-26T14:11:19Z",
    "author_association": "NONE",
    "body": "@TomAugspurger \r\n\r\nThank you for the quick response!\r\n\r\nI am not very familiar with Pandas Dataframes, so I missed the part of explicitly defining an index for the data. \r\n\r\nMy use case is as following: I have some code that applies transformations to Spark Dataframes. For testing purposes I want to compare the expected result to the actual result. For this I transform the Spark Dataframes to Pandas Dataframes: `df.toPandas()`. After which I want to compare the two: `pd.testing.assert_frame_equal(expected, actual, check_like=True)`.\r\n\r\nAssuming the transformations applied create rows and columns in a different order than expected, I was hoping that `check_like=True` would handle the differences without me having to sort the resulting DataFrame by column(s).\r\n\r\nBut it seems that I will have to sort the DataFrame either way, since the indexes for the values have to match:\r\n```\r\nIn [31]: a = pd.DataFrame([{'filename':'a'}, {'filename': 'b'}], index=['a', 'b'])\r\n\r\nIn [32]: b = pd.DataFrame([{'filename':'b'}, {'filename': 'a'}], index=['b', 'a'])\r\n```\r\n\r\nIn short, I hoped that:\r\n```\r\na = pd.DataFrame([{'filename':'a'}, {'filename': 'b'}], index=['a', 'b'])\r\nb = create_dataframe_transformation('filename', ['b', 'a'])\r\n\r\npd.testing.assert_frame_equal(a, b, check_like=True)\r\n```\r\nwould pass, without having to do: \r\n```\r\na = a.sort_values('filename')\r\nb = b.sort_values('filename')\r\n```\r\n\r\n<b>TLDR: for `check_like` to work, the values needs to have the same order of indexing.</b>\r\n"
  }
]
