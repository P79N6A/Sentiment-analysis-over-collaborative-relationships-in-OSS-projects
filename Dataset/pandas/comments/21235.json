[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392615201",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-392615201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 392615201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjYxNTIwMQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-28T23:10:54Z",
    "updated_at": "2018-11-27T06:03:14Z",
    "author_association": "NONE",
    "body": "Hello @SimonAlecks! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/groupby/generic.py`](https://github.com/SimonAlecks/pandas/blob/f0a9c6d825721224ddbcf4b89ec6ab8410e98cf1/pandas/core/groupby/generic.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/groupby/groupby.py`](https://github.com/SimonAlecks/pandas/blob/f0a9c6d825721224ddbcf4b89ec6ab8410e98cf1/pandas/core/groupby/groupby.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/groupby/test_transform.py`](https://github.com/SimonAlecks/pandas/blob/f0a9c6d825721224ddbcf4b89ec6ab8410e98cf1/pandas/tests/groupby/test_transform.py) !\n\n\n\n##### Comment last updated on November 27, 2018 at 06:03 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392743081",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-392743081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 392743081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mjc0MzA4MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T11:26:32Z",
    "updated_at": "2018-05-29T11:26:32Z",
    "author_association": "MEMBER",
    "body": "Just eyeballing this I do not like that the implementation is going to vary depending on the monotonicity of the group as that has relatively large performance implications that the standard user will not understand nor should they care to\r\n\r\nIs there any way to preserve the vectorized solution and come to the same result?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392869977",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-392869977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 392869977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mjg2OTk3Nw==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T17:39:29Z",
    "updated_at": "2018-05-29T17:39:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd It's hard for me to think of a scenario where the vectorized solution would work if the data is not in order with respect to groups, although perhaps the monotonicity requirement is overkill? I'm new to Pandas source code, so I'll investigate the existing helper functions that may preserve the intended logic but lessen the requirements. \r\n\r\nI'm also a little concerned though that the vectorized solution may be getting the first element of each group wrong, if it's calculating its percentage change with respect to the last element of the previous group. I'll check this when I get home. \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/393029237",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-393029237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 393029237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzAyOTIzNw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-05-30T04:47:31Z",
    "updated_at": "2018-12-12T07:47:11Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21235?src=pr&el=h1) Report\n> Merging [#21235](https://codecov.io/gh/pandas-dev/pandas/pull/21235?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/89f044175801b8a3c468138f454d51eec849eddb?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/21235/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/21235?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #21235      +/-   ##\n==========================================\n+ Coverage   92.21%   92.21%   +<.01%     \n==========================================\n  Files         162      162              \n  Lines       51763    51768       +5     \n==========================================\n+ Hits        47733    47740       +7     \n+ Misses       4030     4028       -2\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.61% <100%> (ø)` | :arrow_up: |\n| #single | `43% <0%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/21235?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/groupby/groupby.py](https://codecov.io/gh/pandas-dev/pandas/pull/21235/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS9ncm91cGJ5LnB5) | `96.67% <100%> (+0.16%)` | :arrow_up: |\n| [pandas/core/groupby/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/21235/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS9nZW5lcmljLnB5) | `87.12% <100%> (+0.04%)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/21235/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `87.41% <0%> (-0.1%)` | :arrow_down: |\n| [pandas/io/json/json.py](https://codecov.io/gh/pandas-dev/pandas/pull/21235/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2pzb24vanNvbi5weQ==) | `93.09% <0%> (+0.47%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21235?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/21235?src=pr&el=footer). Last update [89f0441...01d705f](https://codecov.io/gh/pandas-dev/pandas/pull/21235?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/393029692",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-393029692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 393029692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzAyOTY5Mg==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-30T04:51:02Z",
    "updated_at": "2018-05-30T04:52:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "After changing the UT to have a value in the 0th mock array element, the UT begins to fail. The non-apply based vectorized solution doesn't seem to work, as it calculates a pct diff between the first element of a group, and the last element of the preceding group.\r\n\r\nIt seems to me the simplest solution to solve this issue is to remove the potential to use a vectorized solution. In addition to solving the original issue, it also solves the other issue I discovered above, as well as the additional bonus of letting the user expect the same index structure returned whether or not the vectorized style was called or not (granted, this could easily be fixed).\r\n\r\nI suppose we could try preserving the vectorized solution, then writing a little algo to find the first element of each group and setting it to nan. I have no prior knowledge as to whether this would improve performance vs. calling apply. My intuition says at this point you'd be better off just using apply in the first place, but I could very well be wrong.\r\n\r\nI also left my updated UT in, as it would catch these cases in case they occurred again, or if a vectorized solution was reimplemented. \r\n\r\nAny thoughts @WillAyd ?\r\n\r\nPS: Does anyone have a link they can share with me on how to troubleshoot/debug the continuous-integration/travis-ci/pr failure?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/393253497",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-393253497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 393253497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MzI1MzQ5Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-30T17:41:49Z",
    "updated_at": "2018-05-30T17:41:49Z",
    "author_association": "MEMBER",
    "body": "Just looking at this can't you just changed the following line:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/c85ab083919b59ce84c220d5baf7d34ff4a0bcf2/pandas/core/groupby/groupby.py#L2081\r\n\r\nTo be `self.shift` instead of `filled.shift`? I think that emulates exactly what the user is doing in the example cited so may just be a typo in the first place. That would preserve the performance and be much preferable if it works"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/394208413",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-394208413",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 394208413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDIwODQxMw==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-04T01:00:28Z",
    "updated_at": "2018-06-04T01:00:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "In my most recent commit I tried to preserve vectorization, while also not making costly calls to is_monotonic, and preventing group contamination within the vectorization (e.g. first element of group B being divided by an element of group A).\r\n\r\nI did this by only allowing the code to attempt vectorization if it can confirm that the series is monotonic, *and* if the truth value of whether or not it is monotonic already exists in the cache. If these conditions are met, it will do a vectorized pct change operation, and then a vectorized operation to set any values that shouldn't exist to np.nan (e.g. for shift=1 the first element of a group would be divided by the last element of the prior group, but this is an invalid value).\r\n\r\nI expect this is trying to be too fancy given the problem and my knowledge of pandas source, so I'm prepared to nix it if this is the case, and just keep it simple and/or try to implement it in cython. Please just let me know.  Else I will extend it to the dataframe method as well. \r\n\r\nHi William,\r\nI tried what you suggested -- but I don't _think_ it makes sense. I think the current logic is correct in so far as shifted should simply be the filled series that is shifted once. Another way to say it, is changing the code to your suggestion wouldn't address the issue that non-monotonic group ordering is handled incorrectly, and that even if it were monotonic, the first element of a group may have a pct change with respect to the last element of the previous group.\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396006747",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-396006747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 396006747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjAwNjc0Nw==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-09T23:43:55Z",
    "updated_at": "2018-06-09T23:43:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the reasons I mentioned above a vectorized solution will return incorrect values for pct_change under a set of conditions. I attempted to solve these conditions in the CR above, which William pointed out was too convoluted (I agree). \r\n\r\nThe additional change you suggested (self.shift instead of filled.shift) does not work either for the reasons I mentioned above. The new test I wrote would fail under that change.\r\n\r\nMy suggestion is to update the test, remove the vectorized solution, and create a new issue to implement this in cython, which I'm interested in doing. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396008635",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-396008635",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 396008635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjAwODYzNQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-10T00:19:53Z",
    "updated_at": "2018-06-10T00:19:53Z",
    "author_association": "MEMBER",
    "body": "Not sure what you mean by the benchmarks being blacklisted but for illustration purposes here is how your latest compares compares to master:\r\n\r\n```bash\r\n       before           after         ratio\r\n     [415012f4]       [eaede342]\r\n+         571±1μs          975±4ms  1708.33  groupby.GroupByMethods.time_dtype_as_group('float', 'pct_change', 'transformation')\r\n+         572±2μs        974±0.6ms  1702.23  groupby.GroupByMethods.time_dtype_as_group('float', 'pct_change', 'direct')\r\n+         592±3μs          635±8ms  1072.93  groupby.GroupByMethods.time_dtype_as_group('int', 'pct_change', 'transformation')\r\n+         606±8μs          628±3ms  1036.87  groupby.GroupByMethods.time_dtype_as_group('int', 'pct_change', 'direct')\r\n+        559±10μs         514±10ms   920.59  groupby.GroupByMethods.time_dtype_as_field('float', 'pct_change', 'direct')\r\n+       529±0.9μs          481±5ms   908.79  groupby.GroupByMethods.time_dtype_as_field('float', 'pct_change', 'transformation')\r\n+         603±8μs         460±20ms   762.64  groupby.GroupByMethods.time_dtype_as_field('int', 'pct_change', 'direct')\r\n+         593±1μs          445±3ms   750.02  groupby.GroupByMethods.time_dtype_as_field('int', 'pct_change', 'transformation')\r\n\r\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n```\r\n\r\nAs you can see (and I think have already recognized) this isn't a great solution and kills performance.\r\n\r\n> The additional change you suggested (self.shift instead of filled.shift) does not work either for the reasons I mentioned above. The new test I wrote would fail under that change.\r\n\r\nI'm not entirely clear on what your reasons are. It's not a requirement that grouped elements be monotonic in any of the Cythonized code. \r\n\r\nIf you are getting an error on the test can you be explicit about *what* exactly that error is? IIRC correctly with the last set of tests what I suggested worked fine. I have a hunch that there may be confusion about the test as it was before (i.e. explicitly passing `None` would fail, but that was also expected). I could be wrong but in any case clarifying the failures you are seeing would be very helpful.\r\n\r\nFinal note - thanks for helping on this. I hope you are taking this feedback constructively and not in any negative fashion (I believe you are but just want to be explicit). Understanding how / when to interface with the Cythonized code is one of the more complicated aspects of this package"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398285151",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-398285151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 398285151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODI4NTE1MQ==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-19T06:09:14Z",
    "updated_at": "2018-06-19T06:09:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm very grateful for the feedback, and I definitely appreciate your time. I apologize for the delay since the last commit. I've been working on understanding the code more clearly.\r\n\r\nIn this situation I've attempted to solve the problem by incorporating your prior feedback. My previous posts were incorrect, and you correctly pointed out to me how the shift operator works.\r\n\r\nIn this latest CR I've attempted to fix the problem in line with the spirit of the original implementation. The first step is I added an explicit catch for a fill_method, which did not exist before.\r\n\r\nI initially attempted to implement your 1-line suggestion, but I noticed that I couldn't simply call self.shift(), as it first needed to have the proper fill method. However, the fill method returns the obj attribute, not the groupby object. \r\n\r\nIn order to remedy this, without creating a function that changed the state of the code, I used the following strategy:\r\nhttps://github.com/SimonAlecks/pandas/blob/64097ccd308db909dc99cbb88eeb6206beedb820/pandas/core/groupby/groupby.py#L2079\r\nI first recreate a new groupby object, but I solve the fill problem as part of this group. I remember I then had to reset the cache in order for some of the meta-data to align properly. I convinced myself this was necessary at the time, but I didn't write down why, so I'm going to go revisit that now to remind myself that I did this for a good reason. More generally, I could see it being the case that this solution is a hack or not idiomatic within pandas. If so, could you please let me know the correct way to achieve this same result?\r\n\r\nOnce this is done, the result is relatively self-explanatory. and is pretty similar to the original code.\r\n\r\nLastly, I ran an ASV benchmark locally, and the performance seemed similar, but I need to spend some more time teaching myself how the benchmarking system and code works, as it's possible I made an error."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/399722302",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-399722302",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 399722302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5OTcyMjMwMg==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-24T01:39:29Z",
    "updated_at": "2018-06-24T01:39:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Incorporated most requested changes, with a few clarifying questions asked on a few of them. Thanks for your patience! "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/400034245",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-400034245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 400034245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMDAzNDI0NQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-25T17:37:20Z",
    "updated_at": "2018-06-25T17:37:48Z",
    "author_association": "MEMBER",
    "body": "@SimonAlecks do you believe this change would also solve #21621?1 If so, could you add a test cases for that issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406891568",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-406891568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 406891568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjg5MTU2OA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-22T19:45:08Z",
    "updated_at": "2018-07-22T19:45:08Z",
    "author_association": "MEMBER",
    "body": "Since you mentioned that this PR fixes #21621, can you go ahead and add a test for that issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406906561",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-406906561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 406906561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkwNjU2MQ==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-22T23:46:54Z",
    "updated_at": "2018-07-22T23:46:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke I think the test I already wrote (well, augmented), should already cover it. It's essentially the exact problem I have attempted to solve here. If you disagree can you enumerate on the point? I don't mind adding a new test if I'm missing something, but it's not clear to me it's necessary. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/409671401",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-409671401",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 409671401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwOTY3MTQwMQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-01T18:16:46Z",
    "updated_at": "2018-08-01T18:16:46Z",
    "author_association": "MEMBER",
    "body": "Hmm OK thanks. So I see the difference now between the two sets of code we have. Here's a very small example to illustrate:\r\n\r\n```python\r\ndf = pd.DataFrame([['a', 1], ['a', np.nan], ['a', 2]], columns=['key', 'val'])\r\n```\r\n\r\nYour code yields the following:\r\n```python\r\nIn [4]: df.groupby('key').pct_change()\r\nOut[4]: \r\n   val\r\n0  NaN\r\n1  0.0\r\n2  1.0\r\n```\r\n\r\nwhereas my branch would do as follows:\r\n```python\r\nIn [4]: df.groupby('key').pct_change()\r\nOut[4]: \r\n   val\r\n0  NaN\r\n1  0.0\r\n2  NaN\r\n```\r\n\r\nThere difference is whether or not the fill method is getting applied to both the numerator and denominator or just the denominator.\r\n\r\nYour's is preferable behavior though the code should still be simplified. Can you see if there's a way to still emulate your behavior borrowing some of my code? It may just need a small tweak, but doing that would be preferable to the copy and private method calls you are currently making"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424970306",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-424970306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 424970306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDk3MDMwNg==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T06:09:50Z",
    "updated_at": "2018-09-27T06:09:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Hmm OK thanks. So I see the difference now between the two sets of code we have. Here's a very small example to illustrate:\r\n\r\nI cleaned up the code a fair amount. Let me know if anything is still unpalatable or not in line with what you were thinking. \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425267449",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-425267449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 425267449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI2NzQ0OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T22:52:44Z",
    "updated_at": "2018-09-27T22:52:44Z",
    "author_association": "MEMBER",
    "body": "Thanks for the updates @SimonAlecks . Note that we've reorganized some of the modules here so you'll want to merge in master on your next PR and resolve any merge conflicts"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435772561",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-435772561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 435772561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTc3MjU2MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T06:56:43Z",
    "updated_at": "2018-11-05T06:56:43Z",
    "author_association": "MEMBER",
    "body": "@SimonAlecks can you merge master?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441149731",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441149731",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441149731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE0OTczMQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T03:27:28Z",
    "updated_at": "2018-11-23T03:27:28Z",
    "author_association": "MEMBER",
    "body": "Closing as stale. Ping if you'd like to pick this one back up"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441308573",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441308573",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441308573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMwODU3Mw==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T19:38:29Z",
    "updated_at": "2018-11-23T19:38:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi William,\n\nI did let it go stale -- but I would like to finish this if that's okay.\n\nThanks,\nSimon\n\n\nOn Thu, Nov 22, 2018 at 7:27 PM William Ayd <notifications@github.com>\nwrote:\n\n> Closed #21235 <https://github.com/pandas-dev/pandas/pull/21235>.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/21235#event-1983392340>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AIchu0hgrwHc856BiiUxyBC_CprJR0j-ks5ux2s1gaJpZM4UQqbk>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441312236",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441312236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441312236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTMxMjIzNg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T20:11:45Z",
    "updated_at": "2018-11-23T20:11:45Z",
    "author_association": "MEMBER",
    "body": "Thanks! Ping if you need more help or clarification "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441419113",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441419113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441419113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTQxOTExMw==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-25T06:39:25Z",
    "updated_at": "2018-11-25T06:39:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for your thoughtful response. Using self.grouper.labels seems to be exactly what I was looking for -- thanks for pointing that out! In adding these changes to series and dataframe groupby, I also noticed that the vectorized operation would break for certain usages of frequency. Specifically, the code would *break* on the [following line](\r\nhttps://github.com/pandas-dev/pandas/pull/21235/commits/5d3fc2dd6752a04ddeb56989d397ea9ee85c8228#diff-bfee1ba9e7cb79839776fac1a57ed940R1231), when an additional index was added. In addition, the shifted/filled series would have mismatched datetime indices, which was causing other issues. As a result I added a conditional to simply call the normal pct change in that case, as well as an additional test check.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441447051",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441447051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441447051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTQ0NzA1MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-25T15:06:24Z",
    "updated_at": "2018-11-25T15:06:24Z",
    "author_association": "MEMBER",
    "body": "Looking a lot better. Can you provide a concrete example of where `freq` is breaking things? Really want to avoid using an anonymous func as it kills performance.\r\n\r\nFYI you also have what I assume to be a stylistic error causing the Travis failure. Make sure to run `ci/code_checks.sh` locally to see what may be causing it"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441500139",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441500139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441500139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUwMDEzOQ==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T02:23:16Z",
    "updated_at": "2018-11-26T02:23:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi William,\r\n\r\nTo start with I'll mock data and call the generic groupby pct change as it exists in the latest commit to see the intended behavior -- under the assumption that calling the anonymous function returns the intended behavior, and the vectorized operation replicates this same output, only faster. I will then go through the function and point out where I see issues, and articulate why I believe this to be the case. \r\n\r\n> #### Code Sample\r\n> \r\n> ```python\r\n> >>>import pandas as pd\r\n> \r\n> >>> idx = pd.DatetimeIndex(start='2017-01-01', end='2017-01-03', freq='D')\r\n> >>> df = pd.DataFrame({\r\n> >>>    'a': [4.0405, 4.0963, 4.3149],\r\n> >>>    'b': [1.7246, 1.7482, 1.8519],\r\n> >>>    'c': [804.74, 810.01, 860.13],\r\n> >>>    'grp': ['a', 'a', 'a']},\r\n> >>>    index=idx)\r\n> >>> expected = df.groupby('g')['a'].pct_change(freq='D')\r\n> >>> print(expected)```\r\n\r\n**Output**\r\n>    Out[26]: \r\n>     2017-01-01         NaN\r\n>     2017-01-02    0.013810\r\n>     2017-01-03    0.053365\r\n>     Freq: D, Name: a, dtype: float64\r\n> \r\n\r\nThe next step is to comment out the following chunk, and explore why this causes the tests to fail, using the same mocked data as above:\r\nhttps://github.com/pandas-dev/pandas/blob/5d3fc2dd6752a04ddeb56989d397ea9ee85c8228/pandas/core/groupby/generic.py#L1225-L1228\r\n\r\nWhen doing this, I encounter troubles here:\r\nhttps://github.com/pandas-dev/pandas/blob/5d3fc2dd6752a04ddeb56989d397ea9ee85c8228/pandas/core/groupby/generic.py#L1231\r\n\r\nI notice that when this line is called with a non-none value of freq (e.g 'D'), it returns a dataframe with an added named index dimension, turning it into a multi-index. I'm not sure if this is intended behavior or not, but even it it isn't, it feels out of scope, as a result I'm weary of going down the rabbit hole of trying to change this, at least not without encouragement. \r\n\r\nBelow are examples generated at this breakpoint with and without a frequency argument, to demonstrate the above point: \r\n\r\n> #### Code Sample\r\n> ```python\r\n> \r\n> >>> fill_grp.shift(periods=periods, freq='D')\r\n\r\n>      Out[11]: \r\n>      0   2017-01-02    4.0405\r\n>          2017-01-03    4.0963\r\n>          2017-01-04    4.3149\r\n>          Name: a, dtype: float64\r\n\r\n> ```python\r\n> >>> fill_grp.shift(periods=periods, freq=freq).index\r\n\r\n>      Out[15]: \r\n>      MultiIndex(levels=[[0], [2017-01-02 00:00:00, 2017-01-04 00:00:00, 2017-01-05 00:00:00]],\r\n>      labels=[[0, 0, 0], [0, 1, 2]])\r\n\r\n> #### Code Sample\r\n> ```python\r\n> >>> fill_grp.shift(periods=periods, freq=None)\r\n\r\n>     Out[12]: \r\n>      2017-01-01       NaN\r\n>      2017-01-02    4.0405\r\n>      2017-01-03    4.0963\r\n>      Freq: D, Name: a, dtype: float64\r\n> \r\n\r\nAssuming I were to fix this multi-index issue by just dropping it within the function (although I'm skeptical this solution would generalize):\r\n\r\n> ```python\r\n> >>> shifted.reset_index(level=0, drop=True, inplace=True)\r\n> ```\r\n \r\nThere is another difference, where the time-index structure does not match the expected behavior above. Although I suspect this could be solved by reindexing on the original self.obj.index.\r\n> #### Code Sample\r\n> ```python\r\n> >>> out = (filled / shifted) - 1\r\n> >>> print(out)\r\n**output**\r\n>     Out[27]: \r\n>     2017-01-01         NaN\r\n>     2017-01-02    0.013810\r\n>     2017-01-03    0.053365\r\n>     2017-01-04         NaN\r\n>     Freq: D, Name: a, dtype: float64\r\n\r\nI don't mind spending a few hours or more diving deeper into the code to see if I can solve the issue of the line returning a multi-index, and then reindexing the final line of (filled / shifted) -1. But before I give that a shot, I wanted to lay out my understanding of the problem, and see if you have any suggestions or concerns.\r\n\r\n(As a side note, I welcome any meta-feedback on my articulation of the problem, or how I can be more clear).\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441507481",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441507481",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441507481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUwNzQ4MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T03:17:50Z",
    "updated_at": "2018-11-26T03:17:50Z",
    "author_association": "MEMBER",
    "body": "Thanks for the thorough example and understood. I opened #23918 for that as a separate issue.\r\n\r\nInstead of falling back to the lambda could we inspect `shifted` when `periods` is non-zero and a `freq` is specified and simply drop the first index level? If we add a comment referencing the other issue I think it's clearer that that code is a workaround and should be adjusted accordingly whenever the other item gets fixed"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441516939",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441516939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441516939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTUxNjkzOQ==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T04:37:35Z",
    "updated_at": "2018-11-26T04:37:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "No problem, thanks for your response.\r\n\r\nMy first attempt at implementing your suggestion had some unexpected outcomes. \r\n\r\nAfter this line I added this:\r\nhttps://github.com/pandas-dev/pandas/blob/5d3fc2dd6752a04ddeb56989d397ea9ee85c8228/pandas/core/groupby/generic.py#L1231\r\n\r\n> ```python\r\n> >>> shifted = fill_grp.shift(periods=periods, freq=freq)\r\n> >>> if isinstance(shifted.index, MultiIndex):\r\n> >>>         shifted.reset_index(level=0, drop=True, inplace=True)\r\n\r\nFrom here, using the test data, we can notice:\r\n> ```python\r\n> >>> print(filled)\r\n\r\n> Out[28]: \r\n2010-01-01     3.0\r\n2010-01-02     3.0\r\n2010-01-03     NaN\r\n2010-01-04     NaN\r\n2010-01-05     1.0\r\n2010-01-06     2.0\r\n2010-01-07     4.0\r\n2010-01-08    10.0\r\n2010-01-09    10.0\r\n2010-01-10     4.0\r\n2010-01-01     3.0\r\n2010-01-02     3.0\r\n2010-01-03     NaN\r\n2010-01-04     NaN\r\n2010-01-05     1.0\r\n2010-01-06     2.0\r\n2010-01-07     4.0\r\n2010-01-08    10.0\r\n2010-01-09    10.0\r\n2010-01-10     4.0\r\nName: vals, dtype: float64\r\n\r\n> ```python\r\n> >>> print(shifted)\r\n\r\n> Out[29]: \r\n2010-01-02     3.0\r\n2010-01-03     3.0\r\n2010-01-04     NaN\r\n2010-01-05     NaN\r\n2010-01-06     1.0\r\n2010-01-07     2.0\r\n2010-01-08     4.0\r\n2010-01-09    10.0\r\n2010-01-10    10.0\r\n2010-01-11     4.0\r\n2010-01-02     3.0\r\n2010-01-03     3.0\r\n2010-01-04     NaN\r\n2010-01-05     NaN\r\n2010-01-06     1.0\r\n2010-01-07     2.0\r\n2010-01-08     4.0\r\n2010-01-09    10.0\r\n2010-01-10    10.0\r\n2010-01-11     4.0\r\nName: vals, dtype: float64\r\n\r\n> ```python\r\n> >>> print((filled / shifted) - 1)\r\n\r\n> (filled / shifted) - 1\r\nOut[30]: \r\n2010-01-01    NaN\r\n2010-01-01    NaN\r\n2010-01-02    0.0\r\n2010-01-02    0.0\r\n2010-01-02    0.0\r\n2010-01-02    0.0\r\n2010-01-03    NaN\r\n2010-01-03    NaN\r\n2010-01-03    NaN\r\n2010-01-03    NaN\r\n2010-01-04    NaN\r\n2010-01-04    NaN\r\n2010-01-04    NaN\r\n2010-01-04    NaN\r\n2010-01-05    NaN\r\n2010-01-05    NaN\r\n2010-01-05    NaN\r\n2010-01-05    NaN\r\n2010-01-06    1.0\r\n2010-01-06    1.0\r\n2010-01-06    1.0\r\n2010-01-06    1.0\r\n2010-01-07    1.0\r\n2010-01-07    1.0\r\n2010-01-07    1.0\r\n2010-01-07    1.0\r\n2010-01-08    1.5\r\n2010-01-08    1.5\r\n2010-01-08    1.5\r\n2010-01-08    1.5\r\n2010-01-09    0.0\r\n2010-01-09    0.0\r\n2010-01-09    0.0\r\n2010-01-09    0.0\r\n2010-01-10   -0.6\r\n2010-01-10   -0.6\r\n2010-01-10   -0.6\r\n2010-01-10   -0.6\r\n2010-01-11    NaN\r\n2010-01-11    NaN\r\nName: vals, dtype: float64\r\n\r\n\r\nI suspect I could solve this with a little investigation of the root cause for the index doubling, which seems to be due to having duplicates of dates in each series, and potentially trying to modify the index structure. In fact, I noticed this same issue would occur in the canonical pct_change method if there are duplicate date values in the series. \r\n\r\nDo you think it's worth trying to solve this issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441598304",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-441598304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 441598304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTU5ODMwNA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T10:54:07Z",
    "updated_at": "2018-11-26T10:54:07Z",
    "author_association": "MEMBER",
    "body": "No - the more I think about it the referenced issue is going to cause misalignment of values so division probably won’t work. As you have it is probably the best we can do here. \r\n\r\nCan you add a TODO comment referencing the issue and fix up the Travis failure (it’s coming from ci/code_checks.sh)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443547320",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-443547320",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 443547320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzU0NzMyMA==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T22:15:11Z",
    "updated_at": "2018-12-02T22:15:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added the whatsnew. I checked for previous examples in the docs to follow style guidelines, but please let me know if it's too verbose or I made a stylistic mistake, and I'll quickly fix it. Thanks."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446574821",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-446574821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 446574821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjU3NDgyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T12:41:44Z",
    "updated_at": "2018-12-12T12:41:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @SimonAlecks "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/446828992",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21235#issuecomment-446828992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21235",
    "id": 446828992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjgyODk5Mg==",
    "user": {
      "login": "SimonAlecks",
      "id": 8855995,
      "node_id": "MDQ6VXNlcjg4NTU5OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8855995?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SimonAlecks",
      "html_url": "https://github.com/SimonAlecks",
      "followers_url": "https://api.github.com/users/SimonAlecks/followers",
      "following_url": "https://api.github.com/users/SimonAlecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/SimonAlecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SimonAlecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SimonAlecks/subscriptions",
      "organizations_url": "https://api.github.com/users/SimonAlecks/orgs",
      "repos_url": "https://api.github.com/users/SimonAlecks/repos",
      "events_url": "https://api.github.com/users/SimonAlecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SimonAlecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T03:20:29Z",
    "updated_at": "2018-12-13T03:20:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback and @WillAyd thanks so much for your patience on my first PR! \r\nAny suggestions for the next bug I tackle? I'd like to learn the index structure. (I'm perfectly capable of finding a bug to work on on my own, just curious if anything in particular that you have a preference for)."
  }
]
