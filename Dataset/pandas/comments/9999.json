[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/96610070",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9999#issuecomment-96610070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9999",
    "id": 96610070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2NjEwMDcw",
    "user": {
      "login": "ARF1",
      "id": 5834577,
      "node_id": "MDQ6VXNlcjU4MzQ1Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ARF1",
      "html_url": "https://github.com/ARF1",
      "followers_url": "https://api.github.com/users/ARF1/followers",
      "following_url": "https://api.github.com/users/ARF1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions",
      "organizations_url": "https://api.github.com/users/ARF1/orgs",
      "repos_url": "https://api.github.com/users/ARF1/repos",
      "events_url": "https://api.github.com/users/ARF1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ARF1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-27T11:00:25Z",
    "updated_at": "2015-04-27T11:47:58Z",
    "author_association": "NONE",
    "body": "@jreback @shoyer I tried out what happend making RangeIndex the default index: nothing good. - A whopping 60 errors and 13 test failures. - Most of which meant absolutely nothing to me.\n\nTo make the problem more manageable, I started this tree with a minimal `RangeIndex` implementation: no optimization at all, pure fall-back to `Int64Index`. In principle it should behave pretty much like the usual default index - except with a different constructor.\n\nStill I have about 16 errors and 2 failures - most of which I have not idea how they happen. I managed to diagnose and fix one and I am working on another.\n\nThat said, I will really need help debugging this if you really want to make `RangeIndex` the default index: I am fairly limited because I have already exceeded the time I was granted to work on `RangeIndex` by far. I will of course still work on it when I can, but I can no longer do it full-time - which would be required to understand all the pandas internals to fix these widely distributed errors.\n\nMaybe you know another pandas developer would would be willing to help out with this - or take ownership?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/96728143",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9999#issuecomment-96728143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9999",
    "id": 96728143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2NzI4MTQz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-27T16:12:20Z",
    "updated_at": "2015-04-27T16:12:20Z",
    "author_association": "MEMBER",
    "body": "Haha, that's not too surprising :). If you keep your branch up to date, I can test it and probably identify at least a few fixes.\n\nOn Mon, Apr 27, 2015 at 4:00 AM, ARF1 notifications@github.com wrote:\n\n> @jreback @shoyer I tried out what happend making RangeIndex the default index: nothing good. - A whopping 60 errors and 13 test failures. - Most of which meant absolutely nothing to me.\n> To make the problem more manageable, I started this tree with a minimal `RangeIndex` implementation: no optimization at all, pure fall-back to `Int64Index`. In principle it should behave pretty much like the usual default index - except with a different constructor.\n> Still I have about 16 errors and 2 failures - most of which I have not idea how they happen. I managed to diagnose and fix one and working on another.\n> That said, I will really need help debugging this if you really want to make `RangeIndex` the default index: I am fairly limited because I have already exceeded the time I was granted to work on `RangeIndex` by far. I will of course still work on it when I can, but I can no longer do it full-time - which would be required to understand all the pandas internals to fix these widely distributed errors.\n> \n> ## Maybe you know another pandas developer would would be willing to help out with this - or take ownership?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/pull/9999#issuecomment-96610070\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/96734155",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9999#issuecomment-96734155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9999",
    "id": 96734155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2NzM0MTU1",
    "user": {
      "login": "ARF1",
      "id": 5834577,
      "node_id": "MDQ6VXNlcjU4MzQ1Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ARF1",
      "html_url": "https://github.com/ARF1",
      "followers_url": "https://api.github.com/users/ARF1/followers",
      "following_url": "https://api.github.com/users/ARF1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions",
      "organizations_url": "https://api.github.com/users/ARF1/orgs",
      "repos_url": "https://api.github.com/users/ARF1/repos",
      "events_url": "https://api.github.com/users/ARF1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ARF1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-27T16:39:36Z",
    "updated_at": "2015-04-27T16:42:08Z",
    "author_association": "NONE",
    "body": "@shoyer That would be great. I managed to whittle the issues down to only a few with this minimal `RangeIndex` implementation. Now however I am a bit stumped by the error in `test_set_index2 (pandas.tests.test_frame.TestDataFrame)`. See: https://travis-ci.org/pydata/pandas/jobs/60231079#L1173\n\nAlso, I am not quite sure what to do with the failure in `test_constructor_mrecarray (pandas.tests.test_frame.TestDataFrame)`. (See: https://travis-ci.org/pydata/pandas/jobs/60231079#L1209) The issue seems to be that a dataframe that originally had a `RangeIndex` returns a dataframe with a `Int64Index` after some operation. That should in principle be accepted as ok, I think, but how would one adjust the test?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98134570",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9999#issuecomment-98134570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9999",
    "id": 98134570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MTM0NTcw",
    "user": {
      "login": "ARF1",
      "id": 5834577,
      "node_id": "MDQ6VXNlcjU4MzQ1Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ARF1",
      "html_url": "https://github.com/ARF1",
      "followers_url": "https://api.github.com/users/ARF1/followers",
      "following_url": "https://api.github.com/users/ARF1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions",
      "organizations_url": "https://api.github.com/users/ARF1/orgs",
      "repos_url": "https://api.github.com/users/ARF1/repos",
      "events_url": "https://api.github.com/users/ARF1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ARF1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T13:32:53Z",
    "updated_at": "2015-05-01T13:39:34Z",
    "author_association": "NONE",
    "body": "@jreback @shoyer Ok, it was truely painfuly but I managed to reduce the issues with the minimal `RangeIndex` implementation as default index to a single test failure. This last one though is stubbornly escaping my analysis.\n\nSee (`pandas.tests.test_graphics.TestDataFramePlots.test_legend_name`): https://travis-ci.org/pydata/pandas/jobs/60815604#L1173\n\nI have narrowed it down to this line: https://github.com/ARF1/pandas/blob/rangeindex_as_default_index/pandas/tools/plotting.py#L1007\n\nBefore this line, `data.columns.name == 'new'`, after this line, `numeric_data.columns.name == None`. This only happens if `RangeIndex` is the default index. For the life of me I cannot figure out why the name is lost in translation. - Even with side-by-side step-by-step debugging of both versions.\n\nAny chance you could help with this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98237582",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9999#issuecomment-98237582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9999",
    "id": 98237582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MjM3NTgy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-01T21:02:07Z",
    "updated_at": "2015-05-01T21:02:07Z",
    "author_association": "MEMBER",
    "body": "@ARF1  Tracking down bugs like this can be unforgiving, especially when it takes you on a deep dive through pandas internals. Thanks for the hard work!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98360790",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9999#issuecomment-98360790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9999",
    "id": 98360790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4MzYwNzkw",
    "user": {
      "login": "ARF1",
      "id": 5834577,
      "node_id": "MDQ6VXNlcjU4MzQ1Nzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5834577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ARF1",
      "html_url": "https://github.com/ARF1",
      "followers_url": "https://api.github.com/users/ARF1/followers",
      "following_url": "https://api.github.com/users/ARF1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ARF1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ARF1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ARF1/subscriptions",
      "organizations_url": "https://api.github.com/users/ARF1/orgs",
      "repos_url": "https://api.github.com/users/ARF1/repos",
      "events_url": "https://api.github.com/users/ARF1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ARF1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-02T13:51:10Z",
    "updated_at": "2015-05-02T13:51:10Z",
    "author_association": "NONE",
    "body": "Closing in favour of and rebasing changesets on #9977.\n"
  }
]
