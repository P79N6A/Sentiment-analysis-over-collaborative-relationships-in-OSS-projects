[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111473168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10336#issuecomment-111473168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10336",
    "id": 111473168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTQ3MzE2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T12:12:33Z",
    "updated_at": "2015-06-12T12:12:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "when you insert `NaN` into a column, it is check for compat, then changed to an appropriate dtype if necessary. `bool` is a sub-class of `int` which is a subclass of `float`, which supports `NaN`. You are suggesting for `bool` results that they go one step farther to `object`. I suppose this is possible, maybe even desirable. However, this would have to be checked for in this (in the `BoolBlock` in internals). If you'd like to take a crack at this would be great.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111520334",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10336#issuecomment-111520334",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10336",
    "id": 111520334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUyMDMzNA==",
    "user": {
      "login": "jaradc",
      "id": 12854767,
      "node_id": "MDQ6VXNlcjEyODU0NzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12854767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaradc",
      "html_url": "https://github.com/jaradc",
      "followers_url": "https://api.github.com/users/jaradc/followers",
      "following_url": "https://api.github.com/users/jaradc/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaradc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaradc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaradc/subscriptions",
      "organizations_url": "https://api.github.com/users/jaradc/orgs",
      "repos_url": "https://api.github.com/users/jaradc/repos",
      "events_url": "https://api.github.com/users/jaradc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaradc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T15:06:07Z",
    "updated_at": "2015-06-12T15:06:33Z",
    "author_association": "NONE",
    "body": "I'm sorry but I'm just a lowly, humble pandas newbie and didn't even know about the hierarchy of classes you just mentioned.  This question came about more from mere curiosity while I was following the pandas cookbook tutorials and learning about masks.  The tutorials set values to integers so I was curious what `bools` would do and got a result I didn't expect (mixture of `bool`, `NaN`, and `float`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111522243",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10336#issuecomment-111522243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10336",
    "id": 111522243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTUyMjI0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T15:13:17Z",
    "updated_at": "2015-06-12T15:13:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jaradc no problem. If you do want to look you could trace the call and see what happens. I just setup a test and step thru unless I see something interesting (e.g. [this](https://github.com/pydata/pandas/blob/master/pandas/core/internals.py#L475) is called) and which needs a definition in the `BoolBlock` to handle a bit more.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111778182",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10336#issuecomment-111778182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10336",
    "id": 111778182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTc3ODE4Mg==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T03:52:01Z",
    "updated_at": "2015-06-14T03:52:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem is actually with `numpy`. [This line](https://github.com/pydata/pandas/blob/master/pandas/computation/expressions.py#L135) calls the `numpy` function.\n\n```\n>>> np.where(np.array([False,True,False,True]), np.array([True, False, True, False]), np.nan)\narray([ nan,   0.,  nan,   0.])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111822345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10336#issuecomment-111822345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10336",
    "id": 111822345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTgyMjM0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T12:31:41Z",
    "updated_at": "2015-06-14T12:31:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kawochen that line is ok, it correctly returns the correct result. It then needs to be coerced as a `BoolBlock` cannot hold NA. It then is inferred to be a `FloatBlock`, rather than an `ObjectBlock`. (normally you DO want to go to a `FloatBlock`, but if its coming from a `BoolBlock` and now has NA then its reasonable to change the type that it is coerced.\n"
  }
]
