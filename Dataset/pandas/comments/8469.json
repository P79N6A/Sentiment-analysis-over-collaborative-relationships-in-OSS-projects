[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57936962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-57936962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 57936962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTM2OTYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T14:03:34Z",
    "updated_at": "2014-10-05T14:04:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, this is in general a non-trivial problem and that's why its not done by default. You can do the below.\n\n```\nIn [10]: from pandas.io.json import json_normalize\n\nIn [11]: json_normalize(data)\nOut[11]: \n   followers user.full_name  user.uid\n0          1          Alice       123\n1          2            Bob       456\n```\n\nsee docs here: http://pandas-docs.github.io/pandas-docs-travis/io.html#normalization\n\nI suppose a 2 level dict could be examined and this done.\n\nDon't want additional context specific keywords. But you could try this type of soln an dsee if it breaks anything. If it works ok, would consider it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57946600",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-57946600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 57946600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ2NjAw",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:16:30Z",
    "updated_at": "2014-10-05T18:16:30Z",
    "author_association": "NONE",
    "body": "I don't understand, you don't want new keywords but would be ok with a flatten keyword?\nIn any case, json_normalize works fine for me - I just didn't know it was hidden there. Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57946636",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-57946636",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 57946636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ2NjM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:17:48Z",
    "updated_at": "2014-10-05T18:17:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "no new keywords\n\nbut u maybe could inspect a 2-level dict and flatten\n\nwhy don't u give it a shot\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57947702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-57947702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 57947702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ3NzAy",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T18:50:57Z",
    "updated_at": "2014-10-05T18:50:57Z",
    "author_association": "NONE",
    "body": "Wouldn't that break existing code? If no new keywords are allowed (I can see why), I think it's better to leave it as-is. `json_normalize` works fine for me, I'll add any extra features I need there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57948108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-57948108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 57948108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTQ4MTA4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T19:02:31Z",
    "updated_at": "2014-10-05T19:02:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kay1793 here's a couple of things to try (and can see what works best):\n- have `pd.read_json` interpret this (it normally takes a string / file handle), and essentially call `json_normalize` if its a nested dict-of-dicts (we might be bending the definition a bit though)\n- have the `DataFrame` constructor deal with this and see if it can do unambiguous interpretation (e.g. you have a dict of dict / scalar mix, instead of the current behavior, actually call `json_normalize`) - might break things, but unknown until you try\n- provide a `pd.JSON` which is essentially a wrapper around `json_normalize` (and is a more expandable way of doing things like this)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57953900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-57953900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 57953900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTUzOTAw",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T21:55:33Z",
    "updated_at": "2014-10-06T22:59:16Z",
    "author_association": "NONE",
    "body": "- The `read_json` data schema isn't wonderful but it is what it is, I don't think making it as mysterious and full of private cases as the Dataframe constructor is a good idea.\n- As for making the Dataframe constructor silently guess what the user wants, there's nothing unambiguous about it breaking someone's code. Currently it keeps the dictionary as an object, doing something else will break code. Without a keyword, I don't think this should be done, pandas already second-guesses the user too much in certain places.\n- adding pd.JSON isn't reasonable either. json isn't really the point, any nested dictionary could be serialized as json. What matters is the actual structure, and how to deal with it. What you're suggesting is to take a special case of the datafram constructor's existing functionality (list of dicts) and turn it into a different dataframe constructor. That's not right either IMO.\n\n`json_normalize` works fine for me, and when it comes to API design I'm kind of conservative, so none of those options seem acceptable to me. I vote \"do nothing\".\n\nEdit: clarified my 2nd point.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57953957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-57953957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 57953957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3OTUzOTU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-05T21:57:34Z",
    "updated_at": "2014-10-05T21:57:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kay1793 I think you missed my point on these three. I was suggesting you actually try it and see if its a problem to try to infer it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58113303",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-58113303",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 58113303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTEzMzAz",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-06T22:59:18Z",
    "updated_at": "2014-10-06T22:59:18Z",
    "author_association": "NONE",
    "body": "I did disagree with you, but I'm not sure what I've misunderstood. Can you be more specific?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58179692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8469#issuecomment-58179692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8469",
    "id": 58179692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MTc5Njky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-07T12:58:03Z",
    "updated_at": "2014-10-07T12:58:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kay1793 \n\nI was trying to find a nice way to promote `json_normalize` its kind of buried.\n\nthat's why I suggested making `read_json` try it (e.g. if a string/filename is not presented). E.g. you have a 'json' like object, `read_json` can internally call `json_normalize` and to try to figure it out.\n\nDoing this by default is problematic on many levels in the DataFrame constructor (though I wanted you to try it and see, maybe it IS possible to infer these types of multi-level dicts).\n"
  }
]
