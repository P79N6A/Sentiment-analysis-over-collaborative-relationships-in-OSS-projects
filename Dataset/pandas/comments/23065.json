[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428388234",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428388234",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428388234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM4ODIzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-09T23:33:46Z",
    "updated_at": "2018-10-09T23:33:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "as i believe tom commented this is not likely to be worth changing"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428399830",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428399830",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428399830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODM5OTgzMA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-10-10T00:44:04Z",
    "updated_at": "2018-10-18T09:15:47Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23065?src=pr&el=h1) Report\n> Merging [#23065](https://codecov.io/gh/pandas-dev/pandas/pull/23065?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/1546c35dc839b3f6c094ad41d14cda24e9e13a0c?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `75%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/23065/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/23065?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #23065      +/-   ##\n==========================================\n- Coverage   92.19%   92.18%   -0.01%     \n==========================================\n  Files         169      169              \n  Lines       50954    50956       +2     \n==========================================\n+ Hits        46975    46976       +1     \n- Misses       3979     3980       +1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.61% <75%> (-0.01%)` | :arrow_down: |\n| #single | `42.27% <75%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/23065?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/dtypes/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/23065/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbW1vbi5weQ==) | `95.11% <ø> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/inference.py](https://codecov.io/gh/pandas-dev/pandas/pull/23065/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2luZmVyZW5jZS5weQ==) | `98.38% <100%> (ø)` | :arrow_up: |\n| [pandas/compat/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/23065/diff?src=pr&el=tree#diff-cGFuZGFzL2NvbXBhdC9fX2luaXRfXy5weQ==) | `58.36% <50%> (-0.07%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23065?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/23065?src=pr&el=footer). Last update [1546c35...ab3ce96](https://codecov.io/gh/pandas-dev/pandas/pull/23065?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428449124",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428449124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428449124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ0OTEyNA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T06:06:40Z",
    "updated_at": "2018-10-10T06:06:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> as i believe tom commented this is not likely to be worth changing\r\n\r\nAs I believe Tom commented that this is not worth *breaking*, but this is not a breaking change."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428457961",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428457961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428457961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ1Nzk2MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T06:50:35Z",
    "updated_at": "2018-10-10T06:50:35Z",
    "author_association": "MEMBER",
    "body": "@h-vetinari it's maybe not breaking, but you still plan to change the default behaviour (the warning). \r\nWhy not only adding the keyword with a default for the current behaviour, and then you can specifically use it there where it is needed to exclude sets. \r\nThen the diff here would be much smaller, and then we can limit the discussion to whether it is worth adding the keyword vs explicitly checking for sets in those few cases."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428461846",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428461846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428461846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODQ2MTg0Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T07:07:26Z",
    "updated_at": "2018-10-10T07:07:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\nObviously one could add it with the current default - that's easily done. But why not discuss as well if fixing an ambiguous bit of API is worth it?\r\n> Since `list` is ordered in python, the name `is_list_like` suggests the same property. If that's not the case it's good (\"explicit is better than implicit\") to have to specify it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428518087",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428518087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428518087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODUxODA4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T10:17:34Z",
    "updated_at": "2018-10-10T10:17:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari my point in bringing this up would be to see if this is worth it\r\nit is not, given the amount of confusion this would cause\r\nadding a keyword, while solving the backwards compat problem just adds an api that i don’t think we would want at all; no other is_* have any keywords like this (infer_dtype has one but that is a bit different)\r\n\r\nthis was a good experiment - maybe i wasn’t clear - trying means reporting what happened, then we have a discussion about it"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428568687",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428568687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428568687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODU2ODY4Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T13:21:14Z",
    "updated_at": "2018-10-10T13:21:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Summarizing how I see things:\r\n\r\n1. `is_list_like` is a fundamentally fuzzy concept. It can't do the right thing in every case.\r\n2. The caller knows more about exactly what they need (just iterable?, ordered?, etc.)\r\n\r\nSo we can either do things like\r\n\r\n```python\r\nif is_list_like(x) and not is_unodered(x):\r\n   ...\r\n```\r\n\r\nor do things like\r\n\r\n```python\r\nif is_list_like(x, require_ordered=True):\r\n    pass\r\n```\r\n\r\nBetween those to, the keyword to `is_list_like` seems fine.\r\n\r\nI don't think changing the default behavior of considering sets as list-like is worth it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428582831",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428582831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428582831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODU4MjgzMQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T13:59:34Z",
    "updated_at": "2018-10-10T13:59:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @TomAugspurger \r\n\r\nOK, not changing the default. I see two options:\r\n* Add kwarg (either `require_ordered`, `strict` etc.) - no strong preference about the name, but shorter is better IMO.\r\n* Add separate method `is_ordered_list_like` (suggestion by @jschendel) in #23061 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428584871",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428584871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428584871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODU4NDg3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T14:04:45Z",
    "updated_at": "2018-10-10T14:04:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "i think is_ordered_list_like is nicer here (but just make it internal for now, don’t add to api.types)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428637866",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428637866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428637866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODYzNzg2Ng==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T16:23:00Z",
    "updated_at": "2018-10-17T16:18:49Z",
    "author_association": "NONE",
    "body": "Hello @h-vetinari! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/compat/__init__.py`](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/compat/__init__.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/common.py`](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/core/dtypes/common.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/inference.py`](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/core/dtypes/inference.py) !\n\n - In the file [`pandas/tests/dtypes/test_inference.py`](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py), following                are the PEP8 issues :\n> [Line 53:10](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L53): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 53:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L53): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 54:9](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L54): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 54:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L54): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 55:12](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L55): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 55:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L55): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 56:14](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L56): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 56:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L56): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 57:15](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L57): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 57:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L57): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 58:13](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L58): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 58:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L58): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 59:15](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L59): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 60:12](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L60): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 61:26](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L61): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 62:20](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L62): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 63:19](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L63): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 63:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L63): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 64:15](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L64): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 64:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L64): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 65:26](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L65): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 65:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L65): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 66:22](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L66): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 66:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L66): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 67:18](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L67): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 67:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L67): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 68:17](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L68): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 68:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L68): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 69:24](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L69): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 69:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L69): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 70:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L70): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 71:17](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L71): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 71:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L71): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 72:16](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L72): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 72:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L72): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 73:23](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L73): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 73:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L73): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 74:18](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L74): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 74:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L74): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 75:27](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L75): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 75:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L75): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 76:19](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L76): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 76:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L76): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 77:27](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L77): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 77:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L77): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 78:21](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L78): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 78:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L78): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 79:27](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L79): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 79:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L79): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 80:23](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L80): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 80:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L80): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 81:27](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L81): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 81:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L81): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 82:25](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L82): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 82:38](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L82): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 83:18](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L83): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 84:8](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L84): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 85:13](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L85): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 86:10](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L86): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 87:12](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L87): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 88:9](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L88): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 89:10](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L89): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 90:15](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L90): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 91:13](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L91): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n> [Line 92:11](https://github.com/h-vetinari/pandas/blob/2f5e927bdaea3e0abb2d06c4cbbbc806fffade24/pandas/tests/dtypes/test_inference.py#L92): [E241](https://duckduckgo.com/?q=pep8%20E241) multiple spaces after ','\n\n\n\n\n##### Comment last updated on October 17, 2018 at 16:18 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428743565",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428743565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428743565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc0MzU2NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T21:43:33Z",
    "updated_at": "2018-10-10T21:43:33Z",
    "author_association": "MEMBER",
    "body": "@h-vetinari is there an actual use case of the checking for ordered dict / dict below 3.6 ? Or just to want to be strict in the checking for orderedness?\r\nBecause it also seems very strange to me to handle dicts differently depending on the python version within such a function.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428744053",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428744053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428744053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc0NDA1Mw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T21:45:09Z",
    "updated_at": "2018-10-10T21:45:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\n\r\nWell, that's what CPython *does*. I thought I'd be thorough about the orderedness thing, but I don't care about the `dicts` here so much."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428744382",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428744382",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428744382,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc0NDM4Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T21:46:12Z",
    "updated_at": "2018-10-10T21:46:12Z",
    "author_association": "MEMBER",
    "body": "Then please remove it. If we don't have a use case, there is no point in trying to be strict for the sake of being it, IMO"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428745392",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428745392",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428745392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc0NTM5Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T21:49:30Z",
    "updated_at": "2018-10-10T21:49:30Z",
    "author_association": "MEMBER",
    "body": "Another thing, I am personally not sure we should use the term \"unordered\", instead of just being explicit that it is about Sets (because you can eg still sort a set, or convert it to an orderable list, etc. And what if there then comes up another unordered data structure?)\r\n\r\nIn that sense, I would find a `is_list_like(..., include_sets=False)` clearer and more explicit. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428747041",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428747041",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428747041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc0NzA0MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T21:54:39Z",
    "updated_at": "2018-10-10T21:54:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\n\r\nAlright, removing dict.\r\n\r\nCan you agree with @jreback and @TomAugspurger on whether it's\r\n* `is_ordered_list_like`\r\n* with a kwarg:\r\n  * `require_ordered`\r\n  * `include_sets`\r\n  * `strict`\r\n  * ...\r\n\r\nI don't care about which way, but prefer shorter to read/type"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428754381",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428754381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428754381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc1NDM4MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T22:25:37Z",
    "updated_at": "2018-10-10T22:25:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Since there are 2/3 devs voting for a kwarg, I went back to that after all. I briefly thought about `ordered_only`, but decided that `strict` is nice and short and actually reads well with the function name: \"is this list-like (if one is strict)?\""
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428830176",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428830176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428830176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODgzMDE3Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T05:57:14Z",
    "updated_at": "2018-10-11T05:57:14Z",
    "author_association": "MEMBER",
    "body": "> I can't magically make you agree amongst each other,\r\n\r\nYes, you cannot, and I understand that that can be annoying, but please be a bit patient and wait with updating again before we have the time to discuss this. With different timezones, different times of the day we look at this, delayed communication on github etc, there is often no way to discuss something in a day, let alone a few hours. That's reality of open source."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428831476",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-428831476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 428831476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODgzMTQ3Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T06:04:16Z",
    "updated_at": "2018-10-11T06:04:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\nI'm not in a hurry. The commits are there to revert to `is_ordered_list_like` if desired, but since the preferences were leaning towards kwarg I decided to cover that base as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429482883",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-429482883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 429482883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTQ4Mjg4Mw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-12T22:48:09Z",
    "updated_at": "2018-10-14T21:35:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am snookered between the following three options and contradictory positions:\r\n1. `is_list_like(some_kwarg=False)` - @jreback doesn't want a keyword\r\n1. `is_ordered_list_like` - @jorisvandenbossche & @TomAugspurger  prefer keywords\r\n1. close this PR and use additional `isinstance(x, set)` checks where necessary - opposed by @jreback in #22486 (and the reason for this PR).\r\n\r\nI'm fine with any one choice (with my preferences in the order of the points above) - can you please help reach a conclusion here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429665360",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-429665360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 429665360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY2NTM2MA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-14T21:37:37Z",
    "updated_at": "2018-10-14T21:37:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @TomAugspurger @jorisvandenbossche \r\n> I'm fine with any one choice (with my preferences in the order of the points [above](https://github.com/pandas-dev/pandas/pull/23065#issuecomment-429482883)) - can you please help reach a conclusion here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429963126",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-429963126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 429963126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTk2MzEyNg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T18:26:38Z",
    "updated_at": "2018-10-15T18:26:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Going back to `is_ordered_list_like` - maybe that will get things moving again. ;-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430310250",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-430310250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 430310250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDMxMDI1MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T16:43:54Z",
    "updated_at": "2018-10-16T16:43:54Z",
    "author_association": "MEMBER",
    "body": "Quoting @jreback from a bit above:\r\n\r\n> otherwise would just drop this and use isinstance checks for sets in a few places if necessary.\r\n\r\nSo certainly don't let this discussion block the other PR https://github.com/pandas-dev/pandas/pull/22486\r\n\r\nPersonally I am rather -1 on adding something like `is_ordered_list_like`. \"list_like\" is already a vague messy concept, \"ordered list_like\" does not make it better IMO. \r\nIf we do something, as I said above, I would rather go for a very specific keyword (so not something like \"strict\", rather something like \"allow_sets\"). But if that is only used a couple of times throughout the code base, maybe the status quo and doing an explicit isinstance check in those occasions, is also a perfect option.\r\n\r\n@jreback @TomAugspurger any additional thoughts on this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430365851",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-430365851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 430365851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM2NTg1MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T19:22:08Z",
    "updated_at": "2018-10-16T19:22:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\nThanks for the response. Happy to move forward on #22486  in whatever form. I opened #23187 to a) split it off of this PR and b) illustrate how a case using the \"no action\" route would look like.\r\n\r\nI still prefer the `is_list_like(obj, kwarg=False)` solution the best, I dislike the status quo plus adding instance-checks for `set` (applies partly to `is_ordered_list_like` as well), because it keeps the same trap open I fell into with #20347 (and almost #22486) - `is_list_like` IMO makes it easy to overlook that it includes sets as well, and someone might end up using it in cases where orderedness is essential (hence the original drive of this PR to change the default with a deprecation cycle).)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430368459",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-430368459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 430368459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM2ODQ1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T19:28:40Z",
    "updated_at": "2018-10-16T19:28:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed with @jorisvandenbossche that\r\n\r\n- very specific keyword (so not something like \"strict\", rather something like \"allow_sets\").\r\n- maybe the status quo and doing an explicit isinstance check in those occasions, is also a perfect option\r\n\r\nI don't have a preference between adding a kwarg to `is_list_like` vs. doing those checks independently."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430381587",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-430381587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 430381587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDM4MTU4Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T20:06:24Z",
    "updated_at": "2018-10-16T20:06:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback:\r\ncould you live with `is_list_like(obj, allow_sets=True)`? @jorisvandenbossche @TomAugspurger (and myself) would prefer this over `is_ordered_list_like`.\r\n\r\nAdding `isinstance(x, set)` also would work (though, as @jschendel notes, wouldn't catch `frozenset` etc.), but is IMO the least preferable solution out of the three, not least re:explicitness (see [my comment](https://github.com/pandas-dev/pandas/pull/23065#issuecomment-430365851)). The current state of #22486 and #23187 follows this last example, so can check it out there \"in real life\"."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430415809",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-430415809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 430415809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQxNTgwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T21:58:02Z",
    "updated_at": "2018-10-16T21:58:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "i think allow_sets as a kwarg is ok (default is True)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430420605",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-430420605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 430420605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQyMDYwNQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-16T22:16:54Z",
    "updated_at": "2018-10-16T22:16:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the responses / inputs everyone. Changed back to kwarg, renamed it to `allow_sets`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430694859",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-430694859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 430694859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDY5NDg1OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T16:21:41Z",
    "updated_at": "2018-10-17T16:21:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, hoping this last commit is more what you guys were after.\r\n\r\nI decided to add the  `ids` to have nice output (in error logs, resp. with `- v`):\r\n```\r\n\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[list] PASSED    [  0%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[list-empty] PASSED [  0%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[tuple] PASSED   [  1%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[tuple-empty] PASSED [  1%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[dict] PASSED    [  1%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[dict-empty] PASSED [  2%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[set] PASSED     [  2%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[set-empty] PASSED [  2%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[frozenset] PASSED [  3%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[frozenset-empty] PASSED [  3%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[iterator] PASSED [  3%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[iterator-empty] PASSED [  4%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[generator] PASSED [  4%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[generator-empty] PASSED [  4%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[Series] PASSED  [  5%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[Series-empty] PASSED [  5%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[StringMethods] PASSED [  5%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[StringMethods-empty] PASSED [  6%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[Index] PASSED   [  6%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[Index-empty] PASSED [  6%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[DataFrame] PASSED [  7%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[DataFrame-empty] PASSED [  7%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-1d] PASSED [  8%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-1d-empty] PASSED [  8%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-2d] PASSED [  8%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-2d-empty] PASSED [  9%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-3d] PASSED [  9%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-3d-empty] PASSED [  9%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-4d] PASSED [ 10%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-4d-empty] PASSED [ 10%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[ndarray-0d] PASSED [ 10%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[int] PASSED     [ 11%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[bytes] PASSED   [ 11%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[bytes-empty] PASSED [ 11%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[string] PASSED  [ 12%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[string-empty] PASSED [ 12%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[string-type] PASSED [ 12%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[object] PASSED  [ 13%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[NaN] PASSED     [ 13%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[None] PASSED    [ 13%]\r\n[...]\r\n```\r\ninstead of \r\n```\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[maybe_list_like0] PASSED [  0%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[maybe_list_like1] PASSED [  0%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[maybe_list_like2] PASSED [  1%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[maybe_list_like3] PASSED [  1%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[maybe_list_like4] PASSED [  1%]\r\npandas/tests/dtypes/test_inference.py::test_is_list_like[maybe_list_like5] PASSED [  2%]\r\n[etc...]\r\n```\r\n\r\nOf course it would be possible to have separate lists for the list-likes, the expected value, and the ids, but then its really instable that all three need to be edited simultaneously in case there's any change. That's why I opted for defining everything as tuples, and then doing some `zip`-ping"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/431063165",
    "html_url": "https://github.com/pandas-dev/pandas/pull/23065#issuecomment-431063165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23065",
    "id": 431063165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMTA2MzE2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T15:53:36Z",
    "updated_at": "2018-10-18T15:53:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @h-vetinari "
  }
]
