[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420716257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22680#issuecomment-420716257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22680",
    "id": 420716257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDcxNjI1Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T16:40:03Z",
    "updated_at": "2018-09-12T16:40:03Z",
    "author_association": "MEMBER",
    "body": "How wasteful do you think this is exactly? Conceptually makes sense although ensuring the proper state management of a property like that will bring its own nuances, so would want to make sure there's a need for it up front"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420748813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22680#issuecomment-420748813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22680",
    "id": 420748813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDc0ODgxMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-12T18:21:21Z",
    "updated_at": "2018-09-12T18:21:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Depends on the array, but an extreme case is SparseArray. If the `fill_value` is `np.nan`, we checking whether there are any NA points is a simple lookup. But currently we would have to allocate a dense boolean ndarray.\r\n\r\n> ensuring the proper state management of a property like that will bring its own nuances\r\n\r\nTo be clear, we could make a default implementation\r\n\r\n```python\r\ndef any_na(arr: Union[ndarray, ExtensionArray]) -> bool:\r\n    if is_extension_array_dtype(arr):\r\n        return arr._any_na()\r\n    else:\r\n        return np.any(pd.isna(arr))\r\n\r\nclass ExtensionArray:\r\n    ...\r\n    def _any_na(self):\r\n        return np.any(pd.isna(arr))\r\n```\r\n\r\nI don't think this will prove to be a large maintenance burden."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420912661",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22680#issuecomment-420912661",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22680",
    "id": 420912661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDkxMjY2MQ==",
    "user": {
      "login": "xhochy",
      "id": 70274,
      "node_id": "MDQ6VXNlcjcwMjc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/70274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xhochy",
      "html_url": "https://github.com/xhochy",
      "followers_url": "https://api.github.com/users/xhochy/followers",
      "following_url": "https://api.github.com/users/xhochy/following{/other_user}",
      "gists_url": "https://api.github.com/users/xhochy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xhochy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xhochy/subscriptions",
      "organizations_url": "https://api.github.com/users/xhochy/orgs",
      "repos_url": "https://api.github.com/users/xhochy/repos",
      "events_url": "https://api.github.com/users/xhochy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xhochy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T07:35:20Z",
    "updated_at": "2018-09-13T07:35:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "In Arrow we also use this parameter to determine different code execution paths. When there are no nulls, you can often switch to a lot more efficient version of an algorithm. Thus this property is a small maintenance burden for a big performance win."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420931315",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22680#issuecomment-420931315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22680",
    "id": 420931315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDkzMTMxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T08:45:08Z",
    "updated_at": "2018-09-13T08:45:08Z",
    "author_association": "MEMBER",
    "body": "Yes, +1 to add such a property / method. BTW, we already have actually that on `Series` as well: `Series.hasnans`, and there are quite some places in the datetime-related index/array code where this property is used (even if it would not be more efficient for arrays, I think it makes the code cleaner)"
  }
]
