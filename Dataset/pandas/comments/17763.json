[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333855453",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17763#issuecomment-333855453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17763",
    "id": 333855453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzg1NTQ1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T14:15:10Z",
    "updated_at": "2017-10-03T14:15:10Z",
    "author_association": "MEMBER",
    "body": "The docstring can indeed use some love (and examples). PR's welcome.\r\n\r\nThat said, we could also question the need for this function. Is it that useful given you can do the same with indexing? (if you are aware of the difference in how the labels are interpreted) \r\n\r\nJust as a question (I never use it myself), do you use this function a lot? And if so, would it be hard to convert to using slicing?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/333861356",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17763#issuecomment-333861356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17763",
    "id": 333861356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzg2MTM1Ng==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T14:33:26Z",
    "updated_at": "2017-10-03T14:33:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've never used it and it seems to rarely come up on stackoverflow. \r\n\r\nI suppose it could be useful to add parameters include_start and include_end like `between_time` but even then I'm not sure there is an example that would necessitate it over slicing.\r\n\r\nAt a more macro-scale, I find it strange that there are several DataFrame/Series methods that only work with DatetimeIndex - `first`, `last`, `truncate`, `between_time`, `at_time`, `as_freq`, `asof` and probably more that I can't think of at the moment.\r\n\r\nThe naming of some of these methods is completely non-intuitive. Especially something like `first/last` which have `groupby` methods of the same name (that are intuitive).\r\n\r\nIt would take a major break in API to refactor these methods out somewhere else."
  }
]
