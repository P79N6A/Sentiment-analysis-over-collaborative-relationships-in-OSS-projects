[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452426798",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-452426798",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 452426798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjQyNjc5OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-08T19:43:06Z",
    "updated_at": "2019-01-08T19:43:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still a WIP, but probably not going to have time to update this any further through the end of the week.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452693372",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-452693372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 452693372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjY5MzM3Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T13:18:53Z",
    "updated_at": "2019-01-09T13:18:53Z",
    "author_association": "MEMBER",
    "body": "> I would maybe instead just have a unified constructor that accepts tz=None for naive.\r\n\r\n@jreback do you also mean just having a single class internally? `DatetimeDtype(tz=None)` is the naive one and `DatetimeDtype(tz=tz)` is the aware one (and `DatetimeTzDtype` can be kept as an alias for now for backwards compatibility) \r\n\r\nI didn't really think about any possible technical implications of that, but it seems logical to me to do that, since we also have a single DatetimeArray."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452694611",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-452694611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 452694611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjY5NDYxMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T13:22:50Z",
    "updated_at": "2019-01-09T13:22:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry I put this up in haste and didn't explain things well. Initially, I tried that, but ran into some difficulties. It turns out that having `pandas_dtype(\"M8[ns]\")` return a non NumPy dtype breaks a lot of stuff. So I split them apart, and don't register the `DatetimeDtype`.\r\n\r\nI'm not sure if it's possible to both\r\n\r\n1. Have a DatetimeDtype that registers datetime64[ns, tz], but not datetime64[ns]\r\n2. Have construct_from_string always work correctly\r\n\r\nbut I can try (later, not today)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/452705056",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-452705056",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 452705056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjcwNTA1Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-09T13:57:46Z",
    "updated_at": "2019-01-09T13:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah I think this is a great idea @TomAugspurger but also possibly to involve changing some tricky code; would prefer to push this to 0.25"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454087502",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-454087502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 454087502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDA4NzUwMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-14T17:21:55Z",
    "updated_at": "2019-01-14T17:21:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "The main downside with pushing to 0.25 is it'll be an API breaking change for `DatetimeArray.dtype`, and `TimedeltaArray.dtype` with no path for deprecation.\r\n\r\n---\r\n\r\njust pushed an update, but still a WIP."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454525687",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-454525687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 454525687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDUyNTY4Nw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-15T19:46:22Z",
    "updated_at": "2019-01-17T15:10:56Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=h1) Report\n> Merging [#24674](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/512830b46e678a1c6bd86cc60f54d74ff75792db?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `88.23%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24674/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24674      +/-   ##\n==========================================\n- Coverage   92.38%   92.36%   -0.03%     \n==========================================\n  Files         166      166              \n  Lines       52379    52474      +95     \n==========================================\n+ Hits        48392    48467      +75     \n- Misses       3987     4007      +20\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.78% <88.23%> (-0.03%)` | :arrow_down: |\n| #single | `42.98% <72.94%> (+0.07%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/nanops.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvbmFub3BzLnB5) | `94.36% <ø> (ø)` | :arrow_up: |\n| [pandas/core/api.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXBpLnB5) | `100% <ø> (ø)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.7% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/core/dtypes/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbW1vbi5weQ==) | `96.86% <100%> (+0.08%)` | :arrow_up: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `96.93% <100%> (ø)` | :arrow_up: |\n| [pandas/core/arrays/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lcy5weQ==) | `97.78% <100%> (ø)` | :arrow_up: |\n| [pandas/core/indexes/timedeltas.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy90aW1lZGVsdGFzLnB5) | `90.3% <100%> (+0.08%)` | :arrow_up: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `96.28% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.3% <100%> (ø)` | :arrow_up: |\n| [pandas/core/internals/construction.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2NvbnN0cnVjdGlvbi5weQ==) | `94% <60.86%> (-1.94%)` | :arrow_down: |\n| ... and [10 more](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=footer). Last update [512830b...2abda43](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454525688",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-454525688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 454525688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDUyNTY4OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-15T19:46:22Z",
    "updated_at": "2019-01-15T19:46:22Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=h1) Report\n> Merging [#24674](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/0bd454cdc9307d3a7e73403c49cc8350965628ce?src=pr&el=desc) will **decrease** coverage by `49.41%`.\n> The diff coverage is `73.65%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24674/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master   #24674       +/-   ##\n===========================================\n- Coverage   92.38%   42.97%   -49.42%     \n===========================================\n  Files         166      166               \n  Lines       52366    52469      +103     \n===========================================\n- Hits        48380    22550    -25830     \n- Misses       3986    29919    +25933\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `?` | |\n| #single | `42.97% <73.65%> (+0.06%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/nanops.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvbmFub3BzLnB5) | `31.27% <ø> (-63.1%)` | :arrow_down: |\n| [pandas/core/api.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXBpLnB5) | `86.66% <ø> (-13.34%)` | :arrow_down: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `49.03% <100%> (-44.66%)` | :arrow_down: |\n| [pandas/core/dtypes/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbW1vbi5weQ==) | `71.15% <100%> (-25.63%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `35.82% <100%> (-61.11%)` | :arrow_down: |\n| [pandas/core/arrays/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lcy5weQ==) | `66.13% <100%> (-31.65%)` | :arrow_down: |\n| [pandas/core/indexes/timedeltas.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy90aW1lZGVsdGFzLnB5) | `44.87% <100%> (-45.38%)` | :arrow_down: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `48.62% <100%> (-47.65%)` | :arrow_down: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `56.49% <100%> (-39.82%)` | :arrow_down: |\n| [pandas/core/internals/construction.py](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2NvbnN0cnVjdGlvbi5weQ==) | `62.11% <60.86%> (-33.83%)` | :arrow_down: |\n| ... and [136 more](https://codecov.io/gh/pandas-dev/pandas/pull/24674/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=footer). Last update [0bd454c...f1ecb8b](https://codecov.io/gh/pandas-dev/pandas/pull/24674?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/454816310",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-454816310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 454816310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDgxNjMxMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T15:17:42Z",
    "updated_at": "2019-01-16T15:17:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Somewhat awkward API corner: what's the expected types for\r\n\r\n1. `DatetimeArray.astype(\"M8[ns]\")`\r\n2. `DatetimeArray.astype(np.dtype(\"M8[ns]\"))`\r\n3. `DatetimeArray.astype(pd.DatetimeDtype())`\r\n\r\nPreviously, we'd use `.astype('M8[ns]')` to convert to an ndarray. But now that we have a dtype roughly equivalent to `M8[ns]`, should we keep doing that?\r\n\r\nAnother one, what should we do about `pd.DatetimeDtype() == \"M8[ns]\"` or `== np.dtpye(\"M8[ns]\")`.\r\n\r\nNumPy doesn't make this easy, since they would raise if the operands were flipped, rather than returning NotImplemented."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455220190",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-455220190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 455220190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIyMDE5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T15:47:26Z",
    "updated_at": "2019-01-17T15:48:29Z",
    "author_association": "MEMBER",
    "body": "For the expected types, I also have been wondering about this in general. So eg also for `DTA.astype(\"int64\")`. \r\nBecause we now have `PandasArray` and `PandasDtype`, so we could also return those? Similarly as `pd.array(DTA, dtype='int64')` does return that, we could do the same for `EA.astype`. It could be a specification of `EA.astype` that the return value is always another EA."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455230476",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-455230476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 455230476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTIzMDQ3Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-17T16:12:56Z",
    "updated_at": "2019-01-17T16:12:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, it's not obvious to me what's best here.\r\n\r\nOn the one hand, you could say that `.astype(np.dtype(.))` should always return an ndarray.\r\n\r\nOn the other hand, is it weird for `.astype(np.dtype(\"int64\"))` to not match `.astype(\"int64\")`? I suppose we'll need to sort all this out.\r\n\r\nI'm really not sure what to do here :/"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/455911231",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24674#issuecomment-455911231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24674",
    "id": 455911231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NTkxMTIzMQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-20T23:05:16Z",
    "updated_at": "2019-01-20T23:05:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @TomAugspurger: Yeah, it's not obvious to me what's best here.\r\nOn the one hand, you could say that `.astype(np.dtype(.))` should always return an ndarray.\r\nOn the other hand, is it weird for `.astype(np.dtype(\"int64\"))` to not match `.astype(\"int64\")`? I suppose we'll need to sort all this out.\r\nI'm really not sure what to do here :/\r\n\r\nHow about `.astype` and `pd.array` always returning `PandasDType` (yes, even for an `np.dtype`)? If the user really wants an `ndarray`, they can then call `to_numpy`. That would in many ways be more consistent - and could later be extended to the point that the *only* way to get an `ndarray` from pandas is to call `to_numpy`."
  }
]
