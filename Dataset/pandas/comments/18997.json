[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354515207",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18997#issuecomment-354515207",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18997",
    "id": 354515207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDUxNTIwNw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-12-30T00:09:07Z",
    "updated_at": "2018-01-10T21:28:28Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18997?src=pr&el=h1) Report\n> Merging [#18997](https://codecov.io/gh/pandas-dev/pandas/pull/18997?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/d5194e5692a3327e05e9d0f2544e2512708921f3?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18997/graphs/tree.svg?token=eZ4WkYLtcO&src=pr&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/18997?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18997      +/-   ##\n==========================================\n+ Coverage   91.51%   91.54%   +0.03%     \n==========================================\n  Files         148      148              \n  Lines       48780    48777       -3     \n==========================================\n+ Hits        44639    44652      +13     \n+ Misses       4141     4125      -16\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.91% <100%> (+0.03%)` | :arrow_up: |\n| #single | `41.6% <27.27%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18997?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/dtypes/dtypes.py](https://codecov.io/gh/pandas-dev/pandas/pull/18997/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2R0eXBlcy5weQ==) | `96.11% <100%> (+0.79%)` | :arrow_up: |\n| [pandas/core/dtypes/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/18997/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2NvbW1vbi5weQ==) | `94.54% <0%> (+0.24%)` | :arrow_up: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18997/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `66.95% <0%> (+1.73%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18997?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18997?src=pr&el=footer). Last update [d5194e5...bd9805e](https://codecov.io/gh/pandas-dev/pandas/pull/18997?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354566457",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18997#issuecomment-354566457",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18997",
    "id": 354566457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU2NjQ1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T20:25:08Z",
    "updated_at": "2017-12-30T20:25:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "is there utility in having an IntervalIndex that works on objects / categorical types generally? (as opposed to numeric [float,int,datetime])."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354573671",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18997#issuecomment-354573671",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18997",
    "id": 354573671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU3MzY3MQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T23:06:48Z",
    "updated_at": "2017-12-30T23:06:48Z",
    "author_association": "MEMBER",
    "body": "> is there utility in having an IntervalIndex that works on objects / categorical types generally?\r\n\r\nI've been wondering the same thing, and have been going back and forth.  It seems like we'd need to put in a fair number of guardrails for dtypes that aren't continuous (or continuous enough) where things like `mid` and `length` aren't guaranteed to be defined.  I've been asked in other PR's to handle such edge cases, e.g. https://github.com/pandas-dev/pandas/pull/18805#discussion_r157347554.  I'm not sure I'd classify that as _demand_, so much as reviewers just trying to ensure that all corners are covered.\r\n\r\nAs a source of comparison, postgres [`range` types](https://www.postgresql.org/docs/current/static/rangetypes.html) only provide numeric support by default.  However, postgres also makes it fairly easy to extend this to non-numeric types, e.g.\r\n```sql\r\nCREATE TYPE inetrange AS RANGE (\r\n    SUBTYPE = inet\r\n);\r\n``` \r\nwould provide support for intervals of IP addresses.  I don't think there'd be such easy extensions in our case if we only provided numeric support?\r\n\r\nIn terms of use cases, everything that I'd use intervals for would be covered by numeric.  I can imagine some scenarios where non-numeric could be useful though.  For example, intervals with string endpoints essentially allows for prefix level searches:\r\n```python\r\nIn [2]: iv = pd.Interval('ab', 'bas')\r\n\r\nIn [3]: 'abracadabra' in iv\r\nOut[3]: True\r\n\r\nIn [4]: 'bar' in iv\r\nOut[4]: True\r\n\r\nIn [5]: 'bass' in iv\r\nOut[5]: False\r\n```\r\nSome quick searching turns up a [postgres extension](https://github.com/dimitri/prefix) that appears do this.  The real world use case mentioned there is telephony applications.  I could maybe see similar prefix stuff being done in a biology/bioinformatics context, but really only have passing knowledge of that area, so could be wrong.\r\n\r\nI could see applications for ordered categoricals with categories along the lines of low/medium/high (but more categories), where you'd have logical intervals to partition by.  Many problems could probably be solved via alternative approaches though, e.g. `groupby` logic.  Not sure if there'd be cases where `Interval` support would be far and away a superior solution.  You could probably even solve such problems without explicit `Categorical` support by mapping label <--> integer, creating integer intervals, and mapping back as appropriate, though kind of seems like reinventing the `Categorical` wheel.\r\n\r\nAll that being said, I don't know how prevalent these use cases would actually be.  Could very well not be worth the effort to support such operations."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354573914",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18997#issuecomment-354573914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18997",
    "id": 354573914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU3MzkxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T23:13:17Z",
    "updated_at": "2017-12-30T23:13:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @zfrenchee any thoughts on the object / categorical (non-numeric) case for intervals?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354575850",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18997#issuecomment-354575850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18997",
    "id": 354575850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU3NTg1MA==",
    "user": {
      "login": "zfrenchee",
      "id": 2761597,
      "node_id": "MDQ6VXNlcjI3NjE1OTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2761597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zfrenchee",
      "html_url": "https://github.com/zfrenchee",
      "followers_url": "https://api.github.com/users/zfrenchee/followers",
      "following_url": "https://api.github.com/users/zfrenchee/following{/other_user}",
      "gists_url": "https://api.github.com/users/zfrenchee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zfrenchee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zfrenchee/subscriptions",
      "organizations_url": "https://api.github.com/users/zfrenchee/orgs",
      "repos_url": "https://api.github.com/users/zfrenchee/repos",
      "events_url": "https://api.github.com/users/zfrenchee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zfrenchee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T23:57:36Z",
    "updated_at": "2017-12-30T23:58:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @jschendel I can't think of a use case for categorical intervals in my work, but that doesn't mean it can't exist. The telephony / ip address idea seems like it would be reasonable. \r\n\r\nThe prefix search is interesting, but I imagine if you wanted a prefix tree, you wouldn't create a multi-intervalindex df (though it might work), but instead use a prefix-tree package. \r\n\r\nI might be cautious with permitting IntervalIndex of arbitrary subtype. Having a complex type system is nice when it works, but I wouldn't want to have to debug issues people brought me involving multi-IntervalIndexes of exotic subtypes. Not sure that's a good reason though. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354576166",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18997#issuecomment-354576166",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18997",
    "id": 354576166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU3NjE2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-31T00:01:52Z",
    "updated_at": "2017-12-31T00:01:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree. @jschendel if you wouldn't mind in this (or maybe better other) PR. to limit IntervalIndex dtypes that it will accept. (e.g. I think all except object, categorical). Then this PR becomes much simpler."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355797268",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18997#issuecomment-355797268",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18997",
    "id": 355797268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTc5NzI2OA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-07T03:51:36Z",
    "updated_at": "2018-01-07T03:51:36Z",
    "author_association": "MEMBER",
    "body": "Updated to remove code for unsupported dtypes now that #19022 is merged.  Also removed parsing `'interval[]'` for `IntervalDtype` construction."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/355829591",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18997#issuecomment-355829591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18997",
    "id": 355829591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTgyOTU5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-07T15:16:27Z",
    "updated_at": "2018-01-07T15:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm. @TomAugspurger if you'd have a look."
  }
]
