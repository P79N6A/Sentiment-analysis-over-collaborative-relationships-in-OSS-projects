[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377868628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-377868628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 377868628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzg2ODYyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T06:49:06Z",
    "updated_at": "2018-04-02T06:49:06Z",
    "author_association": "MEMBER",
    "body": "For me it luckily gives directly a MemoryError without crashing ...\r\n\r\nThe reason for the large memory, is because it is trying to generate a huge arange:\r\n\r\n```\r\n-> 1110         data = np.arange(start.ordinal, end.ordinal + 1, mult, dtype=np.int64)\r\n   1111 \r\n   1112     return data, freq\r\n\r\nipdb> start.ordinal\r\n-499609375\r\nipdb> end.ordinal\r\n10491796875\r\nipdb> mult\r\n1\r\n```\r\n\r\nWhat seems off in this case is the `mult` of 1. The reason it needs to work in nano-second range is because of the 'strange' frequency:\r\n\r\n```\r\nIn [64]: ts.index.freq\r\nOut[64]: <7812500 * Nanos>\r\n```\r\n\r\nBut, then it should generate a range with a step of `7812500` instead of one. So somewhere in the plotting code, the multiplier for the `freq` is lost."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378478317",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-378478317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 378478317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODQ3ODMxNw==",
    "user": {
      "login": "alexlouden",
      "id": 1332954,
      "node_id": "MDQ6VXNlcjEzMzI5NTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1332954?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexlouden",
      "html_url": "https://github.com/alexlouden",
      "followers_url": "https://api.github.com/users/alexlouden/followers",
      "following_url": "https://api.github.com/users/alexlouden/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexlouden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexlouden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexlouden/subscriptions",
      "organizations_url": "https://api.github.com/users/alexlouden/orgs",
      "repos_url": "https://api.github.com/users/alexlouden/repos",
      "events_url": "https://api.github.com/users/alexlouden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexlouden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T04:41:00Z",
    "updated_at": "2018-04-04T04:41:00Z",
    "author_association": "NONE",
    "body": "Thanks for the update, and for having a look into it!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378521459",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-378521459",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 378521459,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODUyMTQ1OQ==",
    "user": {
      "login": "fredrik-1",
      "id": 29602156,
      "node_id": "MDQ6VXNlcjI5NjAyMTU2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29602156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fredrik-1",
      "html_url": "https://github.com/fredrik-1",
      "followers_url": "https://api.github.com/users/fredrik-1/followers",
      "following_url": "https://api.github.com/users/fredrik-1/following{/other_user}",
      "gists_url": "https://api.github.com/users/fredrik-1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fredrik-1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fredrik-1/subscriptions",
      "organizations_url": "https://api.github.com/users/fredrik-1/orgs",
      "repos_url": "https://api.github.com/users/fredrik-1/repos",
      "events_url": "https://api.github.com/users/fredrik-1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fredrik-1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T08:25:59Z",
    "updated_at": "2018-04-04T08:25:59Z",
    "author_association": "NONE",
    "body": "I tried to look into this but I didn't get that far. I believe that it might be a feature of the handling of the time index (x-labels, ticklabels etc) that is implemented. \r\n\r\nI don't think that it possibly that mult in  \r\n`data = np.arange(start.ordinal, end.ordinal + 1, mult, dtype=np.int64)`\r\ncan be 7812500. The actual frequency in the series is just not there in that part of the code. A frequency of 100 Hz also result in mult=1 and ten times longer data than necessary. \r\n\r\nSo I believe that the implementation might be correct but that it doesn't work in practice if it is necessary to use nano seconds in the calculations when the actual sampling period is much larger. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378522162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-378522162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 378522162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODUyMjE2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T08:28:27Z",
    "updated_at": "2018-04-04T08:28:27Z",
    "author_association": "MEMBER",
    "body": "@fredrik-1 Thanks for looking into it. I think you are right that it currently is just due to how it is implemented: if the `freq` is given in nanos, the frequency used for the plot axis is 1 nano, regardless of the how many nanos the actual frequency is. \r\nThat has the consequence that the plotting does not work with a `freq` of such a huge number of nanos."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378525987",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-378525987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 378525987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODUyNTk4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T08:42:22Z",
    "updated_at": "2018-04-04T08:42:22Z",
    "author_association": "MEMBER",
    "body": "The question then is: how can this be solved? \r\nWe could look into whether it is possible to actually take the multiplier in the `freq` into account, but not sure what the consequences would be for that in general.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378657774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-378657774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 378657774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODY1Nzc3NA==",
    "user": {
      "login": "fredrik-1",
      "id": 29602156,
      "node_id": "MDQ6VXNlcjI5NjAyMTU2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29602156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fredrik-1",
      "html_url": "https://github.com/fredrik-1",
      "followers_url": "https://api.github.com/users/fredrik-1/followers",
      "following_url": "https://api.github.com/users/fredrik-1/following{/other_user}",
      "gists_url": "https://api.github.com/users/fredrik-1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fredrik-1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fredrik-1/subscriptions",
      "organizations_url": "https://api.github.com/users/fredrik-1/orgs",
      "repos_url": "https://api.github.com/users/fredrik-1/repos",
      "events_url": "https://api.github.com/users/fredrik-1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fredrik-1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T16:13:53Z",
    "updated_at": "2018-04-04T16:13:53Z",
    "author_association": "NONE",
    "body": "I tried to look a little more on the code. \r\n\r\nThe problem or feature seems to be that TimeSeries_DateLocator (I don't know from where it is called, implicitely from matplotlib?) seems to use a freq variable which is a simple string with only the nano information. freq is then changed to be a pd.tseries.offsets.Nano object with n=1.  The pd.tseries.offsets.Nano object in the actual data has n=7812500\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378710633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-378710633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 378710633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODcxMDYzMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T19:04:34Z",
    "updated_at": "2018-04-04T19:04:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fredrik-1 I haven't read this issue closely, but if it helps `TimeSeries_DateLocator` (https://github.com/pandas-dev/pandas/blob/aa3fefc898b2f101f3cf83f90add69857926fcbe/pandas/plotting/_converter.py#L981) is registered as a [units converter](https://matplotlib.org/api/units_api.html) with matplotlib.\r\n\r\n> I don't know from where it is called, implicitely from matplotlib\r\n\r\nCorrect. I believe it's every time the figure is draw (so if it's interactively modified, it's called each time).\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379179241",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-379179241",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 379179241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTE3OTI0MQ==",
    "user": {
      "login": "fredrik-1",
      "id": 29602156,
      "node_id": "MDQ6VXNlcjI5NjAyMTU2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29602156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fredrik-1",
      "html_url": "https://github.com/fredrik-1",
      "followers_url": "https://api.github.com/users/fredrik-1/followers",
      "following_url": "https://api.github.com/users/fredrik-1/following{/other_user}",
      "gists_url": "https://api.github.com/users/fredrik-1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fredrik-1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fredrik-1/subscriptions",
      "organizations_url": "https://api.github.com/users/fredrik-1/orgs",
      "repos_url": "https://api.github.com/users/fredrik-1/repos",
      "events_url": "https://api.github.com/users/fredrik-1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fredrik-1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-06T08:02:36Z",
    "updated_at": "2018-04-06T08:32:17Z",
    "author_association": "NONE",
    "body": "I tried to debug some more. It seems that the actual frequency data (the 100 before milli for example) is thrown away several times in the code by the use of \r\n`freq=freq.rule_code`\r\n\r\nI also found that .to_period() doesn't work on data with a \"special\" frequency.\r\n```\r\nimport pandas as pd\r\nimport numpy as np\r\n\r\nfreq = 10\r\nsamples = freq * 1\r\ndata = np.random.random(samples)\r\nindex1 = pd.date_range(0, periods=samples, freq='{}S'.format(1/freq))\r\nts1 = pd.Series(data=data, index=index1, name='High freq')\r\nindex2 = pd.period_range(2000, periods=samples, freq='{}S'.format(1/freq))\r\nts2 = pd.Series(data=data, index=index2, name='High freq')\r\nprint(ts1.index)\r\nprint(ts2.index)    \r\n```\r\nworks as expected but \r\n`ts1.to_period()`\r\nthrows an error because \"100L\" is not in \r\n\"_offset_to_period_map\"  in \\pandas\\pandas\\_libs\\tslibs\\offsets.pyx\r\n\r\nThe first one below works. The second one works but the frequency in the actual index is not equal to freq in the freq object.\r\n```\r\ntsPeriod1=ts1.to_period(freq='100L')\r\nprint(tsPeriod1.index)\r\ntsPeriod2=ts1.to_period(freq='L')\r\nprint(tsPeriod2.index)\r\n```\r\nSeries with a DateTime or PeriodIndex with a frequency that is not equal to the standard frequencies, 1 second, 1 millisecond, 1 day etc don't seem to be supported in all functions. \r\n\r\n    "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380921902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20575#issuecomment-380921902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20575",
    "id": 380921902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDkyMTkwMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T19:42:17Z",
    "updated_at": "2018-04-12T19:42:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for digging. Any suggestion for how to proceed?\n\nOn Fri, Apr 6, 2018 at 3:02 AM, fredrik-1 <notifications@github.com> wrote:\n\n> I tried to debug some more. It seems that the actual frequency data (the\n> 100 before milli for example) is thrown away several times in the code by\n> the use of\n> freq=freq.rule_code\n>\n> I also found that .to_period() doesn't work on data with a \"special\"\n> frequency.\n>\n> import pandas as pd\n> import numpy as np\n>\n> freq = 10\n> samples = freq * 1\n> data = np.random.random(samples)\n> index1 = pd.date_range(0, periods=samples, freq='{}S'.format(1/freq))\n> ts1 = pd.Series(data=data, index=index1, name='High freq')\n> index2 = pd.period_range(2000, periods=samples, freq='{}S'.format(1/freq))\n> ts2 = pd.Series(data=data, index=index2, name='High freq')\n> print(ts1.index)\n> print(ts2.index)\n>\n> works as expected but\n> ts1.to_period()\n> throws an error because \"100L\" is not in\n> \"_offset_to_period_map\" in \\pandas\\pandas_libs\\tslibs\\offsets.pyx\n>\n> The first on below works. The second one works but the frequency in the\n> actual index is not equal to freq in the freq object.\n>\n> tsPeriod1=ts1.to_period(freq='100L')\n> print(tsPeriod1.index)\n> tsPeriod2=ts1.to_period(freq='L')\n> print(tsPeriod2.index)\n>\n> Series with a DateTime or PeriodIndex with a frequency that is not equal\n> to the standard frequencies, 1 second, 1 millisecond, 1 day etc doesn't\n> seem to be supported in all functions.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/20575#issuecomment-379179241>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIhSRBsI0Dl8jnQW2tjhjEsVwWgI6ks5tlyEigaJpZM4TDNTg>\n> .\n>\n"
  }
]
