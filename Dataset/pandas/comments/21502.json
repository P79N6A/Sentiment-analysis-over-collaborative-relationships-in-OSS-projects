[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397739932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21502#issuecomment-397739932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21502",
    "id": 397739932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzczOTkzMg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T20:55:53Z",
    "updated_at": "2018-06-15T20:55:53Z",
    "author_association": "MEMBER",
    "body": "This would have been a result of #19900\r\n\r\nAre you saying you were getting those objects back as Timedelta objects or Datetimes before? I think the main motivator to get rid of this in the first place was that it not only was inconsistent across the engines but would implicitly convert a Timedelta to a Datetime in the round-trip process, neither I would think are desirable "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397750952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21502#issuecomment-397750952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21502",
    "id": 397750952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc1MDk1Mg==",
    "user": {
      "login": "nathanielatom",
      "id": 3137319,
      "node_id": "MDQ6VXNlcjMxMzczMTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3137319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielatom",
      "html_url": "https://github.com/nathanielatom",
      "followers_url": "https://api.github.com/users/nathanielatom/followers",
      "following_url": "https://api.github.com/users/nathanielatom/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielatom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielatom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielatom/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielatom/orgs",
      "repos_url": "https://api.github.com/users/nathanielatom/repos",
      "events_url": "https://api.github.com/users/nathanielatom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielatom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T21:48:04Z",
    "updated_at": "2018-06-15T22:04:13Z",
    "author_association": "NONE",
    "body": "It looks like before they were object columns with datetime.time instances. These just got printed the same as timedeltas. \r\n\r\n```\r\nreread.info()\r\n<class 'pandas.core.frame.DataFrame'>\r\nInt64Index: 4 entries, 0 to 3\r\nData columns (total 1 columns):\r\nTimes    3 non-null object\r\ndtypes: object(1)\r\nmemory usage: 64.0+ bytes\r\n\r\nreread.iloc[0].values\r\nOut[8]: array([datetime.time(0, 1)], dtype=object)\r\n```\r\n\r\nIs it possible to make the original timedelta recoverable?\r\n\r\nFound this to convert back, but it requires manually tracking the timedelta columns:\r\n```\r\npd.TimedeltaIndex(reread['Times'], unit='D').round(freq='s')\r\nOut[36]: TimedeltaIndex(['00:01:00', '00:02:00', '00:03:00', NaT], dtype='timedelta64[ns]', freq=None)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397753310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21502#issuecomment-397753310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21502",
    "id": 397753310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc1MzMxMA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T22:01:19Z",
    "updated_at": "2018-06-15T22:01:19Z",
    "author_association": "MEMBER",
    "body": "Yea I think that speaks to the danger that was present with the previous implementation - you could very easily mistake a Timedelta for a Time object and they are not the same. \r\n\r\nI'm going to close this under the assumption that a lossless conversion of Timedelta information to/from Excel simply is not possible because Excel does not support Timedeltas natively. If you disagree and can think of a way to do that feel free to reopen - investigation and PRs are always welcome!\r\n\r\nTo answer your last question, you should be able to construct a Timedelta from a float value directly. For specific usage questions however, you are better asking on Stack Overflow both to get an answer and help others out in the future that may have the same question (we typically reserve this tracker for issues and enhancement requests)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397754277",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21502#issuecomment-397754277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21502",
    "id": 397754277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc1NDI3Nw==",
    "user": {
      "login": "nathanielatom",
      "id": 3137319,
      "node_id": "MDQ6VXNlcjMxMzczMTk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3137319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nathanielatom",
      "html_url": "https://github.com/nathanielatom",
      "followers_url": "https://api.github.com/users/nathanielatom/followers",
      "following_url": "https://api.github.com/users/nathanielatom/following{/other_user}",
      "gists_url": "https://api.github.com/users/nathanielatom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nathanielatom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nathanielatom/subscriptions",
      "organizations_url": "https://api.github.com/users/nathanielatom/orgs",
      "repos_url": "https://api.github.com/users/nathanielatom/repos",
      "events_url": "https://api.github.com/users/nathanielatom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nathanielatom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T22:07:02Z",
    "updated_at": "2018-06-15T22:07:02Z",
    "author_association": "NONE",
    "body": "Ok, thank you. I didn't know if there was a way to use metadata to track which columns were timedeltas."
  }
]
