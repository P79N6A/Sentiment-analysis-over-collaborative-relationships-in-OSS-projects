[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51225188",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51225188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51225188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjI1MTg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T16:44:54Z",
    "updated_at": "2014-08-05T16:44:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "we already support `infer_dst`? how does that interact? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51227597",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51227597",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51227597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjI3NTk3",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T17:03:17Z",
    "updated_at": "2014-08-05T17:03:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "`infer_dst` only works when there are only two dates for the fall dst transition time.  If there are more than two, then it cannot infer simply based on order.  In that case, something else needs to be done to explicitly tell what times are dst times and what times are not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51228909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51228909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51228909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjI4OTA5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T17:13:20Z",
    "updated_at": "2014-08-05T17:13:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, makes sense. would making `infer_dst='force'` make sense? or you simply want another keyword? (`is_dst=None`). I suppose its an error if `is_dst` is not None and `infer_dst=True` ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51229473",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51229473",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51229473,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjI5NDcz",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T17:17:24Z",
    "updated_at": "2014-08-05T17:17:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like an is_dst keyword and this also mirrors pytz's localize which takes is_dst as a parameter.  I agree that it is an error if is_dst is not None and infer_dst=True (they are mutually exclusive).  I'll take a stab add adding it to localize.  Should be straightforward if I recall.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51229581",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51229581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51229581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMjI5NTgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-05T17:17:59Z",
    "updated_at": "2014-08-05T17:17:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, sounds good\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51485131",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51485131",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51485131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg1MTMx",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T15:10:04Z",
    "updated_at": "2014-08-07T15:10:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect that `is_dst` is too entrenched for me to have a chance of painting this bikeshed my color, but I am against `is_dst` as a name because not all time zone discontinuities are DST boundaries.  I think in this case, it is probably conceptually clearer to split off DST information as a `timedelta64` offset rather than an `is_dst` flag, which among other things makes converting to UTC trivial.\n\nThat said, since the problem of converting local time and time zone to UTC (essentially inverting the time zone, if we view it as a map from UTC to local time) is simply one of selecting the correct UTC time from a list of zero, one or two times, and since in the case of an ambiguous time at a DST boundary the DST time must always come first, I propose that if we use `is_dst` as a parameter, it should mean \"select the _first_ (as opposed to the  _last_) UTC time that maps to this local time, regardless of DST\", and `is_dst=True` should be the default.\n\nI also propose that we not put any effort into supporting the case where there are three or more UTC times corresponding to a given local time, because this case requires pathological government action and I don't know of any instance where it has happened.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51486932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51486932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51486932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDg2OTMy",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T15:22:08Z",
    "updated_at": "2014-08-07T15:37:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your second paragraph is not exactly correct and why this is needed.  If you only had two ambiguous times, then the `infer_dst` argument is all that is needed and works like you say.  However, when there are more times it becomes a problem.  For example, when reading database records where there are multiple items that have ambiguous times associated with them, rather than discretizing among those items and inferring the right dst/non-dst time from for each item it will be much faster and easier to already use a pre-computed column when the data was input in my particular case.  Here's a simple example of data I'm looking at.\n\nItem,Time,IS_DST\n1,2014-11-02 00:00,1\n1,2014-11-02 01:00,1\n1,2014-11-02 01:00,0\n2,2014-11-02 00:00,1\n2,2014-11-02 01:00,1\n2,2014-11-02 01:00,0\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51492479",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51492479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51492479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDkyNDc5",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T16:01:01Z",
    "updated_at": "2014-08-07T16:01:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "What I'm proposing is that (if you are in `America/Chicago`) you will have this:\n\n```\nItem,Time,Offset\n1,2014-11-02 00:00,-05:00:00\n1,2014-11-02 01:00,-05:00:00\n1,2014-11-02 01:00,-06:00:00\n2,2014-11-02 00:00,-05:00:00\n2,2014-11-02 01:00,-05:00:00\n2,2014-11-02 01:00,-06:00:00\n```\n\nWhich is just as good.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51495617",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51495617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51495617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNDk1NjE3",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T16:23:57Z",
    "updated_at": "2014-08-07T16:23:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I know that's your first point...I was more addressing your subsequent points.\n\nI agree that it's just as good and contains the same information.  My data is structured with bools and hence I want to make that work (it was only a couple lines of code to make this work).  I don't know offhand how to make the offsets in the underlying tz_localize code.  I don't see any harm in making both work if possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51529749",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51529749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51529749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTI5NzQ5",
    "user": {
      "login": "mtrbean",
      "id": 222778,
      "node_id": "MDQ6VXNlcjIyMjc3OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/222778?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mtrbean",
      "html_url": "https://github.com/mtrbean",
      "followers_url": "https://api.github.com/users/mtrbean/followers",
      "following_url": "https://api.github.com/users/mtrbean/following{/other_user}",
      "gists_url": "https://api.github.com/users/mtrbean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mtrbean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mtrbean/subscriptions",
      "organizations_url": "https://api.github.com/users/mtrbean/orgs",
      "repos_url": "https://api.github.com/users/mtrbean/repos",
      "events_url": "https://api.github.com/users/mtrbean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mtrbean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T20:50:28Z",
    "updated_at": "2014-08-07T20:50:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "To @ischwabacher's point, I'm not against adding `is_dst=` to `tz_localize()`. But I also agree that a better solution to @rockg's problem is to store timestamps in UTC and timezone separately in two columns in a database table.\n\nI always store timestamp in UTC in database to avoid ambiguity, unless the database has explicit support for `timestamp with time zone` like postgresql.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51530489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51530489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51530489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNTMwNDg5",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-07T20:55:54Z",
    "updated_at": "2014-08-07T21:24:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "While storing data in UTC is unambiguous, it makes it very difficult when people are working with data in the database.  With my work, having the data stored in the actual time zone has saved many errors with users not having to manually do the dst offset in their heads...it's so much easier and not worth the hassle for only 2 out of 8760 hours.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51662680",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51662680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51662680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjYyNjgw",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T22:00:10Z",
    "updated_at": "2014-08-08T22:23:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Yes, I know that's your first point...I was more addressing your subsequent points.\n\n...sorry, I can't count.\n\nMy second paragraph was talking about resolving one individual time, not inferring DST from the whole vector.  So `2013-11-3 01:00:00` in time zone `America/Chicago` could resolve to `2013-11-3 01:00:00-0500` (DST) or `2013-11-3 01:00:00-0600` (not DST), and the DST time comes first chronologically.  So letting `is_dst=True` mean \"choose the first time that this could be interpreted as\" gives the correct answer.  I'm not talking about \"let the first occurrence of this time in my vector be interpreted one way and the next the other\".\n\nBut not all time zone discontinuities are DST boundaries (and not all DST boundaries are time zone discontinuities)!  Here's what `pytz` has to say on the subject:\n\n> Although `localize()` handles many cases, it is still not possible to handle all. In cases where countries change their timezone definitions, cases like the end-of-daylight-saving-time occur with no way of resolving the ambiguity. For example, in 1915 Warsaw switched from Warsaw time to Central European time. So at the stroke of midnight on August 5th 1915 the clocks were wound back 24 minutes creating an ambiguous time period that cannot be specified without referring to the timezone abbreviation or the actual UTC offset. In this case midnight happened twice, neither time during a daylight saving time period:\n> \n> ``` python\n> >>> warsaw = pytz.timezone('Europe/Warsaw')\n> >>> loc_dt1 = warsaw.localize(datetime(1915, 8, 4, 23, 59, 59), is_dst=False)\n> >>> loc_dt1.strftime(fmt)\n> '1915-08-04 23:59:59 WMT+0124'\n> >>> loc_dt2 = warsaw.localize(datetime(1915, 8, 5, 00, 00, 00), is_dst=False)\n> >>> loc_dt2.strftime(fmt)\n> '1915-08-05 00:00:00 CET+0100'\n> >>> str(loc_dt2 - loc_dt1)\n> '0:24:01'\n> ```\n\nClearly, we need a way to handle this case; also clearly, the mechanism should be the same as the handling of the DST case because the same basic thing is going on: the time zone offset is jumping down as we cross a boundary.  My most preferred solution to this problem is to make it easy and natural to use local time + offset to specify time, but this will be a pain in the butt sometimes (and you don't want to make your users remember that it's 24 minutes, especially since `pytz` rounds to the nearest minute and the correct value in Zoneinfo is probably different).  My next preferred solution is to have a keyword that works the way I described `is_dst` working in my first comment (i.e., `is_dst=True` here will yield `WMT`, while `is_dst=False` will yield `CET`, regardless of the fact that neither side was actually DST), but has a different name.  My next preferred solution is calling it `is_dst`, and my least preferred solution is not handling this at all.\n\nEDIT: Just noticed that the proposed commit does essentially what I suggested.  I still prefer something like `ambiguous=['raise', 'NaT', ndarray(dtype=bool), 'infer']`, but an `is_dst` that properly handles non-DST discontinuities is good enough.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51671092",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51671092",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51671092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjcxMDky",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-09T00:22:04Z",
    "updated_at": "2014-08-09T00:22:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "It has frustrated me about `tz_localize` on the timestamp not having a is_dst like localize in pytz.  Now it will have a flag and we can resolve individual times (I thought about putting it on the Timestamp constructor, but that was much more complicated than tz_localize).\n\nIf anybody is actually dealing with 1915 hourly Warsaw times I will be very interested.  I think we have a decent solution to cover 99.99% of the cases people use this for.  I do like the `ambiguous` better than `is_dst` (I was using is_dst because that's what pytz calls it and most people would be familiar with that).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51800152",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7943#issuecomment-51800152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7943",
    "id": 51800152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODAwMTUy",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T15:58:11Z",
    "updated_at": "2014-08-11T15:58:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Offsets sometimes change for geopolitical reasons.  `Europe/Simferopol` isn't a good example because it was invaded from the East and in the spring, but I'm sure you can imagine other territories changing hands at inconvenient times of year.\n"
  }
]
