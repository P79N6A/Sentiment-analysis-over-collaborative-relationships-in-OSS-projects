[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354543660",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-354543660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 354543660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDU0MzY2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-30T12:27:51Z",
    "updated_at": "2017-12-30T12:27:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you demonstrate an actual example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354904255",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-354904255",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 354904255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDkwNDI1NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-02T23:36:37Z",
    "updated_at": "2018-01-11T20:13:29Z",
    "author_association": "MEMBER",
    "body": "```\r\nclass Metadata(object):\r\n    def __init__(self, parent):\r\n        self.parent = parent\r\n\r\n    def copy(self):\r\n        return Metadata(parent=self.parent)\r\n\r\n\r\nclass MetaSeries(pd.Series):\r\n    _metadata = pd.Series._metadata + ['metadata']\r\n\r\n    @property\r\n    def _constructor(self):\r\n        return MetaSeries\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(MetaSeries, self).__init__(*args, **kwargs)\r\n        md = Metadata(parent=self)\r\n        object.__setattr__(self, 'metadata', md)\r\n\r\n    def __finalize__(self, other, method=None, **kwargs):\r\n        pd.Series.__finalize__(self, other, method=method, **kwargs)\r\n        md = other.metadata.copy()\r\n        object.__setattr__(self, 'metadata', md)\r\n        md.parent = self\r\n        return self\r\n```\r\n\r\n```\r\n>>> ser = pd.Series(range(100))\r\n>>> mser = MetaSeries(ser)\r\n>>> mser[:5]\r\n0    0\r\n1    1\r\n2    2\r\n3    3\r\n4    4\r\ndtype: int64\r\n>>> mser\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/base.py\", line 80, in __repr__\r\n    return str(self)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/base.py\", line 60, in __str__\r\n    return self.__bytes__()\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/base.py\", line 72, in __bytes__\r\n    return self.__unicode__().encode(encoding, 'replace')\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/series.py\", line 1066, in __unicode__\r\n    max_rows=max_rows, length=show_dimensions)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/series.py\", line 1109, in to_string\r\n    max_rows=max_rows)\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/io/formats/format.py\", line 176, in __init__\r\n    self._chk_truncate()\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/io/formats/format.py\", line 190, in _chk_truncate\r\n    series.iloc[-row_num:]))\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/reshape/concat.py\", line 213, in concat\r\n    return op.get_result()\r\n  File \"/usr/local/lib/python2.7/site-packages/pandas/core/reshape/concat.py\", line 377, in get_result\r\n    return cons(mgr, name=name).__finalize__(self, method='concat')\r\n  File \"subclass.py\", line 27, in __finalize__\r\n    self.metadata = other.metadata.copy()\r\nAttributeError: '_Concatenator' object has no attribute 'metadata'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/356997939",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-356997939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 356997939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Njk5NzkzOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T17:18:32Z",
    "updated_at": "2018-01-11T17:32:55Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel That is code that I recently rewrote (https://github.com/pandas-dev/pandas/pull/17728), so it is quite possible I introduces a bug.\r\n\r\nHowever, I cannot reproduce the exact error you get. I get:\r\n\r\n```\r\nIn [3]: mser\r\n..\r\nValueError: All objects passed were None\r\n```\r\n\r\nand I already get to for 0.20.3 as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/357003694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-357003694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 357003694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAwMzY5NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T17:38:24Z",
    "updated_at": "2018-01-11T17:41:19Z",
    "author_association": "MEMBER",
    "body": "Ah, there was a `return self` missing in the `__finalize__` implementation in the code example above. Now I get the error you were showing (and now it also works in older pandas version).\r\n\r\nAnd I suppose that I meant to pass the first object from the list to concat instead of `self`. Does that make sense?\r\n\r\nHowever, it seems that I just did how it was already done before (using this `__finalize__(self)` construct where `self` is the `_Concatenator` object). So not sure why it started failing. \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/357006524",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-357006524",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 357006524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzAwNjUyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T17:48:14Z",
    "updated_at": "2018-01-11T17:48:14Z",
    "author_association": "MEMBER",
    "body": "OK, I understand what changed the behaviour. Before my PR (https://github.com/pandas-dev/pandas/pull/17728), `concat` of serieses always returned a Series, while my PR changed it to return an instance of the class of the first object. \r\nSo in practice, the `__finalize__` of your `MetaSeries` is now called instead of `Series.__finalize__`, and the latter has a check that `self` is NDFrame like:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/8acdf801c501a0ce2ac14ddd676cd248f0f32180/pandas/core/generic.py#L4000-L4003\r\n\r\nGiven that, I would argue the current code might be correct, as passing through the metadata of the first object is maybe not the best default? (Eg that would ignore different metadata in the different objects you are concatting). \r\nThe subclass can always have specialized code in `__finalize__` for checking such metadata"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/357054611",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-357054611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 357054611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzA1NDYxMQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T20:40:41Z",
    "updated_at": "2018-01-11T20:40:41Z",
    "author_association": "MEMBER",
    "body": "> Ah, there was a return self missing in the __finalize__ implementation in the code example above. Now I get the error you were showing (and now it also works in older pandas version).\r\n\r\nGood catch.  I just edited the previous comment to fix that mistake.\r\n\r\n> Given that, I would argue the current code might be correct, as passing through the metadata of the first object is maybe not the best default? (Eg that would ignore different metadata in the different objects you are concatting).\r\n\r\nI think you're right that the problem above would be fixed by having a `isinstance(other, NDFrame)` check in the subclass's `__finalize__` method.  (In the non-toy version `MetaSeries`, the metadata object is responsible for figuring out how to propagate itself under various operations.)\r\n\r\n`concat` is well outside the areas that I'm familiar with (and I was surprised that it was relevant for `__repr__`).  For my own understanding, why is `_Concatenator` a reasonable object to pass to `__finalize__`?  I don't see how it could usefully propagate _any_ metadata."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/357056813",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-357056813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 357056813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NzA1NjgxMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-11T20:49:16Z",
    "updated_at": "2018-01-11T20:49:16Z",
    "author_association": "MEMBER",
    "body": "> I was surprised that it was relevant for `__repr__`\r\n\r\nBecause it is a truncated repr, concatting first and last part.\r\n\r\n> For my own understanding, why is _Concatenator a reasonable object to pass to __finalize__? I don't see how it could usefully propagate any metadata.\r\n\r\nThat object holds more information, eg the list of all concatenated objects. So for example you could check for a certain metadata field if all objects have the same value, and only in that case set it on the resulting object."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/358399074",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-358399074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 358399074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODM5OTA3NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T18:33:17Z",
    "updated_at": "2018-01-17T18:33:17Z",
    "author_association": "MEMBER",
    "body": "This is probably closable, possibly worth keeping around on some tracker for \"subclassing pitfalls\""
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359204129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18999#issuecomment-359204129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18999",
    "id": 359204129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTIwNDEyOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-20T21:37:41Z",
    "updated_at": "2018-01-20T21:37:41Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel want to do a PR to mention this in the subclassing docs?"
  }
]
