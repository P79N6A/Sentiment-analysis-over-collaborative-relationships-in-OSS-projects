[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239303818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13963#issuecomment-239303818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13963",
    "id": 239303818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTMwMzgxOA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T21:49:09Z",
    "updated_at": "2016-08-11T21:49:09Z",
    "author_association": "MEMBER",
    "body": "can u describe the usecase? I'm not sure on what timing a new column is created based on the specified default.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239314341",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13963#issuecomment-239314341",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13963",
    "id": 239314341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTMxNDM0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T22:36:07Z",
    "updated_at": "2016-08-11T22:36:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "This does it, though it operates on an element-by-element basis.\n\n```\nIn [30]: df = pd.DataFrame()\n\nIn [31]: df.combine_first(pd.DataFrame({'A' : [1,2,3]}))\nOut[31]: \n   A\n0  1\n1  2\n2  3\n\nIn [32]: pd.DataFrame({'A' : [1,2,3]}).combine_first(pd.DataFrame({'A' : [4,5,6]}))\nOut[32]: \n   A\n0  1\n1  2\n2  3\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239319915",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13963#issuecomment-239319915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13963",
    "id": 239319915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTMxOTkxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T23:05:44Z",
    "updated_at": "2016-08-11T23:06:41Z",
    "author_association": "MEMBER",
    "body": "API wise, this could be implemented as an additional keyword to `DataFrame.assign`. \n\nEg something like `df.assign(col=val, if_exists='ignore'|'overwrite')`, although not sure it is worth the extra keyword (the beauty of `assign` is that it takes currently no keyword arguments apart from the columns to add)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239367229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13963#issuecomment-239367229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13963",
    "id": 239367229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTM2NzIyOQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T05:58:16Z",
    "updated_at": "2016-08-12T05:58:16Z",
    "author_association": "MEMBER",
    "body": "I think this could be worth considering as part of the broader question of whether DataFrame and Series should satisfy the mapping ABC. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239403561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13963#issuecomment-239403561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13963",
    "id": 239403561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTQwMzU2MQ==",
    "user": {
      "login": "Sereger13",
      "id": 10167353,
      "node_id": "MDQ6VXNlcjEwMTY3MzUz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10167353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sereger13",
      "html_url": "https://github.com/Sereger13",
      "followers_url": "https://api.github.com/users/Sereger13/followers",
      "following_url": "https://api.github.com/users/Sereger13/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sereger13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sereger13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sereger13/subscriptions",
      "organizations_url": "https://api.github.com/users/Sereger13/orgs",
      "repos_url": "https://api.github.com/users/Sereger13/repos",
      "events_url": "https://api.github.com/users/Sereger13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sereger13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-12T09:35:53Z",
    "updated_at": "2016-08-12T09:35:53Z",
    "author_association": "NONE",
    "body": "If we decide to go `DataFrame.assign` route, can I also suggest adding `inplace=True|False` parameter so we could avoid copying the entire DataFrame when adding a column.\n"
  }
]
