[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463054425",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25288#issuecomment-463054425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25288",
    "id": 463054425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzA1NDQyNQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T04:35:34Z",
    "updated_at": "2019-02-13T04:35:34Z",
    "author_association": "MEMBER",
    "body": "This works fine if you use an actual integer value to fill, so there's not really much of a point to using Int64 in this case since you're still asking for an object.\r\n\r\nIn any case I suppose it should still coerce to object for you like using float here would. Investigation and PRs are always welcome"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463174046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25288#issuecomment-463174046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25288",
    "id": 463174046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzE3NDA0Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-13T12:02:23Z",
    "updated_at": "2019-02-13T12:02:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I vaguely recall some discussion on whether ExtensionArray.fillna should\nallow coercing the array to the dtype of the `fill_value`. I\ndon't recall if we reached a final conclusion. It's somewhat inconvenient\nto have to manual `.astype` before filling with a different\ndtype, but the type stability ensured by `ExtensionArray[T].fillna ->\nExtensionArray[T]` is nice.\n\nOn Tue, Feb 12, 2019 at 10:35 PM William Ayd <notifications@github.com>\nwrote:\n\n> This works fine if you use an actual integer value to fill, so there's not\n> really much of a point to using Int64 in this case since you're still\n> asking for an object.\n>\n> In any case I suppose it should still coerce to object for you like using\n> float here would. Investigation and PRs are always welcome\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/25288#issuecomment-463054425>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIi1zyiheZ19Ef7M62IDXIE5hr0Psks5vM5YbgaJpZM4a37EH>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463431332",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25288#issuecomment-463431332",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25288",
    "id": 463431332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzQzMTMzMg==",
    "user": {
      "login": "jelther",
      "id": 4515493,
      "node_id": "MDQ6VXNlcjQ1MTU0OTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4515493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jelther",
      "html_url": "https://github.com/jelther",
      "followers_url": "https://api.github.com/users/jelther/followers",
      "following_url": "https://api.github.com/users/jelther/following{/other_user}",
      "gists_url": "https://api.github.com/users/jelther/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jelther/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jelther/subscriptions",
      "organizations_url": "https://api.github.com/users/jelther/orgs",
      "repos_url": "https://api.github.com/users/jelther/repos",
      "events_url": "https://api.github.com/users/jelther/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jelther/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T00:19:59Z",
    "updated_at": "2019-02-14T00:19:59Z",
    "author_association": "NONE",
    "body": "In fact, since I'm using pandas for an ETL tool, this doesn't look nice to me.\r\nHaving to change the type to \"object\" inevitable adds \".0\" after the integer number and breaks my code.\r\n\r\nThe alternative I used is to remove the \".0\" part after \"astype(object)\" and fill it with NaNs values."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463432186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25288#issuecomment-463432186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25288",
    "id": 463432186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzQzMjE4Ng==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T00:23:57Z",
    "updated_at": "2019-02-14T00:23:57Z",
    "author_association": "MEMBER",
    "body": "@jelther getting slightly off topic but if you are getting zeros appended to your integers its because they are getting cast to float at some point. Explicitly constructing your data frame with `dtype=object` as an argument would allow you to mix / match the None value with integers without implicit cast to float"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463432900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25288#issuecomment-463432900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25288",
    "id": 463432900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzQzMjkwMA==",
    "user": {
      "login": "jelther",
      "id": 4515493,
      "node_id": "MDQ6VXNlcjQ1MTU0OTM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4515493?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jelther",
      "html_url": "https://github.com/jelther",
      "followers_url": "https://api.github.com/users/jelther/followers",
      "following_url": "https://api.github.com/users/jelther/following{/other_user}",
      "gists_url": "https://api.github.com/users/jelther/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jelther/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jelther/subscriptions",
      "organizations_url": "https://api.github.com/users/jelther/orgs",
      "repos_url": "https://api.github.com/users/jelther/repos",
      "events_url": "https://api.github.com/users/jelther/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jelther/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T00:27:06Z",
    "updated_at": "2019-02-14T00:27:06Z",
    "author_association": "NONE",
    "body": "> @jelther getting slightly off topic but if you are getting zeros appended to your integers its because they are getting cast to float at some point. Explicitly constructing your data frame with `dtype=object` as an argument would allow you to mix / match the None value with integers without implicit cast to float\r\n\r\n@WillAyd , I think this is the best alternative but I'm not able to specify since I'm extracting the data from a SQL Server database with \"pandas.read_sql\". I don't see on the documentation how I would be able to specify the \"dtypes\" when selecting the data."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463837241",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25288#issuecomment-463837241",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25288",
    "id": 463837241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzgzNzI0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-14T22:59:30Z",
    "updated_at": "2019-02-14T22:59:30Z",
    "author_association": "MEMBER",
    "body": "> but the type stability ensured by `ExtensionArray[T].fillna -> ExtensionArray[T]` is nice.\r\n\r\n+1. For eg DatetimeArray, the fill value also needs to be a datetime-like."
  }
]
