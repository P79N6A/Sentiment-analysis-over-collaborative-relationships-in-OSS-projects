[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294326310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16012#issuecomment-294326310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16012",
    "id": 294326310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDMyNjMxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-16T00:46:31Z",
    "updated_at": "2017-04-16T00:47:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "no this is a numpy bug. Its not too friendly to object dtypes.\r\n\r\nWe should put a try/except around this and fallback if it fails (then convert to object and try again with the pandas isin).\r\n\r\nThough maybe just use the pandas impl for ``object`` dtype anyhow. The reason we use ``in1d`` is its faster for really large N (> 1M)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315564181",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16012#issuecomment-315564181",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16012",
    "id": 315564181,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU2NDE4MQ==",
    "user": {
      "login": "Morgan243",
      "id": 1437221,
      "node_id": "MDQ6VXNlcjE0MzcyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1437221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Morgan243",
      "html_url": "https://github.com/Morgan243",
      "followers_url": "https://api.github.com/users/Morgan243/followers",
      "following_url": "https://api.github.com/users/Morgan243/following{/other_user}",
      "gists_url": "https://api.github.com/users/Morgan243/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Morgan243/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Morgan243/subscriptions",
      "organizations_url": "https://api.github.com/users/Morgan243/orgs",
      "repos_url": "https://api.github.com/users/Morgan243/repos",
      "events_url": "https://api.github.com/users/Morgan243/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Morgan243/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T21:22:15Z",
    "updated_at": "2017-07-15T21:22:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Working on this"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315567489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16012#issuecomment-315567489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16012",
    "id": 315567489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU2NzQ4OQ==",
    "user": {
      "login": "Morgan243",
      "id": 1437221,
      "node_id": "MDQ6VXNlcjE0MzcyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1437221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Morgan243",
      "html_url": "https://github.com/Morgan243",
      "followers_url": "https://api.github.com/users/Morgan243/followers",
      "following_url": "https://api.github.com/users/Morgan243/following{/other_user}",
      "gists_url": "https://api.github.com/users/Morgan243/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Morgan243/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Morgan243/subscriptions",
      "organizations_url": "https://api.github.com/users/Morgan243/orgs",
      "repos_url": "https://api.github.com/users/Morgan243/repos",
      "events_url": "https://api.github.com/users/Morgan243/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Morgan243/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T22:27:01Z",
    "updated_at": "2017-07-15T22:27:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Something I've found - if the two arrays for the operation pass this condition in numpy's in1d:\r\n```python\r\nif len(ar2) < 10 * len(ar1) ** 0.145:\r\n    ...\r\n```\r\nThen a masking technique is used for performance reasons (https://github.com/numpy/numpy/pull/81) . If this masking technique is used, then the bug doesn't appear to happen.\r\n\r\nSo the bug is triggered by first having the 1e6 array to trigger pandas use of np.in1d, but then the comparison array must be sufficiently large in order to not pass numpy's special-speedup condition.\r\n\r\nI've got a fix that ensures the array type isn't an object before using np.in1d, otherwise defaulting to the 'ismember_object' method that `f` is set to by default. I'm not sure this is a bug for the numpy folks, but I'll do some reading and maybe open an issue to see what they think."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326314860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16012#issuecomment-326314860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16012",
    "id": 326314860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjMxNDg2MA==",
    "user": {
      "login": "td2014",
      "id": 3465912,
      "node_id": "MDQ6VXNlcjM0NjU5MTI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3465912?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/td2014",
      "html_url": "https://github.com/td2014",
      "followers_url": "https://api.github.com/users/td2014/followers",
      "following_url": "https://api.github.com/users/td2014/following{/other_user}",
      "gists_url": "https://api.github.com/users/td2014/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/td2014/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/td2014/subscriptions",
      "organizations_url": "https://api.github.com/users/td2014/orgs",
      "repos_url": "https://api.github.com/users/td2014/repos",
      "events_url": "https://api.github.com/users/td2014/events{/privacy}",
      "received_events_url": "https://api.github.com/users/td2014/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-31T14:34:41Z",
    "updated_at": "2017-08-31T14:34:41Z",
    "author_association": "NONE",
    "body": "@Morgan243 & @jreback .  Some additional information which I think is related to the topic on this issue.  I have a case where I am creating an index from a dataset column which is >1M entries, but is interpreted by pandas as int64 (which is okay).  I get the following Warning issued during the read_csv processing:  \r\n\r\n\"python3.5/site-packages/numpy/lib/arraysetops.py:463: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\r\n  mask |= (ar1 == a)\"\r\n\r\nHowever, when I define the dtype for the column as \"object\" the issue goes away.  So it seems to be related to the matter that numpy may not like \"objects\" vs. \"int64\" arrays.  I just wanted to provide some additional background in case it helps.  Thanks.\r\n"
  }
]
