[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59650002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-59650002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 59650002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NjUwMDAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-19T13:35:20Z",
    "updated_at": "2014-10-19T13:35:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toddrjen can you give a pseudo code example of what you are trying to do?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59732633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-59732633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 59732633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzMyNjMz",
    "user": {
      "login": "toddrjen",
      "id": 2272878,
      "node_id": "MDQ6VXNlcjIyNzI4Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2272878?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toddrjen",
      "html_url": "https://github.com/toddrjen",
      "followers_url": "https://api.github.com/users/toddrjen/followers",
      "following_url": "https://api.github.com/users/toddrjen/following{/other_user}",
      "gists_url": "https://api.github.com/users/toddrjen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toddrjen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toddrjen/subscriptions",
      "organizations_url": "https://api.github.com/users/toddrjen/orgs",
      "repos_url": "https://api.github.com/users/toddrjen/repos",
      "events_url": "https://api.github.com/users/toddrjen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toddrjen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T11:20:54Z",
    "updated_at": "2014-10-20T11:20:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure.  I will use random numbers for the example, but pretend the columns of df are a sequence of time points recorded from a particular device, and the important part of the signal (say the part where a stimulus occurs) starts at `t_start` and ends at `t_stop`, which are stored as column indexes.\n\n``` Python\nimport numpy as np\nimport pandas as pd\n\narrays = [np.array(['Cleese', 'Gilliam', 'Idle', 'Jones']),\n          np.array([0, 250, 500]),\n          np.array([750, 900, 950])]\nindex = pd.MultiIndex.from_product(arrays, names=['device', 't_start', 't_stop'])\ndf = pd.DataFrame(np.sort(np.random.random((100, 4*3*3))*1000, axis=0), columns=index)\n```\n\nNow imagine you want to `clip` the columns to be between `t_start` and `t_stop`.  The idea would be to run the `numpy.clip` function, using the value of the `t_start` index and as the `a_min` argument and the value of the `t_stop` index and as the `a_max` argument.\n\nThe syntax would be something like this:\n\n``` Python\nclip_df = df.apply(np.clip, axis=1, level_args={'a_min': 't_start', 'a_max': 't_stop'})\n```\n\nWhich would be saying \"apply np.clip along axis 1, using the t_start index as the a_min argument and the t_stop index as the a_max argument\".\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59735379",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-59735379",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 59735379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5NzM1Mzc5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T11:50:49Z",
    "updated_at": "2014-10-20T11:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "This will do what you want I believe.\n\n`df.apply(lambda x: x.clip(x.name[1],x.name[2]))`\n\nTheir is an issue to make the name attribute of a Series into a NamedTuple, so this could then be written\n`df.apply(lambda x: x.clip(x.name['t_start'],x.name['t_stop']))`\n\ntrying to see the merit of have a specific syntax for this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59798190",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-59798190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 59798190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5Nzk4MTkw",
    "user": {
      "login": "toddrjen",
      "id": 2272878,
      "node_id": "MDQ6VXNlcjIyNzI4Nzg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2272878?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toddrjen",
      "html_url": "https://github.com/toddrjen",
      "followers_url": "https://api.github.com/users/toddrjen/followers",
      "following_url": "https://api.github.com/users/toddrjen/following{/other_user}",
      "gists_url": "https://api.github.com/users/toddrjen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toddrjen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toddrjen/subscriptions",
      "organizations_url": "https://api.github.com/users/toddrjen/orgs",
      "repos_url": "https://api.github.com/users/toddrjen/repos",
      "events_url": "https://api.github.com/users/toddrjen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toddrjen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-20T17:01:24Z",
    "updated_at": "2014-10-20T17:01:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "It would be possible to use the second approach, although a lot more verbose.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282754808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-282754808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 282754808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjc1NDgwOA==",
    "user": {
      "login": "tetmin",
      "id": 5561566,
      "node_id": "MDQ6VXNlcjU1NjE1NjY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5561566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tetmin",
      "html_url": "https://github.com/tetmin",
      "followers_url": "https://api.github.com/users/tetmin/followers",
      "following_url": "https://api.github.com/users/tetmin/following{/other_user}",
      "gists_url": "https://api.github.com/users/tetmin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tetmin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tetmin/subscriptions",
      "organizations_url": "https://api.github.com/users/tetmin/orgs",
      "repos_url": "https://api.github.com/users/tetmin/repos",
      "events_url": "https://api.github.com/users/tetmin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tetmin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T15:36:58Z",
    "updated_at": "2017-02-27T15:36:58Z",
    "author_association": "NONE",
    "body": "I've been searching and haven't found any new functionality which would achieve what was originally requested. I'm having the same problem as @toddrjen but need to use the second approach since referencing names by their level name (not integer index) is an essential requirement:\r\n\r\n`df.apply(lambda x: x.clip(x.name['t_start'],x.name['t_stop']))`\r\n\r\nUnfortunately, it seems that pandas Series objects drops level names & just flattens their values into a tuple. What would be the potential implications of transitioning to a NamedTuple?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282758525",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-282758525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 282758525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjc1ODUyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T15:48:55Z",
    "updated_at": "2017-02-27T15:48:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tetmin you would have to show a more concrete example. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282764942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-282764942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 282764942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjc2NDk0Mg==",
    "user": {
      "login": "tetmin",
      "id": 5561566,
      "node_id": "MDQ6VXNlcjU1NjE1NjY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5561566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tetmin",
      "html_url": "https://github.com/tetmin",
      "followers_url": "https://api.github.com/users/tetmin/followers",
      "following_url": "https://api.github.com/users/tetmin/following{/other_user}",
      "gists_url": "https://api.github.com/users/tetmin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tetmin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tetmin/subscriptions",
      "organizations_url": "https://api.github.com/users/tetmin/orgs",
      "repos_url": "https://api.github.com/users/tetmin/repos",
      "events_url": "https://api.github.com/users/tetmin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tetmin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T16:09:13Z",
    "updated_at": "2017-02-27T16:09:13Z",
    "author_association": "NONE",
    "body": "Sure, let's say I have a DataFrame where each column is a time series, i'm storing metadata for each time series as a column MultiIndex, e.g. country, lag, series name etc. I want to apply a shift to each column depending on the value stored at a certain MultiIndex level e.g. imagine 'lag' is level 5, I can do the following:\r\n\r\n`df.apply(lambda x: x.shift(-x.name[5]))`\r\n\r\nThis works, but now imagine I drop one of my index levels, or come along with data which has more/fewer metadata levels, 5 is no longer appropriate, I need to index by the name of the level as you can with a DataFrame. I could do the following, but this seems like an extremely ugly solution to me:\r\n\r\n```\r\nlabels = df.columns.names\r\nmapper = dict(zip(labels, range(len(labels))))\r\ndf.apply(lambda x: x.shift(-x.name[mapper['lag']]))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282785133",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-282785133",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 282785133,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjc4NTEzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T17:13:09Z",
    "updated_at": "2017-02-27T17:13:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tetmin can you give an actual (mini) example, e.g. construct a frame programatically.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403163304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8574#issuecomment-403163304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8574",
    "id": 403163304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE2MzMwNA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:38:27Z",
    "updated_at": "2018-07-06T22:38:27Z",
    "author_association": "MEMBER",
    "body": "Closing as this issue is underspecified. PRs or concrete proposal how to fix welcome"
  }
]
