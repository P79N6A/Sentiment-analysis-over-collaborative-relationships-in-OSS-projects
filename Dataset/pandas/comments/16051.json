[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294963897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16051#issuecomment-294963897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16051",
    "id": 294963897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDk2Mzg5Nw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T20:06:59Z",
    "updated_at": "2017-04-18T20:06:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I'd consider this more a bug than intended behavior.   Deep in the replace code, if `dtype=object` is being replaced on, a recursive path is used, not entirely sure why, but probably could be changed to to do only 1 pass like you're expecting.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/2522efa9e687e777d966f49af70b325922699bea/pandas/core/internals.py#L3271"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294965613",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16051#issuecomment-294965613",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16051",
    "id": 294965613,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDk2NTYxMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-18T20:11:20Z",
    "updated_at": "2017-04-18T20:11:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #5541, #5338"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336854454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16051#issuecomment-336854454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16051",
    "id": 336854454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjg1NDQ1NA==",
    "user": {
      "login": "prcastro",
      "id": 1280742,
      "node_id": "MDQ6VXNlcjEyODA3NDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1280742?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prcastro",
      "html_url": "https://github.com/prcastro",
      "followers_url": "https://api.github.com/users/prcastro/followers",
      "following_url": "https://api.github.com/users/prcastro/following{/other_user}",
      "gists_url": "https://api.github.com/users/prcastro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prcastro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prcastro/subscriptions",
      "organizations_url": "https://api.github.com/users/prcastro/orgs",
      "repos_url": "https://api.github.com/users/prcastro/repos",
      "events_url": "https://api.github.com/users/prcastro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prcastro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T11:06:35Z",
    "updated_at": "2017-10-16T11:11:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Today, when replacing a DataFrame with nested mapping {col: {key: value}}, an error is raised when keys and values are overlapping. However, this is actually due to this bug, that happens no matter if the mapping is nested or not.\r\n\r\nWouldn't it be more consistent to raise the error when the keys and values are overlapping and values are non-numeric, instead of only raising when the mapping is nested?\r\n\r\nThis would render DataFrame replacing with nested mapping {col: {key: value}} usable whenever a loop could be used, while raising an the error in every place it is necessary."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350499360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16051#issuecomment-350499360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16051",
    "id": 350499360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ5OTM2MA==",
    "user": {
      "login": "petroswork",
      "id": 20224805,
      "node_id": "MDQ6VXNlcjIwMjI0ODA1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20224805?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petroswork",
      "html_url": "https://github.com/petroswork",
      "followers_url": "https://api.github.com/users/petroswork/followers",
      "following_url": "https://api.github.com/users/petroswork/following{/other_user}",
      "gists_url": "https://api.github.com/users/petroswork/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petroswork/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petroswork/subscriptions",
      "organizations_url": "https://api.github.com/users/petroswork/orgs",
      "repos_url": "https://api.github.com/users/petroswork/repos",
      "events_url": "https://api.github.com/users/petroswork/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petroswork/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-09T19:20:51Z",
    "updated_at": "2017-12-09T19:20:51Z",
    "author_association": "NONE",
    "body": "I don't know if I'm hitting the same bug, but `replace` corrupts a specific DataFrame I tried it against, running Pandas 0.21 on Python 3.6, Linux. To wit:\r\n```\r\nIn [51]: tmp.iloc[15771]\r\nOut[51]: ''\r\n\r\nIn [52]: tmp.replace('').iloc[15771]\r\nOut[52]: 'a@gmail.com'\r\n```\r\nhowever, \r\n```\r\nIn [55]: tmp.replace([''], [None]).iloc[15771] is None\r\nOut[55]: True\r\n```\r\nI have no idea how `a@gmail.com`, which is the value of another row, appeared here. This result is repeated for several rows."
  }
]
