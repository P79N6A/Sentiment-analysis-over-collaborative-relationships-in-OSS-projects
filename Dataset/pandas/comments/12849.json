[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/207988744",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-207988744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 207988744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk4ODc0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T13:50:55Z",
    "updated_at": "2016-04-10T13:50:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you show a small concrete example.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/207991941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-207991941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 207991941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk5MTk0MQ==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T14:12:33Z",
    "updated_at": "2016-04-10T14:30:50Z",
    "author_association": "NONE",
    "body": "yes sir\n\n```\nmaster=pd.DataFrame({'A':pd.date_range('2012-02-02','2012-02-07'),\n                     'B':[1,1,'jreback',1,1,5],\n                     'C':[0,0,0,0,2,np.nan]})\n\nmaster\nOut[158]: \n           A        B    C\n0 2012-02-02        1  0.0\n1 2012-02-03        1  0.0\n2 2012-02-04  jreback  0.0\n3 2012-02-05        1  0.0\n4 2012-02-06        1  2.0\n5 2012-02-07        5  NaN\n```\n\nsomething like \n`pd.get_dummies(master.B > master.C, mixed_types_eval=False, na_eval=False)`\n\nwould give a clean dummy\n\n```\ndummy\nOut[161]: \n0    1\n1    1\n2    0\n3    1\n4    0\n5    0\ndtype: int64\n```\n\nwith perfect control over the (somewhat inevitable in large datasets) string to float comparison and float to null comparison. This is important. For instance, in Stata missing values are evaluated as + infinity. So something like`2> NaN` would be False. In Sas, this is the opposite. We need control over this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/207992243",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-207992243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 207992243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk5MjI0Mw==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T14:16:06Z",
    "updated_at": "2016-04-10T14:16:06Z",
    "author_association": "NONE",
    "body": "similar logic would of course apply for logical tests based on dates comparisons (useful for time-series regressions)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/207994915",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-207994915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 207994915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk5NDkxNQ==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T14:39:58Z",
    "updated_at": "2016-04-10T14:41:23Z",
    "author_association": "NONE",
    "body": "actually, it would be even more precise to define the following options\n- comparing numeric to string= return nan or 0\n- comparing numeric to na = return nan OR zero (implicitly assuming`nan=+ infinity`) OR 1 (implicitly assuming `nan=- infinity`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/207997750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-207997750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 207997750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk5Nzc1MA==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T15:06:10Z",
    "updated_at": "2016-04-10T15:07:09Z",
    "author_association": "NONE",
    "body": "last: this also applies to string comparison. say master.B==\"jreback\"\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/207997939",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-207997939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 207997939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk5NzkzOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T15:06:46Z",
    "updated_at": "2016-04-10T15:06:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, ignoring all the dtype issues, your main desire is a\n\n> simple way to generate dummy variables based on a logical test.\n\nI'd say this is done with `(df.B > df.C).astype(int)`, right? Again, assuming all the types are OK.\n\nBringing back the dtype issues, makes thing tricker from a library perspective, and a bit more difficult for the user.\n\n> - comparing numeric to string= return nan or 0\n\nI think we've been moving towards being stricter about this recently. It's better to put the burden on the user rather than guess at what they want. So that means you'd need.\n\n``` python\nmaster['B'] = pd.to_numeric(master['B'], errors='coerce')\nIn [41]: (master['B'] > master['C']).astype(int)\nOut[41]:\n0    1\n1    1\n2    0\n3    1\n4    0\n5    0\ndtype: int64\n```\n\nto fill the NaNs. Or create a new column if you need to keep the original around.\n\n> - comparing numeric to na = return nan OR zero (implicitly assumingnan=+ infinity) OR 1 (implicitly assuming nan=- infinity)\n\nThis goes against python / numpy / IEEE behavior of all numeric : NaN comparisons evaluating false.\nIf you want the nan to be like `-inf`, then `(master['B'] > master['C']) | pd.isnull(master).any(1)`.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/207998720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-207998720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 207998720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzk5ODcyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T15:18:53Z",
    "updated_at": "2016-04-10T15:18:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "of after @TomAugspurger coercion step.\n\n```\nIn [6]: pd.get_dummies(master.loc[master['B'] > master['C'], 'B'].astype('category'))\nOut[6]: \n   1.0\n0  1.0\n1  1.0\n3  1.0\n```\n\n@randomgambit pandas is all about building pipelines of simple operations and combining them, rather than trying to do everything with lots of options in a single function (not mentioning R here :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208001634",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-208001634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 208001634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODAwMTYzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T15:33:48Z",
    "updated_at": "2016-04-10T15:33:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@randomgambit you might want to read [working with text data](http://pandas.pydata.org/pandas-docs/stable/text.html) and [indexing](http://pandas.pydata.org/pandas-docs/stable/indexing.html) where these topics are covered quite a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208007644",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-208007644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 208007644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODAwNzY0NA==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T16:13:20Z",
    "updated_at": "2016-04-10T16:22:54Z",
    "author_association": "NONE",
    "body": "fair enough.\n\nI agree with you that my suggestions above may be too 'greedy' from a Pandas philosophical point of view. After all, what is really important here is predictability and control.\n\nMy point is that it is somewhat frustrating to have a powerfull dummy variable creation tool such as get_dummies, that can in a single coding line generate legit dummy variables out of columns looking like.\n\n```\nOut[6]: \n0  \"jreback randomgambit\"\n1  \"tom randomgambit\"\n3  \"jreback\"\n\n```\n\nbut for simple 0/1 coding based on **basic** logical tests I have to rely on the two step process `to_numeric` followed by `get_dummies` and `astype`. Consider how many lines I need to write if I create dummies based on multiple columns (which happens, well, every time).\n\nMaybe the simplest solution to my suggestion would be to come up with \n\n`pd.get_dummies(**logical condition involving several columns**, errors='coerce')`\n\nwhich give zeros every time there is an exception.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208011524",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-208011524",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 208011524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODAxMTUyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T16:30:34Z",
    "updated_at": "2016-04-10T16:31:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@randomgambit \n\nthe point of pandas is to clean your data, there are tremendous variations. I am not sure I understand why any of this is a problem. A simple pipeline is all that is needed. How do I know that [16] is NOT legititmate? it looks fine to me, but you may disagree, so this requires the user to do something with it. pandas CANNOT just guess at this.\n\n```\nIn [14]: s = Series([\"jreback randomgambit\", \"tom randomgambit\", \"jreback\"])\n\nIn [15]: s\nOut[15]: \n0    jreback randomgambit\n1        tom randomgambit\n2                 jreback\ndtype: object\n\nIn [16]: \n\nIn [17]: (s.str\n   ....:   .extract('(\\w+)', expand=False)\n   ....:   .str\n           .get_dummies()\n   ....: )\nOut[17]: \n   jreback  tom\n0        1    0\n1        0    1\n2        1    0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208015676",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-208015676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 208015676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODAxNTY3Ng==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T17:01:07Z",
    "updated_at": "2016-04-10T17:02:29Z",
    "author_association": "NONE",
    "body": "hi @jreback thanks for your feedback. I think you may have misunderstood my point. sorry if I was not clear.\n\nall im saying is that it is somehow frustrating to see that get_dummies is able to generate dummies out of complex string columns as you describe, but is unable to generate dummies out of basic logical columns comparisons.\n\nnow, i totally agree with you that if we agree to disagree, the choice should be left to the final user. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208017525",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-208017525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 208017525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODAxNzUyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T17:05:36Z",
    "updated_at": "2016-04-10T17:05:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@randomgambit oh I get your point. But we are not going to be adding lots of options to a method, where there is already a clear way of doing this. If you have a convincing example pls show it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208017652",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-208017652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 208017652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODAxNzY1Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T17:05:48Z",
    "updated_at": "2016-04-10T17:05:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@randomgambit thanks.\n\nI think we'll close this one for now, with the understanding that a dedicated method for this kind of comparison isn't a good fit for pandas. Rather, we'd encourage separately handling the dtype issues, the comparisons, and then the `get_dummies` (but I think `.astype(int)` suffices here).\n\nBut please do raise issues as you discover more usability concerns. It makes me happy to see others with an economics background using pandas :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208018503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12849#issuecomment-208018503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12849",
    "id": 208018503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODAxODUwMw==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-10T17:11:34Z",
    "updated_at": "2016-04-10T17:11:34Z",
    "author_association": "NONE",
    "body": "ok, i gave full hearths to both of you :D\nthanks!\n"
  }
]
