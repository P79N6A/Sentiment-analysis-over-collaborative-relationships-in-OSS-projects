[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146293954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11258#issuecomment-146293954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11258",
    "id": 146293954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjI5Mzk1NA==",
    "user": {
      "login": "jrandrews",
      "id": 10200084,
      "node_id": "MDQ6VXNlcjEwMjAwMDg0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10200084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrandrews",
      "html_url": "https://github.com/jrandrews",
      "followers_url": "https://api.github.com/users/jrandrews/followers",
      "following_url": "https://api.github.com/users/jrandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/jrandrews/orgs",
      "repos_url": "https://api.github.com/users/jrandrews/repos",
      "events_url": "https://api.github.com/users/jrandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T18:58:49Z",
    "updated_at": "2015-10-07T18:58:49Z",
    "author_association": "NONE",
    "body": "Also a list of output from pd.show_versions()\n\n```\nINSTALLED VERSIONS\n------------------\ncommit: None\npython: 2.7.10.final.0\npython-bits: 64\nOS: Darwin\nOS-release: 15.0.0\nmachine: x86_64\nprocessor: i386\nbyteorder: little\nLC_ALL: None\nLANG: None\n\npandas: 0.16.2\nnose: 1.3.7\nCython: None\nnumpy: 1.8.0rc1\nscipy: 0.13.0b1\nstatsmodels: 0.6.1\nIPython: None\nsphinx: None\npatsy: 0.4.0\ndateutil: 1.5\npytz: 2013.7\nbottleneck: None\ntables: None\nnumexpr: None\nmatplotlib: 1.3.1\nopenpyxl: None\nxlrd: None\nxlwt: None\nxlsxwriter: None\nlxml: None\nbs4: None\nhtml5lib: None\nhttplib2: 0.9.1\napiclient: None\nsqlalchemy: 1.0.8\npymysql: None\npsycopg2: None\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146321655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11258#issuecomment-146321655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11258",
    "id": 146321655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjMyMTY1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T20:42:27Z",
    "updated_at": "2015-10-07T20:42:27Z",
    "author_association": "MEMBER",
    "body": "Thanks for the report, an you try some of these things:\n- Does `engine.has_table` work?\n- If you create a MetaData object and reflect it (`meta = sqlalchemy.MetaData(bind=engine); meta.reflect()`) Does it recognize tables?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146329150",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11258#issuecomment-146329150",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11258",
    "id": 146329150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjMyOTE1MA==",
    "user": {
      "login": "jrandrews",
      "id": 10200084,
      "node_id": "MDQ6VXNlcjEwMjAwMDg0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10200084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrandrews",
      "html_url": "https://github.com/jrandrews",
      "followers_url": "https://api.github.com/users/jrandrews/followers",
      "following_url": "https://api.github.com/users/jrandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/jrandrews/orgs",
      "repos_url": "https://api.github.com/users/jrandrews/repos",
      "events_url": "https://api.github.com/users/jrandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T21:04:52Z",
    "updated_at": "2015-10-07T21:04:52Z",
    "author_association": "NONE",
    "body": "`engine.has_table` seems to work:\n\n```\nfrom sqlalchemy import *\n\norcl_connect_string = 'oracle+cx_oracle://system:oracle@192.168.56.101:1521/?service_name=orcl'\nengine = create_engine(orcl_connect_string)\n\nconnection = engine.connect()\n\nif engine.has_table(table_name='INT_PROP'):\n    print 'Yes, has the table'\nelse:\n    print 'No table'\n```\n\nResults: `Yes, has the table`\nI tried to test for metadata reflection. I am sorry, I might not understand exactly what you are asking for -- here is the code that I ran:\n\n```\nfrom sqlalchemy import *\n\norcl_connect_string = 'oracle+cx_oracle://system:oracle@192.168.56.101:1521/?service_name=orcl'\nengine = create_engine(orcl_connect_string)\n\nmeta = MetaData(bind=engine)\n\nprint meta.reflect()\n```\n\nand the results:\n\n```\nNone\n```\n\nI tried this too and what is interesting is that I didn't seem to get a full list of tables that this user has access to:\n\n```\nfor t in meta.sorted_tables:\n    print t.name\n```\n\nResults:\n\n```\nlogmnr_attrcol$\nlogmnr_attribute$\nlogmnr_ccol$\nlogmnr_cdef$\nlogmnr_col$\nlogmnr_coltype$\nlogmnr_con$\nlogmnr_container$\nlogmnr_dictionary$\nlogmnr_dictstate$\nlogmnr_enc$\nlogmnr_icol$\nlogmnr_ind$\nlogmnr_indcompart$\nlogmnr_indpart$\nlogmnr_indsubpart$\nlogmnr_kopm$\nlogmnr_lob$\nlogmnr_lobfrag$\nlogmnr_logmnr_buildlog\nlogmnr_ntab$\nlogmnr_obj$\nlogmnr_opqtype$\nlogmnr_partobj$\nlogmnr_props$\nlogmnr_refcon$\nlogmnr_seed$\nlogmnr_subcoltype$\nlogmnr_tab$\nlogmnr_tabcompart$\nlogmnr_tabpart$\nlogmnr_tabsubpart$\nlogmnr_ts$\nlogmnr_type$\nlogmnr_user$\nlogmnrc_con_gg\nlogmnrc_concol_gg\nlogmnrc_gsba\nlogmnrc_gsii\nlogmnrc_gtcs\nlogmnrc_gtlo\nlogmnrc_ind_gg\nlogmnrc_indcol_gg\nlogmnrc_seq_gg\nlogmnrp_ctas_part_map\nlogstdby$apply_progress\nmovie1_stg\nmovie2_stg\n```\n\nWhat is interesting is that the last tables in that list are defined as external tables in Oracle. Those have some funny properties compared to normal tables. Has anybody ever tested using external tables in Oracle with SQLAlchemy or Pandas? I wasn't ever trying to select from the external tables, but I wonder if their presence in the metadata is already causing issues.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146342856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11258#issuecomment-146342856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11258",
    "id": 146342856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjM0Mjg1Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T21:48:19Z",
    "updated_at": "2015-10-07T21:48:19Z",
    "author_association": "MEMBER",
    "body": "Well, `read_sql_table` internally uses this reflected meta object to get the table. So we should investigate why it is not included there (`meta.tables`), while `engine.has_table` does work.\n\nYou can also give `echo=True` to the engine creation (create_engine(..., echo=True)), to get some more debugging information on what is happening on the sqlalchemy calls.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146354536",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11258#issuecomment-146354536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11258",
    "id": 146354536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjM1NDUzNg==",
    "user": {
      "login": "jrandrews",
      "id": 10200084,
      "node_id": "MDQ6VXNlcjEwMjAwMDg0",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10200084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrandrews",
      "html_url": "https://github.com/jrandrews",
      "followers_url": "https://api.github.com/users/jrandrews/followers",
      "following_url": "https://api.github.com/users/jrandrews/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrandrews/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrandrews/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrandrews/subscriptions",
      "organizations_url": "https://api.github.com/users/jrandrews/orgs",
      "repos_url": "https://api.github.com/users/jrandrews/repos",
      "events_url": "https://api.github.com/users/jrandrews/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrandrews/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T22:48:46Z",
    "updated_at": "2015-10-07T22:48:46Z",
    "author_association": "NONE",
    "body": "So I think I have found the issue after setting echo=True for create_engine(). When SQLAlchemy queries the Oracle system catalog it filters out tables belonging to two users, specifically SYSTEM and SYSAUX. Here is the actual query:\n\n```\nSELECT table_name FROM all_tables WHERE nvl(tablespace_name, 'no tablespace') NOT IN ('SYSTEM', 'SYSAUX') AND OWNER = :owner AND IOT_NAME IS NULL AND DURATION IS NULL\n```\n\nNow, I am connecting as the SYSTEM user because this is running in a local virtual machine on my laptop which has no connectivity to the outside world. In any sort of real scenario this would be a bad idea, but in my scenario it isn't important.\nI copied the table to another user's schema and then ran the python script logging on as that user. read_sql_table now works. So it's an issue with SQLAlchemy silently hiding any tables belonging to SYSTEM or SYSAUX. I realize that this isn't a pandas problem. I looked at SQLAlchemy documentation and there is no mention in the Oracle dialect of SQLAlchemy doing this. \n\nI can see why filtering out SYSTEM and SYSAUX tables on Oracle might be useful in some cases because there are a lot of them and they aren't helpful to the average user, but there should probably be a note or an indication and an option in the engine or connection constructor to allow for turning this behavior off. I can see certain scenarios where I might specifically want to access data in those tables.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/146774404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11258#issuecomment-146774404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11258",
    "id": 146774404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Njc3NDQwNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-09T07:08:48Z",
    "updated_at": "2015-10-09T07:08:48Z",
    "author_association": "MEMBER",
    "body": "OK, good you found it! \nI am closing this issue, as it is not something we can do anything about, but you can certainly raise the issue at sqlalchemy if you want (although I suppose they will have a good reason for it, but at least they can mention it in the docs).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/281157566",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11258#issuecomment-281157566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11258",
    "id": 281157566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTE1NzU2Ng==",
    "user": {
      "login": "n0mik0s",
      "id": 15436349,
      "node_id": "MDQ6VXNlcjE1NDM2MzQ5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15436349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/n0mik0s",
      "html_url": "https://github.com/n0mik0s",
      "followers_url": "https://api.github.com/users/n0mik0s/followers",
      "following_url": "https://api.github.com/users/n0mik0s/following{/other_user}",
      "gists_url": "https://api.github.com/users/n0mik0s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/n0mik0s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/n0mik0s/subscriptions",
      "organizations_url": "https://api.github.com/users/n0mik0s/orgs",
      "repos_url": "https://api.github.com/users/n0mik0s/repos",
      "events_url": "https://api.github.com/users/n0mik0s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/n0mik0s/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-20T18:57:13Z",
    "updated_at": "2017-02-20T18:57:13Z",
    "author_association": "NONE",
    "body": "Hello!\r\nIt's seems that I faced with the same error...\r\nI found that you could avoid \"NOT IN ('SYSTEM', 'SYSAUX')\" statement:\r\n`sqlalchemy_engine = sqlalchemy.create_engine(sqlalchemy_con_str, case_sensitive=False, echo=True, encoding='latin1', **exclude_tablespaces=None**)\r\n`\r\nAnd it's working as intended:\r\n\r\n> 2017-02-20 20:49:34,833 INFO sqlalchemy.engine.base.Engine SELECT table_name FROM all_tables WHERE OWNER = :owner AND IOT_NAME IS NULL AND DURATION IS NULL\r\n\r\nBut in my case this option did not solve the issue:\r\n\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/usr/local/lib/python3.5/dist-packages/pandas/io/sql.py\", line 257, in read_sql_table\r\n>     meta.reflect(only=[table_name], views=True)\r\n>   File \"/usr/local/lib/python3.5/dist-packages/sqlalchemy/sql/schema.py\", line 3815, in reflect\r\n>     (bind.engine, s, ', '.join(missing)))\r\n> sqlalchemy.exc.InvalidRequestError: Could not reflect: requested table(s) not available in Engine(oracle+cx_oracle://opc_op:***@ovm-hpomdb.sdab.sn:1521/?service_name=hpom): (OPC_ACT_MESSAGES)\r\n> \r\n> During handling of the above exception, another exception occurred:\r\n> \r\n> Traceback (most recent call last):\r\n>   File \"/home/vetal/PycharmProjects/hpom_srv_stat/fetch_from_db.py\", line 37, in <module>\r\n>     p_df = pd.read_sql_table(str(table), sqlalchemy_engine).assign(CSVTimeStamp=current_tstamp)\r\n>   File \"/usr/local/lib/python3.5/dist-packages/pandas/io/sql.py\", line 259, in read_sql_table\r\n>     raise ValueError(\"Table %s not found\" % table_name)\r\n> ValueError: Table OPC_ACT_MESSAGES not found\r\n\r\nCould anyone help me in that?"
  }
]
