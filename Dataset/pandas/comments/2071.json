[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9439193",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2071#issuecomment-9439193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2071",
    "id": 9439193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MzkxOTM=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-15T09:31:26Z",
    "updated_at": "2012-10-15T09:31:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "In general terms, it seems that _any_ iteration on the open file handle breaks things:\n\n``` python\nIn [26]: with open(\"test.txt\") as handle:\n    for line in handle:\n        print line\n        if \"CCC\" in line:\n            break\n    res = pandas.read_table(handle, squeeze=True, header=None)\n   ....:     \nAAA\n\nBBB\n\nCCC\n\n\nIn [27]: res\nOut[27]: \nEmpty DataFrame\nColumns: array([], dtype=object)\nIndex: array([], dtype=object)\n\n```\n\nWhile this is not the case for the Python parser:\n\n``` python\n\nIn [28]: with open(\"test.txt\") as handle:\n    for line in handle:\n        print line\n        if \"CCC\" in line:\n            break\n    res = pandas.read_table(handle, squeeze=True, header=None, engine=\"python\")\n   ....:     \nAAA\n\nBBB\n\nCCC\n\n\nIn [29]: res\nOut[29]: \n0     DDD\n1     EEE\n2     FFF\n3     GGG\n4    None\nName: X0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10400587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2071#issuecomment-10400587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2071",
    "id": 10400587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDAwNTg3",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T08:22:54Z",
    "updated_at": "2012-11-15T08:22:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Gave it a go again after the merge to master, this time the parser simply segfaults with this case (100% reproducible).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10400741",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2071#issuecomment-10400741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2071",
    "id": 10400741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDAwNzQx",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T08:29:35Z",
    "updated_at": "2012-11-15T08:29:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "And here's a backtrace:\n\n``` gdb\nProgram received signal SIGSEGV, Segmentation fault.\nbuffer_rd_bytes (source=0xf068c0, nbytes=<optimized out>, bytes_read=0x7fffffffb5c8, status=0x7fffffffb5c4) at pandas/src/parser/io.c:128\n128         if (!PyBytes_Check(result)) {\n(gdb) bt\n#0  buffer_rd_bytes (source=0xf068c0, nbytes=<optimized out>, bytes_read=0x7fffffffb5c8, status=0x7fffffffb5c4) at pandas/src/parser/io.c:128\n#1  0x00007fffeeba2637 in parser_buffer_bytes (self=self@entry=0x6e6c10, nbytes=<optimized out>) at pandas/src/parser/parser.c:493\n#2  0x00007fffeeba2d1f in _tokenize_helper (self=0x6e6c10, nrows=nrows@entry=1, all=all@entry=0) at pandas/src/parser/parser.c:1188\n#3  0x00007fffeeba2dd7 in tokenize_nrows (self=<optimized out>, nrows=nrows@entry=1) at pandas/src/parser/parser.c:1218\n#4  0x00007fffeeb7f9bd in __pyx_f_6pandas_7_parser_10TextReader__tokenize_rows (__pyx_v_self=0x6dcd20, __pyx_v_nrows=1) at pandas/src/parser.c:5893\n#5  0x00007fffeeb81a21 in __pyx_f_6pandas_7_parser_10TextReader__get_header (__pyx_v_self=0x6dcd20) at pandas/src/parser.c:4946\n#6  0x00007fffeeb8306b in __pyx_pf_6pandas_7_parser_10TextReader___cinit__ (__pyx_v_verbose=0x7ffff7d90a80 <_Py_ZeroStruct>, __pyx_v_skip_footer=0x61e9b0, __pyx_v_skiprows=0x7fffef08fde8, __pyx_v_low_memory=0x7ffff7d90a60 <_Py_TrueStruct>, \n    __pyx_v_use_unsigned=0x7ffff7d90a80 <_Py_ZeroStruct>, __pyx_v_compact_ints=0x7ffff7d90a80 <_Py_ZeroStruct>, __pyx_v_na_values=0x7fffef08f878, __pyx_v_na_filter=0x7ffff7d90a60 <_Py_TrueStruct>, \n    __pyx_v_warn_bad_lines=0x7ffff7d90a60 <_Py_TrueStruct>, __pyx_v_error_bad_lines=0x7ffff7d90a60 <_Py_TrueStruct>, __pyx_v_usecols=0x7ffff7da4e20 <_Py_NoneStruct>, __pyx_v_dtype=0x7ffff7da4e20 <_Py_NoneStruct>, \n    __pyx_v_thousands=0x7ffff7da4e20 <_Py_NoneStruct>, __pyx_v_decimal=<optimized out>, __pyx_v_encoding=0x7ffff7da4e20 <_Py_NoneStruct>, __pyx_v_quoting=0x61e9b0, __pyx_v_quotechar=0x7ffff6b3ff08, \n    __pyx_v_doublequote=0x7ffff7d90a60 <_Py_TrueStruct>, __pyx_v_escapechar=0x7ffff7da4e20 <_Py_NoneStruct>, __pyx_v_skipinitialspace=0x7ffff7d90a80 <_Py_ZeroStruct>, __pyx_v_as_recarray=0x7ffff7d90a80 <_Py_ZeroStruct>, \n    __pyx_v_factorize=0x0, __pyx_v_converters=0xf4bf10, __pyx_v_compression=<optimized out>, __pyx_v_delim_whitespace=<optimized out>, __pyx_v_tokenize_chunksize=<optimized out>, __pyx_v_memory_map=<optimized out>, \n    __pyx_v_names=0x7ffff7da4e20 <_Py_NoneStruct>, __pyx_v_header=<optimized out>, __pyx_v_delimiter=0x7ffff7da4e20 <_Py_NoneStruct>, __pyx_v_source=0x7ffff7f385d0, __pyx_v_self=<optimized out>, __pyx_v_comment=<optimized out>, \n    __pyx_v_buffer_lines=<optimized out>) at pandas/src/parser.c:3601\n#7  __pyx_pw_6pandas_7_parser_10TextReader_1__cinit__ (__pyx_v_self=__pyx_v_self@entry=0x6dcd20, __pyx_args=__pyx_args@entry=0x7ffff7eec310, __pyx_kwds=__pyx_kwds@entry=0xf4ccc0) at pandas/src/parser.c:2481\n#8  0x00007fffeeb8699e in __pyx_tp_new_6pandas_7_parser_TextReader (t=<optimized out>, a=0x7ffff7eec310, k=0xf4ccc0) at pandas/src/parser.c:19587\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10411572",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2071#issuecomment-10411572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2071",
    "id": 10411572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDExNTcy",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T15:11:56Z",
    "updated_at": "2012-11-15T15:11:56Z",
    "author_association": "MEMBER",
    "body": "Thanks. I'll have a look\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10412926",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2071#issuecomment-10412926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2071",
    "id": 10412926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDEyOTI2",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T15:44:26Z",
    "updated_at": "2012-11-15T15:44:26Z",
    "author_association": "MEMBER",
    "body": "The underlying problem is that the new parser relies on being able to call `read` on the file handle you pass. however, after iterating, this causes:\n\n```\nValueError: Mixing iteration and read methods would lose data\n```\n\nThe case where calling `read` fails was not handled in the C code, so I did that and here's the new error message. Best I can do for this somewhat unusual case\n\n```\n/home/wesm/code/pandas/pandas/_parser.so in pandas._parser.TextReader.__cinit__ (pandas/src/parser.c:3624)()\n\n/home/wesm/code/pandas/pandas/_parser.so in pandas._parser.TextReader._get_header (pandas/src/parser.c:4594)()\n\n/home/wesm/code/pandas/pandas/_parser.so in pandas._parser.TextReader._tokenize_rows (pandas/src/parser.c:5967)()\n\n/home/wesm/code/pandas/pandas/_parser.so in pandas._parser.raise_parser_error (pandas/src/parser.c:14702)()\n\nCParserError: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10413291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2071#issuecomment-10413291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2071",
    "id": 10413291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDEzMjkx",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T15:52:51Z",
    "updated_at": "2012-11-15T15:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "In short, doing like the example should be considered broken? I assume the Python parser did not rely upon read() directly, or did it work by pure chance?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10413745",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2071#issuecomment-10413745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2071",
    "id": 10413745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDEzNzQ1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T16:03:46Z",
    "updated_at": "2012-11-15T16:03:46Z",
    "author_association": "MEMBER",
    "body": "It worked only because the Python code used the `csv` module which uses the iteration protocol rather than `read`. I could go to some effort to make the code automatically \"fall back\" on the Python parser code, but not today\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10413896",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2071#issuecomment-10413896",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2071",
    "id": 10413896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDEzODk2",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T16:07:15Z",
    "updated_at": "2012-11-15T16:07:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "In data giovedì 15 novembre 2012 08:03:53, Wes McKinney ha scritto:\n\n> the code automatically \"fall back\" on the Python parser code, but not today\n\nThat's good enough for now, I merely switched to the python engine all the \nbits in my code that relied on this functionality and kept the rest with the C \nparser.\n\n## \n\nLuca Beltrame - KDE Forums team\nKDE Science supporter\nGPG key ID: 6E1A4E79\n"
  }
]
