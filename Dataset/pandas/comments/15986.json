[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/293682596",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15986#issuecomment-293682596",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15986",
    "id": 293682596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzY4MjU5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-12T19:28:39Z",
    "updated_at": "2017-04-12T19:29:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a ``pendulum`` issue. They don't use standard timezones.\r\n\r\n```\r\nIn [4]: type(pendulum.now().tz)\r\nOut[4]: pendulum.tz.timezone.Timezone\r\n```\r\n\r\nwe accept ``dateutil`` and ``pytz`` timezones. I suppose we could add (optional) support for this. but all we would do would be to convert to ``Timestamp`` anyhow, but it would likely be a major effort for not much gain.\r\n\r\nclosing this as won't fix / out-of-scope."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315054517",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15986#issuecomment-315054517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15986",
    "id": 315054517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTA1NDUxNw==",
    "user": {
      "login": "sdispater",
      "id": 555648,
      "node_id": "MDQ6VXNlcjU1NTY0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/555648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdispater",
      "html_url": "https://github.com/sdispater",
      "followers_url": "https://api.github.com/users/sdispater/followers",
      "following_url": "https://api.github.com/users/sdispater/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdispater/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdispater/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdispater/subscriptions",
      "organizations_url": "https://api.github.com/users/sdispater/orgs",
      "repos_url": "https://api.github.com/users/sdispater/repos",
      "events_url": "https://api.github.com/users/sdispater/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdispater/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T11:45:49Z",
    "updated_at": "2017-07-13T11:45:49Z",
    "author_association": "NONE",
    "body": "@jreback Author of `pendulum` here :-) What do you mean by it does not use standard timezone?\r\n\r\n```python\r\n>>> isinstance(pendulum.now().tzinfo, datetime.tzinfo)\r\nTrue\r\n```\r\nSo, as you can see, `pendulum` uses a subclass of the standard `tzinfo`.\r\n\r\nThe underlying problem comes from `pandas` since it calls:\r\n\r\n```python\r\nint(total_seconds(_get_utcoffset(tz, None)))\r\n```\r\nin the [_get_dst_info()](https://github.com/pandas-dev/pandas/blob/c8dafb5a7ae9fe42b9d15c47082a6fb139e78b5d/pandas/_libs/tslib.pyx#L4322) function.\r\n\r\nHowever `total_seconds()` assumes a `timedelta` while the `utcoffset()` method of a `tzinfo` can also return `None`.\r\n\r\nHere is what the offical Python documentation says (https://docs.python.org/3.6/library/datetime.html#datetime.tzinfo.utcoffset):\r\n\r\n>  If the UTC offset isnâ€™t known, return None.\r\n\r\nAnd in this case `None` is being passed to `utcoffset()` so there is no way to determine the offset that's why pendulum returns `None`.\r\n\r\nSo `None` is a valid return value, however `pandas` will segfault when it occurs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315061374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15986#issuecomment-315061374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15986",
    "id": 315061374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTA2MTM3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T12:20:34Z",
    "updated_at": "2017-07-13T12:20:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the explanation @sdispater."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315081537",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15986#issuecomment-315081537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15986",
    "id": 315081537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTA4MTUzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T13:43:27Z",
    "updated_at": "2017-07-13T13:45:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not averse to changing this, but some concerns.\r\n\r\n``pendulum`` doesn't have the notion of naive datetimes w/o actually using a timezone object; this is contrary to both pytz and dateutil which *always* return a valid utc offset (sure the actual spec says different, but has been this way a long time). rather naive is represented by having NO tz object. This is fairly ingrained in the implementation in pandas.\r\n\r\nThis is quite awkward in the context of having distinct notions of naive and tz-aware datetimes, which are both first class in pandas. So several paths exist:\r\n\r\n- ban objects that purport to be naive but are actually representing as tz-aware but with no utc offset (raise NotImplementedError is best)\r\n- convert object from 1) to a tz=None when encountered\r\n- handle this case in pandas.\r\n\r\n2nd and 3rd would require fully passing the entire test suite with these objects fully tested. We test pytz and dateutil objects in many many ways. \r\n\r\nSo if someone wants to do this go for it.\r\n\r\nWould take the first option (ban) immediately (pretty trivial), then others could be over time."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337828345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15986#issuecomment-337828345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15986",
    "id": 337828345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzgyODM0NQ==",
    "user": {
      "login": "pletnes",
      "id": 708553,
      "node_id": "MDQ6VXNlcjcwODU1Mw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/708553?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pletnes",
      "html_url": "https://github.com/pletnes",
      "followers_url": "https://api.github.com/users/pletnes/followers",
      "following_url": "https://api.github.com/users/pletnes/following{/other_user}",
      "gists_url": "https://api.github.com/users/pletnes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pletnes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pletnes/subscriptions",
      "organizations_url": "https://api.github.com/users/pletnes/orgs",
      "repos_url": "https://api.github.com/users/pletnes/repos",
      "events_url": "https://api.github.com/users/pletnes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pletnes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T07:52:59Z",
    "updated_at": "2017-10-19T07:52:59Z",
    "author_association": "NONE",
    "body": "I ran into this and was thoroughly confused. My jupyter notebook kernel kept dying with no indication of what the error was; it even took a good long time to discover that it was a segfault. Presumably many pandas users don't even know much about segfaults.\r\n\r\nPandas doesn't have to accept pendulum objects, I think, but segfaulting really is not very polite."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337839776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15986#issuecomment-337839776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15986",
    "id": 337839776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzgzOTc3Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T08:39:57Z",
    "updated_at": "2017-10-19T08:39:57Z",
    "author_association": "MEMBER",
    "body": "PR to for now at least raise an error instead of segfaulting is very welcome! (we can later still see whether to more fully support it or not)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353603478",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15986#issuecomment-353603478",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15986",
    "id": 353603478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzYwMzQ3OA==",
    "user": {
      "login": "daviskirk",
      "id": 1049817,
      "node_id": "MDQ6VXNlcjEwNDk4MTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1049817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daviskirk",
      "html_url": "https://github.com/daviskirk",
      "followers_url": "https://api.github.com/users/daviskirk/followers",
      "following_url": "https://api.github.com/users/daviskirk/following{/other_user}",
      "gists_url": "https://api.github.com/users/daviskirk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daviskirk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daviskirk/subscriptions",
      "organizations_url": "https://api.github.com/users/daviskirk/orgs",
      "repos_url": "https://api.github.com/users/daviskirk/repos",
      "events_url": "https://api.github.com/users/daviskirk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daviskirk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T13:59:54Z",
    "updated_at": "2017-12-22T13:59:54Z",
    "author_association": "NONE",
    "body": "We'd also really appreciate an error being raised.  Maybe another point here after talking to less experienced devs is that just segfaulting gives so little info on what even happened that it's hard to pinpoint that pendulum is even the problem, so there might be many users that aren't even aware that this is the issue they are looking for and just assume pandas is a buggy library."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353744206",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15986#issuecomment-353744206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15986",
    "id": 353744206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1Mzc0NDIwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-23T19:37:00Z",
    "updated_at": "2017-12-23T19:39:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "In 0.21.x this does not segfault, rather\r\n\r\n```\r\nimport pendulum\r\n   ...: import pandas\r\n   ...: pandas.date_range(start=pendulum.now(), end=pendulum.tomorrow())\r\n   ...: \r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\npandas/_libs/tslibs/timezones.pyx in pandas._libs.tslibs.timezones.get_dst_info()\r\n\r\nAttributeError: 'NoneType' object has no attribute 'total_seconds'\r\nException ignored in: 'pandas._libs.tslib.tz_convert_single'\r\nTraceback (most recent call last):\r\n  File \"pandas/_libs/tslibs/timezones.pyx\", line 227, in pandas._libs.tslibs.timezones.get_dst_info\r\nAttributeError: 'NoneType' object has no attribute 'total_seconds'\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\npandas/_libs/tslibs/timezones.pyx in pandas._libs.tslibs.timezones.get_dst_info()\r\n\r\nAttributeError: 'NoneType' object has no attribute 'total_seconds'\r\nException ignored in: 'pandas._libs.tslib.tz_convert_single'\r\nTraceback (most recent call last):\r\n  File \"pandas/_libs/tslibs/timezones.pyx\", line 227, in pandas._libs.tslibs.timezones.get_dst_info\r\nAttributeError: 'NoneType' object has no attribute 'total_seconds'\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-1-c9557dad79f3> in <module>()\r\n      1 import pendulum\r\n      2 import pandas\r\n----> 3 pandas.date_range(start=pendulum.now(), end=pendulum.tomorrow())\r\n\r\n~/miniconda3/envs/pandas/lib/python3.6/site-packages/pandas/core/indexes/datetimes.py in date_range(start, end, periods, freq, tz, normalize, name, closed, **kwargs)\r\n   2055     return DatetimeIndex(start=start, end=end, periods=periods,\r\n   2056                          freq=freq, tz=tz, normalize=normalize, name=name,\r\n-> 2057                          closed=closed, **kwargs)\r\n   2058 \r\n   2059 \r\n\r\n~/miniconda3/envs/pandas/lib/python3.6/site-packages/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    116                 else:\r\n    117                     kwargs[new_arg_name] = new_arg_value\r\n--> 118             return func(*args, **kwargs)\r\n    119         return wrapper\r\n    120     return _deprecate_kwarg\r\n\r\n~/miniconda3/envs/pandas/lib/python3.6/site-packages/pandas/core/indexes/datetimes.py in __new__(cls, data, freq, start, end, periods, copy, name, tz, verify_integrity, normalize, closed, ambiguous, dtype, **kwargs)\r\n    322             return cls._generate(start, end, periods, name, freq,\r\n    323                                  tz=tz, normalize=normalize, closed=closed,\r\n--> 324                                  ambiguous=ambiguous)\r\n    325 \r\n    326         if not isinstance(data, (np.ndarray, Index, ABCSeries)):\r\n\r\n~/miniconda3/envs/pandas/lib/python3.6/site-packages/pandas/core/indexes/datetimes.py in _generate(cls, start, end, periods, name, offset, tz, normalize, ambiguous, closed)\r\n    533             if tz is not None and getattr(index, 'tz', None) is None:\r\n    534                 index = libts.tz_localize_to_utc(_ensure_int64(index), tz,\r\n--> 535                                                  ambiguous=ambiguous)\r\n    536                 index = index.view(_NS_DTYPE)\r\n    537 \r\n\r\npandas/_libs/tslib.pyx in pandas._libs.tslib.tz_localize_to_utc()\r\n\r\npandas/_libs/tslibs/timezones.pyx in pandas._libs.tslibs.timezones.get_dst_info()\r\n\r\nAttributeError: 'NoneType' object has no attribute 'total_seconds'\r\n```\r\n\r\n\r\n\r\nhttps://github.com/jreback/pandas/commit/97dddbcc26f67c853ec2af3833015940e2c660ff\r\nis a working branch which allows pandas to accept pendulum objects.\r\n\r\nBUT\r\n\r\n1) it needs a lot more testing\r\n2) the interface exposed by pendulum is a bit not-standard compared to both pytz and dateutil, mainly the repr of a tz is custom one, so for example the changes in #18596 should be done first, I suspect a number of things won't work because of this.\r\n3) these would certainly need to be coerced for any actual use within pandas (IOW in a Series).\r\n\r\n```\r\nIn [12]: str(pendulum.now().astimezone('UTC').tz)\r\nOut[12]: '<Timezone [UTC]>'\r\n\r\nIn [13]: str(pytz.utc)\r\nOut[13]: 'UTC'\r\n```\r\n\r\nso if someone wants to take this and run with it would be great."
  }
]
