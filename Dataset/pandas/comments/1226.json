[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5655361",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5655361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5655361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTUzNjE=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T16:46:17Z",
    "updated_at": "2012-05-11T16:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think we should be bundling a json encoder. There's a JSON module in Python since 2.6, and it's simple enough to install other implementations if the user needs e.g. more speed. Let's just have a little shim module that will try to import JSON APIs in order of preference.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5657057",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5657057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5657057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTcwNTc=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T17:58:40Z",
    "updated_at": "2012-05-11T17:58:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver there's a bit of a discussion already at #631, not sure if you're aware of it. I should have added more info in the description though, sorry. The main motivation for including this fork of ujson in pandas is it specifically works with pandas datatypes at a very low level (it is pure C) so it wouldn't be of any benefit to non-pandas users. If a user wants to use their own favourite JSON decoder they would obviously still be free to do so.\n\nHowever I'll admit that high performance JSON serialisation is probably a minor requirement for most people's needs so I'm happy either way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5658107",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5658107",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5658107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTgxMDc=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T18:47:34Z",
    "updated_at": "2012-05-11T18:47:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, I wasn't aware of that. I'm still not wild on the approach - it seems like it will make for a heavier library and a bigger codebase to maintain. But Wes seems to be happy with the idea, so you don't have to worry about my objections ;-)\n\nA couple of practical questions:\n\nYour README has a lot of benchmarks, but I haven't taken the time to work out what they all mean. Can you summarise: what sort of improvement do we see from forking ujson, versus the best we could do with a stock build?\n\nWhat sort of workloads do we envisage - is the bottleneck when you have one huge dataframe, or thousands of smaller ones?\n\nAssuming ujson is still actively developed, how important and how easy will it be to get updates from upstream in the future?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5660088",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5660088",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5660088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjAwODg=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T20:23:50Z",
    "updated_at": "2012-05-11T20:23:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "When working with numpy types:\n- encoding : no real advantage, sometimes even a disadvantage, the numpy to list conversion is very efficient.\n- decoding : about 1.5 to 2x the speed (when working with numeric types).\n\nDataFrames:\n- encoding : depending on the desired format and the nature (shape, size) of the input a speedup of about 2x to 10x. Although there's cases where it's about 20x (e.g. 200x4 zeros).\n- decoding :  again depending on the encoded format a speedup of about 2x to 3x is typical, but can be up to 20x.\n- for time series data encoding & decoding is usually better, or on a par with, encoding the corresponding Python basic type (i.e. a dict). For time series data with datetime indices I'm seeing about a 7x speedup for encoding DataFrames and about 3x for decoding. In the best case, where a transpose would otherwise be necessary, the speedup is about 15 to 20x.\n\nAnd this is on top of ujson already being one of the speediest JSON libraries.\n\nMy specific use case is the need to share lots of Dataframes between Python processes (and other languages) with a mix of sizes. JSON was the natural choice for us because of portability, and we wanted to get the best performance out of it. \n\nujson is a relatively small and stable library. There has only been some minor patches in the last few months and the author seems pretty open to pull requests etc. I'll be merging any applicable upstream changes to my fork and I'd be happy to do the same for pandas if it ends up being integrated. I'm pretty familiar with the ujson code now (it's really only four files) and I'd likewise be happy to deal with any bugs / enhancements coming from pandas usage too. It's worth noting that the library is split in two parts, one being the language agnostic JSON encoder / decoder and the other being the Python bindings. I managed to keep the bulk of my changes limited to the Python bindings and even then they are new functions / new code rather than changes to existing functions. My point being upstream changes should be easy enough to merge.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5660482",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5660482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5660482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NjA0ODI=",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-11T20:42:57Z",
    "updated_at": "2012-05-11T20:42:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, that all sounds pretty reasonable, and I'm satisfied that this is worth doing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5668990",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5668990",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5668990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njg5OTA=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T14:46:30Z",
    "updated_at": "2012-05-12T14:46:30Z",
    "author_association": "MEMBER",
    "body": "This is really excellent work, thanks so much for doing this. Yeah, I was initially a bit hesitant to bundle ujson, but given that more and more people want to do JS<->pandas integration, getting the best possible encoding/decoding performance and being able to access the NumPy arrays directly in the C encoder makes a lot of sense. We'll have to periodically pull in upstream changes from ujson, I guess. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5669906",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5669906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5669906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2Njk5MDY=",
    "user": {
      "login": "vgoklani",
      "id": 180487,
      "node_id": "MDQ6VXNlcjE4MDQ4Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/180487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vgoklani",
      "html_url": "https://github.com/vgoklani",
      "followers_url": "https://api.github.com/users/vgoklani/followers",
      "following_url": "https://api.github.com/users/vgoklani/following{/other_user}",
      "gists_url": "https://api.github.com/users/vgoklani/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vgoklani/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vgoklani/subscriptions",
      "organizations_url": "https://api.github.com/users/vgoklani/orgs",
      "repos_url": "https://api.github.com/users/vgoklani/repos",
      "events_url": "https://api.github.com/users/vgoklani/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vgoklani/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T16:47:44Z",
    "updated_at": "2012-05-12T16:47:44Z",
    "author_association": "NONE",
    "body": "just curious, how would this handle nested JSON? i.e. \n\nj = {'person' : {'first_name' : 'Albert', 'last_name' : 'Einstein', 'occupation': {'job_title': 'Theoretical Physicist', 'institution' : 'Princeton University', 'accomplishments':['Brownian motion', 'Special Relativity', 'General Relativity']}}}\n\ndf = pandas.DataFrame(j)\n\ndf = ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5670090",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5670090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5670090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NzAwOTA=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-12T17:08:18Z",
    "updated_at": "2012-05-12T17:13:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "From a performance standpoint not very well I'm afraid, the numpy with labels handling bombs out if it detects more than two levels of nesting. It probably could be tweaked to deal with this better but when decoding with complex types (i.e. objects and strings) a Python list is needed as an intermediary anyway, so I'm not sure there'd be any advantage.\n\nThe good news is the methods in DataFrame and Series fall back to standard decoding if the numpy version fails so it should still work as expected, albeit without the performance improvements.\n\nJust tested it out to make sure\n\n``` python\nIn [1]: from pandas import DataFrame\nIn [2]: j = {'person' : {'first_name' : 'Albert', 'last_name' : 'Einstein', 'occupation': {'job_title': 'Theoretical Physicist', 'institution' : 'Princeton University', 'accomplishments':['Brownian motion', 'Special Relativity', 'General Relativity']}}}\n\nIn [3]: df = DataFrame(j)\n\nIn [4]: df\nOut[4]: \n<class 'pandas.core.frame.DataFrame'>\nIndex: 3 entries, first_name to occupation\nData columns:\nperson    3  non-null values\ndtypes: object(1)\n\nIn [5]: df['person']['occupation']\nOut[5]: \n{'accomplishments': ['Brownian motion',\n  'Special Relativity',\n  'General Relativity'],\n 'institution': 'Princeton University',\n 'job_title': 'Theoretical Physicist'}\n\nIn [6]: df.to_json()\nOut[6]: '{\"person\":{\"first_name\":\"Albert\",\"last_name\":\"Einstein\",\"occupation\":{\"accomplishments\":[\"Brownian motion\",\"Special Relativity\",\"General Relativity\"],\"institution\":\"Princeton University\",\"job_title\":\"Theoretical Physicist\"}}}'\n\nIn [7]: json = df.to_json()\n\nIn [8]: DataFrame.from_json(json)\nOut[8]: \n<class 'pandas.core.frame.DataFrame'>\nIndex: 3 entries, first_name to occupation\nData columns:\nperson    3  non-null values\ndtypes: object(1)\n\nIn [9]: DataFrame.from_json(json)['person']['occupation']\nOut[9]: \n{u'accomplishments': [u'Brownian motion',\n  u'Special Relativity',\n  u'General Relativity'],\n u'institution': u'Princeton University',\n u'job_title': u'Theoretical Physicist'}\n```\n\nEdit: I should have mentioned the comments above are related to decoding only. Encoding does not suffer the same issues and the performance improvements still apply.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5803456",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5803456",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5803456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDM0NTY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-19T17:40:54Z",
    "updated_at": "2012-05-19T17:40:54Z",
    "author_association": "MEMBER",
    "body": "Hey @Komnomnomnom I started to see if I can merge this and am getting a segfault on my system (Python 2.7.2, NumPy 1.6.1, 64-bit Ubuntu). \n\nThe object returned by series.to_json(orient='columns') in `_check_orient(series, \"columns\", dtype=dtype)` from test_series.py, line 341, appears to be NULL (the gdb backtrace showed the segfault in from_json, but the data returned by to_json is malformed):\n\n```\ntest_from_json_to_json (__main__.TestSeries) ... > /home/wesm/code/pandas/pandas/tests/test_series.py(324)_check_orient()\n-> foo\n(Pdb) type(series.to_json(orient=orient))\nSegmentation fault\n```\n\nI can probably track down the problem, but I figure since you wrote the C code that you'd be more able if you can reproduce the error. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5803565",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5803565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5803565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDM1NjU=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-19T17:55:53Z",
    "updated_at": "2012-05-19T17:55:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi Wes, I just tried with my local clone of my fork and had no segmentation fault (all tests passed when I made my commit / pull request). I'll merge in the latest from pandas master and see what happens.\n\nFor the record I'm using Pyton 2.7.2, numpy 1.6.1 on 64-bit OSX.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5803661",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5803661",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5803661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDM2NjE=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-19T18:07:33Z",
    "updated_at": "2012-05-19T18:07:33Z",
    "author_association": "MEMBER",
    "body": "I put in print statements\n\n```\n  printf(\"%s\\n\", ret);\n\n  printf(\"length: %d\\n\", strlen(ret));\n```\n\nand here's the output\n\n```\n{\"2F4SMHsw4I\":-1.4303216796,\"nMi4KBCmg7\":-1.32552412,\"Molf5Ue3kF\":-1.2705465829,\"9kkHHlfXPA\":-0.8877964843,\"6E3ma1UHv7\":-0.850191537,\"2F5JdoFIqQ\":-0.8013936673,\"VzJclGGLsr\":-0.7985248155,\"cI4bkkV9MH\":-0.7000873004,\"TxS6mJ8UuP\":-0.6864885751,\"2jGSZe0rmF\":-0.6708315768,\"oHooxHeHqu\":-0.6482430589,\"HuqOm1mf57\":-0.624890804,\"bEWcPipOk9\":-0.5669391204,\"zpy7FQCGgp\":-0.3383151716,\"nYIL8VPVT3\":-0.2663003599,\"x0YmXOvJ49\":-0.1767082308,\"bJm3Pbjx14\":-0.1510545428,\"E51nrgW9Yt\":0.0101299091,\"QycwIANnTx\":0.1575097137,\"8wVdQ8RIdQ\":0.2073634038,\"90c5KPKyeS\":0.2539122603,\"eERFnAAd8k\":0.3728367,\"tZLEG6seKV\":0.4332938883,\"ehdTUcPK7A\":0.457039038,\"biYpVDeFiz\":0.5021518808,\"JlVXVA62Zz\":0.5918523437,\"2UTfjHGMEy\":0.6413052158,\"5VOyIV1TYs\":0.6828158342,\"WyNfVlEOK3\":1.1809723971,\"YrW1NS7fCX\":1.3862224711}\nlength: 790\n\npandas/src/ujson/python/objToJSON.c: MARK(1490)\nSegmentation fault\n```\n\nSomehow the result of `PyString_FromString` is malformed, it seems like maybe `ret` is not null-terminated? I suspect this is a red herring, though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5803697",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5803697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5803697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDM2OTc=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-19T18:11:27Z",
    "updated_at": "2012-05-19T18:11:27Z",
    "author_association": "MEMBER",
    "body": "It looks like something is getting corrupted:\n\n```\n14:09 ~/code/pandas  (json-export)$ python pandas/tests/test_ujson.py \nnose.config: INFO: Ignoring files matching ['^\\\\.', '^_', '^setup\\\\.py$']\ntestArrayNumpyExcept (__main__.NumpyJSONTests) ... ok\ntestArrayNumpyLabelled (__main__.NumpyJSONTests) ... ok\ntestArrays (__main__.NumpyJSONTests) ... ok\ntestBool (__main__.NumpyJSONTests) ... ok\ntestBoolArray (__main__.NumpyJSONTests) ... ok\ntestFloat (__main__.NumpyJSONTests) ... ok\ntestFloatArray (__main__.NumpyJSONTests) ... ok\ntestFloatMax (__main__.NumpyJSONTests) ... ok\ntestInt (__main__.NumpyJSONTests) ... ok\ntestIntArray (__main__.NumpyJSONTests) ... ok\ntestIntMax (__main__.NumpyJSONTests) ... ok\ntestDataFrame (__main__.PandasJSONTests) ... > /home/wesm/code/pandas/pandas/tests/test_ujson.py(943)testDataFrame()\n-> foo\n(Pdb) u\n> /home/wesm/epd/lib/python2.7/unittest/case.py(327)run()\n-> testMethod()\n(Pdb) d\n> /home/wesm/code/pandas/pandas/tests/test_ujson.py(943)testDataFrame()\n-> foo\n(Pdb) l\n938     class PandasJSONTests(TestCase):\n939     \n940         def testDataFrame(self):\n941             df = DataFrame([[1,2,3], [4,5,6]], index=['a', 'b'], columns=['x', 'y', 'z'])\n942     \n943  ->         foo\n944             # column indexed\n945             outp = DataFrame(ujson.decode(ujson.encode(df)))\n946             self.assertTrue((df == outp).values.all())\n947             assert_array_equal(df.columns, outp.columns)\n948             assert_array_equal(df.index, outp.index)\n(Pdb) ujson.encode(df)\n'{\"x\":{\"a\":1,\"b\":4},\"y\":{\"a\":2,\"b\":5},\"z\":{\"a\":3,\"b\":6}}'\n(Pdb) print df\nSegmentation fault\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5803848",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5803848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5803848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDM4NDg=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-19T18:35:09Z",
    "updated_at": "2012-05-19T18:35:09Z",
    "author_association": "MEMBER",
    "body": "It looks like the culprit must be `NpyArr_encodeLabels`. I'm not enough of a C guru to see what might be going wrong-- everything works here except encoding Series/DataFrame, and inside there is plenty of twiddling of bytes. Let me know if you manage to figure it out =/\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5803883",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5803883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5803883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDM4ODM=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-19T18:40:26Z",
    "updated_at": "2012-05-19T18:40:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm I've merged to the latest on pandas master, seeing some failed tests but still no segmentation faults, no corruption and those print statements work fine. I'm going to try in a Ubuntu VM see if I can get to the bottom of it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5807308",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5807308",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5807308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDczMDg=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-20T08:23:56Z",
    "updated_at": "2012-05-20T08:23:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ugh, I did not know merging into my fork would flood this pull request. It might be best to delete my current fork and submit a new pull request once this issue is sorted.\n\nThe good news is after a bit of setup I was able to reproduce the memory corruption you are seeing in my Ubuntu VM. It appears to happen even when `NpyArr_encodeLabels` is not involved. There is also some weirdness with timestamp conversion but I think that is a separate issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5808499",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5808499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5808499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDg0OTk=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-20T12:22:41Z",
    "updated_at": "2012-05-20T12:22:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe I've found the problem. The reference count of the object being encoded was mistakenly being decremented twice. I presume it was just chance that the memory layout or garbage collection schedule on my laptop meant the object wasn't being deleted. \n\nThere are a few more things I've noticed (like `build clean` deleting the C files and datetime conversion is now not working) which I'll fix before submitting a new pull request. I'll close this one for now and I'll create a feature branch on a new fork to avoid this mess happening again.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5809590",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5809590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5809590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDk1OTA=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-20T15:15:45Z",
    "updated_at": "2012-05-20T15:15:45Z",
    "author_association": "MEMBER",
    "body": "That will teach you not to develop in master ;) BTW, you don't need to refork-- you can `git reset --hard upstream/master` and force-push that to github. Just make sure you make a branch of your current master with the JSON work\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5809633",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5809633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5809633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDk2MzM=",
    "user": {
      "login": "Komnomnomnom",
      "id": 107748,
      "node_id": "MDQ6VXNlcjEwNzc0OA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/107748?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Komnomnomnom",
      "html_url": "https://github.com/Komnomnomnom",
      "followers_url": "https://api.github.com/users/Komnomnomnom/followers",
      "following_url": "https://api.github.com/users/Komnomnomnom/following{/other_user}",
      "gists_url": "https://api.github.com/users/Komnomnomnom/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Komnomnomnom/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Komnomnomnom/subscriptions",
      "organizations_url": "https://api.github.com/users/Komnomnomnom/orgs",
      "repos_url": "https://api.github.com/users/Komnomnomnom/repos",
      "events_url": "https://api.github.com/users/Komnomnomnom/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Komnomnomnom/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-20T15:23:27Z",
    "updated_at": "2012-05-20T15:23:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ooop too late I re-forked a few minutes ago....hope this doesn't cause further problems... :-/ \n\nBTW if you want to test the fix on your machine the offending line was 278 in `NpyArr_iterEnd`\nhttps://github.com/pydata/pandas/commit/cb7c6ae2d8345cfd036e7deb9d76e25795e4ab9d#L6R279\n(That line should be removed.)\n\nAlso I'm still noticing some timestamp weirdness, I'm guessing there were changes recently in master regarding datetime64 ? Is this work still ongoing?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5809647",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-5809647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 5809647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDk2NDc=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-05-20T15:25:38Z",
    "updated_at": "2012-05-20T15:25:38Z",
    "author_association": "MEMBER",
    "body": "Yes, the work is still ongoing. Test failures in JSON encoding/decoding or elsewhere (pydata/master test suite passes cleanly for me)? I should be able to fix them myself\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19285869",
    "html_url": "https://github.com/pandas-dev/pandas/pull/1226#issuecomment-19285869",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1226",
    "id": 19285869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Mjg1ODY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-11T19:20:01Z",
    "updated_at": "2013-06-11T19:20:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "implemented via #3804\n"
  }
]
