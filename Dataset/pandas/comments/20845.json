[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385324398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20845#issuecomment-385324398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20845",
    "id": 385324398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTMyNDM5OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T06:57:04Z",
    "updated_at": "2018-04-30T06:57:04Z",
    "author_association": "MEMBER",
    "body": "The return type here is part of the documentation (though perhaps could be improved):\r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/categorical.html#string-and-datetime-accessors\r\n\r\nFWIW I don't really see how you could return a Categorical after a concatenation and make guarantees about the returned metadata (ordering comes to mind here). IMO doing concat on a large array of values would in most cases generate a ton of unique values and defeat the purpose of a Categorical in the first place."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385335797",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20845#issuecomment-385335797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20845",
    "id": 385335797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTMzNTc5Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T08:12:49Z",
    "updated_at": "2018-04-30T08:12:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd \r\nThanks for that reference in the docs (had seen it only in individual doc-strings). However, I don't think it's fair to assume what kind of data would result - I can imagine several cases where this would be sensible. I still find something worth considering, but at least there's an easy solution with `.astype('category')`. "
  }
]
