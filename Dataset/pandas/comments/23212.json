[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430756938",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430756938",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430756938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc1NjkzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T19:25:17Z",
    "updated_at": "2018-10-17T19:25:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "My opening statement below:\r\n\r\nIn a lot of places, the caller has some information about the type of `data` that's being passed to create a new PeriodArray. Consider `DatetimeIndex.to_period`. It knows that `data` is an `ndarray[dateime64[ns]]`. I think it's wasteful to do a bunch of dtype and isinstance checks in a forgiving `PeriodArray.__init__`, when you already know you have valid data of a certain form. So in my PR I add a `PeriodArray._from_datetime64` constructor for cases like this, that just calls `dt64arr_to_periodarr` before passing that to `_simple_new`.\r\n\r\nOn having a flexible `__init__`, I don't have too strong of opinions. @jbrockmendel mentioned a desire to have `PeriodArray(list(array))` work, a kind of round-tripping. On my PeriodArray PR, I kind of appreciate that that raises right now, because it highlights places where we're doing an operations that requires a copy / dtype conversion, when we may be able to do it without any copies. But I don't know if that means we should keep it that way in the end. Right now my preferred heuristic is \"Can we do this without copying or inference? If so, we can do it in the init\". So `PeriodArray[PeriodIndex]` or `PeriodArray[Series[Period]]` are both fine. But `PeriodArray[ndarray[object]]` isn't (IMO)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430763380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430763380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430763380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc2MzM4MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T19:46:45Z",
    "updated_at": "2018-10-17T19:46:45Z",
    "author_association": "MEMBER",
    "body": "More concrete, on the PeriodArray PR, there is currently:\r\n\r\n* `__init__`: can take one of:\r\n  * PeriodArray (instance of itself, or a container from which that can be extracted)\r\n  * ordinals + freq\r\n* `_complex_new`: the hodge podge that PeriodIndex can do\r\n* `_simple_new`: same as `__init__` ? (not fully sure) -> so can remove?\r\n* `_from_periods`: from object ndarray (or list) of Periods\r\n* `_from_ordinals`: same as `__init__` -> worth keeping just for the explicit name, or just use `__init__` everywhere for this case? (if we keep it, I think we should forbid EA in this path)\r\n* `_from_datetime64`: specific path for datetime64 array\r\n* `_from_sequence` mapping to `_from_periods` and `_from_factorized` mapping to `__init__` (both for the EA interface)\r\n\r\n@TomAugspurger I think this can be simplified a bit: I would move `_complex_new` out of the class, and make this a helper function somewhere (could maybe also use some refactoring/clean-up in a follow-up). \r\nFurther, I think we can reduce `__init__`, `_simple_new`, and `_from_ordinals` to simply the `__int__` (unless we want to keep `_from_ordinals` for it's more explicit name). \r\nThen, the question is also if we need `_from_periods` since we already have  `_from_sequence` for this, a method we need anyway for the EA interface.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430765527",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430765527",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430765527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc2NTUyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T19:53:43Z",
    "updated_at": "2018-10-17T20:01:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Further, I think we can reduce ...\r\n\r\nJust did this locally. Will push once tests all finish. Right now I have\r\n\r\n- `_from_sequence(cls, scalars: Sequence[Period], dtype: PeriodDtype, copy=False)`\r\n- `_from_factorized(cls, values: ndarray[int], PeriodArray)`\r\n- `_from_datetime64(cls, values: ndarray[datetime64[ns]], freq: Freq, tz: Optional[tzinfo])`\r\n\r\n\r\nThe PeriodArray takes\r\n\r\n- ndarary[int], the physical storage values, and a freq. For datetime / timedelta array this would just be the ndarray of datetime64ns / timedelta64ns\r\n- Series[Period] and Index[Period]. We just unbox these.\r\n\r\neverything else raises. Things look quite nice from a code clarity POV, and from a future code-reuse with DatetimeArray / TimedeltaArray.\r\n\r\nSpecifically, I think removing `_from_ordinals` is OK if we're able to say that `__init__` handles the physical storage without an ambiguity. If we can't say that, (say because `PeriodArray.__init__` takes an ndarray of integers like `[2000, 2001]` and a freq), then we would need to add `_from_ordinals` back for clarity). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430766761",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430766761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430766761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc2Njc2MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T19:57:32Z",
    "updated_at": "2018-10-17T19:57:32Z",
    "author_association": "MEMBER",
    "body": "That sounds good. Only, is the `_from_factorized` a typo? As I thought the factorization values were the ordinals, not Period objects."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430767976",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430767976",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430767976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc2Nzk3Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T20:01:26Z",
    "updated_at": "2018-10-17T20:01:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, a typo, fixed. I wish we could really run MyPy on these types :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430779914",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430779914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430779914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc3OTkxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T20:36:55Z",
    "updated_at": "2018-10-17T20:36:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "private _from_ methods for construction seem fine as long as they are well defined and limited\r\n\r\ni DOnt want to see public from_ methods"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430783528",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430783528",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430783528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc4MzUyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T20:46:26Z",
    "updated_at": "2018-10-17T20:46:26Z",
    "author_association": "MEMBER",
    "body": "> i DOnt want to see public from_ methods\r\n\r\nAnd do you see any in the discussion above? (I don't think the discussion is about this)\r\nThat said, `IntervalAray` has `from_breaks`, `from_array` and `from_tuples`, is that a problem? Or how would you like to see this differently?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430787198",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430787198",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430787198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc4NzE5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T20:57:51Z",
    "updated_at": "2018-10-17T20:57:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "no that’s the point - I thought u were adding public methods "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430788844",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430788844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430788844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDc4ODg0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T21:03:16Z",
    "updated_at": "2018-10-17T21:03:16Z",
    "author_association": "MEMBER",
    "body": "This discussion is about the different internal constructors (and also `__init__`, since that overlaps with that)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430812926",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430812926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430812926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgxMjkyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T22:34:30Z",
    "updated_at": "2018-10-17T22:34:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I understand. However things get conflated and we end up talking about everything.\r\n\r\nFor PeriodArray itself I think you can just adopt the current structure, meaning ``__init__`` is relatively lmited function (IOW it can only accept a PeriodArray itself), and we have a ``period_array`` function that can do inference (e.g. accept a list-like of ndarrays). I think this would satisfy the public interface.\r\n\r\nThe physical values (ordinals) should be by private _from_ constructor. I think arrays of scalars can be converted by ``period_array``. I have an aversion to having a separate construction from a list-like of scalars."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430813753",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430813753",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430813753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgxMzc1Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T22:38:19Z",
    "updated_at": "2018-10-17T22:38:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> IOW it can only accept a PeriodArray itself\r\n\r\nI'm finding it somewhat convenient, and not costly, to also accept `Series[period]` and `PeriodIndex` as well.\r\n\r\nAside from that, it seems like we're in agreement."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430815532",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-430815532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 430815532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgxNTUzMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T22:46:08Z",
    "updated_at": "2018-10-17T22:46:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep that seems ok to me.\r\n\r\njust want these to be consistent as possible across the EA, the model we have now is integer_array (though period_array is doing more)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435452248",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435452248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 435452248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTQ1MjI0OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T17:27:53Z",
    "updated_at": "2018-11-02T17:27:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are wee good with closing this? Should we wait till DatetimeArray is done?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435513074",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435513074",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 435513074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTUxMzA3NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T21:22:09Z",
    "updated_at": "2018-11-02T21:22:09Z",
    "author_association": "MEMBER",
    "body": "A change I've implemented in a WIP DatetimeArray branch that I'd like to get OKed here: putting `dtype` in all of the DatetimeArray/TimedeltaArray/PeriodArray `__init__` methods.\r\n\r\nThis makes code-sharing much easier, we `type(self)(i8values, freq=self.freq, dtype=self.dtype)` works in all cases, in particular without a need to special-case DatetimeTZDtype.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435517856",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435517856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 435517856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTUxNzg1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T21:42:33Z",
    "updated_at": "2018-11-02T21:42:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's fine. Should PeriodArray be refactored to remove freq, and instead\ntake a dtype? Then we'd have a consistent\n\n- data (ndarray)\n- dtype (PeriodDtype, DatetimeTZDtype, datetime64[ns]\n- copy\n\nOn Fri, Nov 2, 2018 at 2:23 PM jbrockmendel <notifications@github.com>\nwrote:\n\n> A change I've implemented in a WIP DatetimeArray branch that I'd like to\n> get OKed here: putting dtype in all of the\n> DatetimeArray/TimedeltaArray/PeriodArray __init__ methods.\n>\n> This makes code-sharing much easier, we type(self)(i8values,\n> freq=self.freq, dtype=self.dtype) works in all cases, in particular\n> without a need to special-case DatetimeTZDtype.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435513074>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIlr11rYJ0fEG1Va82wjnbKCEiSCCks5urLe1gaJpZM4XlBHB>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435531086",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435531086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 435531086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTUzMTA4Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T22:47:13Z",
    "updated_at": "2018-11-02T22:47:13Z",
    "author_association": "MEMBER",
    "body": "> Should PeriodArray be refactored to remove freq\r\n\r\nI don't think so; the others still take both freq and dtype."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435532235",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435532235",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 435532235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTUzMjIzNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T22:54:14Z",
    "updated_at": "2018-11-02T22:54:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Mmm fair point.\n\n________________________________\nFrom: jbrockmendel <notifications@github.com>\nSent: Friday, November 2, 2018 3:47:17 PM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Mention\nSubject: Re: [pandas-dev/pandas] API: Index and Array constructors design (#23212)\n\n\nShould PeriodArray be refactored to remove freq\n\nI don't think so; the others still take both freq and dtype.\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435531086>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHIm3KzEsI067w4UYYQkW-0bWZXoX-ks5urMt1gaJpZM4XlBHB>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435537999",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435537999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 435537999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTUzNzk5OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-02T23:28:38Z",
    "updated_at": "2018-11-02T23:28:38Z",
    "author_association": "MEMBER",
    "body": "Great.  I'll make a PR for this edit after #23433 goes through."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435889830",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-435889830",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 435889830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTg4OTgzMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T14:14:33Z",
    "updated_at": "2018-11-05T14:14:33Z",
    "author_association": "MEMBER",
    "body": "If we want to keep the constructors simple, and not have a bunch of redundant / overlapping keywords, we could also have a specific constructor for this path that can be used in the shared functionality?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437196259",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-437196259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 437196259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE5NjI1OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T23:36:36Z",
    "updated_at": "2018-11-08T23:36:36Z",
    "author_association": "MEMBER",
    "body": "I've been asked to reiterate my thoughts here.\r\n\r\n`Series(...)` is very forgiving/smart about what it accepts.  So is `DataFrame`.  So is `Index` and `DatetimeIndex` and `PeriodIndex` and ... (less so for `MultiIndex` and I'm honestly not sure about `IntervalIndex`, but the pattern/policy is clear).  If pandas-provided EAs are first-class pandas classes, they should behave in the same user-friendly way as everything else.\r\n\r\nI see this as the default, with deviations from it needing justification, not the other way around.\r\n\r\nIn #23493 Tom wrote:\r\n\r\n> I thought we were all on board with the goal of the `DatetimelikeArray.__init__` being no inference and no copy.\r\n\r\nIs it safe to assume that this near-consensus applies to `TimedeltaArray` and `PeriodArray` as well?  How about other future pandas-provided EAs?  For the moment I'm going to assume that it applies to DTA/TDA/PA.\r\n\r\n... why would this be the goal?  You want a constructor that is no-inference and no-copy?  Congratulations, you've just invented `_simple_new`.  You want `_from_sequence` to be the all-purpose any-sequence constructor?  Everywhere else we call that `__init__/__new__`.  This policy makes private the most useful thing and public the least useful thing.  It makes zero sense to me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437235026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23212#issuecomment-437235026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23212",
    "id": 437235026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzIzNTAyNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-09T03:07:00Z",
    "updated_at": "2018-11-09T03:07:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I see this as the default, with deviations from it needing justification,\nnot the other way around.\n\nI (and several other maintainers) appreciate the flexibility of series, but\nhave grown to dislike the edge cases, difficult to understand code, and\nperformance\n\ncosts associated with it. We'll still need the complex code in whatever\nfunction is going to the complex work of taking user-provided input and\nwrangling it\n\ninto an array, but we don't need to pay that cost every time we look create\nan array.\n\n> This policy makes private the most useful thing and public the least\nuseful thing.\n\nHow so? The user-friendly API will still be available via. `pd.array()`.\nWhile things like TimedeltaArray.__init__ are of course public, they won't\nbe recommend for use.\n\nFYI: IntervalIndex only accepts a sequence of Intervals. It doesn't attempt\nany kind of fancy / forgiving initialization (e.g. from a list of tuples).\n\nOn Thu, Nov 8, 2018 at 5:36 PM jbrockmendel <notifications@github.com>\nwrote:\n\n> I've been asked to reiterate my thoughts here.\n>\n> Series(...) is very forgiving/smart about what it accepts. So is DataFrame.\n> So is Index and DatetimeIndex and PeriodIndex and ... (less so for\n> MultiIndex and I'm honestly not sure about IntervalIndex, but the\n> pattern/policy is clear). If pandas-provided EAs are first-class pandas\n> classes, they should behave in the same user-friendly way as everything\n> else.\n>\n> I see this as the default, with deviations from it needing justification,\n> not the other way around.\n>\n> In #23493 <https://github.com/pandas-dev/pandas/pull/23493> Tom wrote:\n>\n> I thought we were all on board with the goal of the\n> DatetimelikeArray.__init__ being no inference and no copy.\n>\n> Is it safe to assume that this near-consensus applies to TimedeltaArray\n> and PeriodArray as well? How about other future pandas-provided EAs? For\n> the moment I'm going to assume that it applies to DTA/TDA/PA.\n>\n> ... why would this be the goal? You want a constructor that is\n> no-inference and no-copy? Congratulations, you've just invented\n> _simple_new. You want _from_sequence to be the all-purpose any-sequence\n> constructor? Everywhere else we call that __init__/__new__. This policy\n> makes private the most useful thing and public the least useful thing. It\n> makes zero sense to me.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/23212#issuecomment-437196259>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHInkwCnx3TXCg1WAvpRD5dY_FD-FQks5utMALgaJpZM4XlBHB>\n> .\n>\n"
  }
]
