[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197779408",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-197779408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 197779408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Nzc3OTQwOA==",
    "user": {
      "login": "benjello",
      "id": 1175927,
      "node_id": "MDQ6VXNlcjExNzU5Mjc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1175927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjello",
      "html_url": "https://github.com/benjello",
      "followers_url": "https://api.github.com/users/benjello/followers",
      "following_url": "https://api.github.com/users/benjello/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjello/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjello/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjello/subscriptions",
      "organizations_url": "https://api.github.com/users/benjello/orgs",
      "repos_url": "https://api.github.com/users/benjello/repos",
      "events_url": "https://api.github.com/users/benjello/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjello/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T09:14:26Z",
    "updated_at": "2016-03-17T09:14:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "To improve performance, the path to follow might be the one indicated in #10517.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197847770",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-197847770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 197847770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Nzg0Nzc3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T12:02:06Z",
    "updated_at": "2016-03-17T12:02:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @kshedden \n\nthis is mostly in python ATM. You always write for correctness first, profile, then if necessary use things like cython in critical sections. pull-requests are welcome for an improved implm.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197856838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-197856838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 197856838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Nzg1NjgzOA==",
    "user": {
      "login": "kshedden",
      "id": 2666691,
      "node_id": "MDQ6VXNlcjI2NjY2OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2666691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kshedden",
      "html_url": "https://github.com/kshedden",
      "followers_url": "https://api.github.com/users/kshedden/followers",
      "following_url": "https://api.github.com/users/kshedden/following{/other_user}",
      "gists_url": "https://api.github.com/users/kshedden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kshedden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kshedden/subscriptions",
      "organizations_url": "https://api.github.com/users/kshedden/orgs",
      "repos_url": "https://api.github.com/users/kshedden/repos",
      "events_url": "https://api.github.com/users/kshedden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kshedden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-17T12:32:30Z",
    "updated_at": "2016-03-17T12:33:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the feedback.  A few comments:\n- Performance is a major issue.  The pandas version is currently not usable for my own use case (files with billions of rows).  FWIW I have a golang version that is about 20x faster (https://github.com/kshedden/datareader) which I use for big files.  Most of the slowness in `pandas.read_sas` is in `process_byte_array_with_data` (already in cython but probably not optimally set up).  I have a local version with improvements that is about 30% faster, but I was looking for a much bigger improvement.  \n- The other open sourced SAS7BDAT readers that I know of , including the one from wizard, don't support compression properly or at all, e.g.: https://github.com/WizardMac/ReadStat/issues/21  I put a lot of time into getting the compression support to work.\n- Date support needs some work, but this should be relatively easy to fix.  There are several different date formats in SAS.  We detect and autoconvert some but not all of them.\n- I don't have documentation for missing value codes, if you can point me to it (i.e. which float values correspond to which codes) I should be able to add it.\n- I just noticed that wizard supports sas7bcat (categorical data format codes), I will look into porting this over at some point.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244629376",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-244629376",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 244629376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYyOTM3Ng==",
    "user": {
      "login": "marks",
      "id": 34566,
      "node_id": "MDQ6VXNlcjM0NTY2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/34566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marks",
      "html_url": "https://github.com/marks",
      "followers_url": "https://api.github.com/users/marks/followers",
      "following_url": "https://api.github.com/users/marks/following{/other_user}",
      "gists_url": "https://api.github.com/users/marks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marks/subscriptions",
      "organizations_url": "https://api.github.com/users/marks/orgs",
      "repos_url": "https://api.github.com/users/marks/repos",
      "events_url": "https://api.github.com/users/marks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-04T21:19:16Z",
    "updated_at": "2016-09-04T21:19:16Z",
    "author_association": "NONE",
    "body": "@kshedden any update on `sas7bcat` support by any chance? Thanks!!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397782701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-397782701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 397782701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Nzc4MjcwMQ==",
    "user": {
      "login": "xappppp",
      "id": 7443937,
      "node_id": "MDQ6VXNlcjc0NDM5Mzc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7443937?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xappppp",
      "html_url": "https://github.com/xappppp",
      "followers_url": "https://api.github.com/users/xappppp/followers",
      "following_url": "https://api.github.com/users/xappppp/following{/other_user}",
      "gists_url": "https://api.github.com/users/xappppp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xappppp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xappppp/subscriptions",
      "organizations_url": "https://api.github.com/users/xappppp/orgs",
      "repos_url": "https://api.github.com/users/xappppp/repos",
      "events_url": "https://api.github.com/users/xappppp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xappppp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-16T03:19:08Z",
    "updated_at": "2018-06-16T03:19:08Z",
    "author_association": "NONE",
    "body": "Is there any updated on sas7bdat? I have a 5GB sas data to read into python. But the performance is still a hassle. Thanks!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414987195",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-414987195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 414987195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk4NzE5NQ==",
    "user": {
      "login": "ofajardo",
      "id": 17498727,
      "node_id": "MDQ6VXNlcjE3NDk4NzI3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17498727?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ofajardo",
      "html_url": "https://github.com/ofajardo",
      "followers_url": "https://api.github.com/users/ofajardo/followers",
      "following_url": "https://api.github.com/users/ofajardo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ofajardo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ofajardo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ofajardo/subscriptions",
      "organizations_url": "https://api.github.com/users/ofajardo/orgs",
      "repos_url": "https://api.github.com/users/ofajardo/repos",
      "events_url": "https://api.github.com/users/ofajardo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ofajardo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T10:29:13Z",
    "updated_at": "2018-08-22T10:34:25Z",
    "author_association": "NONE",
    "body": "@marks  @xappppp @kshedden I have released a wrapper around the ReadStat C library called pyreadstat. Because most of the code is C is faster than pandas. It can also read sas7bcat files. It handles value labels and column labels. Missing values tags will come soon (@kshedden it would be nice if you could provide a sample file with tagged missing values).\r\nhttps://github.com/Roche/pyreadstat"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415037991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-415037991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 415037991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTAzNzk5MQ==",
    "user": {
      "login": "kshedden",
      "id": 2666691,
      "node_id": "MDQ6VXNlcjI2NjY2OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2666691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kshedden",
      "html_url": "https://github.com/kshedden",
      "followers_url": "https://api.github.com/users/kshedden/followers",
      "following_url": "https://api.github.com/users/kshedden/following{/other_user}",
      "gists_url": "https://api.github.com/users/kshedden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kshedden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kshedden/subscriptions",
      "organizations_url": "https://api.github.com/users/kshedden/orgs",
      "repos_url": "https://api.github.com/users/kshedden/repos",
      "events_url": "https://api.github.com/users/kshedden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kshedden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T13:48:44Z",
    "updated_at": "2018-08-22T13:48:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks useful.  I agree that pandas.read_sas is slow,  but I have a few\nquestions about your approach.\n\nThe links on your page to \"module documentation\" are all broken so I can't\ncomment on the API.\n\nDoes it support reading compressed SAS files?  Last time I checked, haven\ncould not do that.\n\nOn your page, you say that Pandas.read_sas does not support reading only\nthe header, but this is not true.  If chunksize or iterator is passed, then\nthe class initialization will read the header and no data, then the data\ncan be retrieved if desired.  All the SAS metadata is available in the\nSAS7BDATReader class instance without reading any data.\n\nBeyond reading the header, I don't know if your approach allows incremental\nreading of data (which is essential for files that do not fit into\nmemory).  Pandas.read_sas supports reading the data in arbitrary chunk\nsizes.\n\nOn your page, you say that Pandas.read_sas does not extract variable\nlabels, but I don't think this is true.  The labels should be available\nthrough the 'columns' attribute of the SAS7BDATReader class instance.\n\nEncoding is very tricky.  I am not aware of any way to take a raw byte\narray and always guess correctly the encoding as you claim.   In a SAS7BDAT\nfile, the correct encoding is stored as a 1 byte code at offset 70, so it\nshouldn't be necessary to guess the encoding in any case.  However the\nmapping from the 1-byte SAS encoding flag to actual encodings is not\npublished as far as I know.  I have been able to reverse engineer a few of\nthe common ones.\n\n\n\nOn Wed, Aug 22, 2018 at 6:29 AM Otto Fajardo <notifications@github.com>\nwrote:\n\n> @marks <https://github.com/marks> @xappppp <https://github.com/xappppp>\n> @kshedden <https://github.com/kshedden> I have released a wrapper around\n> the ReadStat C library called pyreadstat. Because most of the code is C is\n> faster than pandas. It can also read sas7bcat files. It handles value\n> labels and column labels. Missing values tags will come soon.\n> https://github.com/Roche/pyreadstat\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/12654#issuecomment-414987195>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ACiwwySMLGZXTYzKUil7isztthowQov5ks5uTTKVgaJpZM4Hyn_b>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415063773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-415063773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 415063773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTA2Mzc3Mw==",
    "user": {
      "login": "ofajardo",
      "id": 17498727,
      "node_id": "MDQ6VXNlcjE3NDk4NzI3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17498727?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ofajardo",
      "html_url": "https://github.com/ofajardo",
      "followers_url": "https://api.github.com/users/ofajardo/followers",
      "following_url": "https://api.github.com/users/ofajardo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ofajardo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ofajardo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ofajardo/subscriptions",
      "organizations_url": "https://api.github.com/users/ofajardo/orgs",
      "repos_url": "https://api.github.com/users/ofajardo/repos",
      "events_url": "https://api.github.com/users/ofajardo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ofajardo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T15:01:20Z",
    "updated_at": "2018-08-22T15:13:55Z",
    "author_association": "NONE",
    "body": "@kshedden Thanks a lot for your useful comments.\r\n\r\n- I'll repair the documentation page, thanks for reporting that.\r\n- Since I am wrapping readstat, and  currently there is no support for compressed SAS files or  incremental reading of data on readstat, I cannot do those. I hope it's fixed in the future.\r\n- I'll check about pandas reading value labels and reading the header only. Probably I was not careful enough when reading the documentation. I will remove those statements if - as I guess - you are right.\r\n- True that readstat cannot guess encodings 100% of times, but on my hands it did it correctly always except for one file (reading your comment that the encoding is stored in the file itself probably readstat is not guessing but just using that information). However for pandas I had to type in the encoding every time. But maybe again I overlooked something? Again I will remove that statement if wrong.\r\n\r\nWhat is true is that the main motivation was speed as we need to do some heavy lifting."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415087746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-415087746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 415087746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTA4Nzc0Ng==",
    "user": {
      "login": "ofajardo",
      "id": 17498727,
      "node_id": "MDQ6VXNlcjE3NDk4NzI3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/17498727?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ofajardo",
      "html_url": "https://github.com/ofajardo",
      "followers_url": "https://api.github.com/users/ofajardo/followers",
      "following_url": "https://api.github.com/users/ofajardo/following{/other_user}",
      "gists_url": "https://api.github.com/users/ofajardo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ofajardo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ofajardo/subscriptions",
      "organizations_url": "https://api.github.com/users/ofajardo/orgs",
      "repos_url": "https://api.github.com/users/ofajardo/repos",
      "events_url": "https://api.github.com/users/ofajardo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ofajardo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T16:08:18Z",
    "updated_at": "2018-08-22T17:13:19Z",
    "author_association": "NONE",
    "body": "@kshedden \r\n- API documentation fixed (quick fix, have to work on that a bit more later).\r\n- Known limitation section added to the documentation listing what it cannot do at the moment.\r\n- You are right regarding value labels and reading heading only for pandas. However, as far as I can see those features are not documented (https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_sas.html and https://github.com/pandas-dev/pandas/blob/master/pandas/io/sas/sas7bdat.py) or at least I was not able to find them. In my opinion it would be nice to advertise them more clearly. In any case I will remove those statements from my documentation.\r\n- Regarding the encodings, if you can read the encoding from the file, why not using it instead of returning bytes? I found it a bit annoying to have to specify it everytime. Of course it could fail from time to time, but then you can fall back to returning bytes. Well, just an opinion/suggestion."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415411114",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12654#issuecomment-415411114",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12654",
    "id": 415411114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQxMTExNA==",
    "user": {
      "login": "kshedden",
      "id": 2666691,
      "node_id": "MDQ6VXNlcjI2NjY2OTE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2666691?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kshedden",
      "html_url": "https://github.com/kshedden",
      "followers_url": "https://api.github.com/users/kshedden/followers",
      "following_url": "https://api.github.com/users/kshedden/following{/other_user}",
      "gists_url": "https://api.github.com/users/kshedden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kshedden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kshedden/subscriptions",
      "organizations_url": "https://api.github.com/users/kshedden/orgs",
      "repos_url": "https://api.github.com/users/kshedden/repos",
      "events_url": "https://api.github.com/users/kshedden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kshedden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T13:19:20Z",
    "updated_at": "2018-08-23T13:19:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "AFAIK the encoding flag at byte offset 70 in a SAS7BDAT file uses a secret\nmapping between byte values and encodings.  It would be a massive reverse\nengineering effort to recover the mapping entirely.  I just discovered a\nfew common ones by trial and error.  I'm not even sure that we know for\ncertain that this byte value actually represents the encoding.  Like\neverything else in the SAS format, it has been inferred empirically.\n\nI haven't worked on this code in awhile.  It is far too slow for my needs\nand I was not successful at making it faster.\n\nIt would be a good idea for someone to expand on the documentation.  Since\nthe SAS7BDATReader class itself is not part of the pandas public API, the\ndocumentation for it does not show up in the official pandas docs.  But\nsomeone could add a \"Notes\" section in the docstring for read_sas.\n\nOn Wed, Aug 22, 2018 at 12:08 PM Otto Fajardo <notifications@github.com>\nwrote:\n\n> @kshedden <https://github.com/kshedden>\n>\n>    - API documentation fixed (quick fix, have to work on that a bit more\n>    later).\n>    - You are right regarding value labels and reading heading only for\n>    pandas. However, as far as I can see those features are not documented (\n>    https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_sas.html\n>    and\n>    https://github.com/pandas-dev/pandas/blob/master/pandas/io/sas/sas7bdat.py)\n>    or at least I was not able to find them. In my opinion it would be nice to\n>    advertise them more clearly. In any case I will remove those statements\n>    from my documentation.\n>    - Regarding the encodings, if you can read the encoding from the file,\n>    why not using it instead of returning bytes? I found it a bit annoying to\n>    have to specify it everytime. Of course it could fail from time to time,\n>    but then you can fall back to returning bytes. Well, just an\n>    opinion/suggestion.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/12654#issuecomment-415087746>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ACiww9MCdo_pkzUT_dL7vV04DFxuSKicks5uTYIIgaJpZM4Hyn_b>\n> .\n>\n"
  }
]
