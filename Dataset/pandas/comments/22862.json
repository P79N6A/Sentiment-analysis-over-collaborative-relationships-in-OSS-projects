[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425218745",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-425218745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 425218745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIxODc0NQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T19:43:14Z",
    "updated_at": "2018-10-20T01:57:24Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/arrays/__init__.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/arrays/__init__.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/arrays/categorical.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/arrays/categorical.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/arrays/datetimelike.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/arrays/datetimelike.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/arrays/datetimes.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/arrays/datetimes.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/arrays/period.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/arrays/period.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/common.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/dtypes/common.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/concat.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/dtypes/concat.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/dtypes.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/dtypes/dtypes.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/generic.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/dtypes/generic.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/dtypes/missing.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/dtypes/missing.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/indexes/accessors.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/indexes/accessors.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/indexes/base.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/indexes/base.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/indexes/datetimelike.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/indexes/datetimelike.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/indexes/period.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/indexes/period.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/series.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/core/series.py) !\n\n - There are no PEP8 issues in the file [`pandas/io/packers.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/io/packers.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/arithmetic/test_period.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/arithmetic/test_period.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/arrays/test_datetimelike.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/arrays/test_datetimelike.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/arrays/test_period.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/arrays/test_period.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/dtypes/test_concat.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/dtypes/test_concat.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/dtypes/test_dtypes.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/dtypes/test_dtypes.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/test_common.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/extension/test_common.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/test_integer.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/extension/test_integer.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/extension/test_period.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/extension/test_period.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_combine_concat.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/frame/test_combine_concat.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_constructors.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/frame/test_constructors.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_operators.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/frame/test_operators.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_replace.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/frame/test_replace.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_reshape.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/frame/test_reshape.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/indexes/common.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/indexes/common.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/indexes/period/test_astype.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/indexes/period/test_astype.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/indexes/period/test_construction.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/indexes/period/test_construction.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/indexes/period/test_formats.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/indexes/period/test_formats.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/indexes/period/test_indexing.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/indexes/period/test_indexing.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/indexes/period/test_ops.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/indexes/period/test_ops.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/indexes/period/test_tools.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/indexes/period/test_tools.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/io/formats/test_format.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/io/formats/test_format.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/io/test_feather.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/io/test_feather.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/io/test_parquet.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/io/test_parquet.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/reshape/merge/test_merge.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/reshape/merge/test_merge.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/reshape/test_concat.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/reshape/test_concat.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/scalar/test_nat.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/scalar/test_nat.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_api.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/series/test_api.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_apply.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/series/test_apply.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_constructors.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/series/test_constructors.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_datetime_values.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/series/test_datetime_values.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_operators.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/series/test_operators.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_period.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/series/test_period.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/test_base.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/tests/test_base.py) !\n\n - There are no PEP8 issues in the file [`pandas/util/testing.py`](https://github.com/TomAugspurger/pandas/blob/5462bd7c46b93e79b768cdedef38ea165d608a2f/pandas/util/testing.py) !\n\n - Complete extra results for this file :\n\n> file_to_check.py:2537:-258: W605 invalid escape sequence '\\('\nfile_to_check.py:2537:-255: W605 invalid escape sequence '\\)'\n---\n\n\n\n##### Comment last updated on October 20, 2018 at 01:57 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425218763",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-425218763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 425218763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTIxODc2Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T19:43:19Z",
    "updated_at": "2018-09-27T19:43:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Many things are broken right now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425494120",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-425494120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 425494120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTQ5NDEyMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-28T16:37:14Z",
    "updated_at": "2018-09-28T16:37:14Z",
    "author_association": "MEMBER",
    "body": "> the reason you mention this is to not have the confusion with BlockManager _data of DataFrame/Series ?\r\n\r\nI was thinking of #19658"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426045809",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-426045809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 426045809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjA0NTgwOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-01T20:10:49Z",
    "updated_at": "2018-10-01T20:10:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still haven't simplified, still not worth looking at."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428699107",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-428699107",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 428699107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY5OTEwNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T19:22:21Z",
    "updated_at": "2018-10-10T19:22:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated. Hopefully we're down to a single failing test, `pandas/tests/scalar/period/test_period.py::TestMethods::test_add_timestamp_raises`\r\n\r\nThe problem there is in `distpatch_to_extension_ops`. We need to avoid turning either into a list. https://github.com/pandas-dev/pandas/issues/22922"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428703174",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-428703174",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 428703174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODcwMzE3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T19:36:19Z",
    "updated_at": "2018-10-10T19:36:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, a biggish kinda-breaking change is that that the following are now different\r\n\r\n```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: pd.Series([pd.Period(\"2000\", \"A\"), pd.Period('2001', 'A')])\r\nOut[2]:\r\n0    2000\r\n1    2001\r\ndtype: object\r\n\r\nIn [3]: pd.Series(pd.core.arrays.period_array([pd.Period(\"2000\", \"A\"), pd.Period('2001', 'A')]))\r\nOut[3]:\r\n0    2000\r\n1    2001\r\ndtype: period[A-DEC]\r\n```\r\n\r\nPreviously, you could use a `.dt.<foo>` on `Out[2]`. We could add back that ability. I think we should do it with a deprecation warning."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428705225",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-428705225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 428705225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODcwNTIyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T19:43:31Z",
    "updated_at": "2018-10-10T19:43:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "would we not infer [1] to Period ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428708795",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-428708795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 428708795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODcwODc5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T19:55:32Z",
    "updated_at": "2018-10-10T19:55:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> would we not infer [1] to Period ?\r\n\r\nWe don't in Series, we do in Index. I could look into what it would take to support that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428710443",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-428710443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 428710443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODcxMDQ0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T20:01:00Z",
    "updated_at": "2018-10-10T20:01:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "So in `Index.__new__` we do a `lib.infer_dtype(values)`. We would need something similar in the series constructor, maybe somewhere in `_sanitize_array`. Not sure where is best yet."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428715519",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-428715519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 428715519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODcxNTUxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T20:17:04Z",
    "updated_at": "2018-10-10T20:17:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah thought we did some inference on object dtypes "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428768076",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-428768076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 428768076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc2ODA3Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T23:36:14Z",
    "updated_at": "2018-10-10T23:36:14Z",
    "author_association": "MEMBER",
    "body": "> We don't in Series, we do in Index. I could look into what it would take to support that.\r\n\r\nThe more we can do to align the behavior between these constructors (not necessarily this PR) the better off we'll be.  We could go so far as to have EA([...]) perform inference similarly and share tests the same way we do in tests/arithmetic."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429558940",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429558940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429558940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTU1ODk0MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-13T17:13:53Z",
    "updated_at": "2018-10-13T17:13:53Z",
    "author_association": "MEMBER",
    "body": "Are the PeriodDType changes meaningful independently of the rest of this PR?  If so, splitting that out seems like a good way to make real progress, hopefully without racking up more merge conflicts."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429672044",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429672044",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429672044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY3MjA0NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-14T23:20:57Z",
    "updated_at": "2018-10-14T23:20:57Z",
    "author_association": "MEMBER",
    "body": "Oh dang, woops.  I was trying to make a PR on your PR to rebase, but somehow pushed directly to this PR.  Until instructed otherwise, I'm going to avoid touching anything for fear of making things worse."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429672165",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429672165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429672165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTY3MjE2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-14T23:22:43Z",
    "updated_at": "2018-10-14T23:22:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "No worries. I can force push my local version tomorrow if needed.\n\n________________________________\nFrom: jbrockmendel <notifications@github.com>\nSent: Sunday, October 14, 2018 6:21:01 PM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Mention\nSubject: Re: [pandas-dev/pandas] [WIP] PeriodArray (#22862)\n\n\nOh dang, woops. I was trying to make a PR on your PR to rebase, but somehow pushed directly to this PR. Until instructed otherwise, I'm going to avoid touching anything for fear of making things worse.\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429672044>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHIkw01ZpUCUVwF4Le1MHj2yNGOv63ks5uk8bdgaJpZM4W9VVP>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429734679",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429734679",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429734679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTczNDY3OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T07:19:54Z",
    "updated_at": "2018-10-15T07:19:54Z",
    "author_association": "MEMBER",
    "body": "> Are the PeriodDType changes meaningful independently of the rest of this PR?\r\n\r\nI *think* they are tied to becoming an actual ExtensionArray / ExtensionDtype, but not fully sure"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429901790",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429901790",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429901790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkwMTc5MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T15:31:17Z",
    "updated_at": "2018-10-15T15:31:17Z",
    "author_association": "MEMBER",
    "body": "> I think for PeriodArray-only internal implementations, we should maybe mainly be using `_data`?\r\n\r\nCan we use something other than `_data`?  How about something really explicit like `_i8values` or `_initvals`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429906783",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429906783",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429906783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkwNjc4Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T15:43:57Z",
    "updated_at": "2018-10-15T15:43:57Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche @TomAugspurger A few thoughts since an early-morning call didn't work out.\r\n\r\nMy view is increasingly that we should try to get all of Datetime/Timedelta/Period Arrays across the finish line at the same time.  That way we can get an all-at-once transition to \"`.values` is lossless\".\r\n\r\nThings that can be shared in DatetimeLikeArrayMixin rather than PeriodArray should be shared (e.g. #23159)\r\n\r\nThe new thing I'm concerned about is caching.  ATM the Index subclasses override several of the EA properties with cache_readonly (think `_isnan`, which is used by arithmetic ops).  When moving to composition, we'll want to somehow trick EA's backing Indexes into caching."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429908834",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429908834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429908834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkwODgzNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T15:49:37Z",
    "updated_at": "2018-10-15T15:49:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The new thing I'm concerned about is caching. [...] we'll want to somehow trick EA's backing Indexes into caching.\r\n\r\nI'm not sure I follow. The EAs are mutable, so they can't be cached. Once an array (ndarray or EA) is inside an Index, we assume (but don't check) that the values aren't changed.\r\n\r\n```python\r\nIn [6]: arr = np.array([1., 2., 3.])\r\n\r\nIn [7]: idx = pd.Index(arr, copy=False)\r\n\r\nIn [8]: idx.hasnans\r\nOut[8]: False\r\n\r\nIn [9]: arr[0] = np.nan\r\n\r\nIn [10]: idx\r\nOut[10]: Float64Index([nan, 2.0, 3.0], dtype='float64')\r\n\r\nIn [11]: idx.hasnans\r\nOut[11]: False\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429909039",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429909039",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429909039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkwOTAzOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T15:50:13Z",
    "updated_at": "2018-10-15T15:50:13Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel are you on gitter?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429909161",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429909161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429909161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkwOTE2MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T15:50:36Z",
    "updated_at": "2018-10-15T15:50:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> My view is increasingly that we should try to get all of Datetime/Timedelta/Period Arrays across the finish line at the same time.\r\n\r\nTo be clear, the alternative is what I have been doing here: a bunch of `TODO(datetimearray): remove this` when everything is done. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429909393",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429909393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429909393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkwOTM5Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T15:51:12Z",
    "updated_at": "2018-10-15T15:51:12Z",
    "author_association": "MEMBER",
    "body": "> My view is increasingly that we should try to get all of Datetime/Timedelta/Period Arrays across the finish line at the same time. \r\n\r\nBut that would then even give a bigger PR in the end than this one already is? \r\nOf course you can move things out of that final PR, but not everything. Eg in the take/concat PR, you are moving something that is then not even used in the PR, because it will only be used once we actually do the split. So I am not sure I find that a good thing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429910412",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429910412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429910412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkxMDQxMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T15:54:04Z",
    "updated_at": "2018-10-15T15:54:04Z",
    "author_association": "MEMBER",
    "body": "Regarding caching: it is indeed a similar problem as with Index backed by numpy array. \r\n\r\nBut one thing I think @jbrockmendel is pointing to, is that some of the arithmetic / other implementations are currently using cached attributes, so if they move to the Array class (where we won't use cached attributes), that means loosing some of this benefit of caching. \r\n\r\nFor me that would be an acceptable downside of moving arithmetic / type-specific implementations to the Arrays."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429916311",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429916311",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429916311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkxNjMxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T16:10:37Z",
    "updated_at": "2018-10-15T16:10:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "> For me that would be an acceptable downside of moving arithmetic / type-specific implementations to the Arrays.\r\n\r\nwell no this is not acceptable\r\ntheee routines like null checking are used extensively and this would be a perf hit virtually evrywhere in pandas"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429917251",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429917251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429917251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkxNzI1MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T16:13:14Z",
    "updated_at": "2018-10-15T16:13:14Z",
    "author_association": "MEMBER",
    "body": "We have the same performance hit for floats? \r\n\r\nSo what do you propose as an alternative? \r\nThe only alternative I can think of, is implement caching on the datetimelike Array classes, and then deal with invalidating the cache in things like `__setitem__` or any other method that changes the array."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429924910",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429924910",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429924910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkyNDkxMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T16:36:07Z",
    "updated_at": "2018-10-15T16:36:07Z",
    "author_association": "MEMBER",
    "body": "> But that would then even give a bigger PR in the end than this one already is?\r\n\r\nThat's why I've been doing it in small pieces."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429925113",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429925113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429925113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkyNTExMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T16:36:44Z",
    "updated_at": "2018-10-15T16:36:44Z",
    "author_association": "MEMBER",
    "body": "> I'm not sure I follow. The EAs are mutable, so they can't be cached\r\n\r\nRight, that's the \"somehow trick\" part of the problem."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429929090",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-429929090",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 429929090,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTkyOTA5MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-15T16:48:29Z",
    "updated_at": "2018-10-15T16:48:29Z",
    "author_association": "MEMBER",
    "body": "> So what do you propose as an alternative?\r\n\r\nWell, inheritance would solve the problem.  Heck, we could do inheritance _and_ composition, have PeriodIndex.values return a PeriodArray"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430813243",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-430813243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 430813243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgxMzI0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T22:36:02Z",
    "updated_at": "2018-10-17T22:40:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I'm reasonably happy with the PeriodArray constructors now and their uses now. To summarize,\r\n\r\n- `period_array` is pretty flexible. Does everything `PeriodIndex.__new__`, except for range generation. There are aspects I dislike (like the handling of floats) but it's reasonable.\r\n- _`from_sequence(cls, scalars: Sequence[Period], dtype: PeriodDtype, copy=False)`\r\n- `_from_factorized(cls, values: ndarray[int], PeriodArray)`\r\n- `_from_datetime64(cls, values: ndarray[datetime64[ns]], freq: Freq, tz: Optional[tzinfo])`\r\n- `PeriodArray.__init__(values: Union[Series[period], Index[period], PeriodArray, ndarray[int]], freq: Union[str, Tick])` \r\n\r\nIn particular, `PeriodArray.__init__` is always fast. It can always be done with 0 copy and 0 inference. I like that property.\r\n\r\nI wouldn't recommend reviewing yet, aside from a glance at how the constructors are used in `arrays/period.py` and `indexes/period.py`. I'd still like to clean things up a bit more before taking anyone's time.\r\n\r\nI'm probably going to move on to the blockers listed in #23185 now. I've added xfails for those blockers."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430816792",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-430816792",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 430816792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDgxNjc5Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T22:52:34Z",
    "updated_at": "2018-10-17T22:52:34Z",
    "author_association": "MEMBER",
    "body": "That summary is useful, thanks.  I'm looking forward to re-reviewing after pieces are split off.  Dumb but relevant reason: my ancient laptop struggles to load the full diff."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430980918",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22862#issuecomment-430980918",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22862",
    "id": 430980918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDk4MDkxOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-18T11:58:13Z",
    "updated_at": "2018-10-18T11:58:13Z",
    "author_association": "MEMBER",
    "body": "> I wouldn't recommend reviewing yet, aside from a glance at how the constructors are used in arrays/period.py and indexes/period.py. I'd still like to clean things up a bit more before taking anyone's time.\r\n\r\nWhat aspects do you consider not ready? Or what are the things you want to further change? (apart from getting the tests pass)\r\n\r\nThe constructors look good to me. Is there a reason you kept `_simple_new` as an alias?"
  }
]
