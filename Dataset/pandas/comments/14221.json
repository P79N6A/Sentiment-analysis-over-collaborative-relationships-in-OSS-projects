[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246981239",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14221#issuecomment-246981239",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14221",
    "id": 246981239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk4MTIzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T11:15:35Z",
    "updated_at": "2016-09-14T11:16:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "well we have an entire module for this: https://github.com/pydata/pandas/blob/master/pandas/util/testing.py\n\nnot to mention that the entire test suite uses things like this.\n\ntry\n\n```\nfrom pandas .util import testing as tm\ntm.assert_frame_equal\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246988193",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14221#issuecomment-246988193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14221",
    "id": 246988193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk4ODE5Mw==",
    "user": {
      "login": "rs2",
      "id": 4407787,
      "node_id": "MDQ6VXNlcjQ0MDc3ODc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4407787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rs2",
      "html_url": "https://github.com/rs2",
      "followers_url": "https://api.github.com/users/rs2/followers",
      "following_url": "https://api.github.com/users/rs2/following{/other_user}",
      "gists_url": "https://api.github.com/users/rs2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rs2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rs2/subscriptions",
      "organizations_url": "https://api.github.com/users/rs2/orgs",
      "repos_url": "https://api.github.com/users/rs2/repos",
      "events_url": "https://api.github.com/users/rs2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rs2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T11:48:44Z",
    "updated_at": "2016-09-14T11:48:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "How would you build & visualize the expected DataFrame? The `table_literal` approach seems to be appropriate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246988585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14221#issuecomment-246988585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14221",
    "id": 246988585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Njk4ODU4NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T11:50:31Z",
    "updated_at": "2016-09-14T11:51:32Z",
    "author_association": "MEMBER",
    "body": "@rs2 Just the same as you otherwise build a small dataframe, eg `pd.DataFrame(..)` with eg a dictionary. \nIf you want to ahve something visual like the above, you can always pass such a string to `read_csv` or `read_fwf`\n\nSee also https://github.com/pydata/pandas/issues/9895 for proposal to make the testing functions more 'officially' public\n"
  }
]
