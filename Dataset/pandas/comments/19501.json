[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362584677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19501#issuecomment-362584677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19501",
    "id": 362584677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjU4NDY3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T13:22:07Z",
    "updated_at": "2018-02-02T13:22:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "inplace popping of rows is going to be very inefficient, and I don't thing we should encourage that.\r\n\r\nI think the best way to do this is with boolean masking. That covers your use cases 1 and 2, and I don't think we should encourage 3 :)\r\n\r\nThis could be useful as a cookbook entry, \"How do I pop rows from a DataFrame?\", answering that you don't."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/362657186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19501#issuecomment-362657186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19501",
    "id": 362657186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjY1NzE4Ng==",
    "user": {
      "login": "jaradc",
      "id": 12854767,
      "node_id": "MDQ6VXNlcjEyODU0NzY3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12854767?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaradc",
      "html_url": "https://github.com/jaradc",
      "followers_url": "https://api.github.com/users/jaradc/followers",
      "following_url": "https://api.github.com/users/jaradc/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaradc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaradc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaradc/subscriptions",
      "organizations_url": "https://api.github.com/users/jaradc/orgs",
      "repos_url": "https://api.github.com/users/jaradc/repos",
      "events_url": "https://api.github.com/users/jaradc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaradc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T17:54:56Z",
    "updated_at": "2018-02-02T17:56:11Z",
    "author_association": "NONE",
    "body": "I don't disagree with anything you said here @TomAugspurger :) I believe `pop` is usually reserved for a concept of popping 1 of something (ex: 1 row, 1 item, 1 column, etc.) so I'm not sure modifying the existing pop function is appropriate in that context.\r\n\r\nA cookbook entry would also be a great help if there's a better way to do this. My main idea is having a convenience method to be able to do this kind of action in one call - pop rows or columns in-place (delete from existing dataframe) and return"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403779729",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19501#issuecomment-403779729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19501",
    "id": 403779729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzc3OTcyOQ==",
    "user": {
      "login": "ittVannak",
      "id": 40808955,
      "node_id": "MDQ6VXNlcjQwODA4OTU1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/40808955?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ittVannak",
      "html_url": "https://github.com/ittVannak",
      "followers_url": "https://api.github.com/users/ittVannak/followers",
      "following_url": "https://api.github.com/users/ittVannak/following{/other_user}",
      "gists_url": "https://api.github.com/users/ittVannak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ittVannak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ittVannak/subscriptions",
      "organizations_url": "https://api.github.com/users/ittVannak/orgs",
      "repos_url": "https://api.github.com/users/ittVannak/repos",
      "events_url": "https://api.github.com/users/ittVannak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ittVannak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-10T10:42:34Z",
    "updated_at": "2018-07-10T10:45:38Z",
    "author_association": "NONE",
    "body": "@jaradc I would like to add that I too thought this would be useful. \r\n\r\nI just distributed my first package https://github.com/kdggavkc/pandas-refract for this purpose, but would prefer to see syntax in pandas like:\r\n\r\n`target_df = df.pop(df['target_column'] == 'target_value', axis=0)`\r\n\r\nIt's not providing functionality that doesn't exist in pandas, but to me its syntax I would have thought existed already. Currently you have to slice based on a condition, and then slice on the inverse (mask and ~mask) to split a df this way.\r\n\r\n@TomAugspurger any thoughts here? how open are we too allowing above syntax?) "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404615811",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19501#issuecomment-404615811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19501",
    "id": 404615811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDYxNTgxMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T18:58:13Z",
    "updated_at": "2018-07-12T18:58:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kdggavkc I may misunderstand, but your pop looks different.\n\ndict.pop / DataFrame.pop take a label. This issue was about expanding `pop`\nto take multiple keys and an axis argument.\nYour pop seems to take a mask.\n\nOn Tue, Jul 10, 2018 at 5:42 AM, kdggavkc <notifications@github.com> wrote:\n\n> @jaradc <https://github.com/jaradc> I would like to add that I too\n> thought this would be useful.\n>\n> I just distributed my first package https://github.com/kdggavkc/\n> pandas-refract for this purpose, but would prefer to see syntax in pandas\n> like:\n>\n> target_df = df.pop(df['target_column'] == 'target_value')\n>\n> It's not providing functionality that doesn't exist in pandas, but to me\n> its syntax I would have thought existed already. Currently you have to\n> slice based on a condition, and then slice on the inverse (mask and ~mask)\n> to split a df this way.\n>\n> @TomAugspurger <https://github.com/TomAugspurger> any thoughts here? how\n> open are we too allowing above syntax?)\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/19501#issuecomment-403779729>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIhAmZqLF3kw62oPjPwkywdnaPRgyks5uFIUhgaJpZM4R2gsF>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404682952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19501#issuecomment-404682952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19501",
    "id": 404682952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDY4Mjk1Mg==",
    "user": {
      "login": "ittVannak",
      "id": 40808955,
      "node_id": "MDQ6VXNlcjQwODA4OTU1",
      "avatar_url": "https://avatars2.githubusercontent.com/u/40808955?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ittVannak",
      "html_url": "https://github.com/ittVannak",
      "followers_url": "https://api.github.com/users/ittVannak/followers",
      "following_url": "https://api.github.com/users/ittVannak/following{/other_user}",
      "gists_url": "https://api.github.com/users/ittVannak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ittVannak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ittVannak/subscriptions",
      "organizations_url": "https://api.github.com/users/ittVannak/orgs",
      "repos_url": "https://api.github.com/users/ittVannak/repos",
      "events_url": "https://api.github.com/users/ittVannak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ittVannak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T23:38:42Z",
    "updated_at": "2018-07-12T23:38:42Z",
    "author_association": "NONE",
    "body": "@TomAugspurger no you are correct. I piped in here because I saw someone had a similar idea and didn't want to make a separate issue. If you feel it's more appropriate for me to do so I certainly can. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445570983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19501#issuecomment-445570983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19501",
    "id": 445570983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTU3MDk4Mw==",
    "user": {
      "login": "jmarshall9120",
      "id": 30184747,
      "node_id": "MDQ6VXNlcjMwMTg0NzQ3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/30184747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmarshall9120",
      "html_url": "https://github.com/jmarshall9120",
      "followers_url": "https://api.github.com/users/jmarshall9120/followers",
      "following_url": "https://api.github.com/users/jmarshall9120/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmarshall9120/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmarshall9120/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmarshall9120/subscriptions",
      "organizations_url": "https://api.github.com/users/jmarshall9120/orgs",
      "repos_url": "https://api.github.com/users/jmarshall9120/repos",
      "events_url": "https://api.github.com/users/jmarshall9120/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmarshall9120/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-09T20:57:04Z",
    "updated_at": "2018-12-09T20:57:04Z",
    "author_association": "NONE",
    "body": "December calling.. did we ever get a cookbook entry for this?"
  }
]
