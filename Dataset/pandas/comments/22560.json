[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/417826041",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-417826041",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 417826041,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzgyNjA0MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-01T02:20:49Z",
    "updated_at": "2018-09-01T02:20:49Z",
    "author_association": "MEMBER",
    "body": "Is this related to the “fold” arg added in py3?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418209388",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-418209388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 418209388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODIwOTM4OA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T00:28:06Z",
    "updated_at": "2018-09-04T00:28:06Z",
    "author_association": "MEMBER",
    "body": "> Is this related to the “fold” arg added in py3?\r\n\r\nYup fairly similar. The `ambiguous=True/False` argument is essentially similar to the `fold=0/1` argument in py3. \r\n\r\nThese `AmbiguousTimeError`s stem from internal routines that transform a timestamp to an ambiguous time. I think it's best we try to return a sensible time based on the original timeseries instead of leaving the user with an error they cannot control. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418222226",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-418222226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 418222226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODIyMjIyNg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-09-04T02:23:21Z",
    "updated_at": "2018-09-05T02:22:03Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22560?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@a5fe9cf`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22560/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/22560?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master   #22560   +/-   ##\n=========================================\n  Coverage          ?   92.04%           \n=========================================\n  Files             ?      169           \n  Lines             ?    50789           \n  Branches          ?        0           \n=========================================\n  Hits              ?    46747           \n  Misses            ?     4042           \n  Partials          ?        0\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.45% <100%> (?)` | |\n| #single | `42.29% <33.33%> (?)` | |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22560?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/22560/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZWxpa2UucHk=) | `97.77% <100%> (ø)` | |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/22560/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.56% <100%> (ø)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22560?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22560?src=pr&el=footer). Last update [a5fe9cf...c03792e](https://codecov.io/gh/pandas-dev/pandas/pull/22560?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418252532",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-418252532",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 418252532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODI1MjUzMg==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T06:14:54Z",
    "updated_at": "2018-09-04T06:14:54Z",
    "author_association": "MEMBER",
    "body": "Ready for another look @jbrockmendel when you get the chance."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418578102",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-418578102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 418578102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODU3ODEwMg==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T02:22:05Z",
    "updated_at": "2018-09-05T02:22:05Z",
    "author_association": "NONE",
    "body": "Hello @mroeschke! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/indexes/datetimelike.py`](https://github.com/mroeschke/pandas/blob/c03792e22c10a1affdfde6c119c728b4451f1434/pandas/core/indexes/datetimelike.py) !\n\n - There are no PEP8 issues in the file [`pandas/core/indexes/datetimes.py`](https://github.com/mroeschke/pandas/blob/c03792e22c10a1affdfde6c119c728b4451f1434/pandas/core/indexes/datetimes.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/indexes/datetimes/test_timezones.py`](https://github.com/mroeschke/pandas/blob/c03792e22c10a1affdfde6c119c728b4451f1434/pandas/tests/indexes/datetimes/test_timezones.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/reshape/merge/test_merge.py`](https://github.com/mroeschke/pandas/blob/c03792e22c10a1affdfde6c119c728b4451f1434/pandas/tests/reshape/merge/test_merge.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/scalar/test_nat.py`](https://github.com/mroeschke/pandas/blob/c03792e22c10a1affdfde6c119c728b4451f1434/pandas/tests/scalar/test_nat.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/scalar/timestamp/test_timezones.py`](https://github.com/mroeschke/pandas/blob/c03792e22c10a1affdfde6c119c728b4451f1434/pandas/tests/scalar/timestamp/test_timezones.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/series/test_datetime_values.py`](https://github.com/mroeschke/pandas/blob/c03792e22c10a1affdfde6c119c728b4451f1434/pandas/tests/series/test_datetime_values.py) !\n\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418707870",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-418707870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 418707870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODcwNzg3MA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T12:12:42Z",
    "updated_at": "2018-09-05T12:12:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would recommend against adding an `is_dst` method. If this is for resolving ambiguous times, it would be preferable to use something more akin to a `fold` method, since there are several situations where an ambiguity cannot be resolved by querying DST or not (base offset shifts).\r\n\r\nIn general DST/not DST is only a proxy for the real information you want in all cases I can think of - the offset, the tzname or which side of an ambiguity you are on. All of those can be independently queried and/or specified without mentioning DST."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418770781",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-418770781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 418770781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODc3MDc4MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T15:20:19Z",
    "updated_at": "2018-09-05T15:20:19Z",
    "author_association": "MEMBER",
    "body": "> These AmbiguousTimeErrors stem from internal routines that transform a timestamp to an ambiguous time. \r\n\r\nI'm not clear on what problem this is solving.  Can you give an example of the internal routines that produce ambiguous times?\r\n\r\n@pganssle and I don't always see eye-to-eye on how to treat public vs private attributes, but in general if he's got a strong opinion, it is worth listening to."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418785915",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-418785915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 418785915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODc4NTkxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T16:01:41Z",
    "updated_at": "2018-09-05T16:01:41Z",
    "author_association": "MEMBER",
    "body": "I also wanted to mention that we deliberately added an `ambiguous` keyword and deprecated `is/infer_dst` because not all ambiguities are DST issues, if I remember well (https://github.com/pandas-dev/pandas/pull/7963, there was some discussion about it, but I am not very familiar with timezone handling details), so we should maybe consider that issue here as well. But I see that @pganssle in the meantime already noted something similar :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419334705",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-419334705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 419334705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTMzNDcwNQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-07T06:17:18Z",
    "updated_at": "2018-09-07T06:19:30Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel \r\n> Can you give an example of the internal routines that produce ambiguous times?\r\n\r\nWhen rounding a tz-aware date time to a particular frequency, essentially the steps are:\r\n\r\n* convert the date to a naive timestamp\r\n* round the i8 value to the frequency\r\n* relocalize the i8 value to the timezone\r\n\r\nYou can't necessarily convert to UTC first because it can affect the rounding (unless I am missing something).\r\n\r\nSo in #18946, a date that sits on the DST border `2017-10-29 02:00:00+02:00` that's rounded to an hour (`'H'`):\r\n\r\n* Convert to `2017-10-29 02:00:00`\r\n* Round to the nearest hour (`2017-10-29 02:00:00`)\r\n* Relocalize to `2017-10-29 02:00:00+02:00` or `2017-10-29 02:00:00+01:00`?\r\n\r\nI guess #18946 can be solved by added an `ambiguous` kwarg to `round` also. However the routine above is the cause for other issues as well #18885, but that _may_ be solved by converting to UTC first.\r\n\r\nUsing DST information may be a too hand-wavy solution to solve both #18946 and #18885. At minimum, I had also though having a `is_dst` would be a nice-to-have enhancement for DatetimeIndexes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419655489",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-419655489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 419655489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTY1NTQ4OQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-08T16:27:49Z",
    "updated_at": "2018-09-08T16:27:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke I'm guessing that rounding issues in UTC is mainly at the day-or-higher level, right? Since rounding to the nearest minute or hour will cause no problems.\r\n\r\nI think the correct solution here is to introduce the `fold` concept into pandas, and start deprecating `pytz`-isms.\r\n\r\nI see a few good ways forward:\r\n\r\n1. Write `fold` compatible wrappers for `pytz` and start deprecating `pytz`-isms like `localize` and `normalize`.\r\n2. Write wrappers for `dateutil` time zones that expose some `pytz`-isms (which you can deprecate), and stop using `pytz` entirely.\r\n3. Implement a third time zone library optimized for array types and drop both `pytz` and `dateutil`.\r\n\r\nIn all cases, I think `fold` semantics is the best way to go.\r\n\r\nI am very strongly hoping that within a year I'll be able to get a fast, compiled Rust or C backend for many of `dateutil`'s modules, including `tz`, which should make it a lot cheaper to make bulk function calls (particularly if I expose a C API or similar so you don't have any Python function call overhead), but number 3 might still be the best option since it's likely that supporting something that would work *really* well for array types in `dateutil` *and* work really well for normal Python implementations would be more complicated than just maintaining two separate libraries."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419683465",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-419683465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 419683465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTY4MzQ2NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-09T01:12:54Z",
    "updated_at": "2018-09-09T01:12:54Z",
    "author_association": "MEMBER",
    "body": "> You can't necessarily convert to UTC first because it can affect the rounding (unless I am missing something).\r\n\r\nI think there may be an implicit assumption in here that should be made explicit.  Does the user want the rounding to be based on wall time or actual time?  (My intuition is actual time)\r\n\r\n```\r\nts = pd.Timestamp('2017-10-29 02:59:00+0200', tz='Europe/Madrid')\r\nm = pd.Timedelta(minutes=1)\r\n\r\n>>> ts + m\r\nTimestamp('2017-10-29 02:00:00+0100', tz='Europe/Madrid')\r\n>>> ts - 59*m\r\nTimestamp('2017-10-29 02:00:00+0200', tz='Europe/Madrid')\r\n```\r\n\r\nIf I were rounding `ts` to the nearest hour, it seems clear I'd want the one 1 minute away rather than 59 minutes away, despite the fact they have the same difference in wall time.\r\n\r\nIs this intuition not applicable to the case you're considering?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419684301",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-419684301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 419684301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTY4NDMwMQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-09T01:35:09Z",
    "updated_at": "2018-09-09T01:35:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel I think for time scales of hours or less it's probably actual time, but time scale of days they almost certainly want wall time.\n\nImagine rounding to midnight UTC, then going back to PST/PDT. No one wants to round to 17:00 sometimes and 16:00 others.\n\nTo be honest it's probably always wall time, but on sufficiently small time scales the two are equivalent."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419684594",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22560#issuecomment-419684594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22560",
    "id": 419684594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTY4NDU5NA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-09T01:42:56Z",
    "updated_at": "2018-09-09T01:42:56Z",
    "author_association": "MEMBER",
    "body": "I agree with @pganssle and would imagine users would want to round based on wall time in general.\r\n\r\nThanks for the feedback guys. I'm convinced I need to surface a `fold` (or `ambiguous` in pandas terms) argument in `round` then. Closing."
  }
]
