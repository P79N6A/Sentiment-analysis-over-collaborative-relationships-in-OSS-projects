[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299625205",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16263#issuecomment-299625205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16263",
    "id": 299625205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTYyNTIwNQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T08:41:02Z",
    "updated_at": "2017-05-06T08:41:02Z",
    "author_association": "MEMBER",
    "body": "This is related to passing the ``level=`` argument when there is a non-Multi``Index``. Before, the argument would be just discarded:\r\n\r\n```python\r\nIn [3]: pd.DataFrame(np.random.randn(4,4), columns=['A', 'B', 'C', 'D']).reset_index(level='not present')\r\nOut[3]: \r\n   index         A         B         C         D\r\n0      0  0.057457  0.065932  0.276079  0.305390\r\n1      1 -0.562195 -0.385750 -0.228925 -0.426511\r\n2      2  0.377559 -0.837031 -0.384840 -0.305262\r\n3      3 -0.670057 -0.737446  0.561989  0.528754\r\n\r\nIn [4]: pd.DataFrame(np.random.randn(4,4), columns=['A', 'B', 'C', 'D']).reset_index(level=['not present'])\r\nOut[4]: \r\n   index         A         B         C         D\r\n0      0  0.613373 -0.169316 -0.592379  1.050764\r\n1      1  0.069762  0.995308  0.030434 -0.361300\r\n2      2 -0.526487  0.165054  0.015452  0.954447\r\n3      3  0.585677 -1.435712 -0.298280 -0.581473\r\n\r\n```\r\n\r\n but a7a0574a0bcb8a4c65ed7f5006972e24f90ae3df changed the behaviour so that now, vice-versa, even valid level names/indices are not considered.\r\n\r\nI can provide a PR, the question is what we want to do with non-existent level names: raise or ignore?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299625706",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16263#issuecomment-299625706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16263",
    "id": 299625706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTYyNTcwNg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T08:48:38Z",
    "updated_at": "2017-05-06T08:48:38Z",
    "author_association": "MEMBER",
    "body": "> I can provide a PR, the question is what we want to do with non-existent level names: raise or ignore?\r\n\r\nSorry, the question is already answered by the behaviour when there is a ``MultiIndex``:\r\n\r\n```python\r\nIn [5]: pd.DataFrame(np.random.randn(4,4), columns=['A', 'B', 'C', 'D']).set_index(['A', 'B']).reset_index(level=['A', 'E'])\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n/home/nobackup/repo/pandas/pandas/core/indexes/multi.py in _get_level_number(self, level)\r\n    610                                  'level number' % level)\r\n--> 611             level = self.names.index(level)\r\n    612         except ValueError:\r\n\r\nValueError: 'E' is not in list\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-5-f1686d7d4dfc> in <module>()\r\n----> 1 pd.DataFrame(np.random.randn(4,4), columns=['A', 'B', 'C', 'D']).set_index(['A', 'B']).reset_index(level=['A', 'E'])\r\n\r\n/home/nobackup/repo/pandas/pandas/core/frame.py in reset_index(self, level, drop, inplace, col_level, col_fill)\r\n   3016             if not isinstance(level, (tuple, list)):\r\n   3017                 level = [level]\r\n-> 3018             level = [self.index._get_level_number(lev) for lev in level]\r\n   3019         if isinstance(self.index, MultiIndex):\r\n   3020             if len(level) < self.index.nlevels:\r\n\r\n/home/nobackup/repo/pandas/pandas/core/frame.py in <listcomp>(.0)\r\n   3016             if not isinstance(level, (tuple, list)):\r\n   3017                 level = [level]\r\n-> 3018             level = [self.index._get_level_number(lev) for lev in level]\r\n   3019         if isinstance(self.index, MultiIndex):\r\n   3020             if len(level) < self.index.nlevels:\r\n\r\n/home/nobackup/repo/pandas/pandas/core/indexes/multi.py in _get_level_number(self, level)\r\n    612         except ValueError:\r\n    613             if not isinstance(level, int):\r\n--> 614                 raise KeyError('Level %s not found' % str(level))\r\n    615             elif level < 0:\r\n    616                 level += self.nlevels\r\n\r\nKeyError: 'Level E not found'\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299630057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16263#issuecomment-299630057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16263",
    "id": 299630057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTYzMDA1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T10:17:23Z",
    "updated_at": "2017-05-06T10:17:23Z",
    "author_association": "MEMBER",
    "body": "@m4g005 Thanks for the report! And @toobaz for the quick analysis. \r\nThis is indeed a regression (although it seems it was more working by accident before)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299640486",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16263#issuecomment-299640486",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16263",
    "id": 299640486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY0MDQ4Ng==",
    "user": {
      "login": "schwab",
      "id": 1517342,
      "node_id": "MDQ6VXNlcjE1MTczNDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1517342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schwab",
      "html_url": "https://github.com/schwab",
      "followers_url": "https://api.github.com/users/schwab/followers",
      "following_url": "https://api.github.com/users/schwab/following{/other_user}",
      "gists_url": "https://api.github.com/users/schwab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schwab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schwab/subscriptions",
      "organizations_url": "https://api.github.com/users/schwab/orgs",
      "repos_url": "https://api.github.com/users/schwab/repos",
      "events_url": "https://api.github.com/users/schwab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schwab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T13:37:48Z",
    "updated_at": "2017-05-06T13:47:35Z",
    "author_association": "NONE",
    "body": "Perhaps it was working by accident before, but the new behavior of completely dropping the index column when reset index is called seems problematic.  Additionally, according to the docs for reset_index \"For a standard index, the index name will be used...\"  which indicates now it's even out of sync with the documented spec.  It also brings up the important question, if we do want to keep this behavior going forward, then what is the new \"correct\" way to remove a single column index from a dataframe while keeping its data?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299642588",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16263#issuecomment-299642588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16263",
    "id": 299642588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY0MjU4OA==",
    "user": {
      "login": "schwab",
      "id": 1517342,
      "node_id": "MDQ6VXNlcjE1MTczNDI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1517342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/schwab",
      "html_url": "https://github.com/schwab",
      "followers_url": "https://api.github.com/users/schwab/followers",
      "following_url": "https://api.github.com/users/schwab/following{/other_user}",
      "gists_url": "https://api.github.com/users/schwab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/schwab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/schwab/subscriptions",
      "organizations_url": "https://api.github.com/users/schwab/orgs",
      "repos_url": "https://api.github.com/users/schwab/repos",
      "events_url": "https://api.github.com/users/schwab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/schwab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T14:15:04Z",
    "updated_at": "2017-05-06T14:16:23Z",
    "author_association": "NONE",
    "body": "@m4g005 To get this working the same in both version, you can try it without the level name.\r\n\r\n`data.reset_index(inplace=True)  \r\n\r\ndata`\r\n\r\n|    |         A |         B |         C |         D |\r\n|----|-----------|-----------|-----------|-----------|\r\n|  0 |  1.11556  |  1.21351  | -0.185124 |  0.868765 |\r\n|  1 |  1.63402  |  0.322284 |  0.299842 | -0.174827 |\r\n|  2 | -1.21852  | -0.35271  |  0.773597 |  1.62995  |\r\n|  3 | -0.416348 | -0.113201 | -0.151533 | -1.01033  |"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299645983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16263#issuecomment-299645983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16263",
    "id": 299645983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY0NTk4Mw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T15:10:14Z",
    "updated_at": "2017-05-06T15:10:14Z",
    "author_association": "MEMBER",
    "body": "> then what is the new \"correct\" way to remove a single column index from a dataframe while keeping its data?\r\n\r\nThis is going to be fixed, no doubt."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/299667849",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16263#issuecomment-299667849",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16263",
    "id": 299667849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5OTY2Nzg0OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-06T21:46:59Z",
    "updated_at": "2017-05-06T21:46:59Z",
    "author_association": "MEMBER",
    "body": "Indeed, @schwab, as I confirmed above, this is a regression, it is supposed to work, and @toobaz already made a PR to fix it."
  }
]
