[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390780538",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21158#issuecomment-390780538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21158",
    "id": 390780538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc4MDUzOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T20:58:05Z",
    "updated_at": "2018-05-21T20:58:05Z",
    "author_association": "MEMBER",
    "body": "I couldn't reproduce your error with the information provide (was getting others) - can you please update it so the example can be fully copy/pasted to reproduce?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390781968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21158#issuecomment-390781968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21158",
    "id": 390781968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDc4MTk2OA==",
    "user": {
      "login": "mivade",
      "id": 2805515,
      "node_id": "MDQ6VXNlcjI4MDU1MTU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2805515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mivade",
      "html_url": "https://github.com/mivade",
      "followers_url": "https://api.github.com/users/mivade/followers",
      "following_url": "https://api.github.com/users/mivade/following{/other_user}",
      "gists_url": "https://api.github.com/users/mivade/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mivade/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mivade/subscriptions",
      "organizations_url": "https://api.github.com/users/mivade/orgs",
      "repos_url": "https://api.github.com/users/mivade/repos",
      "events_url": "https://api.github.com/users/mivade/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mivade/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-21T21:03:05Z",
    "updated_at": "2018-05-21T21:03:05Z",
    "author_association": "NONE",
    "body": "I'm not sure what errors you are getting. Here's a version with the JSON contents directly in the Python file as a dict:\r\n\r\n```python\r\nfrom pandas import show_versions\r\nfrom pandas.io.json import json_normalize\r\n\r\nprint(show_versions())\r\n\r\nd = {\r\n  \"subject\": {\r\n    \"pairs\": {\r\n      \"A1-A2\": {\r\n        \"atlases\": {\r\n          \"avg.corrected\": {\r\n            \"region\": None,\r\n            \"x\": 49.151580810546875,\r\n            \"y\": -33.148521423339844,\r\n            \"z\": 27.572303771972656\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nnormed = json_normalize(d)\r\nprint(normed)\r\n```\r\n\r\nThis results in the same error."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390856679",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21158#issuecomment-390856679",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21158",
    "id": 390856679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDg1NjY3OQ==",
    "user": {
      "login": "ssikdar1",
      "id": 3411882,
      "node_id": "MDQ6VXNlcjM0MTE4ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3411882?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssikdar1",
      "html_url": "https://github.com/ssikdar1",
      "followers_url": "https://api.github.com/users/ssikdar1/followers",
      "following_url": "https://api.github.com/users/ssikdar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssikdar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssikdar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssikdar1/subscriptions",
      "organizations_url": "https://api.github.com/users/ssikdar1/orgs",
      "repos_url": "https://api.github.com/users/ssikdar1/repos",
      "events_url": "https://api.github.com/users/ssikdar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssikdar1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T04:08:49Z",
    "updated_at": "2018-05-22T04:17:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Running his code I have the same error as well.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/io/json/normalize.py#L79\r\n\r\nI think the problem is here.\r\n\r\nIf I add two print statements:\r\n\r\n```\r\n             if not isinstance(v, dict):\r\n                 print(\"cond1: %s\" % (level != 0))\r\n                 print(\"cond2: %s\" % (v is None))\r\n\r\n                  if level != 0:  # so we skip copying for top level, common case\r\n                      print(new_d)\r\n                      v = new_d.pop(k)\r\n                      new_d[newkey] = v\r\n                  if v is None:  # pop the key if the value is None\r\n                      print(new_d)\r\n                      new_d.pop(k)\r\n                  continue\r\n```\r\nI get the following printout:\r\n\r\ncond1: True\r\ncond2: True\r\n{'region': None, 'x': 49.151580810546875, 'y': -33.148521423339844, 'z': 27.572303771972656}\r\n{'x': 49.151580810546875, 'y': -33.148521423339844, 'z': 27.572303771972656, 'subject.pairs.A1-A2.atlases.avg.corrected.region': None}\r\n\r\nSo new_d is getting popped twice which causes an error on the second time?\r\n\r\n\r\n\r\nI added a continue in the code:\r\n              \r\n  if level != 0:  # so we skip copying for top level, common case\r\n                    v = new_d.pop(k)\r\n                    new_d[newkey] = v\r\n                    continue\r\n\r\nand the code looks to run fine.\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390857024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21158#issuecomment-390857024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21158",
    "id": 390857024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDg1NzAyNA==",
    "user": {
      "login": "ssikdar1",
      "id": 3411882,
      "node_id": "MDQ6VXNlcjM0MTE4ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3411882?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssikdar1",
      "html_url": "https://github.com/ssikdar1",
      "followers_url": "https://api.github.com/users/ssikdar1/followers",
      "following_url": "https://api.github.com/users/ssikdar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssikdar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssikdar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssikdar1/subscriptions",
      "organizations_url": "https://api.github.com/users/ssikdar1/orgs",
      "repos_url": "https://api.github.com/users/ssikdar1/repos",
      "events_url": "https://api.github.com/users/ssikdar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssikdar1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T04:11:38Z",
    "updated_at": "2018-05-22T04:12:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also as mivade pointed out these lines of code were changed in  #20399\r\n\r\nhttps://github.com/pandas-dev/pandas/pull/20399/files#diff-9c654764f5f21c8e9d58d9ebf14de86dR83"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391219068",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21158#issuecomment-391219068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21158",
    "id": 391219068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTIxOTA2OA==",
    "user": {
      "login": "lauraathena",
      "id": 878936,
      "node_id": "MDQ6VXNlcjg3ODkzNg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/878936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lauraathena",
      "html_url": "https://github.com/lauraathena",
      "followers_url": "https://api.github.com/users/lauraathena/followers",
      "following_url": "https://api.github.com/users/lauraathena/following{/other_user}",
      "gists_url": "https://api.github.com/users/lauraathena/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lauraathena/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lauraathena/subscriptions",
      "organizations_url": "https://api.github.com/users/lauraathena/orgs",
      "repos_url": "https://api.github.com/users/lauraathena/repos",
      "events_url": "https://api.github.com/users/lauraathena/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lauraathena/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T04:48:12Z",
    "updated_at": "2018-05-23T04:48:12Z",
    "author_association": "NONE",
    "body": "I ran into this same error, when the level != 0 and v is None, the code tries to pop k twice. \r\n\r\n@ssikdar1 Do you know what the purpose is of popping k in the first place is? If the intention was to not include keys whose value is None then your update undermines that intention. It will only remove keys with None values at the first level of the dictionary. That inconsistency may be confusing to users.\r\n\r\nI would either make sure to exclude all keys whose value is None, e.g.:\r\n```\r\n               if level != 0:  # so we skip copying for top level, common case\r\n                    v = new_d.pop(k)\r\n                    if v is None: # don't keep the item if the value is None\r\n                        continue\r\n                    new_d[newkey] = v\r\n                if v is None:  # pop the key if the value is None\r\n                    new_d.pop(k)\r\n```\r\nor perhaps not bother popping k when v is None in the first place. I don't know what the intention was in removing key's with None values is, so this is my guess."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391577983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21158#issuecomment-391577983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21158",
    "id": 391577983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTU3Nzk4Mw==",
    "user": {
      "login": "ssikdar1",
      "id": 3411882,
      "node_id": "MDQ6VXNlcjM0MTE4ODI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3411882?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssikdar1",
      "html_url": "https://github.com/ssikdar1",
      "followers_url": "https://api.github.com/users/ssikdar1/followers",
      "following_url": "https://api.github.com/users/ssikdar1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssikdar1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssikdar1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssikdar1/subscriptions",
      "organizations_url": "https://api.github.com/users/ssikdar1/orgs",
      "repos_url": "https://api.github.com/users/ssikdar1/repos",
      "events_url": "https://api.github.com/users/ssikdar1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssikdar1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-24T03:39:20Z",
    "updated_at": "2018-05-24T03:39:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lauraathena  I see your point. Based on the test cases the previous commit is using it looks like they were only considering None values at the first level of the dictionary.\r\n\r\n```\r\n   def test_missing_field(self, author_missing_data):\r\n        # GH20030: Checks for robustness of json_normalize - should\r\n        # unnest records where only the first record has a None value\r\n```\r\n```\r\n # GH20030: Checks that None values are dropped in nested_to_record\r\n +        # to prevent additional columns of nans when passed to DataFrame\r\n +        data = [\r\n +            {'info': None,\r\n +             'author_name':\r\n +             {'first': 'Smith', 'last_name': 'Appleseed'}\r\n +             },\r\n +            {'info':\r\n +                {'created_at': '11/08/1993', 'last_updated': '26/05/2012'},\r\n +             'author_name':\r\n +                {'first': 'Jane', 'last_name': 'Doe'}\r\n +             }\r\n +        ]\r\n```\r\n\r\nhttps://github.com/pandas-dev/pandas/issues/20030\r\n[{k: {'alpha': 'foo', 'beta': 'bar'}}, {k: None}],\r\n\r\nBut I'm also not sure what they wanted the expected behavior to be for when level != 0. \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392151786",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21158#issuecomment-392151786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21158",
    "id": 392151786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjE1MTc4Ng==",
    "user": {
      "login": "Pdubbs",
      "id": 3259720,
      "node_id": "MDQ6VXNlcjMyNTk3MjA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3259720?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pdubbs",
      "html_url": "https://github.com/Pdubbs",
      "followers_url": "https://api.github.com/users/Pdubbs/followers",
      "following_url": "https://api.github.com/users/Pdubbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/Pdubbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Pdubbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Pdubbs/subscriptions",
      "organizations_url": "https://api.github.com/users/Pdubbs/orgs",
      "repos_url": "https://api.github.com/users/Pdubbs/repos",
      "events_url": "https://api.github.com/users/Pdubbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Pdubbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-25T19:03:09Z",
    "updated_at": "2018-05-25T19:03:09Z",
    "author_association": "NONE",
    "body": "@lauraathena @ssikdar1 \r\nI believe there intention was to drop keys where the value is everywhere none, as it will for level = 0:\r\n```\r\nmy_json = [{'a':1,'b':2,'c':None,'d':None},{'a':1,'b':None,'c':3,'d':None}]\r\njson_normalize(my_json)\r\n\ta\tb\tc\r\n0\t1\t2.0\tNaN\r\n1\t1\tNaN\t3.0\r\n```\r\n\r\nbut would strongly like to keep an option to preserve the 0.22.0 behavior (for level = 0 and level != 0):\r\n```\r\nmy_json = [{'a':1,'b':2,'c':None,'d':None},{'a':1,'b':None,'c':3,'d':None}]\r\njson_normalize(my_json)\r\n\ta\tb\tc\td\r\n0\t1\t2.0\tNaN\tNone\r\n1\t1\tNaN\t3.0\tNone\r\n```\r\n\r\nMy use case involve processing batches of jsons from an api and then storing them with others. Handling exceptions for when a given batch happens to be everywhere None and is suddenly missing one or more columns would add a large headache. I imagine this is relatively common."
  }
]
