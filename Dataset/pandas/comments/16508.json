[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304135229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16508#issuecomment-304135229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16508",
    "id": 304135229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNTIyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T21:55:01Z",
    "updated_at": "2017-05-25T21:55:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "duplicate of https://github.com/pandas-dev/pandas/issues/12859\r\n\r\nThis is as expected, mixed int-float get upcasted to float. In particular on a cross section you an get upcasting generally as you are cutting across mixed dtypes (you won't get upcast if its a single dtype).\r\n\r\nI don't think there is an easy way to get around this, though for perf reasons you never want this to be ``object``."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304137900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16508#issuecomment-304137900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16508",
    "id": 304137900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEzNzkwMA==",
    "user": {
      "login": "makmanalp",
      "id": 161965,
      "node_id": "MDQ6VXNlcjE2MTk2NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/161965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makmanalp",
      "html_url": "https://github.com/makmanalp",
      "followers_url": "https://api.github.com/users/makmanalp/followers",
      "following_url": "https://api.github.com/users/makmanalp/following{/other_user}",
      "gists_url": "https://api.github.com/users/makmanalp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makmanalp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makmanalp/subscriptions",
      "organizations_url": "https://api.github.com/users/makmanalp/orgs",
      "repos_url": "https://api.github.com/users/makmanalp/repos",
      "events_url": "https://api.github.com/users/makmanalp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makmanalp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T22:07:57Z",
    "updated_at": "2017-05-25T22:14:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I see. More philosophically, if we had a string or datetime or other dtype column in there, wouldn't the dtype of the result of the .iloc[] necessarily have to be object? It seems like that's the more sensible thing to happen. Besides, the implicit upcasting behavior on .apply or .iloc or .to_dict is surprising and not easy to track down.\r\n\r\nOr is this upcasting behavior considered normal because .iloc[] returns a series, so in which case we've flipped things sideways and switched from the multi-columnar (and thus multi-dtype) dataframe format to a single \"column\" (which has one dtype, unless we make it be \"object\")?\r\n\r\nI hit the .to_dict() version almost immediately after :-) I'm trying to clean out float numbers that are polluting some json output, essentially, and these are two things that I ran into back to back."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304141969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16508#issuecomment-304141969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16508",
    "id": 304141969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE0MTk2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T22:30:12Z",
    "updated_at": "2017-05-25T22:30:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "if you had *any* other mixed dtypes it would upcast appropriately (to object if needed)\r\n\r\nthis comes fundamentally from numpy\r\n\r\n```\r\nIn [1]: np.array([1, 1.0])\r\nOut[1]: array([ 1.,  1.])\r\n```\r\n\r\nsince holding mixed dtypes in a 1-d is not generally supported, this is how it is.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/304145031",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16508#issuecomment-304145031",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16508",
    "id": 304145031,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE0NTAzMQ==",
    "user": {
      "login": "makmanalp",
      "id": 161965,
      "node_id": "MDQ6VXNlcjE2MTk2NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/161965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makmanalp",
      "html_url": "https://github.com/makmanalp",
      "followers_url": "https://api.github.com/users/makmanalp/followers",
      "following_url": "https://api.github.com/users/makmanalp/following{/other_user}",
      "gists_url": "https://api.github.com/users/makmanalp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makmanalp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makmanalp/subscriptions",
      "organizations_url": "https://api.github.com/users/makmanalp/orgs",
      "repos_url": "https://api.github.com/users/makmanalp/repos",
      "events_url": "https://api.github.com/users/makmanalp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makmanalp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T22:48:32Z",
    "updated_at": "2017-05-25T22:48:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, thank you!"
  }
]
