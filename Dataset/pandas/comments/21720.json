[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402265426",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21720#issuecomment-402265426",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21720",
    "id": 402265426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjI2NTQyNg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-03T19:18:35Z",
    "updated_at": "2018-07-03T19:18:35Z",
    "author_association": "MEMBER",
    "body": "May be related to the discussion in #20442"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402265562",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21720#issuecomment-402265562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21720",
    "id": 402265562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjI2NTU2Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-03T19:19:08Z",
    "updated_at": "2018-07-03T19:21:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "As far as I can tell, the difference is due to the call to `pandas.core.algorithms.factorize` (which is necessary for object data in DFs, not least due to that ancient numpy issue numpy/numpy#641).\r\n```\r\nfrom pandas.core.algorithms import factorize\r\ns = pd.Series([np.nan, 3, 3, None, np.nan], dtype=object)\r\nfactorize(s.values)\r\n# (array([-1,  0,  0, -1, -1], dtype=int64), array([3], dtype=object))\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402269367",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21720#issuecomment-402269367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21720",
    "id": 402269367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjI2OTM2Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-03T19:34:46Z",
    "updated_at": "2018-07-03T19:34:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is documented behaviour for `factorize` - https://pandas.pydata.org/pandas-docs/stable/generated/pandas.factorize.html\r\n\r\n> Note: Even if thereâ€™s a missing value in values, uniques will not contain an entry for it. \r\n\r\nHowever, `Series.duplicated` works without such a `factorize`-call, and gets directly fed to the appropriate hashtable, which - for objects - does apparently distinguish `np.nan` and `None`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427820381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21720#issuecomment-427820381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21720",
    "id": 427820381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzgyMDM4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T12:52:17Z",
    "updated_at": "2018-10-08T12:52:17Z",
    "author_association": "MEMBER",
    "body": "As also commented on the PR, there is a similar difference between `unique` and `factorize`:\r\n\r\n```\r\nIn [1]: s = pd.Series([np.nan, 3, 3, None, np.nan], dtype=object)\r\n\r\nIn [2]: pd.unique(s)\r\nOut[2]: array([nan, 3, None], dtype=object)\r\n\r\nIn [4]: pd.factorize(s)\r\nOut[4]: (array([-1,  0,  0, -1, -1]), Int64Index([3], dtype='int64'))\r\n```\r\n\r\nFactorize treats them all as identical (since it needs to substitute all missing values with -1), while unique treats them as separate values. \r\n\r\n`unique` still takes a different code path than `Series.duplicated` from the original post (`Series.duplicated` is implemented through `pd.core.algoritms.duplicated`, which uses the `pd._lib.hashtable.duplicated_{{dtype}}` methods. \r\nSo not exactly the same, but the same problem that surfaces.\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427925656",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21720#issuecomment-427925656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21720",
    "id": 427925656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzkyNTY1Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T17:59:03Z",
    "updated_at": "2018-10-08T17:59:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \r\n\r\nThe difference between `unique` and `factorize` is documented, at least, although I don't know what exactly `factorize` is used for, and whether those two functions should maybe be married like I'm suggesting in #22986 with `ignore_na`.\r\n\r\n(The discrepancy for `unique` has at least no direct bugs like here for `.duplicated` - `df.unique` does not exist and `pd.unique` doesn't handle DFs)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428964997",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21720#issuecomment-428964997",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21720",
    "id": 428964997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODk2NDk5Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T13:56:03Z",
    "updated_at": "2018-10-11T13:56:03Z",
    "author_association": "MEMBER",
    "body": "Yes, it is true that for `unique` and `factorize` this is more or less expected/documented, while the `duplicated` is clearly a bug (it's just that is is coming from a same underlying difference in handling of NaN values)"
  }
]
