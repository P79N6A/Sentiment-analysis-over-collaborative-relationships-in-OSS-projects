[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18057341",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18057341",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18057341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDU3MzQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T11:55:24Z",
    "updated_at": "2013-05-17T11:55:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "normally the generated masks have the same index as to what you are doing, e.g in your example in the SO question.\n\nI think `.iloc` could/should do this, does make sense. There is an alignment step for the mask in `.where`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18060169",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18060169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18060169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDYwMTY5",
    "user": {
      "login": "snth",
      "id": 652285,
      "node_id": "MDQ6VXNlcjY1MjI4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/652285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snth",
      "html_url": "https://github.com/snth",
      "followers_url": "https://api.github.com/users/snth/followers",
      "following_url": "https://api.github.com/users/snth/following{/other_user}",
      "gists_url": "https://api.github.com/users/snth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snth/subscriptions",
      "organizations_url": "https://api.github.com/users/snth/orgs",
      "repos_url": "https://api.github.com/users/snth/repos",
      "events_url": "https://api.github.com/users/snth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T13:07:12Z",
    "updated_at": "2013-05-17T13:07:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's an example to summarise the current behaviours:\n\n``` python\nlocs = np.arange(4)\nnums = 2**locs\nreps = map(bin, nums)\ndf = pd.DataFrame({'locs':locs, 'nums':nums}, reps)\nprint df\nfor idx in [None, 'index', 'locs']:\n    mask = (df.nums>2).values\n    if idx:\n        mask = pd.Series(mask, list(reversed(getattr(df, idx))))\n    for method in ['', '.loc', '.iloc']:\n        try:\n            if method:\n                accessor = getattr(df, method[1:])\n            else:\n                accessor = df\n            ans = bin(accessor[mask]['nums'].sum())\n        except Exception, e:\n            ans = str(e)\n        print \"{:>5s}: df{}[mask].sum()=={}\".format(idx, method, ans)\n```\n\nwith output\n\n``` python\n        locs  nums\n0b1        0     1\n0b10       1     2\n0b100      2     4\n0b1000     3     8\n\n None: df[mask].sum()==0b1100\n None: df.loc[mask].sum()==0b1100\n None: df.iloc[mask].sum()==0b1100\nindex: df[mask].sum()==0b11\nindex: df.loc[mask].sum()==0b11\nindex: df.iloc[mask].sum()==0b11\n locs: df[mask].sum()==Unalignable boolean Series key provided\n locs: df.loc[mask].sum()==Unalignable boolean Series key provided\n locs: df.iloc[mask].sum()==Unalignable boolean Series key provided\n```\n\nIf I'm understanding your discussion correctly then in the last line the output should also be 0b11.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18060526",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18060526",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18060526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDYwNTI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T13:14:47Z",
    "updated_at": "2013-05-17T13:14:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes...that looks right, if you happen to think of a simple example where you would actually _use_ this pls post that\n\nkeep in mind that masks are the same length as what you are indexing, so I don't think there is ever ambiguity, but I could be wrong\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18061493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18061493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18061493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDYxNDkz",
    "user": {
      "login": "snth",
      "id": 652285,
      "node_id": "MDQ6VXNlcjY1MjI4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/652285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snth",
      "html_url": "https://github.com/snth",
      "followers_url": "https://api.github.com/users/snth/followers",
      "following_url": "https://api.github.com/users/snth/following{/other_user}",
      "gists_url": "https://api.github.com/users/snth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snth/subscriptions",
      "organizations_url": "https://api.github.com/users/snth/orgs",
      "repos_url": "https://api.github.com/users/snth/repos",
      "events_url": "https://api.github.com/users/snth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T13:33:28Z",
    "updated_at": "2013-05-17T13:33:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fair enough, I can't actually think of anything. It just seems that by symmetry the behaviour should be there.\n\nSimilarly, it doesn't seem quite right that in line 6 of my example above, `df.iloc[mask]` is actually realigning the mask based on mask.index rather than throwing an error.\n\nGiven these observations, I would probably vote for the following behaviour:\n- df[mask] should only work with .values in the order they're given and do no realignment. Perhaps for performance reasons.\n- df.loc[mask] should work as it currently does and realign based on mask.index if present. If mask.index is of the wrong type it should throw an Error.\n- df.iloc[mask] should realign based on mask.index if present and of integer type. Otherwise throw an error.\n\nIt's true that I haven't thought about this for more than 10 minutes though so if there are many use cases where this causes a problem then nevermind.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18061671",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18061671",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18061671,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDYxNjcx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T13:37:08Z",
    "updated_at": "2013-05-17T13:37:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it's possible there could be an ambiguity, if the index is in a different order (e.g. was taken from somewhere else where it may well mean the location rather than the label).\n\nAlso, I'm given a `/core/frame.py:1943: UserWarning: Boolean Series key will be reindexed to match DataFrame index.` somewhere along the way messing with integer index booleans.\n\nCorrect me if I wrong, but isn't \"realign based on mask.index\" different from location?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18063256",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18063256",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18063256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDYzMjU2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:06:38Z",
    "updated_at": "2013-05-17T14:06:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still thinking about this, but I think a nice _feature_ of boolean masking is that since we don't ever have an ambiguity whether its label or position based (as the mask must be the same length as what you are indexing), then it can be used in either `.loc` or `.iloc`. I don't think restricting this is a good idea. \n\nThe basic question is do we drop the index effectively (and make it not matter) when its the right length?\n\ne.g. should\n\n`df[mask_with_index]` and `df[mask_ndarray]` be the same?\n\nor the first align (currently I retract my earlier statement, I don't think there is an alignment on the index itself)\n\nbut this may depend, e.g. `iloc/loc` don't align, but I think `[]` might....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18063362",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18063362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18063362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDYzMzYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:08:17Z",
    "updated_at": "2013-05-17T14:08:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd  you make a good point, but to my knowledge that is the issue with an unlabeled index, the user has to make sure its in the _right_ order, pandas cannot help (but the case we are talking about it _could_ help, by making sure the index is aligned)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18063667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18063667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18063667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDYzNjY3",
    "user": {
      "login": "snth",
      "id": 652285,
      "node_id": "MDQ6VXNlcjY1MjI4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/652285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snth",
      "html_url": "https://github.com/snth",
      "followers_url": "https://api.github.com/users/snth/followers",
      "following_url": "https://api.github.com/users/snth/following{/other_user}",
      "gists_url": "https://api.github.com/users/snth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snth/subscriptions",
      "organizations_url": "https://api.github.com/users/snth/orgs",
      "repos_url": "https://api.github.com/users/snth/repos",
      "events_url": "https://api.github.com/users/snth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:13:19Z",
    "updated_at": "2013-05-17T14:22:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback With regards to the alignment, see my example above. I threw in the reversed(...) to see whether it realigns based on the labels or not. The results above show that [], .loc and .iloc all perform an alignment step based on the **labels** when these are in a different order. Therefore I think the fact that the length is the same is lulling you into a false sense of security.\n\nApologies if my example isn't clear. I thought the binary representation was a nice way of concisely summarising which items were selected or not. The bottom line is that the results differ between ndarray and pd.Series because in the pd.Series case the .index is used to do an alignment step first.\n\nAlso there's mistake in my output because it should read:\n\n```\ndf[mask]['nums'].sum()==...\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18064362",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18064362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18064362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDY0MzYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:24:34Z",
    "updated_at": "2013-05-17T14:24:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@snth you are right....I was _eye-balling_ the code....as its a failry tricky path\n\nok....so bottom line is wether to make `iloc` align on the labels or position (for a boolean mask), but that itself is somewhat of an issue, the is certainly probably and likely that the index is not integer-based, so then `iloc` should throw an error\n\nSo from the original SO question, this should then raise?\n\n```\nIn [1]: df = pd.DataFrame(range(5), list('ABCDE'), columns=['a'])\n\nIn [2]: mask = (df.a%2 == 0)\n\nIn [3]: mask\nOut[3]: \nA     True\nB    False\nC     True\nD    False\nE     True\nName: a, dtype: bool\n\nIn [4]: df.iloc[mask]\nOut[4]: \n   a\nA  0\nC  2\nE  4\n```\n\nWhat about this?\n\n```\nIn [5]: mask.nonzero()\nOut[5]: (array([0, 2, 4]),)\n\nIn [6]: mask.nonzero()[0]\nOut[6]: array([0, 2, 4])\n\nIn [7]: df.iloc[mask.nonzero()[0]]\nOut[7]: \n   a\nA  0\nC  2\nE  4\n\nIn [8]: df.iloc[Series(mask.nonzero()[0])]\nOut[8]: \n   a\nA  0\nC  2\nE  4\n\nIn [9]: Series(mask.nonzero()[0])\nOut[9]: \n0    0\n1    2\n2    4\ndtype: int64\n```\n\nI there is NO alignment happening, instead its using the **values** to actually index\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18064955",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18064955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18064955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDY0OTU1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:34:21Z",
    "updated_at": "2013-05-17T14:34:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think iloc should throw an error if it's not integer based, it should _definitely_ use position.\n\nThese integers needn't be in order, just like the labels needn't be in order.\n\nPutting an array to `iloc` should do what it does now, but a _boolean_ Series is a different beast:\n\n```\nmsk = pd.Series([True, True, True, False, False])\ndf.iloc[msk] == df.iloc[0:3]\n```\n\n?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18064961",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18064961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18064961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDY0OTYx",
    "user": {
      "login": "snth",
      "id": 652285,
      "node_id": "MDQ6VXNlcjY1MjI4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/652285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snth",
      "html_url": "https://github.com/snth",
      "followers_url": "https://api.github.com/users/snth/followers",
      "following_url": "https://api.github.com/users/snth/following{/other_user}",
      "gists_url": "https://api.github.com/users/snth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snth/subscriptions",
      "organizations_url": "https://api.github.com/users/snth/orgs",
      "repos_url": "https://api.github.com/users/snth/repos",
      "events_url": "https://api.github.com/users/snth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:34:27Z",
    "updated_at": "2013-05-17T14:34:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I agree that in your first example by my reasoning In[4] should raise an Exception rather than realign based on labels within in .iloc.\n\nI don't understand your second example. There's no boolean indexing involved there and they just seem to be examples of .iloc. Is that what's happening in the source code?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18065259",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18065259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18065259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDY1MjU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:39:12Z",
    "updated_at": "2013-05-17T14:39:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@snth I was trying to have it index with a Series that had a different index, (that is essentially what boolean masking does)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18065289",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18065289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18065289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDY1Mjg5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:39:44Z",
    "updated_at": "2013-05-17T14:40:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, if you had the one above, there is an easy workaround (with arrays):\n\n```\nmsk = pd.Series([True, True, True, False, False])\ndf.iloc[msk.values]  # instead of df.iloc[msk]\n```\n\nBut if your index was not in order:\n\n```\nmsk = pd.Series([True, True, True, False, False], index=[1, 2, 3, 4, 0])\ndf.iloc[msk] == df[1:4]\n```\n\n?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18065792",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18065792",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18065792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDY1Nzky",
    "user": {
      "login": "snth",
      "id": 652285,
      "node_id": "MDQ6VXNlcjY1MjI4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/652285?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/snth",
      "html_url": "https://github.com/snth",
      "followers_url": "https://api.github.com/users/snth/followers",
      "following_url": "https://api.github.com/users/snth/following{/other_user}",
      "gists_url": "https://api.github.com/users/snth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/snth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/snth/subscriptions",
      "organizations_url": "https://api.github.com/users/snth/orgs",
      "repos_url": "https://api.github.com/users/snth/repos",
      "events_url": "https://api.github.com/users/snth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/snth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:47:46Z",
    "updated_at": "2013-05-17T14:47:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd In terms of workarounds you could probably do\n\n```\ndf.iloc[msk.index][msk.values]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18066398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18066398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18066398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDY2Mzk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T14:57:12Z",
    "updated_at": "2013-05-17T14:57:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nothing else broke...I'll put up the PR in a minute....pls try out\n\n```\nIn [3]: df = DataFrame(range(5), list('ABCDE'), columns=['a'])\n\nIn [4]: mask = (df.a%2 == 0)\n\nIn [5]: df.iloc[mask]\nValueError: iLocation based boolean indexing can only have an integer index [string] was inferred\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18066622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18066622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18066622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDY2NjIy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T15:01:11Z",
    "updated_at": "2013-05-17T15:01:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd I think if the user tries what you suggest (with an index not in order), they should be shot :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18071156",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18071156",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18071156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDcxMTU2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T16:16:48Z",
    "updated_at": "2013-05-17T16:16:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "ha! Well, I'm sulking!\n\nIgnoring the index just seems a little dodge... I think we should either:\n- raise _whatever_ if you pass in a (boolean) Series to `iloc` (maybe with a NotImplementedError :p). \n- implement analgous behaviour to `[]`/`loc` *\n\n_Surely `iloc` (for boolean masking) is **only** for integer location, so if mask.index isn't integer they are calling the wrong thing... and we shouldn't let them._\n\nOtherwise it's just salt for `df.iloc[msk.values]`, and if it is, let people do that.\n\n*I not convinced the (granted, obtuse) example is impossible to envisage.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18072784",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18072784",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18072784,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDcyNzg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T16:46:57Z",
    "updated_at": "2013-05-17T16:46:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd does the PR not do the first? (e.g. raises)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18074759",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18074759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18074759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc0NzU5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T17:25:38Z",
    "updated_at": "2013-05-17T17:26:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "No... at least I didn't think so, (from your pr):\n\n```\ndf = pd.DataFrame(range(5), columns=['a'], index=range(4, -1, -1))\nmsk = pd.Series([True, True, False, False, False], index=[1,2,3,4,0])\n\nIn [3]: df[msk]\npandas/core/frame.py:1999: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  \"DataFrame index.\", UserWarning)\nOut[3]:\n   a\n2  2\n1  3\n\nIn [4]: df.iloc[msk]  # should raise\nOut[4]:\n   a\n2  2\n1  3\n\nIn [5]: df.iloc[1:3]  # or should be this\nOut[5]:\n   a\n3  1\n2  2\n```\n\nAt the moment `iloc` isn't getting by location, but rather by label (and that's true in the other examples, just it was getting the same results).. I think it should just be disabled for boolean indexing (at least for now).\n\n?\n\n*hides*\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18076705",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18076705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18076705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc2NzA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T17:59:32Z",
    "updated_at": "2013-05-17T17:59:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm...I see what you mean, so essentially eliminate boolean masking from `iloc` entirely?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18080339",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18080339",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18080339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDgwMzM5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T19:06:33Z",
    "updated_at": "2013-05-17T19:06:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah... perhaps an optimistic `NotImplementedError`. :p\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18081470",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18081470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18081470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDgxNDcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T19:29:51Z",
    "updated_at": "2013-05-17T19:29:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "hahha...ok will fix\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18084188",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18084188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18084188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDg0MTg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T20:26:52Z",
    "updated_at": "2013-05-17T20:26:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@snth output from your script with my PR\n\n```\n        locs  nums\n0b1        0     1\n0b10       1     2\n0b100      2     4\n0b1000     3     8\n None: df[mask].sum()==0b1100\n None: df.loc[mask].sum()==0b1100\n None: df.iloc[mask].sum()==0b1100\n/mnt/home/jreback/pandas/pandas/core/frame.py:2001: UserWarning: Boolean Series key will be reindexed to match DataFrame index.\n  \"DataFrame index.\", UserWarning)\nindex: df[mask].sum()==0b11\nindex: df.loc[mask].sum()==0b11\nindex: df.iloc[mask].sum()==iLocation based boolean indexing cannot use an indexable as a mask\n locs: df[mask].sum()==Unalignable boolean Series key provided\n locs: df.loc[mask].sum()==Unalignable boolean Series key provided\n locs: df.iloc[mask].sum()==iLocation based boolean indexing cannot use an indexable as a mask\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18085998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18085998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18085998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDg1OTk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T21:05:02Z",
    "updated_at": "2013-05-17T21:05:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd @snth I update the release notes / v0.11.1 whatsnew. pls take a look and see if they tell what has changed are not too confusing...thxs\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18086452",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18086452",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18086452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDg2NDUy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T21:15:12Z",
    "updated_at": "2013-05-17T21:15:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the notes look clear and understandable. I'm happy. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18086612",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18086612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18086612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDg2NjEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T21:18:47Z",
    "updated_at": "2013-05-17T21:18:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "any other cases you think?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18086631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18086631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18086631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDg2NjMx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T21:19:13Z",
    "updated_at": "2013-05-17T21:19:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "will merge maybe in a day or 2....if anyone thinks of anything\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18086662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18086662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18086662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDg2NjYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T21:19:45Z",
    "updated_at": "2013-05-17T21:19:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p any thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18100977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18100977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18100977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTAwOTc3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T13:21:41Z",
    "updated_at": "2013-05-18T14:49:22Z",
    "author_association": "NONE",
    "body": "Some twists and turns in the discussion, not sure I got it all. \n\nHere's my take on the discussion above, does it match the PR?\n1. When given a labeled indexer, pandas implicitly aligns. That's the rule. \n2. If the user wants the indexing to behave as if he passed in an array, he should pass in\n   an array.\n3. Then, wrt what should we align a bool indexer passed in to iloc?\n   - Since `.loc` can always be used, `.iloc` obviously shouldn't duplicate the behaviour by aligning wrt to the underlying frame labels. Hence, should raise when passed a labeled indexer with non-integer index.\n   - An indexer with integer labels given to iloc should be realigned (re 1.), since we've established it shouldn't do that wrt to labels, the only alternatives is wrt position.\n   - Since that doesn't ring like a very common use case, raising `NotImplementedError` is perfectly fine until there's a demand for it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18101487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3631#issuecomment-18101487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3631",
    "id": 18101487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTAxNDg3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T13:57:30Z",
    "updated_at": "2013-05-18T13:57:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p I think that's an excellent summary.\n\nThe only thing atm (in Jeff's current PR) it raises a `ValueError`, but maybe `NotImplementedError` (\"one day\") better describes it.\n"
  }
]
