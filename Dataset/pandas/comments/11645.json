[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158070718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11645#issuecomment-158070718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11645",
    "id": 158070718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODA3MDcxOA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T14:19:14Z",
    "updated_at": "2015-11-19T14:19:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is not a bug but is instead a feature of floating point math.  Efficient rolling mean makes use of a rolling sum.  Having numbers that are differ in magnitude by 1/np.finfo(np.double).eps results in truncation.  So when you add the big number in you effectively los all information in the small numbers, and when that number is finally removed, there is nothing in the rolling sum about the small numbers, and so it is as if they were 0.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158117129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11645#issuecomment-158117129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11645",
    "id": 158117129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODExNzEyOQ==",
    "user": {
      "login": "julienvienne",
      "id": 10959702,
      "node_id": "MDQ6VXNlcjEwOTU5NzAy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10959702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julienvienne",
      "html_url": "https://github.com/julienvienne",
      "followers_url": "https://api.github.com/users/julienvienne/followers",
      "following_url": "https://api.github.com/users/julienvienne/following{/other_user}",
      "gists_url": "https://api.github.com/users/julienvienne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julienvienne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julienvienne/subscriptions",
      "organizations_url": "https://api.github.com/users/julienvienne/orgs",
      "repos_url": "https://api.github.com/users/julienvienne/repos",
      "events_url": "https://api.github.com/users/julienvienne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julienvienne/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T16:55:03Z",
    "updated_at": "2015-11-19T16:55:03Z",
    "author_association": "NONE",
    "body": "Thank you for your quick anwser. I take the point.\nHowever, don't you think user could be warned about such a behavior ? Data magnitude may be tested before computation. A warning would be raised in the case of extreme values detection.\nIn my case -9+33 was an outlier data which I had not filtered before. Good data were small values and the result was obviously wrong...\n\nBest regards\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158118841",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11645#issuecomment-158118841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11645",
    "id": 158118841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODExODg0MQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T17:00:42Z",
    "updated_at": "2015-11-19T17:00:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think it is really possible to warn about numeric limits without substantially affecting performance.  For example\n\n``` python\nx = np.array([2e17]) ** 2 + 1 - np.array([2e17]) ** 2\n```\n\n`x` is clearly 1 to a human, but is 0 when evaluated.\n\nAlso\n\n``` python\nnp.array([2e17]) ** 2 - np.array([2e17]) ** 2 + 1\nnp.array([2e17]) ** 2 + 1 - np.array([2e17]) ** 2 \n```\n\nshould be the same but they aren't, and numpy doesn't provide any warning.  I think it is a lot to ask them to protect the end user form numerical limits. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158150115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11645#issuecomment-158150115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11645",
    "id": 158150115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE1MDExNQ==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T18:38:01Z",
    "updated_at": "2015-11-19T18:38:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it would be fair to add a note in the doc about the implementation. In this example, a user may not know that previous values affect later values even when the window no longer contains those values.  The same goes for other algorithms, and info about time/space complexity can be useful too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158315143",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11645#issuecomment-158315143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11645",
    "id": 158315143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODMxNTE0Mw==",
    "user": {
      "login": "julienvienne",
      "id": 10959702,
      "node_id": "MDQ6VXNlcjEwOTU5NzAy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10959702?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julienvienne",
      "html_url": "https://github.com/julienvienne",
      "followers_url": "https://api.github.com/users/julienvienne/followers",
      "following_url": "https://api.github.com/users/julienvienne/following{/other_user}",
      "gists_url": "https://api.github.com/users/julienvienne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julienvienne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julienvienne/subscriptions",
      "organizations_url": "https://api.github.com/users/julienvienne/orgs",
      "repos_url": "https://api.github.com/users/julienvienne/repos",
      "events_url": "https://api.github.com/users/julienvienne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julienvienne/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T07:54:59Z",
    "updated_at": "2015-11-20T07:54:59Z",
    "author_association": "NONE",
    "body": "I agree because I clearly tried to find some explainations in the doc before making tests on my own. Some implementation infos would have helped.\nThanks for your answers.\nRegards,\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158404240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11645#issuecomment-158404240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11645",
    "id": 158404240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQwNDI0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T13:32:13Z",
    "updated_at": "2015-11-20T13:32:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, how about we add to the docs, @julienvienne up for a pull-request?\n\nnote that #11603 will be merged shortly. So do against the new structure for docs (well its the _same_ in the original but going to be deprecated, so do on the new ones)\n"
  }
]
