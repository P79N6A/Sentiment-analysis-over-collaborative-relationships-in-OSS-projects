[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21520412",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-21520412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 21520412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTIwNDEy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-24T22:12:45Z",
    "updated_at": "2013-07-24T22:12:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, updated sql branch to 0.12 release.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24390222",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24390222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24390222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzkwMjIy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-13T12:11:35Z",
    "updated_at": "2013-09-13T12:11:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danielballan I've squished and rebased these commits to this: https://github.com/hayd/pandas/commits/sql_tests\n\nI get a strange bug with NaN in MySQL atm in test_write_row_by_row, any ideas/would you mind taking a peak? https://travis-ci.org/hayd/pandas/jobs/11314669\n\nIt's a pretty horrible hack atm, when trying to get it to work, but I think should refactor pretty well (once we get tests working). Sorry for taking so long!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24394845",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24394845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24394845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzk0ODQ1",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-13T13:38:34Z",
    "updated_at": "2013-09-13T13:38:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm. Sure, I'll tinker with this over the weekend.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24592774",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24592774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24592774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTkyNzc0",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T14:33:53Z",
    "updated_at": "2013-09-17T14:35:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd, It's tricky to test this on my system, because it is attempting root login to mysql without a password. This is why I had the old tests reading the local mysql config file, `.my.cnf`. It wasn't pretty, but it allowed the tests to be run on machines where the sql database that's running needs to be secure.\n\nI wonder if we can come up with a way for the line\n\n```\nmysql+pymysql://root:@localhost/pandas_nosetest\n```\n\nto use that same file, and only fallback on root login if the file does not exist.\n\n_Edit_\n\nAlternatively, we could assume that most people are just running the tests of Travis, but it's obviously easier to debug this locally. I guess I could make a temporary change to the file, hardcoding my own username/password, but that's not my first choice.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24600461",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24600461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24600461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjAwNDYx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T16:05:47Z",
    "updated_at": "2013-09-17T16:05:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danielballan You have wrote a get_engine_url function for this, perhaps that helps (if it's possible to get user/pass out? I guess we could try and use the current engine url, if can't connect to it then use something with `.my.cnf`. \n\nIn fact, I wonder if there is a clever SQLAlchemy way to build the url from the config file... (ideally platform indep)\n\n_I've been extracting to PandasSQL class, and it seems so much nicer and easier to reason about (still have the big functions, read and write frames to do)..._\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24622253",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24622253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24622253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjIyMjUz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T21:04:22Z",
    "updated_at": "2013-09-17T21:04:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd - two suggestions (also, urp on \"@jtratner tearing it apart\")\n1. I'm glad it's getting clearer with abstracting a class. You might\n   consider creating an abstract base class so you can be sure you've\n   implemented all the methods you need on each of the subclasses (Python\n   won't allow the class to be instantiated if all the methods or properties\n   are not defined.). When I was looking at an earlier version, I thought it\n   might make sense to turn parts of it into mixins so that you can, for\n   example, share elements (like specific insertions or table creations) that\n   you need for sqlite and also MySQL and put them together, without needing\n   to have one class inherit from the other. Does create some extra\n   indirection, so you have to decide on what makes most sense.\n2. Maybe we should consider adopting a config file for pandas in general.\n   Could read it in after loading (i.e., by reading an environment variable or\n   something) - would be great to follow the example of Flask and allow\n   passing a dictionary or follow the PEP (that I think exists) on config\n   files in Python otherwise.  That doesn't need to be in scope for this PR,\n   and might make sense to leave for something separate and just use the\n   existing core/config setup.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24625544",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24625544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24625544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjI1NTQ0",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-17T21:50:50Z",
    "updated_at": "2013-09-17T21:50:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "My current implementation is PandasSQL(PandasObject) and then PandasSQLWithEngine(PandasSQL) etc., this naming convention might be a little suspect... but will make it work first, then we can mixin it up or whatever (flavor classes for specific flavors could be an option, previously much was/is \"dict based\").\n\nSome shared functions will be in the base class but tbh most WithCon just uses WithCur, so the meat is there (and in WithEngine obviously).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24896767",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24896767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24896767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk2NzY3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T02:52:20Z",
    "updated_at": "2013-09-23T02:52:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Please check out impl, I pushed to pydata/sql: https://github.com/pydata/pandas/blob/sql/pandas/io/sql.py\n\nOne of the things I've realised is I haven't refactored out is the connection tests, which I'm not sure I understand... seems you give it \"something\" and magically pull out engine/con/cur. This was previously implicit/inconsistent in each function (I think) :s\n\nNot passing all tests yet, so if you have any ideas on them would be awesome. The commits are now fixed, sorry for taking so long!!\n\nThoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24897264",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24897264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24897264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk3MjY0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T03:21:22Z",
    "updated_at": "2013-09-23T03:21:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd why are there `PandasSQL`,  `PandasSQLWithCur` and `PandasSQLWithEngine`? What's the difference? Is `PandasSQLWithEngine` a wrapper for `SQLAlchemy`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24897452",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24897452",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24897452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk3NDUy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T03:30:11Z",
    "updated_at": "2013-09-23T03:30:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner basically PandasSQL is the parent class, shared methods are there, and the cursor/engine specific functions are defined in the subclasses.\n\n`PandasSQL(engine=engine)` creates a `PandasSQLWithEngine` object (which is a subclass of PandasSQL).\n\nPerhaps naming is a bit suspect, but is descriptive I think, not sure what would be better...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24898717",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24898717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24898717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk4NzE3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T04:38:34Z",
    "updated_at": "2013-09-23T04:38:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe I'm mistaken, but couldn't you let `read_sql` and `write_frame` handle converting the passed connection into a cursor and then only need one of those classes?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24899102",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24899102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24899102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk5MTAy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T04:59:20Z",
    "updated_at": "2013-09-23T04:59:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, and that was how it was done before... this way is less spaghetti.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24899162",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24899162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24899162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk5MTYy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T05:02:40Z",
    "updated_at": "2013-09-23T05:02:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh do you mean always use cursor... not sure if there us a benefit to that. (Benefit of engine is to extract tables and select statements etc., you'd have to be careful to not lose that if just using cursor.) Think splitting into logic means much easier to follow code, and less black connection finding magic.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24929667",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24929667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24929667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTI5NjY3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T15:42:50Z",
    "updated_at": "2013-09-23T15:42:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@danielballan let me know what you think, as it feels like your baby I've hacked to pieces! :s \n\n@jtratner maybe it's not such a great naming of classes (for the factory), but I really think the code needs to be separated into classes (there was so many ifs before to decide on which type of connection was being used, I think it was quite unmaintainable).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24934574",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24934574",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24934574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM0NTc0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T16:48:34Z",
    "updated_at": "2013-09-23T16:48:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry to push on this, can you just answer my question about life cycle?\nI'm wondering here whether we are or are not closing things that we should\nbe closing. Also, are you thinking that users would be using the\ntquery/uquery kinds of methods directly?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24936177",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4333#issuecomment-24936177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4333",
    "id": 24936177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTM2MTc3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-23T17:11:02Z",
    "updated_at": "2013-09-23T17:11:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner No worries, push away.\n\nNo, I don't actually think they would use these directly. I'm happy to remove or `_` them tbh.\n\nI think preferred way should be for users to use pandas_sql=PandasSQL(engine=..) then do sql stuff.\n\n```\npandas_sql.read_sql\npandas_sql.write_frame\npandas_sql.read_table # read entire table from engine\n```\n"
  }
]
