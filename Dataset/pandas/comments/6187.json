[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33688393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-33688393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 33688393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjg4Mzkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T13:44:04Z",
    "updated_at": "2014-01-30T13:44:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "w/o a specific example this is not very useful. There are very few actual regressions as proved by the extensive vbench suite (there are some that are fixed in 0.13.1):\n\nof course the modules changed; most code as moved to generic. in and of itself this doesn't show anything.\n\ncan you provide a specific example of a 'slowdown'?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33691584",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-33691584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 33691584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjkxNTg0",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T14:23:25Z",
    "updated_at": "2014-01-30T14:23:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Given that non-library code didn't change between two runs, I suppose I could go through the profiles and check cumtime of public API functions to look for the places where they were called, if that's of any help... But that won't happen until weekend and which of the upcoming weekends would it be is an open question, sorry about that.\n\nAs for the suite, well, I do see the run time go up after changing to an environment that only differs in `pandas` version in a reproducible manner and the difference doesn't fit to my definition of statistical error (4mins vs 6mins). Given the number of _wtf_ situations I had in the past with `pandas` I think that I somehow use it far from the situation for which it's been tailored and it's unlikely but possible that my cases just aren't covered by the suite. On the other hand I do share your concerns about usefulness of this report, so feel free to close the issue if you like. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33694060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-33694060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 33694060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjk0MDYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T14:51:34Z",
    "updated_at": "2014-01-30T14:51:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I honestly appreciate your comments\n\nand we of course want to fix any perf regressions - that was a big part of 0.13.1\n\nif u have specifc cases I am happy to take a look\n\n> On Jan 30, 2014, at 8:41 AM, immerrr notifications@github.com wrote:\n> \n> One of the projects in my workplace that uses pandas a lot has hit a performance regression (~50%) when I was trying to upgrade from 0.12.0 to 0.13.0. I've double-checked with\n> \n> In [1]: pd.**version**\n> Out[1]: '0.13.0-470-gf0c4953'\n> and the regression is still there. I've skimmed through recent tickets but didn't find anything open about performance, so I'm filing a new one. 0.12.0 package was provided by conda. We don't do heavy math with pandas, just usual data aggregation/filtering, but I've included bottleneck & numexpr just to be sure. 0.13.0+ was built into a clone of 0.12.0 environment with python setup.py develop.\n> \n> Here's a list of top pandas modules by total time spent as reported by runsnake:\n> \n> filename                0.12    0.13    diff\n> tseries/index.py        11.7    13.4    14.53%\n> core/common.py          14.6    25      71.23%\n> core/frame.py           15.4    15.2    -1.30%\n> core/series.py          22.5    35.7    58.67%\n> core/index.py           28.3    44.9    58.66%\n> core/internals.py       29.6    53      79.05%\n> core/generic.py         5.5     24      336.36%\n> I've put profiles restricted to pandas modules to gdrive here (0.12.0) and here (0.13.0+).\n> \n> While most of this is explicable by, for example, Series having changed to subclass NDArray instead of np.ndarray, a performance hit like this makes it virtually impossible to talk my colleagues into upgrading.\n> \n> Cheers\n> \n> â€”\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33696251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-33696251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 33696251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjk2MjUx",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-30T15:12:24Z",
    "updated_at": "2014-01-30T15:12:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> and we of course want to fix any perf regressions - that was a big part of 0.13.1\n\nThat and the fact that I doubt I'll get to perform a detailed investigation before 0.13.1 is tagged is the reason this issue is here in such \"raw\" form.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/33760457",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-33760457",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 33760457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzYwNDU3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-31T04:09:28Z",
    "updated_at": "2014-01-31T04:10:13Z",
    "author_association": "NONE",
    "body": "@immerrr, 0.13.1/master already has a number fixes for perf regressions introduced in 0.13.0.\nIt might be fairly simple to check if the problem has already been resolved and update\nus on the results.\n\nIf the problem remains, without specific code examples for us to investigate \n(and we'd like to!) there's not much we can do. \n0.13.1 is scheduled for release next week. If you give us something to go on, \nwe'll try to get it fixed in time, perhaps even delay 0.13.1 for it. \n\nBut without anything more, it'll have to wait until we have something concrete to fix.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34640886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-34640886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 34640886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQwODg2",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T15:01:23Z",
    "updated_at": "2014-02-10T15:01:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "One thing I've noticed so far: `reindex` now uses `Index.identical` instead of `Index.equals` which compares name/-s too when deciding if actual reindexing is necessary. This sounds reasonable in general, but some operations don't expect that, e.g. I can hardly explain why would `Series.dot(Series)` care about index names when performing series alignment (which is done via `reindex`).\n\nAdmittedly, the code I work with is somewhat sloppy about index names, so that may be one of the causes of slowdown.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34689654",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-34689654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 34689654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njg5NjU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T22:18:08Z",
    "updated_at": "2014-02-10T22:18:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "identical is just a way of comparing w/o calling equals which need to compare the actual values. \n\ncan u post an example of what I r doing where perf has changed?\n\nFYI if you don't need alignment then u can do\n\nseries.values(series2.values)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34722746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-34722746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 34722746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzIyNzQ2",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-11T03:08:14Z",
    "updated_at": "2014-02-11T03:08:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> identical is just a way of comparing w/o calling equals which need to compare the actual values. \n\nI'm not sure that's true. Like I said:\n\n``` python\nIn [7]: pd.Index.identical??\nType:       instancemethod\nString Form:<unbound method Index.identical>\nFile:       /home/immerrr/sources/pandas/pandas/core/index.py\nDefinition: pd.Index.identical(self, other)\nSource:\n    def identical(self, other):\n        \"\"\"Similar to equals, but check that other comparable attributes are\n        also equal\n        \"\"\"\n        return (self.equals(other) and\n                all((getattr(self, c, None) == getattr(other, c, None)\n                     for c in self._comparables)))\n\nIn [8]: pd.Index._comparables\nOut[8]: ['name']\n\nIn [9]: pd.MultiIndex._comparables\nOut[9]: ['names']\n```\n\nNot only _does_ `Index.identical` call `Index.equals`, but it also compares _comparables_ which are **self.name** for `Index` and **self.names** for `MultiIndex`.\n\nHere's `Series.dot` at **0.12.0**:\n\n``` python\nIn [1]: s1 = pd.Series(np.random.rand(100), pd.Index(np.arange(100), name='foo'))\n\nIn [2]: s2 = pd.Series(np.random.rand(100), pd.Index(np.arange(100), name='bar'))\n\nIn [3]: timeit s1.dot(s2)\n10000 loops, best of 3: 34 Âµs per loop\n\nIn [4]: pd.__version__\nOut[4]: '0.12.0'\n```\n\nAnd here's **0.13.1**:\n\n``` python\nIn [1]: s1 = pd.Series(np.random.rand(100), pd.Index(np.arange(100), name='foo'))\n\nIn [2]: s2 = pd.Series(np.random.rand(100), pd.Index(np.arange(100), name='bar'))\n\nIn [3]: timeit s1.dot(s2)\n10000 loops, best of 3: 131 Âµs per loop\n\nIn [4]: pd.__version__\nOut[4]: '0.13.1'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34724127",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-34724127",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 34724127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzI0MTI3",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-11T03:45:46Z",
    "updated_at": "2014-02-11T03:45:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "> FYI if you don't need alignment then u can do\n> \n> series.values(series2.values)\n\nThat's true for series, but less so for `DataFrame.dot(Series)` (which is also ~3x slower on the dataset above). I mean I could do `pd.Series(df.values.dot(s1.values), index=df.index)`, but that's exactly what I'm trying to avoid using pandas: manual label management.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37457812",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-37457812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 37457812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDU3ODEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T20:10:03Z",
    "updated_at": "2014-03-12T20:10:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr can you revist this and see if anything still sticking up that hasn't been addressed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37620310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-37620310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 37620310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjIwMzEw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T06:31:03Z",
    "updated_at": "2014-03-14T06:31:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should we make the dot method a sep issue? (is 3 times slower than in 0.12 right?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37626710",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-37626710",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 37626710,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjI2NzEw",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T08:45:36Z",
    "updated_at": "2014-03-14T08:45:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback no, nothing has really changed. There's still a dataset that is split to about several thousand blocks each of which is processed separately and small things, like Series.dot and Series.where, add up to ~50% of slowdown on master branch. I'm inclined to close this ticket, because there seems to be no _big_ gain potential here and tracking down small issues is not worth the while due to all the loose ends in internal APIs.\n\n@hayd it still seems that `Series.dot` and `Series.where` are systematically slower than before. Let me see if I can get a sound report about them.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37638702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6187#issuecomment-37638702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6187",
    "id": 37638702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjM4NzAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T11:38:01Z",
    "updated_at": "2014-03-14T11:38:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing...\n\nbut as you know using a Series method might be quite inefficient if done by looping (guessing what's happening here). and for big gains should be done on a Frame level.\n\npls open an issue for a specific perf regressions with an example!\n"
  }
]
