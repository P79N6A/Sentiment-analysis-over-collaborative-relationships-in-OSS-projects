[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347008741",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347008741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347008741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAwODc0MQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-26T13:28:58Z",
    "updated_at": "2017-11-26T13:28:58Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=h1) Report\n> Merging [#18496](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/38f41e64f4b8a0479f8835022af5e7343ccf8498?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `93.18%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18496/graphs/tree.svg?token=eZ4WkYLtcO&src=pr&height=150&width=650)](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18496      +/-   ##\n==========================================\n+ Coverage    91.3%   91.31%   +<.01%     \n==========================================\n  Files         163      163              \n  Lines       49781    49817      +36     \n==========================================\n+ Hits        45451    45488      +37     \n+ Misses       4330     4329       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.11% <93.18%> (ø)` | :arrow_up: |\n| #single | `40.74% <54.54%> (+0.01%)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `94.66% <93.18%> (-0.11%)` | :arrow_down: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.04% <0%> (-0.48%)` | :arrow_down: |\n| [pandas/core/indexes/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZWxpa2UucHk=) | `96.47% <0%> (-0.45%)` | :arrow_down: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.34% <0%> (-0.06%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `65.25% <0%> (+1.81%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=footer). Last update [38f41e6...d3d9f45](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347008748",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347008748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347008748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAwODc0OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-26T13:29:05Z",
    "updated_at": "2017-12-01T12:46:41Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=h1) Report\n> Merging [#18496](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/d74ac70ffd44e9d00e6ffa8ecf7a1a88312e8065?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18496/graphs/tree.svg?height=150&token=eZ4WkYLtcO&src=pr&width=650)](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18496      +/-   ##\n==========================================\n- Coverage   91.44%   91.43%   -0.02%     \n==========================================\n  Files         157      157              \n  Lines       51379    51374       -5     \n==========================================\n- Hits        46985    46972      -13     \n- Misses       4394     4402       +8\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.3% <100%> (ø)` | :arrow_up: |\n| #single | `40.62% <72.22%> (-0.06%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.69% <ø> (-0.03%)` | :arrow_down: |\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.46% <ø> (-0.01%)` | :arrow_down: |\n| [pandas/core/indexes/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZWxpa2UucHk=) | `97.11% <ø> (+0.19%)` | :arrow_up: |\n| [pandas/core/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYmFzZS5weQ==) | `96.54% <100%> (-0.01%)` | :arrow_down: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `94.8% <100%> (+0.04%)` | :arrow_up: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18496/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.81% <0%> (-0.1%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=footer). Last update [d74ac70...1582c42](https://codecov.io/gh/pandas-dev/pandas/pull/18496?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347046230",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347046230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347046230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA0NjIzMA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T23:01:47Z",
    "updated_at": "2017-11-26T23:01:47Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche @jreback Bringing here a conversation from Gitter: one possible way to approach this (avoiding the problem that ``{np.nan : 2}[float('nan')]`` raises ``KeyError``) is to modify ``lib.fast_multiget`` so that it iterates the dict and then matches to specific keys, rather than directly looking for such keys. Or it could iterate the dict only if ``np.nan`` appears in the desired keys (or if the desired keys are unspecified), and follow the usual behavior otherwise."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347046310",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347046310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347046310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA0NjMxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T23:02:56Z",
    "updated_at": "2017-11-26T23:02:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toobaz happy to have you modify cython code directly to avoid perf penalty (and it also abstracts away some of the complexity). inline comments a plus!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347049658",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347049658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347049658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA0OTY1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T23:57:56Z",
    "updated_at": "2017-11-26T23:57:56Z",
    "author_association": "MEMBER",
    "body": "@toobaz sidenote: can you give the PR a bit more descriptive title?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347104178",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347104178",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347104178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzEwNDE3OA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T07:56:40Z",
    "updated_at": "2017-11-27T07:56:40Z",
    "author_association": "MEMBER",
    "body": "Since I introduced no (explicit) loops I preferred to keep code in ``*.py``.\r\n\r\nI _could_ add a test at the beginning of ``lib.fast_multiget`` asserting the absence of NaN in the argument. However the case of tuples would be tricky: it's just more complicated - and not particularly useful I guess - to check if they contain NaNs, but at the same time raising an error for any tuple would be wrong."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347114030",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347114030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347114030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzExNDAzMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T08:45:32Z",
    "updated_at": "2017-11-27T08:45:32Z",
    "author_association": "MEMBER",
    "body": "Suggestion (but didn't think it fully through): we can make a distinction on whether `index` was passed or not. If `index` was passed, we do want to do dict-lookup (as otherwise it could potentially give a performance bottleneck) -> current code. If index is not passed, we can just get the keys, values of the full dict (as we want all those anyway, so no need to then do a dict-lookup for each key).\r\n\r\nThat doesn't solve the problem with `pd.Series({np.nan: 1, 2:2}, index=[1, np.nan,])`, but would already solve the majority of the cases I think?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347119964",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347119964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347119964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzExOTk2NA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T09:09:53Z",
    "updated_at": "2017-11-27T09:09:53Z",
    "author_association": "MEMBER",
    "body": "> If index was passed, we do want to do dict-lookup (as otherwise it could potentially give a performance bottleneck) -> current code. If index is not passed, we can just get the keys, values of the full dict (as we want all those anyway, so no need to then do a dict-lookup for each key).\r\n\r\nIn my current version the lookup is not a bottleneck because it is just an iteration on keys/values, precisely what is needed anyway in the \"no index\" case (where, by the way, no reindexing happens because the indexes are ``identical()``). However, still in the \"no index\" case, keys are being iterated twice, and I can fix this at the cost of few lines in ``Series.__init__``."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347772714",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-347772714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 347772714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Nzc3MjcxNA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-29T07:11:28Z",
    "updated_at": "2017-11-29T07:11:28Z",
    "author_association": "MEMBER",
    "body": "@jreback ping"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348580425",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18496#issuecomment-348580425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18496",
    "id": 348580425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODU4MDQyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T19:02:45Z",
    "updated_at": "2017-12-01T19:02:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!"
  }
]
