[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465931079",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25395#issuecomment-465931079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25395",
    "id": 465931079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTkzMTA3OQ==",
    "user": {
      "login": "vmuriart",
      "id": 13303020,
      "node_id": "MDQ6VXNlcjEzMzAzMDIw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/13303020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vmuriart",
      "html_url": "https://github.com/vmuriart",
      "followers_url": "https://api.github.com/users/vmuriart/followers",
      "following_url": "https://api.github.com/users/vmuriart/following{/other_user}",
      "gists_url": "https://api.github.com/users/vmuriart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vmuriart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vmuriart/subscriptions",
      "organizations_url": "https://api.github.com/users/vmuriart/orgs",
      "repos_url": "https://api.github.com/users/vmuriart/repos",
      "events_url": "https://api.github.com/users/vmuriart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vmuriart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T09:41:50Z",
    "updated_at": "2019-02-21T09:41:50Z",
    "author_association": "NONE",
    "body": "I got curious and did some testing. Looks like the behavior difference is isolated to `NaN` values only.\r\n\r\nI took a look inside the [relevant code](https://github.com/pandas-dev/pandas/blob/4be995c13452766da48a82f3ecd0b5a24e48f526/pandas/core/algorithms.py#L406-L431) and over 1M there is a switch as to how `isin` is performed. \r\n\r\nThe snippet below shows `np.in1d` having the same behavior.\r\n```python\r\na = np.array([np.nan, 1])\r\nnp.in1d(a, [np.nan])\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465980089",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25395#issuecomment-465980089",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25395",
    "id": 465980089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTk4MDA4OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T12:21:53Z",
    "updated_at": "2019-02-21T12:21:53Z",
    "author_association": "MEMBER",
    "body": "@dimitar-petrov Thanks for the report! \r\nThat is indeed inconsistent. If we want to keep the special fast path with `np.in1d`, we should probably add a check there that the values to be checked do not contain a NaN (in case of float dtype, for int that is never the case anyhow). Question is a bit how costly such a check would be compared to the speed-up provided by `np.in1d`. Some experimentation is probably needed here.\r\n\r\nVery welcome to look into it / do a PR!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/475736479",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25395#issuecomment-475736479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25395",
    "id": 475736479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTczNjQ3OQ==",
    "user": {
      "login": "vmuriart",
      "id": 13303020,
      "node_id": "MDQ6VXNlcjEzMzAzMDIw",
      "avatar_url": "https://avatars1.githubusercontent.com/u/13303020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vmuriart",
      "html_url": "https://github.com/vmuriart",
      "followers_url": "https://api.github.com/users/vmuriart/followers",
      "following_url": "https://api.github.com/users/vmuriart/following{/other_user}",
      "gists_url": "https://api.github.com/users/vmuriart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vmuriart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vmuriart/subscriptions",
      "organizations_url": "https://api.github.com/users/vmuriart/orgs",
      "repos_url": "https://api.github.com/users/vmuriart/repos",
      "events_url": "https://api.github.com/users/vmuriart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vmuriart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-22T18:42:25Z",
    "updated_at": "2019-03-22T18:42:25Z",
    "author_association": "NONE",
    "body": "I think this is related to #22205"
  }
]
