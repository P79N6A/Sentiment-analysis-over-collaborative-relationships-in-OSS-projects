[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315220498",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315220498",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315220498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIyMDQ5OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T22:35:49Z",
    "updated_at": "2017-07-13T22:35:49Z",
    "author_association": "MEMBER",
    "body": "Am I understanding correctly that the point of `ABCSeries` is to be able to effectively check `isinstance(foo, Series)` without having to import `Series`?  If so, I'll amend this PR to avoid the circular import more gracefully."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315226969",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315226969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315226969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIyNjk2OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T23:14:30Z",
    "updated_at": "2017-07-13T23:14:30Z",
    "author_association": "MEMBER",
    "body": "> Am I understanding correctly that the point of ABCSeries is to be able to effectively check isinstance(foo, Series) without having to import Series?\r\n\r\nYes, that is correct.  I think you will need to find a way to work around the circular dependency that you found without importing `Series` in so many places."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315232298",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315232298",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315232298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTIzMjI5OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-13T23:51:34Z",
    "updated_at": "2017-07-13T23:51:34Z",
    "author_association": "MEMBER",
    "body": "> I think you will need to find a way to work around the circular dependency that you found without importing Series in so many places.\r\n\r\nGreat, thanks.  Just changed those to check against ABCSeries and ABCDataFrame.  Much prettier."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315243055",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315243055",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315243055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI0MzA1NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T01:16:28Z",
    "updated_at": "2017-07-14T01:16:47Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel : I was able to read more on the issue you referenced, and it occurs to me: why are you refactoring these methods?  IIUC, the consensus was to just deprecate these methods.  While refactoring *may* make things a little nicer from an organizational standpoint, IMO you should probably just leave it alone and deprecate immediately.\r\n\r\nNote: that would also allow you to not have to figure out why all of these tests are currently failing :smile:"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315244991",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315244991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315244991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI0NDk5MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T01:31:28Z",
    "updated_at": "2017-07-14T01:31:28Z",
    "author_association": "MEMBER",
    "body": ">  and it occurs to me: why are you refactoring these methods?\r\n\r\nAs a newcomer, I experienced a good deal of frustration in trying to figure out e.g. \"where the heck is `Series.ptp` defined??\"  I developed a strong preference for methods/attributes being defined in the first-place-you-look kind of way.  In the case of the `plot`, `hist`, and `boxplot`, defining them inside the `class DataFrame...` block seems like the \"one obvious way to do it\".\r\n\r\nAlso in many of these cases there is a good reason for the design decision, in which case it's a learning opportunity.  (Thanks jreback!)\r\n\r\n> Note: that would also allow you to not have to figure out why all of these tests are currently failing\r\n\r\n... [grumble]"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315245245",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315245245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315245245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI0NTI0NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T01:33:42Z",
    "updated_at": "2017-07-14T01:34:51Z",
    "author_association": "MEMBER",
    "body": "> As a newcomer, I experienced a good deal of frustration in trying to figure out e.g. \"where the heck is Series.ptp defined??\" I developed a strong preference for methods/attributes being defined in the first-place-you-look kind of way. In the case of the plot, hist, and boxplot, defining them inside the class DataFrame... block seems like the \"one obvious way to do it\".\r\n\r\nThat is fair, but as these methods are being deprecated (correct me if I'm wrong), why aren't you using the preferred methods for invoking these functions?  Using soon-to-be deprecated methods (you could be the one who deprecates it :wink: ) is generally not advised.\r\n\r\nIf there are methods that you find frustrating to find, then by all means attempt to refactor those, but I'm still not convinced that you should be refactoring methods that are going to be deprecated."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315245742",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315245742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315245742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI0NTc0Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T01:37:39Z",
    "updated_at": "2017-07-14T01:37:39Z",
    "author_association": "MEMBER",
    "body": "Also, I should add that many of these methods (like `ptp`) were defined with the purpose of making them template-able across multiple functions and classes.  You can witness their inner-workings from the `core/generic.py` file in case you're interested."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315250246",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315250246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315250246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI1MDI0Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T02:11:37Z",
    "updated_at": "2017-07-14T02:11:37Z",
    "author_association": "MEMBER",
    "body": "The thought (evidence to the contrary) was that a PR that doesn't change any logic wouldn't get the same pushback as something more ambitious.\n\nSent from my iPhone\n\n> On Jul 13, 2017, at 6:33 PM, gfyoung <notifications@github.com> wrote:\n> \n> As a newcomer, I experienced a good deal of frustration in trying to figure out e.g. \"where the heck is Series.ptp defined??\" I developed a strong preference for methods/attributes being defined in the first-place-you-look kind of way. In the case of the plot, hist, and boxplot, defining them inside the class DataFrame... block seems like the \"one obvious way to do it\".\n> \n> That is fair, but as these methods are being deprecated (correct me if I'm wrong), why aren't you using the preferred methods for invoking these functions? Using soon-to-be deprecated (you could be the one who deprecates it 😉 ) methods is generally not advised.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n> \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315252079",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315252079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315252079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI1MjA3OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T02:23:06Z",
    "updated_at": "2017-07-14T02:23:06Z",
    "author_association": "MEMBER",
    "body": "> The thought (evidence to the contrary) was that a PR that doesn't change any logic wouldn't get the same pushback as something more ambitious.\r\n\r\n1) The tests broke with your initial commit, which indicates that some logic actually did get changed.\r\n\r\n2) In general yes, but the benefit of refactoring code when it is going to get deprecated (and eventually deleted) is very much diminished.  In addition, if you are interested in getting a PR merged, you should try to implement changes that have the support of the maintainers of the repository.\r\n\r\nThat's why I suggested you deprecate those two functions in your PR.  You already have the backing of several maintainers judging from the issue, and I for one am in agreement with that decision.  Thus, I would be happy to help you through the process of deprecation if that interests you."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315266321",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315266321",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315266321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI2NjMyMQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T04:22:51Z",
    "updated_at": "2017-07-14T04:22:51Z",
    "author_association": "MEMBER",
    "body": "> The tests broke with your initial commit, [...]\r\n\r\nTests broke because I didn't import `ABCIndex`, should now be fixed.\r\n\r\n> [...] which indicates that some logic actually did get changed.\r\n\r\nNotwithstanding the stuff I managed to break, avoiding the fragility of the circular-ish import between `plotting._core` and `core.series` is probably a more important fix in itself than the original goal.\r\n\r\n> That's why I suggested you deprecate those two functions in your PR.\r\n\r\nOK.  Does this just mean removing `hist` and `boxplot` from `DataFrame`, and `hist` from `Series`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315267018",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315267018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315267018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI2NzAxOA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T04:29:46Z",
    "updated_at": "2017-07-14T04:29:46Z",
    "author_association": "MEMBER",
    "body": "> Does this just mean removing `hist` and `boxplot` from DataFrame, and `hist` from Series?\r\n\r\nIf so, then I'm going to push for this to be a separate PR.  Removing those from the namespace then requires changes in `core.groupby`, which I don't want to touch until I get a handle on `_whitelist_method_generator` and why `exec` is needed.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315271053",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315271053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315271053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI3MTA1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T05:07:11Z",
    "updated_at": "2017-07-14T05:07:27Z",
    "author_association": "MEMBER",
    "body": "> Tests broke because I didn't import ABCIndex, should now be fixed.\r\n\r\nUnfortunately, that does not appear to be the case.  In fact, I think the current test failures are the same ones I saw on your initial commit. 😢 \r\n\r\n> avoiding the fragility of the circular-ish import between plotting._core and core.series is probably a more important fix in itself than the original goal.\r\n\r\nThat is a fair point.  That might go away once those `hist` and `plot` methods are removed.\r\n\r\n> Does this just mean removing hist and boxplot from DataFrame, and hist from Series?\r\n\r\nNo.  Deprecating means that we issue a `FutureWarning` to users if they call the method, warning them that the method will be removed in the future.  We'll save the removal for another time. 😄 \r\n\r\nBTW, if you want to see how the deprecation cycle works, have a look at #13777.  The PR's to the right (on each bullet point) are the ones where the code got deprecated, and the PR's to the left are the ones where the code got removed.\r\n\r\nThat being said, if you would like to contribute more, #6581 lists the current functions that have yet to be removed for this release (0.21).  Those I *guarantee* will get no push-back!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315398511",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315398511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315398511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTM5ODUxMQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T16:05:00Z",
    "updated_at": "2017-07-14T16:05:00Z",
    "author_association": "MEMBER",
    "body": "> Unfortunately, that does not appear to be the case. In fact, I think the current test failures are the same ones I saw on your initial commit\r\n\r\nAFAICT the relevant error message in Travis is:\r\n\r\n```\r\n>       if not isinstance(secondary_y, (bool, tuple, list, np.ndarray, ABCIndex)):\r\nE       NameError: global name 'ABCIndex' is not defined\r\n\r\npandas/plotting/_core.py:161: NameError\r\n```\r\n\r\nThe last commit does import `ABCIndex` at the top of `plotting.core`, so either the Travis output still reflects the earlier commit or I'm even more confused than before.\r\n\r\n> That is a fair point. That might go away once those hist and plot methods are removed.\r\n\r\nI tried that just for kicks and it opens up a new can of worms.  It necessitates edits in `core.groupby`, which in turn require changes to expected test output.  Let's get the circular import fixed here and move on."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315403293",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315403293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315403293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTQwMzI5Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T16:24:57Z",
    "updated_at": "2017-07-14T16:25:06Z",
    "author_association": "MEMBER",
    "body": "> I tried that just for kicks and it opens up a new can of worms. It necessitates edits in core.groupby, which in turn require changes to expected test output. Let's get the circular import fixed here and move on.\r\n\r\nSlow down there :smile: !  Did you read my previous comment?  I didn't say that you should remove them immediately.  You should be deprecating only (see my comment <a href=\"https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315271053\">above</a>  - I said we'll save removal for another time).  DO NOT REMOVE.\r\n\r\nAfter deprecation, feel free to have a crack at removing that circular import (if possible)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315426240",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315426240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315426240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTQyNjI0MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T18:01:24Z",
    "updated_at": "2017-07-14T18:01:24Z",
    "author_association": "MEMBER",
    "body": "> Did you read my previous comment.\r\n\r\nI did.  In fact I quoted it to make clear what I was referencing.\r\n\r\n> After deprecation, feel free to have a crack at removing that circular import (if possible).\r\n\r\nThe circular import is a Bad And Should Feel Bad.  I'll be happy to come back later, get up to speed on the deprecation cycle conventions, and then make a PR for the thing that you care about.  But since Travis doesn't want to play along, this will remain broken.  Gotta go do bill-paying work.  Closing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315426915",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315426915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315426915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTQyNjkxNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T18:04:15Z",
    "updated_at": "2017-07-14T18:05:01Z",
    "author_association": "MEMBER",
    "body": "> I tried that just for kicks and it opens up a new can of worms. It necessitates edits in core.groupby, which in turn require changes to expected test output. Let's get the circular import fixed here and move on.\r\n\r\nThe reason I asked is because this comment doesn't make much sense given that deprecating just involves adding a `FutureWarning` right under the calling of the function.  You shouldn't have to do anything else, unless these functions are getting called elsewhere in the code-base (if they are, do mention that)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315427344",
    "html_url": "https://github.com/pandas-dev/pandas/pull/16913#issuecomment-315427344",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16913",
    "id": 315427344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTQyNzM0NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T18:05:49Z",
    "updated_at": "2017-07-14T18:05:49Z",
    "author_association": "MEMBER",
    "body": "> Gotta go do bill-paying work. Closing.\r\n\r\nUnderstood.  Thanks for taking a crack at this.  Feel free to address the deprecation when you have the time."
  }
]
