[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21829904",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21829904",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21829904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODI5OTA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-30T23:12:13Z",
    "updated_at": "2013-07-30T23:12:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "the only time I find this happening, is if something is sharing the file (e.g. its opened for reading in several places)..\n\ndo you have a reproducible example?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21830816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21830816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21830816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMwODE2",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-30T23:34:25Z",
    "updated_at": "2013-07-30T23:34:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, it is like you say, only happening when one opens the HDF file more than once. (Which I guess happens easily jumping between cells in a notebook). My reproducible example is here: http://nbviewer.ipython.org/6117992\n\n2 interesting things:\n- Even if the 2nd opening was under a different Python variable name, when closing the first store, it automatically finds itself the still open file-handle from the second store.\n- I can't catch the ClosedFileError exception. Must I import its definition from somewhere?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21833028",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21833028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21833028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMzMDI4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T00:31:55Z",
    "updated_at": "2013-07-31T00:31:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "just FYI, I **always** open in `mode='a'` (e.g. never specify the mode). If I need to overwrite, I just safe remove the file first. This avoids issues like this. I also never use `mode='r'`; I think I had similar issues that you are showing.\n\nsee also #4367 going to make errors a bit more explicity.\n\nTo catch `ClosedFileError` try:\n\n```\nimport tables\nfrom tables import ClosedFileError\n```\n\nI guess it makes sense for `open/close` to deal with the `ClosedFileError` so this doesn't happen\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21833134",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21833134",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21833134,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMzMTM0",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T00:35:01Z",
    "updated_at": "2013-07-31T00:35:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I usually do like you describe. But that creates another pitfall: As the store.append does not check if the data is exactly the same, I could accidentally blow up the store by appending the same data twice or more. I will publish a set of timing tests with stores as an answer to my own stackoverflow question in a minute. Thanks for your input!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21833154",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21833154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21833154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMzMTU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T00:35:40Z",
    "updated_at": "2013-07-31T00:35:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "though looking at your example again\n- the variable name doesn't matter, however the fact that you called `open` (implicity by constructing the `HDFStore` twice **does**).\n\nand I think that if you close it, the 2nd time you close it throws an error is correct.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21833195",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21833195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21833195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMzMTk1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T00:36:55Z",
    "updated_at": "2013-07-31T00:36:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelaye \n\nto solve that problem; I pare a `delete` with an `append`. if there is nothing there, then the delete does nothing; otherwise it actually deletes the data (which can be time-consuminng FYI!)\n\nyou could simply check if your data is there before appending, e.g. just do a simple select (of say the endpoints)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21870420",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21870420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21870420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODcwNDIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T15:15:04Z",
    "updated_at": "2013-07-31T15:15:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "How's this\n(and I added `is_open` property)\n\n```\nIn [1]: path = 'test.h5'\n\nIn [2]: df = DataFrame(randn(10,2),columns=list('AB'))\n\nIn [3]: df.to_hdf(path,'df',mode='w',table=True)\n\nIn [4]: store1 = pd.HDFStore(path)\n\nIn [5]: store2 = pd.HDFStore(path)\n\nIn [6]: store1\nOut[6]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\n/df            frame_table  (typ->appendable,nrows->10,ncols->2,indexers->[index])\n\nIn [7]: store2\nOut[7]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\n/df            frame_table  (typ->appendable,nrows->10,ncols->2,indexers->[index])\n\nIn [8]: store1.close()\n\nIn [9]: store1\nOut[9]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\n/df            frame_table  (typ->appendable,nrows->10,ncols->2,indexers->[index])\n\nIn [10]: store2\nOut[10]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\n/df            frame_table  (typ->appendable,nrows->10,ncols->2,indexers->[index])\n\nIn [11]: store1.close()\n\nIn [12]: store1\nOut[12]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\nFile is CLOSED\n\nIn [13]: store2\nOut[13]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\nFile is CLOSED\n\nIn [14]: store1.is_open\nOut[14]: 0\n\nIn [15]: store2.is_open\nOut[15]: 0\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21894831",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21894831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21894831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODk0ODMx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T20:53:47Z",
    "updated_at": "2013-07-31T20:53:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelaye changed the api slightly; got rid of `_quiet` & `warn`. let me know if you thin it makes sense\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21895359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21895359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21895359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODk1MzU5",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T21:00:57Z",
    "updated_at": "2013-07-31T21:00:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm still puzzled by the fact that store1 stays 'legal' after a store1.close() because it picks up on the file being open via store2. Wouldn't there a more strict relationship be reasonable?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21899870",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21899870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21899870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODk5ODcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T22:09:24Z",
    "updated_at": "2013-07-31T22:09:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok....`PyTables` essentially reference counts the opens (e.g. increments) and closes (decrements) and don't actually close the file until `store._handle._open_count` gets to 0. I think you are suggesting that:\n- a reopen (in the same mode, e.g. 'a' should essentially do nothing)\n- a close should completely close the file\n\n?\n\nonly issue here is that say you do this:\n\n```\nstore = HDFStore('test.h5')\nstore.append('df',df)\n\nstore2 = HDFStore('test.h5')\nstore2.append('df2',df2)\nstore2.close()\n\nstore.close()\n```\n\nessentially a nested opening\n\nwhy should `store` be closed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21902262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21902262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21902262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTAyMjYy",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T22:53:06Z",
    "updated_at": "2013-07-31T22:53:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "But with the current way, a double close on store pulls the carpet underneath the user of store2? Isn't that 'unfriendly'?\n\n``` python\nstore = HDFStore('test.h5')\nstore.append('df', df)\n\nstore2 = HDFStore('test.h5')\ndf2 = store2.select('df') # 2nd user/process should only read, no?\n\nstore.close()\nstore.close()\n# At this moment the second process can not access its store anymore, even so it never tried to close it.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21905219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21905219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21905219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTA1MjE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-31T23:55:40Z",
    "updated_at": "2013-07-31T23:55:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think your example is a bug. latest commit fixes that and gives nice semantics\n\nsee here (I have an example in the docs too...but not built yet)\n\nlmk what you think\n\n```\nIn [1]: df = DataFrame(randn(10,5))\n\nIn [2]: store1 = pd.HDFStore('test.h5',mode='w')\n\nIn [3]: store2 = pd.HDFStore('test.h5')\n\nIn [4]: store1.append('df',df)\n\nIn [5]: store2.append('df2',df)\n\nIn [6]: store2.close()\n\nIn [7]: store2\nOut[7]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\nFile is CLOSED\n\nIn [8]: store1\nOut[8]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\n/df             frame_table  (typ->appendable,nrows->10,ncols->5,indexers->[index])\n/df2            frame_table  (typ->appendable,nrows->10,ncols->5,indexers->[index])\n\nIn [9]: store1.close()\n\nIn [10]: store1\nOut[10]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\nFile is CLOSED\n\nIn [11]: store1.close()\n\nIn [12]: store1\nOut[12]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\nFile is CLOSED\n\nIn [13]: store1.is_open\nOut[13]: False\n\nIn [14]: store1 = pd.HDFStore('test.h5')\n\nIn [15]: store2 = pd.HDFStore('test.h5')\n\nIn [16]: store1\nOut[16]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\n/df             frame_table  (typ->appendable,nrows->10,ncols->5,indexers->[index])\n/df2            frame_table  (typ->appendable,nrows->10,ncols->5,indexers->[index])\n\nIn [17]: store1.close()\n\nIn [18]: store1.close()\n\nIn [19]: store2\nOut[19]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\n/df             frame_table  (typ->appendable,nrows->10,ncols->5,indexers->[index])\n/df2            frame_table  (typ->appendable,nrows->10,ncols->5,indexers->[index])\n\nIn [20]: store2.close()\n\nIn [21]: store2\nOut[21]: \n<class 'pandas.io.pytables.HDFStore'>\nFile path: test.h5\nFile is CLOSED\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21906563",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21906563",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21906563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTA2NTYz",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-01T00:31:03Z",
    "updated_at": "2013-08-01T00:31:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Very nice and clean! But it's still true that I have to be careful with concurrent writing to a store, because pytables doesn't support that, correct?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21906827",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4409#issuecomment-21906827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4409",
    "id": 21906827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTA2ODI3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-01T00:37:47Z",
    "updated_at": "2013-08-01T00:37:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes concurrent writing from thread/process or even multi processing can cause havoc\n\nyou basically have to do this yourself\n\none easy way is to set an attribute in the file when u write (or use a separate lock file)\n\nreally just avoid it\n\nI basically use multiple processes to do my work each outputting to separate files\n\nthen when done have a single process read and append to a single store (which is pretty fast)\n"
  }
]
