[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236701744",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13873#issuecomment-236701744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13873",
    "id": 236701744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcwMTc0NA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:43:39Z",
    "updated_at": "2016-08-01T20:43:39Z",
    "author_association": "NONE",
    "body": "Hurrah.  My first remotely important contribution to an open source project. ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236702534",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13873#issuecomment-236702534",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13873",
    "id": 236702534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcwMjUzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:46:38Z",
    "updated_at": "2016-08-01T20:46:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mborysow even better is a PR!\n\ncontributing guide is [here](http://pandas.pydata.org/pandas-docs/stable/contributing.html)\n\nnote that you have selected a pretty non-trivial area :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236703168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13873#issuecomment-236703168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13873",
    "id": 236703168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcwMzE2OA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:48:55Z",
    "updated_at": "2016-08-01T20:48:55Z",
    "author_association": "NONE",
    "body": "@jreback I'll take a stab at it tonight.  =)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236713659",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13873#issuecomment-236713659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13873",
    "id": 236713659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcxMzY1OQ==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T21:28:56Z",
    "updated_at": "2016-08-01T21:28:56Z",
    "author_association": "NONE",
    "body": "@jreback, @shoyer \nDo I care about all these cases?  \n\nAll except the last one evaluates True.\n\n``` python\ndf2.loc[:] is df2\ndf2.loc[:, :] is df2\ndf2.loc[pd.IndexSlice[:, :]] is df2\ndf2.loc[pd.IndexSlice[:, :, :], :] is df2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236717538",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13873#issuecomment-236717538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13873",
    "id": 236717538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcxNzUzOA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T21:44:11Z",
    "updated_at": "2016-08-01T21:44:11Z",
    "author_association": "MEMBER",
    "body": "@mborysow  Indexing should always return a new object. So all of those should be False.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236730992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13873#issuecomment-236730992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13873",
    "id": 236730992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjczMDk5Mg==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T22:46:57Z",
    "updated_at": "2016-08-01T22:46:57Z",
    "author_association": "NONE",
    "body": "@shoyer \nBarring pep8 and other such issues, is this a terrible way to approach the problem?  First if and elif statements in **getitem** are mine.  I can refactor if necessary.  Not sure about overhead yet, they are all pretty cheap comparisons.  Will try to actually put this in a pull request and do all the other stuff requested in the contrib guidelines.  Just wanted to check if what I was doing was hideous. ;)\n\n``` python\nclass _LocationIndexer(_NDFrameIndexer):\n    _exception = Exception\n    def __getitem__(self, key):\n        # if being called as .loc[:]/.iloc[:] return a shallow copy\n        if isinstance(key, slice) and all([key.start is None, key.stop is None, key.step is None]):\n            return self.obj.copy(deep=False)\n        # if being called with a key that is a tuple containing only any number of slice(None, None, None) objects\n        elif (isinstance(key, tuple) and all([isinstance(subkey, slice) for subkey in key]) and\n             all([all([subkey.start is None, subkey.stop is None, subkey.step is None]) for subkey in key])):\n            return self.obj.copy(deep=False)\n\n        if isinstance(key, tuple):\n            key = tuple(com._apply_if_callable(x, self.obj) for x in key)\n        else:\n            # scalar callable may return tuple\n            key = com._apply_if_callable(key, self.obj)\n\n        if type(key) is tuple:\n            return self._getitem_tuple(key)\n        else:\n            return self._getitem_axis(key, axis=0)\n```\n\nIt gives the correct behavior for the assertion mentioned earlier as well as fixing my side effect issue.  It does cause one existing unit test to fail, but it's possible it's a bad test so I'll take a look (pasted output below).\n\nHad to explicitly test the slice start, stop, and step since a unittest failed trying to compare Timestamp to NoneType when doing key is slice(None, None, None).  This covers the case of a single slice(None, None, None) as well as a tuple of any length of them. \n\n```\nSingle failing test:\nFAIL: test_sort_values (pandas.tests.series.test_sorting.TestSeriesSorting)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/net/brainy/gobs/repositories/pandas/pandas/tests/series/test_sorting.py\", line 82, in test_sort_values\n    self.assertRaises(ValueError, f)\n  File \"/net/brainy/gobs/repositories/pandas/pandas/util/testing.py\", line 2326, in assertRaises\n    _callable(*args, **kwargs)\n  File \"/net/brainy/gobs/repositories/pandas/pandas/util/testing.py\", line 2396, in __exit__\n    raise AssertionError(\"{0} not raised.\".format(name))\nAssertionError: ValueError not raised.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236734717",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13873#issuecomment-236734717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13873",
    "id": 236734717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjczNDcxNw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T23:07:35Z",
    "updated_at": "2016-08-01T23:07:35Z",
    "author_association": "MEMBER",
    "body": "@mborysow I think [this](https://github.com/pydata/pandas/blob/d4f95fdebb74db5edb09c743b48c4b03e0940591/pandas/core/indexing.py#L1245) is closer to the source of the problem. Take note of the two other locations in that file calling `need_slice` as well.\n\nThe right solution here would probably be _either_ removing that special case or replacing the return value with a shallow copy instead.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303232598",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13873#issuecomment-303232598",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13873",
    "id": 303232598,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzIzMjU5OA==",
    "user": {
      "login": "margaret",
      "id": 1811496,
      "node_id": "MDQ6VXNlcjE4MTE0OTY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1811496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/margaret",
      "html_url": "https://github.com/margaret",
      "followers_url": "https://api.github.com/users/margaret/followers",
      "following_url": "https://api.github.com/users/margaret/following{/other_user}",
      "gists_url": "https://api.github.com/users/margaret/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/margaret/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/margaret/subscriptions",
      "organizations_url": "https://api.github.com/users/margaret/orgs",
      "repos_url": "https://api.github.com/users/margaret/repos",
      "events_url": "https://api.github.com/users/margaret/events{/privacy}",
      "received_events_url": "https://api.github.com/users/margaret/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T22:04:21Z",
    "updated_at": "2017-05-22T22:04:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Going to take a stab at this (PyCon sprints)"
  }
]
