[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312267675",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16804#issuecomment-312267675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16804",
    "id": 312267675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjI2NzY3NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T13:31:08Z",
    "updated_at": "2017-06-30T13:31:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe we're following the behavior of numpy here, where the size of `int` depends on the platform. From https://docs.scipy.org/doc/numpy-1.10.1/user/basics.types.html\r\n\r\n> Some types, such as int and intp, have differing bitsizes, dependent on the platforms (e.g. 32-bit vs. 64-bit machines). This should be taken into account when interfacing with low-level code (such as C or Fortran) where the raw memory is addressed.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312268027",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16804#issuecomment-312268027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16804",
    "id": 312268027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjI2ODAyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T13:32:37Z",
    "updated_at": "2017-06-30T13:32:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Though that not really a good explanation to the user for why the list would be int64, while the `range` is int32."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312280963",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16804#issuecomment-312280963",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16804",
    "id": 312280963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjI4MDk2Mw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T14:24:05Z",
    "updated_at": "2017-06-30T14:24:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is annoying, but agree with @TomAugspurger it's correct.  Ultimately the range object is passed on to numpy which expands using the `int` dtype.\r\n\r\n```\r\nIn [14]: np.array(range(100))\r\narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\r\n       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\r\n       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\r\n       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\r\n       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,\r\n       85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312282171",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16804#issuecomment-312282171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16804",
    "id": 312282171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjI4MjE3MQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T14:28:42Z",
    "updated_at": "2017-06-30T14:28:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose we could intercept it and force `int64` like we do with lists."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312282546",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16804#issuecomment-312282546",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16804",
    "id": 312282546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjI4MjU0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T14:30:12Z",
    "updated_at": "2017-06-30T14:30:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "we structure our tests to not use range at all for this reason\r\n\r\nhowever it is possible to change this by explicitly intercepting a range object in the Series constructor and introspecting the indices (we do this for RangeIndex already)\r\n\r\nso we could mark this if someone wants to do it\r\nit's not a bug rather a numpy work around"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312286408",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16804#issuecomment-312286408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16804",
    "id": 312286408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjI4NjQwOA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-30T14:44:42Z",
    "updated_at": "2017-06-30T14:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I actually think this would be a good idea.  Not a big deal, but also perf to be picked up, as apparently numpy expands the list.\r\n\r\n```python\r\nIn [24]: r = range(1000000)\r\n\r\nIn [25]: %timeit np.array(r)\r\n139 ms ± 755 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n\r\nIn [27]: %timeit np.arange(r.start, r.stop, r.step)\r\n1.36 ms ± 8.26 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)\r\n```\r\n"
  }
]
