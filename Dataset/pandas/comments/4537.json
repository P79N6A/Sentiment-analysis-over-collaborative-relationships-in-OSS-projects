[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22451112",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22451112",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22451112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUxMTEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T02:18:21Z",
    "updated_at": "2013-08-11T02:18:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "what do we so for the reverse case?\ncompare a float with a datetime / or an object (string)?\nI would actually like it to be nan (but then you would always have to fill it)\nI agree False if you have an incomparable across dtypes is prob appropriate \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22451233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22451233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22451233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUxMjMz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T02:30:33Z",
    "updated_at": "2013-08-11T02:30:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback this is easily fixed actually, fi you agree with this, I have a PR brewing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22451357",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22451357",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22451357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUxMzU3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T02:45:14Z",
    "updated_at": "2013-08-11T02:45:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback it actually fails pretty spectacularly with integers:\n\n``` python\n>>> df > 2\nTraceback\n   ...\nAttributeError: 'int' object has no attribute 'view'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22451877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22451877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22451877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUxODc3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T03:39:01Z",
    "updated_at": "2013-08-11T03:39:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "more weird behavior:\n\n``` python\nIn [3]: df = DataFrame(dict(A = date_range('20130102',periods=5),\n                            B = date_range('20130104',periods=5),\n                            C = np.random.randn(5)))\n\nIn [4]: df\nOut[4]:\n                    A                   B         C\n0 2013-01-02 00:00:00 2013-01-04 00:00:00  1.029470\n1 2013-01-03 00:00:00 2013-01-05 00:00:00 -0.589214\n2 2013-01-04 00:00:00 2013-01-06 00:00:00 -1.979968\n3 2013-01-05 00:00:00 2013-01-07 00:00:00  0.196116\n4 2013-01-06 00:00:00 2013-01-08 00:00:00 -0.190880\n\nIn [5]: df > np.array([2])\nOut[5]:\n      A     B      C\n0  True  True  False\n1  True  True  False\n2  True  True  False\n3  True  True  False\n4  True  True  False\n\nIn [6]: df == np.array([2])\nOut[6]:\n       A      B      C\n0  False  False  False\n1  False  False  False\n2  False  False  False\n3  False  False  False\n4  False  False  False\n\nIn [7]: df != np.array([2])\nOut[7]:\n      A     B     C\n0  True  True  True\n1  True  True  True\n2  True  True  True\n3  True  True  True\n4  True  True  True\n\nIn [8]: df < np.array([2])\nOut[8]:\n       A      B     C\n0  False  False  True\n1  False  False  True\n2  False  False  True\n3  False  False  True\n4  False  False  True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22451896",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22451896",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22451896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUxODk2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T03:40:50Z",
    "updated_at": "2013-08-11T03:40:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "apparently this is not in the language spec and changes behavior in Python 3 as well - http://stackoverflow.com/questions/3270680/how-does-python-compare-string-and-int\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22451971",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22451971",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22451971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUxOTcx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T03:49:59Z",
    "updated_at": "2013-08-11T03:50:15Z",
    "author_association": "MEMBER",
    "body": "in your example though they are ultimately comparing integers since that's how `datetime64` is represented\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22451977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22451977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22451977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUxOTc3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T03:50:25Z",
    "updated_at": "2013-08-11T03:50:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud ah, good to know.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22452002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22452002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22452002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUyMDAy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T03:54:25Z",
    "updated_at": "2013-08-11T03:54:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud but example mostly stays the same for things like string dataframes compared to integers, etc... it's kind of an edge case that shouldn't be relied upon.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22452069",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22452069",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22452069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUyMDY5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T04:03:08Z",
    "updated_at": "2013-08-11T04:06:39Z",
    "author_association": "MEMBER",
    "body": "i think we should leave comparison (with datetimes) as is...though i agree that's it's weird to compare a `datetime64` to an integer (and if someone is writing code mixing abstractions like this then they are probably doing something wrong, better to keep abstractions on the same level)\n\nwhat were you thinking of doing instead of just letting python's/numpy's comparison behavior do its thing? if two types are not equal then their values are not equal? maybe just for object arrays? seems hard since pandas is really just sort of \"numeric\", \"object\", and \"datetimes\" but lets you retain dtypes if you want. so comparing int to float should be valid (like it is now), but comparing object to not object should never return `True`? what about in the case of integer object arrays....seems like a mountain of complexity to deal with this edge case, maybe i'm overthinking it a bit though and you have a really elegant solution in mind\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22452220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22452220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22452220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUyMjIw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T04:16:53Z",
    "updated_at": "2013-08-11T04:16:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud honestly, I think we should just leave it, but have its fill value in comparisons be `False` for `<`, `>`, `<=`, `>=`, `==`, and `True` for `!=`. So this would be a very minor change. Comparisons against nan might need to be fixed, but it's somewhat separate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22452283",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22452283",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22452283,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUyMjgz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T04:23:37Z",
    "updated_at": "2013-08-11T04:23:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud or maybe no change at all.  Just weird that the fill value is `True` in `_comp_method`.\n\nHere's what it is now:\n\n``` python\ndef _comp_method(func, name, str_rep):\n    @Appender('Wrapper for comparison method %s' % name)\n    def f(self, other):\n        if isinstance(other, DataFrame):    # Another DataFrame\n            return self._compare_frame(other, func, str_rep)\n        elif isinstance(other, Series):\n            return self._combine_series_infer(other, func)\n        else:\n\n            # straight boolean comparisions we want to allow all columns\n            # (regardless of dtype to pass thru)\n            return self._combine_const(other, func, raise_on_error = False).fillna(True).astype(bool)\n\n    f.__name__ = name\n\n    return f\n\n```\n\nI think it should be:\n\n``` python\ndef _comp_method(func, name, str_rep):\n    @Appender('Wrapper for comparison method %s' % name)\n    def f(self, other):\n        if isinstance(other, DataFrame):    # Another DataFrame\n            return self._compare_frame(other, func, str_rep)\n        elif isinstance(other, Series):\n            return self._combine_series_infer(other, func)\n        else:\n\n            if func == operator.ne:\n                masker = True\n            else:\n                masker = False\n            # straight boolean comparisions we want to allow all columns\n            # (regardless of dtype to pass thru)\n            return self._combine_const(other, func, raise_on_error = False).fillna(masker).astype(bool)\n\n    f.__name__ = name\n\n    return f\n```\n\nSimilar to how @jreback set it up in the Series refactor\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22457903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22457903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22457903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDU3OTAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T13:41:55Z",
    "updated_at": "2013-08-11T13:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "here's an idea\n\ngenerally numeric operations in a frame are done using the numeric columns only (using _get_numeric_data)\n\nI think for comparisons you could do something similar, only allow a compatible dtype comparator on the rhs (eg say its a datetime then exclude non-datetimes on the lhs), this prevents the integer/datetime comparison issues; booleans prob need some special consideration here (there is a _get_boolean_data); easy to create other of these\n\nso for frames this makes perfect sense\nbut series prob needs to raise on invalid comparisons by default\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22458033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22458033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22458033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDU4MDMz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T13:53:22Z",
    "updated_at": "2013-08-11T13:53:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback would this still work:\n\n``` python\ndf = DataFrame({\"A\": [0, 1.2, np.nan], \"B\": [datetime.now(), datetime.now(), datetime.now()]})\ndf[ df > 0]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22458157",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22458157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22458157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDU4MTU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T14:04:28Z",
    "updated_at": "2013-08-11T14:04:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is why the comparisons return True by default (when the comparisons fail, eg fillna(True)), so it passes thru on the selection\n\nso will pass thru except where the A value = 0; \n\nI don't think this should change\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22459441",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22459441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22459441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDU5NDQx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T15:29:44Z",
    "updated_at": "2013-08-11T15:29:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "okay, then I guess this particularly thing should be left as-is? (since that's already the behavior that's happening).\n\nA little weird for this to happen\n\n``` python\nIn [1]: from pandas import *\n\nIn [2]: %paste\nrow = [datetime(1, 1, 1), datetime(2, 2, 2), datetime(3, 3, 3)]\ndf = DataFrame({\"A\": row, \"B\": row})\ndf > 3\n\n## -- End pasted text --\nOut[2]:\n      A     B\n0  True  True\n1  True  True\n2  True  True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22459453",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-22459453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 22459453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDU5NDUz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-11T15:30:54Z",
    "updated_at": "2013-08-11T15:31:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "but I guess you could chain the comparisons...which probably makes sense, like:\n\n``` python\n(df > 3) & (df < datetime(2, 2, 3))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23159038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4537#issuecomment-23159038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4537",
    "id": 23159038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTU5MDM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-23T11:56:16Z",
    "updated_at": "2013-08-23T11:56:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner I think we are not changing this, correct, close?\n"
  }
]
