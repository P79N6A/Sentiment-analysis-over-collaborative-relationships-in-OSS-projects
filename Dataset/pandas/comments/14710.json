[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/262494579",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14710#issuecomment-262494579",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14710",
    "id": 262494579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjQ5NDU3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-23T11:54:16Z",
    "updated_at": "2016-11-23T11:54:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "``datetime.date`` is not a first class type and you should simply not use it. This works correctly and properly for input of ``datetime.datetime`` which are coerced to ``Timestamp`` and fully handled.\r\n\r\nthe inference machinery in all of pandas tries pretty hard to coerce datetimelikes even if they end up as object; this is why the second one is the correct result.\r\n\r\n this has a special check for ``datetime.date`` but its completely non-performant and not really supported.\r\n\r\nif you want to submit a fix would take it (assuming it doesn't break anythng else). but we are not generally suppoprting ``datetime.date``."
  }
]
