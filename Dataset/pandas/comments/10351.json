[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111821791",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10351#issuecomment-111821791",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10351",
    "id": 111821791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTgyMTc5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T12:22:41Z",
    "updated_at": "2015-06-14T12:22:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "this would add quite a bit of complexity, so what exactly would be the gain here? \nas a side note, you are representing a datetime, which should almost certainly be coerced to a `datetime64[ns]` for any usage.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111826962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10351#issuecomment-111826962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10351",
    "id": 111826962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTgyNjk2Mg==",
    "user": {
      "login": "MaxNoe",
      "id": 5488440,
      "node_id": "MDQ6VXNlcjU0ODg0NDA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5488440?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MaxNoe",
      "html_url": "https://github.com/MaxNoe",
      "followers_url": "https://api.github.com/users/MaxNoe/followers",
      "following_url": "https://api.github.com/users/MaxNoe/following{/other_user}",
      "gists_url": "https://api.github.com/users/MaxNoe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MaxNoe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MaxNoe/subscriptions",
      "organizations_url": "https://api.github.com/users/MaxNoe/orgs",
      "repos_url": "https://api.github.com/users/MaxNoe/repos",
      "events_url": "https://api.github.com/users/MaxNoe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MaxNoe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T13:22:54Z",
    "updated_at": "2015-06-14T13:22:54Z",
    "author_association": "NONE",
    "body": "The date was just an example.\n\nThe gain would be that numpy operations on the underlying string array would be possible and\nthat one has not to care for a 'min_itemsize' in to_hdf or root_pandas 'to_root'\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111827245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10351#issuecomment-111827245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10351",
    "id": 111827245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTgyNzI0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-14T13:31:17Z",
    "updated_at": "2015-06-14T13:31:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "you don't need to specify `min_itemsize` except if you need to anticipate a bigger string in another chunk, it will be computed automatically otherwise.\n\nHowever, you have much greater complexity in the entire code base.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112432179",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10351#issuecomment-112432179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10351",
    "id": 112432179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjQzMjE3OQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-16T13:35:45Z",
    "updated_at": "2015-06-16T13:35:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "This seems nearly impossible.  What should happen in the following case?\n\n```\ndf = pd.DataFrame({'date': np.array(['2015-10-10', '2015-01-01'], dtype='S10')})\n\ndf.iloc[0,0] = 'Some other string that is large'\n```\n\nThe only manner I could imagine something like this being implemented would be to add a fixed-width-string-column type, like Categorical.  This column would have to be aware of the fixed size and do padding for strings that are too small (or raise) and raise for strings that are too large.  Seems like a lot effort to avoid a small number of function calls when writing data.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112752034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10351#issuecomment-112752034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10351",
    "id": 112752034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjc1MjAzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T10:47:18Z",
    "updated_at": "2015-06-17T10:47:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeh, I think I went thru this exercise before. The problem is that assignment might have to astype the entire array, which is completely inefficient. The `S` type would be nice if could mark a column as immutable (e.g. so for an `Index` type this could actually make sense). However, in almost all cases just use `Categoricals` and the efficient problem is solved anyhow.\n\nclosing, but if you want to discuss more, happy to.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/112752104",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10351#issuecomment-112752104",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10351",
    "id": 112752104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMjc1MjEwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-17T10:47:56Z",
    "updated_at": "2015-06-17T10:47:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a dupe of #5261 as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402238834",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10351#issuecomment-402238834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10351",
    "id": 402238834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjIzODgzNA==",
    "user": {
      "login": "stuz5000",
      "id": 7799980,
      "node_id": "MDQ6VXNlcjc3OTk5ODA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7799980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stuz5000",
      "html_url": "https://github.com/stuz5000",
      "followers_url": "https://api.github.com/users/stuz5000/followers",
      "following_url": "https://api.github.com/users/stuz5000/following{/other_user}",
      "gists_url": "https://api.github.com/users/stuz5000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stuz5000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stuz5000/subscriptions",
      "organizations_url": "https://api.github.com/users/stuz5000/orgs",
      "repos_url": "https://api.github.com/users/stuz5000/repos",
      "events_url": "https://api.github.com/users/stuz5000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stuz5000/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-03T17:43:54Z",
    "updated_at": "2018-07-03T17:43:54Z",
    "author_association": "NONE",
    "body": "Since pandas supports customs types now:\r\nhttps://pandas.pydata.org/pandas-docs/version/0.23.1/whatsnew.html#whatsnew-023-enhancements-extension\r\ncan the same mechanism be used to support fixed width strings?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402244385",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10351#issuecomment-402244385",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10351",
    "id": 402244385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjI0NDM4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-03T18:03:00Z",
    "updated_at": "2018-07-03T18:03:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "in theory\r\n\r\nbut would require a community pull request to make this happen "
  }
]
