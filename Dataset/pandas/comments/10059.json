[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98997707",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10059#issuecomment-98997707",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10059",
    "id": 98997707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4OTk3NzA3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T08:47:36Z",
    "updated_at": "2015-05-05T08:47:36Z",
    "author_association": "MEMBER",
    "body": "Can you read this data using pytables directly? (That's the library pandas uses to handle HDF5.)\n\nI think your question reflects some confusion about the purpose of HDF5 support in pandas. HDF5 is an extremely flexible file format, so mapping every HDF5 file onto native pandas data structures is hopeless. Instead, pandas uses HDF5 for a custom binary serialization format (one still readable by other tools). If you want to read/write arbitrary HDF5, you should probably stick to h5py, and write your own helper functions for reading and writing dataframes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/98998765",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10059#issuecomment-98998765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10059",
    "id": 98998765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk4OTk4NzY1",
    "user": {
      "login": "kierun",
      "id": 3079575,
      "node_id": "MDQ6VXNlcjMwNzk1NzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3079575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kierun",
      "html_url": "https://github.com/kierun",
      "followers_url": "https://api.github.com/users/kierun/followers",
      "following_url": "https://api.github.com/users/kierun/following{/other_user}",
      "gists_url": "https://api.github.com/users/kierun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kierun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kierun/subscriptions",
      "organizations_url": "https://api.github.com/users/kierun/orgs",
      "repos_url": "https://api.github.com/users/kierun/repos",
      "events_url": "https://api.github.com/users/kierun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kierun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T08:54:39Z",
    "updated_at": "2015-05-05T08:54:39Z",
    "author_association": "NONE",
    "body": "I can map it using hd5py, as shown above. I have just tried with pytables and it does not work. Should I report it as a bug there instead of here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99025004",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10059#issuecomment-99025004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10059",
    "id": 99025004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MDI1MDA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T10:30:36Z",
    "updated_at": "2015-05-05T10:30:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kierun as I explained in the SO answer, this is not implemented in `PyTables` AFAIK. You can use `h5py`, read it, and then try to map to a pandas structure (though it doesn't look like it would nicely map).\n\n`PyTables` implements a sub-set of `HDF5` with a pythonic interface; `h5py` is a much more strict c-API translation. \n\nThis is not a bug; rather you are expecting arbitrary structure support which does not exist.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99031955",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10059#issuecomment-99031955",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10059",
    "id": 99031955,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MDMxOTU1",
    "user": {
      "login": "kierun",
      "id": 3079575,
      "node_id": "MDQ6VXNlcjMwNzk1NzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3079575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kierun",
      "html_url": "https://github.com/kierun",
      "followers_url": "https://api.github.com/users/kierun/followers",
      "following_url": "https://api.github.com/users/kierun/following{/other_user}",
      "gists_url": "https://api.github.com/users/kierun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kierun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kierun/subscriptions",
      "organizations_url": "https://api.github.com/users/kierun/orgs",
      "repos_url": "https://api.github.com/users/kierun/repos",
      "events_url": "https://api.github.com/users/kierun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kierun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T10:52:59Z",
    "updated_at": "2015-05-05T10:52:59Z",
    "author_association": "NONE",
    "body": "I am really struggling to understand why a list of string is an \"arbitrary structure\".  We have string in Python and in PyTables as entities. We have arrays/lists. So, how come we cannot have an array/list of strings?\n\nMaybe it's the C++ side fault for using something weird, but in that case there should be a way to change that, should there not?\n\nI am really not trying to be a pain, but I just don't get it how a collection of base types is not support.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99035716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10059#issuecomment-99035716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10059",
    "id": 99035716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MDM1NzE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T11:14:11Z",
    "updated_at": "2015-05-05T11:14:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kierun its not a 'list-of-strings', rather a sub-node (I think) of 2 other items. If you put them in the main table this might work. I don't know.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/99062046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10059#issuecomment-99062046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10059",
    "id": 99062046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MDYyMDQ2",
    "user": {
      "login": "kierun",
      "id": 3079575,
      "node_id": "MDQ6VXNlcjMwNzk1NzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3079575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kierun",
      "html_url": "https://github.com/kierun",
      "followers_url": "https://api.github.com/users/kierun/followers",
      "following_url": "https://api.github.com/users/kierun/following{/other_user}",
      "gists_url": "https://api.github.com/users/kierun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kierun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kierun/subscriptions",
      "organizations_url": "https://api.github.com/users/kierun/orgs",
      "repos_url": "https://api.github.com/users/kierun/repos",
      "events_url": "https://api.github.com/users/kierun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kierun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-05T12:07:25Z",
    "updated_at": "2015-05-05T12:07:25Z",
    "author_association": "NONE",
    "body": "@jberka And now I get it... Looking back at the C++ code, it writes a  H5::VarLenType which indeed is an arbitrary structure.  Thank you very much for your patience. ^_~\n"
  }
]
