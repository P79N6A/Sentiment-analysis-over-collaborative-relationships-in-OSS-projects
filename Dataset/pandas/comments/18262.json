[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343928804",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-343928804",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 343928804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzkyODgwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T14:07:09Z",
    "updated_at": "2017-11-13T14:07:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jorisvandenbossche @TomAugspurger if any comments / objections pls note and I will update the top section."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343929866",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-343929866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 343929866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzkyOTg2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T14:11:01Z",
    "updated_at": "2017-11-13T14:11:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I'm -1 on deprecating `xs`.\r\n\r\n-0 on deprecating `ptp`\r\n\r\nWhat's the  alternative to `tshift`? I think that's sometimes useful when a shift won't quite work."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343932461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-343932461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 343932461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzkzMjQ2MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T14:20:11Z",
    "updated_at": "2017-11-13T14:45:50Z",
    "author_association": "MEMBER",
    "body": "I was just writing up a similar issue :-) (but only for Series, as by fixing the api docs and docstrings, I bumped into quite some methods unknown to me)\r\n\r\nOverview of methods that could be considered for removal (note that this list is very long, and are methods that I would not miss if they are gone, which does *not* mean that they are not useful to others, it's just for stirring discussion):\r\n\r\n* Related to the original ndarray subclassing:\r\n  * `Series.compress()`\r\n  * `Series.flags`\r\n  * `Series.imag` / `Series.real`\r\n  * `Series.item()`\r\n  * `Series.itemsize`\r\n  * `Series.nonzero()`\r\n  * `Series.put()`\r\n  * `Series.strides`\r\n  * `Series.ptp`\r\n\r\n* Time series specific ones (the question here is if they are all worth it as method, while very specific in application):\r\n  * `Series.at_time()`\r\n  * `Series.first()`\r\n  * `Series.last()`\r\n  * `Series.between_time()`\r\n  * `Series.tshift()`\r\n  \r\n* Finance? specific\r\n  * `Series.compound()`\r\n\r\n* Other:\r\n  * `Series.asobject`\r\n  * `Series.as_matrix`\r\n  * `Series.between()`\r\n  * `Series.first_valid_index()` /  `Series.last_valid_index()`\r\n  * `Series.from_array()`\r\n  * `Series.slice_shift()`\r\n  * `Series.swapaxes()`\r\n  * `Series.truncate()`\r\n  * `Series.valid()`\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343941875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-343941875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 343941875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk0MTg3NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T14:50:11Z",
    "updated_at": "2017-11-13T14:50:11Z",
    "author_association": "MEMBER",
    "body": "> What's the alternative to tshift? I think that's sometimes useful when a shift won't quite work.\r\n\r\n`shift` already seems to have a `freq` keyword as well, and it dispatches to `tshift` if `freq` is specified\r\n\r\nNote that my above list is very long. The more obvious ones to me that are not yet in the list in the top post are: `as_matrix` (and maybe `swapaxes` ?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344865393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-344865393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 344865393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg2NTM5Mw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T09:29:16Z",
    "updated_at": "2017-11-16T09:29:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could ``.add_prefix`` and ``.add_suffix`` be added to the deprecation list?\r\n\r\nThe dataframe/Series namespace is huge and cutting down can make the API easier to grasp. I would also think it more logical and idiomatic to operate directly on the columns, rather than on the dataframe."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344895128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-344895128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 344895128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDg5NTEyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T11:25:35Z",
    "updated_at": "2017-11-16T11:25:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@topper-123 added, feel free to submit PR's for any of these!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344994262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-344994262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 344994262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk5NDI2Mg==",
    "user": {
      "login": "manrajgrover",
      "id": 5673050,
      "node_id": "MDQ6VXNlcjU2NzMwNTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5673050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manrajgrover",
      "html_url": "https://github.com/manrajgrover",
      "followers_url": "https://api.github.com/users/manrajgrover/followers",
      "following_url": "https://api.github.com/users/manrajgrover/following{/other_user}",
      "gists_url": "https://api.github.com/users/manrajgrover/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manrajgrover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manrajgrover/subscriptions",
      "organizations_url": "https://api.github.com/users/manrajgrover/orgs",
      "repos_url": "https://api.github.com/users/manrajgrover/repos",
      "events_url": "https://api.github.com/users/manrajgrover/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manrajgrover/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T17:18:05Z",
    "updated_at": "2017-11-16T17:18:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche @jreback I would love to submit PRs for this issue. How can I go about in deprecating these APIs?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344997038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-344997038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 344997038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDk5NzAzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-16T17:27:26Z",
    "updated_at": "2017-11-16T17:27:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "see for example https://github.com/pandas-dev/pandas/pull/18258"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345182580",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-345182580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 345182580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTE4MjU4MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T08:52:30Z",
    "updated_at": "2017-11-17T08:52:30Z",
    "author_association": "MEMBER",
    "body": "@ManrajGrover Best first post a comment here with which one you would start doing, as I think not all those listed above are uncontroversial."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345259016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-345259016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 345259016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI1OTAxNg==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T14:31:48Z",
    "updated_at": "2017-11-17T20:26:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think ``.compound``, while not very useful ATM,  could be more useful if it was cumulative, ie. just use ``.cumprod`` instead of ``.prod`` and return a series:\r\n\r\n```python\r\n>>> s = pd.Series([0.2, 0.2, 0.2])\r\n>>> s.compound()  # essentialy the same as (s+1).cumprod() - 1\r\n0    0.2000\r\n1    0.440\r\n2    0.728\r\ndtype: float64\r\n```\r\n\r\nThe above would play excellently together with ``.pct_change``, so ``data.pct_change().compound()`` would read really well and be very useful in many use cases.\r\n\r\nany opinions if ``.compound`` could be changed like above rather than deprecated? If ``.compound`` returns a scalar as today, I agree it should be deprecated."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345316179",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-345316179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 345316179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTMxNjE3OQ==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T17:55:39Z",
    "updated_at": "2017-11-17T20:53:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've started a PR for ``add_prefix`` and ``add_postfix``.\r\n\r\nI will take on ``Series.asobject`` and ``NDFrame.as_matrix`` next, unless @ManrajGrover wants to to them, in which case you'll be welcome.\r\n\r\nAnd yes, I like to remove superfluous methods that start with ``a``, as these are so visible then tab-completing in the REPL :-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345431915",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-345431915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 345431915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQzMTkxNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-18T10:03:05Z",
    "updated_at": "2017-11-18T10:03:05Z",
    "author_association": "MEMBER",
    "body": "Although I never use `add_prefix` / `add_suffix`, I think they are quite used a bit (looking at the number of stackoverflow questions), so I am not yet fully convinced they are ok to deprecate. \r\nSo I would rather already start with the others like asobject, as_matrix, valid, tshift, ..\r\n\r\n`as_matrix` is also used a bit (more than the others mentioned in the list above), but because it is a very confusing name for what it does, I think it would be good to deprecate."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345437216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-345437216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 345437216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQzNzIxNg==",
    "user": {
      "login": "manrajgrover",
      "id": 5673050,
      "node_id": "MDQ6VXNlcjU2NzMwNTA=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5673050?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manrajgrover",
      "html_url": "https://github.com/manrajgrover",
      "followers_url": "https://api.github.com/users/manrajgrover/followers",
      "following_url": "https://api.github.com/users/manrajgrover/following{/other_user}",
      "gists_url": "https://api.github.com/users/manrajgrover/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manrajgrover/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manrajgrover/subscriptions",
      "organizations_url": "https://api.github.com/users/manrajgrover/orgs",
      "repos_url": "https://api.github.com/users/manrajgrover/repos",
      "events_url": "https://api.github.com/users/manrajgrover/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manrajgrover/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-18T11:50:00Z",
    "updated_at": "2017-11-18T11:50:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I can start with `Index.summary()` for now and pick the next one from the following list:\r\n\r\n- `Index.dtype_str`\r\n-  `.ftypes/.get_ftype_counts` (#18243)\r\n- ` Index/Series.asobject` (#18237)\r\n-  `Index.to_native_types()` (make private)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345443467",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-345443467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 345443467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ0MzQ2Nw==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-18T13:48:48Z",
    "updated_at": "2017-11-18T13:48:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche, what about removing a prefix/suffix or doing any other transformation you'd want to do on a index? My point is that ``.add_prefix``/``.add_suffix`` are way too specialized methods, and pandas should have methods that are more generally useful. ``.rename`` is great in that respect, and should be the canonical method for changing axis values.\r\n\r\nI've already made a proposal for ``.add_prefix``/``.add_suffix`` (#18347), so that can wait to see what the agreement will be on that. I would appreciate input though, if you see anything obvoíous, as that is the first deprerecation PR I've made.\r\n\r\nIn the same vein, the difference between ``.as_matrix`` and ``.values`` is miniscule to the point where ``df[columns].values`` is the same is ``df.as_matrix(columns)``. pandas will be cleaner and leaner with only one way to archieve such a common result (obviously so, IMO...).\r\n\r\nI'll make a PR for ``as_matrix``, as there seems to be agreement on that."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346482464",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346482464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346482464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQ4MjQ2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T21:49:56Z",
    "updated_at": "2017-11-22T21:49:56Z",
    "author_association": "MEMBER",
    "body": "> My point is that .add_prefix/.add_suffix are way too specialized methods, and pandas should have methods that are more generally useful. .rename is great in that respect, and should be the canonical method for changing axis values.\r\n\r\nI completely agree with this. But, you also have the fact that people are using it and thus a removal will cause inconvenience / break code. So it is always a balance between both. \r\n\r\nI am certainly +1 on deprecating `as_matrix`. As you say this is almost exactly the same as `.values`, and although I think this method is also used quite a bit (the argument I use for add_prefix ..), it's an awfully confusing name, so that's for me an extra reason to deprecate it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346502617",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346502617",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346502617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjUwMjYxNw==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T23:45:51Z",
    "updated_at": "2017-11-22T23:45:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here are my deprecation suggestions:\r\n\r\n- I'd like to see `read_table` deprecated. Its the exact same as `read_csv` with tab delimiter\r\n- remove `get_dtype_counts/get_ftype_counts` - these are just convenience for `DataFrame.dtypes.value_counts`\r\n- remove the indexers `iat/at`. They give a small performance boost for an increase in API complexity\r\n- Use one of `iterrows/itertuples` to iterate over rows\r\n- remove `lookup` and `take` - other indexers do the same thing\r\n- remove `combine` - never used it and almost no use on SO. Looks to do nothing more than `DataFrame.add`\r\n- Probably get rid of `applymap` - should do the same thing with `apply` and then `map` inside of it\r\n- Use only `agg` not `aggregate`\r\n- Remove `clip_upper` and `clip_lower` and keep `DataFrame.clip` for both\r\n- Combine `add_prefix/add_suffix` into one method\r\n- One of the biggest issues are the methods that work only with DataFrames with a DatetimeIndex - `first, last, truncate, at_time, between_time, to_period, to_timestamp` - These could be removed or put in an accessor\r\n- Remove `reindex_axis` and `reindex_like` in favor of just `reindex`\r\n- remove `isna` - its an alias to `isnull`\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346504304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346504304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346504304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjUwNDMwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T23:57:44Z",
    "updated_at": "2017-11-22T23:57:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> remove the indexers iat/at. They give a small performance boost for an increase in API complexity\r\n\r\nthese are convenience methods, not sure they add much to API burden\r\n\r\n> take\r\n\r\nthis is a very common notion and is a very array-like method\r\n\r\n> remove isna - its an alias to isnull\r\n\r\nthis was just added for compat with ``dropna``, ``fillna``, see the pattern :>, so if anything we would remove ``isnull``, but that has been in the API so long that it may well nigh be impossible to actually remove (and more to the point very annoying)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346562657",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346562657",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346562657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjU2MjY1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-23T09:07:05Z",
    "updated_at": "2017-11-23T09:07:20Z",
    "author_association": "MEMBER",
    "body": "> Remove reindex_axis and reindex_like in favor of just reindex\r\n\r\n`reindex_axis` is already deprecated. \r\n\r\n> One of the biggest issues are the methods that work only with DataFrames with a DatetimeIndex - first, last, truncate, at_time, between_time, to_period, to_timestamp - These could be removed or put in an accessor\r\n\r\n`to_period` and `to_timestamp` on a series do something else than the methods in the `.dt` accessor. The former work on the index, the latter on the values. So it's not possible to just move them. \r\nBut on the other datetime-related I agree, I also find it a bit unfortunate that those exist (certainly first and last are very confusing in naming) "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346645799",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346645799",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346645799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjY0NTc5OQ==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-23T15:25:16Z",
    "updated_at": "2017-11-23T15:25:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback There are only a total of 13 occurrences of `df.take` in [all of Stack Overflow](https://stackoverflow.com/search?q=%5Bpandas%5D+df.take) and in my opinion should never be used.\r\n\r\n`df.iat/.at` are probably too entrenched in legacy code to remove but they provide no extra functionality. Indexing is the most confusing aspect to pandas and the less the better. Maybe a better design would have been to do `df.loc(type='scalar')['row', 'col']`\r\n\r\nI guess there is no going back on `isna/isnull` but I really dislike having methods that are aliases of one another.\r\n\r\n@jorisvandenbossche I wasn't being clear, but all those DataFrame/Series methods that only work on DateTimeIndexes could be put in their own accesor (not .dt) but I don't think even that would be a good idea. Perhaps just deprecating all of them would be best."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346659384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346659384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346659384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjY1OTM4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-23T16:24:15Z",
    "updated_at": "2017-11-23T16:24:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback There are only a total of 13 occurrences of df.take in all of Stack Overflow and in my opinion should never be used.\r\n\r\n``.take()`` is a common name for array-like things.\r\n\r\n> df.iat/.at are probably too entrenched in legacy code to remove but they provide no extra functionality. Indexing is the most confusing aspect to pandas and the less the better. Maybe a better design would have been to do df.loc(type='scalar')['row', 'col']\r\n\r\nyour suggestion is *much* less readable\r\n\r\n> I guess there is no going back on isna/isnull but I really dislike having methods that are aliases of one another.\r\n\r\nsure, but isnull is even *more* entrenched than anything else.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346690126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346690126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346690126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjY5MDEyNg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-23T19:57:25Z",
    "updated_at": "2017-11-23T19:57:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> df.iat/.at are probably too entrenched in legacy code to remove but they provide no extra functionality. Indexing is the most confusing aspect to pandas and the less the better. Maybe a better design would have been to do df.loc(type='scalar')['row', 'col']\r\n\r\nAs indexing is simplified & improved, the speed diff between `.loc` and `.at` should fall (a lot of the time it's a very similar function). Then deprecating `.at` will cause less strife"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346980890",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346980890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346980890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk4MDg5MA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T03:09:48Z",
    "updated_at": "2017-11-26T03:09:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "DataFrames have a method ``.boxplot``. I would assume this should be deprecated and people should use ``.plot.box`` instead?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346981274",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346981274",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 346981274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk4MTI3NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T03:22:58Z",
    "updated_at": "2017-11-26T03:22:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes i think there is an issue about this"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347003947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-347003947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 347003947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAwMzk0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T12:06:19Z",
    "updated_at": "2017-11-26T12:06:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "The two methods aren’t quite equivalent iirc.\n\n________________________________\nFrom: Jeff Reback <notifications@github.com>\nSent: Saturday, November 25, 2017 10:23:01 PM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Mention\nSubject: Re: [pandas-dev/pandas] DEPR: let's deprecate (#18262)\n\n\nyes i think there is an issue about this\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/issues/18262#issuecomment-346981274>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHItMklrTp28DbdKXtQmYS9WIL_7sKks5s6NmVgaJpZM4Qb0GL>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347022502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-347022502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 347022502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyMjUwMg==",
    "user": {
      "login": "reidy-p",
      "id": 21114125,
      "node_id": "MDQ6VXNlcjIxMTE0MTI1",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21114125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/reidy-p",
      "html_url": "https://github.com/reidy-p",
      "followers_url": "https://api.github.com/users/reidy-p/followers",
      "following_url": "https://api.github.com/users/reidy-p/following{/other_user}",
      "gists_url": "https://api.github.com/users/reidy-p/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/reidy-p/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/reidy-p/subscriptions",
      "organizations_url": "https://api.github.com/users/reidy-p/orgs",
      "repos_url": "https://api.github.com/users/reidy-p/repos",
      "events_url": "https://api.github.com/users/reidy-p/events{/privacy}",
      "received_events_url": "https://api.github.com/users/reidy-p/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T16:54:20Z",
    "updated_at": "2017-11-26T16:54:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does anyone have any objections to a PR to deprecate ``from_items``? There is already an issue discussing its deprecation #17320. It seems that any of its functionality can be be replicated in ``DataFrame(dict(..))`` or similar.\r\n\r\nAlso xref #17312, #4916"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347025655",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-347025655",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 347025655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyNTY1NQ==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T17:44:51Z",
    "updated_at": "2017-11-26T17:47:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "`boxplot` has some differences to `df.box.plot`. One issue is here - #15079. `boxplot` also defaults to making a matplotlib grid (those background dotted lines on the tick marks).\r\n\r\nAlso, `clip_upper` and `clip_lower` have to up there on easiest and least likely to affect others.\r\n\r\n@reidy-p `DataFrame.from_items` looks like a good candidate. I only see [6 occurrences on SO](https://stackoverflow.com/search?q=%5Bpandas%5D+from_items)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347026496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-347026496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 347026496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzAyNjQ5Ng==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-26T17:58:22Z",
    "updated_at": "2017-11-26T17:58:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "This might be unpopular, but I don't like the fact that the indexing operator selects rows when given a slice but columns when given a single label or list of labels.\r\n\r\nSelects columns\r\n```\r\n>>> df['col1'] \r\n>>> df[['col1', 'col2']]\r\n```\r\n\r\nAll of a sudden selects rows?\r\n```\r\n>>> df[:5]\r\n```\r\n\r\nLots of users will find this behavior confusing. \r\n\r\nI think it actually might be simplest to deprecate the indexing operator altogether and only have `.loc` and `.iloc`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347050004",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-347050004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 347050004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA1MDAwNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T00:03:00Z",
    "updated_at": "2017-11-27T00:03:00Z",
    "author_association": "MEMBER",
    "body": "@tdpetrou let's keep this issue focused on discussing \"potential methods that can be deprecated because they are hardly used / very awkward / internals\". \r\nIndexing is a whole other can of worms (see eg https://github.com/pandas-dev/pandas/issues/9595), the behaviour you mention can maybe be confusing but is well established and changing this will break a gigantic amount of user code (but feel free to open a separate issue if you want)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347404186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-347404186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 347404186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzQwNDE4Ng==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-28T03:39:30Z",
    "updated_at": "2017-11-28T03:39:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @jorisvandenbossche. I added my comment there.\r\n\r\nAnother source of confusion for users is the ability of `Series.map` to take a function. `Series.apply` can also accept a function as well as other arguments. There is no reason for `Series.map` to accept a function and its better served to do exactly one thing - and that is to literally map one value to another. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347647864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18262#issuecomment-347647864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18262",
    "id": 347647864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzY0Nzg2NA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-28T20:07:56Z",
    "updated_at": "2017-11-28T20:07:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tdpetrou , ``Series.map(func)`` is similar to the python built-in ``map(func, iterable)``, except it's object-oriented. It's as intended and expected."
  }
]
