[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/475905594",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25843#issuecomment-475905594",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25843",
    "id": 475905594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NTkwNTU5NA==",
    "user": {
      "login": "tswast",
      "id": 247555,
      "node_id": "MDQ6VXNlcjI0NzU1NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tswast",
      "html_url": "https://github.com/tswast",
      "followers_url": "https://api.github.com/users/tswast/followers",
      "following_url": "https://api.github.com/users/tswast/following{/other_user}",
      "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tswast/subscriptions",
      "organizations_url": "https://api.github.com/users/tswast/orgs",
      "repos_url": "https://api.github.com/users/tswast/repos",
      "events_url": "https://api.github.com/users/tswast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tswast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-23T21:18:37Z",
    "updated_at": "2019-03-23T21:18:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is related to https://github.com/pandas-dev/pandas/pull/23990 (though if I'm doing something that's deprecated, I didn't see a deprecation warning).\r\n\r\nI tried using `pd.DatetimeTZDtype(unit='ns')` to force a timezone-naive dtype, but the timezone is required. The only way I could figure to use `datetime64[ns]` is to pass in a string as I'm doing. Is it just not possible to choose to treat a timezone-aware `datetime.datetime` as a naive `datetime64[ns]` anymore?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476426843",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25843#issuecomment-476426843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25843",
    "id": 476426843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQyNjg0Mw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T00:23:44Z",
    "updated_at": "2019-03-26T00:23:44Z",
    "author_association": "MEMBER",
    "body": "I guess in theory the `dtype` argument in the DataFrame constructor should enforce the final dtype (in this case strip the timezone). Though for this use case, it's more idiomatic to `df2.dates.dt.tz_localize(None)` after construction. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479656947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25843#issuecomment-479656947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25843",
    "id": 479656947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY1Njk0Nw==",
    "user": {
      "login": "tswast",
      "id": 247555,
      "node_id": "MDQ6VXNlcjI0NzU1NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/247555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tswast",
      "html_url": "https://github.com/tswast",
      "followers_url": "https://api.github.com/users/tswast/followers",
      "following_url": "https://api.github.com/users/tswast/following{/other_user}",
      "gists_url": "https://api.github.com/users/tswast/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tswast/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tswast/subscriptions",
      "organizations_url": "https://api.github.com/users/tswast/orgs",
      "repos_url": "https://api.github.com/users/tswast/repos",
      "events_url": "https://api.github.com/users/tswast/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tswast/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T21:00:13Z",
    "updated_at": "2019-04-03T21:01:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Interesting that `tz_localize` is more idiomatic. It seemed much more natural to me to set the `dtype` once at construction time. I suspect it's more idiomatic because setting the `dtype` to a tz-aware dtype didn't really work before 0.24. I had a bear of a time in https://github.com/pydata/pandas-gbq/pull/263 trying to get pandas versions before 0.24 to act the same as 0.24 regarding `datetime64[ns]`, but it seems earlier versions don't like getting `DatetimeTZDtype` as a `dtype`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479667957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25843#issuecomment-479667957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25843",
    "id": 479667957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTY2Nzk1Nw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T21:35:56Z",
    "updated_at": "2019-04-03T21:37:41Z",
    "author_association": "MEMBER",
    "body": "Exactly, the reason I'd say more idiomatic is because the timezone conversion process is a lot more robust and explicit with the `tz_localize/tz_convert` methods.\r\n\r\nI don't think as much care has been given to ensure that correct timezone conversion process occurs when using `dtype`s in the constructor. The one exception is `.astype()` but I still advocate for `tz_localize`/`tz_convert` \r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#tz-aware-dtypes"
  }
]
