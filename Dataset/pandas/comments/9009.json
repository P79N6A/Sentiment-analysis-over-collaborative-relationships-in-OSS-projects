[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65761845",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9009#issuecomment-65761845",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9009",
    "id": 65761845,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzYxODQ1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-05T08:46:48Z",
    "updated_at": "2014-12-05T09:10:57Z",
    "author_association": "MEMBER",
    "body": "@zhopan77 Thanks for the report!\n\nThere was recently introduced a new feature that allows you to override the default chosen type using the `dtype` kwarg in `to_sql` (will be released in 0.15.2 in one or two weeks). See #8926. \nSo that should solve the immediate possibility to change the default (without changing the `_sqlalchemy_type` or `_SQL_TYPES`).\n\nBut regarding that default. For the mysql legacy `SQL_TYPES`, I am not going to change it anymore, as it is deprecated anyways. But for the sqlalchemy mode, I think we should use something by default that does not result in data loss. \nCan you give a small example? Because eg with posgresql, `FLOAT` does mean double precision (and if you write a table, it also use the postgresql `double precision` type)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65766053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9009#issuecomment-65766053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9009",
    "id": 65766053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NzY2MDUz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-05T09:32:36Z",
    "updated_at": "2014-12-05T09:32:36Z",
    "author_association": "MEMBER",
    "body": "Example with mysql:\n\n```\nIn [57]: df = pd.DataFrame(np.random.randn(5, 5), columns=list('abcde'))\n\nIn [58]: df.to_sql('test_float', engine_pymysql, index=False, if_exists='replace')\n\nIn [59]: res = pd.read_sql_table('test_float', engine_pymysql)\n\nIn [60]: df.iloc[0,0]\nOut[60]: -0.50432201678449218\n\nIn [61]: res.iloc[0,0]\nOut[61]: -0.50432200000000005\n\nIn [62]: from sqlalchemy.dialects.mysql import DOUBLE\n\nIn [63]: df.to_sql('test_float', engine_pymysql, index=False, if_exists='replace', dtype={'a':DOUBLE})\n\nIn [64]: res = pd.read_sql_table('test_float', engine_pymysql)\n\nIn [65]: res.iloc[0,0]\nOut[65]: -0.50432201679999999\n```\n\nIt is a bit annoying that the `Float` sqlalchemy type means something different for differen flavors.\n"
  }
]
