[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/327086057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17435#issuecomment-327086057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17435",
    "id": 327086057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzA4NjA1Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T06:45:53Z",
    "updated_at": "2017-09-05T06:45:53Z",
    "author_association": "MEMBER",
    "body": "Hmm...this is an interesting proposal.  Being able to disentangle the mess of Cython code beneath `pandas` would be good.  Give it a shot!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/330614351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17435#issuecomment-330614351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17435",
    "id": 330614351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDYxNDM1MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-19T17:34:03Z",
    "updated_at": "2017-09-19T17:34:03Z",
    "author_association": "MEMBER",
    "body": "In case anyone is curious where I'm going with the whole `tslibs` thing:\r\n\r\nOnce the current set of PRs is resolved, I'll make one to separate out `_NaT`, `NaTType` and `NaT`.  There are some very small optimizations that can be made, nothing worth writing home about.  What _is_ worthwhile is that `lib` can just import `NaT` and not have a dependency on `tslib`.  (and `algos` which cimports from `lib`, and `groupby` which cimports from `algos`...)\r\n\r\nOnce `NaT` is separated, and assuming #17363 is merged, then all of the `_TSObject` logic can be separated (it takes some work to disentangle the references to `Timestamp`, but is worth it) into `tslibs.conversion`.  `index._to_i8` thematically belongs in this module, as do `lib.gmtime`, `lib.to_datetime`, `lib.to_timestamp` (which is a misnomer), `lib.array_to_timestamp`, and `lib.time64_to_datetime`.\r\n\r\n`tslibs.timedeltas` clocks in at about 1400 lines, defines `_Timedelta`.  A few funcs from `core.indexes.timedeltas` can naturally be moved up here.  `tslibs.timestamps` (~1100 lines) defines `_Timestamp`.  `Timestamp` and `Timedelta` still need to be defined in `tslib` because they refer to each other.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/332254657",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17435#issuecomment-332254657",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17435",
    "id": 332254657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMjI1NDY1Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-26T16:23:05Z",
    "updated_at": "2017-09-26T16:23:05Z",
    "author_association": "MEMBER",
    "body": "OK, we've gotten to a point in `tslibs` where decisions need to be made about `NaTType`.\r\n\r\nThe proposed module`tslibs.nattype` defines `_NaT`, `NaTType`, `NaT`, and `_checknull_with_nat`.  It has no pandas dependencies outside of `util` (not even datetime.pxd), so is very light-weight.  This in turn allows us to separate out `_TSObject` logic and disentangle `lib` from `tslib`.  It is a _big_ win.\r\n\r\nThat said, it is not a matter of cut/paste the same way as other `tslibs` modules have been.  There are three potential sticking points.\r\n\r\n1) At the moment `_NaT` subclasses `_Timestamp` (which subclasses `datetime`).  In the proposed change, `_NaT` subclasses `datetime` directly.  This doesn't matter in and of itself, but it is technically a change that reviewers should be aware of.\r\n\r\n2) The two places where the `_Timestamp` inheritance are currently used are in `_NaT.__sub__` and `_NaT.__add__`, which currently use:\r\n\r\n```\r\n            result = _Timestamp.__add__(self, other)\r\n            # Timestamp.__add__ doesn't return DatetimeIndex/TimedeltaIndex\r\n            if result is NotImplemented:\r\n                return result\r\n```\r\n\r\nUnder the proposed change, these `NotImplemented`s are implemented directly in the `_NaT` methods, which entails nonzero code duplication.\r\n\r\n3) A handful of `NaTType` method docstrings are currently copied from their `Timestamp` analogues.  Many of these can just be gotten from `datetime`, but for some the workaround is to define the method in `nattype`, then import `NaTType` into `tslib` and patch the docstring there.  So `nattype` is not 100% stand-alone.\r\n\r\n@jreback I'd like to get your feedback on this when convenient; no hurry."
  }
]
