[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366651992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-366651992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 366651992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjY1MTk5Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T10:43:57Z",
    "updated_at": "2018-02-19T10:43:57Z",
    "author_association": "MEMBER",
    "body": "cc @takluyver what is the mechanism how in general an object is displayed? As the `__repr__` or `__str__` itself is fast, but displaying in an IPython console is not."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366683490",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-366683490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 366683490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjY4MzQ5MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T12:47:01Z",
    "updated_at": "2018-02-19T12:47:01Z",
    "author_association": "MEMBER",
    "body": "Since seems to be present in IPython >= 6.1 (I don't see it in an environment with IPython 6.0). And in an ipython console, the overhead comes from `MimeBundleFormatter.__call__` calling `get_real_method`, which in the end does a `getattr` on the series to check if a `_repr_mimebundle_` exists.\r\n\r\nSo in the end it is due to `getattr` taking a huge amount of time on a Series with a DatetimeIndex. With the example from above:\r\n\r\n```\r\nIn [29]: %timeit getattr(s, '_bla', None)\r\n1.39 s ± 31.8 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [31]: s2 = s.reset_index(drop=True)\r\n\r\nIn [32]: %timeit getattr(s2, '_bla', None)\r\n3.54 µs ± 15.6 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n\r\nIn [33]: df = s.to_frame()\r\n\r\nIn [34]: %timeit getattr(df, '_bla', None)\r\n3.64 µs ± 67 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n\r\n```\r\n\r\nAnd from the same profiling, it seems it is doing expensive `get_loc` calls on the index a few times, which stem from a 'contains' call in generic.py `__getattr__` (`name in s.index`), and timings for this:\r\n\r\n```\r\nIn [41]: %timeit '_bla' in s.index\r\n517 ms ± 69.5 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [42]: %timeit '_bla' in s2.index\r\n1.4 µs ± 79.1 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)\r\n\r\nIn [43]: %timeit '_bla' in s3.index\r\n2.91 µs ± 149 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n```\r\n\r\nwhich in turn steps from a very slow `get_loc` of the DatetimeIndex engine. I suppose it is doing (for this case) way too much work because it tries to interpret the string as a datetime string."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366757707",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-366757707",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 366757707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc1NzcwNw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T17:25:04Z",
    "updated_at": "2018-02-19T17:25:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didn't know we did dot-attribute indexing for a Series - seems odd - something we want to support / actually gets used?\r\n\r\n```python\r\nIn [10]: s = pd.Series([1, 2, 3], index=['a', 'b', 'c'])\r\n\r\nIn [11]: s.c\r\nOut[11]: 3\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366758084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-366758084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 366758084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc1ODA4NA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T17:26:37Z",
    "updated_at": "2018-02-19T17:26:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess it is fairly prominent in the indexing docs, just missed it.\r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/indexing.html#attribute-access"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366760838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-366760838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 366760838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc2MDgzOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T17:37:31Z",
    "updated_at": "2018-02-19T17:37:31Z",
    "author_association": "MEMBER",
    "body": "Yeah, the dataframe equivalent is more known and used, I personally don't think many people do that for series as well.\r\n\r\nFor the original issues, I think we should use in `__getattr__` somehow a 'smarter' contains check, because I don't think we want to support any string-like to be used as attribute for DatetimeIndex (I am thinking if there is actually one that would be a valid attribute name, as it cannot start with a number).\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366761865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-366761865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 366761865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc2MTg2NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-19T17:41:58Z",
    "updated_at": "2018-02-19T17:41:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "There also seems to be fundamental performance problem with `DatetimeIndex.get_loc` - maybe same as #17754\r\n\r\n```python\r\nIn [26]: dti = s.index\r\n\r\nIn [27]: dti.get_loc('2012-01-01')\r\nOut[27]: slice(0, 86400, None)\r\n\r\nIn [28]: %timeit dti.get_loc('2012-01-01')\r\n1.24 s ± 25.3 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\nIn [29]: %timeit dti.get_loc(pd.Timestamp('2012-01-01'))\r\n11 µs ± 126 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/366938222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-366938222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 366938222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjkzODIyMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T10:44:43Z",
    "updated_at": "2018-02-20T10:44:43Z",
    "author_association": "MEMBER",
    "body": "Explored a bit what `DatetimeIndex.get_loc` and `DatetimeEngine.get_loc` are doing, and a lot is going on:\r\n\r\n- Something like `dti.get_loc('blabla')` ultimately calls `DatetimeEngine.get_loc` 2 times, and `dti.get_loc('2012-01-01 00:00:00')` as well. While we can know in advance that `DatetimeEngine.get_loc` will fail as this method does not work for strings (it needs a datetime-like)\r\n- A single call to `DatetimeEngine.get_loc('string')`, although it will never work, takes a lot of time. The ultimate reason for this long time is that it is trying a `values.searchsorted(key)` where `values` are the int64 data and `key` is the string. The numpy searchsorted will then cast under the hood the int values to string or object (whather the common dtype between values and key), which is slow. The value that then comes out of it, in case of a string, is outside the range (just added to the right of the values) and we check this and raise a KeyError. While in case of a string we just never should have tried.\r\n- When I would have used `int(1e6) - 1` instead of `int(1e6)` values, we are below the size threshold, and it takes a different code path. In that case the situation is better (we still do unneeded tries of `get_loc`, but they are not that slow in that case)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384756032",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-384756032",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 384756032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc1NjAzMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T19:05:12Z",
    "updated_at": "2018-04-26T19:05:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Correctness question, is this the right output?\r\n\r\n```python\r\nIn [5]: pd.date_range('2017', periods=12)\r\nOut[5]:\r\nDatetimeIndex(['2017-01-01', '2017-01-02', '2017-01-03', '2017-01-04',\r\n               '2017-01-05', '2017-01-06', '2017-01-07', '2017-01-08',\r\n               '2017-01-09', '2017-01-10', '2017-01-11', '2017-01-12'],\r\n              dtype='datetime64[ns]', freq='D')\r\n\r\nIn [6]: pd.date_range('2017', periods=12).get_loc(\"2017\")\r\nOut[6]: slice(0, 12, None)\r\n```\r\n\r\nThe docstring says in int is returned. The closes analog I can think of is `IntervalIndex` w/ overlapping intervals.\r\n\r\n```python\r\nIn [12]: pd.IntervalIndex.from_tuples([(0, 1), (0, 2), (0, 3)]).get_loc(0.5)\r\nOut[12]: array([0, 1, 2])\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384758980",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-384758980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 384758980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc1ODk4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T19:15:46Z",
    "updated_at": "2018-04-26T19:15:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Second question, should `DatetimeIndex.get_loc(int)` ever work? We test that it does.\r\n\r\n```python\r\nIn [11]: s.index.get_loc(s.index[0].value)\r\nOut[11]: 0\r\n```\r\n\r\nThat's taking the underlying integer representation. cc @jreback"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384759471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-384759471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 384759471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc1OTQ3MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T19:17:42Z",
    "updated_at": "2018-04-26T19:17:42Z",
    "author_association": "MEMBER",
    "body": "Not really sure, should dive into the code again.\r\n\r\nBut, to fix the actual regression, I think the easier path will be to avoid any `get_loc` call that is coming from `__getattr__` altogether, as I mentioned in https://github.com/pandas-dev/pandas/issues/19764#issuecomment-366760838 (not that `get_loc` shouldn't be fixed)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384760016",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-384760016",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 384760016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc2MDAxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T19:19:41Z",
    "updated_at": "2018-04-26T19:19:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Indeed, I got curious though :) Perhaps I should keep performance questions in #17754.\r\n\r\nI'll investigate the getattr stuff now (for 0.23)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384760612",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-384760612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 384760612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc2MDYxMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T19:21:59Z",
    "updated_at": "2018-04-26T19:21:59Z",
    "author_association": "MEMBER",
    "body": "So currently, `Series/DataFrame.__getattr__` does a `if name in self._info_axis`, which then calls `Index.__contains__`, which does the engine lookup.\r\n\r\nSo a quick dirty \"hack\" would be to add a `_contains_getattr` method to the base `Index` class which is equal to `__contains__`, and then `DatetimeLikeIndex` can override this to just return False (as a valid attribute name can never be contained in the index). \r\n\r\nIs that too dirty of a hack?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384768427",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19764#issuecomment-384768427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19764",
    "id": 384768427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc2ODQyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T19:51:43Z",
    "updated_at": "2018-04-26T19:51:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "See #20834."
  }
]
