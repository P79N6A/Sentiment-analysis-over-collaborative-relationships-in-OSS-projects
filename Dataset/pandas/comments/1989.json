[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9003487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1989#issuecomment-9003487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1989",
    "id": 9003487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMDM0ODc=",
    "user": {
      "login": "seberg",
      "id": 61977,
      "node_id": "MDQ6VXNlcjYxOTc3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/61977?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/seberg",
      "html_url": "https://github.com/seberg",
      "followers_url": "https://api.github.com/users/seberg/followers",
      "following_url": "https://api.github.com/users/seberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/seberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/seberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/seberg/subscriptions",
      "organizations_url": "https://api.github.com/users/seberg/orgs",
      "repos_url": "https://api.github.com/users/seberg/repos",
      "events_url": "https://api.github.com/users/seberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/seberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-29T12:22:59Z",
    "updated_at": "2012-09-29T12:22:59Z",
    "author_association": "NONE",
    "body": "Never used Pandas, so I am not sure how its seen, but as a suggestion, maybe it would be an idea to have pandas throw a warning (or even an Exception) if the result is broadcasted to all columns? That numpy functions work (due to a funny back and forth when trying to execute the corresponding pandas attribute with `axis=None`) very differently if they are ndarray attributes compared to when they are not (and generally the silent switching between passing 2D or 1D array likes) seems a bit dangerous.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9003954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1989#issuecomment-9003954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1989",
    "id": 9003954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkwMDM5NTQ=",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-29T13:27:43Z",
    "updated_at": "2012-09-29T13:27:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "You're right,  the issue is that `axis=0` isn't passed in by default (and perhaps it should be... although it may be difficult to know _what_ to pass in as default for arbitrary functions?).\n\nAs `median` flattens the array (and produces a number), and since:\n\n```\ntest_g.aggregate(lambda x: 8)\n```\n\nmakes everything 8, this behaviour is \"expected\" in some sense (and sometimes might be what you want) so we probably don't want an exception...?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10822576",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1989#issuecomment-10822576",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1989",
    "id": 10822576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODIyNTc2",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-28T21:29:35Z",
    "updated_at": "2012-11-28T21:29:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "test_g.aggregate(np.median)  should now result in the correct result. np.mean was different originally because certain numpy functions are special cased in the pandas groupby machinery for speed, which also changed default behavior to be pandas-like (df.mean()) rather than numpy-like (np.mean(arr)).\n"
  }
]
