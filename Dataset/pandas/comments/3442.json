[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16895807",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3442#issuecomment-16895807",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3442",
    "id": 16895807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODk1ODA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-23T23:52:27Z",
    "updated_at": "2013-04-23T23:52:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually, it DOES work, but because it reindexes to a 0-len index, you get nothing (you have a 0-len index)\n\nwhat do you think this should return?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16906325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3442#issuecomment-16906325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3442",
    "id": 16906325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTA2MzI1",
    "user": {
      "login": "rafaljozefowicz",
      "id": 2983769,
      "node_id": "MDQ6VXNlcjI5ODM3Njk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2983769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaljozefowicz",
      "html_url": "https://github.com/rafaljozefowicz",
      "followers_url": "https://api.github.com/users/rafaljozefowicz/followers",
      "following_url": "https://api.github.com/users/rafaljozefowicz/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaljozefowicz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaljozefowicz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaljozefowicz/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaljozefowicz/orgs",
      "repos_url": "https://api.github.com/users/rafaljozefowicz/repos",
      "events_url": "https://api.github.com/users/rafaljozefowicz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaljozefowicz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T03:30:58Z",
    "updated_at": "2013-04-24T03:30:58Z",
    "author_association": "NONE",
    "body": "Thanks, that actually makes sense. My example is not complete. The exact problem I had was with arrays and I thought it's enough to show it with above example (which isn't true)\n\nFor example:\n\n``` python\ndf2 = pd.DataFrame({\"col\" : np.array([1, 2, 3])})\ndf[\"test3\"] = df2.col\n#df[\"test4\"] = np.array([1, 2, 3])\ndf\n```\n\nThis again returns empty array, but uncommenting line from the example makes it throw exception in frame.py:\n\n```\n2141             else:\n   2142                 if len(value) != len(self.index):\n-> 2143                     raise AssertionError('Length of values does not match '\n   2144                                          'length of index')\n   2145 \n\nAssertionError: Length of values does not match length of index\n```\n\nAnd this isn't what I would expect to see (as it's not consistent)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16906483",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3442#issuecomment-16906483",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3442",
    "id": 16906483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTA2NDgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T03:37:01Z",
    "updated_at": "2013-04-24T03:37:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "if df is an empty frame (like in your initial example), then this is correct\nsetting a column on an len 0 index frame gives u back another empty frame (with that column set)\n\nsince the index is len 0, adding a column that is not align able nor matches the len of the frame is not allowed\n\nwhat is your end goal here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16907146",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3442#issuecomment-16907146",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3442",
    "id": 16907146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTA3MTQ2",
    "user": {
      "login": "rafaljozefowicz",
      "id": 2983769,
      "node_id": "MDQ6VXNlcjI5ODM3Njk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2983769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaljozefowicz",
      "html_url": "https://github.com/rafaljozefowicz",
      "followers_url": "https://api.github.com/users/rafaljozefowicz/followers",
      "following_url": "https://api.github.com/users/rafaljozefowicz/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaljozefowicz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaljozefowicz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaljozefowicz/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaljozefowicz/orgs",
      "repos_url": "https://api.github.com/users/rafaljozefowicz/repos",
      "events_url": "https://api.github.com/users/rafaljozefowicz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaljozefowicz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T04:07:04Z",
    "updated_at": "2013-04-24T04:07:04Z",
    "author_association": "NONE",
    "body": "You're right again. Sorry for the trouble and thanks for the help.\nThis is the functionality I was expecting to see:\n\n``` python\nd = df.to_dict()\nd[\"test\"] = 7\nd[\"test3\"] = df2.col\npd.DataFrame(d)\n```\n\nwhich returns 3 row data frame (assuming df and df2 defined in previous examples)\n\nIn my case, I was trying to define data frame columns in a complicated expression with for loops. Starting with empty frame (without setting up index) was a mistake. I'm closing the issue\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16918115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3442#issuecomment-16918115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3442",
    "id": 16918115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTE4MTE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T10:08:20Z",
    "updated_at": "2013-04-24T10:08:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "np\n\ncreating a dict and then at the end creating a frame is a good idiom\n\na frame aligns all its input automatically (and by definition), but sometimes you don't want that incrementally\nbut instead a union of the indexes (you could get this by joining on all of the inputs separately as well, but that's more verbose)\n"
  }
]
