[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34000154",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34000154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34000154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAwMTU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T21:08:52Z",
    "updated_at": "2014-02-03T21:08:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "see related #6219 \n\n`Categrical` is not a first-class object that can be embeded in a series (and thus a dataframe), e.g. like datetimes,floats,strings etc.\n\nI don't think this is too difficult, but would help if you can put some examples of what you _can do_ if this was the case. E.g. pretend that you can add a categorical as a Series (e.g. has dtype='categorical'); can you show some operations on a frame that make sense for that?\n\nor does this make sense at all?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34003775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34003775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34003775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDAzNzc1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T21:43:47Z",
    "updated_at": "2014-02-03T21:46:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "What I want to do is this:\n\n```\nimport matplotlib.pyplot as plt\ndf = pd.DataFrame({\"a\":[\"b\",\"a\",\"c\",\"a\"]})\ndf[\"factor\"] = factor(df.a, levels=[\"a\",\"b\",\"c\", \"d\"], labels=[\"Jan\", \"Feb\", \"Mar\", \"Apr\"])\nindentation = np.arange(len(df.factor.levels))\nweights = pd.value_counts(df.factor) \n# weights must be [2,1,1,0] -> sorted by levels, zero in case a level is \n# not present in the series!\nbar_width = 0.8\nplt.bar(indentation, weights, bar_width)\n# matplotlib bars are not centered but left aligned :-/\nplt.gca().set_xticks([indentation+width/2) \nplt.gca().set_xticklabels(df.factor.labels)\n# matplotlib: give the bars some space :-)\nplt.gca().set_xlim(min(df.factor)-0.3, max(df.factor)+0.3) \n```\n\nAlso:\n\n```\nif df[column_name].is_categorical:\n    # do the stuff for discrete variables\nelse:\n    # do the stuff for continuous variables\n```\n\nAlso nice:\n\n``` python\ndf.groupby(\"categorical_variable\").size()\n# -> Would give 0 for levels which are not in the dataframe\n```\n\n```\n[...]\ndf[\"factor\"] = factor(df.a, levels=[\"a\",\"b\",\"c\", \"d\"], \n                               labels=[\"Jan\", \"Feb\", \"Mar\", \"Apr\"], ordered=True)\ndf.set_index(\"factor\") # would raise if ordered=False\n# -> would be sorted according to levels and be sliceable by labels\nfirst_quarter = df[\"Jan\":\"Mar\"]\n# -> Would contain all values for the first quarter of the year\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34004630",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34004630",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34004630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDA0NjMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T21:52:08Z",
    "updated_at": "2014-02-03T21:52:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you show what a sample frame (include also a float as well) looks like?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34012011",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34012011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34012011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDEyMDEx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T23:08:42Z",
    "updated_at": "2014-05-24T12:01:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback ? \n\n[**Edit: changed `.value` into `.val_pointer`**]\nIs this what you mean?:\n\n```\ndf = pd.DataFrame({\"a\":[\"b\",\"a\",\"c\",\"a\"], \"b\":[4,3,2,0], \"c\":[1.,2.,3.,3.3]})\ndf[\"fa\"] = factor(df.a)\nassert df[\"fa\"].levels == [\"b\",\"a\",\"c\"]\nassert df[\"fa\"].val_pointer == [0,1,2,0]\ndf[\"fb\"] = factor(df.b)\nassert df[\"fb\"].levels == [4,3,2,0]\nassert df[\"fb\"].val_pointer == [0,1,2,3]\nwith assert_raises(exception): \n    # len(labels) != len(levels)\n    df[\"fb\"] = factor(df.b, labels=[1,2,3,4,5])\nwith assert_raises(exception): \n    # 0 not in supplied levels, but values not in the original series is ok\n    df[\"fb\"] = factor(df.b, levels=[1,2,3,4,5])\ndf[\"fb\"] = factor(df.b, levels=[0,1,2,3,4,5])\nassert df[\"fb\"].levels == [0,1,2,3,4,5]\nassert df[\"fb\"].val_pointer == [4,3,2,0]\nwith assert_raises(exception):\n    # len(labels) != len(\"levels\")\n    df[\"fb\"] = factor(df.b, levels=[0,1,2,3,4,5], labels=[\"a\",\"b\",\"c\",\"d\",\"e\"])\ndf[\"fb\"] = factor(df.b, levels=[0,1,2,3,4,5], labels=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"])\nassert df[\"fb\"].levels == [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"]\nassert df[\"fb\"].val_pointer == [4,3,2,0]\n\n# floats are the same: each unique value gets a factor of it's own \n# Probably messy if one is to supply levels\ndf[\"fc\"] = factor(df.c)\nassert df[\"fc\"].levels == [1.,2.,3.,3.3]\nassert df[\"fc\"].val_pointer == [1,2,3,4]\n\n#groupby with factors\ngrouped = df.groupby(\"fb\")\nassert grouped.groups == {'a': [3], 'b': [],'c': [2],'d': [1],'e': [0],'f': []}\n\n# value counts: empty labels are set to zero\nassert pd.value_counts(df.fb) == [1,0,1,1,1,0]\n\n# series of factors get real values\nassert pd.Series(df.fb) == pd.Series([\"e\",\"d\",\"c\",\"a\"])\n\n# Factors of factors get their levels shrinked to only the ones which are used\nsmaler = factor(factor([1,2], levels=[0,1,2,3]))\nassert smaler.levels == [1,2] \n\n# indexing with factors\nwith assert_raises(Exception):\n     # not orderd\n    df.set_index(\"fb\")\ndf[\"fb\"] = factor(df.b, levels=[0,1,2,3,4,5], labels=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"], ordered=True)\ndf.set_index(\"fb\")\n# [4,3,2,0] : [\"b\",\"a\",\"c\",\"a\"] -factors-> [e,d,c,a] : [\"b\",\"a\",\"c\",\"a\"] -index-> [a,c,d,e] : [\"a\",\"c\",\"a\",\"b\"]\ndf[\"a\":\"d\"][\"a\"] == Series([\"a\",\"c\",\"a\"]) # including \"stop\"\n\n# concat\na = factor([1,2,3])\nb = factor([\"a\",\"b\",\"c\"])\nc = factor([1,2,3,4])\nwith assert_raises(exception):\n     # only factors with the same levels (items and oder) are concatable\n     concat(a,b)\nassert concat(a,c) == factor([1,2,3,1,2,3,4])\nd = factor(concat(Series(a), Series(b))) # would work\n```\n\nCut and https://github.com/pydata/pandas/issues/3943 would also be a candidate\n\nAnd when I see https://github.com/pydata/pandas/issues/3678\n\n```\nf = factor([nan,\"a\",\"b\",\"c\"])\nassert f.levels == [\"a\",\"b\",\"c\"]\nassert f.val_pointer == [nan,0,1,2]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34012842",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34012842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34012842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDEyODQy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T23:18:39Z",
    "updated_at": "2014-02-03T23:18:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "what does the factor look like when you print the frame, e.g. \n\n```\ndf = pd.DataFrame({\"a\":[\"b\",\"a\",\"c\",\"a\"], \"b\":[4,3,2,0], \"c\":[1.,2.,3.,3.3]})\ndf[\"fa\"] = factor(df.a)\n```\n\ne.g. if you print out `df`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34013043",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34013043",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34013043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDEzMDQz",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T23:21:09Z",
    "updated_at": "2014-02-03T23:21:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would think it look the same as if you would print out `Series(factor(...))`, only the dtypes and so would show that it is a factor.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34013324",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34013324",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34013324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDEzMzI0",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T23:24:28Z",
    "updated_at": "2014-02-03T23:24:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pydata/pandas/issues/5313\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34015810",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34015810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34015810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDE1ODEw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-03T23:56:50Z",
    "updated_at": "2014-02-03T23:56:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep....do we want to close this (and just ref from #5313) ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34056540",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-34056540",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 34056540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDU2NTQw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-04T12:57:25Z",
    "updated_at": "2014-02-04T12:57:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this makes sense. I add a comment there about the \"what should work\" thingies above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44060877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6242#issuecomment-44060877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6242",
    "id": 44060877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDYwODc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T21:09:50Z",
    "updated_at": "2014-05-23T21:09:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz just saw your examples.....let me take a look\n"
  }
]
