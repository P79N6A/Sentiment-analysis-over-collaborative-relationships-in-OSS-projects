[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70484802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-70484802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 70484802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDg0ODAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-19T12:20:08Z",
    "updated_at": "2015-01-19T12:20:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "You need to explicity allow this, otherwise its designed to give an error.\n\n```\nIn [8]: read_csv(StringIO(data),error_bad_lines=False)\nSkipping line 12: expected 4 fields, saw 6\n\nOut[8]: \n    DecisionM  IntelligentM  freq  total\n0           0             5     9     20\n1           0             6    21     33\n2           0             7    35     65\n3           0             8    35     83\n4           0             9    14     41\n5           0            10    10     26\n6           1             5    11     20\n7           1             6    12     33\n8           1             7    30     65\n9           1             8    48     83\n10          1            10    16     26\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144226315",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-144226315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 144226315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDIyNjMxNQ==",
    "user": {
      "login": "szeitlin",
      "id": 5185401,
      "node_id": "MDQ6VXNlcjUxODU0MDE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5185401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/szeitlin",
      "html_url": "https://github.com/szeitlin",
      "followers_url": "https://api.github.com/users/szeitlin/followers",
      "following_url": "https://api.github.com/users/szeitlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/szeitlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/szeitlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/szeitlin/subscriptions",
      "organizations_url": "https://api.github.com/users/szeitlin/orgs",
      "repos_url": "https://api.github.com/users/szeitlin/repos",
      "events_url": "https://api.github.com/users/szeitlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/szeitlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T00:13:25Z",
    "updated_at": "2015-09-30T00:13:25Z",
    "author_association": "NONE",
    "body": "when I try adding `error_bad_lines=False` to mine, I get this very verbose output: \n\n`b'Skipping line 6: expected 2 fields, saw 8\\nSkipping line 7: expected 2 fields, saw 8\\nSkipping line 8: expected 2 fields, saw 8\\nSkipping line 9: expected 2 fields, saw 8\\nSkipping line 10: expected 2 fields, saw 8\\nSkipping line 11: expected 2 fields, saw 8\\nSkipping line 12: expected 2 fields, saw 8\\nSkipping line 13: expected 2 fields, saw 8\\nSkipping line 14: expected 2 fields, saw 8\\nSkipping line 15: expected 2 fields, saw 8\\` etc. \n\nLooks like pandas is assuming the first line is the start of the data table, and is trying to tokenize based on the number of fields it found there, even though the _entire rest of the file_ has 8 fields per row. \n\nI know that the header on this file is such that if I do skiprows=4, pandas can read it just fine. \n\nI don't think R has the ability to autodetect headers, but it sure would be nice if pandas had an option to do it, or if we could specify the number of rows to look at, to help determine what might be a header (?). Just an idea.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144262009",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-144262009",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 144262009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDI2MjAwOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T02:24:49Z",
    "updated_at": "2015-09-30T02:24:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just my 2 cents, but I don't think pandas should try to guess here. Even though warning on every line past the first one is _almost surely_ not what the user wants, it could also indicate a bad file, where a column wasn't written correctly.\n\nPerhaps with another keyword or option to `read_csv`, but even then this seems like something that's tough to get right often enough to rely on. My preference is to put that burden on the user. Thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144390251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-144390251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 144390251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDM5MDI1MQ==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T13:08:59Z",
    "updated_at": "2015-09-30T13:08:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Input files should follow RFC4180 as closely as possible.  The optional header should be the first line, so we shouldn't need to look past the first line to determine the header.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144442175",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-144442175",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 144442175,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDQ0MjE3NQ==",
    "user": {
      "login": "szeitlin",
      "id": 5185401,
      "node_id": "MDQ6VXNlcjUxODU0MDE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5185401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/szeitlin",
      "html_url": "https://github.com/szeitlin",
      "followers_url": "https://api.github.com/users/szeitlin/followers",
      "following_url": "https://api.github.com/users/szeitlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/szeitlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/szeitlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/szeitlin/subscriptions",
      "organizations_url": "https://api.github.com/users/szeitlin/orgs",
      "repos_url": "https://api.github.com/users/szeitlin/repos",
      "events_url": "https://api.github.com/users/szeitlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/szeitlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T15:13:50Z",
    "updated_at": "2015-09-30T15:13:50Z",
    "author_association": "NONE",
    "body": "My point is that it's a common problem, and pandas could help alleviate the issue, which would save everyone time and duplicated effort. \n\nEven if there's just an optional flag to return a list of tuples structured as _(line number, number of fields in that line)_, that kind of output would be more useful than what it's already doing, which actually _already includes that information_, just not in a usable format. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/144498558",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-144498558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 144498558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDQ5ODU1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T18:23:28Z",
    "updated_at": "2015-09-30T18:23:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@szeitlin their are a number of issues w.r.t. how to 'report' bad/warnings of lines, e.g. see https://github.com/pydata/pandas/issues/5686\n\nso maybe someone can propose an API, e.g. we could do something like\n\nreplicates the current api\n\n```\ndf = read_csv(......, errors='raise')\ndf = read_csv(......, errors='warn')\n```\n\n```\ndf, errors = read_csv(...., return_errors=True)\n```\n\nand errors be something like:\n\n```\nerrors = [ { 'line' : 10, 'contents' : ..... ,'error' : ..... }, ..... ]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297417747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-297417747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 297417747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQxNzc0Nw==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T14:00:43Z",
    "updated_at": "2017-04-26T14:00:43Z",
    "author_association": "NONE",
    "body": "something I was curious about is whether we can still retrieve these bogus cells in some way... My understanding is that `error_bad_lines = False` will just skip these lines. What about keeping them and putting some fake column to get them?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297431186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-297431186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 297431186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQzMTE4Ng==",
    "user": {
      "login": "szeitlin",
      "id": 5185401,
      "node_id": "MDQ6VXNlcjUxODU0MDE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5185401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/szeitlin",
      "html_url": "https://github.com/szeitlin",
      "followers_url": "https://api.github.com/users/szeitlin/followers",
      "following_url": "https://api.github.com/users/szeitlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/szeitlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/szeitlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/szeitlin/subscriptions",
      "organizations_url": "https://api.github.com/users/szeitlin/orgs",
      "repos_url": "https://api.github.com/users/szeitlin/repos",
      "events_url": "https://api.github.com/users/szeitlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/szeitlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T14:44:09Z",
    "updated_at": "2017-04-26T14:44:09Z",
    "author_association": "NONE",
    "body": "So this was a while ago, but I ended up actually catching those errors and parsing them, in order to figure out what was going on with my files. It worked ok, but it's probably kind of fragile (if anything about this part of pandas changes, it will break). I'd post the code here, but it was at my old job, so I don't have access to the repo anymore. 😂 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297444049",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9294#issuecomment-297444049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9294",
    "id": 297444049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzQ0NDA0OQ==",
    "user": {
      "login": "randomgambit",
      "id": 8282510,
      "node_id": "MDQ6VXNlcjgyODI1MTA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8282510?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/randomgambit",
      "html_url": "https://github.com/randomgambit",
      "followers_url": "https://api.github.com/users/randomgambit/followers",
      "following_url": "https://api.github.com/users/randomgambit/following{/other_user}",
      "gists_url": "https://api.github.com/users/randomgambit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/randomgambit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/randomgambit/subscriptions",
      "organizations_url": "https://api.github.com/users/randomgambit/orgs",
      "repos_url": "https://api.github.com/users/randomgambit/repos",
      "events_url": "https://api.github.com/users/randomgambit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/randomgambit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T15:19:31Z",
    "updated_at": "2017-04-26T15:19:31Z",
    "author_association": "NONE",
    "body": "yeah these bogus lines are difficult to catch unfortunately (at least not in native Pandas)\r\n http://stackoverflow.com/questions/38902553/error-tokenizing-data-during-pandas-read-csv-how-to-actually-see-the-bad-lines"
  }
]
