[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50662998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7882#issuecomment-50662998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7882",
    "id": 50662998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwNjYyOTk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-30T18:57:59Z",
    "updated_at": "2014-07-30T18:57:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh, I answered you on SO.\n\nthis is just a reference/tutorial for someone coming from R who wants to know how to do `dcast` in pandas. You can put up your example almost exactly (though make sure its self-contained, so can be copy-pasted).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51016224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7882#issuecomment-51016224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7882",
    "id": 51016224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDE2MjI0",
    "user": {
      "login": "onesandzeroes",
      "id": 1460294,
      "node_id": "MDQ6VXNlcjE0NjAyOTQ=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1460294?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onesandzeroes",
      "html_url": "https://github.com/onesandzeroes",
      "followers_url": "https://api.github.com/users/onesandzeroes/followers",
      "following_url": "https://api.github.com/users/onesandzeroes/following{/other_user}",
      "gists_url": "https://api.github.com/users/onesandzeroes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onesandzeroes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onesandzeroes/subscriptions",
      "organizations_url": "https://api.github.com/users/onesandzeroes/orgs",
      "repos_url": "https://api.github.com/users/onesandzeroes/repos",
      "events_url": "https://api.github.com/users/onesandzeroes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onesandzeroes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-04T04:14:15Z",
    "updated_at": "2014-08-04T04:14:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I'd say just add your SO answer as a separate section (with copy-paste reproducible data for both R and Python). You might want to point out the similarities to `aggregate` and `tapply`, but I'd say it's worth putting `dcast` in its own section. I liked the `dcast`/`melt` functions enough that I rarely used base R functions like `aggregate`, and I suspect others reading this section of the docs might be the same, i.e. more likely to find what they're looking for through a `dcast` header.\n"
  }
]
