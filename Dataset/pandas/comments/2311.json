[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11415188",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-11415188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 11415188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDE1MTg4",
    "user": {
      "login": "paulproteus",
      "id": 25457,
      "node_id": "MDQ6VXNlcjI1NDU3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paulproteus",
      "html_url": "https://github.com/paulproteus",
      "followers_url": "https://api.github.com/users/paulproteus/followers",
      "following_url": "https://api.github.com/users/paulproteus/following{/other_user}",
      "gists_url": "https://api.github.com/users/paulproteus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paulproteus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paulproteus/subscriptions",
      "organizations_url": "https://api.github.com/users/paulproteus/orgs",
      "repos_url": "https://api.github.com/users/paulproteus/repos",
      "events_url": "https://api.github.com/users/paulproteus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paulproteus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-16T07:31:44Z",
    "updated_at": "2012-12-16T07:31:44Z",
    "author_association": "NONE",
    "body": "It seems to me the best option for this would be:\n- Start with a simple test case for input and output, and handle that using this library: http://simple-odspy.sourceforge.net/ -- sample code: http://simple-odspy.sourceforge.net/?q=node/5\n- If there are more complex cases where simple-odspy is not enough, one can use the more heavyweight http://pypi.python.org/pypi/odfpy library\n\nThis would be a rather substantial bit of work.\n\nA good start for the test cases would be to look at pandas/io/tests/test_excel.py and write test cases that mirror what is in that file.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56499306",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-56499306",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 56499306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDk5MzA2",
    "user": {
      "login": "H0R5E",
      "id": 5088535,
      "node_id": "MDQ6VXNlcjUwODg1MzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5088535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/H0R5E",
      "html_url": "https://github.com/H0R5E",
      "followers_url": "https://api.github.com/users/H0R5E/followers",
      "following_url": "https://api.github.com/users/H0R5E/following{/other_user}",
      "gists_url": "https://api.github.com/users/H0R5E/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/H0R5E/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/H0R5E/subscriptions",
      "organizations_url": "https://api.github.com/users/H0R5E/orgs",
      "repos_url": "https://api.github.com/users/H0R5E/repos",
      "events_url": "https://api.github.com/users/H0R5E/events{/privacy}",
      "received_events_url": "https://api.github.com/users/H0R5E/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T10:16:07Z",
    "updated_at": "2014-09-23T10:17:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for this feature.\n\nWorking on an open-source data wrangling project and I would like to be able to interact with spreadsheet software that is not Excel.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56537436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-56537436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 56537436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NTM3NDM2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-23T15:24:28Z",
    "updated_at": "2014-09-23T15:24:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@H0R5E for now, you could just convert the resulting excel file to ODS (it's pretty much a simple set of numbers, nothing more): http://stackoverflow.com/questions/15257032/python-convert-excel-file-xls-or-xlsx-to-from-ods or you could use json as an intermediary and use `tablib` to export to ODS: https://pypi.python.org/pypi/tablib\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/62874685",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-62874685",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 62874685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODc0Njg1",
    "user": {
      "login": "robertmuil",
      "id": 637885,
      "node_id": "MDQ6VXNlcjYzNzg4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/637885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robertmuil",
      "html_url": "https://github.com/robertmuil",
      "followers_url": "https://api.github.com/users/robertmuil/followers",
      "following_url": "https://api.github.com/users/robertmuil/following{/other_user}",
      "gists_url": "https://api.github.com/users/robertmuil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robertmuil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robertmuil/subscriptions",
      "organizations_url": "https://api.github.com/users/robertmuil/orgs",
      "repos_url": "https://api.github.com/users/robertmuil/repos",
      "events_url": "https://api.github.com/users/robertmuil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robertmuil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-13T11:01:20Z",
    "updated_at": "2014-11-13T11:01:20Z",
    "author_association": "NONE",
    "body": "+1 for this!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63241805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-63241805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 63241805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjQxODA1",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-16T22:04:19Z",
    "updated_at": "2014-11-16T22:04:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I want to tune in with some additional notes:\n- [odfpy](https://github.com/eea/odfpy) is now living on Github, and seems to get some attention now and then.\n- I bumped into [ezodf](https://github.com/T0ha/ezodf), which, contrary to simple-odspy, seems to be still under development. It does not depend on odfpy. The docs are [here](http://packages.python.org/ezodf), and some examples [here](https://github.com/T0ha/ezodf/tree/master/examples).\n\nBased on some initial looks, ezodf has a straight forward interface. For example, loading an ods spreadsheet into a DataFrame could go as follows:\n\n``` python\nimport pandas as pd\nimport ezodf\ndoc = ezodf.opendoc('somefile.ods')\n\nprint(\"Spreadsheet contains %d sheets.\\n\" % len(doc.sheets))\nfor sheet in doc.sheets:\n    if sheet.name == 'data':\n        data = sheet\n    print(\"Sheet name: '%s'\" % sheet.name)\n    print(\"Size of Sheet : (rows=%d, cols=%d)\" % (sheet.nrows(), sheet.ncols()) )\n    print(\"-\"*40)\n\n# a random cell\npos = (row, col)\ndata.get_cell(pos).display_form\n\ndf_dict = {}\nfor i, col in enumerate(data.columns()):\n    # col is a list that contains all the cells (rows of that column)\n    # assume the column name is on the first row\n    colname = col[0].display_form\n    df_dict[colname] = []\n    print(colname)\n    for j, row in enumerate(col):\n        # ignore the header\n        if j == 0:\n            continue\n        else:\n            df_dict[col_name].append(row.display_form)\n# and convert to a DataFrame\ndf = pd.DataFrame(df_dict)\n```\n\nI have no idea how odfpy and ezodf compare performance wise, or how their different memory footprints are for very large spreadsheets. I haven't tried to use odfpy because that seems more complicated to get going with. I also have not checked how robust the writing process of ezodf is. I'll try to see if I can get something similar going as for pandas/io/tests/test_excel.py. \n\nI will also mention @sorenroug from odfpy and @T0ha from ezodf just in case someone from upstream is interested in this discussion.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63556987",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-63556987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 63556987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTU2OTg3",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-18T22:24:25Z",
    "updated_at": "2014-11-18T22:33:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "After a short exploration, it seems doable to create an ods prototype reader based on the structure of pandas/io/excel.py using the ezodf module. I've forked pandas [here](https://github.com/davidovitch/pandas) and will implement an ods prototype reader in the io-ods branch. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64939161",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-64939161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 64939161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTM5MTYx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-29T02:33:29Z",
    "updated_at": "2014-11-29T02:33:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davidovitch - one thing to keep in mind if you choose to handle both writing and reading: you can register an ODS writer in the excel module (just implementing the required methods as listed in the code) and then you can just add a simple subclass of the excel writer tests and get a ton of test cases for free. Just a thought.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97719317",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-97719317",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 97719317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NzE5MzE3",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T09:28:11Z",
    "updated_at": "2015-04-30T09:28:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to give an update on the current status. My [fork](https://github.com/davidovitch/pandas) can currently read ODF ODS files, but writing is not implemented yet. The corresponding pull request is still pending review, and it has been a lot more work than I originally anticipated.\n\nJust a few days ago I bumped into yet another library to read/write spreadsheet: [pyexcel](https://github.com/chfw/pyexcel). What is different about this library is that it aims at creating a single API for all the different read/write libraries, and it builds on all the existing libraries out there (ezodf, xlrd, etc). This is actually kind of similar to what pandas currently has, and to what I am trying to extend in PR #9070. So I am wondering, would it make sense to use a single API library (with optional dependencies to all the relevant readers/writers for the different spreadsheet types) instead of developing something similar, but tailored to pandas use case? I am speculating that a lot of code in io/excel.py could be removed when relying on pyexcel, but it adds yet another dependency. At this stage I am not sure how all different edge cases on data types and other magic happening inside the spreadsheet interpretation differs between the current pandas implementation and pyexcel. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/136961103",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-136961103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 136961103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNjk2MTEwMw==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-02T07:28:40Z",
    "updated_at": "2015-09-02T07:28:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "The ods reader is not ready for the upcoming 0.17 release. PR #9070 is closed (see the PR for a technical discussion), and a new improved PR will be made by someone at some point in the future. I have a working version in the [ezodf_reader](https://github.com/davidovitch/pandas/tree/ezodf_reader) branch of my pandas fork in case someone wants to have a look at it. Suggestions and improvements are welcome :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140695120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-140695120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 140695120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDY5NTEyMA==",
    "user": {
      "login": "H0R5E",
      "id": 5088535,
      "node_id": "MDQ6VXNlcjUwODg1MzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/5088535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/H0R5E",
      "html_url": "https://github.com/H0R5E",
      "followers_url": "https://api.github.com/users/H0R5E/followers",
      "following_url": "https://api.github.com/users/H0R5E/following{/other_user}",
      "gists_url": "https://api.github.com/users/H0R5E/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/H0R5E/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/H0R5E/subscriptions",
      "organizations_url": "https://api.github.com/users/H0R5E/orgs",
      "repos_url": "https://api.github.com/users/H0R5E/repos",
      "events_url": "https://api.github.com/users/H0R5E/events{/privacy}",
      "received_events_url": "https://api.github.com/users/H0R5E/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-16T10:08:03Z",
    "updated_at": "2015-09-16T10:08:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davidovitch thanks for your efforts! Its a shame that that reading and writing to ODF is not better supported in python, otherwise I'm sure this would be less of an ordeal.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/153016604",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-153016604",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 153016604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzAxNjYwNA==",
    "user": {
      "login": "PBrockmann",
      "id": 5402758,
      "node_id": "MDQ6VXNlcjU0MDI3NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5402758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PBrockmann",
      "html_url": "https://github.com/PBrockmann",
      "followers_url": "https://api.github.com/users/PBrockmann/followers",
      "following_url": "https://api.github.com/users/PBrockmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/PBrockmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PBrockmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PBrockmann/subscriptions",
      "organizations_url": "https://api.github.com/users/PBrockmann/orgs",
      "repos_url": "https://api.github.com/users/PBrockmann/repos",
      "events_url": "https://api.github.com/users/PBrockmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PBrockmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-02T13:30:06Z",
    "updated_at": "2015-11-02T13:52:05Z",
    "author_association": "NONE",
    "body": "Working on how to structure data for paleoclimatology community, I would like to promote ODS as the standard format.  Then of course, pandas with this possible reading and writing at ODS format would become the natural way to start nice analysis.\n\n+2 and more for this feature that seems so closed to be released.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/153159487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-153159487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 153159487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzE1OTQ4Nw==",
    "user": {
      "login": "naught101",
      "id": 167164,
      "node_id": "MDQ6VXNlcjE2NzE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/167164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naught101",
      "html_url": "https://github.com/naught101",
      "followers_url": "https://api.github.com/users/naught101/followers",
      "following_url": "https://api.github.com/users/naught101/following{/other_user}",
      "gists_url": "https://api.github.com/users/naught101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naught101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naught101/subscriptions",
      "organizations_url": "https://api.github.com/users/naught101/orgs",
      "repos_url": "https://api.github.com/users/naught101/repos",
      "events_url": "https://api.github.com/users/naught101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naught101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-02T21:19:24Z",
    "updated_at": "2015-11-02T21:19:24Z",
    "author_association": "NONE",
    "body": "You should almost certainly be using netcdf for paleoclimate data. It's more or less industry standard. Checkout the python package 'xray' for a nice way to interface with it.\n\nOn 3 November 2015 12:30:20 am AEDT, Patrick Brockmann notifications@github.com wrote:\n\n> Working on how to structure data for paleoclimatology community, I\n> would like to promote ODS as the standard format.  Then of course,\n> pandas with this possible reading and writing at ODS format would\n> become the natural way for IO and start nice analysis.\n> \n> +2 and more for this feature that seems so closed to be released.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/issues/2311#issuecomment-153016604\n\n## \n\nSent from my Android device with K-9 Mail. Please excuse my brevity.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/153187504",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-153187504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 153187504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzE4NzUwNA==",
    "user": {
      "login": "PBrockmann",
      "id": 5402758,
      "node_id": "MDQ6VXNlcjU0MDI3NTg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5402758?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/PBrockmann",
      "html_url": "https://github.com/PBrockmann",
      "followers_url": "https://api.github.com/users/PBrockmann/followers",
      "following_url": "https://api.github.com/users/PBrockmann/following{/other_user}",
      "gists_url": "https://api.github.com/users/PBrockmann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/PBrockmann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/PBrockmann/subscriptions",
      "organizations_url": "https://api.github.com/users/PBrockmann/orgs",
      "repos_url": "https://api.github.com/users/PBrockmann/repos",
      "events_url": "https://api.github.com/users/PBrockmann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/PBrockmann/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-02T23:10:07Z",
    "updated_at": "2015-11-03T07:29:19Z",
    "author_association": "NONE",
    "body": "@naught101: I know quite well netCDF format and some conventions like CF (Climate and Forecast) widely used in the Earth System Modelling community but it seems that the PaleoClimate one has also good argument to keep working with others standard. An article that is under discussion describes this motivation and promote a JSON-LD format. Read https://www.authorea.com/users/17200/articles/19163/_show_article and please feel free to contribute it. \nIn my understanding, the data themselves are not problematic, the difficulty comes more from the metadata that are in many aspect hierachical. Netcdf attributs are in this case not very well designed.\nOn the other hand, describe those metadata with a simple spreadsheet with a dotted notation in an open source format like ODS (I will do a proposition in this way) could be interesting because it will not radically change the behaviour of PaleoClimate scientists that widelly work with spreadsheets.\nAll this, to say that if pandas could allow IO from ODS, it could be a good motivation to start their analysis with pandas.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/153257808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-153257808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 153257808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzI1NzgwOA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-03T06:27:56Z",
    "updated_at": "2015-11-03T06:27:56Z",
    "author_association": "MEMBER",
    "body": "@PBrockmann If your metadata is hierarchical, maybe it would be appropriate to use the hierarchical features of netCDF4/HDF5? Just a thought. In any case, I think we agree regardless that ODS support would be valuable for pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160306853",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-160306853",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 160306853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDMwNjg1Mw==",
    "user": {
      "login": "hnykda",
      "id": 2741256,
      "node_id": "MDQ6VXNlcjI3NDEyNTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2741256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hnykda",
      "html_url": "https://github.com/hnykda",
      "followers_url": "https://api.github.com/users/hnykda/followers",
      "following_url": "https://api.github.com/users/hnykda/following{/other_user}",
      "gists_url": "https://api.github.com/users/hnykda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hnykda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hnykda/subscriptions",
      "organizations_url": "https://api.github.com/users/hnykda/orgs",
      "repos_url": "https://api.github.com/users/hnykda/repos",
      "events_url": "https://api.github.com/users/hnykda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hnykda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-28T14:50:10Z",
    "updated_at": "2015-11-28T14:50:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there any progress on this? Thanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160477811",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-160477811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 160477811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ3NzgxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-29T22:31:42Z",
    "updated_at": "2015-11-29T22:31:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hnykda there is a PR #9070 that is not far away, but needs some work if you'd like to pick it up.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160573882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-160573882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 160573882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDU3Mzg4Mg==",
    "user": {
      "login": "hnykda",
      "id": 2741256,
      "node_id": "MDQ6VXNlcjI3NDEyNTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2741256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hnykda",
      "html_url": "https://github.com/hnykda",
      "followers_url": "https://api.github.com/users/hnykda/followers",
      "following_url": "https://api.github.com/users/hnykda/following{/other_user}",
      "gists_url": "https://api.github.com/users/hnykda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hnykda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hnykda/subscriptions",
      "organizations_url": "https://api.github.com/users/hnykda/orgs",
      "repos_url": "https://api.github.com/users/hnykda/repos",
      "events_url": "https://api.github.com/users/hnykda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hnykda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T09:37:28Z",
    "updated_at": "2015-11-30T09:37:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will take a look at it. Thank you for pointing it out. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/274235051",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-274235051",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 274235051,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDIzNTA1MQ==",
    "user": {
      "login": "jameserrico",
      "id": 1016971,
      "node_id": "MDQ6VXNlcjEwMTY5NzE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1016971?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jameserrico",
      "html_url": "https://github.com/jameserrico",
      "followers_url": "https://api.github.com/users/jameserrico/followers",
      "following_url": "https://api.github.com/users/jameserrico/following{/other_user}",
      "gists_url": "https://api.github.com/users/jameserrico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jameserrico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jameserrico/subscriptions",
      "organizations_url": "https://api.github.com/users/jameserrico/orgs",
      "repos_url": "https://api.github.com/users/jameserrico/repos",
      "events_url": "https://api.github.com/users/jameserrico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jameserrico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-21T04:41:03Z",
    "updated_at": "2017-01-21T04:41:03Z",
    "author_association": "NONE",
    "body": "On a similar note has anyone considered Google Sheets?  There are some limits to the size of a sheet (http://gappstips.com/google-sheets/google-spreadsheet-limitations/) that probably make it only usable for some cases but there are quite a lot of datasets that would fit within this restrictions and the ease of collaboration with Sheets is nice."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/307256187",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-307256187",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 307256187,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzI1NjE4Nw==",
    "user": {
      "login": "detrout",
      "id": 975038,
      "node_id": "MDQ6VXNlcjk3NTAzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/975038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detrout",
      "html_url": "https://github.com/detrout",
      "followers_url": "https://api.github.com/users/detrout/followers",
      "following_url": "https://api.github.com/users/detrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/detrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detrout/subscriptions",
      "organizations_url": "https://api.github.com/users/detrout/orgs",
      "repos_url": "https://api.github.com/users/detrout/repos",
      "events_url": "https://api.github.com/users/detrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T23:37:46Z",
    "updated_at": "2017-06-08T23:37:46Z",
    "author_association": "NONE",
    "body": "@jameserrico There's a library https://github.com/embr/gcat that can read from google drive. I have a fork that I updated to work with python3 https://github.com/detrout/gcat but upstream hasn't merged the pull-request\r\n\r\nIt knows how to return pandas data frames. I.e. I have some code like this:\r\n```python\r\n    book = gcat.get_file(book_name, fmt='pandas_excel')\r\n    experiments = book.parse('Experiments', header=0)`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308931610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-308931610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 308931610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODkzMTYxMA==",
    "user": {
      "login": "detrout",
      "id": 975038,
      "node_id": "MDQ6VXNlcjk3NTAzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/975038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detrout",
      "html_url": "https://github.com/detrout",
      "followers_url": "https://api.github.com/users/detrout/followers",
      "following_url": "https://api.github.com/users/detrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/detrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detrout/subscriptions",
      "organizations_url": "https://api.github.com/users/detrout/orgs",
      "repos_url": "https://api.github.com/users/detrout/repos",
      "events_url": "https://api.github.com/users/detrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-16T04:41:40Z",
    "updated_at": "2017-06-16T04:41:40Z",
    "author_association": "NONE",
    "body": "I have a standalone reader styled like pandas.io.excel with tests.\r\nhttps://github.com/detrout/pandasodf\r\n\r\nIt uses odfpy as that seems like its still maintained. Any comments, or should I try reformatting into a pull request creating  pandas/io/odf.py?\r\n\r\nI thought the .read_odf method seemed more reasonable, than overloading .read_excel"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308932362",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-308932362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 308932362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODkzMjM2Mg==",
    "user": {
      "login": "naught101",
      "id": 167164,
      "node_id": "MDQ6VXNlcjE2NzE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/167164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naught101",
      "html_url": "https://github.com/naught101",
      "followers_url": "https://api.github.com/users/naught101/followers",
      "following_url": "https://api.github.com/users/naught101/following{/other_user}",
      "gists_url": "https://api.github.com/users/naught101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naught101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naught101/subscriptions",
      "organizations_url": "https://api.github.com/users/naught101/orgs",
      "repos_url": "https://api.github.com/users/naught101/repos",
      "events_url": "https://api.github.com/users/naught101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naught101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-16T04:48:22Z",
    "updated_at": "2017-06-16T04:48:22Z",
    "author_association": "NONE",
    "body": "> I thought the .read_odf method seemed more reasonable, than overloading .read_excel \r\n\r\nMakes sense. Perhaps there could be a `read_spreadsheet` that calls `read_csv`, `read_excel`, `read_odf` etc, depending on the extension?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/309091634",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-309091634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 309091634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTA5MTYzNA==",
    "user": {
      "login": "detrout",
      "id": 975038,
      "node_id": "MDQ6VXNlcjk3NTAzOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/975038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/detrout",
      "html_url": "https://github.com/detrout",
      "followers_url": "https://api.github.com/users/detrout/followers",
      "following_url": "https://api.github.com/users/detrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/detrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/detrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/detrout/subscriptions",
      "organizations_url": "https://api.github.com/users/detrout/orgs",
      "repos_url": "https://api.github.com/users/detrout/repos",
      "events_url": "https://api.github.com/users/detrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/detrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-16T17:51:50Z",
    "updated_at": "2017-06-16T17:51:50Z",
    "author_association": "NONE",
    "body": "@naught101 The general reader might have some difficulties since there are differences in what the various formats support. CSV/TSV only have a single table, while Excel & ODF can have multiple tables per file. \r\n\r\nAlso I'm currently contemplating passing the raw odfpy xml cell node for the converters callable, so those would be quite difficult to write if you didn't know the source file type."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/320587113",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-320587113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 320587113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMDU4NzExMw==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-07T07:13:31Z",
    "updated_at": "2017-08-07T07:13:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I thought the .read_odf method seemed more reasonable, than overloading .read_excel\r\n\r\n@detrout FYI, maybe things have changed since, but at the time of PR #9070 there was a very clear decision by the pandas devs not to do that and to keep ```read_excel``` for both the Excel and Open Document Format families."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465905980",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-465905980",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 465905980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTkwNTk4MA==",
    "user": {
      "login": "TrigonaMinima",
      "id": 2520893,
      "node_id": "MDQ6VXNlcjI1MjA4OTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2520893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TrigonaMinima",
      "html_url": "https://github.com/TrigonaMinima",
      "followers_url": "https://api.github.com/users/TrigonaMinima/followers",
      "following_url": "https://api.github.com/users/TrigonaMinima/following{/other_user}",
      "gists_url": "https://api.github.com/users/TrigonaMinima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TrigonaMinima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TrigonaMinima/subscriptions",
      "organizations_url": "https://api.github.com/users/TrigonaMinima/orgs",
      "repos_url": "https://api.github.com/users/TrigonaMinima/repos",
      "events_url": "https://api.github.com/users/TrigonaMinima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TrigonaMinima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T08:24:00Z",
    "updated_at": "2019-02-21T08:24:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback is https://github.com/pandas-dev/pandas/pull/9070 the right starting point on this or do you suggest starting with something else?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465921282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2311#issuecomment-465921282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2311",
    "id": 465921282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTkyMTI4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-21T09:13:22Z",
    "updated_at": "2019-02-21T09:13:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes that issue is a good starting point\r\n\r\nnote that the internal code org has changed a lot since then "
  }
]
