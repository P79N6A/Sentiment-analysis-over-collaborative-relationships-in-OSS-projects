[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367785091",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19821#issuecomment-367785091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19821",
    "id": 367785091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzc4NTA5MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T19:01:26Z",
    "updated_at": "2018-02-22T19:01:26Z",
    "author_association": "MEMBER",
    "body": "Correct me if I am wrong but whitespace is not significant in JSON, so I don't think it is generalizable to have the hook that you envision. Are your memory issues on creation of a DataFrame or purely from parsing the JSON? I suppose there are some options with the former but the latter would be quite the undertaking, if even possible"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367844870",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19821#issuecomment-367844870",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19821",
    "id": 367844870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg0NDg3MA==",
    "user": {
      "login": "sam-cohan",
      "id": 4357268,
      "node_id": "MDQ6VXNlcjQzNTcyNjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4357268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam-cohan",
      "html_url": "https://github.com/sam-cohan",
      "followers_url": "https://api.github.com/users/sam-cohan/followers",
      "following_url": "https://api.github.com/users/sam-cohan/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam-cohan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam-cohan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam-cohan/subscriptions",
      "organizations_url": "https://api.github.com/users/sam-cohan/orgs",
      "repos_url": "https://api.github.com/users/sam-cohan/repos",
      "events_url": "https://api.github.com/users/sam-cohan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam-cohan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T22:30:06Z",
    "updated_at": "2018-02-22T22:30:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure why whitespace not being significant is important. this is specifically for `lines=True` so presumably just beofre and just after each line is parsed into json there should be a hook to pass the object for arbitrary manipulation rather than having to wait for all the DataFrame to be created before dropping some of the columns."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367852299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19821#issuecomment-367852299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19821",
    "id": 367852299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg1MjI5OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T23:00:41Z",
    "updated_at": "2018-02-22T23:01:17Z",
    "author_association": "MEMBER",
    "body": "My point was that with how you described it the hook would not be generalizable without `lines=True` so it would be pretty difficult to implement `usecols` outside of a limited scope if at all. I'm not an expert on JSON so perhaps there is a way others can chime in on. \r\n\r\nYou are aware of the `chunksize` argument right? If you are running into memory issues parsing the file that can be helpful at the cost of some performance"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367857511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19821#issuecomment-367857511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19821",
    "id": 367857511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg1NzUxMQ==",
    "user": {
      "login": "sam-cohan",
      "id": 4357268,
      "node_id": "MDQ6VXNlcjQzNTcyNjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4357268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam-cohan",
      "html_url": "https://github.com/sam-cohan",
      "followers_url": "https://api.github.com/users/sam-cohan/followers",
      "following_url": "https://api.github.com/users/sam-cohan/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam-cohan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam-cohan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam-cohan/subscriptions",
      "organizations_url": "https://api.github.com/users/sam-cohan/orgs",
      "repos_url": "https://api.github.com/users/sam-cohan/repos",
      "events_url": "https://api.github.com/users/sam-cohan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam-cohan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-22T23:24:22Z",
    "updated_at": "2018-02-22T23:24:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see your point, thought still think it is helpful to have those arguments when `lines=True`. I guess one way around my current problem is indeed using `chunksize` parameter."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367887727",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19821#issuecomment-367887727",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19821",
    "id": 367887727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg4NzcyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T02:09:47Z",
    "updated_at": "2018-02-23T02:09:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sam-cohan have a calling hook on every line would make this unbearably slow. This would require quite a major effort and the json parser is just not flexibile enough to allow this. This suggestion is already noted in the design of the next generation parser being contemplated by @wesm see: https://github.com/pandas-dev/pandas2/issues/71, though this is still very much in the early design phase."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367891541",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19821#issuecomment-367891541",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19821",
    "id": 367891541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzg5MTU0MQ==",
    "user": {
      "login": "sam-cohan",
      "id": 4357268,
      "node_id": "MDQ6VXNlcjQzNTcyNjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4357268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam-cohan",
      "html_url": "https://github.com/sam-cohan",
      "followers_url": "https://api.github.com/users/sam-cohan/followers",
      "following_url": "https://api.github.com/users/sam-cohan/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam-cohan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam-cohan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam-cohan/subscriptions",
      "organizations_url": "https://api.github.com/users/sam-cohan/orgs",
      "repos_url": "https://api.github.com/users/sam-cohan/repos",
      "events_url": "https://api.github.com/users/sam-cohan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam-cohan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-23T02:34:25Z",
    "updated_at": "2018-02-23T02:34:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback yes, I am essentially reading the file line by line and doing the same myself and that is very slow. I was hoping there would be some internal optimization that could be built in to discard certain keys from the json after each line is read. I guess that is what the enhancement you are referring to is for. Thanks."
  }
]
