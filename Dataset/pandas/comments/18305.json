[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344609126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18305#issuecomment-344609126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18305",
    "id": 344609126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDYwOTEyNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T14:29:54Z",
    "updated_at": "2017-11-15T14:29:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can use `object` dtype for storing arbitrary python objects.\r\n\r\n```python\r\n\r\nIn [51]: df = pd.DataFrame({'date': pd.Series(datelist, dtype='object'), 'y': np.random.rand(10)})\r\n\r\nIn [52]: df.date[0]\r\nOut[52]: someobject(2017, 1, 2, 0, 0)\r\n```\r\n\r\nYMMV on how well this works and which operations in pandas will cast those to datetime64[ns]. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344635474",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18305#issuecomment-344635474",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18305",
    "id": 344635474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDYzNTQ3NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-15T15:51:20Z",
    "updated_at": "2017-11-15T15:51:20Z",
    "author_association": "MEMBER",
    "body": "> In this simple case it is at least possible to get back a datetime object by list comprehension, dates = [d.to_pydatetime() for d in df[\"date\"]], which I would consider as an unnecessary step and makes the use of a DataFrame somehow obsolete.\r\n\r\nAlso `df['date'].dt.to_pydatetime()` will do this for you without list comprehension"
  }
]
