[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345276792",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18342#issuecomment-345276792",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18342",
    "id": 345276792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTI3Njc5Mg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T15:35:58Z",
    "updated_at": "2017-11-17T15:35:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "To directly answer your question, if you want unparsed strings, pass `thousands=None`.\r\n```python\r\npd.read_html(data(), thousands=None, converters={'Number': lambda x: x})[0].values\r\nOut[28]: \r\narray([['1.320,00'],\r\n       ['600,00']], dtype=object)\r\n```\r\n\r\nThe two issues I see\r\n\r\n1.  `read_html` has `thousands=','` as the default, while most (all?) other parsing returns have `None`\r\n\r\n2.  In all parsing routines, `thousands` isn't used a true three-number sep, but but more a find/replace as you note\r\n```python\r\nIn [29]: pd.read_csv(StringIO(\"\"\"a|b\r\n    ...: 1,222,22|01.12.2017\r\n    ...: 1,222,22|01.12.2017\"\"\"), sep='|', thousands='.')\r\nOut[29]: \r\n          a        b\r\n0  1,222,22  1122017\r\n1  1,222,22  1122017\r\n```\r\n\r\nWould probably take a PR for either, 1. would require deprecation, 2. might be fairly involved\r\n\r\n"
  }
]
