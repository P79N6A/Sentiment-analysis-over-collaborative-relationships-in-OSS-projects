[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404352853",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-404352853",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 404352853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM1Mjg1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T00:36:08Z",
    "updated_at": "2018-07-12T00:36:08Z",
    "author_association": "MEMBER",
    "body": "I think this is a pretty solid proposal.  That being said, given that this is a core part of `DataFrame`, let's ping @pandas-dev/pandas-core as well.  Thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404353715",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-404353715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 404353715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM1MzcxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T00:41:49Z",
    "updated_at": "2018-07-12T00:41:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "we only join on a single axes at a time\r\nso your last point is a no go as you have written it\r\nhowever look at how pd.concat handles the non concat axes which is what you are describing"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404417257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-404417257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 404417257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDQxNzI1Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T07:31:30Z",
    "updated_at": "2018-07-15T12:53:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I don't think I follow completely. Of course `concat` and `align` join on both axes, the former always defaulting to `'outer'`, and the latter explicitly with `axis=None`.\r\n\r\nBut more to the point, both methods satisfy different needs, and `update` has yet another set of requirements. Consider the following:\r\n\r\n```\r\none = pd.DataFrame([[0, 1], [2, 3]], columns=list('ab'))\r\ntwo = pd.DataFrame([[10, 11], [12, 13]], index=[1, 2], columns=list('bc'))\r\n\r\n## this case is clear: join on both axes\r\none.align(two, join='outer', axis=None)\r\n#      a    b   c\r\n# 0  0.0  1.0 NaN\r\n# 1  2.0  3.0 NaN\r\n# 2  NaN  NaN NaN\r\n#     a     b     c\r\n# 0 NaN   NaN   NaN\r\n# 1 NaN  10.0  11.0\r\n# 2 NaN  12.0  13.0\r\n\r\n## this aligns only columns\r\none.align(two, join='outer', axis=1)\r\n#    a  b   c\r\n# 0  0  1 NaN\r\n# 1  2  3 NaN\r\n#     a   b   c\r\n# 1 NaN  10  11\r\n# 2 NaN  12  13\r\n```\r\nBut this does not help us, as this does not give an answer whether the *index*  should be `[0,1] | [0,1,2] | [1,2] | [1]`, and reasonable arguments can be made *at least* for `'left'` and `'outer'`.\r\n\r\n`concat` also does not solve the problem either:\r\n```\r\npd.concat([one, two], axis=0, sort=False)\r\n#      a   b     c\r\n# 0  0.0   1   NaN\r\n# 1  2.0   3   NaN\r\n# 1  NaN  10  11.0\r\n# 2  NaN  12  13.0\r\npd.concat([one, two], axis=1)\r\n#      a    b     b     c\r\n# 0  0.0  1.0   NaN   NaN\r\n# 1  2.0  3.0  10.0  11.0\r\n# 2  NaN  NaN  12.0  13.0\r\n```\r\nActually, one can very easily emulate joins in two axes with `concat`, (with the restriction that the concatenation axis can just be `'outer'|'inner'`), although it took some figuring out, because the `join_axes` kwarg is not very well-documented...\r\n```\r\n## 'right'-join for the non-concatenation axis\r\npd.concat([one, two], join='outer', axis=1, join_axes=[two.index])\r\n#      a    b   b   c\r\n# 1  2.0  3.0  10  11\r\n# 2  NaN  NaN  12  13\r\n```\r\nThe only thing missing here would be the processing of the `'b'` columns (and a decision on which columns to retain). Assuming we'd chose `'left'` for the columns, we'd have\r\n```\r\none.update(two, join=['right', 'left'])\r\n#      a   b\r\n# 1  2.0  10\r\n# 2  NaN  12\r\none.update(two, join=['right', 'left'], overwrite=False)\r\n#      a   b\r\n# 1  2.0   3\r\n# 2  NaN  12\r\n```\r\nPersonally, I think this is much more readable than:\r\n```\r\none.update(two, join='left', axis=1, join_axes=[two.index], overwrite=False)\r\n```\r\n\r\nSo, summing up, `align` does not care what the non-concatenation axis looks like, but `update` **must know** to decide on the right non-concatenation index (and at least `'left'` and `'outer'` should be possible there), and `concat` is essentially built (with the `join_axes`-kwarg) to do just what I propose to do. Of course, `concat` has to deal with concatenating potentially many objects, whereas `update` just takes two -- this allows the flexibility to add a more user-friendly API for `update`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/405579121",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-405579121",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 405579121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNTU3OTEyMQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-17T13:20:35Z",
    "updated_at": "2018-07-17T13:20:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Any response to the above?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410604969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-410604969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 410604969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDYwNDk2OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T06:44:10Z",
    "updated_at": "2018-08-06T06:44:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pandas-dev @jreback gentle ping :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411778262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-411778262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 411778262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc3ODI2Mg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T14:31:09Z",
    "updated_at": "2018-08-09T14:31:09Z",
    "author_association": "MEMBER",
    "body": "I'm +1 on deprecating ``combine_first``, allowing ``update`` to replace it. I'm +1 in general on the proposed new skills for ``update``. I'm -0.5 however on the proposed values for ``join``: I _think_ I would rather have\r\n```\r\nindex = 'left'|'right'|...\r\ncolumns = 'left'|'right'|...\r\n```\r\n(which as a bonus - and only if trivial implementation-wise - could accept an actual ``Index`` instance) and deprecate ``join``.\r\nThe reasons are:\r\n- I can't think of any other method in the API which has something similar to ``join=['left', 'right']``, while several methods have ``index=`` and ``columns=``\r\n- I want to be able to pass the concatenation index for ``columns`` while using the default for ``index`` (e.g. if the two dataframes have the same index and I'm lazy)\r\n- ``Series.update`` still does not support ``join``, so we have no consistency constraints on that side\r\n\r\nAm I missing anything @h-vetinari ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411797952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-411797952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 411797952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTc5Nzk1Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T15:27:43Z",
    "updated_at": "2018-08-09T15:30:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toobaz \r\n> [...] I would rather have\r\n  ```\r\n  index = 'left'|'right'|...\r\n  columns = 'left'|'right'|...\r\n  ```\r\n\r\nGood idea! Certainly better than the `['left', 'right']` thing I came up with. I like it a lot, the only question is how unambiguous the kwarg-names are in the context of:\r\n```\r\nDataFrame.update(other, index='left', columns='left', overwrite=True,\r\n                 filter_func=None, raise_conflict=False)\r\n```\r\nAnd even though `join` currently does nothing, I guess removing it counts as an API-break...?\r\n\r\nThe idea for the \"bonus\" is very similar to the `join_axes`-kwarg of `concat`, but with an intuitive meaning. This would essentially wrap `reindex` then? +0.5\r\n\r\nThinking a bit more about `join`, maybe it could be left in to broadcast its value to `index/columns`, with higher precedence for the latter. There should probably be a warning if all three are set?  I could only see that with `None`-defaults for all, and some logic as follows:\r\n```\r\ndef DataFrame.update(other, join=None, index=None, columns=None, overwrite=True,\r\n                     filter_func=None, raise_conflict=False):\r\n[...]\r\nif all(x is not None for x in [join, index, columns]):\r\n    raise UserWarning('The join-keyword will be ignored, since both index/columns are set.')\r\njoin = 'left' if join is None else join\r\nindex = join if index is None else index\r\ncolumns = join if columns is None else columns\r\n[...]\r\n```\r\n\r\nAlternatively, `join` could just be slapped with a `DeprecationWarning`, and phased out completely with 1.0... Ultimately, I think this would be easiest, and (combined with your `index/columns`-suggestion) might be my favourite solution so far."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412552164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-412552164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 412552164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU1MjE2NA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:09:18Z",
    "updated_at": "2018-08-13T15:09:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toobaz Any thoughts to the above, resp. preferences for the summary below (not counting deprecation cycles)? I'm torn between options 1. & 2.\r\n1. replace `join` (currently does nothing) with `index` and `columns`\r\n1. leave `join` and broadcast its value to `index` and `columns` (if the latter are not set)\r\n1. something else"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413103937",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-413103937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 413103937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzEwMzkzNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T06:14:00Z",
    "updated_at": "2018-09-05T12:26:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Considerations for the API to allow different join-types for `update`:\r\n* Desirable to allow different join-types for index/columns\r\n* Possibly have `index` / `columns`-kwargs together with (or instead of) `join` - could also allow passing index object instead of `'left'|'outer'|...` (see https://github.com/pandas-dev/pandas/issues/21855#issuecomment-411778262)\r\n* Signature between `DataFrame.update` and `Series.update` should match as much as possible (xref #22358)\r\n\r\nSo then, the question is which combination makes the most sense. Here the variants so far for `DataFrame.update`:\r\n1. ```DataFrame.update(other, index='left', columns='left', ...)``` with deprecation of `join`\r\n1. ```DataFrame.update(other, join='left', index=None, columns=None, ...)```; with `index/columns` superseding `join`:\r\n  ```[...]```\r\n  ```index = join if index is None else index```\r\n  ```columns = join if index is None else columns```\r\n1. ```DataFrame.update(other, join=None, index=None, columns=None, ...)``` like above but with no default for `join` to be able to issue a warning:\r\n  ```[...]```\r\n  ```if all(x is not None for x in [join, index, columns]):```\r\n  ```raise UserWarning('The join-keyword will be ignored, since both index/columns are set.')```\r\n  ```join = 'left' if join is None else join```\r\n  ```index = join if index is None else index```\r\n  ```columns = join if columns is None else columns```\r\n\r\nAnd the variants so far for `Series.update`:\r\n\r\n1. ```Series.update(other, index='left', overwrite=True, filter_func=None, raise_conflict=False)```\r\n1. ```Series.update(other, join='left', overwrite=True, filter_func=None, raise_conflict=False)```\r\n1. ```Series.update(other, join='left', index=None, overwrite=True, ...)``` ; with `index` superseding `join`:\r\n  ```[...]```\r\n  ```index = join if index is None else index```\r\n1. ```Series.update(other, join=None, index=None, overwrite=True, ...)``` like above but with no default for `join` to be able to issue a warning:\r\n  ```[...]```\r\n  ```if all(x is not None for x in [join, index]):```\r\n  ```raise UserWarning('The join-keyword will be ignored, since index has been passed.')```\r\n  ```join = 'left' if join is None else join```\r\n  ```index = join if index is None else index```\r\n\r\nI think that - from the POV of consistency (and the idea of @toobaz to be able to pass indexes directly) - the most reasonable choice would be DF_1./S_1. In particular, **then `join` for `df.update` should be deprecated in v0.24**. Alternatively, DF_2./S_3. also seems reasonable to me.\r\n\r\n[edit 180823]: added some more options\r\n[edit 180905]: rewrote comment for more clarity"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414207646",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-414207646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 414207646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDIwNzY0Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-20T06:14:27Z",
    "updated_at": "2018-08-20T06:14:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toobaz If I may ask for your input to the above (since your last response), then I could formulate a cleaned-up proposal which can then be reviewed by everybody."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418711719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-418711719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 418711719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODcxMTcxOQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-05T12:27:23Z",
    "updated_at": "2018-09-05T12:27:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung @toobaz @jreback @TomAugspurger @jorisvandenbossche \r\n\r\nWith `v0.24` scheduled at the end of the month (and the deprecation policy leading up to `v1.0`), I wanted to bring attention to this issue again. Depending on the choice of API (see https://github.com/pandas-dev/pandas/issues/21855#issuecomment-413103937), it might be necessary to deprecate the `join`-kwarg for `df.update` (which currently does nothing), so I think this should be discussed."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420334697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-420334697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 420334697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDMzNDY5Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T16:26:40Z",
    "updated_at": "2018-09-11T16:43:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wesm \r\nVery gentle ping to the BDFL - I've been wanting to work on this for 2 months but can't move past the API discussion that essentially nobody has time (or motivation) for. Goal is more joins for `df.update`, noted as `TODO` even in the source code:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/v0.23.4/pandas/core/frame.py#L5054\r\n\r\nOpen questions:\r\n* if and how to allow different joins for different axes (see summary in https://github.com/pandas-dev/pandas/issues/21855#issuecomment-413103937) - depending on the choice, a (kwarg-)deprecation might be necessary (and v0.24 is around the corner, which is the last chance to deprecate before 1.0).\r\n* whether to allow `update` to have `inplace=False`, see #22286 (thinking also towards potentially deprecating `combine_first`, see OP and #21859)\r\n* alternatively (though unlikely), leave `df.update` as-is and have a separate method like `df.fuse` or `df.coalesce` that fuses two dataframes with given precedence, and requirements for the output axes\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420377653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-420377653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 420377653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM3NzY1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T18:40:07Z",
    "updated_at": "2018-09-11T18:40:14Z",
    "author_association": "MEMBER",
    "body": "@h-vetinari : Sorry that we've been pretty dark on this.  I think there is definitely interest, but time is certainly a factor here.  @jreback @toobaz : thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420387002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-420387002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 420387002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDM4NzAwMg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-11T19:07:36Z",
    "updated_at": "2018-09-11T19:07:36Z",
    "author_association": "MEMBER",
    "body": "Still very busy, sorry. Will be back next week."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421148660",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-421148660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 421148660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE0ODY2MA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T20:50:40Z",
    "updated_at": "2018-09-13T20:50:40Z",
    "author_association": "MEMBER",
    "body": "I'm completely underwater until mid-November. If there is truly an impasse where I can help / weigh in, please let me know and I'll make the time"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421151815",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-421151815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 421151815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE1MTgxNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T21:01:14Z",
    "updated_at": "2018-09-13T21:01:37Z",
    "author_association": "MEMBER",
    "body": "@wesm : I think @toobaz will be freed up next week, so we should be okay (he's probably best to speak to this issue at this point).  Time is a scarce commodity indeed 🙂 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422211349",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-422211349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 422211349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjIxMTM0OQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T00:13:21Z",
    "updated_at": "2018-09-18T00:13:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @toobaz @jorisvandenbossche \r\n\r\nFriendly ping. :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422299913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-422299913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 422299913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjI5OTkxMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-18T08:17:02Z",
    "updated_at": "2018-09-18T08:17:02Z",
    "author_association": "MEMBER",
    "body": "Some random thoughts for now:\r\n\r\n- I am not fully sure that I like the idea of `index` and `columns` keyword. It is true that they are already used in different methods, but they are also used in a different way. Eg in `drop`, you pass the actual index or column labels to drop. Comparing to `merge`, where you have a `left_on`/`right_on` (next to `on`), we could also think about a `index_join`/`column_join` (just thinking aloud, not sure I like this myself :), and it is of course not about the left/right frame here) \r\n  Maybe a more concrete worry is that in eg `index='outer'` it is not directly saying that this is about how to join. \r\n- One advantage of having (keeping) the single `join` keyword is that you can specify with a single keyword to eg outer join both axes, instead of having to pass both `index='outer'`, `columns='outer'`.  \r\n- If we add such functionality to have different join types for both axes, isn't this something we should start with adding to `align` ? (since that is the workhorse that will probably be used under the hood, and which allows you to already do outer updates manually) \r\n  To be clear, not saying that this should necessarily be done at the same, but I think we should make sure that the API we choose also works there."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/422674956",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21855#issuecomment-422674956",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21855",
    "id": 422674956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMjY3NDk1Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-19T06:42:27Z",
    "updated_at": "2018-09-19T06:42:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toobaz \r\nI'll wait for your answer before I respond to Joris (been spamming enough as is)."
  }
]
