[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71272341",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71272341",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71272341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjcyMzQx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T21:49:44Z",
    "updated_at": "2015-01-23T21:49:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to suggest that `Series.unique()` is changed to the same \"API\" as `np.unique()`, e.g. that the result is sorted.\n\nNumpy actually specifies that the returned values are sorted: http://docs.scipy.org/doc/numpy/reference/generated/numpy.unique.html\n\n> Returns the sorted unique elements of an array. [...]\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71272592",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71272592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71272592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjcyNTky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T21:51:18Z",
    "updated_at": "2015-01-23T21:51:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "iirc pd.unique has a much greater perf and keeps things in the same order as compared to np.unique mainly by using a hashable impl\n\nhowever I don't know the actual guarantees \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71274770",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71274770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71274770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjc0Nzcw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T22:06:47Z",
    "updated_at": "2015-01-23T22:09:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just as a referece:\n\n``` python\nIn[11]: s = pd.Series([1, 3, 2, np.nan, 1,4])\nIn[12]: s.unique()\nOut[12]: array([  1.,   3.,   2.,  nan,   4.])\nIn[13]: np.unique(s)\nOut[13]: array([  1.,   2.,   3.,   4.,  nan])\nIn[14]: s = pd.Series([\"a\", \"c\", \"b\", np.nan, \"a\", \"d\"])\nIn[15]: s.unique()\nOut[15]: array(['a', 'c', 'b', nan, 'd'], dtype=object)\nIn[16]: np.unique(s)\nOut[16]: \narray(['a', 'b', 'c', 'd', 'nan'], \n      dtype='|S3')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71274984",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71274984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71274984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjc0OTg0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T22:08:30Z",
    "updated_at": "2015-01-25T01:27:31Z",
    "author_association": "MEMBER",
    "body": "The underlying implementation is defined in hashtable.pyx, e.g.,: https://github.com/pydata/pandas/blob/3030bba1f151160f7e4cdfba8d3a00276b07be17/pandas/hashtable.pyx#L785\n\nSo it pretty clearly does not sort, just loops through the values (using a hashtable) and appends when not found.\n\nI like the non-sorting behavior of pd.unique for three reasons:\n1. It's faster (sometimes even `np.sort(pd.unique(values))` is faster than `np.unique(values)`)\n2. It's more composable\n3. `np.unique` does not cover this use-case (unsorted unique values)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71275142",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71275142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71275142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjc1MTQy",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T22:09:48Z",
    "updated_at": "2015-01-23T22:09:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking briefly at `pd.unique`, it dispatches on the dtype (float, int, other). We'll need to make sure that all of these guarantee the same things.\n\n@shoyer is right about the looping (was just going to post that), and I agree that non-sorting is desirable since it's more composable (and faster).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71275378",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71275378",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71275378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjc1Mzc4",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T22:11:34Z",
    "updated_at": "2015-01-23T22:11:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can someone give me an example of \"more composable\"? I buy the faster, but I haven't seen a case where a \"sorted by appearance\" sorting of unique is better than a sorted unique.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71277202",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71277202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71277202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMjc3MjAy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-23T22:26:24Z",
    "updated_at": "2015-01-23T22:26:24Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz `np.unique` and `np.sort` each do one thing (uniques or sorting). `np.unique` does two things (both finding uniques and sorting). If you don't want both, you are out of luck. This is just a specific example of a general principle for API/language design, e.g., see http://stackoverflow.com/a/2887190/809705\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71305887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71305887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71305887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzA1ODg3",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-24T09:01:18Z",
    "updated_at": "2015-01-24T22:12:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problem I see here is that the current order is kind of random as it depends on the implementation of hashlib which drives unique. If that would change, unique would also change or, if your proposal would be chosen, would need a special sorting step which would be potentially costlier than simple sorting.\n\nI also don't see much value in having a \"in order of appearance\" order of unique. My datasets usually are sorted by some (arbitrary) id and so \"order of appearance\" makes no sense and I would usually have to sort that anyway. And I don't get why I should sort my complete dataframe just to get a sorted unique and thereby a sorted plot like it is implied in the original seaborn bug report.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71346462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71346462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71346462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzQ2NDYy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T01:45:39Z",
    "updated_at": "2015-01-25T01:45:39Z",
    "author_association": "MEMBER",
    "body": "Just to be entirely clear, the order of unique here is entirely determined by the `HashTable.unique` method in pandas. There's no dependence on klib or external dependencies, and each of the three implementations (int, float, object) use almost identical logic, appending unique values in the order in which they are found.\n\nRight now, the order from unique this is technically an implementation detail, but it's one that is assuredly relied on implicitly in user code. The only way it would break it is if we changed the underlying implementation of unique, which seems unlikely. I think we should make it API so users can safely rely on it and predict exactly what it will do.\n\n@JanSchulz not quite sure what you're getting at there:\n\n> And I don't get why I should sort my complete dataframe just to get a sorted unique and thereby a sorted plot like it is implied in the original seaborn bug report.\n\nYou don't need to sort your complete frame -- you can use `df.drop_duplicates().order()`. For a series, you are right that `s.unique().order()` will not work... I'm not quite sure what we should do about that. But that is already existing behavior. Perhaps this would weigh in favor of making `Categorical.unique` return another categorical as discussed in #9331? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71363188",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71363188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71363188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzYzMTg4",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T09:47:05Z",
    "updated_at": "2015-01-25T09:47:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, just saw it using the klib hastable and didn't look up the actual implementation. The implemenation seems to work also in other hastyble implementation (as long as a \"this value is already in the table\" indicator exists), but what if a new version of hastable brings with it a `klib_get_unique_values()` by itself which is faster but sorts differently? \n\nRe the last thing: What I don't buy is that to get the unique values sorted in a special way (for plotting,...), you want/need to manipulate the dataframe. IMO that's a waste of CPU cycles, whether it is `drop_duplicates()` or `sort` or whatever... Much easier to pass in a \"sorted as you want\" array or sort the returned array... At least as long as `len(dataframe) >> len(unique)` which is probably true in the original seaborn bug.\n\nMaking `categorical.unique()` return a `Categorical` will not change that as the values are still in some particular order (or not).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71364511",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71364511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71364511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzY0NTEx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T10:14:47Z",
    "updated_at": "2015-01-25T10:14:47Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz If you want sorted unique values, you can use `np.sort(s.unique())` or even `np.unique(s)`. Is that so bad? It's hardly wasteful of CPU cycles.\n\nThis works for every type other than categorical. If you want to add a `pd.sort` method which works like `np.sort` but also handles categoricals correctly, that I'm all for it.\n\n> what if a new version of hastable brings with it a klib_get_unique_values() by itself which is faster but sorts differently?\n\nThis may very well be possible but it seems pretty far-fetched to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71370224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71370224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71370224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzcwMjI0",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T12:24:52Z",
    "updated_at": "2015-01-25T12:24:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not so much arguing for sorting but for making it clear that the order is undefined and can change.\n\nI do think that seaborn should sort, though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71384065",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71384065",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71384065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzg0MDY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T18:13:30Z",
    "updated_at": "2015-01-25T18:13:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here are my 2c.\n- let's document that the returned results of `pd.unique` are in the order of appearance (implicity the current API).\n- sorting is up to the user; its a mistake to make this sort by default, then you need all kinds of options to control the sort, and its much slower\n\nso @shoyer top-of-pr is fine by me. Also ok with making the ordering 'undefined'.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71384114",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71384114",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71384114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzg0MTE0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T18:14:23Z",
    "updated_at": "2015-01-25T18:15:00Z",
    "author_association": "MEMBER",
    "body": "Looking at the above discussion, I think there are three possibilities for `unique`. We can say:\n1. that the order is undefined and cannot be relied upon (as it relies upon implementation details)\n2. that the output is sorted (as numpy does)\n3. that the output is in order of appearance (and we guarantee this)\n\nI personally don't think that case 1) is a good idea, as people will _always_ start relying on the output order in their code, even if we document that they shouldn't. So I would personally strive to have a well-defined order (and don't let users rely upon an implementation detail). \nI am not familiar with the numpy implementation, but this is possibly the reason they sort the output? To have a well defined output order, without having to guarantee the output order of the unique algorithm itself?\n\nSo, if we think we can guarantee the output order with the Hashtable implementation, why not documenting this? So people can safely rely on this, as they already will do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71479423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-71479423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 71479423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNDc5NDIz",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-26T15:37:12Z",
    "updated_at": "2015-02-09T20:53:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just for the reference: numpy sorts since 2006. Not sure how to get to the earlier unique implementation: https://github.com/numpy/numpy/blob/0ab9ae36e8484d06f2a8e70c6fe45004e73408b4/numpy/lib/arraysetops.py\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/73571389",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-73571389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 73571389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNTcxMzg5",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-09T19:19:51Z",
    "updated_at": "2015-02-09T19:46:15Z",
    "author_association": "NONE",
    "body": "jumping in here...\n1. the name `unique` documents itself and it says nothing about order.\n2. because of that you could drop in a faster `unique` in the future without breaking any guarantees this way. \n3. of course users rely on `unique` right now,  what else can they do? pandas has no explicit API for ordered `unique` separately from `unique`. If users had a way to ask for that explicitly they would. removing `unique` from the API and using that name instead for unique+ordered or unique+sorted is the wrong way to fix that issue.\n\nAPI guarantees are not the same as documenting implementation details. confusing the two makes for bad maintainability and bad API design.\n\n> Just for the reference: numpy sorts since 2006.\n\n... and they can't make user code run faster by simply dropping in the faster algorithm as a result, because they made unique and sorted unique the same thing. exactly. \n\nEDIT: maybe it would be good to document that `unique` makes no guarantees on order, to prevent future confusion. leaving non-guarantees undocumented seems to trigger attempts to \"fix it\". @jorisvandenbossche \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76021351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-76021351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 76021351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDIxMzUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-25T18:15:01Z",
    "updated_at": "2015-02-25T18:15:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "suggestion is to add a `kind` keyword, so currently should guarantee the order\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76467495",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-76467495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 76467495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NDY3NDk1",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-27T20:38:51Z",
    "updated_at": "2015-02-27T20:38:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "And I think we only need that `kind` keyword if we ever move to an\nimplementation that doesn't preserve order.\nThen we can maintain backwards compat with the `kind` argument, and move\npeople to the new behavior with a FutureWarning.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76544353",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-76544353",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 76544353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTQ0MzUz",
    "user": {
      "login": "kay1793",
      "id": 9023555,
      "node_id": "MDQ6VXNlcjkwMjM1NTU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9023555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kay1793",
      "html_url": "https://github.com/kay1793",
      "followers_url": "https://api.github.com/users/kay1793/followers",
      "following_url": "https://api.github.com/users/kay1793/following{/other_user}",
      "gists_url": "https://api.github.com/users/kay1793/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kay1793/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kay1793/subscriptions",
      "organizations_url": "https://api.github.com/users/kay1793/orgs",
      "repos_url": "https://api.github.com/users/kay1793/repos",
      "events_url": "https://api.github.com/users/kay1793/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kay1793/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T20:28:10Z",
    "updated_at": "2015-02-28T20:28:10Z",
    "author_association": "NONE",
    "body": "you'll just bomb lots of users with useless false warnings.\n\npandas should leave unique as it is, and ask (only) users relying on undocumented behavior to fix their code **now** and use the new method/keyword. after that if a better algo comes along you put it in without breaking _any_ code and make things faster for all users of `unique` without them doing anything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77478358",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-77478358",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 77478358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDc4MzU4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-05T23:50:58Z",
    "updated_at": "2015-03-05T23:50:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer this is just docs at this point (maybe some tests as well), right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77497865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-77497865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 77497865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDk3ODY1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T02:51:38Z",
    "updated_at": "2015-03-06T02:51:38Z",
    "author_association": "MEMBER",
    "body": "@jreback Mostly yes, though I might also do some tweaks to pd.unique to ensure it works on all dtypes (e.g., on categorical)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77500055",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9346#issuecomment-77500055",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9346",
    "id": 77500055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTAwMDU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T03:18:59Z",
    "updated_at": "2015-03-06T03:18:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, i'll move to 0.16.1 (don't want to hold us up on this issue). as its not going to be an api change, just docs,tests and such.\n"
  }
]
