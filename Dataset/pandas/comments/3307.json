[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16152141",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3307#issuecomment-16152141",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3307",
    "id": 16152141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTUyMTQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T02:33:02Z",
    "updated_at": "2013-04-10T02:33:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "that seems reasonable\n\nand if u would post your code when u can would appreciate it\n\nI think it makes sense to make a 'manager' object for muti tables\nso would like to see how u r using it\n\nit actually makes it interesting to serialize this object into the store as well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16152593",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3307#issuecomment-16152593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3307",
    "id": 16152593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTUyNTkz",
    "user": {
      "login": "Zelazny7",
      "id": 1675613,
      "node_id": "MDQ6VXNlcjE2NzU2MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1675613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zelazny7",
      "html_url": "https://github.com/Zelazny7",
      "followers_url": "https://api.github.com/users/Zelazny7/followers",
      "following_url": "https://api.github.com/users/Zelazny7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zelazny7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zelazny7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zelazny7/subscriptions",
      "organizations_url": "https://api.github.com/users/Zelazny7/orgs",
      "repos_url": "https://api.github.com/users/Zelazny7/repos",
      "events_url": "https://api.github.com/users/Zelazny7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zelazny7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T02:50:55Z",
    "updated_at": "2013-04-10T02:50:55Z",
    "author_association": "NONE",
    "body": "I'm starting to work on the wrapper code mostly geared towards keeping memory use low.  My first attempt tried to store each column using append, but that raised another exception (can a series not be stored as a table?).  To get around this, I instead store the dataframe in groups of 2 columns.\n\nThe code below chunks through the csv file twice.  The first pass is to calculate the datatypes.  The second pass is to store the dataframes in the HDFStore.\n\n``` python\n\n# find the datatypes with chunksize\ndef get_dtypes(chunker):\n    tmp = pd.DataFrame([chunk.dtypes for chunk in chunker])\n    return tmp.max().to_dict()\n\nchunker = pd.read_csv('Train.csv', header=0, chunksize=50000)\ndtypes = get_dtypes(chunker)\n\n# store columns in their own nodes\nstore.close()\nstore = pd.HDFStore('test.h5', 'w')\nchunker = pd.read_csv('Train.csv', header=0, chunksize=50000, dtype=dtypes)\n\n# break up columns into groups of at least 2\nnum_cols = len(dtypes)\nrng = [x for x in xrange(0, len(chunk.columns) - 2 , 2)]\nrng.append(num_cols)\n\nfor chunk in chunker:\n    for id, tup in enumerate(zip(rng, rng[1:])):\n        start, stop = tup\n        # I will eventually add a function that calcs min_itemsize for each chunk\n        store.append('chunk%s' % id, chunk.ix[:,start:stop], min_itemsize=64)\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16175674",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3307#issuecomment-16175674",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3307",
    "id": 16175674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTc1Njc0",
    "user": {
      "login": "Zelazny7",
      "id": 1675613,
      "node_id": "MDQ6VXNlcjE2NzU2MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1675613?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zelazny7",
      "html_url": "https://github.com/Zelazny7",
      "followers_url": "https://api.github.com/users/Zelazny7/followers",
      "following_url": "https://api.github.com/users/Zelazny7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zelazny7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zelazny7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zelazny7/subscriptions",
      "organizations_url": "https://api.github.com/users/Zelazny7/orgs",
      "repos_url": "https://api.github.com/users/Zelazny7/repos",
      "events_url": "https://api.github.com/users/Zelazny7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zelazny7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T13:59:08Z",
    "updated_at": "2013-04-10T13:59:08Z",
    "author_association": "NONE",
    "body": "Just tested that I **can** store a single column using append as long as it's a dataframe class:\n\n``` python\ndf = pd.DataFrame({'a':range(1000000), 'b':range(1000000)})\n\n# I'm using append as I will be building the data store iteratively with pd.read_csv\n# It doesn't make sense to use append for this toy example\n\n# this fails:\nstore.append('a', df['a'])\nException: cannot properly create the storer for: ...\n\n# while this succeeds.  Note the double brackets:\nstore.append('a', df[['a']])\nstore.append('b', df[['b']])\n\n\n# interesting that this:\ntmp = pd.concat([store['a'], store['b']])\n\n# is much faster than this:\n tmp = store.select_as_multiple(['a','b'], columns=['a','b'])\n```\n\nI will test the performance of storing each column individually like this tonight.  This is probably how I will end up using pandas and HDFStore.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16175917",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3307#issuecomment-16175917",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3307",
    "id": 16175917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTc1OTE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-10T14:03:39Z",
    "updated_at": "2013-04-10T14:03:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "`select_as_multiple` will be much faster if you are using a query \n\nif first does the query then just selects those rows from all tables; your example is actually too simple to catch this, and the select_as_multiple is doing 3 queries to your 2\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34610471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3307#issuecomment-34610471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3307",
    "id": 34610471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjEwNDcx",
    "user": {
      "login": "wabu",
      "id": 39164,
      "node_id": "MDQ6VXNlcjM5MTY0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/39164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wabu",
      "html_url": "https://github.com/wabu",
      "followers_url": "https://api.github.com/users/wabu/followers",
      "following_url": "https://api.github.com/users/wabu/following{/other_user}",
      "gists_url": "https://api.github.com/users/wabu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wabu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wabu/subscriptions",
      "organizations_url": "https://api.github.com/users/wabu/orgs",
      "repos_url": "https://api.github.com/users/wabu/repos",
      "events_url": "https://api.github.com/users/wabu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wabu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T08:54:55Z",
    "updated_at": "2014-02-10T08:54:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "The behaviour is consistent with `select`, so it should either raise for both (which will be an api change) or just leave it as is. \n\n```\nIn [4]: data = pd.DataFrame({'a': np.random.rand(10), 'b': np.random.rand(10)})\nIn [5]: store.append_to_multiple({'a': ['a'], 'b': ['b']}, data, 'a')\n\nIn [6]: store.select_as_multiple(['a','b'], columns=['c'])\nOut[6]: Empty DataFrame\nColumns: []\nIndex: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nIn [7]: store.select('a', columns=['c'])\nOut[7]: Empty DataFrame\nColumns: []\nIndex: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34627072",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3307#issuecomment-34627072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3307",
    "id": 34627072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjI3MDcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-10T12:43:51Z",
    "updated_at": "2014-02-10T12:43:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok if u try an invalid query (eg use a column that does not exist or is not a data_column) it will raise\nI am thinking that this should too though that limits flexibility a bit as u have to \"know\" a priori what columns are in the table\n\nthis change is a bit tricky - u have to put it in process_axes because columns can be passed as a kw or in an expression (eg \"columns=['C']\")\n\n@wabu if u would like to take a stab to for it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403163098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3307#issuecomment-403163098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3307",
    "id": 403163098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE2MzA5OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:37:15Z",
    "updated_at": "2018-07-06T22:37:15Z",
    "author_association": "MEMBER",
    "body": "Closing due to age and deprecation of `store` as a method"
  }
]
