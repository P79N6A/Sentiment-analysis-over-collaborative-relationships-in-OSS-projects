[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/270160339",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14968#issuecomment-270160339",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14968",
    "id": 270160339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDE2MDMzOQ==",
    "user": {
      "login": "m-charlton",
      "id": 7031487,
      "node_id": "MDQ6VXNlcjcwMzE0ODc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7031487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-charlton",
      "html_url": "https://github.com/m-charlton",
      "followers_url": "https://api.github.com/users/m-charlton/followers",
      "following_url": "https://api.github.com/users/m-charlton/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-charlton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-charlton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-charlton/subscriptions",
      "organizations_url": "https://api.github.com/users/m-charlton/orgs",
      "repos_url": "https://api.github.com/users/m-charlton/repos",
      "events_url": "https://api.github.com/users/m-charlton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-charlton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-03T16:46:00Z",
    "updated_at": "2017-01-03T16:46:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll start on this tomorrow (Wednesday 4th Jan 2017)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/270365595",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14968#issuecomment-270365595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14968",
    "id": 270365595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDM2NTU5NQ==",
    "user": {
      "login": "m-charlton",
      "id": 7031487,
      "node_id": "MDQ6VXNlcjcwMzE0ODc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7031487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-charlton",
      "html_url": "https://github.com/m-charlton",
      "followers_url": "https://api.github.com/users/m-charlton/followers",
      "following_url": "https://api.github.com/users/m-charlton/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-charlton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-charlton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-charlton/subscriptions",
      "organizations_url": "https://api.github.com/users/m-charlton/orgs",
      "repos_url": "https://api.github.com/users/m-charlton/repos",
      "events_url": "https://api.github.com/users/m-charlton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-charlton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-04T13:03:25Z",
    "updated_at": "2017-01-04T13:03:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks as if the value of `raise_on_error` has no effect on the raising of\r\nexceptions for the `where` method.\r\n\r\nAccording to the docstring for `DataFrame.where`\r\n\r\n```\r\nraise_on_error : boolean, default True\r\n     Whether to raise on invalid data types (e.g. trying to where on strings)\r\n```\r\n\r\nThen attempting to compare against a string for a DataFrame of say integers, \r\nwill result in an exception, this is the case.\r\n\r\nFor example in the following, `raise_on_error` is set to 'False'. As I'm \r\nattempting to compare the string `a` with integer data then I get a 'TypeError'\r\nexception, but the exception should be suppressed and the DataFrame should be \r\nreturned as it is in `DataFrame.astype()`\r\n\r\n```\r\n>>> import pandas as pd\r\n>>> df = pd.DataFrame(data=[1,2,3])\r\n>>> df.where(df == 'a', raise_on_error=False)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \".../pandas/core/ops.py\", line 1290, in f\r\n    res = self._combine_const(other, func, raise_on_error=False)\r\n  File \".../pandas/core/frame.py\", line 3634, in _combine_const\r\n    raise_on_error=raise_on_error)\r\n  File \".../pandas/core/internals.py\", line 3162, in eval\r\n    return self.apply('eval', **kwargs)\r\n  File \".../pandas/core/internals.py\", line 3056, in apply\r\n    applied = getattr(b, f)(**kwargs)\r\n  File \".../pandas/core/internals.py\", line 1181, in eval\r\n    repr(other))\r\nTypeError: Could not compare ['a'] with block values\r\n```\r\n\r\nIn File `.../pandas/core/ops.py`. The 'raise_on_error' kwarg is always set to \r\n'False' [L1290]:\r\n\r\n```\r\n1288             # straight boolean comparisions we want to allow all columns\r\n1289             # (regardless of dtype to pass thru) See #4537 for discussion.\r\n1290             res = self._combine_const(other, func, raise_on_error=False)\r\n1291             return res.fillna(True).astype(bool)\r\n```\r\n\r\nThis is an aside, the problem seems to be in `pandas/core/internals.py`\r\n\r\n```\r\n1157         # get the result\r\n1158         try:\r\n1159             with np.errstate(all='ignore'):\r\n1160                 result = get_result(other)\r\n1161 \r\n1162         # if we have an invalid shape/broadcast error\r\n1163         # GH4576, so raise instead of allowing to pass through\r\n1164         except ValueError as detail:\r\n1165             raise\r\n1166         except Exception as detail:\r\n1167             result = handle_error()\r\n1168 \r\n1169         # technically a broadcast error in numpy can 'work' by returning a\r\n1170         # boolean False\r\n1171         if not isinstance(result, np.ndarray):\r\n1172             if not isinstance(result, np.ndarray):\r\n1173 \r\n1174                 # differentiate between an invalid ndarray-ndarray comparison\r\n1175                 # and an invalid type comparison\r\n1176                 if isinstance(values, np.ndarray) and is_list_like(other):\r\n1177                     raise ValueError('Invalid broadcasting comparison [%s] '\r\n1178                                      'with block values' % repr(other))\r\n1179 \r\n1180                 raise TypeError('Could not compare [%s] with block values' %\r\n1181                                 repr(other))\r\n```\r\n\r\nThe 'TypeError' is raised at [L1181], but the 'handle_error()' [L1167] is where \r\nthe `raise_on_error` argument is evaluated.\r\n\r\nSo in this particular case the 'TypeError' exception will always be raised.\r\n\r\nAlso the expressions on [L1171] & [L1172] are the same which looks like a \r\nmistake.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288721046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14968#issuecomment-288721046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14968",
    "id": 288721046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODcyMTA0Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-23T13:36:04Z",
    "updated_at": "2017-03-23T13:36:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@m-charlton PR for this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/302888529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14968#issuecomment-302888529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14968",
    "id": 302888529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjg4ODUyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-20T17:53:42Z",
    "updated_at": "2017-05-20T17:53:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "PR for this?"
  }
]
