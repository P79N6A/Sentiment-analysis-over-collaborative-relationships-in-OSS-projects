[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31076660",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-31076660",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 31076660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc2NjYw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T01:29:50Z",
    "updated_at": "2013-12-22T01:29:50Z",
    "author_association": "NONE",
    "body": "cc @takluyver\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31077002",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-31077002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 31077002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc3MDAy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T01:57:04Z",
    "updated_at": "2013-12-22T01:57:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like this - should we prefix the classes `pandas-row-heading` or `pandas-row0` to avoid name collisions?\n\nAlso I'm assuming the default names will be part of the standard pandas repr?\n\nFinally are you planning to allow users to get at the underlying Jinja rendering object so they can add in filters to use with their template? That might be overkill though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31077381",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-31077381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 31077381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc3Mzgx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T02:30:21Z",
    "updated_at": "2013-12-22T02:31:01Z",
    "author_association": "NONE",
    "body": "will do on the class name namespacing.\n\nNot sure yet whether this API should live on the dataframe object or in it's own namespace.\nPerhaps `Stylist(df).zebra().highlight_col()` would allows us to add more methods without\nbloating the already obese dataframe method list.\n\nNot sure what you mean by rendering object, but generally speaking sure, if the user wants\nto step in between jinja and pandas he should be able to.\n\nAlso, still pondering whether this belongs in pandas or it's own package.\nIt turned out much smaller then I expected, so now I can't decide if it's feature\ncreep (I thought it would be) or a little bit that goes a long way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31078161",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-31078161",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 31078161,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDc4MTYx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T03:43:05Z",
    "updated_at": "2013-12-22T03:43:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can register template functions with Jinja. I thought you were letting people use their own templates? I'm not clear.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31084642",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-31084642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 31084642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg0NjQy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T11:51:36Z",
    "updated_at": "2013-12-22T16:24:02Z",
    "author_association": "NONE",
    "body": "Yes, you'll be able to pass in an arbitrary template at construction time. But that means you may\nlose the comforts of the styling functions included. Depends on the template.\n\nIn the previous attempt, I looked at using mako which supports arbitrary logic in templates, \nbut then the templates became messy.\n\nThe major use case of HTML/css output with conditional formatting is well-covered and with\na very small foortprint so I'm pleased with how that turned out.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31088402",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-31088402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 31088402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDg4NDAy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-22T14:32:23Z",
    "updated_at": "2013-12-22T14:32:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, makes sense - the solution definitely looks good (and I think IPython\nnotebook already requires jinja, so it's not even that difficult of a dep).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31130989",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-31130989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 31130989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTMwOTg5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-23T17:11:48Z",
    "updated_at": "2013-12-24T02:00:42Z",
    "author_association": "NONE",
    "body": "Started arranging code into place, added nb of example usage for dotted API.\nRenamed class names and hid them behind constants.\nAdded basic templates for latex and markdown (just checking) output. works.\n\n|  |  | **C_l1_g0** | **C_l1_g1** |\n| --- | --- | --- | --- |\n| **R_l0_g0** | **R_l1_g0** | R0C0 | R0C1 |\n| **R_l0_g1** | **R_l1_g1** | R1C0 | R1C1 |\n| **R_l0_g2** | **R_l1_g2** | R2C0 | R2C1 |\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31154262",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-31154262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 31154262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMTU0MjYy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-24T01:45:47Z",
    "updated_at": "2013-12-24T01:45:47Z",
    "author_association": "MEMBER",
    "body": "looking forward to this :clap: \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34424756",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-34424756",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 34424756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI0NzU2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-07T10:31:42Z",
    "updated_at": "2014-02-07T10:31:42Z",
    "author_association": "NONE",
    "body": "Another aborted attempt, sorry. Don't know when if ever I'll finish this,\nclosing rather then letting it rot on the vine.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35019903",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-35019903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 35019903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDE5OTAz",
    "user": {
      "login": "edoson",
      "id": 4670923,
      "node_id": "MDQ6VXNlcjQ2NzA5MjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4670923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edoson",
      "html_url": "https://github.com/edoson",
      "followers_url": "https://api.github.com/users/edoson/followers",
      "following_url": "https://api.github.com/users/edoson/following{/other_user}",
      "gists_url": "https://api.github.com/users/edoson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edoson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edoson/subscriptions",
      "organizations_url": "https://api.github.com/users/edoson/orgs",
      "repos_url": "https://api.github.com/users/edoson/repos",
      "events_url": "https://api.github.com/users/edoson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edoson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T20:06:58Z",
    "updated_at": "2014-02-13T20:06:58Z",
    "author_association": "NONE",
    "body": "I have a naive Q.. When I write an HTML table in a markup cell in the notebook, it is being printed just the same as a df.head() table. That made me think that the output of an df.head() operation is an HTML code which is govern by IPython default table styling (perhaps in a CSS file). I thought that in order to change the way df.head() is rendering, all I need is to hack into the IPython CSS file and change the appropriate styling code. Can you explain where I'm wrong? Im curious to know what really happening behind the scenes.. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35049962",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-35049962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 35049962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ5OTYy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T02:26:17Z",
    "updated_at": "2014-02-14T02:26:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@edoson I don't think you are wrong. ;-)\n\nWhen you do `df.head()`, pandas actually returns another data frame, with just the first few rows of your original. Then, if that's the last line of the cell, `sys.displayhook()` gets called on it. In the plain Python shell, that would calculate and display its repr. In IPython, it also calculates an HTML repr (you can do other formats like PNG or SVG, but they don't make much sense for a table). If there's an HTML repr, then IPython adds that to the page instead of the plain text repr, so you see a table. It's just part of the DOM, so any CSS rules that match that HTML will affect it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35051833",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-35051833",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 35051833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUxODMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T03:12:01Z",
    "updated_at": "2014-02-14T03:12:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@edoson \n\nand DataFrame has a `_repr_html`, see here: http://nbviewer.ipython.org/github/ipython/ipython/blob/master/examples/notebooks/Custom%20Display%20Logic.ipynb\n\nso a way of doing this would be to override that display method and do exactly what you want, e.g.\n\n```\ndef _repr_html(self):\n    # return an awesome html repr here\n\nDataFrame._repr_html = _repr_html\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35063855",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-35063855",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 35063855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDYzODU1",
    "user": {
      "login": "edoson",
      "id": 4670923,
      "node_id": "MDQ6VXNlcjQ2NzA5MjM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4670923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/edoson",
      "html_url": "https://github.com/edoson",
      "followers_url": "https://api.github.com/users/edoson/followers",
      "following_url": "https://api.github.com/users/edoson/following{/other_user}",
      "gists_url": "https://api.github.com/users/edoson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/edoson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/edoson/subscriptions",
      "organizations_url": "https://api.github.com/users/edoson/orgs",
      "repos_url": "https://api.github.com/users/edoson/repos",
      "events_url": "https://api.github.com/users/edoson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/edoson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T08:08:51Z",
    "updated_at": "2014-02-14T08:08:51Z",
    "author_association": "NONE",
    "body": "@takluyver  so to change the appearance of table in IPython notebook, all one needs to do is to override the tables styling of IPython, right? Problem is I dont know where IPython tables styling config is (is it CSS? is it hardcoded?) I have a CSS file with nice styling, I have an HTML file with demo code, but I dont know how to tell IPython to use that style rules. \n\n@jreback Is this an alternative why to using CSS's? because if the _repr_html returns an html code of a table, and IPython renders it by its own styling rules, we are in the same place. Or maybe I code return the HTML code I already have which uses nice table styles and have it refer to my custom.css file? Need some more guidance.. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35079521",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-35079521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 35079521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDc5NTIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T12:33:06Z",
    "updated_at": "2014-02-14T12:33:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@edoson I am not sure how ipython renders after the HTML is produced. You can pass `classes` to `to_html` but not CSS, so not sure how this woudld interact.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35568962",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5763#issuecomment-35568962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5763",
    "id": 35568962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NTY4OTYy",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-20T00:23:40Z",
    "updated_at": "2014-02-20T00:23:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "If we have any styling of tables, it's in CSS. You can add CSS to the page by displaying HTML:\n\n```\nfrom IPython.display import HTML, display\ndisplay(HTML('<style type=\"text/css\">' + style_rules + '</style>'))\n```\n"
  }
]
