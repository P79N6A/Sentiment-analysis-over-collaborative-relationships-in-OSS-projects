[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149190877",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149190877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149190877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTE5MDg3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-19T11:40:02Z",
    "updated_at": "2015-10-19T11:40:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jorisvandenbossche @sinhrks @JanSchulz @jakevdp @shoyer \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149219471",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149219471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149219471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTIxOTQ3MQ==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-19T13:53:08Z",
    "updated_at": "2015-10-19T13:55:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "My argument was always that Categorical should not gain any more public methods, as I think the \"normal\" case for working with lickert scales and such things is IMO satisfied. \n\nReading #10989 I think this is something which can't be solved without problems: converting to a object index will loose the order/... but keeping the categorical index but appending a value will also change the underlying data type: if I work with the underlying \"data\" (aka the `Categorical()`) I get wrong results because the the added `All`.\n\nGiven this two cases, I would opt for the first one, as it is similar to what happens the integer ones:\n\n```\n>>> data.pivot_table('x', 'y', 'z').index\nInt64Index([0, 1], dtype='int64', name='y')\n>>> data.pivot_table('x', 'y', 'z', margins=True).index\nIndex([0, 1, 'All'], dtype='object', name='y')\n```\n\nA third solution would be to add a check that margin does not work with categorical.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149222046",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149222046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149222046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTIyMjA0Ng==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-19T14:03:20Z",
    "updated_at": "2015-10-19T14:03:20Z",
    "author_association": "MEMBER",
    "body": "I think adding new category is useful, but have no good idea how `ordered` should work. Following shows the current branch does.\n\nAppending ordered=True and orderd=True results in ordered=True, this looks OK.\n\n```\nc1 = pd.CategoricalIndex(list('abc'), ordered=True)\nc2 = pd.CategoricalIndex(list('cde'), ordered=True)\nc1.append(c2)\n# CategoricalIndex([u'a', u'b', u'c', u'c', u'd', u'e'], categories=[u'a', u'b', u'c', u'd', u'e'], ordered=True, dtype='category')\n```\n\nHowever, there can be a case which category orders conflict. This case should be orderd=False?\n\n```\nc1 = pd.CategoricalIndex(list('abc'), ordered=True)\nc2 = pd.CategoricalIndex(list('e'), categories=list('ecba'), ordered=True)\nc1.append(c2)\n# CategoricalIndex([u'a', u'b', u'c', u'e'], categories=[u'a', u'b', u'c', u'e'], ordered=True, dtype='category')\n```\n\nAppending ordered=True and orderd=False results in ordered=True. I think this should be ordered=False because we can't know second categories order.\n\n```\nc1 = pd.CategoricalIndex(list('abc'), ordered=True)\nc2 = pd.CategoricalIndex(list('cde'), ordered=False)\nc1.append(c2)\n# CategoricalIndex([u'a', u'b', u'c', u'c', u'd', u'e'], categories=[u'a', u'b', u'c', u'd', u'e'], ordered=True, dtype='category')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149228914",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149228914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149228914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTIyODkxNA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-19T14:23:57Z",
    "updated_at": "2015-10-19T14:25:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think about each instance of a `Category` as the same as `int` or `float`: each defines a space of valid values. So `Categorical(..., categories=[1,2,3])` is as different to `Categorical(..., categories=[1,2,3,4])` as `int` is to `float`: int defines a range of valid values that include only all values form `-maxint...maxint` and it can't take things like 0.5. And it's ordered... So not unlike `Category`.\n\n```\n>>> a = pd.Index([1,2,3])\n>>> b = pd.Index([1.,2.,3.])\n>>> a.append(b)\nFloat64Index([1.0, 2.0, 3.0, 1.0, 2.0, 3.0], dtype='float64')\n>>> c = pd.Index(list(\"abc\"))\n>>> a.append(c)\nIndex([1, 2, 3, 'a', 'b', 'c'], dtype='object')\n```\n\n-> It's converted to an index type, which can take both data types. \n\nIMO one could argue that appending two categoricals should \"upcast\" to object, as that's at least deterministic: `categories` are labels for groups, so it shouldn't matter what I label them (e.g. what should happend in the above case if I relabel a Categorical which was `[1,2,3]` to `[\"Group 1\", \"Group 2\", \"Group 3\"]`). And that it's not clear what should happen to `order` is another indicator that it's best to do a upcast to float like it happened in the int+string case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149350818",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149350818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149350818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM1MDgxOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-19T21:20:15Z",
    "updated_at": "2015-10-19T21:20:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz not gaining any methods here at all. It doesn't make sense to `.append/.insert` directly on a `Categorical`. We are talking about a `CategoricalIndex` which has these operations naturally and work for values IN the categories already. The CI are actually _more_ flexible by definition. These methods should work. \n\nNow upcasting to _object_ is a quite reasonable argument, though we currently allow index preservation when the new values ARE in the categories (IOW its still a CI). Further pandas in general just works, rarely raising these types of conversion errors (which is why this should do something logical and deterministic).\n\nSo we need to allow index insert/append otherwise CI are crippled compared to other indexes. Since we are creating _new_ indexes this is simply like `.add_categories` then insert.\n\nTo make this somewhat simple we need a convention.\n- values in the categories -> CategoricalIndex, order is preserved\n- not in categories\n  - a) convert to `object` \n  - b) add to categories, insert preserves order, append sets `ordered=False`\n  - c) add to categories, insert & append preserve order\n  - d) like b) but convert to `object` either index is ordered\n\nso appears @JanSchulz is for a)\nI proposed b)\n\nanyone else?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149484472",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149484472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149484472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTQ4NDQ3Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T09:01:56Z",
    "updated_at": "2015-10-20T09:01:56Z",
    "author_association": "MEMBER",
    "body": "@jreback And there is also option e) raise an error (the current situation)\n\nI am following @JanSchulz that we should not just change the categories of an object by appending or inserting. The categories are a fundamental part of the dtype, and IMHO should not be changed lightly by some operation (unless it is explicitely doing that like `add_categories`)\n\nFrom that position, I would be for either convert to object or either raise an error (and 'fix the symptoms' in places where this leads to errors (@jakevdp 's approach for the pivot_table). \nGiven that the 'fix the symptoms' solution will also generally be to convert it to object in these special cases, the option to generally convert to object dtype seems more consistent (as well more consistent with eg ints and strings). However, the error message can also be useful in some cases to not unexpectedly end up with objects and loose the categories information.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149551792",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149551792",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149551792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTU1MTc5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T12:36:58Z",
    "updated_at": "2015-10-20T12:36:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tried to make these auto-coerce to `object` when presented with a value not in the categories, but it doesn't quite work (e.g. makes indexing 'work' _sometimes_ which is bad).\n\nok, so reverted to use a modified version of @jakevdp soln; had an embedded bug which is fixed as well.\n\nthanks for the commentary @JanSchulz @jorisvandenbossche \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149693185",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149693185",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149693185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTY5MzE4NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T20:31:00Z",
    "updated_at": "2015-10-20T20:31:00Z",
    "author_association": "MEMBER",
    "body": "@jreback What do you mean xith \"doesn't quite work\"?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149695425",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149695425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149695425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTY5NTQyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T20:40:41Z",
    "updated_at": "2015-10-20T20:40:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh, I tried the strategy of having `.insert/.append` on a `CategoricalIndex` convert to `Index` if the values are not in the categories. But I couldn't get it to work properly with nice semantics, IOW broke stuff in indexing)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149697107",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11371#issuecomment-149697107",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11371",
    "id": 149697107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTY5NzEwNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T20:47:02Z",
    "updated_at": "2015-10-20T20:47:02Z",
    "author_association": "MEMBER",
    "body": "ok!\n"
  }
]
