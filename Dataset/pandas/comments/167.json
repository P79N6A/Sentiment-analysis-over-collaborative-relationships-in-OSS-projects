[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3739865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/167#issuecomment-3739865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/167",
    "id": 3739865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzk4NjU=",
    "user": {
      "login": "EmlynC",
      "id": 254250,
      "node_id": "MDQ6VXNlcjI1NDI1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/254250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EmlynC",
      "html_url": "https://github.com/EmlynC",
      "followers_url": "https://api.github.com/users/EmlynC/followers",
      "following_url": "https://api.github.com/users/EmlynC/following{/other_user}",
      "gists_url": "https://api.github.com/users/EmlynC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EmlynC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EmlynC/subscriptions",
      "organizations_url": "https://api.github.com/users/EmlynC/orgs",
      "repos_url": "https://api.github.com/users/EmlynC/repos",
      "events_url": "https://api.github.com/users/EmlynC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EmlynC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-01-31T14:26:43Z",
    "updated_at": "2012-01-31T14:27:11Z",
    "author_association": "NONE",
    "body": "asciitable works really well with pandas already. I've been using asciitable to format the dataframes out to Latex tables and it's already pretty terse because you can use the <tt>to_records</tt> method on the <tt>DataFrame</tt> object. \n\n<pre>\nasciitable.write(dataframe.to_record(), \"table.dat\", Writer=asciitable.Latex, latexdict=latexdict)\n</pre>\n\n\nWe could always bundle a dictionary of sane defaults, perhaps prepopulate the caption, the title etc based on metadata from the DataFrame object. Perhaps hide the need to call <tt>to_record()</tt> by subclass it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3785137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/167#issuecomment-3785137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/167",
    "id": 3785137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODUxMzc=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-02T19:59:56Z",
    "updated_at": "2012-02-02T19:59:56Z",
    "author_association": "MEMBER",
    "body": "Maybe we should create an xtable-lite inside pandas using asciitable (or simpletable in statsmodels) for easily outputting DataFrame to LaTeX. If you wanted to create some fully worked examples of this I'd be happy to include them in the documentation (pull request would be best!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3795969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/167#issuecomment-3795969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/167",
    "id": 3795969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTU5Njk=",
    "user": {
      "login": "EmlynC",
      "id": 254250,
      "node_id": "MDQ6VXNlcjI1NDI1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/254250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EmlynC",
      "html_url": "https://github.com/EmlynC",
      "followers_url": "https://api.github.com/users/EmlynC/followers",
      "following_url": "https://api.github.com/users/EmlynC/following{/other_user}",
      "gists_url": "https://api.github.com/users/EmlynC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EmlynC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EmlynC/subscriptions",
      "organizations_url": "https://api.github.com/users/EmlynC/orgs",
      "repos_url": "https://api.github.com/users/EmlynC/repos",
      "events_url": "https://api.github.com/users/EmlynC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EmlynC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-03T12:29:07Z",
    "updated_at": "2012-02-03T12:42:08Z",
    "author_association": "NONE",
    "body": "<tt>... create some fully worked examples of this I'd be happy to include them in the documentation ... </tt>\nSure, I'll have a look at doing that when I've got a moment.\n\n<tt> ...  create an xtable-lite inside pandas using asciitable (or simpletable in statsmodels) ... </tt>\nReusing code from those packages is definitely the right way to go but if I may be so bold, I think we can go one step further and build a class that dispatches method to build any conceivable table structure.\n\nConsider a proposed <tt>write_to</tt> method.\n\n<code>dataframe.write_to('xls', options=default, filename=filepath)</code>\n\nUnderneath that we can use a dispatcher function to write the table out to any sensible binary table format such as XLS (using xlwt), XML formats such as XSLX (using openpyxl) and ODS (using pyODF or ezODF), Python objects such as numpy, array etc and of course the plaintext delimited variety (using asciitable or the numpy methods as a fallback). Once done, I reckon this interface would be cleaner than the current collection of methods you've made thus far such as <tt>to_records()</tt> and <tt>to_csv</tt>. Plus we can gracefully handle the dependency issues that this will inevitably raise by catching when a dependency isn't there and telling the user to try one of the fallback methods i.e. using numpy.\n\nThe impetus for suggesting this is because I'm kind of sitting on the code already because my clients in the Pharma industry always seem to want it in a bazillion formats and this is a common method I use in my programs. I'd be more than happy to do a 'pull' and work on integrating the code I have into the pandas code because I 'own' it and this is probably the best way I can contribute back to your library that I use <i>a lot</i>.\n\nSound like a plan capt'n?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3796017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/167#issuecomment-3796017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/167",
    "id": 3796017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTYwMTc=",
    "user": {
      "login": "EmlynC",
      "id": 254250,
      "node_id": "MDQ6VXNlcjI1NDI1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/254250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EmlynC",
      "html_url": "https://github.com/EmlynC",
      "followers_url": "https://api.github.com/users/EmlynC/followers",
      "following_url": "https://api.github.com/users/EmlynC/following{/other_user}",
      "gists_url": "https://api.github.com/users/EmlynC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EmlynC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EmlynC/subscriptions",
      "organizations_url": "https://api.github.com/users/EmlynC/orgs",
      "repos_url": "https://api.github.com/users/EmlynC/repos",
      "events_url": "https://api.github.com/users/EmlynC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EmlynC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-03T12:32:59Z",
    "updated_at": "2012-02-03T12:32:59Z",
    "author_association": "NONE",
    "body": "Sorry for the double post but I've just seen the other <a href='https://github.com/wesm/pandas/pull/735'>pull request (#735)</a> with regards to the excel parser. I'll check that code before I proceed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3813439",
    "html_url": "https://github.com/pandas-dev/pandas/issues/167#issuecomment-3813439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/167",
    "id": 3813439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTM0Mzk=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-04T21:20:16Z",
    "updated_at": "2012-02-04T21:20:16Z",
    "author_association": "MEMBER",
    "body": "I think it makes sense to build up a suite of IO adapters to all of the foreseeable formats. Then can decide on the question of the user API. Perhaps augmenting the `save` method is the way to go (which currently uses pickle, but will eventually use a custom binary format, whenever I can get around to doing that. Pull request away IMHO!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3819776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/167#issuecomment-3819776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/167",
    "id": 3819776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTk3NzY=",
    "user": {
      "login": "EmlynC",
      "id": 254250,
      "node_id": "MDQ6VXNlcjI1NDI1MA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/254250?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/EmlynC",
      "html_url": "https://github.com/EmlynC",
      "followers_url": "https://api.github.com/users/EmlynC/followers",
      "following_url": "https://api.github.com/users/EmlynC/following{/other_user}",
      "gists_url": "https://api.github.com/users/EmlynC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/EmlynC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/EmlynC/subscriptions",
      "organizations_url": "https://api.github.com/users/EmlynC/orgs",
      "repos_url": "https://api.github.com/users/EmlynC/repos",
      "events_url": "https://api.github.com/users/EmlynC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/EmlynC/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-05T19:08:58Z",
    "updated_at": "2012-02-05T19:08:58Z",
    "author_association": "NONE",
    "body": "Fair enough, a case of first things first - the specifics of the API comes after you have methods to populate the API with. I'll have a look at <tt>save also</tt>. I've got a fork now so I'll send a pull request when I've got something to show for it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44909925",
    "html_url": "https://github.com/pandas-dev/pandas/issues/167#issuecomment-44909925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/167",
    "id": 44909925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0OTA5OTI1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-03T01:13:17Z",
    "updated_at": "2014-06-03T01:13:17Z",
    "author_association": "MEMBER",
    "body": "superceded by #3190 \n"
  }
]
