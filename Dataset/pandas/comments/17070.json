[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317559371",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17070#issuecomment-317559371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17070",
    "id": 317559371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzU1OTM3MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T21:23:41Z",
    "updated_at": "2017-07-24T21:23:49Z",
    "author_association": "MEMBER",
    "body": "cc @jreback "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317588582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17070#issuecomment-317588582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17070",
    "id": 317588582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzU4ODU4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T23:57:44Z",
    "updated_at": "2017-07-24T23:57:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "you are trying to do something a bit unnatural here.\r\n\r\nThe point of a MI is to work with the data in long-form.\r\n```\r\nIn [11]: df\r\nOut[11]: \r\n  a0    a1   \r\n  b0 b1 b0 b1\r\n0  1  2  3  4\r\n1  5  6  7  8\r\n\r\nIn [12]: df2 = df.stack(0)\r\n\r\nIn [13]: df2\r\nOut[13]: \r\n      b0  b1\r\n0 a0   1   2\r\n  a1   3   4\r\n1 a0   5   6\r\n  a1   7   8\r\n\r\n\r\nIn [14]: df2['b0'] * df2['b1']\r\nOut[14]: \r\n0  a0     2\r\n   a1    12\r\n1  a0    30\r\n   a1    56\r\ndtype: int64\r\n\r\n```\r\n\r\nyou can also do this\r\n\r\n```\r\nIn [18]: df2 = df.swaplevel(0, 1, axis=1).sort_index(axis=1)\r\n\r\nIn [19]: df2\r\nOut[19]: \r\n  b0    b1   \r\n  a0 a1 a0 a1\r\n0  1  3  2  4\r\n1  5  7  6  8\r\n\r\nIn [20]: df2['b0'] * df2['b1']\r\nOut[20]: \r\n   a0  a1\r\n0   2  12\r\n1  30  56\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/318471531",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17070#issuecomment-318471531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17070",
    "id": 318471531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODQ3MTUzMQ==",
    "user": {
      "login": "joseortiz3",
      "id": 18585219,
      "node_id": "MDQ6VXNlcjE4NTg1MjE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18585219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joseortiz3",
      "html_url": "https://github.com/joseortiz3",
      "followers_url": "https://api.github.com/users/joseortiz3/followers",
      "following_url": "https://api.github.com/users/joseortiz3/following{/other_user}",
      "gists_url": "https://api.github.com/users/joseortiz3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joseortiz3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joseortiz3/subscriptions",
      "organizations_url": "https://api.github.com/users/joseortiz3/orgs",
      "repos_url": "https://api.github.com/users/joseortiz3/repos",
      "events_url": "https://api.github.com/users/joseortiz3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joseortiz3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T20:06:10Z",
    "updated_at": "2017-08-10T22:33:45Z",
    "author_association": "NONE",
    "body": "Isn't it sort of strange behavior that the top level of an axis is treated so differently from the sub-levels? That slicing by the top level completely removes that level from the result's index, but slicing by a sub-level does not (thus leading to the errors previously mentioned)?\r\n\r\nFrom the hierarchical index documentation, it was not made clear that the top level behaves differently than the sub-levels, and that slicing should really only be done on the top level. Nor does it state that \"long form\" will better-support arithmetic operations.\r\n\r\nEdit: The realization that \"levels are not made equal\" has completely unlocked pandas for me. \"Axes are not made equal\" as well. For instance, a lot of Panel functions treat the \"item\" axes uniquely. Same with \"columns\" of dataframes. Same with \"top level\" of multi-indices. I now feel the power of pandas, but it took a lot of personal exploration to figure this out; the documentation did not really convey this (from what I've read)."
  }
]
