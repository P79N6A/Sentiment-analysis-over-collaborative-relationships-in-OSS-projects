[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/150311688",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11414#issuecomment-150311688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11414",
    "id": 150311688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDMxMTY4OA==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T18:19:48Z",
    "updated_at": "2015-10-22T18:19:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may be to do with NaN not being equal to itself. But it works with `s1`, and you can still use it as a python dictionary key (I'm not sure how that works actually?), so it must be that the path taken depends on the `dtype`.\n\n``` python\nIn [164]: pd.np.nan==pd.np.nan\nOut[164]: False\n\nIn [170]: s1_dic[pd.np.nan]\nOut[170]: nan\n\nIn [171]: s2_dic[pd.np.nan]\nOut[171]: nan\n```\n\nThis is a separate point from the above, but there may be a much easier way of doing what you're trying to do. What's the wider goal? \n\nFYI this is a corrected version of your code:\n\n``` python\ns1 = pd.DataFrame([np.nan, '1', '2', '3', '4', '5'], columns=['col1'])\ns2 = pd.DataFrame([np.nan, 1, 2, 3, 4, 5], columns=['col1'])\ns1_dic = {np.nan: np.nan, '1': 1, '2':2, '3':3, '4':3, '5':3}\ns2_dic = {np.nan: np.nan, 1: 1, 2:2, 3:3, 4:3, 5:3}\ns1['col1'].apply(lambda x: s1_dic[x])\ns2['col1'].apply(lambda x: s2_dic[x])\n```\n\nAnd not sure what the principles that the maintainers use, but IMHO this sort of question may be better on SO.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/150320694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11414#issuecomment-150320694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11414",
    "id": 150320694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDMyMDY5NA==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T18:49:36Z",
    "updated_at": "2015-10-22T18:49:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would caution against what you are doing, since even if that worked, something like this could happen.\n\n```\nIn [1]: {1:1, 2:2, 3:3}[1.0000000000000001]\nOut[1]: 1\n```\n\n@maximilianr  in a simple `dict`, it is in general OK that `nan` doesn't equal itself, because the `is` operator has precedence.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/150321312",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11414#issuecomment-150321312",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11414",
    "id": 150321312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDMyMTMxMg==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T18:52:16Z",
    "updated_at": "2015-10-22T18:52:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kawochen Ah great, thanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/150322923",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11414#issuecomment-150322923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11414",
    "id": 150322923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDMyMjkyMw==",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T18:58:32Z",
    "updated_at": "2015-10-22T18:58:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suggested @brianhuey post here. I think this is a bug/edge case in `map_infer` actually, that seems to be where the error comes from. It works with object dtype:\n\n```\nIn [11]: d1 = {1: 1, np.nan: np.nan}\n\nIn [12]: pd.lib.map_infer(np.array([np.nan, 1], dtype='object'), lambda x: d1[x], True)\nOut[12]: array([ nan,   1.])\n\nIn [13]: pd.lib.map_infer(np.array([np.nan, 1]), lambda x: d1[x], True)---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\n<ipython-input-13-d8d2e1f5f73a> in <module>()\n----> 1 pd.lib.map_infer(np.array([np.nan, 1]), lambda x: d1[x], True)\n\npandas/src/inference.pyx in pandas.lib.map_infer (pandas/lib.c:58435)()\n\n<ipython-input-154-d8d2e1f5f73a> in <lambda>(x)\n----> 1 pd.lib.map_infer(np.array([np.nan, 1]), lambda x: d1[x], True)\n\nKeyError: nan\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/150325636",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11414#issuecomment-150325636",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11414",
    "id": 150325636,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDMyNTYzNg==",
    "user": {
      "login": "kawochen",
      "id": 10709573,
      "node_id": "MDQ6VXNlcjEwNzA5NTcz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/10709573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kawochen",
      "html_url": "https://github.com/kawochen",
      "followers_url": "https://api.github.com/users/kawochen/followers",
      "following_url": "https://api.github.com/users/kawochen/following{/other_user}",
      "gists_url": "https://api.github.com/users/kawochen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kawochen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kawochen/subscriptions",
      "organizations_url": "https://api.github.com/users/kawochen/orgs",
      "repos_url": "https://api.github.com/users/kawochen/repos",
      "events_url": "https://api.github.com/users/kawochen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kawochen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T19:09:49Z",
    "updated_at": "2015-10-22T19:09:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd  then you have the answer right there already! `np.float64(np.nan)` is not a singleton, doesn't equal `np.float64(np.nan)`, is not `np.nan` and doesn't equal `np.nan`; in an object array we have the `np.nan` that is of type `float` in it \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435889768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11414#issuecomment-435889768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11414",
    "id": 435889768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTg4OTc2OA==",
    "user": {
      "login": "ron819",
      "id": 40163787,
      "node_id": "MDQ6VXNlcjQwMTYzNzg3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/40163787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ron819",
      "html_url": "https://github.com/ron819",
      "followers_url": "https://api.github.com/users/ron819/followers",
      "following_url": "https://api.github.com/users/ron819/following{/other_user}",
      "gists_url": "https://api.github.com/users/ron819/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ron819/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ron819/subscriptions",
      "organizations_url": "https://api.github.com/users/ron819/orgs",
      "repos_url": "https://api.github.com/users/ron819/repos",
      "events_url": "https://api.github.com/users/ron819/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ron819/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-05T14:14:23Z",
    "updated_at": "2018-11-05T14:14:23Z",
    "author_association": "NONE",
    "body": "is this still an issue?"
  }
]
