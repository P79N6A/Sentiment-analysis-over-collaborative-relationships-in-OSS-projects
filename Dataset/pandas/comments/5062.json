[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25406889",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25406889",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25406889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDA2ODg5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T21:14:09Z",
    "updated_at": "2013-09-30T21:14:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz R has an argument to many functions called `na.rm` which, if True, skips `NaN`. We could add that to apply and applymap.  It definitely can be confusing to try to do that.  In the past, I've used a decorator like this to handle the issue:\n\n```\ndef skipna(f):\n    def wrapper(arg):\n        if isinstance(arg, float) and isnull(arg):\n             return arg\n        else:\n             return f(arg)\n   return wrapper\n```\n\nAs an aside, in 0.13, Series now has an extract method which can take a regex and handle that easily:\n\n``` python\n>>> ser = citations[1655:1660][\"names\"] # assuming this is a DataFrame that returns a Series here\n>>> new = ser.str.extract('(?P<first>.*);(?P<second>.*)')\n>>> new\n\nfirst second\na       b\nNaN NaN\nC      D\n```\n\n(I think that should work, don't have time to check right now)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25410312",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25410312",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25410312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDEwMzEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-30T22:01:40Z",
    "updated_at": "2013-09-30T22:01:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can also do it like this\n\n```\n\nIn [2]: df = DataFrame(dict(names = ['A;B',np.nan,'C;D','E;F','G;H']))\n\nIn [3]: df\nOut[3]: \n  names\n0   A;B\n1   NaN\n2   C;D\n3   E;F\n4   G;H\n\nIn [4]: df['names'].str.split(';')\nOut[4]: \n0    [A, B]\n1       NaN\n2    [C, D]\n3    [E, F]\n4    [G, H]\nName: names, dtype: object\n\nIn [5]: df['names'].str.split(';').apply(Series)\nOut[5]: \n     0    1\n0    A    B\n1  NaN  NaN\n2    C    D\n3    E    F\n4    G    H\n\n```\n\nor a one-hot encoding example\n\n```\nIn [17]: concat([ Series(1,index=s) for s in  df['names'].str.split(';') if s == s ],axis=1).fillna(0)\nOut[17]: \n   0  1  2  3\nA  1  0  0  0\nB  1  0  0  0\nC  0  1  0  0\nD  0  1  0  0\nE  0  0  1  0\nF  0  0  1  0\nG  0  0  0  1\nH  0  0  0  1\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25420587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25420587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25420587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDIwNTg3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T01:46:57Z",
    "updated_at": "2013-10-01T01:46:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback what do you think? Worth adding something like skipna=True as a kwarg for apply map and apply? I think it could be useful, especially for sparse (where you could special case it). \n\nI'm thinking something like creating empty ndarray with dtype object, then only run function over non-nan values, then set rest to nan again. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25420686",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25420686",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25420686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDIwNjg2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T01:49:54Z",
    "updated_at": "2013-10-01T01:49:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "not a bad idea\nlets do in 0.14\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25421368",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25421368",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25421368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDIxMzY4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T02:11:02Z",
    "updated_at": "2013-10-01T02:11:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz how do you feel about having a skipna keyword argument? Would that be clear and useful?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25427627",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25427627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25427627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDI3NjI3",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T06:15:02Z",
    "updated_at": "2014-02-04T15:49:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would be happy if a skipnan keyword is added, but the main grumble is still that it is hard to know that a float error is really because of NaN. I didn't even know that NaN is encoded as float in  astring column. At first I thought that pandas is trying to be helpful and convert some string values into float and was searching how to find all float values in a column (couldn't figure that out) and then used a bisec to find the offending rows.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25427783",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25427783",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25427783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDI3Nzgz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T06:20:54Z",
    "updated_at": "2013-10-01T06:20:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not really possible to get around that. But it'd be the same thing if it were None and you have to have some representation of a missing value.  By the way, one reason you're having this issue is that you passed a lambda. If you passed a named function, you'd be able to see the offending line.  I could maybe see some add-on warning with the error (if `'float'` was in the error message):\n\n```\nAttributeError: 'float' object has no attribute 'split'\nUserWarning: Your function for apply may not be handling NaN/null values appropriately.\n```\n\nHowever, ultimately, I think it's something you just have to learn at some point.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25428122",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25428122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25428122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDI4MTIy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T06:32:17Z",
    "updated_at": "2013-10-01T06:32:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "and it's weird because there isn't a builtin NA value in python or numpy (unlike in R).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25430159",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25430159",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25430159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDMwMTU5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T07:26:20Z",
    "updated_at": "2013-10-01T07:26:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the `if \"float\" in errormessage: rethrow with NaN warning` idea is great!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25441333",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25441333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25441333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDQxMzMz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T11:18:52Z",
    "updated_at": "2013-10-01T11:18:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz I was thinking something like this (so we don't have to mess with the return value:\n\n```\nIn [1]: from pandas import *\n\nIn [2]: Series([np.nan, 5]).apply(lambda x: x.split())\npandas/core/common.py:2392: UserWarning: Function passed to apply may not handle NaN/null values appropriately.\n  \" appropriately.\" % func_name)\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-47077adff484> in <module>()\n----> 1 Series([np.nan, 5]).apply(lambda x: x.split())\n\n../pandas/core/series.py in apply(self, func, convert_dtype, args, **kwds)\n   1957                 values = lib.map_infer(values, lib.Timestamp)\n   1958\n-> 1959             mapped = lib.map_infer(values, f, convert=convert_dtype)\n   1960             if len(mapped) and isinstance(mapped[0], Series):\n   1961                 from pandas.core.frame import DataFrame\n\n../pandas/lib.so in pandas.lib.map_infer (pandas/lib.c:43742)()\n\n<ipython-input-2-47077adff484> in <lambda>(x)\n----> 1 Series([np.nan, 5]).apply(lambda x: x.split())\n\nAttributeError: 'numpy.float64' object has no attribute 'split'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25442125",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-25442125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 25442125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NDQyMTI1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-01T11:37:10Z",
    "updated_at": "2013-10-01T11:37:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks great and would have made my debugging session much faster! Thanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/26379099",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-26379099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 26379099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2Mzc5MDk5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-15T22:42:32Z",
    "updated_at": "2013-10-15T22:42:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz - I haven't forgotten about this. I'm planning to propose a skipnull decorator that takes an optional fill value (for external use) plus add a reusable context manager that warns when something looks like a nan error (for internal use). Might not/probably won't make it into 0.13. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/172918345",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-172918345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 172918345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjkxODM0NQ==",
    "user": {
      "login": "ksvensson8",
      "id": 4077988,
      "node_id": "MDQ6VXNlcjQwNzc5ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4077988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ksvensson8",
      "html_url": "https://github.com/ksvensson8",
      "followers_url": "https://api.github.com/users/ksvensson8/followers",
      "following_url": "https://api.github.com/users/ksvensson8/following{/other_user}",
      "gists_url": "https://api.github.com/users/ksvensson8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ksvensson8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ksvensson8/subscriptions",
      "organizations_url": "https://api.github.com/users/ksvensson8/orgs",
      "repos_url": "https://api.github.com/users/ksvensson8/repos",
      "events_url": "https://api.github.com/users/ksvensson8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ksvensson8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T17:02:01Z",
    "updated_at": "2016-01-19T17:02:01Z",
    "author_association": "NONE",
    "body": "@jtratner Was this ever implemented?  I'm on 0.17.0 and am getting this error:\n\n```\nIn [449]:\ncombined_data['Status Date'].apply(lambda x: datetime.datetime.strptime(x, '%Y-%m-%d') )\nOut [449]:\n\n ...\nTypeError: must be string, not float\n```\n\nLooking at the records, causing it:\n\n```\nIn [460]:\ncombined_data['Status Date'].apply (lambda x: type(x))\nOut[460]:\n0      <type 'unicode'>\n1      <type 'unicode'>\n2      <type 'unicode'>\n3      <type 'unicode'>\n4        <type 'float'>\n```\n\nVerifying that this is indeed caused by a NaN:\n\n```\nIn [462]:    \ncombined_data[['Status Date']].ix[4]\nOut[462]:\nStatus Date    NaN\nName: 4, dtype: object\n```\n\nI agree with @JanSchulz that this behavior is a bit confusing, especially for users relatively new to Pandas (I've had to explain the same NaN float error three times to new Pandas users on my team).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/172959114",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-172959114",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 172959114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjk1OTExNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T19:26:41Z",
    "updated_at": "2016-01-19T19:26:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@flyingmeatball the issue is still open, so not implemented.\n\nI guess you could do something, but `.apply` is almost always the last possible way to do something in any event.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/172974014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-172974014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 172974014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjk3NDAxNA==",
    "user": {
      "login": "ksvensson8",
      "id": 4077988,
      "node_id": "MDQ6VXNlcjQwNzc5ODg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4077988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ksvensson8",
      "html_url": "https://github.com/ksvensson8",
      "followers_url": "https://api.github.com/users/ksvensson8/followers",
      "following_url": "https://api.github.com/users/ksvensson8/following{/other_user}",
      "gists_url": "https://api.github.com/users/ksvensson8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ksvensson8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ksvensson8/subscriptions",
      "organizations_url": "https://api.github.com/users/ksvensson8/orgs",
      "repos_url": "https://api.github.com/users/ksvensson8/repos",
      "events_url": "https://api.github.com/users/ksvensson8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ksvensson8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T20:19:36Z",
    "updated_at": "2016-01-19T20:19:36Z",
    "author_association": "NONE",
    "body": "@jreback thanks for the reply.\n\nI try and avoid .apply where possible, but there are many transformations I end up making where I can't find a better way to do something relatively simple, such as string transformations, or working with the series.shift() method.\n\nI think it's also an easy error for someone who is not that familiar with Pandas to encounter.  .apply(lambda x: x...) is a straightforward construction for iterating over series values and using native python.  That's where the value of updating the error would be - for new(er) users, it becomes tedious to troubleshoot and the error message doesn't really describe what is happening.  \n\nI appreciate that this is a small issue in the scheme of things. I'm not familiar enough with the underlying code base to submit a pull request for a change, but I may explore a bit when I have some time.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/172982622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-172982622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 172982622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjk4MjYyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T20:51:03Z",
    "updated_at": "2016-01-19T20:51:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@flyingmeatball ok sure\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/265150053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5062#issuecomment-265150053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5062",
    "id": 265150053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NTE1MDA1Mw==",
    "user": {
      "login": "AbeHandler",
      "id": 1252925,
      "node_id": "MDQ6VXNlcjEyNTI5MjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1252925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AbeHandler",
      "html_url": "https://github.com/AbeHandler",
      "followers_url": "https://api.github.com/users/AbeHandler/followers",
      "following_url": "https://api.github.com/users/AbeHandler/following{/other_user}",
      "gists_url": "https://api.github.com/users/AbeHandler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AbeHandler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AbeHandler/subscriptions",
      "organizations_url": "https://api.github.com/users/AbeHandler/orgs",
      "repos_url": "https://api.github.com/users/AbeHandler/repos",
      "events_url": "https://api.github.com/users/AbeHandler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AbeHandler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-06T13:31:43Z",
    "updated_at": "2016-12-06T13:31:43Z",
    "author_association": "NONE",
    "body": "+1"
  }
]
