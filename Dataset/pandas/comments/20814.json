[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384044601",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384044601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384044601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA0NDYwMQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T19:03:48Z",
    "updated_at": "2018-04-27T11:03:12Z",
    "author_association": "NONE",
    "body": "Hello @TomAugspurger! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on April 27, 2018 at 11:03 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384046503",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384046503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384046503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA0NjUwMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T19:10:25Z",
    "updated_at": "2018-04-24T19:10:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @jorisvandenbossche "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384049983",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384049983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384049983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA0OTk4Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T19:22:55Z",
    "updated_at": "2018-04-24T19:22:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh fun\r\n\r\n\r\n```python\r\nIn [3]: np.array([{'a': 10}])\r\nOut[3]: array([{'a': 10}], dtype=object)\r\n\r\nIn [4]: np.array([UserDict({'a': 10})])\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-4-400145814467> in <module>()\r\n----> 1 np.array([UserDict({'a': 10})])\r\n\r\n/usr/local/Cellar/python/3.6.5/Frameworks/Python.framework/Versions/3.6/lib/python3.6/collections/__init__.py in __getitem__(self, key)\r\n    989         if hasattr(self.__class__, \"__missing__\"):\r\n    990             return self.__class__.__missing__(self, key)\r\n--> 991         raise KeyError(key)\r\n    992     def __setitem__(self, key, item): self.data[key] = item\r\n    993     def __delitem__(self, key): del self.data[key]\r\n\r\nKeyError: 0\r\n```\r\n\r\n(we use `UserDict` since pandas had some troubles with just regular `dict`s."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384055683",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384055683",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384055683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA1NTY4Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T19:43:16Z",
    "updated_at": "2018-04-24T19:43:16Z",
    "author_association": "MEMBER",
    "body": "Quick general comment: why make a EA specific take method instead of just a general one that works for both ndarrays and EAs? (and for EA it would just dispatch to the EA). \r\n\r\nI am also not sure if it is worth to add the `_values_for_take`. If we have a general purpose `take` function, an `ExtensionArray.take` implementation could simply be (assuming `self.data` is the underlying numpy array):\r\n\r\n```\r\n           def take(self, indexer, fill_value=None):\r\n               ... somehow handle default fill_value ...\r\n               result = take(self.data, indexer, fill_value=fill_value)\r\n               return self.__class__(result)\r\n```\r\n\r\nI think it is not too much asked for an ExtensionArray author to implement this themselves.\r\n\r\nThere is also a problem with what a public `na_value` on ExtensionDtype/ExtensionArray means. Is it the value that is used \"publicly\"? Or is it the value that is used in the underlying array? Eg for geopandas the one is `None`, the other is `0` (but the 0 nobody should care about, as that is an implementation detail)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384058079",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384058079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384058079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA1ODA3OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T19:51:32Z",
    "updated_at": "2018-04-24T19:51:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Quick general comment: why make a EA specific take method instead of just a general one that works for both ndarrays and EAs?\r\n\r\n\r\nI think the way `take_ea` is written, it works on either.\r\n\r\n```python\r\nIn [1]: from pandas.core.arrays.base import take_ea\r\n\r\nIn [2]: import numpy as np\r\n\r\nIn [3]: arr = np.array([1, 2, 3])\r\n\r\nIn [4]: take_ea(arr, [0, 1, -1])\r\nOut[4]: array([1, 2, 3])\r\n```\r\n\r\nSuggestions for a better name?\r\n\r\n> I think it is not too much asked for an ExtensionArray author to implement this themselves.\r\n\r\nThat seems fine.\r\n\r\n> There is also a problem with what a public na_value on ExtensionDtype/ExtensionArray means.\r\n\r\nThis can be private."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384059099",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384059099",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384059099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA1OTA5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T19:54:59Z",
    "updated_at": "2018-04-24T19:54:59Z",
    "author_association": "MEMBER",
    "body": "> I think the way take_ea is written, it works on either.\r\n\r\nThe `_from_sequence` in there is only for EAs"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384059806",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384059806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384059806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA1OTgwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T19:57:33Z",
    "updated_at": "2018-04-24T19:57:33Z",
    "author_association": "MEMBER",
    "body": "How I had it in my head (but which doesn't mean it is better!), was that such a `take` method that you now wrote in algorithms.py would actually only work on numpy arrays (and on EAs as well, but for those we would dispatch), and then EA.take can call that function again but now with a numpy array of data.\r\nThen the `take` method in algorithms.py would be \"cleaner\" in the sense that it doesn't need to be aware of EA's semantics. \r\nBut trying to look now in more detail to what you did to better see advantages/disadvantages.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384075861",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384075861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384075861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA3NTg2MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T20:51:43Z",
    "updated_at": "2018-04-24T20:51:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should be able to have a clean implementation of `take_ea` (or `take` or whatever).\r\n\r\nThe tricky part is fixing the callers like `Block.reindex_indexer` / `Block.get_reindexed_values` / `NDFrame.align`, to call things correctly. These need to call `algos.take(thing, fill_value=fill_value)` with the right fill value for that dtype. Things should work, but it's a bit tricky."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384248737",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384248737",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384248737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI0ODczNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T11:04:03Z",
    "updated_at": "2018-04-25T11:04:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Pushed another WIP if anyone has some thoughts on the general approach. The extension tests all pass but I'm still breaking things elsewhere, and I think things can be simplified.\r\n\r\nThe main idea is to have a sentinel `_default_na_value` that's used as the default for all reindexing operations (align, etc.). Then in internals, once we have a single-dtype block, we can figure out what default value to actually use based on the block type. In principle, this should work, but I'm struggling with various things, especially around upcasting. Hoping to clean it up today."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384250673",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384250673",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384250673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI1MDY3Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T11:12:45Z",
    "updated_at": "2018-04-25T11:12:45Z",
    "author_association": "MEMBER",
    "body": "Regarding `_default_fill_value`, I have the feeling (again, from only taking a quick look) that we are mixing two different concepts: for `take` it means \"no filling\", for `reindex` it means \"default fill value\""
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384252059",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384252059",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384252059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI1MjA1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T11:19:14Z",
    "updated_at": "2018-04-25T11:19:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> that we are mixing two different concepts\r\n\r\nThat feeling is correct. Is that not what we want? I can re-add the allow_fill argument."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384254334",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384254334",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384254334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI1NDMzNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T11:29:04Z",
    "updated_at": "2018-04-25T11:29:04Z",
    "author_association": "MEMBER",
    "body": "> That feeling is correct. Is that not what we want? I can re-add the allow_fill argument.\r\n\r\nI am going a bit back and forth on it, not sure ...\r\n\r\nRegarding what I said above about the dubious meaning of \"na_value\" (the physical value that is stored, or the public one), I think this is actually not really a problem. It should just be the public one, so the value that you get if you get an item of an EA that is missing (type of `arr[0]` if the first item is missing). So it is fine to keep this public."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384263658",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384263658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384263658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI2MzY1OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T12:08:10Z",
    "updated_at": "2018-04-25T12:08:10Z",
    "author_association": "MEMBER",
    "body": "Trying to get my head around the current logic. Some pseudo code flow path in case of a Series reindex operation with EA values:\r\n\r\n```\r\ns.reindex(self, ..., fill_value=_default_fill_value)\r\n-> ... -> BlockManager.reindex_indexer(..., fill_value=fill_value)\r\n-> Block.take_nd(..., \r\n        fill_tuple=(fill_value if fill_value is not _default_fill_value else Block.fill_value,)\r\n-> algos.take_nd(values, ... allow_fill=True, fill_value=fill_tuple[1])\r\n-> [in case of EA] values.take(..., fill_value=fill_value)\r\n   -> if fill_value == _default_fill_value -> no filling\r\n   -> if fill_value == Block.fill_value -> default filling behaviour -> algos.take with passed fill_value\r\n```\r\n\r\n(but in case of a reindex/aligment operation, the final `fill_value` actively passed to `values.take(..)` will never be `_default_fill_value` I think?)\r\n\r\nSo what I find complex about this: a) as said above different meaning of `_default_fill_value` throughout the code base in reindex and take, b) the fact that Block is responsible of passing an appropriate filling value to EA.take, while the EA could perfectly know and do that itself and c) that an EA.take implementation needs to be aware of the ``_default_fill_value`` object (which means we need to make that public).\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384272427",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384272427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384272427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI3MjQyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T12:41:40Z",
    "updated_at": "2018-04-25T12:41:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "> EA.take implementation needs to be aware of the _default_fill_value\r\n\r\nI think if we use `allow_fill`, then we can just switch to `fill_value=None`. The issue with `fill_value=None` as the default is that an EA may want to use `None` as their NA value, and so wouldn't be able to tell if it's explicit or the default.\r\n\r\nThis should be able to be simplified greatly. Let's see..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384272644",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384272644",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384272644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI3MjY0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T12:42:31Z",
    "updated_at": "2018-04-25T12:42:31Z",
    "author_association": "MEMBER",
    "body": "Just brainstorming on an alternative:\r\n\r\n```\r\ns.reindex(self, ..., fill_value=_default_fill_value)\r\n-> ... -> BlockManager.reindex_indexer(..., fill_value=fill_value)\r\n-> Block.take_nd(..., fill_tuple=(fill_value,)\r\n-> algos.take_nd(values, ... allow_fill=True, fill_value=fill_tuple[1])\r\n  -> if fill_value == _default_fill_value -> values.take(..., allow_fill=True) (let EA use its default)\r\n  -> else -> values.take(..., allow_fill=True, fill_value=fill_value) (override EA default)\r\n-> values.take(..., allow_fill=False, fill_value=None) # can use their own default for fill_value\r\n   -> if allow_fill == False -> no filling\r\n   -> if allow_fill == True -> filling behaviour \r\n      -> if fill_value == None -> fill_value = EA.dtype.na_value\r\n```\r\n\r\n(I don't know if this scheme is anywhere near clear for somebody that did not write it ...?)\r\n\r\nThis introduces again the second keyword, but eliminates double usecase of ``_default_fill_value``, and EA.take does not need to be aware of it (the EA author can still use a similar trick if they want to have None as a valid fill_value instead of denoting the default, but that is then up to the EA author).\r\n\r\nBut of course this is only a single code path, I don't know how it interacts with all other usages of the take machinery.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384277265",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384277265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384277265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI3NzI2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T12:58:45Z",
    "updated_at": "2018-04-25T12:58:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I think if we use allow_fill, then we can just switch to fill_value=None. The issue with fill_value=None as the default is that an EA may want to use None as their NA value, and so wouldn't be able to tell if it's explicit or the default.\r\n\r\nActually, I don't think that's true. There would still be the ambiguity. Anyway, we can leave that up to the EA author I think...\r\n\r\nYour proposal looks sensible. I'll try to implement it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384293217",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384293217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384293217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDI5MzIxNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T13:48:49Z",
    "updated_at": "2018-04-25T13:48:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Getting there...\r\n\r\nThis will still fail on `DataFrame.merge(..., how='outer')` that requires reindexing the dataframes. Somewhere in the join units stuff we're determining that \r\n\r\n```python\r\n(Pdb) join_units\r\n[JoinUnit(ExtensionBlock: slice(0, 1, 1), 1 x 3, dtype: decimal, {1: array([ 0,  0,  1,  2, -1])})]\r\n```\r\n\r\nshould have `np.nan` for it's `upcasted_na`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384319609",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384319609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384319609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDMxOTYwOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T15:02:04Z",
    "updated_at": "2018-04-25T15:02:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alrighty, I think this is ready for another look. Overall, I think this is better. Thanks @jorisvandenbossche.\r\n\r\nSome API questions:\r\n\r\n1. Name for the new `take` method?\r\n2. Remove `_values_for_take` and make `take` abstract again? With the idea that the new `take` method makes it straightforward?\r\n3. Are we OK with the names `fill_value` and `allow_fill` for the parameter in `EA.take` / `take`?\r\n4. Public `ExtensionDtype.na_value`?\r\n\r\nprobably others.l\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384332144",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384332144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384332144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDMzMjE0NA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T15:37:22Z",
    "updated_at": "2018-04-25T15:37:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger I think the `ExtensionDtype.na_value` is needed and required so that the only NA values inside of an `ExtensionArray` are that specific value.  This relates to making it so that `_can_hold_na=True` for all `ExtensionArray` types (given the discussion at #20815"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384334909",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384334909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384334909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDMzNDkwOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T15:45:10Z",
    "updated_at": "2018-04-25T15:45:10Z",
    "author_association": "MEMBER",
    "body": "> 2. Remove _values_for_take and make take abstract again? With the idea that the new take method makes it straightforward?\r\n\r\nI would personally remove `_values_for_take` and just have a `take`, to keep the interface simpler. I think most actual ExtensionArrays will not be able to use the `_values_for_take` anyhow, and will need to override `take` itself. This will be the case for geopandas, and I think also for cyberpandas? (as you will want to fill the underlying array with a native numpy scalar, and not with the public `na_value` (ipaddress.IPv4Address(0))?) \r\nIf that is the case, there is even less reason to have it I think."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384377544",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384377544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384377544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDM3NzU0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T17:56:14Z",
    "updated_at": "2018-04-25T17:57:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI, there's an occasional failure in `test_merge` for JSONArray. This happens when all of the arrays are the same length (issue is deep inside assert_frame_equal, which calls get_values, which goes to an ndarray, which fails on the UserDicts. I have a fix, but may do it separately).\r\n\r\n\r\n69e7fe76b540807bb973496ee5a2e3e636b90287 had some notable changes:\r\n\r\n1. Reversed order of take keywords\r\n2. Added to extensions API\r\n3. Removed default implementation\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384379261",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384379261",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384379261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDM3OTI2MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T18:01:35Z",
    "updated_at": "2018-04-25T18:01:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks. I think the biggest question is how to the change to `get_empty_dtype_and_na` at https://github.com/pandas-dev/pandas/pull/20814/files#diff-e705e723b2d6e7c0e2a0443f80916abfR5454 can fit in better with the rest of what's going on there. I'm investigating that now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384379748",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384379748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384379748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDM3OTc0OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T18:03:06Z",
    "updated_at": "2018-04-25T18:03:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, another question: do we or NumPy have any code that'll do bounds checking for us? Or should I just do `if (indexer > len(arr)).any(): raise IndexError`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384381280",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384381280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384381280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDM4MTI4MA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T18:07:55Z",
    "updated_at": "2018-04-25T18:07:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger So my (now very small) changes that remove `_can_hold_na` as something people would set in `ExtensionArray` are all green in #20819 , so if they pass muster, you might want to merge them in and use it here, since there is a bit of a relation to your PR for `take`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384383641",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384383641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384383641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDM4MzY0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T18:15:13Z",
    "updated_at": "2018-04-25T18:15:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger see ``maybe_convert_indices`` (in generic.py/_take)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384413965",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384413965",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384413965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDQxMzk2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T19:55:40Z",
    "updated_at": "2018-04-25T19:55:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wasn't really able to share code with `maybe_convert_indices`. It has a couple differences\r\n\r\n1. modifies `indicies` in place, we just want bounds checking\r\n2. allows for indices < -1, we want to raise for anything other than that\r\n3. handles `take([], [-1, -1])` differently (we want to allow it)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384500113",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384500113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384500113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDUwMDExMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T03:16:41Z",
    "updated_at": "2018-04-26T03:16:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the failure is a random one due to https://github.com/pandas-dev/pandas/pull/20827. Will re-run once that's in."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384620287",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384620287",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384620287,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDYyMDI4Nw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-04-26T12:18:53Z",
    "updated_at": "2018-04-27T12:59:07Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20814?src=pr&el=h1) Report\n> Merging [#20814](https://codecov.io/gh/pandas-dev/pandas/pull/20814?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/6cacdde5630c593999059833b516e1fec60aaf72?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/20814/graphs/tree.svg?width=650&height=150&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/20814?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #20814      +/-   ##\n==========================================\n+ Coverage   91.77%   91.78%   +<.01%     \n==========================================\n  Files         153      153              \n  Lines       49280    49313      +33     \n==========================================\n+ Hits        45229    45261      +32     \n- Misses       4051     4052       +1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.17% <100%> (ø)` | :arrow_up: |\n| #single | `41.88% <42.1%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/20814?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.22% <ø> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/cast.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2Nhc3QucHk=) | `88.06% <100%> (+0.2%)` | :arrow_up: |\n| [pandas/core/indexing.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhpbmcucHk=) | `93.14% <100%> (+0.05%)` | :arrow_up: |\n| [pandas/core/dtypes/missing.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL21pc3NpbmcucHk=) | `92.94% <100%> (+0.08%)` | :arrow_up: |\n| [pandas/core/algorithms.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYWxnb3JpdGhtcy5weQ==) | `94.48% <100%> (+0.08%)` | :arrow_up: |\n| [pandas/core/arrays/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2Jhc2UucHk=) | `83.95% <100%> (ø)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.99% <100%> (ø)` | :arrow_up: |\n| [pandas/core/dtypes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZHR5cGVzL2Jhc2UucHk=) | `92.1% <100%> (+0.21%)` | :arrow_up: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `95.94% <100%> (ø)` | :arrow_up: |\n| [pandas/api/extensions/\\_\\_init\\_\\_.py](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree#diff-cGFuZGFzL2FwaS9leHRlbnNpb25zL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :arrow_up: |\n| ... and [2 more](https://codecov.io/gh/pandas-dev/pandas/pull/20814/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20814?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20814?src=pr&el=footer). Last update [6cacdde...ec0cecd](https://codecov.io/gh/pandas-dev/pandas/pull/20814?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384694868",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384694868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384694868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY5NDg2OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:58:21Z",
    "updated_at": "2018-04-26T15:58:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "> can you add there a test case with a different fill_value (not None or nan), to make sure it is passed through correctly to EA.take\r\n\r\nI don't think we can do that generically, since we don't know what a valid na_value is.\r\n\r\nI'll add one in decimal though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384696639",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20814#issuecomment-384696639",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20814",
    "id": 384696639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY5NjYzOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T16:03:40Z",
    "updated_at": "2018-04-26T16:03:40Z",
    "author_association": "MEMBER",
    "body": "> I don't think we can do that generically, since we don't know what a valid na_value is.\r\n\r\nIf you fill it with an existing scalar (like `pd.Series(data[:2]).reindex([1, 2], fill_value=data[2])`), then we can expect that to work I think.\r\n\r\nBut it is actually a good question what should happen when you pass a value that is not accepted by the ExtensionArray. I suppose it is up to the EA to decide on that? (raise an error, or coerce to object)"
  }
]
