[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36373003",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-36373003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 36373003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzczMDAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-28T17:16:10Z",
    "updated_at": "2014-02-28T17:16:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @mangecoeur, @hayd, @jorisvandenbossche \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37226255",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37226255",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37226255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI2MjU1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T19:53:05Z",
    "updated_at": "2014-03-10T19:53:52Z",
    "author_association": "MEMBER",
    "body": "I can see that using `itertuples` instead of `iterrows` can maybe be the better solution, but I don't see how this can lead to data loss. Because the iterrows is used internally in the sql code, so between using iterrows and inserting the data in an sql table, no operations are performed on the data.\n\nIt is a fact that the dtype info is lost (and data are maybe unnecessarily converted), but the column type info to write the data to sql is constructed from the column types of the dataframe itself (https://github.com/pydata/pandas/blob/master/pandas/io/sql.py#L484). \nBut it is true that the dtypes are not conserved between writing and reading to/from eg postgresql. So eg the example from your tests for to_stata will not work for sql:\n\n```\ns1 = pd.Series(2**9, dtype=np.int16)\ns2 = pd.Series(2**17, dtype=np.int32)\ns3 = pd.Series(2**33, dtype=np.int64)\noriginal = pd.DataFrame({'int16': s1, 'int32': s2, 'int64': s3})\noriginal.index.name = 'index'\n\nformatted = original\nformatted['int64'] = formatted['int64'].astype(np.float64)\n\noriginal.to_sql(\"test_read_write2\", engine)\nwritten_and_read_again = sql.read_table(\"test_read_write\", engine)\n```\n\nThis will not work for sql, as the resulting types are int64 instead of int16/int32. But this is due to our mapping of the dtypes to sqlalchemy types, where just all int types are mapped to Integer (no distinction between smallint/int/bigint).\n\nBut I am not that familiar with the sql conversion code. @mangecoeur, can you take a look at this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37227577",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37227577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37227577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI3NTc3",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:05:11Z",
    "updated_at": "2014-03-10T20:05:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "One scenario where this can occur is when a DataFrame contains both `int32` and `float32`.  When you use `iterrows` pandas decides to cast these to `float32` which means that the integer no longer has 32 bits of precision (it now has about 25).\n\nYou cannot generate this by mixing `int` data - only by mixing `int` with `float`, and then with either `float32` and `int32` or `float64` and `int64`.\n\nLets take this for a spin:\n\n``` python\nimport pandas as pd\nimport numpy as np\n\ns1 = pd.Series(2**25 + 1,dtype=np.int32)\ns2 = pd.Series(0.0,dtype=np.float32)\ndf = pd.DataFrame({'s1': s1, 's2': s2})\n\nfor r in df.iterrows():\n    iterrows = list(r[1])\n\nfor t in df.df.itertuples():\n    itertuples = list(t[1:])\n\nfor v in zip(iterrows ,itertuples):\n    print v[0] - v[1]\n```\n\nThe output is\n\n```\n-1.0\n0.0\n```\n\nWhich occurs cein the last bit in the `int32` is lost when it is _upcast( sidecast??)_ to `float32`.  pandas should always upcast any `float32` mixed with any `int32` to `float64` which would preserve fidelity.  But the same can happen with `float64` and `int64` -- fixing this would require `float128`, which isn't on offer.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37227787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37227787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37227787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI3Nzg3",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:07:14Z",
    "updated_at": "2014-03-10T20:07:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWIW even storing as `float64` doesn't work since the data-loss occurs when `iterrows` is called.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37227885",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37227885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37227885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI3ODg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:08:10Z",
    "updated_at": "2014-03-10T20:09:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep..only shows up on 'bigger' values of ints when mixed....IIRC @bashtage you caught this in to_stata......\n\neasy fix is to user `itertuples` (which doesn't coerce to a uniform series)\n\nother way is to use a `dtype='object'` Series (maybe as a kw to `iterrows`). though I think `itertuples` might be faster anyhow\n\nthe problem with `iterrows` generally is that it calls `self.values` which by definition tries to cast everything to a compatible type (where compatible doesn't take into account precision), just a type that will 'hold' everything\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37228325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37228325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37228325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI4MzI1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:12:43Z",
    "updated_at": "2014-03-10T20:13:37Z",
    "author_association": "MEMBER",
    "body": "@bashtage Thanks for the clarification! Now I see, and I quickly tried using itertuples and this fixes this indeed (not the int32->int64 type conversion, but the data loss)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37228587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37228587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37228587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI4NTg3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:14:56Z",
    "updated_at": "2014-03-10T20:14:56Z",
    "author_association": "MEMBER",
    "body": "I can do a PR. The other question remains, whether we should try to preserve more of the dtypes (using smallint/int/bigint).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37228697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37228697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37228697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjI4Njk3",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:15:56Z",
    "updated_at": "2014-03-10T20:15:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tried to fix this on my side, also in the hope of more efficient inserts - see https://github.com/mangecoeur/pandas/tree/sql-dataloss-6509 but I'm getting a lot of test failiures for some reason, something to do with indexes being included or not, is anyone else seeing this after changing to itertuples?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37230193",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37230193",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37230193,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMwMTkz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:29:54Z",
    "updated_at": "2014-03-10T20:29:54Z",
    "author_association": "MEMBER",
    "body": "@mangecoeur If I only change the iterrows to itertuples (I think you also did some other changes in the branch you linked), then the tests run for me locally: https://github.com/jorisvandenbossche/pandas/compare/sql-itertuples\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37230976",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37230976",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37230976,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMwOTc2",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:37:08Z",
    "updated_at": "2014-03-10T20:37:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche in theory the only other thing I changed was trying to tweak the tests because I thought maybe we were writing the frame index where we should not be. Our versions are otherwise almost identical except that I turned the for loop into a list comprehension. if yours works we should go with that...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37233408",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6509#issuecomment-37233408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6509",
    "id": 37233408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjMzNDA4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-10T20:58:35Z",
    "updated_at": "2014-03-10T20:58:35Z",
    "author_association": "MEMBER",
    "body": "@mangecoeur Travis is happy, so will do a PR\n"
  }
]
