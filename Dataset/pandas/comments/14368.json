[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257154431",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14368#issuecomment-257154431",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14368",
    "id": 257154431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE1NDQzMQ==",
    "user": {
      "login": "bkandel",
      "id": 606089,
      "node_id": "MDQ6VXNlcjYwNjA4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/606089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkandel",
      "html_url": "https://github.com/bkandel",
      "followers_url": "https://api.github.com/users/bkandel/followers",
      "following_url": "https://api.github.com/users/bkandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkandel/subscriptions",
      "organizations_url": "https://api.github.com/users/bkandel/orgs",
      "repos_url": "https://api.github.com/users/bkandel/repos",
      "events_url": "https://api.github.com/users/bkandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-30T14:32:06Z",
    "updated_at": "2016-10-30T14:32:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I tried the simple approach in https://github.com/pandas-dev/pandas/pull/14533 and it failed on some platforms. Looks like what's happening is that sometimes the category dtype is the left operand (and we can define `__lt__`) and sometimes it's the right operand and the comparison operators for the numpy dtype are not defined. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257158514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14368#issuecomment-257158514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14368",
    "id": 257158514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE1ODUxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-30T15:42:57Z",
    "updated_at": "2016-10-30T15:42:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think your approach is fine\nyou just need to be on guard in the functions in case the args are reversed (e.g. always compare the str versions)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257159501",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14368#issuecomment-257159501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14368",
    "id": 257159501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE1OTUwMQ==",
    "user": {
      "login": "bkandel",
      "id": 606089,
      "node_id": "MDQ6VXNlcjYwNjA4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/606089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkandel",
      "html_url": "https://github.com/bkandel",
      "followers_url": "https://api.github.com/users/bkandel/followers",
      "following_url": "https://api.github.com/users/bkandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkandel/subscriptions",
      "organizations_url": "https://api.github.com/users/bkandel/orgs",
      "repos_url": "https://api.github.com/users/bkandel/repos",
      "events_url": "https://api.github.com/users/bkandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-30T15:56:38Z",
    "updated_at": "2016-10-30T15:56:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "If I understand the suggestion correctly, I don't think it's possible. Python doesn't have a `__rlt__`, where the right operand defines the comparison. From the [python docs](https://docs.python.org/3/reference/datamodel.html):\n\n> There are no swapped-argument versions of these methods (to be used when the left argument does not support the operation but the right argument does); rather, **lt**() and **gt**() are each other’s reflection, **le**() and **ge**() are each other’s reflection, and **eq**() and **ne**() are their own reflection. If the operands are of different types, and right operand’s type is a direct or indirect subclass of the left operand’s type, the reflected method of the right operand has priority, otherwise the left operand’s method has priority. Virtual subclassing is not considered.\n\nSo if the numpy dtype is on the left (eg `np.int32 < CategoricalDtype()`), the `np.int32.__lt__` gets called and it chokes on the pandas type.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257163623",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14368#issuecomment-257163623",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14368",
    "id": 257163623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE2MzYyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-30T17:04:04Z",
    "updated_at": "2016-10-30T17:04:04Z",
    "author_association": "MEMBER",
    "body": "Basically, what the `dtype.__lt__(self, other)` et al methods of the `np.dtype` objects do, is coercing the `other` to a dtype (so for a string, like `np.dtype(str)`), and then return the equivalent of  `np.can_cast(self, other)` (so it sorts based on the hierarchy of the dtype objects). \nFor this reason something like `np.dtype('float32') < 'float64'` works.\n\nSo as @bkandel points out, the problem lies in coercing the right hand side value.  `np.dtype(pd.types.dtypes.CategoricalDtype())` raised an error. So even if we define those methods for the pandas ExtensionDTypes, once you have mixed dtypes things will error (depending on the initial order). And I also don't see a way to get this working reliably in all cases with current numpy and pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257163702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14368#issuecomment-257163702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14368",
    "id": 257163702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE2MzcwMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-30T17:05:44Z",
    "updated_at": "2016-10-30T17:05:44Z",
    "author_association": "MEMBER",
    "body": "One possible way is adding a `dtype` attribute to the pandas ExtensionDtypes. See https://docs.scipy.org/doc/numpy/reference/arrays.dtypes.html#specifying-and-constructing-data-types, this is listed as one of the possible things that `np.dtype(..)` accepts and converts to a numpy dtype. But I am not sure of the further consequences of defining that attribute.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257187950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14368#issuecomment-257187950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14368",
    "id": 257187950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE4Nzk1MA==",
    "user": {
      "login": "bkandel",
      "id": 606089,
      "node_id": "MDQ6VXNlcjYwNjA4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/606089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkandel",
      "html_url": "https://github.com/bkandel",
      "followers_url": "https://api.github.com/users/bkandel/followers",
      "following_url": "https://api.github.com/users/bkandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkandel/subscriptions",
      "organizations_url": "https://api.github.com/users/bkandel/orgs",
      "repos_url": "https://api.github.com/users/bkandel/repos",
      "events_url": "https://api.github.com/users/bkandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-30T23:23:04Z",
    "updated_at": "2016-10-30T23:23:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "What if we just define the `dtype` as `np.object_`? That is in keeping with the numpy semantics, where `object_` is a catch-all for \"other\" types of objects, and would let us have sensible comparisons to numpy objects. It also does work: \n\n``` python\nIn [1]: from pandas.types.dtypes import CategoricalDtype\n\nIn [2]: mycat = CategoricalDtype()\n\nIn [3]: import numpy \n\nIn [4]: myint = numpy.dtype('int32')\n\nIn [5]: myint < mycat \n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-5-78f2d70d2573> in <module>()\n----> 1 myint < mycat\n\nTypeError: data type not understood\n\nIn [6]: mycat.dtype = numpy.object_ \n\nIn [7]: myint < mycat \nOut[7]: True\n```\n\nFor comparisons the opposite way (where the `CategoricalDtype` is the left operand), we might be able to just copy the `__lt__` function from `np.object_`, which will make the behavior symmetrical: \n\n``` python\nIn [12]: mycat.__lt__ = numpy.object_.__lt__\nIn [13]: mycat < myint \nOut[13]: True\nIn [15]: mycat > myint \nOut[15]: False\n```\n\nThis would change the suggested behavior from sorting on the name to sorting on the numpy type hierarchy, but that might be more sensible behavior (or at least more compatible with numpy) anyway.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/257191208",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14368#issuecomment-257191208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14368",
    "id": 257191208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzE5MTIwOA==",
    "user": {
      "login": "bkandel",
      "id": 606089,
      "node_id": "MDQ6VXNlcjYwNjA4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/606089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkandel",
      "html_url": "https://github.com/bkandel",
      "followers_url": "https://api.github.com/users/bkandel/followers",
      "following_url": "https://api.github.com/users/bkandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkandel/subscriptions",
      "organizations_url": "https://api.github.com/users/bkandel/orgs",
      "repos_url": "https://api.github.com/users/bkandel/repos",
      "events_url": "https://api.github.com/users/bkandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-31T00:19:40Z",
    "updated_at": "2016-10-31T00:19:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like defining the `dtype` attribute causes lots of problems: https://github.com/pandas-dev/pandas/pull/14533/commits/8925371d4e18c259f12d58feac949a431542ce6f\n"
  }
]
