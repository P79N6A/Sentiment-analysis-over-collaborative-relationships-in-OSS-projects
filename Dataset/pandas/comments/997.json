[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4966805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/997#issuecomment-4966805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/997",
    "id": 4966805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NjY4MDU=",
    "user": {
      "login": "adamklein",
      "id": 869232,
      "node_id": "MDQ6VXNlcjg2OTIzMg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/869232?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamklein",
      "html_url": "https://github.com/adamklein",
      "followers_url": "https://api.github.com/users/adamklein/followers",
      "following_url": "https://api.github.com/users/adamklein/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamklein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamklein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamklein/subscriptions",
      "organizations_url": "https://api.github.com/users/adamklein/orgs",
      "repos_url": "https://api.github.com/users/adamklein/repos",
      "events_url": "https://api.github.com/users/adamklein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamklein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-05T01:18:30Z",
    "updated_at": "2012-04-05T01:18:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "These are good observations and will hopefully be addressed for the most part in the pandas 0.8 release which will incorporate new timeseries functionality. If you are willing/able to hack around in the timeseries branch of pandas, you can get a sneak preview of a bunch of it (that has yet to be properly documented unfortunately)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5008681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/997#issuecomment-5008681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/997",
    "id": 5008681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDg2ODE=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-07T14:47:32Z",
    "updated_at": "2012-04-07T14:47:32Z",
    "author_association": "MEMBER",
    "body": "@smc77 you'll be able to do what you're describing with higher frequency time rules:\n\n```\ndate_range(start, end, freq='10s')\n```\n\nHours, minutes, seconds, milliseconds, microseconds will be supported. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5010189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/997#issuecomment-5010189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/997",
    "id": 5010189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAxODk=",
    "user": {
      "login": "smc77",
      "id": 133543,
      "node_id": "MDQ6VXNlcjEzMzU0Mw==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/133543?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smc77",
      "html_url": "https://github.com/smc77",
      "followers_url": "https://api.github.com/users/smc77/followers",
      "following_url": "https://api.github.com/users/smc77/following{/other_user}",
      "gists_url": "https://api.github.com/users/smc77/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smc77/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smc77/subscriptions",
      "organizations_url": "https://api.github.com/users/smc77/orgs",
      "repos_url": "https://api.github.com/users/smc77/repos",
      "events_url": "https://api.github.com/users/smc77/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smc77/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-07T17:31:15Z",
    "updated_at": "2012-04-07T17:31:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Awesome!  Can this be arbitrary, or will you just work in the lowest level time interval?  So you could call a millisecond DataFrame and say DataFrame.toFreq(\"1m30s\") or something like that?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5010854",
    "html_url": "https://github.com/pandas-dev/pandas/issues/997#issuecomment-5010854",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/997",
    "id": 5010854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTA4NTQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-07T19:08:58Z",
    "updated_at": "2012-04-07T19:08:58Z",
    "author_association": "MEMBER",
    "body": "Generating date ranges with arbitrary frequency will be easy; you can also convert DataFrame/TimeSeries easily to a different frequency with interpolation (forward fill, backward fill) or aggregation (OHLC, mean, first, last, standard deviation, arbitrary function of your own design). \n\nThinking about how to generate more complicated date ranges like \"the third friday of each month\" without having to write tons of code (e.g. option expiries and other kinds of not-completely-regular offsets). A case like that is pretty simple (you have a regular range -- weekly -- with a filter predicate -- take only dates which are the 3rd week of the month), but you can imagine the rules getting much more complicated\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5106876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/997#issuecomment-5106876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/997",
    "id": 5106876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMDY4NzY=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-13T01:36:14Z",
    "updated_at": "2012-04-13T01:36:14Z",
    "author_association": "MEMBER",
    "body": "Closing this issue, will look at special time rules like the ones you mention separately\n\nTo your query re '1m30s', it would look like this:\n\n```\nIn [8]: rng = date_range('1/1/2000', '1/1/2000 04:00', freq='10ms')\n\nIn [9]: rng\nOut[9]: \n<class 'pandas.core.index.DatetimeIndex'>\noffset: <10 Millis>, timezone: None\n[2000-01-01 00:00:00, ..., 2000-01-01 04:00:00]\nlength: 1440001\n\nIn [10]: s = Series(np.random.randn(len(rng)), index=rng)\n\nIn [11]: s\nOut[11]: \n2000-01-01 00:00:00          -0.296974\n2000-01-01 00:00:00.010000   -0.794281\n2000-01-01 00:00:00.020000    0.894974\n2000-01-01 00:00:00.030000   -0.449783\n2000-01-01 00:00:00.040000   -1.103782\n2000-01-01 00:00:00.050000   -0.398663\n2000-01-01 00:00:00.060000    1.325292\n2000-01-01 00:00:00.070000   -0.930090\n2000-01-01 00:00:00.080000    0.005106\n2000-01-01 00:00:00.090000    0.996640\n2000-01-01 00:00:00.100000   -0.412374\n2000-01-01 00:00:00.110000    0.334531\n2000-01-01 00:00:00.120000    1.315520\n2000-01-01 00:00:00.130000   -0.109636\n2000-01-01 00:00:00.140000    0.492740\n...\n2000-01-01 03:59:59.860000    0.044991\n2000-01-01 03:59:59.870000   -0.802251\n2000-01-01 03:59:59.880000    1.314702\n2000-01-01 03:59:59.890000    0.264193\n2000-01-01 03:59:59.900000   -1.283411\n2000-01-01 03:59:59.910000    1.099670\n2000-01-01 03:59:59.920000    0.184060\n2000-01-01 03:59:59.930000   -0.226882\n2000-01-01 03:59:59.940000   -0.794659\n2000-01-01 03:59:59.950000   -0.028446\n2000-01-01 03:59:59.960000   -0.072073\n2000-01-01 03:59:59.970000   -0.079585\n2000-01-01 03:59:59.980000    0.179583\n2000-01-01 03:59:59.990000   -0.992777\n2000-01-01 04:00:00          -0.795765\nLength: 1440001\n\nIn [12]: s.convert('90s', how='ohlc')\nOut[12]: \n                         open       low      high     close\n2000-01-01 00:00:00 -0.296974 -0.296974 -0.296974 -0.296974\n2000-01-01 00:01:30 -0.794281 -3.614809  3.442894 -0.846305\n2000-01-01 00:03:00  2.125471 -3.320819  4.172475  0.416500\n2000-01-01 00:04:30 -0.497005 -3.627881  3.660880  0.497991\n2000-01-01 00:06:00 -0.716259 -4.473407  3.563939  0.339988\n2000-01-01 00:07:30  0.275863 -3.483847  3.793736  0.212988\n2000-01-01 00:09:00  0.334177 -3.840200  3.386855  0.211472\n2000-01-01 00:10:30  0.083341 -3.818034  3.760827  1.393498\n2000-01-01 00:12:00  1.404772 -3.583800  3.784852  0.386632\n2000-01-01 00:13:30 -1.153652 -4.001564  4.673266  1.844459\n2000-01-01 00:15:00 -0.453571 -3.494612  3.645063 -1.417991\n2000-01-01 00:16:30 -0.235707 -4.289165  3.431136 -0.089142\n2000-01-01 00:18:00 -0.792592 -3.589265  4.183406  0.066304\n2000-01-01 00:19:30 -0.147718 -3.658290  4.290020 -0.706546\n2000-01-01 00:21:00 -0.648629 -3.889165  4.118945  0.028880\n2000-01-01 00:22:30  0.453489 -3.843957  4.209872  0.102457\n2000-01-01 00:24:00 -0.598186 -3.377931  3.557473  0.609125\n2000-01-01 00:25:30 -0.495719 -4.468225  3.702638  0.626945\n2000-01-01 00:27:00 -1.634517 -3.944051  4.197854 -0.654045\n2000-01-01 00:28:30 -0.833358 -3.791215  3.929137 -0.775370\n2000-01-01 00:30:00 -0.380044 -3.711757  3.725884 -2.219548\n2000-01-01 00:31:30  0.604798 -3.737714  3.609465  0.927433\n2000-01-01 00:33:00 -1.203534 -4.382456  3.807750 -0.013841\n2000-01-01 00:34:30 -1.533206 -3.511300  3.882948  1.821238\n2000-01-01 00:36:00 -0.958500 -3.616487  3.755264 -0.662399\n2000-01-01 00:37:30 -0.653411 -3.611954  3.540345 -1.673983\n2000-01-01 00:39:00  0.290721 -3.620144  3.878321  0.447653\n2000-01-01 00:40:30  0.208913 -3.891682  4.358711 -0.920790\n2000-01-01 00:42:00  0.375171 -3.856820  3.919269  1.135407\n2000-01-01 00:43:30 -0.832850 -4.072948  4.127703  0.249963\n2000-01-01 00:45:00 -0.809332 -4.058836  3.501578  1.470236\n2000-01-01 00:46:30  0.999657 -4.020967  3.835850  1.125638\n2000-01-01 00:48:00 -0.263876 -3.862210  3.631834 -0.469697\n2000-01-01 00:49:30  0.558927 -4.024909  3.773156 -1.202724\n2000-01-01 00:51:00 -0.213071 -4.497869  3.606198  0.321253\n2000-01-01 00:52:30 -0.237325 -3.867945  4.076426  0.806005\n2000-01-01 00:54:00  1.965546 -3.635341  3.896998 -0.109311\n2000-01-01 00:55:30 -0.878038 -3.366933  4.712801  0.551550\n2000-01-01 00:57:00  0.304455 -3.880918  3.746188  0.447300\n2000-01-01 00:58:30  0.118218 -4.606924  3.453149 -0.239640\n2000-01-01 01:00:00 -2.064110 -4.212098  4.253603 -0.499737\n2000-01-01 01:01:30 -0.149218 -3.730466  4.352246 -0.170457\n2000-01-01 01:03:00 -0.222669 -3.413565  3.849590  0.331751\n2000-01-01 01:04:30  0.850229 -3.632498  3.844227 -0.659482\n2000-01-01 01:06:00  0.749516 -3.780985  3.563573  1.268997\n2000-01-01 01:07:30 -0.741377 -3.835156  3.659258  0.605716\n2000-01-01 01:09:00 -1.432948 -3.805001  4.272478  0.120933\n2000-01-01 01:10:30  1.186218 -4.069402  4.318341 -1.594680\n2000-01-01 01:12:00 -0.969964 -4.002996  3.536534 -1.361210\n2000-01-01 01:13:30  0.625404 -3.960137  3.603579  1.507752\n2000-01-01 01:15:00 -1.036659 -3.715539  3.521709 -1.270333\n2000-01-01 01:16:30  1.687393 -3.802118  3.529746 -0.931430\n2000-01-01 01:18:00 -0.186619 -4.054671  3.991709 -0.092508\n2000-01-01 01:19:30  0.818695 -3.564566  4.038494 -0.058809\n2000-01-01 01:21:00 -1.044012 -3.612899  3.496089 -1.035782\n2000-01-01 01:22:30 -0.267158 -3.598026  3.959747 -2.337368\n2000-01-01 01:24:00 -0.111602 -3.704758  3.834973  0.684584\n2000-01-01 01:25:30  0.138804 -4.301907  3.682623  0.413488\n2000-01-01 01:27:00 -0.528250 -3.551441  4.183903  1.812118\n2000-01-01 01:28:30  0.660075 -4.263056  3.318161  0.368732\n<snip>\n```\n"
  }
]
