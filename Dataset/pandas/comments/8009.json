[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52042675",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52042675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52042675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQyNjc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T12:43:39Z",
    "updated_at": "2014-08-13T12:43:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is dependent on your dtypes as seen in the SO answer\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52043645",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52043645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52043645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQzNjQ1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T12:53:34Z",
    "updated_at": "2014-08-13T12:53:58Z",
    "author_association": "MEMBER",
    "body": "@joehand you have probably a mixed type dataframe. When doing `df.iloc[0]`, you get the first row as a Series, and if the values are of mixed type, you can end up with a Series of object type. \nBut you should show `df.info()` or better a sample dataframe that reproduces the error to be sure.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52046243",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52046243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52046243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ2MjQz",
    "user": {
      "login": "joehand",
      "id": 684965,
      "node_id": "MDQ6VXNlcjY4NDk2NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/684965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joehand",
      "html_url": "https://github.com/joehand",
      "followers_url": "https://api.github.com/users/joehand/followers",
      "following_url": "https://api.github.com/users/joehand/following{/other_user}",
      "gists_url": "https://api.github.com/users/joehand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joehand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joehand/subscriptions",
      "organizations_url": "https://api.github.com/users/joehand/orgs",
      "repos_url": "https://api.github.com/users/joehand/repos",
      "events_url": "https://api.github.com/users/joehand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joehand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:18:33Z",
    "updated_at": "2014-08-13T13:19:48Z",
    "author_association": "NONE",
    "body": "Yes, that was the issue, thank you. @jorisvandenbossche to make sure I understand: if **_any**_ column in the original `df` is of object type, then the series will be object type? Is the same also true of float/int types (with float taking precedence)?\n\nThis is the original `df.info()`:\n\n```\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 198906 entries, 10010201001 to 560419754006\nData columns (total 62 columns):\nID                   198906 non-null int64\nBKGP_ID              198906 non-null int64\nCITY_NAME            198906 non-null object\nSTATE                198906 non-null object\nSTATE_ID             198906 non-null int64\nCITY_ID              198906 non-null int64\nCOUNTY_ID            198906 non-null int64\nTRACT_ID             198906 non-null int64\nACSTOTPOP            198906 non-null int64\nACSTOTHH             198906 non-null int64\nACSHINC0             198906 non-null int64\nACSHINC10            198906 non-null int64\n... more int64\nACSHINC200           198906 non-null int64\nACSMEDHINC           198705 non-null float64\nACSHHAPOV            198906 non-null int64\nACSHHBPOV            198906 non-null int64\nACSTOTHH_CITY        198906 non-null int64\nACSHINC0_CITY        198906 non-null int64\nACSHINC10_CITY       198906 non-null int64\n... more int64\nACSHINC200_CITY      198906 non-null int64\nACSHINC0_WEIGHT      198906 non-null float64\nACSHINC10_WEIGHT     198906 non-null float64\n.... more float64\nACSHINC200_WEIGHT    198906 non-null float64\ndtypes: float64(17), int64(43), object(2)\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52046927",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52046927",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52046927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ2OTI3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:24:57Z",
    "updated_at": "2014-08-13T13:24:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@joehand you are taking a cross section (e.g. a row), so by definition it will have the dtype that holds all of the data (so if you only have floats/int it will be float). if their are any objects then it would be object.\n\nyou can subselect of course to avoid this (e.g. use `.select_dtypes` for example) to select non-object columns if you want.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52047236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52047236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52047236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ3MjM2",
    "user": {
      "login": "joehand",
      "id": 684965,
      "node_id": "MDQ6VXNlcjY4NDk2NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/684965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joehand",
      "html_url": "https://github.com/joehand",
      "followers_url": "https://api.github.com/users/joehand/followers",
      "following_url": "https://api.github.com/users/joehand/following{/other_user}",
      "gists_url": "https://api.github.com/users/joehand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joehand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joehand/subscriptions",
      "organizations_url": "https://api.github.com/users/joehand/orgs",
      "repos_url": "https://api.github.com/users/joehand/repos",
      "events_url": "https://api.github.com/users/joehand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joehand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:27:37Z",
    "updated_at": "2014-08-13T13:27:37Z",
    "author_association": "NONE",
    "body": "Ah okay, that makes more sense. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52047597",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52047597",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52047597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ3NTk3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:30:24Z",
    "updated_at": "2014-08-13T13:30:24Z",
    "author_association": "MEMBER",
    "body": "@joehand just to add to the mix\n\nThe reason they are converted to object is that the  object dtype is the only dtype that can hold _any_ scalar value so if eg you have float int and string columns then object can contain them all. The downside of being so generic is that it's inefficient but doing this should be very rare. I know as a user of pandas that I rarely need to access rows of mixed type frames. Usually you can do your operation without having to do this. That said sometimes you need to\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52048442",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52048442",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52048442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ4NDQy",
    "user": {
      "login": "joehand",
      "id": 684965,
      "node_id": "MDQ6VXNlcjY4NDk2NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/684965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joehand",
      "html_url": "https://github.com/joehand",
      "followers_url": "https://api.github.com/users/joehand/followers",
      "following_url": "https://api.github.com/users/joehand/following{/other_user}",
      "gists_url": "https://api.github.com/users/joehand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joehand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joehand/subscriptions",
      "organizations_url": "https://api.github.com/users/joehand/orgs",
      "repos_url": "https://api.github.com/users/joehand/repos",
      "events_url": "https://api.github.com/users/joehand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joehand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:37:09Z",
    "updated_at": "2014-08-13T13:37:09Z",
    "author_association": "NONE",
    "body": "@cpcloud yes, after running the fixed code I have found out it's very very slow =(. Would sub-selecting before using apply make this faster? Or is there a better way to do these two calculations?\n\n```\ndef calculate_H(row, dkl=False):\n    pk = np.histogram(row.filter(regex=INC_BIN_REGEX), bins=16)[0]\n    if dkl:\n        qk = row.filter(regex=INC_BIN_REGEX[:-1] + '_CITY').values.astype(float)\n        return stats.entropy(pk, qk, base=2)\n    else:\n        return stats.entropy(pk, base=2)\n\ndf['H_yl'] = df.apply(calculate_H, axis=1)\ndf['DKL_yl'] = df.apply(calculate_H, dkl=True, axis=1)\n```\n\nI haven't quite dug into to see what the slow part is... I have a feeling the entropy calculation is the bulk of the time.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52049032",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52049032",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52049032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ5MDMy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:41:44Z",
    "updated_at": "2014-08-13T13:41:44Z",
    "author_association": "MEMBER",
    "body": "This is easily vectorizable I think. When I'm near a computer I can show you how. Row by row is slow so select the columns you want then call entropy (assuming that works on arrays) on those rows. You may have to transpose in there somewhere. Once i get to a machine I'll put up some code. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52049210",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52049210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52049210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ5MjEw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:43:07Z",
    "updated_at": "2014-08-13T13:43:07Z",
    "author_association": "MEMBER",
    "body": "Can you put up a sample of your data somewhere that i can play around with. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52049958",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52049958",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52049958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDQ5OTU4",
    "user": {
      "login": "joehand",
      "id": 684965,
      "node_id": "MDQ6VXNlcjY4NDk2NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/684965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joehand",
      "html_url": "https://github.com/joehand",
      "followers_url": "https://api.github.com/users/joehand/followers",
      "following_url": "https://api.github.com/users/joehand/following{/other_user}",
      "gists_url": "https://api.github.com/users/joehand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joehand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joehand/subscriptions",
      "organizations_url": "https://api.github.com/users/joehand/orgs",
      "repos_url": "https://api.github.com/users/joehand/repos",
      "events_url": "https://api.github.com/users/joehand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joehand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:49:07Z",
    "updated_at": "2014-08-13T13:49:48Z",
    "author_association": "NONE",
    "body": "Sure, I will put up some data. \n\nI couldn't quite wrap my head around how to vectorize it with the `np.histogram` in there.\n\nAs it is, it takes about 1.5sec per 1000 rows (with 200,000 rows total) to do both the KL Divergence and Entropy calculations together. So I am sure there is room for improvement.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52050700",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52050700",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52050700,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDUwNzAw",
    "user": {
      "login": "joehand",
      "id": 684965,
      "node_id": "MDQ6VXNlcjY4NDk2NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/684965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joehand",
      "html_url": "https://github.com/joehand",
      "followers_url": "https://api.github.com/users/joehand/followers",
      "following_url": "https://api.github.com/users/joehand/following{/other_user}",
      "gists_url": "https://api.github.com/users/joehand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joehand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joehand/subscriptions",
      "organizations_url": "https://api.github.com/users/joehand/orgs",
      "repos_url": "https://api.github.com/users/joehand/repos",
      "events_url": "https://api.github.com/users/joehand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joehand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T13:54:37Z",
    "updated_at": "2014-08-13T14:00:07Z",
    "author_association": "NONE",
    "body": "[Here is a sample](https://dl.dropboxusercontent.com/u/34000599/ACS_DATA_SAMPLE.csv) of the data with 1790 rows (one city, Denver).\n\nIn the code I posed above `INC_BIN_REGEX = '^ACSHINC([0-9])+$'` (the income bins). In the KL Divergence calculation the `qk` is equal to the distribution across all the income bins for **each city,** which I had calculated ahead of time, e.g. `ACSHINC100_CITY` is the sum of `ACSHINC100` for all rows in each city.\n\nThanks for any help, I am still pretty new to Pandas but will be using it a lot in the future!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52105356",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8009#issuecomment-52105356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8009",
    "id": 52105356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMTA1MzU2",
    "user": {
      "login": "joehand",
      "id": 684965,
      "node_id": "MDQ6VXNlcjY4NDk2NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/684965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joehand",
      "html_url": "https://github.com/joehand",
      "followers_url": "https://api.github.com/users/joehand/followers",
      "following_url": "https://api.github.com/users/joehand/following{/other_user}",
      "gists_url": "https://api.github.com/users/joehand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joehand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joehand/subscriptions",
      "organizations_url": "https://api.github.com/users/joehand/orgs",
      "repos_url": "https://api.github.com/users/joehand/repos",
      "events_url": "https://api.github.com/users/joehand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joehand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T20:23:52Z",
    "updated_at": "2014-08-13T20:26:01Z",
    "author_association": "NONE",
    "body": "@cpcloud I may have figured out the quicker calculations (by accident, of course):\n\n```\nH = stats.entropy(df.filter(regex=INC_BIN_REGEX).transpose(), base=2)\nDKL = stats.entropy(df.filter(regex=INC_BIN_REGEX).transpose(), \n                        df.filter(regex=INC_BIN_REGEX[:-1] + '_CITY').transpose(), base=2)\n```\n\nBut I am getting slightly different values than before. I think this may simply because I am not longer using `np.histogram` with 16 bins, so I am getting a finer resolution. I'll need to check this...\n\nI also need to do the entropy & DKL calculations the other way (across all income bins, instead of rows); but I think I can just do a `groupby('CITY_NAME')` and drop the transpose with the above equation.\n"
  }
]
