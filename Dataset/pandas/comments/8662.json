[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60817948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8662#issuecomment-60817948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8662",
    "id": 60817948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODE3OTQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T19:38:53Z",
    "updated_at": "2014-10-28T19:38:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not really sure what you are trying to do. This will get you started.\n\n```\nIn [52]: dfs = df.sort(['InvestorID','CurrentPeriodEnd'],ascending=[1, 0])\n\nIn [53]: dfs\nOut[53]: \n  CurrentPeriodEnd Investor  InvestorID  PriorPeriodEnd\n0        7/31/2014      AAA           6             NaN\n1        5/31/2014      AAA           6             NaN\n2        7/31/2014      BBB          17             NaN\n3        5/31/2014      BBB          17             NaN\n4        7/31/2014      CCC          19             NaN\n5        5/31/2014      CCC          19             NaN\n6        7/31/2014      EEE          30             NaN\n7        7/31/2014      FFF          40             NaN\n\nIn [54]: indexer = dfs.groupby(['Investor']).head(1).index\n\nIn [55]: dfs.groupby(['Investor']).head(1)      \nOut[55]: \n  CurrentPeriodEnd Investor  InvestorID  PriorPeriodEnd\n0        7/31/2014      AAA           6             NaN\n2        7/31/2014      BBB          17             NaN\n4        7/31/2014      CCC          19             NaN\n6        7/31/2014      EEE          30             NaN\n7        7/31/2014      FFF          40             NaN\n\nIn [56]: indexer = dfs.groupby(['Investor']).head(1).index\n\nIn [57]: dfs.loc[indexer,'PriorPeriodEnd'] = dfs.CurrentPeriodEnd\n\nIn [58]: dfs\nOut[58]: \n  CurrentPeriodEnd Investor  InvestorID PriorPeriodEnd\n0        7/31/2014      AAA           6      7/31/2014\n1        5/31/2014      AAA           6            NaN\n2        7/31/2014      BBB          17      7/31/2014\n3        5/31/2014      BBB          17            NaN\n4        7/31/2014      CCC          19      7/31/2014\n5        5/31/2014      CCC          19            NaN\n6        7/31/2014      EEE          30      7/31/2014\n7        7/31/2014      FFF          40      7/31/2014\n```\n\nYour function doesn't work because you have duplicates in `x` so the indexing of the column returns returns multiple values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60818261",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8662#issuecomment-60818261",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8662",
    "id": 60818261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODE4MjYx",
    "user": {
      "login": "lamakaha",
      "id": 9436935,
      "node_id": "MDQ6VXNlcjk0MzY5MzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9436935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lamakaha",
      "html_url": "https://github.com/lamakaha",
      "followers_url": "https://api.github.com/users/lamakaha/followers",
      "following_url": "https://api.github.com/users/lamakaha/following{/other_user}",
      "gists_url": "https://api.github.com/users/lamakaha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lamakaha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lamakaha/subscriptions",
      "organizations_url": "https://api.github.com/users/lamakaha/orgs",
      "repos_url": "https://api.github.com/users/lamakaha/repos",
      "events_url": "https://api.github.com/users/lamakaha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lamakaha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T19:41:03Z",
    "updated_at": "2014-10-28T19:41:03Z",
    "author_association": "NONE",
    "body": "when i change my function not to update back the first row but rather a copy of the first row it works as expected but shouldn't it work even when i update the first row directly in apply?\n\ndef f(x):\n    top_row=pd.Series(x.iloc[0])\n    if len(x) >1:  \n       top_row.iloc[x.columns.get_loc('PriorPeriodEnd')]=x.iloc[1,x.columns.get_loc('CurrentPeriodEnd')] \n    return top_row\n\n   CurrentPeriodEnd Investor  InvestorID PriorPeriodEnd\n0        7/31/2014      AAA           6      5/31/2014\n1        7/31/2014      BBB          17      5/31/2014\n2        7/31/2014      CCC          19      5/31/2014\n3        7/31/2014      EEE          30            NaN\n4        7/31/2014      FFF          40            NaN\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60818969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8662#issuecomment-60818969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8662",
    "id": 60818969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODE4OTY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T19:45:43Z",
    "updated_at": "2014-10-28T19:45:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "their is some detection logic to see if you have mutated the return from groupby-apply. in general this is not a good (and is completely a non-performant soln). This might be an edge case, but since you have duplicates and you are not handling them this is not a bug.\n\nYou don't want to mutate things, its bad practice and can lead to very subtle issues.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60820778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8662#issuecomment-60820778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8662",
    "id": 60820778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODIwNzc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T19:56:53Z",
    "updated_at": "2014-10-28T19:56:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "tell you what. I'll mark it as a bug. can you update the top of the issue with 2 examples both copy-pastable that should yield the same results?\n\nand if you want to look at it would be great! (those 2 examples are basically the tests). I won't have time for a while.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60860279",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8662#issuecomment-60860279",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8662",
    "id": 60860279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODYwMjc5",
    "user": {
      "login": "lamakaha",
      "id": 9436935,
      "node_id": "MDQ6VXNlcjk0MzY5MzU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/9436935?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lamakaha",
      "html_url": "https://github.com/lamakaha",
      "followers_url": "https://api.github.com/users/lamakaha/followers",
      "following_url": "https://api.github.com/users/lamakaha/following{/other_user}",
      "gists_url": "https://api.github.com/users/lamakaha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lamakaha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lamakaha/subscriptions",
      "organizations_url": "https://api.github.com/users/lamakaha/orgs",
      "repos_url": "https://api.github.com/users/lamakaha/repos",
      "events_url": "https://api.github.com/users/lamakaha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lamakaha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-29T01:26:55Z",
    "updated_at": "2014-10-29T01:26:55Z",
    "author_association": "NONE",
    "body": "thanks for looking into this. I have updated the top comment with both versions of the function - one which mutates and doesn't work and the other one which copies and works. I still don't understand where the duplicates come into play? Once the dataframe is split into groups by investor id, I don't have any duplicates in x - neither indexes nor columns. I'm using positional reference iloc to set values of the first row with values of the second row. Also I debugged this code and it picks up singular values (in my case dates) both from the assignor and assignee (once the assignment of the value is made). I also used the print statements within the apply function and everything is printing as expected. If you could clarify or demonstrate where I have duplicates in x, it would be great\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60860930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8662#issuecomment-60860930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8662",
    "id": 60860930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODYwOTMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-29T01:35:28Z",
    "updated_at": "2014-10-29T01:35:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "on 2nd thought, I think this is almost the same bug as #8467 (but in a different case). So should be straightforward to fix (I think).\n\nwant to give a shot? \n\nbasically step thru the code with the working one, and note what is happening (in the reassembly portion).\nThen do the same for the non-working. It is probably something simple. If its not or you get stuck, lmk.\n"
  }
]
