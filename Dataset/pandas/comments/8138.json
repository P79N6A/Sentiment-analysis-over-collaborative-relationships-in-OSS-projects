[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53876979",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8138#issuecomment-53876979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8138",
    "id": 53876979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODc2OTc5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-29T13:44:23Z",
    "updated_at": "2014-08-29T13:44:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "IIRC this is the defined behavior as the compressed space (e.g. when you have 2 or more levels the space is effectively the cartesian product) is returned.\n\n I guess in this case that might be desirable. Interested in digging in? I suppose you could provide an option to the describe function (which actually would need to be defined in groupby rather than be delegated) to provide this, as I don't think you can do this by default.\n\nOr could provide an option in the groupby itself, though by definition NA groups are not returned in general (that's a bigger issue).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53879826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8138#issuecomment-53879826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8138",
    "id": 53879826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODc5ODI2",
    "user": {
      "login": "aimboden",
      "id": 8589139,
      "node_id": "MDQ6VXNlcjg1ODkxMzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8589139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aimboden",
      "html_url": "https://github.com/aimboden",
      "followers_url": "https://api.github.com/users/aimboden/followers",
      "following_url": "https://api.github.com/users/aimboden/following{/other_user}",
      "gists_url": "https://api.github.com/users/aimboden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aimboden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aimboden/subscriptions",
      "organizations_url": "https://api.github.com/users/aimboden/orgs",
      "repos_url": "https://api.github.com/users/aimboden/repos",
      "events_url": "https://api.github.com/users/aimboden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aimboden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-29T14:06:06Z",
    "updated_at": "2014-08-29T14:06:06Z",
    "author_association": "NONE",
    "body": "Thanks for the quick reply. Unfortunately, I am a mere user and I think that I am really lacking the knowledge required to try and do something about it.\n\nI thought that, by NA groups, one meant groups based on a NA key, not empty groups based on existing keys? If that is the behaviour that we want, then I guess that the single key grouping deserves a change to remove the empty group.\n\nIf however, we want to provide a way to get around this issue for the multilevel keys (i.e keep the empty groups, which seems desirable in this case) by adding an option to the groupby item, then I guess there is trickier work involved?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53880935",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8138#issuecomment-53880935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8138",
    "id": 53880935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzODgwOTM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-29T14:14:26Z",
    "updated_at": "2014-08-29T14:14:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "on 2nd thought this may be a special case as you have a categorical grouper and which overrides this behavior I think (in the single grouper but maybe not for multi grouping)\ncc @JanSchulz\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53993318",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8138#issuecomment-53993318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8138",
    "id": 53993318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTkzMzE4",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-31T16:34:03Z",
    "updated_at": "2014-08-31T16:34:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Will look into this...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56371509",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8138#issuecomment-56371509",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8138",
    "id": 56371509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzcxNTA5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T13:23:06Z",
    "updated_at": "2014-09-22T13:23:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not sure what is happening here, but this now passes: \n\n``` python\n    def test_groupby_categorical_two_columns(self):\n\n        # https://github.com/pydata/pandas/issues/8138\n        d = {'cat': pd.Categorical([\"a\",\"b\",\"a\",\"b\"], categories=[\"a\", \"b\", \"c\"]),\n             'ints': [1, 1, 2, 2],'val': [10, 20, 30, 40]}\n        test = pd.DataFrame(d)\n\n        # Grouping on a single column\n        groups_single_key = test.groupby(\"cat\")\n        res = groups_single_key.agg('mean')\n        exp = DataFrame({\"ints\":[1.5,1.5,np.nan], \"val\":[20,30,np.nan]},\n                        index=pd.Index([\"a\", \"b\", \"c\"], name=\"cat\"))\n        tm.assert_frame_equal(res, exp)\n\n        # Grouping on two columns\n        groups_double_key = test.groupby([\"cat\",\"ints\"])\n        res = groups_double_key.agg('mean')\n        exp = DataFrame({\"val\":[10,30,20,40,np.nan,np.nan],\n                         \"cat\": [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\"],\n                         \"ints\": [1,2,1,2,1,2]}).set_index([\"cat\",\"ints\"])\n        tm.assert_frame_equal(res, exp)\n\n        d = {'C1': [3, 3, 4, 5], 'C2': [1, 2, 3, 4], 'C3': [10, 100, 200, 34]}\n        test = pd.DataFrame(d)\n        values = pd.cut(test['C1'], [1, 2, 3, 6])\n        values.name = \"cat\"\n        groups_double_key = test.groupby([values,'C2'])\n\n        res = groups_double_key.agg('mean')\n        nan = np.nan\n        idx = MultiIndex.from_product([[\"(1, 2]\", \"(2, 3]\", \"(3, 6]\"],[1,2,3,4]],\n                                      names=[\"cat\", \"C2\"])\n        exp = DataFrame({\"C1\":[nan,nan,nan,nan,  3,  3,nan,nan, nan,nan,  4, 5],\n                         \"C3\":[nan,nan,nan,nan, 10,100,nan,nan, nan,nan,200,34]}, index=idx)\n        tm.assert_frame_equal(res, exp)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56371629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8138#issuecomment-56371629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8138",
    "id": 56371629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzcxNjI5",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-22T13:24:06Z",
    "updated_at": "2014-09-22T13:24:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I will commit this unittest in the categorical fixup PR.\n"
  }
]
