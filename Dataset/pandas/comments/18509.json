[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347060531",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18509#issuecomment-347060531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18509",
    "id": 347060531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA2MDUzMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T02:06:46Z",
    "updated_at": "2017-11-27T02:06:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jschendel yeah [7], and [8] 'work' but should be the correct type (bug I introduced). The others are not well tested (cat / interval), so not surprising they are wrong. [6] also not tested well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347114489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18509#issuecomment-347114489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18509",
    "id": 347114489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzExNDQ4OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T08:47:31Z",
    "updated_at": "2017-11-27T08:47:31Z",
    "author_association": "MEMBER",
    "body": "Repeating my comment from https://github.com/pandas-dev/pandas/pull/18491 here:\r\n\r\nI am not sure I find this special casing a good idea. I would rather keep `.map` 'dummy' and simply create a new index/series from the newly created values, without trying to infer anything more than `pd.Index(..)` / `pd.Series(..)` already does. \r\n\r\nDo you have a specific use case for this? (for wanting to be smart?) \r\nI think the user can always change the dtype after doing the map if it wants something specific or to preserve the index."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347118370",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18509#issuecomment-347118370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18509",
    "id": 347118370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzExODM3MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T09:03:42Z",
    "updated_at": "2017-11-27T09:03:42Z",
    "author_association": "MEMBER",
    "body": "To further clarify: I think we are just trying to be too smart here, introducing a lot of corner cases. I would say: just let the user handle this (if he/she wants to retain the index type, he/she can simply wrap the map call in the appropriate index type). \r\n\r\nSo what is the rationale of trying to keep the index type in case of all-NaNs ? Because you think a user typically uses `map` to create a new index of the same type but with different values? And it such a case that your DatetimeIndex becoming a FloatIndex is suprising? \r\nIn my personal use cases of `map`, I am typically not interested in preserving the index type, as my functions typically return something completely different (in terms of dtype). In that case, this \"trying to preserve the dtype\" can also give unexpected results the other way around. Assume I have a function that returns floats, but for some reason for the index I have, only returns np.nans:\r\n\r\n```\r\nIn [44]: pd.date_range(\"2010-01-01\", periods=3, freq='A').map(lambda x: np.nan if x.year > 2010 else 1)\r\nOut[44]: Float64Index([1.0, nan, nan], dtype='float64')\r\n\r\nIn [45]: pd.date_range(\"2011-01-01\", periods=3, freq='A').map(lambda x: np.nan if x.year > 2010 else 1)\r\nOut[45]: DatetimeIndex(['NaT', 'NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\r\n```\r\n\r\nIn that case I, unexpectedly, get a DatetimeIndex instead of a FloatIndex.\r\n\r\nTo put it differently, we wouldn't distinguish a NaN and NaT return:\r\n\r\n```\r\nIn [39]: pd.date_range(\"2012-01-01\", periods=3).map(lambda x: pd.NaT)\r\nOut[39]: DatetimeIndex(['NaT', 'NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\r\n\r\nIn [40]: pd.date_range(\"2012-01-01\", periods=3).map(lambda x: np.nan)\r\nOut[40]: DatetimeIndex(['NaT', 'NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\r\n```\r\n\r\nAlso, you added a special case of trying to preserve uint64 data type for Uint64Index. Shouldn't we then do this for Series with different dtypes as well?\r\n\r\nAnd about [1] (first example at the top) being a bug: this has always been the behaviour, so if we change this I would see it as a API breaking change rather than a bug fix."
  }
]
