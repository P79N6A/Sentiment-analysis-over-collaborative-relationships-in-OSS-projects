[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14815463",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-14815463",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 14815463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODE1NDYz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-13T00:48:30Z",
    "updated_at": "2013-03-13T00:49:16Z",
    "author_association": "NONE",
    "body": "Let's try this with just a straight integer range as input data:\n\n``` python\nIn [20]: ser = pd.Series(range(10))\n    ...: df = pd.DataFrame(ser)\n    ...: N=3\n    ...: df['rc'] = pd.rolling_count(ser, N, center=True)\n    ...: df['rm'] = pd.rolling_mean(ser, N, center=True)\n    ...: df['rm_min_1'] = pd.rolling_mean(ser, N, center=True, min_periods=1)\n    ...: def movingaverage(interval, window_size):\n    ...:     window = numpy.ones(int(window_size))/float(window_size)\n    ...:     return numpy.convolve(interval, window, 'same')\n    ...: \n    ...: df['ma'] = movingaverage(ser, N)\n    ...: df\nOut[20]: \n   0  rc  rm  rm_min_1        ma\n0  0   2 NaN       0.5  0.333333\n1  1   3   1       1.0  1.000000\n2  2   3   2       2.0  2.000000\n3  3   3   3       3.0  3.000000\n4  4   3   4       4.0  4.000000\n5  5   3   5       5.0  5.000000\n6  6   3   6       6.0  6.000000\n7  7   3   7       7.0  7.000000\n8  8   3   8       8.0  8.000000\n9  9   0 NaN       NaN  5.666667\n\nIn [21]: \n```\n\nnumpy and pandas agree on points away from the boundary, \nand the numpy docstring warns you about boundary effects,\nbehavior there being a matter of convention rather then definition.\n\nThis looks as it should be to me, can you be more specific\nabout the behaviour you expected to see?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14828291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-14828291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 14828291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODI4Mjkx",
    "user": {
      "login": "bmu",
      "id": 1622906,
      "node_id": "MDQ6VXNlcjE2MjI5MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1622906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmu",
      "html_url": "https://github.com/bmu",
      "followers_url": "https://api.github.com/users/bmu/followers",
      "following_url": "https://api.github.com/users/bmu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmu/subscriptions",
      "organizations_url": "https://api.github.com/users/bmu/orgs",
      "repos_url": "https://api.github.com/users/bmu/repos",
      "events_url": "https://api.github.com/users/bmu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-13T07:42:43Z",
    "updated_at": "2013-03-13T07:43:56Z",
    "author_association": "NONE",
    "body": "I would expect that `df.ix[9,'rc']` would be 2 and that `df.ix[9, 'rm_min_1']` would be 8.5.\n\nBasically my problem is, that the window size is not computed as expected at the end of the series.\nAs I have nan's in my data (that's the reason for the `min_period` in my previous example) I include an nan here:\n\n``` python\nIn [55]: ser = pd.Series(range(10), dtype='float')\n\nIn [56]: ser[8] = np.nan\n\nIn [57]: pd.rolling_count(ser, 5, center=True)\nOut[57]: \n0    3\n1    4\n2    5\n3    5\n4    5\n5    5\n6    4\n7    4\n8    0\n9    0\n```\n\nIf the window would be centred around the index I would expect the same results as for `ser.ix[i-2:i+2]` in\nthe case of a window size of 5:\n\n``` python\nIn [47]: for i in range(10):\n    print 'Count for ser[%2d:%2d]: %d' % (i - 2, i + 2, ser.ix[i-2:i+2].count())\n   ....:     \nCount for ser[-2: 2]: 3\nCount for ser[-1: 3]: 4\nCount for ser[ 0: 4]: 5\nCount for ser[ 1: 5]: 5\nCount for ser[ 2: 6]: 5\nCount for ser[ 3: 7]: 5\nCount for ser[ 4: 8]: 4\nCount for ser[ 5: 9]: 4\nCount for ser[ 6:10]: 3\nCount for ser[ 7:11]: 2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14842310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-14842310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 14842310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODQyMzEw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-13T13:56:32Z",
    "updated_at": "2013-03-13T13:56:32Z",
    "author_association": "NONE",
    "body": "yep, I see it. the start and end are inconsistent in how they treat missing datums.\nmarking as bug.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15062371",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15062371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15062371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDYyMzcx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-18T15:47:37Z",
    "updated_at": "2013-03-18T15:50:59Z",
    "author_association": "NONE",
    "body": "@jreback , take a look at  8bd09ac, I started working on this but it's tricky\nand I won't have time to finish soon.\n\ncurrently, the way this works is by running the function as usual, and then shifting the result\n(in `moment.py:_center_window`), this leavs missing values at the end, and mis-normalized\nvalues in the beginning (at least for rolling_mean it invalidates the original calc, \nsee 0.5 instead of 0.333 in example).\n\npadding a numpy array is a problem because of copying, and I was having a hell\nof a time generalizing the 1d case I did to nd. plus there are a bunch of broken\ntests by this fix, and need to sift to see which are wrong test vectors and which real problems.\n\nIf you care, give this a shot, I can't come back to this for a while.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15076054",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15076054",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15076054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDc2MDU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-18T19:24:17Z",
    "updated_at": "2013-03-18T19:24:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p i will take a look....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15088544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15088544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15088544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDg4NTQ0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-18T23:21:50Z",
    "updated_at": "2013-03-18T23:21:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p \n\nok got almost everything to work, just some minor logic issues, rolling_kurt/skew needed some mods;\nadded support for ndim>1 was easy\n\neverything passes (only modded 1 test, which I think is right), except rolling_count, I am a bit unclear why its not exactly working, but have to leave you something !\n\ndb78efb3d39d525caae4a6dd66b6b6f5effb5a6f (my fork, cmov branch)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15146063",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15146063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15146063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ2MDYz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-19T21:58:48Z",
    "updated_at": "2013-03-19T22:15:39Z",
    "author_association": "NONE",
    "body": "Ok, looked at your fix jeff. you took it further, but still plenty of issues.\n\n``` python\nIn [1]: In [20]: ser = pd.Series(range(10))\n   ...:     ...: df = pd.DataFrame(ser)\n   ...:     ...: N=3\n   ...:     ...: df['rc'] = pd.rolling_count(ser, N, center=True)\n   ...:     ...: df['rm'] = pd.rolling_mean(ser, N, center=True)\n   ...:     ...: df['rm_min_1'] = pd.rolling_mean(ser, N, center=True, min_periods=1)\n   ...:     ...: def movingaverage(interval, window_size):\n   ...:     ...:     window = numpy.ones(int(window_size))/float(window_size)\n   ...:     ...:     return numpy.convolve(interval, window, 'same')\n   ...:     ...: \n   ...:     ...: df['ma'] = movingaverage(ser, N)\n   ...:     ...: df\nOut[1]: \n   0  rc        rm  rm_min_1        ma\n0  0   0  0.333333       NaN  0.333333\n1  1   0  1.000000       NaN  1.000000\n2  2   1  2.000000         2  2.000000\n3  3   2  3.000000         3  3.000000\n4  4   3  4.000000         4  4.000000\n5  5   3  5.000000         5  5.000000\n6  6   3  6.000000         6  6.000000\n7  7   3  7.000000         7  7.000000\n8  8   3  8.000000         8  8.000000\n9  9   2  5.666667       NaN  5.666667\n```\n\ncan't explain the weird number formatting, I verified that `rm_min_1` has float64 dtype like \nthe rest of the columns.\n- the nans should be symmetric in `rm_min_1` at both ends (one missing at both ends, or 2, etc')\n- no nans should occur in `rm_min_1` when min_periods=1, 1 (at each end) for (3,2), 3 for(5,4). \n  and 1 for (4,3) ( ...I think. based on numpy's convention of \"center\" for even-length windows)\n- Fairly sure some of the passing tests validate the wrong answer.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15146737",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15146737",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15146737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ2NzM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-19T22:12:07Z",
    "updated_at": "2013-03-19T22:12:07Z",
    "author_association": "CONTRIBUTOR",
    "body": " cherry picked just that commit\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15146951",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15146951",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15146951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTQ2OTUx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-19T22:16:27Z",
    "updated_at": "2013-03-19T22:16:27Z",
    "author_association": "NONE",
    "body": "ok, I'll pick it up where you left off. thanks for taking care of the nd case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15166720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15166720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15166720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTY2NzIw",
    "user": {
      "login": "bmu",
      "id": 1622906,
      "node_id": "MDQ6VXNlcjE2MjI5MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1622906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmu",
      "html_url": "https://github.com/bmu",
      "followers_url": "https://api.github.com/users/bmu/followers",
      "following_url": "https://api.github.com/users/bmu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmu/subscriptions",
      "organizations_url": "https://api.github.com/users/bmu/orgs",
      "repos_url": "https://api.github.com/users/bmu/repos",
      "events_url": "https://api.github.com/users/bmu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T10:06:05Z",
    "updated_at": "2013-03-20T10:06:05Z",
    "author_association": "NONE",
    "body": "at first, thanks for your work. \n\nI just thought about how to \"do it right\" if we have an even window for a centered moving window: in the \"engineering statisitics handbook\" of the NIST a double smoothing is done (http://www.itl.nist.gov/div898/handbook/pmc/section4/pmc422.htm). \nNot sure, how other libraries (some equivalent functions like [`rollmean`](http://rss.acs.unt.edu/Rdoc/library/zoo/html/rollmean.html) and [`rollapply`](http://rss.acs.unt.edu/Rdoc/library/zoo/html/rollapply.html) are included in the R zoo package) handle this. Also I'm not sure, if ARMA models (statsmodels) use centered windows and how they do it.\n\nI know that this will further complicate these functions (and make them slower, maybe cython would be a better option for computing such windows?), however even windows seems to be quite common (you would usually read \"We use a 10-year moving average\" instead of \"We use an 11-year moving average\" in publications).\n\nI don't want to over-complicate things, what do you think about this? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15178277",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15178277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15178277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MTc4Mjc3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-20T14:22:12Z",
    "updated_at": "2013-03-22T07:25:05Z",
    "author_association": "NONE",
    "body": "We'll definitely need to get the basics down before doing anything more fancy.\nthe inner loop of these functions is already written in cython, we just need to\nfix the edges in a way that doesn't have a big impact. correctness first, then performance\nand then enhancements.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15369402",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15369402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15369402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MzY5NDAy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-24T21:16:50Z",
    "updated_at": "2013-03-24T21:16:50Z",
    "author_association": "NONE",
    "body": "moving to 0.12, there are a lot of hairy details involved in the fix, it should\nsit in review for a while.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15397039",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15397039",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15397039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mzk3MDM5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T14:43:57Z",
    "updated_at": "2013-03-25T14:44:39Z",
    "author_association": "NONE",
    "body": "All tests pass for index nlevels =1.\n\nIt's unclear what the right thing to do is with `rolling_mean` at edges, \nshould missing data count as an existing value of 0 , or treated like other\nmissing values, so that mean is computed as `sum/n_notna` rather then `sum/win`\n\nThe numpy code above treats value \"missing\" because they are ooutside the array boundries, \nand nans in the data itself differently. pandas' supports minp to control the behaviour\nof nans in the data itself.\n\n``` python\nIn [18]: def ma(interval, window_size):\n    ...:     window = numpy.ones(int(window_size))/float(window_size)\n    ...:     return numpy.convolve(interval, window, 'same')\n    ...: \n    ...: ser= np.ones(9)\n    ...: ser[len(ser)//2] = np.nan\n    ...: print list(ma(ser,3))\n    ...: print list(pd.rolling_mean(ser,3,2,center=True))\n    ...: print list(pd.rolling_mean(ser,3,3,center=True))\n    ...: print list(pd.rolling_mean(ser,3,1,center=True,pad_val=0))\n[0.66666666666666663, 1.0, 1.0, nan, nan, nan, 1.0, 1.0, 0.66666666666666663]\n[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n[nan, 1.0, 1.0, nan, nan, nan, 1.0, 1.0, nan]\n[0.66666666666666663, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.66666666666666663]\n```\n\nAs you can see, it's difficult to reproduce numpy's behaviour, since `minp=win`\ninevitably produces nans at the edges as well as in the center. \nPerhaps this is actually more consistent.\n\n`pad_val` is an API change, and i'm not sure whether it's a good idea. for one thing,\nwe'll have to backport this to uncentered roll_functions (expanding_\\* as well?)\nand the code is already pretty tangled.\n\nFeedback welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15397285",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15397285",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15397285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mzk3Mjg1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T14:48:10Z",
    "updated_at": "2013-03-25T14:48:10Z",
    "author_association": "NONE",
    "body": "@jreback, I cp'd your changes to roll_skew/roll_kurt as-is, I need to know if the\nguard  you put in against the ZeroDivision needs to have the results validated, \nor did you already do that?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15398593",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15398593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15398593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mzk4NTkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T15:07:53Z",
    "updated_at": "2013-03-25T15:07:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p I didn't do a test if that's what you are asking, but its already tested by comparing vs kurt/skew in any event\nthis only comes up in the centering becuase the nobs can change and potentially go to 0, it should have been there before in any event, just probably never got called with 0 nobs\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15401505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15401505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15401505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDAxNTA1",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-25T15:51:54Z",
    "updated_at": "2013-03-25T15:51:59Z",
    "author_association": "NONE",
    "body": "Thanks, I'll do a spot check, but should be fine.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15698461",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-15698461",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 15698461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Njk4NDYx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-31T21:40:09Z",
    "updated_at": "2013-03-31T21:40:09Z",
    "author_association": "NONE",
    "body": "@bmu, can you try out #3161 and report any issues?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16885907",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2953#issuecomment-16885907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2953",
    "id": 16885907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODg1OTA3",
    "user": {
      "login": "bmu",
      "id": 1622906,
      "node_id": "MDQ6VXNlcjE2MjI5MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1622906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmu",
      "html_url": "https://github.com/bmu",
      "followers_url": "https://api.github.com/users/bmu/followers",
      "following_url": "https://api.github.com/users/bmu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmu/subscriptions",
      "organizations_url": "https://api.github.com/users/bmu/orgs",
      "repos_url": "https://api.github.com/users/bmu/repos",
      "events_url": "https://api.github.com/users/bmu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-23T20:56:16Z",
    "updated_at": "2013-04-23T20:56:37Z",
    "author_association": "NONE",
    "body": "I didn't see an issues for my examples and some more tests.\n\nSome thoughts:\n- not sure about `pad_val`, maybe using a fixed nan (no argument at all) would be simpler\n- I can't get how the default `min_periods` is calculated, maybe this could be documented\n- bottlenecks moving functions seem to be faster (but there are no centered alternatives)\n  \n  ``` python\n  In [83]: s = pd.Series(range(1000), dtype='float')\n  \n  In [84]: s[8] = np.nan\n  \n  In [85]: import bottleneck as bn\n  \n  In [86]: %timeit pd.rolling_mean(s, 3)\n  10000 loops, best of 3: 38 us per loop\n  \n  In [87]: %timeit bn.move_nanmean(s, 3)\n  100000 loops, best of 3: 7.1 us per loop\n  ```\n  \n  As bottleneck is a recommended dependency it could be used in the cases where \n  `center=False`.\n\n(However I`m happy with your solution as it is) \n"
  }
]
