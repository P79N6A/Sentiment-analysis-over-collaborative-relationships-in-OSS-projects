[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22698944",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22698944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22698944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjk4OTQ0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-15T12:03:15Z",
    "updated_at": "2013-08-15T12:03:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "These yield different shapes (which is confusing as you are using a 2x2 frame)\n\nA single list/tuple becomes a column, while a list-of-list yields rows\n\n```\nIn [25]: df = DataFrame(np.arange(6).reshape(3,2))\n\nIn [26]: df>(2,2,2)\nOut[26]: \n       0      1\n0  False  False\n1  False   True\n2   True   True\nI\nn [30]: pd.DataFrame([2,2,2])\nOut[30]: \n   0\n0  2\n1  2\n2  2\n\nIn [31]: pd.DataFrame([[2,2,2]])\nOut[31]: \n   0  1  2\n0  2  2  2\n```\n\n```\nIn [29]: pd.DataFrame(np.array([2,2]))\nOut[29]: \n   0\n0  2\n1  2\n\nIn [27]: df>np.array((2,2))\nOut[27]: \n       0      1\n0  False  False\n1  False   True\n2   True   True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22714108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22714108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22714108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzE0MTA4",
    "user": {
      "login": "ssalonen",
      "id": 315866,
      "node_id": "MDQ6VXNlcjMxNTg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssalonen",
      "html_url": "https://github.com/ssalonen",
      "followers_url": "https://api.github.com/users/ssalonen/followers",
      "following_url": "https://api.github.com/users/ssalonen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssalonen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssalonen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssalonen/subscriptions",
      "organizations_url": "https://api.github.com/users/ssalonen/orgs",
      "repos_url": "https://api.github.com/users/ssalonen/repos",
      "events_url": "https://api.github.com/users/ssalonen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssalonen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-15T17:05:10Z",
    "updated_at": "2013-08-15T17:06:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK I see my example was a bit shady because of the 2x2 size. Here's an example with 3x1 dataframe:\n\n``` python\nIn [10]: df=pd.DataFrame(np.arange(6).reshape((3,2)))\n\nIn [11]: df\nOut[11]:\n   0  1\n0  0  1\n1  2  3\n2  4  5\n```\n\nIf list/tuple really becomes a column, why does not 1D array?\n\n``` python\nIn [12]: df > [2, 2]\nOut[12]:\n      0     1\n0  True  True\n1  True  True\n2  True  True\n```\n\n``` python\nIn [13]: df > np.array([2, 2])\nOut[13]:\n       0      1\n0  False  False\n1  False   True\n2   True   True\n```\n\nI think both should result in the same since both the list and 1D array are... well, 1D objects.\n\nThis would also match what happens with numpy 2D arrays:\n\n``` python\nIn [17]: df.values > [2, 2]\nOut[17]:\narray([[False, False],\n       [False,  True],\n       [ True,  True]], dtype=bool)\n```\n\nSimilar example that confuses me:\n\n``` python\nIn [24]: row_vector = np.atleast_2d([2,2])\nIn [25]: df > row_vector\nOut[25]:\n      0     1\n0  True  True\n1  True  True\n2  True  True\n```\n\n``` python\nIn [26]: df.values > row_vector\nOut[26]:\narray([[False, False],\n       [False,  True],\n       [ True,  True]], dtype=bool)\n```\n\nWould not it be logical in this case that row_vector with shape (1,2) would be broadcasted to (3,2) before comparison?\n\nEDIT: these examples were with pandas 0.12 and numpy 1.7.1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22715217",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22715217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22715217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzE1MjE3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-15T17:22:09Z",
    "updated_at": "2013-08-15T17:22:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually that's not correct\n\na passed `ndarray` is represented as it comes (as it defines rows/columns). \nA tuple or list (which is what you are presenting) is passed as a list-of-lists/tuples.\nThese are rows.\n\n```\nIn [5]: pd.DataFrame([[1,2,3],[4,5,6]])\nOut[5]: \n   0  1  2\n0  1  2  3\n1  4  5  6\n\nIn [6]: pd.DataFrame([1,2,3])\nOut[6]: \n   0\n0  1\n1  2\n2  3\n\nIn [7]: pd.DataFrame([[1,2,3]])\nOut[7]: \n   0  1  2\n0  1  2  3\n```\n\nThis is exactly the same as numpy behavior. There isn't any implicit broadcasting,\n\n```\nIn [13]: np.array([[1,2,3],[4,5,6]])\nOut[13]: \narray([[1, 2, 3],\n       [4, 5, 6]])\n\nIn [14]: np.array([[1,2,3],[4,5,6]]).shape\nOut[14]: (2, 3)\n\nIn [15]: np.array([1,2,3])\nOut[15]: array([1, 2, 3])\n\nIn [16]: np.array([1,2,3]).shape\nOut[16]: (3,)\n\nIn [17]: np.array([[1,2,3]])\nOut[17]: array([[1, 2, 3]])\n\nIn [18]: np.array([[1,2,3]]).shape\nOut[18]: (1, 3)\n```\n\nYou are just passing a list which is a column, that's it.\n\nRemember that since you are not passing an index/columns, pandas has to follow\na defined behavior. If you had passed an index/columns then it WILL align on the index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22754621",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22754621",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22754621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzU0NjIx",
    "user": {
      "login": "mairas",
      "id": 407010,
      "node_id": "MDQ6VXNlcjQwNzAxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/407010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mairas",
      "html_url": "https://github.com/mairas",
      "followers_url": "https://api.github.com/users/mairas/followers",
      "following_url": "https://api.github.com/users/mairas/following{/other_user}",
      "gists_url": "https://api.github.com/users/mairas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mairas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mairas/subscriptions",
      "organizations_url": "https://api.github.com/users/mairas/orgs",
      "repos_url": "https://api.github.com/users/mairas/repos",
      "events_url": "https://api.github.com/users/mairas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mairas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-16T08:44:43Z",
    "updated_at": "2013-08-16T08:44:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would like to disagree about pandas following numpy behaviour here. Firstly, 1d numpy arrays do not have a defined direction - they are just 1d vectors. For example,\n\n``` python\nIn [30]: a = np.array([1,2,3])\n\nIn [31]: a.shape\nOut[31]: (3,)\n\nIn [32]: a\nOut[32]: array([1, 2, 3])\n\nIn [33]: a.T\nOut[33]: array([1, 2, 3])\n\nIn [34]: a==a.T\nOut[34]: array([ True,  True,  True], dtype=bool)\n```\n\nTherefore, it is in my opinion rather dangerous to assume that lists or tuples don't have a shape but that 1d arrays would. I believe they should behave identically.\n\nSecond issue is that numpy does broadcasts with comparison operators, just as ssalonen showed above. I guess it would be OK if pandas didn't, but that should be an explicit and documented deviation from numpy semantics.\n\nThird, regardless of the broadcasts, I believe the comparison operators in pandas are quite broken at the moment:\n\n``` python\nIn [49]: df = pd.DataFrame(np.arange(6).reshape((3,2)))\n\nIn [50]: b = np.array([2, 2])\n\nIn [51]: b_r = np.atleast_2d([2,2])\n\nIn [52]: b_c = b_r.T\n\nIn [53]: df > b\nOut[53]:\n       0      1\n0  False  False\n1  False   True\n2   True   True\n\nIn [54]: df > b_r\nOut[54]:\n      0     1\n0  True  True\n1  True  True\n2  True  True\n\nIn [55]: df > b_c\nOut[55]:\n       0      1\n0  False  False\n1  False   True\n2   True   True\n```\n\nI don't quite understand the element-wise comparisons made in the example above. Some broadcasts are necessarily made, but not in any logical fashion.\n\nAlso, the equality operator should work with the same semantics as greater than. However, it does not:\n\n``` python\nIn [60]: df == b\nOut[60]:\n       0      1\n0  False  False\n1   True  False\n2  False  False\n\nIn [61]: df == b_r\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n[...]\nTypeError: Could not compare [array([[2, 2]])] with block values\n\nIn [62]: df == b_c\nOut[62]:\n       0      1\n0  False  False\n1   True  False\n2  False  False\n```\n\nTo me it would seem that 1d and column vectors behave as broadcast row vectors in the comparison operators, while row vectors are more thoroughly broken. :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22791215",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22791215",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22791215,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzkxMjE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-16T20:20:44Z",
    "updated_at": "2013-08-16T20:20:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok...\n\nso the results from `df>b, df>b_r, df>b_c` should all be all the same?\n\n`df>b_r` has a broadcasting issue (it is very strict and won't allow even a transpose, maybe I can relax it)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22793523",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22793523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22793523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzkzNTIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-16T20:59:00Z",
    "updated_at": "2013-08-16T20:59:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssalonen ok....give a try with #4585\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22857091",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22857091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22857091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODU3MDkx",
    "user": {
      "login": "mairas",
      "id": 407010,
      "node_id": "MDQ6VXNlcjQwNzAxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/407010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mairas",
      "html_url": "https://github.com/mairas",
      "followers_url": "https://api.github.com/users/mairas/followers",
      "following_url": "https://api.github.com/users/mairas/following{/other_user}",
      "gists_url": "https://api.github.com/users/mairas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mairas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mairas/subscriptions",
      "organizations_url": "https://api.github.com/users/mairas/orgs",
      "repos_url": "https://api.github.com/users/mairas/repos",
      "events_url": "https://api.github.com/users/mairas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mairas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-19T08:22:04Z",
    "updated_at": "2013-08-19T08:22:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "> so the results from df>b, df>b_r, df>b_c should all be all the same?\n\nI don't think they should be the same. Rather, unless there any pandas-specific index alignment is performed in the comparisons, the behaviour should follow that of numpy:\n\n``` python\nIn [64]: df.values > b\nOut[64]:\narray([[False, False],\n       [False,  True],\n       [ True,  True]], dtype=bool)\n\nIn [65]: df.values > b_c\n[...]\n\nValueError: operands could not be broadcast together with shapes (3,2) (2,1) \n\nIn [66]: df.values > b_r\nOut[66]:\narray([[False, False],\n       [False,  True],\n       [ True,  True]], dtype=bool)\n```\n\nThe above would seem to indicate that numpy treats 1d vectors as row vectors, so please disregard anything I wrote about it earlier. ;-)\n\nIf you maintain a strong opinion that broadcasts should be avoided, then exceptions should be thrown for df>b and df>b_r, too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22871872",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22871872",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22871872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODcxODcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-19T13:35:12Z",
    "updated_at": "2013-08-19T13:49:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Some color. If the rhs side is a pure-numpy array, there is NO alignment done (as we would\njust be guessing of how to align), so it IS essentially numpy behavior, but errors are caught\nand dealt with. In the current PR, I try the comparison, and if it fails for a broadcasting error\ntry the transpose of the rhs, so you get the (PR behavior, e.g. df>b_r works).\n\nIf I turn off the broadcast catching\n\n`df>b_r` doesn't error as the default for an error is to pass it thru (e.g. if you have an invalid column, say comparing strings and ints or whatever, this can be turned off but is normally on)\n\nI think you would like to see `df>b_r` and `df==b_r` always return an error (whereas the others are ok\nand return the same results)?\n\nSEE THE PR...I updated to so waht I suggested\n\n```\n(Pdb) df>b\n       0      1\n0  False  False\n1  False   True\n2   True   True\n(Pdb) df>b_r\n      0     1\n0  True  True\n1  True  True\n2  True  True\n(Pdb) df>b_c\n       0      1\n0  False  False\n1  False   True\n2   True   True\n```\n\n```\n(Pdb) df == b\n       0      1\n0  False  False\n1   True  False\n2  False  False\n(Pdb) df == b_r\n*** ValueError: Could not compare [array([[2, 2]])] with block values\n(Pdb) df == b_c\n       0      1\n0  False  False\n1   True  False\n2  False  False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/22975846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-22975846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 22975846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTc1ODQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-20T20:38:47Z",
    "updated_at": "2013-08-20T20:38:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mairas did you take a look at the PR? I believe it solves all of the open questions....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23004439",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-23004439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 23004439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDA0NDM5",
    "user": {
      "login": "ssalonen",
      "id": 315866,
      "node_id": "MDQ6VXNlcjMxNTg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssalonen",
      "html_url": "https://github.com/ssalonen",
      "followers_url": "https://api.github.com/users/ssalonen/followers",
      "following_url": "https://api.github.com/users/ssalonen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssalonen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssalonen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssalonen/subscriptions",
      "organizations_url": "https://api.github.com/users/ssalonen/orgs",
      "repos_url": "https://api.github.com/users/ssalonen/repos",
      "events_url": "https://api.github.com/users/ssalonen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssalonen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T09:12:46Z",
    "updated_at": "2013-08-21T09:12:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "To me it looks like we are going to right direction\n\nSince we should have numpy behaviour here (as no alignment is done), expected results should be same as with df.values > x?\n\n``` python\n\ndf.values > b\nOut[247]: \narray([[False, False],\n       [False,  True],\n       [ True,  True]], dtype=bool)\n\ndf.values > b_r\nOut[248]: \narray([[False, False],\n       [False,  True],\n       [ True,  True]], dtype=bool)\n```\n\nNote the different result in the second example above.\n\nIncompatible shapes should result in exception since broadcast is not possible. Numpy does not do automatical transpose in this case which I think is a good thing.\n\n``` python\n\ndf.values > b_c\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-249-4e61d2a85a75> in <module>()\n----> 1 df.values > b_c\n\nValueError: operands could not be broadcast together with shapes (3,2) (2,1) \n```\n\nNumpy implementation is a bit different in == comparison, see the following examples\n\n``` python\n\ndf.values == b\nOut[259]: \narray([[False, False],\n       [ True, False],\n       [False, False]], dtype=bool)\n\ndf.values == b_r\nOut[260]: \narray([[False, False],\n       [ True, False],\n       [False, False]], dtype=bool)\n\ndf.values == b_c\nOut[261]: False\n```\n\nEspecially the final example is interesting; no exception is raised even though inequality comparison raises one.\n\nExamples with numpy 1.6.1\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23021814",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-23021814",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 23021814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDIxODE0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-21T14:39:57Z",
    "updated_at": "2013-08-21T14:39:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [1]: df = DataFrame(np.arange(6).reshape((3,2)))\n\nIn [2]:  b = np.array([2, 2])\n\nIn [3]:  b_r = np.atleast_2d([2,2])\n\nIn [4]:  b_c = b_r.T\n\nIn [5]: df>b\nOut[5]: \n       0      1\n0  False  False\n1  False   True\n2   True   True\n\nIn [6]: df.values>b\nOut[6]: \narray([[False, False],\n       [False,  True],\n       [ True,  True]], dtype=bool)\n\nIn [7]: df>b_r\nOut[7]: \n       0      1\n0  False  False\n1  False   True\n2   True   True\n\nIn [8]: df.values>b_r\nOut[8]: \narray([[False, False],\n       [False,  True],\n       [ True,  True]], dtype=bool)\n\nIn [9]: df>b_c\nValueError: cannot broadcast shape [(3, 2)] with block values [(2, 1)]\n\nIn [10]: df.values>b_c\nValueError: operands could not be broadcast together with shapes (3,2) (2,1) \n\nIn [11]: df == b\nOut[11]: \n       0      1\n0  False  False\n1   True  False\n2  False  False\n\nIn [12]: df.values == b\nOut[12]: \narray([[False, False],\n       [ True, False],\n       [False, False]], dtype=bool)\n\nIn [13]: df==b_r\nOut[13]: \n       0      1\n0  False  False\n1   True  False\n2  False  False\n\nIn [14]: df.values==b_r\nOut[14]: \narray([[False, False],\n       [ True, False],\n       [False, False]], dtype=bool)\n```\n\nNumpy does weird things like this (bottom example), but we will raise\nI believe it is actually a NotImplemented Type which is interpreted as False (but still very weird)\n\n```\nIn [15]: df==b_c\nValueError: cannot broadcast shape [(3, 2)] with block values [(2, 1)]\n\nIn [16]: df.values==b_c\nOut[16]: False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23071266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-23071266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 23071266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDcxMjY2",
    "user": {
      "login": "ssalonen",
      "id": 315866,
      "node_id": "MDQ6VXNlcjMxNTg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/315866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssalonen",
      "html_url": "https://github.com/ssalonen",
      "followers_url": "https://api.github.com/users/ssalonen/followers",
      "following_url": "https://api.github.com/users/ssalonen/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssalonen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssalonen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssalonen/subscriptions",
      "organizations_url": "https://api.github.com/users/ssalonen/orgs",
      "repos_url": "https://api.github.com/users/ssalonen/repos",
      "events_url": "https://api.github.com/users/ssalonen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssalonen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-22T06:38:40Z",
    "updated_at": "2013-08-22T06:38:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that pandas should raise with equals-operator. \n\nThe examples and pull request test cases did not include dataframe comparison to list/tuple. I believe they behave the same way as numpy 1D array, right?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23085808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-23085808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 23085808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDg1ODA4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-22T12:20:07Z",
    "updated_at": "2013-08-22T12:20:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "The examples are there now (in the PR page)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23166409",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-23166409",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 23166409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTY2NDA5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-23T14:16:52Z",
    "updated_at": "2013-08-23T14:16:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mairas @ssalonen what do you think, any more cases?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/23168864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-23168864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 23168864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTY4ODY0",
    "user": {
      "login": "mairas",
      "id": 407010,
      "node_id": "MDQ6VXNlcjQwNzAxMA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/407010?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mairas",
      "html_url": "https://github.com/mairas",
      "followers_url": "https://api.github.com/users/mairas/followers",
      "following_url": "https://api.github.com/users/mairas/following{/other_user}",
      "gists_url": "https://api.github.com/users/mairas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mairas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mairas/subscriptions",
      "organizations_url": "https://api.github.com/users/mairas/orgs",
      "repos_url": "https://api.github.com/users/mairas/repos",
      "events_url": "https://api.github.com/users/mairas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mairas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-08-23T14:54:43Z",
    "updated_at": "2013-08-23T14:54:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry for not replying earlier - saw shiny things elsewhere. :-)\n\nThe semantics look great to me now! Thanks for bearing with us! :-)\n\nCheers,\n\nma.\n\nOn Aug 23, 2013, at 17:17, jreback notifications@github.com wrote:\n\n> @mairas @ssalonen what do you think, any more cases?\n> \n> —\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233154777",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4576#issuecomment-233154777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4576",
    "id": 233154777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzE1NDc3Nw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-16T22:41:18Z",
    "updated_at": "2016-07-16T22:41:18Z",
    "author_association": "MEMBER",
    "body": "The behavior may be changed after #13637. Pls comment if any thoughts.\n"
  }
]
