[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271391394",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271391394",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271391394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTM5MTM5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:00:48Z",
    "updated_at": "2017-01-09T20:00:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is passing thru float\r\n\r\n```\r\nIn [5]: np.int64(11111111111111111).astype(float).astype('int64')\r\nOut[5]: 11111111111111112\r\n```\r\n\r\nvery similar to this\r\n```\r\nIn [7]: df.groupby('index').value.mean()\r\nOut[7]: \r\nindex\r\n1    11111111111111112\r\nName: value, dtype: int64\r\n```\r\n\r\nso even though its cast back it will lose precision.\r\n\r\nnot really sure of a great way to prevent this and simulataneously deal with overflow."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271391540",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271391540",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271391540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTM5MTU0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:01:22Z",
    "updated_at": "2017-01-09T20:01:22Z",
    "author_association": "MEMBER",
    "body": "You can use `pivot` instead of `pivot_table` for now to circumvent this:\r\n\r\n```\r\nIn [6]: df.pivot(index='index', columns='type', values='value')\r\nOut[6]: \r\ntype                   2\r\nindex                   \r\n1      11111111111111111\r\n```\r\n\r\nThe thing is that `pivot_table` takes a mean, and does not just represent the original value, so this is the reason you see the precion error.\r\n\r\n```\r\nIn [10]: df['value'].mean()\r\nOut[10]: 1.1111111111111112e+16\r\n```\r\n\r\nSo not sure there is something to do about it.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271392122",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271392122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271392122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTM5MjEyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:03:44Z",
    "updated_at": "2017-01-09T20:03:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref to https://github.com/pandas-dev/pandas/issues/3707"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271392770",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271392770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271392770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTM5Mjc3MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:06:16Z",
    "updated_at": "2017-01-09T20:06:16Z",
    "author_association": "MEMBER",
    "body": "@jreback Do we have a general issue about the precision for int64 algos like mean? As this is not specific to pivot_table, so I would close this. \r\nAlthough it is specific to pivot_table/groupby that we cast back to int instead of leaving it as a float (which masks the reason for the precision error), but that is covered here: https://github.com/pandas-dev/pandas/issues/11199#issuecomment-156911364"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271393512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271393512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271393512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTM5MzUxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:09:16Z",
    "updated_at": "2017-01-09T20:09:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh that whole issue is better anyhow #11199"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271394859",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271394859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271394859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTM5NDg1OQ==",
    "user": {
      "login": "mstanichenko",
      "id": 2406080,
      "node_id": "MDQ6VXNlcjI0MDYwODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2406080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mstanichenko",
      "html_url": "https://github.com/mstanichenko",
      "followers_url": "https://api.github.com/users/mstanichenko/followers",
      "following_url": "https://api.github.com/users/mstanichenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/mstanichenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mstanichenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mstanichenko/subscriptions",
      "organizations_url": "https://api.github.com/users/mstanichenko/orgs",
      "repos_url": "https://api.github.com/users/mstanichenko/repos",
      "events_url": "https://api.github.com/users/mstanichenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mstanichenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:14:59Z",
    "updated_at": "2017-01-09T20:14:59Z",
    "author_association": "NONE",
    "body": "> You can use `pivot` instead of `pivot_table` for now\r\n\r\nUnfortunately, `pivot` is not able to handle multiindex.\r\nI deliberately simplified the example to present the point.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271395793",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271395793",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271395793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTM5NTc5Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:18:53Z",
    "updated_at": "2017-01-09T20:18:53Z",
    "author_association": "MEMBER",
    "body": "@mstanichenko `pivot` is specifically defined not to handle aggregations (pure reshaping function), but otherwise there should not be more restrictions in comparison to `pivot_table` (or otherwise this may be a bug). Can you give a small example of how you want to use multiindex? (if it is still without aggregation of course)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271399456",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271399456",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271399456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTM5OTQ1Ng==",
    "user": {
      "login": "mstanichenko",
      "id": 2406080,
      "node_id": "MDQ6VXNlcjI0MDYwODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2406080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mstanichenko",
      "html_url": "https://github.com/mstanichenko",
      "followers_url": "https://api.github.com/users/mstanichenko/followers",
      "following_url": "https://api.github.com/users/mstanichenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/mstanichenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mstanichenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mstanichenko/subscriptions",
      "organizations_url": "https://api.github.com/users/mstanichenko/orgs",
      "repos_url": "https://api.github.com/users/mstanichenko/repos",
      "events_url": "https://api.github.com/users/mstanichenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mstanichenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:33:44Z",
    "updated_at": "2017-01-09T20:33:44Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche, I don't really need a multiindex.\r\nYou are right that I need just to reshape a dataframe. Unfortunately, `pivot` didn't work for me.\r\n\r\n> Can you give a small example of how you want to use multiindex?\r\n\r\nI have a set of `components` and `subcomponents` which regularly take `timestamps`.\r\nThe `timestamps` can be of various types. Therefore the dataframe looks like following.\r\n\r\n```python\r\nIn [41]: df_ts.columns\r\nOut[41]: Index(['component_id', 'subcomponent_id', 'timestamp_type', 'timestamp_value'], dtype='object')\r\n```\r\n\r\nAll I want to do is\r\n```python\r\ndf = df_ts.pivot(index=['component_id', 'subcomponent_id'], colums='timestamp_type', values='timestamp_value').reset_index()\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271401038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271401038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271401038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTQwMTAzOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:40:21Z",
    "updated_at": "2017-01-09T20:40:21Z",
    "author_association": "MEMBER",
    "body": "So with a dummy example, something like this?\r\n\r\n```\r\nIn [73]: df = pd.DataFrame({'A':[0,0,0,1,1,1], 'B':[0,1,0,1,0,1], 'C':[0,0,1,1,1,0], 'D':[1,2,3,4,5,6]})\r\n\r\nIn [74]: df\r\nOut[74]: \r\n   A  B  C  D\r\n0  0  0  0  1\r\n1  0  1  0  2\r\n2  0  0  1  3\r\n3  1  1  1  4\r\n4  1  0  1  5\r\n5  1  1  0  6\r\n\r\nIn [75]: df.pivot(index=['A', 'B'], columns='C', values='D')\r\n...\r\nValueError: Wrong number of items passed 6, placement implies 2\r\n\r\nIn [76]: df.pivot_table(index=['A', 'B'], columns='C', values='D')\r\nOut[76]: \r\nC      0    1\r\nA B          \r\n0 0  1.0  3.0\r\n  1  2.0  NaN\r\n1 0  NaN  5.0\r\n  1  6.0  4.0\r\n```\r\n\r\nwhere you would expect the output of `pivot` being the same as `pivot_table` ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271405164",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271405164",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271405164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTQwNTE2NA==",
    "user": {
      "login": "mstanichenko",
      "id": 2406080,
      "node_id": "MDQ6VXNlcjI0MDYwODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2406080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mstanichenko",
      "html_url": "https://github.com/mstanichenko",
      "followers_url": "https://api.github.com/users/mstanichenko/followers",
      "following_url": "https://api.github.com/users/mstanichenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/mstanichenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mstanichenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mstanichenko/subscriptions",
      "organizations_url": "https://api.github.com/users/mstanichenko/orgs",
      "repos_url": "https://api.github.com/users/mstanichenko/repos",
      "events_url": "https://api.github.com/users/mstanichenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mstanichenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T20:57:04Z",
    "updated_at": "2017-01-09T20:58:07Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche , sorry but I lost the point.\r\n\r\nYou dummy example looks fine to me. I need the output that `pivot_table` gives to us\r\n\r\n```python\r\nIn [48]: df = pd.DataFrame({'A':[0,0,0,1,1,1], 'B':[0,1,0,1,0,1], 'C':[0,0,1,1,1,0], 'D':[1,2,3,4,5,6]})\r\n\r\nIn [49]: df.pivot_table(index=['A', 'B'], columns='C', values='D').reset_index()\r\nOut[49]: \r\nC  A  B    0    1\r\n0  0  0  1.0  3.0\r\n1  0  1  2.0  NaN\r\n2  1  0  NaN  5.0\r\n3  1  1  6.0  4.0\r\n```\r\nI never claim that `pivot` and `pivot_table` are the same. I just don't understand how one can come up with the desired output with `pivot`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271407372",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271407372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271407372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTQwNzM3Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T21:04:43Z",
    "updated_at": "2017-01-09T21:04:43Z",
    "author_association": "MEMBER",
    "body": "My point is that `pivot` should (maybe) also be able to do this (so give the same result as `pivot_table` in this case). As my original comment was: if you don't do any aggregation but pure reshape, you can use `pivot` instead of `pivot_table` (which didn't work for you because of the above).\r\n\r\nBTW, you can mimick `pivot` with a combination of `set_index` and `unstack`:\r\n\r\n```\r\nIn [95]: df.set_index(['index', 'type']).unstack()\r\nOut[95]: \r\n                   value\r\ntype                   2\r\nindex                   \r\n1      11111111111111111\r\n```\r\n\r\nbut if that will help against the precision loss will depend on whether there will be NaNs in the result or not (as it is cast to float anyway in that case)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271410299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271410299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271410299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTQxMDI5OQ==",
    "user": {
      "login": "mstanichenko",
      "id": 2406080,
      "node_id": "MDQ6VXNlcjI0MDYwODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2406080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mstanichenko",
      "html_url": "https://github.com/mstanichenko",
      "followers_url": "https://api.github.com/users/mstanichenko/followers",
      "following_url": "https://api.github.com/users/mstanichenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/mstanichenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mstanichenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mstanichenko/subscriptions",
      "organizations_url": "https://api.github.com/users/mstanichenko/orgs",
      "repos_url": "https://api.github.com/users/mstanichenko/repos",
      "events_url": "https://api.github.com/users/mstanichenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mstanichenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T21:17:06Z",
    "updated_at": "2017-01-09T21:17:06Z",
    "author_association": "NONE",
    "body": "Could you please provide a dataframe for which `pivot` would work?\r\nAlthough, I got your point that `pivot` just reshapes the data, it does not even work for the simplest case\r\n\r\n```python\r\nIn [53]: df = pd.DataFrame({'A':[0], 'B':[0], 'C':[1], 'D':[2]})\r\n\r\nIn [54]: df\r\nOut[54]: \r\n   A  B  C  D\r\n0  0  0  1  2\r\n\r\nIn [55]: df.pivot(index=['A', 'B'], columns='C', values='D')\r\nIndexError: index 1 is out of bounds for size 1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271418895",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271418895",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271418895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTQxODg5NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-09T21:51:17Z",
    "updated_at": "2017-01-09T21:51:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\nIn [28]: df.set_index(['A', 'B', 'C']).unstack()\r\nOut[28]: \r\n     D\r\nC    1\r\nA B   \r\n0 0  2\r\n```\r\n\r\nwhat would you expected [55] to yield?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271692676",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15091#issuecomment-271692676",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15091",
    "id": 271692676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTY5MjY3Ng==",
    "user": {
      "login": "mstanichenko",
      "id": 2406080,
      "node_id": "MDQ6VXNlcjI0MDYwODA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2406080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mstanichenko",
      "html_url": "https://github.com/mstanichenko",
      "followers_url": "https://api.github.com/users/mstanichenko/followers",
      "following_url": "https://api.github.com/users/mstanichenko/following{/other_user}",
      "gists_url": "https://api.github.com/users/mstanichenko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mstanichenko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mstanichenko/subscriptions",
      "organizations_url": "https://api.github.com/users/mstanichenko/orgs",
      "repos_url": "https://api.github.com/users/mstanichenko/repos",
      "events_url": "https://api.github.com/users/mstanichenko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mstanichenko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-10T20:45:16Z",
    "updated_at": "2017-01-10T20:45:16Z",
    "author_association": "NONE",
    "body": "@jreback, I expect `[55]` to give the output `[28]` of your example.\r\n\r\n@jreback, @jorisvandenbossche, thank you very much for the useful tips. I managed to mimic `pivot_table` behavior without mangling the underlying data.\r\n\r\nNevertheless, it's rather difficult to spot that the data were actually changed by `pandas` as there are no warning that might catch one's attention. In the meantime I managed to bump into another (although very similar) issue (#8596)\r\n\r\nFrom my limited experience `data types` are the most frequent source of issues and the most annoying thing for me :-)\r\n\r\nAgain, thank you very much for you assistance :-)"
  }
]
