[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412646620",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22326#issuecomment-412646620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22326",
    "id": 412646620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjY0NjYyMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T20:08:41Z",
    "updated_at": "2018-08-13T20:08:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Likewise for `is_bool_dtype`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414809584",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22326#issuecomment-414809584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22326",
    "id": 414809584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgwOTU4NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T20:24:10Z",
    "updated_at": "2018-08-21T20:24:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "This manifests in failures for `.loc` with `Categoricalndex` holding booleans\r\n\r\n```python\r\nIn [3]: pd.Series([1, 2, 3]).loc[pd.Categorical([True, False, True])]\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-3-0532517e2922> in <module>()\r\n----> 1 pd.Series([1, 2, 3]).loc[pd.Categorical([True, False, True])]\r\n\r\n~/sandbox/pandas/pandas/core/indexing.py in __getitem__(self, key)\r\n   1500\r\n   1501             maybe_callable = com.apply_if_callable(key, self.obj)\r\n-> 1502             return self._getitem_axis(maybe_callable, axis=axis)\r\n   1503\r\n   1504     def _is_scalar_access(self, key):\r\n\r\n~/sandbox/pandas/pandas/core/indexing.py in _getitem_axis(self, key, axis)\r\n   1902                     raise ValueError('Cannot index with multidimensional key')\r\n   1903\r\n-> 1904                 return self._getitem_iterable(key, axis=axis)\r\n   1905\r\n   1906             # nested tuple slicing\r\n\r\n~/sandbox/pandas/pandas/core/indexing.py in _getitem_iterable(self, key, axis)\r\n   1203             # A collection of keys\r\n   1204             keyarr, indexer = self._get_listlike_indexer(key, axis,\r\n-> 1205                                                          raise_missing=False)\r\n   1206             return self.obj._reindex_with_indexers({axis: [keyarr, indexer]},\r\n   1207                                                    copy=True, allow_dups=True)\r\n\r\n~/sandbox/pandas/pandas/core/indexing.py in _get_listlike_indexer(self, key, axis, raise_missing)\r\n   1159         self._validate_read_indexer(keyarr, indexer,\r\n   1160                                     o._get_axis_number(axis),\r\n-> 1161                                     raise_missing=raise_missing)\r\n   1162         return keyarr, indexer\r\n   1163\r\n\r\n~/sandbox/pandas/pandas/core/indexing.py in _validate_read_indexer(self, key, indexer, axis, raise_missing)\r\n   1244                 raise KeyError(\r\n   1245                     u\"None of [{key}] are in the [{axis}]\".format(\r\n-> 1246                         key=key, axis=self.obj._get_axis_name(axis)))\r\n   1247\r\n   1248             # We (temporarily) allow for some missing keys with .loc, except in\r\n\r\nKeyError: \"None of [Index([True, False, True], dtype='object')] are in the [index]\"\r\n```\r\n\r\nThat should be `Series([1, 3])`.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414962373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22326#issuecomment-414962373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22326",
    "id": 414962373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk2MjM3Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T08:56:30Z",
    "updated_at": "2018-08-22T08:56:30Z",
    "author_association": "MEMBER",
    "body": "Should we have something similar on the dtype as for numeric data? (the `ExtensionDtype._is_numeric` added recently) To indicate a certain dtype is considered boolean? \r\n\r\nBecause otherwise those inspection functions would need to know how to inspect the dtype (for categorical checking the dtype of the categories). \r\n\r\nI am only a bit worried about a possible proliferation of such attributes .. \r\n\r\n(now, categorical with boolean categories also doesn't sound that useful. We could also say we require an actual boolean dtype to do boolean indexing)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414991866",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22326#issuecomment-414991866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22326",
    "id": 414991866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk5MTg2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-22T10:49:32Z",
    "updated_at": "2018-08-22T10:49:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose this is what the `.kind` attribute is for?\r\n\r\nRight now `Categorical.dtype.kind` is always `O`:\r\n\r\n```python\r\nIn [8]: pd.Categorical([True, False]).dtype.kind\r\nOut[8]: 'O'\r\n```\r\n\r\nIf we changed that to be `.categories.dtype.kind` we wouldn't need a `._is_boolean`, though we would need to implement a `BooleanIndex`.\r\n"
  }
]
