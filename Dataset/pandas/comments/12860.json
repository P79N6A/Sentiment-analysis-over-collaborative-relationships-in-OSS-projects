[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208383316",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12860#issuecomment-208383316",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12860",
    "id": 208383316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODM4MzMxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T14:51:08Z",
    "updated_at": "2016-04-11T14:51:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger @sinhrks @shoyer @jorisvandenbossche \ncc @janschulz \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208472816",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12860#issuecomment-208472816",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12860",
    "id": 208472816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ3MjgxNg==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T17:52:40Z",
    "updated_at": "2016-04-11T17:57:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not so sure what you are proposing here? That `df.astype('category' , ...)` would internally be mapped to `df.apply(lambda x: x.astype('category', ...))`?\n\nFor my usecase `df.astype(...)` is not necessary, I usually have different types of columns and doing a astype on the complete df would just destroy the df... But if others have the need...\n\nMy usecase is more:\n\n```\nlickert_columns= [...] # a few of the columns in my df\nfor col in lickert_columns:\n    df[col] = df[col].astype(\"category\", categories=lickert_scale, ordered=True)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208489048",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12860#issuecomment-208489048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12860",
    "id": 208489048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ4OTA0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T18:32:44Z",
    "updated_at": "2016-04-11T18:32:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, you would oftentimes do this on a sub-set I think, e.g. `df[['A','B']].astype(...)`\n\nthe reason I bring this up is whether we should form the uniques FIRST before conversions, IOW\n\nif `categories=None` is passed (which is the default), then we would create it explicity from ALL the passed values.\n\nAs opposed to individually create them per-column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/208497850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12860#issuecomment-208497850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12860",
    "id": 208497850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODQ5Nzg1MA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-11T18:54:13Z",
    "updated_at": "2016-04-11T18:56:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMO constructing the categories from all uniques makes sense. \n\n[How would one merge these subset back into the original DF? dropping the old columns and merging the new ones back in? Sounds like a lot of work which ends up as long as the for loop?]\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336841595",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12860#issuecomment-336841595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12860",
    "id": 336841595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjg0MTU5NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T10:07:36Z",
    "updated_at": "2017-10-16T10:11:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "[example from SO](https://stackoverflow.com/questions/46761978/factorize-values-across-dataframe-columns-with-consistent-mappings)\r\n\r\nHere is a complete example\r\n```\r\nIn [9]: np.random.seed(1234)\r\n\r\nIn [10]: import string\r\n\r\nIn [11]: df = pd.DataFrame([np.random.choice(list(string.ascii_lowercase), 10) for i in range(5)])\r\n\r\nIn [12]: df\r\nOut[12]: \r\n   0  1  2  3  4  5  6  7  8  9\r\n0  p  t  g  v  m  u  y  z  p  r\r\n1  x  j  l  m  w  y  q  f  q  j\r\n2  w  p  s  q  m  f  c  g  d  h\r\n3  l  a  j  l  q  d  c  t  m  b\r\n4  l  t  l  r  o  t  h  k  l  o\r\n\r\nIn [14]: In [16]: b = pd.unique(df.values.T.reshape(-1, )) \r\n    ...: df.apply(lambda x: pd.Categorical(x, b).codes)\r\n    ...: \r\n    ...: \r\nOut[14]: \r\n   0  1  2   3   4   5   6   7   8   9\r\n0  0  4  7   9  10  14  15  20   0  12\r\n1  1  5  3  10   2  15  11  16  11   5\r\n2  2  0  8  11  10  16  18   7  17  19\r\n3  3  6  5   3  11  17  18   4  10  22\r\n4  3  4  3  12  13   4  19  21   3  13\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/336842044",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12860#issuecomment-336842044",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12860",
    "id": 336842044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjg0MjA0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-16T10:09:25Z",
    "updated_at": "2017-10-16T10:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note this can actually be implemented in a more performant way via https://github.com/pandas-dev/pandas/blob/master/pandas/core/reshape/merge.py#L1453"
  }
]
