[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259694911",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259694911",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259694911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTY5NDkxMQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T13:53:10Z",
    "updated_at": "2016-11-10T13:53:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure exactly how or if you have implemented ambiguous time support in `dateutil`, but it may be that some of your assumptions are now flawed, since we implemented proper ambiguous time support in version 2.6.0.  The biggest change (and this is coming from PEP-495, _not_ something that I made up, I assure you) is that by default unspecified ambiguity now defaults to the _first_ time, not the Standard side.\n\nThe plus side is that as long as all arithmetic is done in a fixed-offset zone like UTC, `datetime.astimezone(dateutil_tzinfo)` will just work for all times, and if you implement a `fold` attribute in `Timestamp` objects to reflect the forthcoming change in `datetime` objects in Python 3.6, then `replace` will also just work (else there would be no way to specify whether or not you are on the DST side).\n\nI will see if I can find where you are implementing dateutil support, but you may be faster at that side of it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259698075",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259698075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259698075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTY5ODA3NQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T14:06:54Z",
    "updated_at": "2016-11-10T14:06:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, actually, I didn't realize you were pinning dateutil to 2.5.3 for some reason. I don't think that's a good idea. It's almost certainly better to just fix `replace`...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259701458",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259701458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259701458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTcwMTQ1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T14:20:43Z",
    "updated_at": "2016-11-10T14:20:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle we r pinning various versions of dateutil for testing\nbut several also install latest \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259703919",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259703919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259703919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTcwMzkxOQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T14:30:30Z",
    "updated_at": "2016-11-10T14:30:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see, I didn't realize that.\n\nLooking into this code a bit, I'm not really surprised that it's fragile with respect to dateutil changes. Given the lack of previous ambiguous time support it's understandable, but there's a lot of hacks in here related to `dateutil` that rely on undocumented private features of `tzfile` objects.\n\nI think I can make things much easier by introducing two new features in the next release - an official API for retrieving transitions from `tzfile` objects and an official API for retrieving the canonical name of a given zone. Then you can presumably make better use of the official APIs and reduce the fragility of your code. Please let me know if there are other places that you are relying on undocumented features so we can figure out how to expose something stable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259704794",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259704794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259704794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTcwNDc5NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T14:33:30Z",
    "updated_at": "2016-11-10T14:33:30Z",
    "author_association": "MEMBER",
    "body": "@pganssle Can you move that last comment to a new issue to discuss this? As I don't think it is related to the actual code changes in this PR? (for reviewing this PR)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259705243",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259705243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259705243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTcwNTI0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T14:35:13Z",
    "updated_at": "2016-11-10T14:35:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "i changed the pin on the osx build arbitrarily (could have been 3.4) \nthe 3.5 is always latest and otherwise have various pins\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259706179",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259706179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259706179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTcwNjE3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T14:38:49Z",
    "updated_at": "2016-11-10T14:38:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle certainly welcome improved apis!\n\nwe can easily just use them if available (based on version or duck typing)\nwant to remain back compat (though we should prob drop <2 dateutil support, maybe even make more recent required)\n\n@pganssle is there is a list of releases and dates when they were released?\n\ncsn u show what changed for ambiguous time support in 2.5.3 -> 2.6\nwrt transitions -  i think we need to change our code a bit (if u can show the current api would be great)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259707415",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259707415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259707415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTcwNzQxNQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T14:43:41Z",
    "updated_at": "2016-11-10T14:43:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I can move it, yes, I'll make something a bit more formal later. I was just commenting on this because the use of undocumented features is likely a good place to look for possible changes. I think in this case, though, the issue is that PEP-495 actually changes the default fallback for unaware datetimes:\n\nSee:\n\n``` python\nfrom dateutil import tz\nfrom datetime import datetime, timedelta\n\nLON = tz.gettz('Europe/London')\ndt1 = datetime(2013, 10, 26, 23, tzinfo=LON)\ndt2 = datetime(2013, 10, 27, 1, tzinfo=LON)\ndt3 = tz.enfold(dt2, fold=1)\n\nprint(dt1)   # 2013-10-26 23:00:00+01:00\nprint(dt2)   # 2013-10-27 01:00:00+01:00\nprint(dt3)   # 2013-10-27 01:00:00+00:00\n```\n\nI was expecting that no one was relying on this behavior because there was originally no actual way to construct `datetime` values with DST during ambiguous times, and I was adding this feature. Had I been involved in the PEP-495 discussions early enough, I would definitely have advocated using `fold=1` as \"DST\", not \"STD\", but it is what it is.\n\nIf you have the datetime as UTC already, it's very easy, just use `.astimezone()` and you will have a properly localized date (this is the case for pytz as well, actually). Otherwise, you can use `tz.datetime_ambiguous(dt, tz=None)` to check if a datetime is ambiguous and decide which side of the fold you want to be on using `tz.enfold()` (`fold` is ignored for non-ambiguous dates, so you can just enfold everything if you prefer). You can use `tz.datetime_exists(dt, tz=None)` to see if a date is in a \"gap\" in the given zone.\n\nEvidently, I forgot to add these functions to `__all__`, on `tz`, so they haven't shown up in the documentation. A list of releases with changes is [here](https://github.com/dateutil/dateutil/releases).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259747170",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259747170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259747170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc0NzE3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T17:04:23Z",
    "updated_at": "2016-11-10T17:05:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [6]: dateutil.__version__\nOut[6]: '2.5.3'\n\nIn [19]: from dateutil.tz import tzfile\n\nIn [20]: dt = datetime.datetime(2013, 11, 3, 1, 59, 59, 999999, tzinfo=tzfile('/usr/share/zoneinfo/US/Pacific'))\n\nIn [21]: dt\nOut[21]: datetime.datetime(2013, 11, 3, 1, 59, 59, 999999, tzinfo=tzfile('/usr/share/zoneinfo/US/Pacific'))\n\nIn [22]: dateutil.__version__\nOut[22]: '2.5.3'\n\nIn [23]: dt.dst()\nOut[23]: datetime.timedelta(0)\n\nIn [24]: dt.tzname()\nOut[24]: 'PST'\n\nIn [25]: dt + datetime.timedelta(0, 180)\nOut[25]: datetime.datetime(2013, 11, 3, 2, 2, 59, 999999, tzinfo=tzfile('/usr/share/zoneinfo/US/Pacific'))\n\nIn [26]: (dt + datetime.timedelta(0, 180)).dst()\nOut[26]: datetime.timedelta(0)\n\nIn [27]: (dt + datetime.timedelta(0, 180)).tzname()\nOut[27]: 'PST'\nIn [7]: t = pd.Timestamp('2013-11-03 01:59:59.999999').tz_localize('dateutil//usr/share/zoneinfo/US/Pacific', ambiguous=0)\n\nIn [8]: t\nOut[8]: Timestamp('2013-11-03 01:59:59.999999-0800', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\nIn [9]: t + datetime.timedelta(0, 180)\nOut[9]: Timestamp('2013-11-03 02:02:59.999999-0800', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\n# using pandas\nIn [10]: t = pd.Timestamp('2013-11-03 01:59:59.999999').tz_localize('dateutil//usr/share/zoneinfo/US/Pacific', ambiguous=1)\n\nIn [11]: t\nOut[11]: Timestamp('2013-11-03 01:59:59.999999-0800', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\nIn [12]: t + datetime.timedelta(0, 180)\nOut[12]: Timestamp('2013-11-03 01:02:59.999999-0800', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\n```\n\n2.6.0\n\n```\nIn [21]: dateutil.__version__\nOut[21]: '2.6.0'\n\nIn [32]:  dt = datetime.datetime(2013, 11, 3, 1, 59, 59, 999999, tzinfo=tzfile('/usr/share/zoneinfo/US/Pacific'))\n    ...: \n\nIn [33]: dt\nOut[33]: datetime.datetime(2013, 11, 3, 1, 59, 59, 999999, tzinfo=tzfile('/usr/share/zoneinfo/US/Pacific'))\n\nIn [34]: dt.dst()\nOut[34]: datetime.timedelta(0, 3600)\n\nIn [35]: dt.tzname()\nOut[35]: 'PDT'\n\nIn [36]: dt + datetime.timedelta(0, 180)\n    ...: \nOut[36]: datetime.datetime(2013, 11, 3, 2, 2, 59, 999999, tzinfo=tzfile('/usr/share/zoneinfo/US/Pacific'))\n\nIn [37]: (dt + datetime.timedelta(0, 180)).dst()\n    ...: \nOut[37]: datetime.timedelta(0)\n\nIn [38]: (dt + datetime.timedelta(0, 180)).tzname()\n    ...: \nOut[38]: 'PST'\n\n# pandas\nIn [39]: t = pd.Timestamp('2013-11-03 01:59:59.999999').tz_localize('dateutil//usr/share/zoneinfo/US/Pacific', ambiguous=0)\n\nIn [40]: t\nOut[40]: Timestamp('2013-11-03 01:59:59.999999-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\nIn [41]: t + datetime.timedelta(0, 180)\nOut[41]: Timestamp('2013-11-03 02:02:59.999999-0800', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\nIn [42]: t = pd.Timestamp('2013-11-03 01:59:59.999999').tz_localize('dateutil//usr/share/zoneinfo/US/Pacific', ambiguous=1)\n\nIn [43]: t\nOut[43]: Timestamp('2013-11-03 01:59:59.999999-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\nIn [44]: t + datetime.timedelta(0, 180)\nOut[44]: Timestamp('2013-11-03 01:02:59.999999-0700', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\n```\n\nSo now I am all confused, I _think_ that 2013/11/03 02:02:59.... is an invalid time, so I _think_ that [44] and [12] are right. I _think_ that we are testing the wrong behavior here.\n\nany thoughts welcome (the 2.5.3 and 2.6.0) are in different ipython sessions, so output numbers might be confusing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259753446",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259753446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259753446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc1MzQ0Ng==",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T17:28:40Z",
    "updated_at": "2016-11-10T17:53:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "[44] doesn't seem right to me as the time switched over so it should be -0800 rather than -0700.  And also [41] has the right offset but it should be 01:02.  Similar with [12] that should go to 02:02 since it has already switched back as it is -0800 like [9] does. \n\nAlso [10]/[11] above is wrong, that should be -0700 since you are specifying that it is DST.\n\nAlso, 2013/11/03 02:02:59 is not an invalid time since it is outside the DST change window which is from [1:00, 2:00).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259754294",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259754294",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259754294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc1NDI5NA==",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T17:32:12Z",
    "updated_at": "2016-11-10T17:32:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "[44] should look like this\n\n```\nIn [17]: t\nOut[17]: Timestamp('2013-11-03 01:59:59.999999-0700', tz='US/Pacific')\n\nIn [18]: t + timedelta(0, 180)\nOut[18]: Timestamp('2013-11-03 01:02:59.999999-0800', tz='US/Pacific')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259762319",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259762319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259762319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc2MjMxOQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T18:03:44Z",
    "updated_at": "2016-11-10T18:04:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rockg @jreback My understanding is that `timedelta()` is to be considered something that moves the \"hands\" of the \"wall clock\", and there is no way to use `timedelta()` on `datetime`s with non-fixed offset zones in such a way that it cannot produce ambiguous or non-existent dates. Consider this case:\n\n``` python\n>>> from dateutil import tz\n>>> from datetime import datetime, timedelta\n>>> PT = tz.gettz('US/Pacific')\n>>> dt = datetime(2013, 11, 2, 12, tzinfo=PT)\n>>> dt + timedelta(days=1)\ndatetime.datetime(2013, 11, 3, 12, 0, tzinfo=tzfile('/usr/share/zoneinfo/US/Pacific'))\n```\n\nIf you think of `timedelta` as adding 24 hours to the absolute time, then this would return the counter-intuitive result of `2013-11-03 11:00:00`, because there are actually 25 hours on November 3rd. I made an effort at providing an `absolutedelta` class that does this in dateutil/dateutil#281, but when I was implementing it (and after some caution in dateutil/dateutil#228), it became clear to me that this approach is a bit unnecessary in most cases and more complicated than is warranted in others.\n\nIf you want to override the default python semantics and have `timedelta` give you an \"absolute\" difference in times, you should just perform all arithmetical operations in a fixed-offset zone, so:\n\n``` python\n>>> (dt.astimezone(tz.tzutc()) + timedelta(days=1)).astimezone(PT)\ndatetime.datetime(2013, 11, 3, 11, 0, tzinfo=tzfile('/usr/share/zoneinfo/US/Pacific'))\n>>> dt2 = datetime(2013, 11, 3, 0, 30, tzinfo=PT)\n>>> str((dt2.astimezone(tz.tzutc()) + timedelta(hours=1)).astimezone(PT))\n'2013-11-03 01:30:00-07:00'\n>>> str((dt2.astimezone(tz.tzutc()) + timedelta(hours=2)).astimezone(PT))\n'2013-11-03 01:30:00-08:00'\n```\n\nI don't really see why `2013-11-03 02:03` is an invalid time. That's an unambiguous time in PST.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259765477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259765477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259765477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc2NTQ3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T18:16:32Z",
    "updated_at": "2016-11-10T18:16:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pganssle pandas is just trying NOT to change behavior. if we want something to change that's another issue. this PR is just trying to reconcile the differences in dateutil 2.5.3 and 2.6 and to have it work on either version correctly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259766336",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259766336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259766336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc2NjMzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T18:20:07Z",
    "updated_at": "2016-11-10T18:20:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rockg 10/11 is from existing master and 2.5.3\n\nso I think that we are then testing with an incorrect expectation? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259769000",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259769000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259769000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc2OTAwMA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T18:31:11Z",
    "updated_at": "2016-11-10T18:31:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback If you want the old default behavior from dateutil < 2.6.0, then you should do this:\n\n``` python\nfrom dateutil import tz\ndatetime_ambiguous = getattr(tz, 'datetime_ambiguous', lambda dt, tz=None: return False)\nenfold = getattr(tz, 'enfold', lambda x, fold=1: return x)\n\ndef add_timedelta(dt, td):\n    dt_out = dt + td\n    if datetime_ambiguous(dt_out):\n        return enfold(dt_out, fold=1)\n    else:\n        return dt_out\n```\n\nThis does not handle `fold` correctly, mind you. I was sort of under the impression that you had your own semantics for what `timedelta` does, because your tests seem to indicate that `Timestamp` objects actually already do enough hacking around `dateutil`'s lack of support for ambiguous times that it works as expected. In that case, you're probably best off automatically detecting whether it's a pre-PEP495 `dateutil` or a post-PEP495 `dateutil` and use a code path that uses the hacks or uses the proper API as appropriate, and eventually when the dateutil dependency is pinned to `>= 2.6.0`, drop the hacked-up code.\n\nAs for [10]/[11], I'm not sure what your implementation is, but if you're using `dateutil`'s built-in methods, there's actually no way to produce a datetime that is on the DST side of an ambiguous date. I wouldn't be surprised if that's why the 2.5.3 section is doing the wrong thing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259772374",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259772374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259772374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc3MjM3NA==",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T18:44:13Z",
    "updated_at": "2016-11-10T18:44:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, the test is wrong.  This is how it looks with pytz and is correct.  I don't believe we are calling any specific dateutil methods but merely getting transition times, etc. from the timezone definition.\n\n```\nIn [9]: t = pd.Timestamp('2013-11-03 01:59:59.999999').tz_localize('US/Pacific', ambiguous=1)\n\nIn [10]: t\nOut[10]: Timestamp('2013-11-03 01:59:59.999999-0700', tz='US/Pacific')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259775113",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259775113",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259775113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc3NTExMw==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T18:54:34Z",
    "updated_at": "2016-11-10T18:56:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rockg I could be wrong, but you must be using dateutil methods somewhere, otherwise the behavior wouldn't have changed between versions 2.5.3 and 2.6.0, right?  Is it possible that you use the transitions taken from the `tzfile` and use them to calculate the correct time in UTC, then call `dt_in_utc.astimezone(the_dateutil_tz)`? If so, you would still expect the observed behavior. Even if you are storing it as UTC and call `astimezone()` every time for the purposes of calling `.tzname` and `dst`, you'll still see this behavior because it was not possible to generate a `datetime` with a `dateutil` time zone attached that resolves to the DST side.\n\nThis is fixed in `dateutil` 2.6.0 and you can consider the behavioral change a bugfix.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259776631",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259776631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259776631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc3NjYzMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T19:00:22Z",
    "updated_at": "2016-11-10T19:00:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "so .replace is called in the repr this may be affecting things \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259778885",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259778885",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259778885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTc3ODg4NQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T19:09:06Z",
    "updated_at": "2016-11-10T19:09:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like the underlying representation is correct, but when you try and use `dst()`, `utcoffset()`, `tzname()` or the other parts of the interface that call `tzinfo` methods, it resolves incorrectly (likely because it's calling dateutil methods to do this):\n\n``` python\n>>> dateutil.__version__\n'2.5.3'\n\n>>> t_std = pd.Timestamp('2013-11-03 01:59:59.9999').tz_localize('dateutil/US/Pacific',ambiguous=0)\n>>> t_std\nTimestamp('2013-11-03 01:59:59.999900-0800', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\n>>> t_dst = pd.Timestamp('2013-11-03 01:59:59.9999').tz_localize('dateutil/US/Pacific', ambiguous=1)\n>>> t_dst\nTimestamp('2013-11-03 01:59:59.999900-0800', tz='dateutil//usr/share/zoneinfo/US/Pacific')\n\n>>> t_std.astimezone('UTC')\nTimestamp('2013-11-03 09:59:59.999900+0000', tz='UTC')\n\n>>> t_dst.astimezone('UTC')\nTimestamp('2013-11-03 08:59:59.999900+0000', tz='UTC')\n\n>>> t_std.dst()\ndatetime.timedelta(0)\n\n>>> t_dst.dst()\ndatetime.timedelta(0)\n```\n\nYou may be able to jump through hoops to fix this, but I don't think it would be out of bounds to just say it's an upstream bug in dateutil and recommend upgrading to the latest version.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259813331",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259813331",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259813331,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTgxMzMzMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T21:31:19Z",
    "updated_at": "2016-11-10T21:36:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok I have a consistent test for the difference now, working for 2.5.3 with this PR. (these compare pytz and dateutil) I think there exists a bug in [5]/[6](the UTC times are same, just the ambiguous tz looks wrong for dateutil). ok. commit is https://github.com/pandas-dev/pandas/pull/14631/commits/cee7edccc2210b87db7da08085d2f25a6b7c2799\n\n```\nIn [2]: dateutil.__version__\nOut[2]: '2.5.3'\n\nIn [3]: Timestamp('2013-10-27 01:00:00').tz_localize('Europe/London', ambiguous=0)\nOut[3]: Timestamp('2013-10-27 01:00:00+0000', tz='Europe/London')\n\nIn [4]: Timestamp('2013-10-27 01:00:00').tz_localize('dateutil/Europe/London', ambiguous=0)\nOut[4]: Timestamp('2013-10-27 01:00:00+0000', tz='dateutil//usr/share/zoneinfo/Europe/London')\n\nIn [5]: Timestamp('2013-10-27 01:00:00').tz_localize('Europe/London', ambiguous=1)\nOut[5]: Timestamp('2013-10-27 01:00:00+0100', tz='Europe/London')\n\nIn [6]: Timestamp('2013-10-27 01:00:00').tz_localize('dateutil/Europe/London', ambiguous=1)\nOut[6]: Timestamp('2013-10-27 01:00:00+0000', tz='dateutil//usr/share/zoneinfo/Europe/London')\n```\n\nSo on 2.6 looks like the above case is fixed, but the non-ambiguous case is now broken. @pganssle is this on your side? (it could also be on the localization code on pandas side)\n\n```\nIn [3]: dateutil.__version__\nOut[3]: '2.6.0'\n\nIn [4]: Timestamp('2013-10-27 01:00:00').tz_localize('Europe/London', ambiguous=0)\nOut[4]: Timestamp('2013-10-27 01:00:00+0000', tz='Europe/London')\n\nIn [5]: Timestamp('2013-10-27 01:00:00').tz_localize('dateutil/Europe/London', ambiguous=0)\nOut[5]: Timestamp('2013-10-27 01:00:00+0100', tz='dateutil//usr/share/zoneinfo/Europe/London')\n\nIn [6]: Timestamp('2013-10-27 01:00:00').tz_localize('Europe/London', ambiguous=1)\nOut[6]: Timestamp('2013-10-27 01:00:00+0100', tz='Europe/London')\n\nIn [7]: Timestamp('2013-10-27 01:00:00').tz_localize('dateutil/Europe/London', ambiguous=1)\nOut[7]: Timestamp('2013-10-27 01:00:00+0100', tz='dateutil//usr/share/zoneinfo/Europe/London')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259823630",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259823630",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259823630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTgyMzYzMA==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T22:15:12Z",
    "updated_at": "2016-11-10T22:15:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Yes, it seems there is a bug there, probably in the `fromutc()` algorithm, good catch. I will fix upstream, see issue dateutil/dateutil#321. I think it might be related to the fact that the base offset is 0, but I'm not really sure.\n\nIf you want to force it to work on 2.6.0, you'll have to determine whether it belongs before or after the fold and use `tz.enfold` appropriately. Otherwise I can probably cut a bugfix release relatively soon.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259827786",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259827786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259827786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTgyNzc4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T22:33:42Z",
    "updated_at": "2016-11-10T22:33:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok this is updated skipping appropriate sections when 2.6.0 is there (so when you release next version, we will retest).\n\n@jorisvandenbossche because of the segfault, what do you think about 0.19.2 bugfix release?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259845991",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259845991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259845991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTg0NTk5MQ==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T00:11:52Z",
    "updated_at": "2016-11-12T02:49:20Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pandas-dev/pandas/pull/14631?src=pr) is 85.28% (diff: 100%)\n\n> No coverage report found for **master** at 46000da.\n> \n> Powered by [Codecov](https://codecov.io?src=pr). Last update [46000da...3f95042](https://codecov.io/gh/pandas-dev/pandas/compare/46000daf257c8e574ca943a57023deac74460edd...3f950426636459c14e17682d578555f38b2c21c0?src=pr)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259961017",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-259961017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 259961017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTk2MTAxNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-11T13:50:34Z",
    "updated_at": "2016-11-11T13:50:34Z",
    "author_association": "MEMBER",
    "body": "Error on appveyor that still seems related:\n\n```\n======================================================================\nFAIL: test_repr (pandas.tseries.tests.test_tslib.TestTimestamp)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"C:\\Python27_64\\envs\\pandas\\lib\\site-packages\\pandas\\tseries\\tests\\test_tslib.py\", line 359, in test_repr\n    self.assertIn(tz_repr, repr(date_tz))\n  File \"C:\\Python27_64\\envs\\pandas\\lib\\site-packages\\pandas\\util\\testing.py\", line 922, in assertIn\n    assert a in b, \"%s: %r is not in %r\" % (msg.format(a, b), a, b)\nAssertionError: : '/America/Los_Angeles' is not in \"Timestamp('2014-03-07 00:00:00-0800', tz='dateutil/US/Pacific')\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/260099315",
    "html_url": "https://github.com/pandas-dev/pandas/pull/14631#issuecomment-260099315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14631",
    "id": 260099315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDA5OTMxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-12T03:42:21Z",
    "updated_at": "2016-11-12T03:42:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "going to merge this tomorrow unless further comments\ncan always address in a follow up \n\nthe segfaults on tests are a problem with other prs \n"
  }
]
