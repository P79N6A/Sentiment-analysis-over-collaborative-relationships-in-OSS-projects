[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457872998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24947#issuecomment-457872998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24947",
    "id": 457872998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg3Mjk5OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-26T22:52:47Z",
    "updated_at": "2019-01-26T22:53:06Z",
    "author_association": "MEMBER",
    "body": "This follows the IEEE 7544 specification for NaN comparison so not something I think we will be changing\r\n\r\nhttps://stackoverflow.com/questions/1565164/what-is-the-rationale-for-all-comparisons-returning-false-for-ieee754-nan-values\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457895960",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24947#issuecomment-457895960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24947",
    "id": 457895960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzg5NTk2MA==",
    "user": {
      "login": "cbrnr",
      "id": 4377312,
      "node_id": "MDQ6VXNlcjQzNzczMTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4377312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbrnr",
      "html_url": "https://github.com/cbrnr",
      "followers_url": "https://api.github.com/users/cbrnr/followers",
      "following_url": "https://api.github.com/users/cbrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/cbrnr/orgs",
      "repos_url": "https://api.github.com/users/cbrnr/repos",
      "events_url": "https://api.github.com/users/cbrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T07:34:30Z",
    "updated_at": "2019-01-27T07:34:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this misses the point a bit when NaN is used to represent missing values."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457900089",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24947#issuecomment-457900089",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24947",
    "id": 457900089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzkwMDA4OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T08:48:14Z",
    "updated_at": "2019-01-27T08:48:14Z",
    "author_association": "MEMBER",
    "body": "@cbrnr I agree with you that this can be somewhat strange or surprising behaviour for missing values. But, NaN in numpy is not really a missing value indicator, and in pandas we are somewhat *mis*using NaN for that (for lack of good alternative in numpy).\r\n\r\nSo given that there are good historical reasons, ànd it has been long standing behaviour, it is not that easy (or even desired) to change.\r\n\r\nIn my ideal world, where we have proper NA support for all dtypes, we should probably reconsider this. \r\nBut currently we eg don't even have a boolean type that can hold missing data, as you mentioned.\r\n\r\nAnother question is what boolean indexing should do with missing values (raise? What does R do here?)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457901783",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24947#issuecomment-457901783",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24947",
    "id": 457901783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzkwMTc4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T09:18:17Z",
    "updated_at": "2019-01-27T09:18:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "we actually make this a NaN in the comparison then immediately fill(False) because otherwise indexing would have to check for nulls because indexing with a null unsupported by numpy and this would require quite a bit of code to support \r\n\r\nand it’s just plain convenient (always filling) - that is the practical reason"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457902227",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24947#issuecomment-457902227",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24947",
    "id": 457902227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzkwMjIyNw==",
    "user": {
      "login": "cbrnr",
      "id": 4377312,
      "node_id": "MDQ6VXNlcjQzNzczMTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4377312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cbrnr",
      "html_url": "https://github.com/cbrnr",
      "followers_url": "https://api.github.com/users/cbrnr/followers",
      "following_url": "https://api.github.com/users/cbrnr/following{/other_user}",
      "gists_url": "https://api.github.com/users/cbrnr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cbrnr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cbrnr/subscriptions",
      "organizations_url": "https://api.github.com/users/cbrnr/orgs",
      "repos_url": "https://api.github.com/users/cbrnr/repos",
      "events_url": "https://api.github.com/users/cbrnr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cbrnr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T09:25:41Z",
    "updated_at": "2019-01-27T09:25:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, I understand that the current implementation has historical and practical reasons, and I am aware that this isn't going to change anytime soon. But maybe it would be useful to add a short paragraph to the missing value section of the docs explaining the differences to R behavior.\r\n\r\nWhen NA is interpreted as \"I don't know the value because it is missing\" (like in R), Boolean indexing also returns NA:\r\n\r\n```\r\n> x <- 4\r\n> x[NA]\r\n[1] NA\r\n```\r\n\r\nAnyway, although I prefer the R behavior it is OK that pandas behaves differently (there are arguments for both sides), but like I said maybe the differences should be mentioned explicitly.\r\n"
  }
]
