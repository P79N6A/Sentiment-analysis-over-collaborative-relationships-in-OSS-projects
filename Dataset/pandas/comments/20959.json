[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386809734",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20959#issuecomment-386809734",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20959",
    "id": 386809734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjgwOTczNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T14:32:33Z",
    "updated_at": "2018-05-05T14:32:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @WillAyd @Dr-Irv \r\n\r\nso this fixes the immediate issue, and provides a more generation soln, a context manager to set/reset the group_selection.\r\n\r\nI removed *most* of the current usages which didn't break anything. There are a few more (calls to ``_set_group_selection`` that should use the context manager (because they are not paired with ``_reset_group_selection`` calls and hence are changing state on the groupby objects. \r\n\r\nThese actually should be fixed, but the tests have to be changed for the return result. I don't think this is actually an API change, rather some bugs in how we are using ``.apply``.\r\n\r\nThis boils down to whether apply is a filtering operation or not, but you don't know this a-priori for a udf. But for built in functions we DO know. This comes up when you have a operation that fails with mixed dtypes (e.g. the grouper is a different type than the columns and the apply function cannot handle this)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386823336",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20959#issuecomment-386823336",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20959",
    "id": 386823336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjgyMzMzNg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T17:50:13Z",
    "updated_at": "2018-05-05T17:50:13Z",
    "author_association": "MEMBER",
    "body": "Very nice - I think using the context manager is a great way to handle this. Also agreed this isn't an API change (can't believe this has been around as long as it has - I noticed it back in 0.19.x).\r\n\r\nFWIW I'm trying to think through when the Grouping column really should be included as part of the anonymous function. I would expect the following to be equivalent:\r\n\r\n```python\r\nIn [8]: >>> df = pd.DataFrame({'A': 'a a b'.split(), 'B': [1,2,3], 'C': [4,6, 5]})\r\n   ...: >>> g = df.groupby('A')\r\n   ...: >>> g.shift()\r\n   ...: \r\nOut[8]: \r\n     B    C\r\n0  NaN  NaN\r\n1  1.0  4.0\r\n2  NaN  NaN\r\n\r\nIn [9]: >>> df = pd.DataFrame({'A': 'a a b'.split(), 'B': [1,2,3], 'C': [4,6, 5]})\r\n   ...: >>> g = df.groupby('A')\r\n   ...: >>> g.apply(lambda x: x.shift())\r\n   ...: \r\nOut[9]: \r\n     A    B    C\r\n0  NaN  NaN  NaN\r\n1    a  1.0  4.0\r\n2  NaN  NaN  NaN\r\n```\r\n\r\nSame with these:\r\n```python\r\nIn [18]: >>> df = pd.DataFrame({'A': 'a a b'.split(), 'B': [1,2,3], 'C': [4,6, 5]})\r\n    ...: >>> g = df.groupby('A')\r\n    ...: >>> g.apply(lambda x: x.sum())\r\n    ...: \r\nOut[18]: \r\n    A  B   C\r\nA           \r\na  aa  3  10\r\nb   b  3   5\r\n\r\nIn [19]: >>> df = pd.DataFrame({'A': 'a a b'.split(), 'B': [1,2,3], 'C': [4,6, 5]})\r\n    ...: >>> g = df.groupby('A')\r\n    ...: >>> g.sum()\r\n    ...: \r\nOut[19]: \r\n   B   C\r\nA       \r\na  3  10\r\nb  3   5\r\n```\r\n\r\nThough perhaps there are legitimate cases where the anonymous function should be applied to the grouping column as well (?). Don't need to solve here but bringing up as food for thought"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386843943",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20959#issuecomment-386843943",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20959",
    "id": 386843943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njg0Mzk0Mw==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-06T00:13:06Z",
    "updated_at": "2018-05-06T00:13:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback FYI, I found this while researching issues on `.get()` (#20885), in `tests/groupby/aggregate/test_other.py` in `test_agg_timezone_round_trip`, where the `apply` method is called as the last of a sequence.  If you move the `apply` to the first in the sequence, that bugs out."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387028410",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20959#issuecomment-387028410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20959",
    "id": 387028410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzAyODQxMA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-05-07T10:47:41Z",
    "updated_at": "2018-05-08T00:20:14Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20959?src=pr&el=h1) Report\n> Merging [#20959](https://codecov.io/gh/pandas-dev/pandas/pull/20959?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/bd4332f4bff135d4119291f66e98f76cc5f9a80e?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/20959/graphs/tree.svg?height=150&width=650&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/20959?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #20959      +/-   ##\n==========================================\n+ Coverage   91.81%   91.82%   +<.01%     \n==========================================\n  Files         153      153              \n  Lines       49481    49491      +10     \n==========================================\n+ Hits        45430    45443      +13     \n+ Misses       4051     4048       -3\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.21% <100%> (ø)` | :arrow_up: |\n| #single | `41.84% <5.55%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/20959?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/groupby/groupby.py](https://codecov.io/gh/pandas-dev/pandas/pull/20959/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS9ncm91cGJ5LnB5) | `92.66% <100%> (+0.08%)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/20959/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `84.59% <0%> (+0.2%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20959?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20959?src=pr&el=footer). Last update [bd4332f...a67f4d0](https://codecov.io/gh/pandas-dev/pandas/pull/20959?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  }
]
