[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212500868",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212500868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212500868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUwMDg2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T16:25:43Z",
    "updated_at": "2016-04-20T16:25:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "you missed my point. don't use a dictionary. use a list for the data and the column names then you don't need all of these crazy gymnastics.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212503216",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212503216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212503216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUwMzIxNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T16:33:05Z",
    "updated_at": "2016-04-20T16:35:05Z",
    "author_association": "MEMBER",
    "body": "I did try using lists.  I could not get it to work.  The current mechanism is very reliant on using the names and labels in the `dict` object to generate the data and create the `DataFrame` at the end, which two `list` objects is not very _efficient_ or _good_ at doing.  Gymnastics, maybe, but it does manage to resolve the duplicate column names in a parsing system that is entirely unique-column oriented.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212505843",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212505843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212505843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUwNTg0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T16:38:16Z",
    "updated_at": "2016-04-20T16:38:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung you have added a lot of code which is not idomatic, is quite complicated. Refacting should reduce the code not increase it dramatically.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212511438",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212511438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212511438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUxMTQzOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T16:51:17Z",
    "updated_at": "2016-04-20T16:52:20Z",
    "author_association": "MEMBER",
    "body": "@jreback :  A closer inspection of my changes will indicate that I did not make any major changes, except for moving two functions into a class and adding some references to `mapping` and `reverse_map` to enable **unique** references to column names, even if there are duplicates.\n\nAlso, to reiterate what I said above, two `list` objects **did not work** for me.  Not only could I not get it to pass all of the parsing tests, but it is **slow** as you now have to use `list` indexing instead of `dict` look-ups to access and manipulate labels.  You also have to spend time to re-arrange the lists at the end to properly pass it into the `DataFrame`, since AFAICT it only accepts rows, not columns when passing in `list` of `list`.  So yes, there may be some \"gymnastics\" to get it to work.  However, my changes maintain the overall structure of the current parsing system that, separate from the duplicate columns issue I think works fairly well and efficiently.\n\nIn short, it would be more useful to receive specific comments as to what I can do to simplify the code and make it more idiomatic instead of blanket comments like ones previous.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212514340",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212514340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212514340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUxNDM0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T16:59:42Z",
    "updated_at": "2016-04-20T16:59:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would do it this way.\n\n```\nIn [15]: arr = [np.array([1,2,3]),np.array([1.0,1.1,2.0]),np.array(['foo','bar','az']),[4,5,6]]\n\nIn [16]: pd.concat(map(Series,arr),axis=1,copy=False)\nOut[16]: \n   0    1    2  3\n0  1  1.0  foo  4\n1  2  1.1  bar  5\n2  3  2.0   az  6\n\nIn [17]: pd.concat(map(Series,arr),axis=1).dtypes\nOut[17]: \n0      int64\n1    float64\n2     object\n3      int64\ndtype: object\n```\n\nthen if you need to assign different names\n\n```\nIn [23]: result.columns = list('AAAA')\n\nIn [24]: result\nOut[24]: \n   A    A    A  A\n0  1  1.0  foo  4\n1  2  1.1  bar  5\n2  3  2.0   az  6\n```\n\nThis might need some profiling, not for speed (as it conceptually does the same think as construction), but for interim memory considerations.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212515873",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212515873",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212515873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUxNTg3Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T17:03:49Z",
    "updated_at": "2016-04-20T17:04:01Z",
    "author_association": "MEMBER",
    "body": "How would this set up handle `parse_dates` for example, where you could be dealing with either `str` names or numerical indices?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212529150",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212529150",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212529150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUyOTE1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T17:37:01Z",
    "updated_at": "2016-04-20T17:37:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung pls try to avoid moving around blocks of code for cleaning (unless its germane), rather do that separately. Its very hard to see what you are actually changing.\n\nThis is completely orthogonal to date parsing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212530418",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212530418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212530418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUzMDQxOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T17:40:04Z",
    "updated_at": "2016-04-20T17:40:52Z",
    "author_association": "MEMBER",
    "body": "1) Noted about the block code moving (to do it in a separate commit).  I moved it because I wanted to use `mapping` and `reverse_map` in the code, and I saw no reason why I should be passing in additional parameters (they are private functions after all).  It also nicely simplifies the signature.\n\n2) I disagree about the orthogonality.  What happens if `parse_dates` needs to use a column whose name happens to be a duplicate?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212532435",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212532435",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212532435,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUzMjQzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T17:47:11Z",
    "updated_at": "2016-04-20T17:47:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung you are missing the point.\n\nit is orthogonal to construction of the final product. yes of course it needs to deal with names, but these are defined in a list-like structure that it can easily access. The point is there is somewhat clean separation now:\n- tokenize (maybe include usecols)\n- dtype inference\n- possible column combination (e.g. from parse_dates)\n- construction\n\nname assignment doesn't happen till the final step (though it can be modified in column combinations)\n\ndon't try to link things that are not necessary\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/212533389",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-212533389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 212533389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUzMzM4OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T17:50:25Z",
    "updated_at": "2016-04-20T17:53:00Z",
    "author_association": "MEMBER",
    "body": "As evidenced by the current code, even under the assumption of unique columns, keeping track of the naming changes is not \"simple\" to do and is quite intertwined with what happens during the processing so that the final construction step is correct.  In your comment, abstracting away the naming works that goes on under \"name assignment doesn't happen till the final step (though it can be modified in column combinations)\" is misleading IMO.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/215265552",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-215265552",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 215265552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTI2NTU1Mg==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-27T23:43:17Z",
    "updated_at": "2016-05-23T21:07:45Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pydata/pandas/pull/12935?src=pr) is **83.84%**\n\n> Merging [#12935](https://codecov.io/gh/pydata/pandas/pull/12935?src=pr) into [master](https://codecov.io/gh/pydata/pandas/branch/master?src=pr) will decrease coverage by **0.32%**\n\n``` diff\n@@             master   #12935   diff @@\n========================================\n  Files           138      136     -2   \n  Lines         50536    49671   -865   \n  Methods           0        0          \n  Branches          0        0          \n========================================\n- Hits          42541    41647   -894   \n- Misses         7995     8024    +29   \n  Partials          0        0          \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last updated by [afde718...78f69c6](https://codecov.io/gh/pydata/pandas/compare/afde7187e22b2013147d0a15911f6ec72e056a43...78f69c6445609e82607ac5ed12759402b8400f23)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216325553",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-216325553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 216325553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjMyNTU1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T18:49:30Z",
    "updated_at": "2016-05-02T18:50:21Z",
    "author_association": "MEMBER",
    "body": "@jreback : I have hit a brick wall in terms of the two lists idea,  and worse, I also found that my original changes that didn't handle the empty solution very well (at least in its current form).  Alas...\n\nRe-reading the two issues again, it appears that mangling the duplicate column names with (`mangle_dupe_cols=True`) is acceptable, so I decided to just mangle the names (if passed as the `names` parameter) by default, which was very simple to do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216325913",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-216325913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 216325913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjMyNTkxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T18:50:52Z",
    "updated_at": "2016-05-02T18:51:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung so your soln is to mange, form the DataFrame, then unmangle?  (if the option is not set)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216326918",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-216326918",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 216326918,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjMyNjkxOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T18:54:45Z",
    "updated_at": "2016-05-02T18:58:05Z",
    "author_association": "MEMBER",
    "body": "No unmangling at the end.  The behaviour is exactly as it is when you do this:\n\n``` python\n>>> data = 'a,a,b\\n1,2,3'  # this already happens\n>>> df = read_csv(StringIO(data))\n>>> df\n  a a.1  b\n0 1   2  3\n```\n\nexcept now it will happen as well when you do this:\n\n``` python\n>>> data = '1,2,3'  # this behaviour will now match that above\n>>> df = read_csv(StringIO(data), names=['a', 'a', 'b'])\n>>> df\n  a a.1  b\n0 1   2  3\n```\n\nFrom what I am reading from the issues, this solution appears to be acceptable.  I've hit a brick wall with regards to un-mangling, as handling the `names` changes in a duplicate-friendly manner as I've mentioned before is not at all straightforward to do AFAICT.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216328841",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-216328841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 216328841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjMyODg0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T19:00:26Z",
    "updated_at": "2016-05-02T19:00:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung you need to unmangle at the end. The user requested certain names. No reason not to provide them (and its trivial to do this).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216330169",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-216330169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 216330169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjMzMDE2OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T19:03:37Z",
    "updated_at": "2016-05-02T19:03:58Z",
    "author_association": "MEMBER",
    "body": "What trivial solution did you have in mind?  And I don't consider `df.columns = columns` valid unless you are planning to somehow manipulate `columns` throughout the entire data conversion process as per the current process (or by some other means).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216330560",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-216330560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 216330560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjMzMDU2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-02T19:04:58Z",
    "updated_at": "2016-05-02T19:04:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can simple unmangle at the end. You already _know_ exactly what the names are at the end.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/216893429",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-216893429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 216893429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNjg5MzQyOQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-04T15:02:28Z",
    "updated_at": "2016-05-04T15:02:28Z",
    "author_association": "MEMBER",
    "body": "Not quite in the manner I think you are describing it IINM:\n\n``` python\n>>> data = '2016-01-01',9:00,5'\n>>> read_csv(StringIO(data), names=['day', 'time', 'c'],\n             parse_dates={'datetime': ['day', 'time']})\n             datetime c\n0 2016-01-01 09:00:00 5\n```\n\nThis is only a \"simple\" example.  I can keep making things more complicated because I know that with unique names, they will be handled just fine with the current system.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217661025",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-217661025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 217661025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzY2MTAyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-07T18:42:07Z",
    "updated_at": "2016-05-07T18:42:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I took a look again. This looks pretty reasonable actually.\n\npls test with both `mangle_dupe_names=True` (default) and `False` for all added tests.\n\nFurther make sure that we have all 3 examples in #7160 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217664411",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-217664411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 217664411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzY2NDQxMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-07T19:39:36Z",
    "updated_at": "2016-05-07T19:40:16Z",
    "author_association": "MEMBER",
    "body": "@jreback : The duplicate column handling only works when `mangle_dupe_cols=True`.  Part of my change was to warn users in the documentation about the current dangers of specifying `mangle_dupe_cols=False` because of this issue of data overwriting in the dictionaries.\n\nTo allow `mangle_dupe_cols=False` to work with duplicate columns will probably require a significant refactoring of the existing code.  Such a refactoring is probably best saved for later.  In the meantime, at least we can say that we do support duplicate column names unlike before, when we really couldn't.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217667420",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-217667420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 217667420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzY2NzQyMA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-07T20:39:26Z",
    "updated_at": "2016-05-07T20:39:26Z",
    "author_association": "MEMBER",
    "body": "First example from #7160 already covered in `pandas/test/frame/test_constructors.py`.  The last two examples are covered in my added test.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217670628",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-217670628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 217670628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzY3MDYyOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-07T21:45:41Z",
    "updated_at": "2016-05-07T21:45:41Z",
    "author_association": "MEMBER",
    "body": "@jreback : Travis is giving the green light.  Ready to merge if there are no further issues or concerns.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218224738",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-218224738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 218224738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODIyNDczOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T17:07:43Z",
    "updated_at": "2016-05-10T17:07:43Z",
    "author_association": "MEMBER",
    "body": "@jreback : Made of the documentation changes as requested.  Ready to merge if there is nothing else.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218304178",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-218304178",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 218304178,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMwNDE3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T21:57:20Z",
    "updated_at": "2016-05-10T21:57:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung i think this is all ok, even though it iS a small/slight API change (IOW if you pass duplicate names you now will get mangeled columns).\n\nSo I think that if `names` has duplicates and you are mangling (which is the default). A warning might be useful, maybe something like `DuplicateWarning`? \n\n@jorisvandenbossche thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218306121",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-218306121",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 218306121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODMwNjEyMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-10T22:05:41Z",
    "updated_at": "2016-05-10T22:05:54Z",
    "author_association": "MEMBER",
    "body": "@jreback : I'm on the fence for that, since we already mangle by default (with no warning) when the file header contains duplicate names, but we can see what @jorisvandenbossche says regarding that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218435963",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-218435963",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 218435963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQzNTk2Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T11:46:02Z",
    "updated_at": "2016-05-11T11:46:02Z",
    "author_association": "MEMBER",
    "body": "Question (apart from the (difficulty of) the implementation): when a user provides explicit `names`, what would we ideally do with duplicates in that list? \nAs it is explicitly provided by the user, I would say that we ideally leave it intact, and by default do not mangle them.\n\nHowever, that is not what this PR is doing. I understand that it is a compromise to mangle the column names, as actually supporting parsing correctly with duplicate column names is not easy to implement? However, the question is, if that would be implemented, would we change the behaviour back (not mangling by default when `names` are provided)? If yes, that seems like a change in behaviour back and forth, and I don't know if that would be a good idea.\n\nFurther, I would rather raise a warning when the parsing is actually doing something wrong (wrong data is returned, so in case of `mangle_dupe_cols=False` and duplicate column names), however this could maybe also be a `NotImplementedError`\n\nAlso note that this PR does not really add support for parsing duplicate columns, it AFAIU only applies `mangle_dupe_cols=True` to provided `names` as well (in addition to parsed names in the data). Ending up with actual duplicate column names is still not possible (`mangle_dupe_cols=False` is still buggy). So I don't think it fully closes #9424\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218437678",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-218437678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 218437678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODQzNzY3OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T11:54:56Z",
    "updated_at": "2016-05-11T11:55:47Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche :\n\n1) Ideal behaviour is to leave the names intact.  However, as previous discussions have illustrated, that is likely going to take a lot of effort to do and is best saved for a major release, not a minor one.\n\n2) `mangle_dupe_cols=True` by default, so in fact we _should_ be mangling `names` IMO by default if there are duplicates, which is what we already do with file headers that contain duplicates, so this behaviour that I introduce in my PR is here to stay I think.\n\n3) Raising an error when the parser is doing something wrong seems inconsistent with what we do for other features that are not supported.  I guess what we could do is check whether or not `mangle_dupe_cols` is `False` and raise a `ValueError` saying that such an option is not supported because of the data overwriting.  How does that sound?\n\n4) Actually, I believe it does close fully #9424.  The user writes in the issue that mangled columns are considered acceptable, so therefore, his issue is now resolved.  I can open a separate issue to add support for `mangle_dupe_cols=False`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218613220",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-218613220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 218613220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODYxMzIyMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T22:49:34Z",
    "updated_at": "2016-05-11T22:49:34Z",
    "author_association": "MEMBER",
    "body": "> 1) Ideal behaviour is to leave the names intact. However, as previous discussions have illustrated, that is likely going to take a lot of effort to do and is best saved for a major release, not a minor one.\n\nI agree with that, but changing the behaviour in a minor release, to change it potentially again in a following major release does also not seem like a good idea. Question is how likely this 'potentially' is.\n\n> 2) mangle_dupe_cols=True by default, so in fact we should be mangling names IMO by default if there are duplicates, which is what we already do with file headers that contain duplicates, so this behaviour that I introduce in my PR is here to stay I think.\n\nThis contradicts with what you say in point 1) I think. Any case, I think the \"we should be mangling names by default\" is stated too strong IMO, as this is not documented is not the current behaviour, so we can make a decision what we think is best.\n\nRegarding 3), that is what I meant. \n\nRegarding 4), doesn't really matter if it closes it fully or not, opening a new issue for the `mangle_dupe_cols=False` buggy behaviour is perfectly fine as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218614439",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-218614439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 218614439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODYxNDQzOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T22:56:13Z",
    "updated_at": "2016-05-11T22:57:03Z",
    "author_association": "MEMBER",
    "body": "@gfyoung Regarding the actual buggy behaviour when having duplicate column names (which would take more work to refactor), I was thinking of a possible hack as workaround, but don't know the code well enough to see if it makes sense or not:\n- in `_maybe_dedup_names`, you can easily store which columns have been renamed (eg in a mapping like `{'colA.1': 'colA'}`)\n- we could internally mangle _always_ the duplicate names (to always avoid the overwriting bug)\n- in the end (before returning) we could rename the columns based on the saved mapping above if `mangle_dupe_cols=False` and leave them mangled when it is True\n\nThat is maybe not the nicest way, but seems not much more additional work in this PR?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/218614537",
    "html_url": "https://github.com/pandas-dev/pandas/pull/12935#issuecomment-218614537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12935",
    "id": 218614537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODYxNDUzNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-11T22:56:49Z",
    "updated_at": "2016-05-11T23:13:37Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : \n\n1) and 2) I don't quite follow.  `mangle_dupe_cols` is clearly documented as being defaulted as `True` as of `0.18.1`, so the decision has already been made for us.  My changes make this option extend to the case when `names` contains duplicates, not just when the file header contains duplicates.  These changes would only affect the case when `mangle_dupe_cols=True`, whereas a major release change would involve refactoring the code so that `mangle_dupe_cols=False` becomes viable.\n\n3) Very well.  I will add `mangle_dupe_cols=False` as an unsupported option.  Also would be good to get feedback on this well from @jreback on this.\n"
  }
]
