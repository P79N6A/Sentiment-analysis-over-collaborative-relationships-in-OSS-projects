[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412318250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22290#issuecomment-412318250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22290",
    "id": 412318250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjMxODI1MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-12T04:39:03Z",
    "updated_at": "2018-08-12T04:39:03Z",
    "author_association": "MEMBER",
    "body": "I think instead of hardcoding is_xyz attributes on the block subclasses they should be inferred like in Index.  Both for correctness (i.e. this Issue) and so we can share code between Block and Index, both of which are array-like."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412368851",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22290#issuecomment-412368851",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22290",
    "id": 412368851,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjM2ODg1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-12T20:16:41Z",
    "updated_at": "2018-08-12T20:16:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "On my WIP SparseArray branch, I get around this by adding \r\n\r\n```python\r\n    @property\r\n    def _is_numeric(self):\r\n        return False\r\n```\r\n\r\nto `ExtensionDtype`. And then ExtensionBlock looks for that.\r\n\r\nWe *could* infer from `ExtensionDtype.kind`, and exclude things like `O`, `S`, and `U`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412485270",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22290#issuecomment-412485270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22290",
    "id": 412485270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjQ4NTI3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T11:16:08Z",
    "updated_at": "2018-08-13T11:16:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "so for integer I made 2 changes (these are not pushed yet). These provide dispatch to blocks as needed for all ops.\r\n\r\n```\r\n+diff --git a/pandas/core/dtypes/common.py b/pandas/core/dtypes/common.py\r\nindex b8cbb4150..a40b54919 100644\r\n--- a/pandas/core/dtypes/common.py\r\n+++ b/pandas/core/dtypes/common.py\r\n@@ -1487,7 +1487,8 @@ def is_numeric_dtype(arr_or_dtype):\r\n     if arr_or_dtype is None:\r\n         return False\r\n     tipo = _get_dtype_type(arr_or_dtype)\r\n-    return (issubclass(tipo, (np.number, np.bool_)) and\r\n+    return (issubclass(tipo, (np.number, np.bool_)) or\r\n+            getattr(tipo, 'is_numeric_dtype', False) and\r\n             not issubclass(tipo, (np.datetime64, np.timedelta64)))\r\n \r\n \r\ndiff --git a/pandas/core/arrays/integer.py b/pandas/core/arrays/integer.py\r\nindex c12611706..38ff5bfad 100644\r\n--- a/pandas/core/arrays/integer.py\r\n+++ b/pandas/core/arrays/integer.py\r\n@@ -37,6 +37,10 @@ class _IntegerDtype(ExtensionDtype):\r\n     type = None\r\n     na_value = np.nan\r\n \r\n+    @property\r\n+    def is_numeric_dtype(self):\r\n+        return True\r\n+\r\n```"
  }
]
