[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376776421",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-376776421",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 376776421,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Njc3NjQyMQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-28T06:28:36Z",
    "updated_at": "2018-03-28T06:28:36Z",
    "author_association": "MEMBER",
    "body": "Haven't looked in detail but just confirming I get the same errors on 10.1"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377118220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377118220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377118220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzExODIyMA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T04:31:26Z",
    "updated_at": "2018-03-29T04:31:26Z",
    "author_association": "MEMBER",
    "body": "Not terribly familiar with this code but I think the problem is with the try..except below:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/0c4e611927772af44b02204192b29282341a5716/pandas/io/sql.py#L119\r\n\r\nDebugging locally `col_name` is `DateColWithTz` and obviously a ``TypeError`` is getting thrown when trying to access a list element using a name, so this will always go through the except block and never send the format, which is the source of the error\r\n\r\n```python\r\n(Pdb)  _handle_date_column(df_col, format=None)\r\n*** ValueError: Tz-aware datetime.datetime cannot be converted to datetime64 unless utc=True\r\n(Pdb)  _handle_date_column(df_col, format='DateColWithTz')\r\n0   NaT\r\n1   NaT\r\nName: DateColWithTz, dtype: datetime64[ns]\r\n```\r\n\r\nAny chance you are familiar with this code? Maybe it should read\r\n\r\n```python\r\nfmt = df_col.name\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377324978",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377324978",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377324978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzMyNDk3OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T18:14:08Z",
    "updated_at": "2018-03-29T18:14:08Z",
    "author_association": "MEMBER",
    "body": "Hmm well I think there's a couple things going on with this. The code linked above is definitely strange because AFAICT the try...catch will always go through the catch block, because we are trying to access a list by name instead of by index. However, there is also code directly below it where maybe the conversion to UTC should be happening:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/0c4e611927772af44b02204192b29282341a5716/pandas/io/sql.py#L128\r\n\r\n`_handle_date_column` behind the scenes is leveraging `is_datetime64tz_dtype` which accepts `arr_or_dtype` and passes that to `DatetimeTZDtype.is_dtype` to determine whether or not the argument is timezone aware.\r\n\r\nThe problem here is that the dtype coming from Postgres is object, and though the documentation would lead you to believe otherwise I don't think `DatetimeTZDtype` actually ever checks the values of an array, but rather just references the dtype.\r\n\r\nSo I think with that the problem could either be:\r\n\r\n- That the dtype from postgres is an object not a timezone aware date time AND/OR\r\n- That `DatetimeTZDtype` can't actually infer that the array contains tz-aware objects from its values\r\n\r\nI think you've been working a good deal with extension types - any idea what the expectation there is?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377351715",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377351715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377351715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzM1MTcxNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T19:49:42Z",
    "updated_at": "2018-03-29T19:49:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's a strange test, but I think if we want things to work we need to pass `utc=True` in that final `else`.\r\n\r\nWe're mixing multiple timezones, which we don't support. They have to be converted to UTC. Essentially\r\n\r\n```python\r\nIn [26]: from dateutil import tz\r\n    ...:\r\n    ...:\r\n\r\nIn [27]: tz1 = tz.gettz(\"US/Central\")\r\n\r\nIn [28]: tz2 = tz.gettz(\"US/Eastern\")\r\n\r\nIn [29]: pd.to_datetime([pd.Timestamp('2017', tzinfo=tz1), pd.Timestamp('2017', tzinfo=tz2)], utc=True)\r\nOut[29]: DatetimeIndex(['2017-01-01 06:00:00+00:00', '2017-01-01 05:00:00+00:00'], dtype='datetime64[ns, UTC]', freq=None)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377361304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377361304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377361304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzM2MTMwNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T20:24:51Z",
    "updated_at": "2018-03-29T20:24:51Z",
    "author_association": "MEMBER",
    "body": "cc @mroeschke "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377383766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377383766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377383766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzM4Mzc2Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T21:52:08Z",
    "updated_at": "2018-03-29T21:52:34Z",
    "author_association": "MEMBER",
    "body": "Remind me: do we test against Postgres on CI? (and if not, maybe we should?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377384423",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377384423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377384423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzM4NDQyMw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T21:55:07Z",
    "updated_at": "2018-03-29T21:55:07Z",
    "author_association": "MEMBER",
    "body": "Yes we do, on several builds"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377385653",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377385653",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377385653,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzM4NTY1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-29T22:00:25Z",
    "updated_at": "2018-03-29T22:00:25Z",
    "author_association": "MEMBER",
    "body": "Same versions though?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377410170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377410170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377410170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzQxMDE3MA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T00:17:04Z",
    "updated_at": "2018-03-30T00:17:04Z",
    "author_association": "MEMBER",
    "body": "@WillAyd I think the try/except logic is okay. `parse_dates ` can be a list (of column names) or dict (`{column_name : format_string}`), so it's trying to get a format back if `col_name` is a key in `parse_dates `, otherwise just parse the column name without a format. \r\n\r\nThat being said, the logic in `_parse_date_columns` doesn't look entirely correct. `utc=True` definitely needs to be passed somewhere in either of the `_handle_date_column` calls in this function since we mention in the `pd.read_sql_query` docs that: \r\n\r\n> Any datetime values with time zone information parsed via the parse_dates parameter will be converted to UTC."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377438147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20505#issuecomment-377438147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20505",
    "id": 377438147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzQzODE0Nw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T03:49:30Z",
    "updated_at": "2018-03-30T03:49:30Z",
    "author_association": "MEMBER",
    "body": "After a second look,  `_harmonize_columns` has a similar block which I think has it right:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/c4b4a81f56205082ec7f12bf77766e3b74d27c37/pandas/io/sql.py#L808-L819\r\n\r\nwhich `_parse_date_columns` should emulate or even better, could consolidate implimentation "
  }
]
