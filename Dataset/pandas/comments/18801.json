[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352384436",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-352384436",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 352384436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjM4NDQzNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-18T10:20:17Z",
    "updated_at": "2017-12-18T10:21:47Z",
    "author_association": "MEMBER",
    "body": "`is_copy` is used in the most popular google hits about SettingWithCopyWarning, eg https://stackoverflow.com/questions/20625582/how-to-deal-with-settingwithcopywarning-in-pandas and https://www.dataquest.io/blog/settingwithcopywarning/ \r\n(actually in the first you are using it yourself in an answer :-))\r\n\r\nWhat is the alternative for power users in library code if they want to avoid an extra unnecessary copy?\r\n\r\n(I never use it myself, as I just do `copy()` to avoid if needed, so I am personally not attached to this method,  but typically don't handle with data where doing an extra `copy()` is a problem. But I think the use case mentioned by Andreas in https://github.com/pandas-dev/pandas/issues/18799 is a valid one)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353449203",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353449203",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353449203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ0OTIwMw==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:24:09Z",
    "updated_at": "2017-12-21T20:24:09Z",
    "author_association": "NONE",
    "body": "So the suggested solution is to use ``copy()`` and that introduces an additional copy? Can you please document that? It seems a bit counter-intuitive that a library needs to do an expensive operation to avoid a warning in user-space, but if that's the suggested (and documented) fix I'll live with it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353450314",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353450314",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353450314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1MDMxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:29:30Z",
    "updated_at": "2017-12-21T20:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@amueller not sure there is anything to add to: http://pandas.pydata.org/pandas-docs/stable/indexing.html#returning-a-view-versus-a-copy\r\n\r\nyou are chain indexing, which violates view semantics. the point is it *may* work, but there are cases where it won't. without copy-on-write, you *must* copy."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353451327",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353451327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353451327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1MTMyNw==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:34:15Z",
    "updated_at": "2017-12-21T20:34:15Z",
    "author_association": "NONE",
    "body": "Ok maybe I just really don't understand the documentation, which is entirely possible. My reading of the warning is that we are returning a copy here, which is the intent. Are you saying it might sometimes return a view instead?\r\n\r\nI don't want to use view semantics, and it tells me I got a copy. I'm very happy I got a copy, it's what I wanted. If I got a view instead, I would need to copy. But I thought the warning said I got a copy, not a view.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353452119",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353452119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353452119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1MjExOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:37:56Z",
    "updated_at": "2017-12-21T20:37:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "exactly, you have understood the point. you *don't* now whether it is a copy or a view on the original. That is the problem. you are doing chained operations and we can't be sure, so you get the warning. it is up to you to: 1) not chain operations, 2) defensively copy."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353452224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353452224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353452224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1MjIyNA==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:38:25Z",
    "updated_at": "2017-12-21T20:38:25Z",
    "author_association": "NONE",
    "body": "So would the warning also be thrown if it is a view?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353452549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353452549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353452549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1MjU0OQ==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:40:13Z",
    "updated_at": "2017-12-21T20:40:27Z",
    "author_association": "NONE",
    "body": "If it's also thrown if it's a view, then the warning is misleading, it says \"A value is trying to be set on a **copy** of a slice from a DataFrame\". If it's not thrown on a view, then it seems like I can distinguish between view and copy, and then I should only copy if I got a view."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353452697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353452697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353452697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1MjY5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:40:56Z",
    "updated_at": "2017-12-21T20:40:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "no, if you *only* have a single dtyped dataframe you won't get this. it only occurs when you filter then add a column on multiple dtypes. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353454311",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353454311",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353454311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1NDMxMQ==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:49:04Z",
    "updated_at": "2017-12-21T20:49:04Z",
    "author_association": "NONE",
    "body": "The question is: can I not find out at runtime if I got a copy or a view and only copy if I got a view?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353454909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353454909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353454909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1NDkwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:52:09Z",
    "updated_at": "2017-12-21T20:52:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can try by introspecting the underlying arrays (not .values)\r\nif anything is a view you must copy"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353455313",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353455313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353455313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1NTMxMw==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:54:08Z",
    "updated_at": "2017-12-21T20:54:08Z",
    "author_association": "NONE",
    "body": "ok. Does that mean that the warning might have been raised even though there is memory sharing?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353455719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353455719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353455719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1NTcxOQ==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T20:56:15Z",
    "updated_at": "2017-12-21T20:56:15Z",
    "author_association": "NONE",
    "body": "Sorry if that question was answered by\r\n\r\n> no, if you only have a single dtyped dataframe you won't get this. it only occurs when you filter then add a column on multiple dtypes.\r\n\r\nbut I don't know how that relates to what happens to the memory. I assume it was meant as a reply to https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353452549 but I don't understand how it relates to it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353458922",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353458922",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353458922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ1ODkyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T21:12:32Z",
    "updated_at": "2017-12-21T21:12:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "because someone could have chained indexed and we don’t know if views are created we\r\ncant be sure that you are not actually looking at a view of something else \r\nand more insidious is that you may have some columns with a view and some without \r\nso we carry around this _is_copy flag which is a weakref to something that is referant\r\nwhen a copy is made we can clear this \r\nbut until then some operations may not know if it’s a view or a copy\r\nnow it doesn’t matter until you actually try to assign something to a frame\r\nwhen this happens \r\n\r\nit’s jt trivial and mostly edge cases but if you are seeing the warning then you have incorrect code\r\nit may still work but it IS chained indexing\r\n\r\nuse at your own risk - you should copy after filtering"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353460351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353460351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353460351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ2MDM1MQ==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T21:19:37Z",
    "updated_at": "2017-12-21T21:19:37Z",
    "author_association": "NONE",
    "body": "Alright. I feel the warning is pretty confusing since it seems to imply that we made a copy, but it only implies that there is some part of the dataframe that was copied, and we don't actually know whether we made a copy or not.\r\n\r\n> use at your own risk - you should copy after filtering\r\n\r\nMaybe the section in the docs that discusses this warning should say that? I don't think it says that now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353565292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-353565292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 353565292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzU2NTI5Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T10:03:20Z",
    "updated_at": "2017-12-22T10:03:20Z",
    "author_association": "MEMBER",
    "body": "To repeat myself from the issue: I think @amueller use case is valid one that we should try to support. If not through `is_copy`, then in another way. \r\n(btw, @jreback it would be nice to at least answer to my objection on the issue here before merging)\r\n\r\nIn case of sklearn's `train_test_split`, they are using integer positional indexing, which will (as far as I understand fancy indexing in numpy) *never* return a view, not even in case of DataFrames with single dtypes. So they can be sure that their subset of a frame is a copy (which they want) and a SettingWithCopyWarning should never be raised on the frames returned by that function.\r\n\r\n> @amueller not sure there is anything to add to: http://pandas.pydata.org/pandas-docs/stable/indexing.html#returning-a-view-versus-a-copy\r\n\r\nExplicitly taking a copy is not mentioned in those docs, so could certainly be added."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/354628523",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-354628523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 354628523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1NDYyODUyMw==",
    "user": {
      "login": "has2k1",
      "id": 780341,
      "node_id": "MDQ6VXNlcjc4MDM0MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/780341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/has2k1",
      "html_url": "https://github.com/has2k1",
      "followers_url": "https://api.github.com/users/has2k1/followers",
      "following_url": "https://api.github.com/users/has2k1/following{/other_user}",
      "gists_url": "https://api.github.com/users/has2k1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/has2k1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/has2k1/subscriptions",
      "organizations_url": "https://api.github.com/users/has2k1/orgs",
      "repos_url": "https://api.github.com/users/has2k1/repos",
      "events_url": "https://api.github.com/users/has2k1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/has2k1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-31T23:49:21Z",
    "updated_at": "2017-12-31T23:49:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Although `is_copy` was meant to be used internally, it leaked out because it was a solution to a justifiable problem i.e you slice a dataframe, you know you created independent dataframe and you want no complaints. A `copy()` operation on the new dataframe is wasteful, especially in library code.\r\n\r\nplotnine uses `is_copy` in about 20 locations, and almost every call from the user will hit `is_copy` at least 10 times, and the number goes up linearly depending on different factors. The [example](https://plotnine.readthedocs.io/en/stable/#Example) on the documentation page goes through about 80 of them."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359355381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-359355381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 359355381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM1NTM4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T08:31:15Z",
    "updated_at": "2018-01-22T08:31:50Z",
    "author_association": "MEMBER",
    "body": "@jreback Can you answer to the objections of me and others? (edit: see now there is a little bit more discussion in #19102)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359390491",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-359390491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 359390491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTM5MDQ5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T11:00:06Z",
    "updated_at": "2018-01-22T11:00:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Until copy-on-write, his is simply not possible in pandas in a reliable way. We don't have full control over memory allocations or when views are actually made."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359496138",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-359496138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 359496138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTQ5NjEzOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T17:12:45Z",
    "updated_at": "2018-01-22T17:12:45Z",
    "author_association": "MEMBER",
    "body": "@has2k1 I see for `plotnine` you switched to using a contextmanager (`with pd.option_context('mode.chained_assignment', None):`) around the plotting code (https://github.com/has2k1/plotnine/commit/9b068b458f4864e05927deab2f374c26b7a64cce). \r\nThis is a satisfying solution for you ?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359510527",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-359510527",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 359510527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTUxMDUyNw==",
    "user": {
      "login": "has2k1",
      "id": 780341,
      "node_id": "MDQ6VXNlcjc4MDM0MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/780341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/has2k1",
      "html_url": "https://github.com/has2k1",
      "followers_url": "https://api.github.com/users/has2k1/followers",
      "following_url": "https://api.github.com/users/has2k1/following{/other_user}",
      "gists_url": "https://api.github.com/users/has2k1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/has2k1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/has2k1/subscriptions",
      "organizations_url": "https://api.github.com/users/has2k1/orgs",
      "repos_url": "https://api.github.com/users/has2k1/repos",
      "events_url": "https://api.github.com/users/has2k1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/has2k1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-22T18:00:29Z",
    "updated_at": "2018-01-22T18:00:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is an okay stopgap measure until copy-on-write is available, but as it implicitly assumes user cognisance it is not a good long term solution. Also, since the package aims to be extensible in many ways, the effects of a context manager may extend to other packages.\r\n\r\nOn the other-hand 'is_copy' was explicit, it forced the user to acknowledge the potential problem at every instance and I think it was better in an open source environment."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391461629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-391461629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 391461629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTQ2MTYyOQ==",
    "user": {
      "login": "zdog234",
      "id": 17930657,
      "node_id": "MDQ6VXNlcjE3OTMwNjU3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/17930657?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zdog234",
      "html_url": "https://github.com/zdog234",
      "followers_url": "https://api.github.com/users/zdog234/followers",
      "following_url": "https://api.github.com/users/zdog234/following{/other_user}",
      "gists_url": "https://api.github.com/users/zdog234/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zdog234/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zdog234/subscriptions",
      "organizations_url": "https://api.github.com/users/zdog234/orgs",
      "repos_url": "https://api.github.com/users/zdog234/repos",
      "events_url": "https://api.github.com/users/zdog234/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zdog234/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-23T19:04:48Z",
    "updated_at": "2018-05-23T19:04:48Z",
    "author_association": "NONE",
    "body": "I have a different reason to want this:\r\n\r\nI'm working on a data pipeline with large enough datasets that I'm worried about the performance hit from repeated copies. An easy way to try to control that would be something like `assert transformed_dataframe.is_copy == False` at the end of each unit test."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/392629442",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18801#issuecomment-392629442",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18801",
    "id": 392629442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjYyOTQ0Mg==",
    "user": {
      "login": "sam-cohan",
      "id": 4357268,
      "node_id": "MDQ6VXNlcjQzNTcyNjg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4357268?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sam-cohan",
      "html_url": "https://github.com/sam-cohan",
      "followers_url": "https://api.github.com/users/sam-cohan/followers",
      "following_url": "https://api.github.com/users/sam-cohan/following{/other_user}",
      "gists_url": "https://api.github.com/users/sam-cohan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sam-cohan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sam-cohan/subscriptions",
      "organizations_url": "https://api.github.com/users/sam-cohan/orgs",
      "repos_url": "https://api.github.com/users/sam-cohan/repos",
      "events_url": "https://api.github.com/users/sam-cohan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sam-cohan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-29T01:41:18Z",
    "updated_at": "2018-05-29T01:41:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yet another feasible use case can be when trying to do multi-processing where portions of a DataFrame are processed in different processes. I was under the assumption that if I take a view, when a process is spawned, only the view will be copied over taking 2X memory. In contrast, if I make a copy, then essentially the original process now has two full copies and each process will also have the partial copy so we will end up with 3X memory requirement... "
  }
]
