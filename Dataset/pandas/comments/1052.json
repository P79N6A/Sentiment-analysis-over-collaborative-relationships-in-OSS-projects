[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5131622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1052#issuecomment-5131622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1052",
    "id": 5131622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzE2MjI=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T14:23:14Z",
    "updated_at": "2012-04-14T14:23:14Z",
    "author_association": "MEMBER",
    "body": "hi-- I think http://pandas.pydata.org/pandas-docs/stable/whatsnew.html#api-changes-to-integer-indexing has the answer to your question. If you have an integer index and pass an integer that is not contained in it, a KeyError will be raised. Or is that not what you're saying? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/5133216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1052#issuecomment-5133216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1052",
    "id": 5133216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxMzMyMTY=",
    "user": {
      "login": "tkf",
      "id": 29282,
      "node_id": "MDQ6VXNlcjI5Mjgy",
      "avatar_url": "https://avatars3.githubusercontent.com/u/29282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tkf",
      "html_url": "https://github.com/tkf",
      "followers_url": "https://api.github.com/users/tkf/followers",
      "following_url": "https://api.github.com/users/tkf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tkf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tkf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tkf/subscriptions",
      "organizations_url": "https://api.github.com/users/tkf/orgs",
      "repos_url": "https://api.github.com/users/tkf/repos",
      "events_url": "https://api.github.com/users/tkf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tkf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-04-14T18:03:54Z",
    "updated_at": "2012-04-14T18:03:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "What I was saying about key error was just an example... which was not correct!  Your answer make me little bit relieved.  Thanks for that.\n\nThe point (from another direction) is that I cannot say what `df.ix[1:2, 3:4]` does until I find out what is the type of index and column of the data frame `df` is.  I believe `.ix` is carefully designed so that it won't \"mixed up\" label and index (like correctly issuing KeyError in the case above).  But I still think having different attributes for doing different things (specifying index or specifying label) is better.  I mean, why not?  It just reduces mental load from user caring about the type of the index.\n\nRegarding implementation, you can just add two attributes, move the functionality of `.ix` into them and call them internally from `.ix`.  Or maybe change what `.ix` does completely.  It is a design decision stuff so I cannot say much; all I want to say is that I think it won't be too hard because you just need to split up one function into two.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11858347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1052#issuecomment-11858347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1052",
    "id": 11858347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODU4MzQ3",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-03T19:58:57Z",
    "updated_at": "2013-01-03T19:58:57Z",
    "author_association": "NONE",
    "body": "`iget`/`irow`/`icol` are nice, but it would be even better to have a `.ix`-like interface. Advantages:\n- Uniform interface across all pandas objects (and generalizable to NDFrame)\n- Allows slice syntax. The current functions accept slices, but you have to construct the objects by hand (!)\n- Allows getting and setting via the same interface (right now there is no interface for assignment!)\n- Allows simultaneous multidimensional selection (`df.by_loc[i, j]` versus `df.icol(j).iget(i)`)\n- More consistent with numpy...\n\nWhat to call it? There are two many names with `i` in them already, and anyway the word 'index' isn't actually useful here, because the key thing about this interface is that it uses a different _kind_ of indexing than the ordinary indexing, so the name should reflect that. `by_loc`? `by_offset`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11858830",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1052#issuecomment-11858830",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1052",
    "id": 11858830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExODU4ODMw",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-03T20:11:07Z",
    "updated_at": "2013-01-03T20:11:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed. Definitely pretty high up on the todo list, just a matter of finding time to build it.\nAs for naming, we were throwing around `iix/pix/oix` (purely integer/positional/ordinal indexing) and `lix` (purely label-based indexing) before. `iix` and `lix` doesn't pair well (looks too much alike on smaller fonts) but `pix` and `oix` would be fine. `by_loc` and `by_label` would be fine too though a bit more typing is involved.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14663758",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1052#issuecomment-14663758",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1052",
    "id": 14663758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjYzNzU4",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-09T14:24:47Z",
    "updated_at": "2013-03-09T14:24:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "This can probably be closed (by #2922)?\n"
  }
]
