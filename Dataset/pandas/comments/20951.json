[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386589766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20951#issuecomment-386589766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20951",
    "id": 386589766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjU4OTc2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T12:44:01Z",
    "updated_at": "2018-05-04T12:44:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @toobaz this closed by your recent MI warning?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386630931",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20951#issuecomment-386630931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20951",
    "id": 386630931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYzMDkzMQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T15:07:27Z",
    "updated_at": "2018-05-04T15:07:27Z",
    "author_association": "MEMBER",
    "body": "> cc @toobaz this closed by your recent MI warning?\r\n\r\nUnfortunately not - my PR should have only affected list(-like)s of keys, not single keys. This is rather related to #19110 and #17024 (and possibly more). Basically, since ``100`` is found in the ``index`` (partial indexing), ``1`` is looked in the ``columns`` rather than in the second level of the ``index``. Which is good (or at least, too late to break it) - except that if ``1`` is not found in the ``columns``, we should retrieve the original exception."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387677582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20951#issuecomment-387677582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20951",
    "id": 387677582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY3NzU4Mg==",
    "user": {
      "login": "MasterAir",
      "id": 6198220,
      "node_id": "MDQ6VXNlcjYxOTgyMjA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6198220?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MasterAir",
      "html_url": "https://github.com/MasterAir",
      "followers_url": "https://api.github.com/users/MasterAir/followers",
      "following_url": "https://api.github.com/users/MasterAir/following{/other_user}",
      "gists_url": "https://api.github.com/users/MasterAir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MasterAir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MasterAir/subscriptions",
      "organizations_url": "https://api.github.com/users/MasterAir/orgs",
      "repos_url": "https://api.github.com/users/MasterAir/repos",
      "events_url": "https://api.github.com/users/MasterAir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MasterAir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T09:18:38Z",
    "updated_at": "2018-05-09T09:18:38Z",
    "author_association": "NONE",
    "body": "I'm happy to have a go fixing this behaviour - not sure how successful I'll be or when I'll have time. Is the expected behaviour that I've specified in the issue report correct? \r\n\r\nShould missing keys always raise a KeyError?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/387690807",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20951#issuecomment-387690807",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20951",
    "id": 387690807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NzY5MDgwNw==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-09T10:09:10Z",
    "updated_at": "2018-05-09T10:09:10Z",
    "author_association": "MEMBER",
    "body": "> I'm happy to have a go fixing this behaviour - not sure how successful I'll be or when I'll have time.\r\n\r\nThe basic idea (real code is more complicated) is to replace something like\r\n\r\n``` python\r\ntry:\r\n    # look for tuple in index\r\nexcept:\r\n    try:\r\n        # look for first element in index, second element in columns\r\n    except Exception as exc:\r\n        raise exc\r\n\r\n```\r\nwith something like:\r\n\r\n``` python\r\ntry:\r\n    # look for tuple in index\r\nexcept Exception as exc:\r\n    try:\r\n        # look for first element in index, second element in columns\r\n    except:\r\n        raise exc\r\n```\r\n\r\n\r\n\r\n> Should missing keys always raise a KeyError?\r\n\r\n``pd.Series(index=list('abc')).loc[1]`` raises ``TypeError``, and (although I don't like it,) it is unrelated to the present issue. But yes, ``print(test_df.loc[(100,1)])`` above should result in a ``KeyError``.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/398822832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20951#issuecomment-398822832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20951",
    "id": 398822832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODgyMjgzMg==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-20T16:58:39Z",
    "updated_at": "2018-06-20T16:58:39Z",
    "author_association": "MEMBER",
    "body": "> The basic idea (real code is more complicated) is to replace something like\r\n\r\nIt's actually not so simple, because we still want to raise the current error when the index is not a ``MultiIndex`` (and maybe even when it is, but the key is not a plausible ``MultiIndex`` key/indexer)."
  }
]
