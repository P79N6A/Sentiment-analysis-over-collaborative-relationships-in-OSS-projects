[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37316915",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37316915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37316915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzE2OTE1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T16:31:59Z",
    "updated_at": "2014-03-11T16:31:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, failing tests is to convert to string, basically before doing regex I do index.astype(str), if you have non-ascii this fails.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37324047",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37324047",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37324047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI0MDQ3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T17:27:30Z",
    "updated_at": "2014-03-11T17:27:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also should regex be match or contains... I'm confused about difference between like/regex. (If it's contains can wrap in `^foo$` to make match.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37326385",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37326385",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37326385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzI2Mzg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T17:45:33Z",
    "updated_at": "2014-03-11T17:45:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think if not specified should be like startswith, e.g. `^`,\n\nmost often you want give me all the columns which start with `foo`\n\nso `match`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37337715",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37337715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37337715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM3NzE1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:15:53Z",
    "updated_at": "2014-03-11T19:15:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback should there be a way to distinguish between match and contains? Previously regex arg acted as contains and like arg as match (which is startswith).\n\nWas thinking of using regex arg, could hack it to take 'match' or 'contains' (match by default)... :s or maybe regex=None use match, regex=True use contains, regex=False don't use regex ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37337864",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37337864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37337864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM3ODY0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:17:21Z",
    "updated_at": "2014-03-11T19:17:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes that makes sense\n- default is `match`\n- `False` is an exact \n- `contains` uses `contains` rather than `match`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37338044",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37338044",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37338044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM4MDQ0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:18:50Z",
    "updated_at": "2014-03-11T19:19:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "maybe catch this: https://github.com/pydata/pandas/issues/5798 (deal with non-strings, e.g .0)\n#5657 (I think this PR will close this - perf of filter)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37338149",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37338149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37338149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM4MTQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:19:48Z",
    "updated_at": "2014-03-11T19:19:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jseabold what do you think of this so far? (I think we should put this on the mailng-list when Andy is ready)....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37338499",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37338499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37338499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM4NDk5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:22:48Z",
    "updated_at": "2014-03-11T19:22:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "atm I'm just False-ing numbers (rather than string-ifying them.. I tried to do that but got ascii errors, so not sure it's worth it, easy to do though). It doesn't raise now (it use string methods, although unfortunately these NaN for numbers so have to fill in after).\n\nWill check the perf.\n\nI can live with exact string args, gives more flexibility later.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37339383",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37339383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37339383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM5Mzgz",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:30:39Z",
    "updated_at": "2014-03-11T19:30:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm pretty much on board AFAICT. I haven't followed too closely. I'd expect `re.search` rather than `re.match` though just becuse it's the more general one. I don't feel strongly about this though. It's not unheard of to want to match on the end of a variable name. `first_educ`, `second_educ`, etc. Something like that. If user wants match behavior it's easier to add that then to get around it. `^.+` vs `^` (or whatever).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37339525",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37339525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37339525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzM5NTI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:31:54Z",
    "updated_at": "2014-03-11T19:31:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jseabold you can always provide a regex if you want to (or alternately can have `regex='match|contains|search'` maybe overkill though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37340152",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37340152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37340152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQwMTUy",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:37:52Z",
    "updated_at": "2014-03-11T19:37:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well then I'm a bit confused about what exactly this is doing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37341460",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37341460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37341460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQxNDYw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:49:51Z",
    "updated_at": "2014-03-11T19:49:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback perf is an issue, for two reasons:\n1. str methods are slower than == (although, if regex is False we can just use ==) and isin (esp. for short lists). Not sure how we can speed this up?\n2. I'm boolean masking using `_slice`, which is **slow** compared to iloc (can I call loc on a generic axis / or is there a better way completely) ?\n\n@jseabold This PR makes the API the same for filter and drop, and do the same thing under the hood. You can pass drop a regex, a boolean function (to apply to index) or a list of labels to drop. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37341763",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37341763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37341763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQxNzYz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:52:51Z",
    "updated_at": "2014-03-11T19:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmmmm, unfortunately regex taking string for match/contains screws up backwards compat. Another arg?\n\nalternative soln is to use select over filter (and dep filter instead), but not the best reason for doing so...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37341806",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37341806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37341806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQxODA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:53:22Z",
    "updated_at": "2014-03-11T19:53:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd no I think you should always uses a compiled regex (or isin/== if you can)...that's the issue\n\nI think you can just compute the indexer and do an iloc it should work, just construct the tuple\n\nsay `indexer` is your axis indexer\n\n```\ntuple_indexer = [ slice(None) ] * self.ndim\ntuple_indexer[axis] = indexer\nreturn self.iloc[tuple(tuple_indexer]]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37341879",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37341879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37341879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQxODc5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:53:56Z",
    "updated_at": "2014-03-11T19:53:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd what do you mean by:\n\n> > > hmmmm, unfortunately regex taking string for match/contains screws up backwards compat. Another arg?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37342179",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37342179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37342179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQyMTc5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T19:56:45Z",
    "updated_at": "2014-03-11T19:56:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Previously regex was an kwarg for filter. In my code I was doing:\n\n```\nif isinstance(regex, string_types): return self.filter(labels=regex, regex=True, axis=axis)\n```\n\nif regex is allowed to be a string (e.g. 'match') I can't do that, and of course this will break old code if they did happen to be filtering by the regex 'match' (unlikely!)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37352067",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37352067",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37352067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzUyMDY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-11T21:27:40Z",
    "updated_at": "2014-03-11T21:27:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd I believe this should be true\n\n```\nindexer = boolean indexer on axis a\ndf.filter(indexer,axis=a) == df.drop(df._get_axis(a)[~indexer],axis=a)\n```\n\n(and I think that that drop should be implemented in terms of filter)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37362747",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37362747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37362747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzYyNzQ3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T00:22:36Z",
    "updated_at": "2014-03-12T00:22:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback yup, that's exactly what the `_select` method does.\n\nWas thinking about this, and not sure regex should be name of flag to decide _how_ regex is applied, as you may want to do contains _without_ using regex. If that makes sense...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37363014",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37363014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37363014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzYzMDE0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T00:25:26Z",
    "updated_at": "2014-03-12T00:25:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm regex is what replace uses\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37367521",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37367521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37367521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzY3NTIx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T01:46:01Z",
    "updated_at": "2014-03-12T01:46:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "replace doesn't offer a way to tweak the way regex works (i.e. match vs contains), you either use regex or you don't. IMO regex should be bool (a la everywhere else) and have another argument to distinguish between contains vs match vs whatever ?\n\n```\nIn [20]: s = pd.Series(['a', 'ab', 'ca'])\n\nIn [15]: s.replace(to_replace='a', value='d')\nOut[15]:\n0     d\n1    ab\n2    ca\ndtype: object\n\nIn [16]: s.replace(regex='a', value='d')\nOut[16]:\n0     d\n1    db\n2    cd\ndtype: object\n\nIn [17]: s.replace(to_replace='a', regex=True, value='d')\nOut[17]:\n0     d\n1    db\n2    cd\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37369083",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37369083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37369083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzY5MDgz",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T02:17:16Z",
    "updated_at": "2014-03-12T02:17:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm still just not sure I understand the issue here. It seems to me (and tell me to shut up, if you get my point already, or this is impossible for backwards compat reasons) that regex should everywhere be search. match is just a way to avoid writing '^'. But since you can just write '^', you shouldn't bend over backwards to provide some weird combinations of keywords that do match and some that do search. AFAICT, you can do everything and more with search (via re.MULTILINE flag) than you can do with match. I always thought it was a mistake (and accident of history) that match was targeted by the old regex functions. Make a one-line note in the docs \"if you want to do `match-like` behavior, then prepend '^'\". If people know what match vs contains is enough for the keywords to make sense, they probably already know about '^' right?\n\n```\n[~/]                                                                            \n[5]: s.replace(to_replace='^a', regex=True, value='d')                          \n[5]:                                                                            \n0     d                                                                         \n1    db                                                                         \n2    ca                                                                         \ndtype: object \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37369124",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37369124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37369124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzY5MTI0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T02:17:55Z",
    "updated_at": "2014-03-12T02:17:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "*old regex functions are those vectorized .str methods that Wes added in an afternoon.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37374082",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37374082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37374082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc0MDgy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T04:15:14Z",
    "updated_at": "2014-03-12T04:15:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I think contains (aka search?) should be the default,  you can always prepend ^ if you so wish, I'll add it as notes in the docstring (and for legacy like kwarg will still do that). regex being bool makes it easier.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37374808",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37374808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37374808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc0ODA4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T04:35:33Z",
    "updated_at": "2014-03-12T04:35:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess the issue is: that will make it a bigger API change... fixed by making regex=False the default.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37374924",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37374924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37374924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzc0OTI0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T04:38:18Z",
    "updated_at": "2014-03-12T04:38:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm never going to be a big fan of any API where what one keyword is affects what another does. I don't think there should be any flag regex True/False. I'm still not understanding the problem that needs to be solved.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37386477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37386477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37386477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mzg2NDc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T08:51:40Z",
    "updated_at": "2014-03-12T08:51:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "the issue is should a passed in labels\nbe treated as an exact match or a regex\n\neg\n\ndf.filter('A')\n\nif the columns are\n\n['A', 'AB']\n\nI think the default has to be an exact match\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37414662",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37414662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37414662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDE0NjYy",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T14:31:18Z",
    "updated_at": "2014-03-12T14:31:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I think the current behavior is exact match. That's the status quo, and it'll probably have to stay that way right? I always just use the regex keyword anyway, because there's not much sense in an exact match given that I can slice on columns. While unfortunate that it is what it is right now, I'm -1 on having a keyword that controls what labels does. Maybe after a deprecation cycle on `labels`, we can switch to `regex.seach` for labels? I doubt there are too many people that rely on using filter('A') that a deprecation cycle would be too painful. I dunno though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37439091",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37439091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37439091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDM5MDkx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T17:37:35Z",
    "updated_at": "2014-03-12T17:37:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, think I'm in favour of having regex bool but allowing a regex string if no labels are passed (and regex=False by default). This mirrors behaviour elsewhere in pandas... ?\n\nI need to add some tests to this branch for both filter and drop, and some warnings.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37439853",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37439853",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37439853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDM5ODUz",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T17:43:35Z",
    "updated_at": "2014-03-12T17:43:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "There's a pretty long-standing unwritten rule at least in numpy/scipy stack not to have keywords that change the meaning of other keywords. I'd be interested to see any exceptions to this. I recall only one and it was a new_behavior keyword (for correlation maybe?) that went through a long and loud deprecation cycle and is now gone.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37441449",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6599#issuecomment-37441449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6599",
    "id": 37441449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDQxNDQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T17:56:12Z",
    "updated_at": "2014-03-12T17:56:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm...this sort of goes back tot he orgiinal, but what if we did\n\n`df.filter(labels=None,.....,regex=None)`\n\nlabels are function, list-like (or a scalar which gets converted to a list) that exact match\nother wise just specify a regex using regex)\n\nthen don't really need to change much, this would then align filter/drop I think (still deprecate select)\n"
  }
]
