[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271928985",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-271928985",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 271928985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTkyODk4NQ==",
    "user": {
      "login": "ashishsingal1",
      "id": 3426091,
      "node_id": "MDQ6VXNlcjM0MjYwOTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3426091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashishsingal1",
      "html_url": "https://github.com/ashishsingal1",
      "followers_url": "https://api.github.com/users/ashishsingal1/followers",
      "following_url": "https://api.github.com/users/ashishsingal1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashishsingal1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashishsingal1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashishsingal1/subscriptions",
      "organizations_url": "https://api.github.com/users/ashishsingal1/orgs",
      "repos_url": "https://api.github.com/users/ashishsingal1/repos",
      "events_url": "https://api.github.com/users/ashishsingal1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashishsingal1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T17:10:12Z",
    "updated_at": "2017-01-11T17:10:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Might be also worth an option to replace outliers with np.nans instead of dropping and calling the function `.outliers()` instead ..\r\n\r\nhttp://stackoverflow.com/questions/29740216/remove-outliers-3-std-and-replace-with-np-nan-in-python-pandas?noredirect=1&lq=1"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271930901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-271930901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 271930901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTkzMDkwMQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T17:16:56Z",
    "updated_at": "2017-01-11T17:16:56Z",
    "author_association": "MEMBER",
    "body": "`df.drop_outliers(std=3)` or `df.mask_outliers(std=3)` looks pretty reasonable to me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271956301",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-271956301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 271956301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTk1NjMwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T18:41:06Z",
    "updated_at": "2017-01-11T18:41:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would be in favor of adding a ``.zscore()`` which I think is pretty non-controversial.\r\n\r\n``df.where(np.abs(stats.zscore(df)) < 3)`` now\r\n\r\n``df.where(df.zscore() < 3)`` I think is pretty concise, so no real reason to have a 'special' function to drop outliers."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271959729",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-271959729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 271959729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTk1OTcyOQ==",
    "user": {
      "login": "ashishsingal1",
      "id": 3426091,
      "node_id": "MDQ6VXNlcjM0MjYwOTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3426091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashishsingal1",
      "html_url": "https://github.com/ashishsingal1",
      "followers_url": "https://api.github.com/users/ashishsingal1/followers",
      "following_url": "https://api.github.com/users/ashishsingal1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashishsingal1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashishsingal1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashishsingal1/subscriptions",
      "organizations_url": "https://api.github.com/users/ashishsingal1/orgs",
      "repos_url": "https://api.github.com/users/ashishsingal1/repos",
      "events_url": "https://api.github.com/users/ashishsingal1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashishsingal1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T18:53:54Z",
    "updated_at": "2017-01-11T18:53:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok. Would this work as an interface to scipy.stats.zscore? So zscore() would have options axis and ddof as in scipy. And implementation would just call scipy.stats.zscore (which calls numpy in turn)?\r\n\r\nAlso, worth including an abs option (could be optional default to false)? Since pandas already has .abs(), I think this is not necessary but happy to hear other viewpoints.\r\n\r\nhttps://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.zscore.html\r\n\r\nhttps://github.com/scipy/scipy/blob/v0.18.1/scipy/stats/stats.py#L2181-L2240"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271960213",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-271960213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 271960213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTk2MDIxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T18:55:31Z",
    "updated_at": "2017-01-11T18:55:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "we don't have an explicit dependency on ``scipy``, so you should simply write the function similar to how ``.mad`` is defined."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271993770",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-271993770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 271993770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTk5Mzc3MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T21:04:13Z",
    "updated_at": "2017-01-11T21:04:13Z",
    "author_association": "MEMBER",
    "body": "My concern for a `drop_outliers` like function is that it is very application/domain-dependent on how typically outliers are detected (and there are many methods that you could use).\r\n\r\nIn that light, a `zscore` sounds better, but still not sure if I find this worth a new DataFrame method "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272000577",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-272000577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 272000577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjAwMDU3Nw==",
    "user": {
      "login": "ashishsingal1",
      "id": 3426091,
      "node_id": "MDQ6VXNlcjM0MjYwOTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3426091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ashishsingal1",
      "html_url": "https://github.com/ashishsingal1",
      "followers_url": "https://api.github.com/users/ashishsingal1/followers",
      "following_url": "https://api.github.com/users/ashishsingal1/following{/other_user}",
      "gists_url": "https://api.github.com/users/ashishsingal1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ashishsingal1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ashishsingal1/subscriptions",
      "organizations_url": "https://api.github.com/users/ashishsingal1/orgs",
      "repos_url": "https://api.github.com/users/ashishsingal1/repos",
      "events_url": "https://api.github.com/users/ashishsingal1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ashishsingal1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T21:29:47Z",
    "updated_at": "2017-01-11T21:29:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agree that there are many ways to drop outliers so perhaps the function zscore is clearer, but I think that using zscores is the most commonly used method of dropping outliers. From searching \"outliers stackoverflow pandas\", I clicked on the first 10 questions and the majority (though by no means all) use zscore. The second most cited method was percentile, which can utilize `rank()` within pandas already.\r\n\r\nSeparately, wouldn't it be cool if there was a Google Analytics or Mixpanel type tool to track function usage for open source projects?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/272019319",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-272019319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 272019319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MjAxOTMxOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T22:42:55Z",
    "updated_at": "2017-01-11T22:42:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed with @jorisvandenbossche."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279859772",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279859772",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279859772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg1OTc3Mg==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-14T22:40:55Z",
    "updated_at": "2017-02-14T23:28:11Z",
    "author_association": "NONE",
    "body": "@ashishsingal1, \r\nI recently had to analyse a large number (100+) of messy time series and learnt a couple of things in the processes:\r\n1. zscore is a poor metric as it heavily influenced by the outliers (see [robust measure of scale](https://en.wikipedia.org/wiki/Robust_measures_of_scale)).  MAD and Interquartile Range work better, see [here](http://colingorrie.github.io/outlier-detection.html).\r\n2. For a time series the trend must be removed (i.e., needs to be [stationary](https://en.wikipedia.org/wiki/Stationary_process)) before using MAD/IQR/z score.  In my case I only had linear trends and since this made the API simper I did not bother with other cases.\r\n3. Visualisation of the outliers is very helpful in checking what is going on with the data.\r\n4. Outliers is an inexact science and for time series MAD/IQR/z score seem to be it. \r\n\r\nAfter some experimentation in my project I settled on these three functions/APIs:\r\n-  isoutlier: Take a timeseries, optionally remove the trend, then applies one of MAD/IQR/z score and a threshold (essentially number of standard deviations). Returns a series of booleans. This works like other \"is*\" functions.\r\n\r\n- replace: Take a time series,  find the outliers using isoutlier, replace them with NaN or  interpolated value.  This is a convenient semantic sugar that makes the analysis much easier to read and understand. I settled on NaN as it works well with other panda tools and when the time series is plotted the chart shows a break in the data which is nice!\r\n- plot: Draw the time series and marking the outliers with a star. Optionally draw the trend line. I found this to be invaluable in understanding the outliers. \r\n![image](https://cloud.githubusercontent.com/assets/16606323/22953710/6b8103e6-f366-11e6-945b-b8c20ecfb033.png)\r\n\r\n I implemented these [here](https://github.com/Kevin-McIsaac/Nightlife/blob/master/outlier.py)  and discussed them in this [notebook](https://github.com/Kevin-McIsaac/Nightlife/blob/master/Outlier%20Examples.ipynb). Is this the kind of functionality you are looking for? Let me know what you think."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279878138",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279878138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279878138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg3ODEzOA==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T00:12:55Z",
    "updated_at": "2017-02-15T00:12:55Z",
    "author_association": "NONE",
    "body": "@jorisvandenbossche, I wanted to share my experience as a novice.  Outliers is the first topic where I did not find an panda function, or method in a related toolkit (e.g., statsmethods), that I could immediately apply to solve my problem. As a result it took me a day to figure out how outliers are detected and write the tools I needed. This was  frustrating, though enlightening.  \r\n\r\nFor a time series, and I say time series as it narrows the problem, I only found three methods: z score (which uses mean and sd), robust z score (uses median & MAD instead) and IQR. The literature indicates z score is a poor metric and robust z score or IQR should be used instead.   What other methods were you thinking about?\r\n\r\nI found a number of implementation issues, e.g, which methods (zscore, MAD., IQR), importance of detrending, using OLS with time series, dealing with NaNs in the input, that needed to be resolved. While in hindsight each is simple, it took some time and brain power to figure it all out.\r\n\r\nI think there is a case for 3 time series outlier functions (find, replace & visualise) for the following reasons:\r\n- MAD/IQR/zscore with detrending is ok for many time series and will save new users time and effort. \r\n- We can bring together some best practices for new users and highlight the issues for the experienced users.\r\n- These 3 tools hide the details and make the analysis easy to do and easier to understand.\r\n\r\nMy code on [github](https://github.com/Kevin-McIsaac/Nightlife/blob/master/outlier.py) might be a useful starting point as is this [notebook](https://github.com/Kevin-McIsaac/Nightlife/blob/master/Outlier%20Examples.ipynb). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279887024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279887024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279887024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg4NzAyNA==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T01:05:07Z",
    "updated_at": "2017-02-15T01:05:07Z",
    "author_association": "NONE",
    "body": "@jreback I found it was not a simple as\r\n> I would be in favor of adding a .zscore() which I think is pretty non-controversial.\r\n> \r\n> df.where(np.abs(stats.zscore(df)) < 3) now\r\n> \r\n> df.where(df.zscore() < 3) I think is pretty concise, so no real reason to have a 'special' function to drop outliers.\r\n\r\nbecause this only works when df does not have a trend (i.e., is a stationary time series). To make this work\r\n1. You need to fit a trend (say linear) then subtract that from df before applying  z score.  \r\n2. This can be done with ols but it does not work with datetime, so you then need to deal with that.\r\n3. If I recall correctly I had to use statsmodels.formula.ols, not statsmodels.ols, as the latter had problems with time series that had NaN in the input.\r\n\r\nThen of course z score is a poor measure and you should use robust zscore instead or IQR. However IQR is a more complex logical condition and is not a one liner.\r\n\r\nYou can see this in [outlier.py](https://github.com/Kevin-McIsaac/Nightlife/blob/master/outlier.py). My code probably need sanitizing but the logic is ok."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279889622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279889622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279889622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg4OTYyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T01:20:39Z",
    "updated_at": "2017-02-15T01:21:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Kevin-McIsaac  sure. I think this code is more appropriate for statsmodels. Why don't you post an issue there."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279894901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279894901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279894901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg5NDkwMQ==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T01:53:35Z",
    "updated_at": "2017-02-15T01:53:35Z",
    "author_association": "NONE",
    "body": "That was my first thought but they don't handle time series and that is where the complexity is\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279896116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279896116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279896116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg5NjExNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T02:01:27Z",
    "updated_at": "2017-02-15T02:01:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "did you look here: http://www.statsmodels.org/stable/tsa.html"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279897691",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279897691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279897691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTg5NzY5MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T02:12:33Z",
    "updated_at": "2017-02-15T02:12:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think these could live alongside their [filters](http://www.statsmodels.org/stable/tsa.html#time-series-filters)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279900619",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279900619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279900619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTkwMDYxOQ==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T02:34:50Z",
    "updated_at": "2017-02-15T02:44:07Z",
    "author_association": "NONE",
    "body": "@jreback, not sure how this would work as statmodel time series don't have an explicit time index, i.e., they are a 1_D numpy array where the time index is assumed to be uniform. \r\n\r\nThis is an issue for panda time series with a nonuniform time index and the trend must be removed before computing the dispersion (e.g., MAD, IQR). \r\n\r\nMy thought is for a pd.Series ts we would want to write \r\n```\r\n    ts[ts.isoutlier(method='MAD')]\r\n```\r\n\r\nwhich would need some glue to work with stats method anyway\r\n\r\nIn retrospect the code I've written is just glue from pd.Series to statsmethod ols plus formulas for using z score, MAD or IQR  \r\n\r\nIt seems the consensus is this is not worth including and I'm happy to leave it at that. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279903220",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279903220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279903220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTkwMzIyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T02:53:48Z",
    "updated_at": "2017-02-15T02:53:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Kevin-McIsaac these are well within the scope of ``statsmodels`` and I think they would be happy to include it.\r\n\r\ncc @josef-pkt"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279904952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15111#issuecomment-279904952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15111",
    "id": 279904952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTkwNDk1Mg==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-15T03:08:05Z",
    "updated_at": "2017-02-15T08:47:32Z",
    "author_association": "NONE",
    "body": "Ok, will do"
  }
]
