[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406776195",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-406776195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 406776195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjc3NjE5NQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-21T07:04:15Z",
    "updated_at": "2018-07-21T07:04:15Z",
    "author_association": "MEMBER",
    "body": "Test file couldnâ€™t import in py27.  Is there a backport of ThreadpoolExecutor?\r\n\r\nFor the most part pandas doesnâ€™t promise threadsafety.  Is there a reason non-safety in this spot is particularly problematic?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406782404",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-406782404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 406782404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjc4MjQwNA==",
    "user": {
      "login": "kinow",
      "id": 304786,
      "node_id": "MDQ6VXNlcjMwNDc4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/304786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kinow",
      "html_url": "https://github.com/kinow",
      "followers_url": "https://api.github.com/users/kinow/followers",
      "following_url": "https://api.github.com/users/kinow/following{/other_user}",
      "gists_url": "https://api.github.com/users/kinow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kinow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kinow/subscriptions",
      "organizations_url": "https://api.github.com/users/kinow/orgs",
      "repos_url": "https://api.github.com/users/kinow/repos",
      "events_url": "https://api.github.com/users/kinow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kinow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-21T09:04:30Z",
    "updated_at": "2018-07-21T09:04:30Z",
    "author_association": "NONE",
    "body": "@jbrockmendel thanks for reviewing it so quickly. \r\n\r\n>Test file couldnâ€™t import in py27. Is there a backport of ThreadpoolExecutor?\r\n\r\nOh, it's not included with py27. I believe it's included in py3, but for py27 we'd have to have something like `pip install futures`.\r\n\r\n>For the most part pandas doesnâ€™t promise threadsafety. Is there a reason non-safety in this spot is particularly problematic?\r\n\r\nOnly if users are using indexes in a multi threaded environment. Though, I believe we could suggest as workaround to ask users to put the lock before they call the index.\r\n\r\nI'd be happy to close the PR and comment in the #21150 and go with that approach. At least I learned a few things while reading the issue & the code (-:"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406939304",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-406939304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 406939304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkzOTMwNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T04:57:47Z",
    "updated_at": "2018-07-23T04:57:47Z",
    "author_association": "MEMBER",
    "body": "> For the most part pandas doesnâ€™t promise threadsafety. Is there a reason non-safety in this spot is particularly problematic?\r\n\r\n@jbrockmendel : We don't promise thread-safety, but IMO we should try to improve it if possible. ðŸ™‚ "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406939334",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-406939334",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 406939334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkzOTMzNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T04:58:07Z",
    "updated_at": "2018-07-23T04:58:07Z",
    "author_association": "MEMBER",
    "body": "@kinow : Going to also need a `whatsnew` entry for `0.24.0`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406982023",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-406982023",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 406982023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjk4MjAyMw==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T08:34:31Z",
    "updated_at": "2018-07-27T11:59:38Z",
    "author_association": "NONE",
    "body": "Hello @kinow! Thanks for updating the PR.\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on July 27, 2018 at 11:59 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406982070",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-406982070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 406982070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjk4MjA3MA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-07-23T08:34:44Z",
    "updated_at": "2018-10-12T07:00:30Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22006?src=pr&el=h1) Report\n> Merging [#22006](https://codecov.io/gh/pandas-dev/pandas/pull/22006?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/c8ce3d01e9ffafc24c6f9dd568cd9eb7e42c610c?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22006/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/22006?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #22006   +/-   ##\n=======================================\n  Coverage    92.2%    92.2%           \n=======================================\n  Files         169      169           \n  Lines       50924    50924           \n=======================================\n  Hits        46952    46952           \n  Misses       3972     3972\n```\n\n| Flag | Coverage Î” | |\n|---|---|---|\n| #multiple | `90.62% <Ã¸> (Ã¸)` | :arrow_up: |\n| #single | `42.3% <Ã¸> (Ã¸)` | :arrow_up: |\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22006?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Î” = absolute <relative> (impact)`, `Ã¸ = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22006?src=pr&el=footer). Last update [c8ce3d0...3414adf](https://codecov.io/gh/pandas-dev/pandas/pull/22006?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406984462",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-406984462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 406984462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjk4NDQ2Mg==",
    "user": {
      "login": "kinow",
      "id": 304786,
      "node_id": "MDQ6VXNlcjMwNDc4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/304786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kinow",
      "html_url": "https://github.com/kinow",
      "followers_url": "https://api.github.com/users/kinow/followers",
      "following_url": "https://api.github.com/users/kinow/following{/other_user}",
      "gists_url": "https://api.github.com/users/kinow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kinow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kinow/subscriptions",
      "organizations_url": "https://api.github.com/users/kinow/orgs",
      "repos_url": "https://api.github.com/users/kinow/repos",
      "events_url": "https://api.github.com/users/kinow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kinow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T08:44:09Z",
    "updated_at": "2018-07-23T08:44:09Z",
    "author_association": "NONE",
    "body": "@gfyoung thanks for the thorough review. Here's a summary of my changes, but before, just a heads-up that I added a few more commits, but am happy to squash them all before merging.\r\n\r\n* moved thread/allocate_lock imports to `pandas/compat/__init__.py`. I had one issue later, because I was renaming the builtin module `_thread` (Py3 in my env) to `thread`. Then trying to `from thread import allocate_lock`. I believe it's because the way Python treats builtins in a special way? I think the current import in the compat module should work, with the cons that in case we need more classes/methods from the `thread` module, we'd have to keep adding them to the import list\r\n* took liberty of fixing `strptime` as well, which was mentioned earlier in this ticket, but happy to revert in case we don't want to mix the changes here, and instead submit another PR later for that?\r\n* added `futures` to a few files under `ci/` folder, which I believe are used by the CI tools to test Pandas. With this, the Travis-CI error from before, related to not finding `ThreadpoolExecutor` should be gone (hopefully, it's still running as I write this)\r\n* moved the unit test from its own class, to under test_base.py, still keeping it in its isolated class. So that maybe we can add more in the future if necessary? Otherwise, happy to move it to either `TestIndexUtils` or `TestIndex` (two other classes there).\r\n\r\nThanks\r\nBruno"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407000811",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407000811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407000811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzAwMDgxMQ==",
    "user": {
      "login": "kinow",
      "id": 304786,
      "node_id": "MDQ6VXNlcjMwNDc4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/304786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kinow",
      "html_url": "https://github.com/kinow",
      "followers_url": "https://api.github.com/users/kinow/followers",
      "following_url": "https://api.github.com/users/kinow/following{/other_user}",
      "gists_url": "https://api.github.com/users/kinow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kinow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kinow/subscriptions",
      "organizations_url": "https://api.github.com/users/kinow/orgs",
      "repos_url": "https://api.github.com/users/kinow/repos",
      "events_url": "https://api.github.com/users/kinow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kinow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T09:43:44Z",
    "updated_at": "2018-07-23T09:43:44Z",
    "author_association": "NONE",
    "body": "@jreback \r\n\r\n>i will have a look\r\n>but we make no guarantee on threading at all\r\n>so not inclined to add this\r\n\r\n(replying here)\r\n\r\nNot a problem, no hard feelings :-) as I said, it was fun and I learned while working on this, so even if this PR is closed and not merged, that's still all right (and I'd only have to thanks everybody who reviewed/replied here too)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407069797",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407069797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407069797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA2OTc5Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T14:05:58Z",
    "updated_at": "2018-07-23T14:05:58Z",
    "author_association": "MEMBER",
    "body": "> We don't promise thread-safety, but IMO we should try to improve it if possible.\r\n\r\nSure.  My point was that if we are going to start addressing thread-safety, we should triage.  I really have no idea if this should be at the top of the list, hence asking the OP.\r\n\r\nAlso curious how nicely locks play with cython code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407070690",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407070690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407070690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzA3MDY5MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T14:08:30Z",
    "updated_at": "2018-07-23T14:08:30Z",
    "author_association": "MEMBER",
    "body": "> took liberty of fixing strptime as well, which was mentioned earlier in this ticket, but happy to revert in case we don't want to mix the changes here\r\n\r\nDefinitely revert.  A lot of time and effort has gone into getting the dependency structure of those modules right.  Adding a dependency on `pandas.compat` is not part of the gameplan.  (cc @gfyoung)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407228900",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407228900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407228900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzIyODkwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T23:08:49Z",
    "updated_at": "2018-07-23T23:08:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "so is it possible to use he cython / c-python API calls for the locks in strptime.pyx?\r\n\r\ni agree getting this with a good foundation would be a nice start "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407234364",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407234364",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407234364,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzIzNDM2NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T23:41:51Z",
    "updated_at": "2018-07-23T23:42:00Z",
    "author_association": "MEMBER",
    "body": "> Adding a dependency on pandas.compat is not part of the gameplan. (cc @gfyoung)\r\n\r\n@jbrockmendel : Where do you want to put the import code then?  It should be moved if we're going to have it in two places in the Cython code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407234854",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407234854",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407234854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzIzNDg1NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T23:45:00Z",
    "updated_at": "2018-07-23T23:45:00Z",
    "author_association": "MEMBER",
    "body": "> but we make no guarantee on threading at all\r\nso not inclined to add this\r\n\r\n@jreback : Is there a reason to not make something thread safe if possible?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407239803",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407239803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407239803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzIzOTgwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T00:18:19Z",
    "updated_at": "2018-07-24T00:18:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not against threadsafeing at all. But say pandas is thread-safe is a huge thing, and so saying 'part' is threadsafe leads one to believe 'all'. so have to be really careful about this. Further the performance might (or might not be an issue)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407239887",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407239887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407239887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzIzOTg4Nw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T00:18:45Z",
    "updated_at": "2018-07-24T00:18:45Z",
    "author_association": "MEMBER",
    "body": "> Where do you want to put the import code then?\r\n\r\nThe import in strptime needs to stay where it is.  If another module needs it, get it from there.  Or in pandas.compat import it from strptime, then in index.pyx import it from pandas.compat"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407242323",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407242323",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407242323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI0MjMyMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T00:35:26Z",
    "updated_at": "2018-07-24T00:35:43Z",
    "author_association": "MEMBER",
    "body": "> The import in strptime needs to stay where it is. If another module needs it, get it from there.\r\n\r\n* Why does it need to stay there?\r\n* I don't follow why we should make other code depend on `strptime`, such as `pandas.compat`.  Semantically, that's confusing me a lot.  I should also point out that we do use `compat` in other Cython files like `parsers.pyx`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407243713",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407243713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407243713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI0MzcxMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T00:44:52Z",
    "updated_at": "2018-07-24T00:44:52Z",
    "author_association": "MEMBER",
    "body": "> Why does it need to stay there?\r\n\r\nIn order to import `Timestamp`, `Timedelta`, ... into `pandas._libs.__init__`, we need `_libs.tslibs` to have no import-time dependencies on non-`_libs` pandas."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407250005",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407250005",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407250005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI1MDAwNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T01:25:27Z",
    "updated_at": "2018-07-24T01:25:27Z",
    "author_association": "MEMBER",
    "body": "> In order to import Timestamp, Timedelta, ... into pandas._libs.__init__, we need _libs.tslibs to have no import-time dependencies on non-_libs pandas.\r\n\r\nAh...I see.\r\n\r\nProposal: `_libs.compat` ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407261260",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407261260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407261260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI2MTI2MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T02:36:14Z",
    "updated_at": "2018-07-24T02:36:14Z",
    "author_association": "MEMBER",
    "body": "> Proposal: `_libs.compat` ?\r\n\r\nThere may be merit to this idea, but it would be for the _actual_ compat code that is currently in _libs/src/headers/ and src/compat_helper.h\r\n\r\nPlease leave strptime alone.  A lot of effort has gone into making tslibs logically independent for build/testing purposes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/407276824",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-407276824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 407276824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNzI3NjgyNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-24T04:24:39Z",
    "updated_at": "2018-07-24T04:24:49Z",
    "author_association": "MEMBER",
    "body": "> Please leave strptime alone. A lot of effort has gone into making tslibs logically independent for build/testing purposes.\r\n\r\nFair enough.  We can figure out where best to put this thread allocator import afterwards, though I still am of the opinion that something should be abstracted out so we don't write this code multiple times or unnecessarily make `index.pyx` dependent on `strptime.pyx`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408402464",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-408402464",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 408402464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQwMjQ2NA==",
    "user": {
      "login": "kinow",
      "id": 304786,
      "node_id": "MDQ6VXNlcjMwNDc4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/304786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kinow",
      "html_url": "https://github.com/kinow",
      "followers_url": "https://api.github.com/users/kinow/followers",
      "following_url": "https://api.github.com/users/kinow/following{/other_user}",
      "gists_url": "https://api.github.com/users/kinow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kinow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kinow/subscriptions",
      "organizations_url": "https://api.github.com/users/kinow/orgs",
      "repos_url": "https://api.github.com/users/kinow/repos",
      "events_url": "https://api.github.com/users/kinow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kinow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T12:18:11Z",
    "updated_at": "2018-07-27T12:18:11Z",
    "author_association": "NONE",
    "body": "Updated pull request, now wait for Travis CI to confirm I didn't forget anything (test_base.py passing locally). Rebased and squashed commits too.\r\n\r\nI'd be ok with leaving this PR as it is, and instead working on a broader ticket to define a plan to support multi-thread in Pandas - assuming there's a consensus to slowly introduce it, as I don't think it can happen in one-go.\r\n\r\nOtherwise, I'm also keen to help documenting what can be used in a multi-threaded environment, and what cannot. We could simply add a few docstring comments, stating whether a class is thread-safe or not, or giving more info about how to use it in a multi-threaded environment. Normally that's a convention that I am used to in the [Apache Software Foundation with Java](https://github.com/apache/commons-collections/blob/ea305b08516979ff3e5688cd5268e8f7a7a1234e/src/main/java/org/apache/commons/collections4/ArrayStack.java#L25).\r\n\r\nThat way tickets like this could be closed in favour of good documentation. Happy to help working on either of these two, or even a third option. Because as [Captain Kirk said](https://www.youtube.com/watch?v=2S-0vIBIp4Y&feature=youtu.be&t=3m49s), if really necessary there's always a third alternative :nerd_face: "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/408407996",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-408407996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 408407996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODQwNzk5Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-27T12:44:47Z",
    "updated_at": "2018-07-27T12:44:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kinow I think we would welcome better multi thread support with a few caveats\r\n\r\n- must have more benchmarks / in particular we donâ€™t want to slow down single threaded too much\r\n- create a central place to handle the code as much as possible (eg the lock cohde)\r\n- most of this would be cython code - so need to support the idiomatic expressions\r\n- ideally identify 2 or more issues so that we can have a generalized plan rather than one offs\r\n\r\nthe last point is the key one"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428792098",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-428792098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 428792098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODc5MjA5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T02:00:52Z",
    "updated_at": "2018-10-11T02:00:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you merge master and update?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428827889",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-428827889",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 428827889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODgyNzg4OQ==",
    "user": {
      "login": "kinow",
      "id": 304786,
      "node_id": "MDQ6VXNlcjMwNDc4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/304786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kinow",
      "html_url": "https://github.com/kinow",
      "followers_url": "https://api.github.com/users/kinow/followers",
      "following_url": "https://api.github.com/users/kinow/following{/other_user}",
      "gists_url": "https://api.github.com/users/kinow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kinow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kinow/subscriptions",
      "organizations_url": "https://api.github.com/users/kinow/orgs",
      "repos_url": "https://api.github.com/users/kinow/repos",
      "events_url": "https://api.github.com/users/kinow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kinow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-11T05:43:22Z",
    "updated_at": "2018-10-11T05:43:22Z",
    "author_association": "NONE",
    "body": "Sure thing @jreback. Done :tada: "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441150404",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22006#issuecomment-441150404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22006",
    "id": 441150404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE1MDQwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T03:35:20Z",
    "updated_at": "2018-11-23T03:35:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as stale. if you'd like to continue, pls ping."
  }
]
