[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20881947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20881947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20881947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODgxOTQ3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-12T15:03:18Z",
    "updated_at": "2013-07-12T15:03:44Z",
    "author_association": "MEMBER",
    "body": "i like this idea but it should return a bool not the frame indexed by and-ing or or-ing the `isin`s, because the bool version is consistent with `Series.isin`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20882847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20882847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20882847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODgyODQ3",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-12T15:14:58Z",
    "updated_at": "2013-07-12T15:14:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Absolutely on returning the bool.  Mistake on my part.\n\nThe most obvious uses are how='and' and how='or', which will return a 1-d bool that can be indexed into.\n\nWould it also be useful to have some way to get just the locations where the value is in the array?\n\n``` python\n#pseduocode\n\ndf.isin(['a', 'b', 'c'], how='any')  # any probably not the right argument name.\n\n     ids   ids2   vals\n0   True  False  False\n1   True  False  False\n2  False   True  False\n3  False  False  False\n```\n\nThis can be achieved by applying `.isin()` to each series and then concatenating together, or even using `df.applymap(lamda x: x in arr)`.  Not sure we'd need a third way.  I'd say just 'and' and 'or' for now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20884741",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20884741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20884741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODg0NzQx",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-12T15:43:25Z",
    "updated_at": "2013-07-12T15:43:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "If no one else minds, I can try to take a crack at this.  I haven't done much with cython so you might want to label it someday.  It looks like the `Series.isin()` uses `ismember` from `lib.pyx`.  I was thinking about either using that for each column of `df` we're checking for, or writing something similar for the `DataFrame` version.\n\nIs there any preference for a default on `and` vs. `or` for the `how` parameter?\n\nAlso for the examples I've been giving it should be `df[['ids', 'ids2']].isin()`, not `df.isin()` since the `vals` column won't be in the reference array.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20885487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20885487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20885487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODg1NDg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-12T15:53:54Z",
    "updated_at": "2013-07-12T15:53:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "u can prob just do this is python\niterate over columns and use isin\n\nif its not ast enough could change (but also good to get algo right first)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20885954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20885954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20885954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODg1OTU0",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-12T15:59:57Z",
    "updated_at": "2013-07-12T15:59:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yep.  Should be much easier than I was thinking.  I'll try to get this done today.  Going to (possibly) be without internet until Sunday, but I should have it done by then.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20888872",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20888872",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20888872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODg4ODcy",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-12T16:48:42Z",
    "updated_at": "2013-07-12T17:19:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "So right now I'm thinking about going with @jreback's idea and calling isin on each column.\n\nI'm getting one failure locally... (unreleated to what I've change, I think.)\n\n```\nFAIL: test_convert_objects (pandas.tests.test_frame.TestDataFrame)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/Users/tom/pandas/pandas/tests/test_frame.py\", line 5486, in test_convert_objects\n    assert_frame_equal(result, expected)\n  File \"/Users/tom/pandas/pandas/util/testing.py\", line 238, in assert_frame_equal\n    check_less_precise=check_less_precise)\n  File \"/Users/tom/pandas/pandas/util/testing.py\", line 197, in assert_series_equal\n    assert_almost_equal(left.values, right.values, check_less_precise)\n  File \"/Users/tom/pandas/pandas/util/testing.py\", line 141, in assert_almost_equal\n    assert_almost_equal(a[i], b[i], check_less_precise)\n  File \"/Users/tom/pandas/pandas/util/testing.py\", line 129, in assert_almost_equal\n    assert a == b, \"%s != %s\" % (a, b)\nAssertionError: na != nan\n```\n\nI've got it pushed to my branch [here](https://github.com/TomAugspurger/pandas/tree/df_isin).  I'll do a proper PR in a sec, but I forgot to add the changes the release notes.  Can I still make update the release notes and everything into the same commit without screwing up world?  I know you aren't supposed to rebase changes pushed to a remote, but in this case is remote `pandas/pandas` or does `TomAugspurger/pandas` count too?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20892695",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20892695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20892695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODkyNjk1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-12T17:54:58Z",
    "updated_at": "2013-07-12T17:54:58Z",
    "author_association": "MEMBER",
    "body": "I get this but only when I use tox. Weird \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20896381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20896381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20896381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwODk2Mzgx",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-12T18:45:37Z",
    "updated_at": "2013-07-12T18:45:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I'm also going to add an `ordered` argument. If you pass that as True then the function will expect a sequence of tuples. That may be more common than just a flat array. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20921837",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20921837",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20921837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTIxODM3",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-13T15:52:20Z",
    "updated_at": "2013-07-13T15:52:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Design question for you all.  If we have\n\n``` python\n\nIn [43]: df = DataFrame({'A': ['a', 'b', 'c', 'd'], 'B': [1, 2, 3, 4]})\n\nIn [44]: df\nOut[44]: \n   A  B\n0  a  1\n1  b  2\n2  c  3\n3  d  4\n```\n\nwith something like `other = [('a'), (1, 3)]`.  I'd like to compare column 'A' to 'a' and column 'B' to `(1, 3)`.  Should we insist that each sequence be a tuple or list?  The way I've done it so far requires that each sub-sequence in other be iterable.  So `other =['a', (1, 3)]` would work, but `other = [('a'), 1]` would fail since `int`s are not iterable. Not a great outcome.\n\nFWIW, `Series` will fail on something like `.isin(1)` which makes since because in that case you'd just do `series == 1`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20922987",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-20922987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 20922987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTIyOTg3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-13T17:10:44Z",
    "updated_at": "2013-07-13T17:11:25Z",
    "author_association": "MEMBER",
    "body": "hm do you mean `other = [('a',), 1]`? `[('a'), 1] == ['a', 1]` since parens with no commas forms an expression.\n\nif it's a scalar then make it a list and it will be fine. OTOH it might be useful to make `s.isin(some_scalar) == s == some_scalar` where `s` is a `Series` object. Then you wouldn't have to worry about forming a `list` since it would be done in `Series`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21518805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-21518805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 21518805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTE4ODA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-24T21:48:08Z",
    "updated_at": "2013-07-24T21:48:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd I see u waited a long time to merge after 0.12 :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21519952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-21519952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 21519952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNTE5OTUy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-24T22:04:47Z",
    "updated_at": "2013-07-24T22:04:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I figured best to get in early on the 0.13 merge-storm...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24478690",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-24478690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 24478690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDc4Njkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-15T19:53:24Z",
    "updated_at": "2013-09-15T19:53:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd @TomAugspurger I think this should have an example in v0.13.0txt, u can put same example in isin docs section\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24508549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-24508549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 24508549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA4NTQ5",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T13:14:14Z",
    "updated_at": "2013-09-16T13:14:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll give write up a quick example.  Should I put a warning about issue #4421, where the value passed to `.isin()` is another DataFrame?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24509024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-24509024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 24509024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTA5MDI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T13:22:37Z",
    "updated_at": "2013-09-16T13:22:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "shoudl that just raise if the index is not identical? (or maybe have a keyword 'index=False` or something to control it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24512126",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-24512126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 24512126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTEyMTI2",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T14:07:15Z",
    "updated_at": "2013-09-16T14:07:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "can we add to What's New until at the same time 4421's fixed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24521886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-24521886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 24521886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTIxODg2",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T16:05:57Z",
    "updated_at": "2013-09-16T16:05:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd  are you saying just keep pushing it to the next release until someone, ok fine me :), gets around to fixing 4421 in a reasonable way?\n\nIf so, what section should I put it under in `What's New`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24527823",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4211#issuecomment-24527823",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4211",
    "id": 24527823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTI3ODIz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T17:24:30Z",
    "updated_at": "2013-09-16T17:24:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we should fix 4421 before 0.13 (so it'll still be in the same What's New), not sure how long we have til release (?), but will have a look at it soon.\n"
  }
]
