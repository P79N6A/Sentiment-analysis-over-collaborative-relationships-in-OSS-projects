[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45199026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45199026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45199026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTk5MDI2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T09:30:48Z",
    "updated_at": "2014-06-05T09:33:30Z",
    "author_association": "MEMBER",
    "body": "@aschilling If you want to have dates parsed with the day first, you can use `pd.to_datetime(dates, dayfirst=True)` or specify the format explicitly with `pd.to_datetime(dates, format=\"%d/%m/%Y %H:%M\")`.\n\nThis is a problem with `dateutil` not being strict (see eg also #3341 as a 'known bug'), as it will parse each date as it thinks is best (with a preference on the day last) (as such it can parse dates with mixed formats, ). If you certainly want the same parsing for the full array of dates, best use `format`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45199338",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45199338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45199338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTk5MzM4",
    "user": {
      "login": "aschilling",
      "id": 377855,
      "node_id": "MDQ6VXNlcjM3Nzg1NQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/377855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aschilling",
      "html_url": "https://github.com/aschilling",
      "followers_url": "https://api.github.com/users/aschilling/followers",
      "following_url": "https://api.github.com/users/aschilling/following{/other_user}",
      "gists_url": "https://api.github.com/users/aschilling/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aschilling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aschilling/subscriptions",
      "organizations_url": "https://api.github.com/users/aschilling/orgs",
      "repos_url": "https://api.github.com/users/aschilling/repos",
      "events_url": "https://api.github.com/users/aschilling/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aschilling/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T09:34:37Z",
    "updated_at": "2014-06-05T09:34:37Z",
    "author_association": "NONE",
    "body": "I understand, but don't you think that pandas should raise then an Exception as suggested by Wes? Especially, if it is filed for more than a year?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45200245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45200245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45200245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjAwMjQ1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T09:45:08Z",
    "updated_at": "2014-06-05T09:45:51Z",
    "author_association": "MEMBER",
    "body": "I think you mean Andy :-) (@hayd) \nIt is not that simple, as this is handled by `dateutil`, which is a third party library. And the issue I linked to is still a bit different (although related). That is about when using `dayfirst=True`, it can still parse a date with day not first. Here it is just that not the same format is applied to all elements of the list. But the underlying reason is the same, namely that dateutil is not strict about its parsing, and only has a precendence behaviour (an order of formats to try). \n(the upside of this is that you can still parse lists of dates with messy formats that vary)\n\nBut maybe this could be better stated in the docs, that if you want strict parsing, you should use `format`. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45265057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45265057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45265057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjY1MDU3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T19:45:05Z",
    "updated_at": "2014-06-05T19:45:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is mentioned in the docs: http://pandas.pydata.org/pandas-docs/stable/timeseries.html#converting-to-timestamps\n\nI agree, it sucks but solution is non-trivial, I've looked into fixing this part of dateutil in the past (so many if blocks) alternatively it has been discussed using another (C) library for date parsing (not sure issue number but I think that one _was_ Wes). Would love to see this solved!\n\nPerhaps it would mitigate some of this to use default dayfirst based on your locale? :s \n\nclosing as dupe of #3341\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45266182",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45266182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45266182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjY2MTgy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T19:55:05Z",
    "updated_at": "2014-06-05T19:56:28Z",
    "author_association": "MEMBER",
    "body": "@hayd It is not really mentioned (although shown in the example) that you can have mixed formats and so each date is parsed individually what would seem best, and if you want uniform parsing for full column you should pass `format`.\n\nIs it correct what I am saying? I can add a clarification.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45269505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45269505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45269505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjY5NTA1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T20:23:46Z",
    "updated_at": "2014-06-05T20:23:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was linking to the **Warning** and example, it Notes format just below. Do you mean adding an example like `['1/12/2012', '1st Dec 2012']` ?\n\nI've actually come up with in spreadsheets where an inconsistent format was used (potentially with inconsistent datefirsts - but best to ignore that!) here format doesn't really help.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45269951",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45269951",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45269951,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjY5OTUx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T20:27:30Z",
    "updated_at": "2014-06-05T20:28:01Z",
    "author_association": "MEMBER",
    "body": "No, the example has already a mixed format: `['Jul 31, 2009', '2010-01-10']`. So that is already in there. \nBut maybe more explicitely state that being able to parse such mixed format is a 'feature', but can have side effects (example in this issue) and if you want to impose a strict uniform parsing you should use `format` (as if this is not specified you have no guarantee that all your dates are parsed following the same format).\n\nDo I make myself more clear now?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45276968",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45276968",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45276968,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjc2OTY4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T21:23:36Z",
    "updated_at": "2014-06-05T21:23:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Not quite sure I understand what you're saying!\n\nThe lack of strictness is definitely a bug, you _should_ be able to parse mixed formats _provided_ they are dayfirst (and potentially ambiguous*). I've looked at this before: the dateutil code is IMO super hairy, although IIRC there is some flag for dayfirst which looked like it was supposed to control this (but it falls through when it shouldn't), I couldn't understand how it worked (or why it didn't), but potentially this could be fixed...\n\n_\\_That is, 1st Feb and Feb 1st should both parse in either (as they're not ambiguous) but 1/14 should not parse if dayfirst (as it's ambiguously/incorrectly ordered).*\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45279418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45279418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45279418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjc5NDE4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T21:47:13Z",
    "updated_at": "2014-06-05T21:47:13Z",
    "author_association": "MEMBER",
    "body": "Hmm, it can be difficult to put it in words sometimes .. :-) Another attempt:\n- With dayfirst, I think we completely understand each other. When `dayfirst=True` it will first try to parse with day-first, but when this fails it falls back to non-dayfirst although you specified it. Consequence: the `dayfirst` keyword arg is not strict and will not fail if you encounter an invalid date (invalid for a dayfirst date).\n- However, in this issue, it was actually not about using the `dayfirst=..`. But about the fact that if you have eg `['22-07-2014', '11-07-2014']`, the first will be parse to `2014-07-22` (so in practice with dayfirst), but the second one to `2014-11-07`. So in this case, the dates will be parsed using to different 'schemes', although they are in the same array passed to `to_datetime`. This can be confusing (as the OP understandably argued). Of course in this case, it could be solved with passing `dayfirst=True`, but still it is confusing when you are not aware of that kwarg and see that it does parse the first date correctly. So that is what I mean with \"if you want to impose a strict uniform parsing you should use format\", as we can never guarantee that with the dateutil parser.\n- And actually the original issue asked even something else, namely: if one of the dates is parsed as dayfirst (deduced from the date itself, without passing dayfirst=True), then all dates in the array should be parsed like that even without passing `dayfirst=True`. But this is out of the question I think.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45289751",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-45289751",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 45289751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjg5NzUx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-05T23:59:59Z",
    "updated_at": "2014-06-05T23:59:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I still think this is 100% solved if dayfirst were strict, as it would raise here...  so we're in agreement? Or do you something in mind here (without tweaking dateutil)?\n\nps  I _really_ like the flexible schema approach, I often see **messy** \"date\" cols.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/194784404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7348#issuecomment-194784404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7348",
    "id": 194784404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NDc4NDQwNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-10T10:37:12Z",
    "updated_at": "2016-03-10T10:37:12Z",
    "author_association": "MEMBER",
    "body": "See #12585\n"
  }
]
