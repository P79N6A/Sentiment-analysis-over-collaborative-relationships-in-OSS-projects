[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440910802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23854#issuecomment-440910802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23854",
    "id": 440910802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDkxMDgwMg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T04:39:24Z",
    "updated_at": "2018-11-22T04:39:36Z",
    "author_association": "MEMBER",
    "body": "The [documentation](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html) is very clear on this:\r\n\r\n\"A string representing the encoding to use in the **OUTPUT FILE**, defaults to ‘ascii’ on Python 2 and ‘utf-8’ on Python 3.\"\r\n\r\nWe never mention support for buffers in general, so I disagree that this is deceptive.  That being said, an attempt to enhance support of `encoding` for non-file objects would be welcomed."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441471276",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23854#issuecomment-441471276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23854",
    "id": 441471276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTQ3MTI3Ng==",
    "user": {
      "login": "eode",
      "id": 2475983,
      "node_id": "MDQ6VXNlcjI0NzU5ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2475983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eode",
      "html_url": "https://github.com/eode",
      "followers_url": "https://api.github.com/users/eode/followers",
      "following_url": "https://api.github.com/users/eode/following{/other_user}",
      "gists_url": "https://api.github.com/users/eode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eode/subscriptions",
      "organizations_url": "https://api.github.com/users/eode/orgs",
      "repos_url": "https://api.github.com/users/eode/repos",
      "events_url": "https://api.github.com/users/eode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eode/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-25T20:40:49Z",
    "updated_at": "2018-11-25T20:40:49Z",
    "author_association": "NONE",
    "body": "From the documentation you linked:\r\n> path_or_buf : string or file handle, default None\r\n>    File path or object, if None is provided the result is returned as a string.\r\n\r\nThus, a file object should suffice.  This issue is an issue with handling of filelike objects, not an issue specifically with `BytesIO`.   The same behavior occurs when using (for example) a file object.  The bug is that Pandas expects the file object itself to handle the encoding, and no encoding is actually used by Pandas, even though the documentation indicates `path_or_buf` and says `file path or object`.  In the case of a file object (whether that be `io.FileIO` or `io.BytesIO`, or perhaps an `io.BufferedWriter` which you get on `open(f...)` in many cases), Pandas simply does no encoding.\r\n\r\nBy \"deceptive\" I don't mean \"pandas is trying to deceive us\", I mean \"the documentation and docstrings state something that isn't valid, and at the very least, isn't clear.\"\r\n\r\nHowever, my *bug report* was similarly unclear.  I'll fix it now by updating the title (and description if necessary)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441471750",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23854#issuecomment-441471750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23854",
    "id": 441471750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTQ3MTc1MA==",
    "user": {
      "login": "eode",
      "id": 2475983,
      "node_id": "MDQ6VXNlcjI0NzU5ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2475983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eode",
      "html_url": "https://github.com/eode",
      "followers_url": "https://api.github.com/users/eode/followers",
      "following_url": "https://api.github.com/users/eode/following{/other_user}",
      "gists_url": "https://api.github.com/users/eode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eode/subscriptions",
      "organizations_url": "https://api.github.com/users/eode/orgs",
      "repos_url": "https://api.github.com/users/eode/repos",
      "events_url": "https://api.github.com/users/eode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eode/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-25T20:46:40Z",
    "updated_at": "2018-11-25T20:46:40Z",
    "author_association": "NONE",
    "body": "There.  It now reflects the fact that this occurs with any filelike object that handles bytes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441473252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23854#issuecomment-441473252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23854",
    "id": 441473252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTQ3MzI1Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-25T21:06:45Z",
    "updated_at": "2018-11-25T21:06:45Z",
    "author_association": "MEMBER",
    "body": "@eode : That's fair.  I think as a start, we can clarify the documentation regarding this detail."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442912577",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23854#issuecomment-442912577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23854",
    "id": 442912577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MjkxMjU3Nw==",
    "user": {
      "login": "eode",
      "id": 2475983,
      "node_id": "MDQ6VXNlcjI0NzU5ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2475983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eode",
      "html_url": "https://github.com/eode",
      "followers_url": "https://api.github.com/users/eode/followers",
      "following_url": "https://api.github.com/users/eode/following{/other_user}",
      "gists_url": "https://api.github.com/users/eode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eode/subscriptions",
      "organizations_url": "https://api.github.com/users/eode/orgs",
      "repos_url": "https://api.github.com/users/eode/repos",
      "events_url": "https://api.github.com/users/eode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eode/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T17:02:36Z",
    "updated_at": "2018-11-29T17:02:36Z",
    "author_association": "NONE",
    "body": "Great!  While I think a code change that can handle buffers/file objects that are open in 'bytes' or 'binary' mode would be ideal, writing into them using the given or default encoding, even a documentation change that indicates that buffers in 'bytes' mode aren't accepted would at least be clear.\r\n\r\nI checked out your code internally -- I think the simplest thing would be to do something like this:\r\n\r\n```python\r\nclass _WriteEncodingWrapper:\r\n    def __init__(self, bytes_filelike, encoding='utf-8'):\r\n        self.bytes_filelike = bytes_filelike\r\n        self.encoding = encoding\r\n     def __getattr__(self, item):\r\n        return getattr(self.bytes_filelike, item)\r\n     def write(self, string):\r\n        self.bytes_filelike.write(string.encode(self.encoding))\r\n     def writelines(self, lines):\r\n        from codecs import iterencode\r\n        encoded_lines = iterencode(lines)\r\n        self.bytes_filelike.writelines(encoded_lines)\r\n```\r\n\r\n..and then, if the attempt fails with the `TypeError(\"a bytes-like object is required, not 'str'\")`, then use the `_WriteEncodingWrapper`.  ..but, just because that's the simplest thing to do in the short term doesn't make it the simplest thing to do in the long term, or the 'right' thing to do.  It would, however, work -- and be compatible with existing behaviors.\r\n\r\nI haven't tried this on Python2, there may be some slight differences there.  This is just a thought in case the issue will be fixed in code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/442957173",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23854#issuecomment-442957173",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23854",
    "id": 442957173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mjk1NzE3Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-29T19:13:11Z",
    "updated_at": "2018-11-29T19:13:11Z",
    "author_association": "MEMBER",
    "body": "> This is just a thought in case the issue will be fixed in code.\r\n\r\nFixing in code is generally the way we do things. 😉 \r\n\r\nYou are more than welcome to submit a PR with your changes!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444317255",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23854#issuecomment-444317255",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23854",
    "id": 444317255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDMxNzI1NQ==",
    "user": {
      "login": "eode",
      "id": 2475983,
      "node_id": "MDQ6VXNlcjI0NzU5ODM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2475983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eode",
      "html_url": "https://github.com/eode",
      "followers_url": "https://api.github.com/users/eode/followers",
      "following_url": "https://api.github.com/users/eode/following{/other_user}",
      "gists_url": "https://api.github.com/users/eode/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eode/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eode/subscriptions",
      "organizations_url": "https://api.github.com/users/eode/orgs",
      "repos_url": "https://api.github.com/users/eode/repos",
      "events_url": "https://api.github.com/users/eode/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eode/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T00:57:53Z",
    "updated_at": "2018-12-05T00:57:53Z",
    "author_association": "NONE",
    "body": "Well, another way is to say \"foo is just not an accepted use case\", which is.. ..y'know.  ..kinda a fix.  :-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444318171",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23854#issuecomment-444318171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23854",
    "id": 444318171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDMxODE3MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-05T01:02:25Z",
    "updated_at": "2018-12-05T01:02:25Z",
    "author_association": "MEMBER",
    "body": "> foo is just not an accepted use case\r\n\r\nAgreed.  That could be a first step by updating the docs to reflect that.\r\n\r\nThat being said, a fix to actual enhance `to_csv` with the functionality would be a good long-term fix."
  }
]
