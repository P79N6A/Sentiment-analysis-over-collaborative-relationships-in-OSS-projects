[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478266909",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25923#issuecomment-478266909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25923",
    "id": 478266909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODI2NjkwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-30T17:16:53Z",
    "updated_at": "2019-03-30T17:16:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "we *should* always be using the ``pandas.core.frame`` import, but this was never enforced. We have a number of places, to avoid circular imports, where we need to import ``Dataframe`` and/or ``Series`` *inside* functions; these are generally ``from pandas import DataFrame``, but could also be fully specified imports.\r\n\r\nNote we *generally* also should/mostly are using ``ABCDataFrame`` et all when merely type checking (and these are freely importable at the top level), or ``_constructor`` from an existing frame, so explicit imports is *mostly* not needed.\r\n\r\nSo option 1 lgtm (though could be option 2 as well, not a big deal)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/478268172",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25923#issuecomment-478268172",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25923",
    "id": 478268172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODI2ODE3Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-30T17:26:12Z",
    "updated_at": "2019-03-30T17:26:12Z",
    "author_association": "MEMBER",
    "body": "Great thanks for the direction Jeff.\r\n\r\n> Note we _generally_ also should/mostly are using `ABCDataFrame` et all when merely type checking (and these are freely importable at the top level), or `_constructor` from an existing frame, so explicit imports is _mostly_ not needed.\r\n\r\nYea this issue was mostly spurred by existing places in the code base where we are already importing DataFrame. Good to have this as a standard when we need to add typing to modules where that isn't already explicitly imported though"
  }
]
