[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9362024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2057#issuecomment-9362024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2057",
    "id": 9362024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNjIwMjQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-11T23:33:30Z",
    "updated_at": "2012-10-11T23:33:30Z",
    "author_association": "MEMBER",
    "body": "That's not cool. Do you have a self-contained reproduction you could post here?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9367213",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2057#issuecomment-9367213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2057",
    "id": 9367213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNjcyMTM=",
    "user": {
      "login": "bluefir",
      "id": 1903683,
      "node_id": "MDQ6VXNlcjE5MDM2ODM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1903683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluefir",
      "html_url": "https://github.com/bluefir",
      "followers_url": "https://api.github.com/users/bluefir/followers",
      "following_url": "https://api.github.com/users/bluefir/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluefir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluefir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluefir/subscriptions",
      "organizations_url": "https://api.github.com/users/bluefir/orgs",
      "repos_url": "https://api.github.com/users/bluefir/repos",
      "events_url": "https://api.github.com/users/bluefir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluefir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-12T05:45:26Z",
    "updated_at": "2012-10-12T05:45:26Z",
    "author_association": "NONE",
    "body": "Well, sort of. I tried to reproduce and discovered another strange behavior. Here is the code for the strange behavior:\n\n```\nimport numpy as np\nfrom pandas import DataFrame, MultiIndex\n\ndef quantiles(df, q=0.5):\n    print('Entered quantiles() with shape ' + str(df.shape))\n\n    print('Calculating quantiles ' + str(q) + ' for each column')\n    qtls = df.quantile(q)\n\n    print('Building output data frame')\n    df_zeros = DataFrame(np.zeros(df.shape), index=df.index, columns=df.columns)\n    df_out = df_zeros.add(qtls, axis='columns')\n\n    print('Output shape ' + str(df_out.shape))\n    return df_out\n\n\nmidx = MultiIndex(levels=[[1, 2], ['a', 'b', 'c', 'd', 'e']],\n                  labels=[[0, 0, 0, 0, 0, 1, 1, 1, 1, 1],\n                          [0, 1, 2, 3, 4, 0, 1, 2, 3, 4]],\n                  names=['date', 'id'])\ndf = DataFrame(np.random.randn(10, 2), index=midx, columns=['col1', 'col2'])\nprint('\\nInput data frame: ')\nprint(df.to_string())\nprint('\\nCalculating medians for each column:')\nqtls = df.groupby(level='date').transform(quantiles)\nprint('\\nData frame with medians:')\nprint('Shape ' + str(qtls.shape))\nprint(qtls.to_string())\n```\n\n'python TestGroupbyTransformO.py' produces the expected oucome:\n\n---begin console output-------------------------------------\n\nInput data frame:\n             col1      col2\ndate id\n1    a   0.025334  0.468002\n     b   1.307855  1.094578\n     c   0.454256  0.711495\n     d  -1.450975 -0.858718\n     e   0.851123  0.878828\n2    a   1.726560 -0.936486\n     b   0.911542 -0.177365\n     c  -1.078583  1.797866\n     d   0.595278  1.683337\n     e  -1.718456 -1.041106\n\nCalculating medians for each column:\nEntered quantiles() with shape (5L,)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nEntered quantiles() with shape (5L,)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nEntered quantiles() with shape (5, 2)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nOutput shape (5, 2)\nEntered quantiles() with shape (5L,)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nEntered quantiles() with shape (5L,)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nEntered quantiles() with shape (5, 2)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nOutput shape (5, 2)\n\nData frame with medians:\nShape (10, 2)\n             col1      col2\ndate id\n1    a   0.454256  0.711495\n     b   0.454256  0.711495\n     c   0.454256  0.711495\n     d   0.454256  0.711495\n     e   0.454256  0.711495\n2    a   0.595278 -0.177365\n     b   0.595278 -0.177365\n     c   0.595278 -0.177365\n     d   0.595278 -0.177365\n     e   0.595278 -0.177365\n\n---end console output-------------------------------------------\n\n'python -O TestGroupbyTransformO.py' produces this:\n\n---begin console output------------------------------------------\n\nInput data frame:\n             col1      col2\ndate id\n1    a   0.824534  0.258803\n     b  -0.807477 -0.046351\n     c  -0.243443 -0.887152\n     d  -1.430488  1.675248\n     e  -0.430917  1.466759\n2    a   1.101497  0.738619\n     b  -2.010792 -0.152976\n     c  -1.757038  1.234569\n     d  -0.081311 -1.690532\n     e   0.696795  0.442808\n\nCalculating medians for each column:\nEntered quantiles() with shape (5L,)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nEntered quantiles() with shape (5L,)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nEntered quantiles() with shape (5, 2)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nOutput shape (5, 2)\nEntered quantiles() with shape (5L,)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nEntered quantiles() with shape (5L,)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nEntered quantiles() with shape (5, 2)\nCalculating quantiles 0.5 for each column\nBuilding output data frame\nOutput shape (5, 2)\n\nData frame with medians:\nShape (10, 2)\nTraceback (most recent call last):\n  File \"TestGroupbyTransformO.py\", line 29, in <module>\n    print(qtls.to_string())\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\frame.py\", line 1267, in to_st\nring\n    formatter.to_string(force_unicode=force_unicode)\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\format.py\", line 279, in to_st\nring\n    strcols = self._to_str_columns(force_unicode)\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\format.py\", line 214, in _to_s\ntr_columns\n    str_columns = self._get_formatted_column_labels()\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\format.py\", line 355, in _get_\nformatted_column_labels\n    dtypes = self.frame.dtypes\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\frame.py\", line 1386, in dtype\ns\n    return self.apply(lambda x: x.dtype)\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\frame.py\", line 3763, in apply\n\n```\nreturn self._apply_standard(f, axis)\n```\n\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\frame.py\", line 3831, in _appl\ny_standard\n    k = res_index[i]\nUnboundLocalError: local variable 'i' referenced before assignment\n\n---end console output------------------------------------------------------------------------------------\n\nThis is not what I observe in my more complex problem. It has a bigger frame and a more complicated function, but it does calculate several quantiles per column during the first steps (I tried to isolate those steps and discovered the above behavior). Normal run produces something like this:\n\n---begin console output-----------------------------------\n...\n\nEntered with (1996L,)\nEntered with (1996L,)\nEntered with (1996, 21)\nAssertions done\nCalculating quantiles\nQuantiles calculated\nBounds calculated\nOutliers detected\nOutput shape (1996, 21)\nEntered with (1996L,)\nEntered with (1996L,)\nEntered with (1996, 21)\nAssertions done\nCalculating quantiles\nQuantiles calculated\nBounds calculated\nOutliers detected\nOutput shape (1996, 21)\nEntered with (1996L,)\nEntered with (1996L,)\nEntered with (1996, 21)\nAssertions done\nCalculating quantiles\nQuantiles calculated\nBounds calculated\nOutliers detected\nOutput shape (1996, 21)\nEntered with (1996L,)\nEntered with (1996L,)\nEntered with (1996, 21)\nAssertions done\nCalculating quantiles\nQuantiles calculated\nBounds calculated\nOutliers detected\nOutput shape (1996, 21)\n...\n---end console output------------------------------\n\nThe -O run produces this:\n\n---begin console output-----------------------------\n...\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nEntered with (1996L,)\nAssertions done\nCalculating quantiles\nTraceback (most recent call last):\n  File \"InefficiencyScores.py\", line 390, in <module>\n    returns_daily_no_outliers = returns_daily.groupby(level=field_date).transfor\nm(f_shrink_outliers)\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\groupby.py\", line 1745, in tra\nnsform\n    return self._transform_item_by_item(obj, wrapper)\n  File \"C:\\Python27\\lib\\site-packages\\pandas\\core\\groupby.py\", line 1777, in _tr\nansform_item_by_item\n    raise TypeError('Transform function invalid for data types')\nTypeError: Transform function invalid for data types\n\n---end console output-----------------------------\n\nAs you can see, in my program the -O run never enters with the full shape (1996, 21) and doesn't seem to even get beyond quantile calculations:\n\n```\nprint('Calculating quantiles')\n\n# Calculate sample quantiles\nq25 = df_out.quantile(q=0.25, axis=axis)\nq75 = df_out.quantile(q=0.75, axis=axis)\nif symmetric:\n    midpoint = (q75 + q25) / 2.\nelse:\n    midpoint = df_out.quantile(q=0.5, axis=axis)\n\nprint('Quantiles calculated')\n```\n\nI realize it's convoluted but I hope it helps. The original program is more complex and so far I haven't been able to simply reproduce the behavior I observe. But I did find another puzzling behavior! :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10499295",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2057#issuecomment-10499295",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2057",
    "id": 10499295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDk5Mjk1",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-19T02:00:40Z",
    "updated_at": "2012-11-19T02:00:40Z",
    "author_association": "MEMBER",
    "body": "wow, this is annoying. Apparently `python -O` removes `assert` statements in code \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10499929",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2057#issuecomment-10499929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2057",
    "id": 10499929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNDk5OTI5",
    "user": {
      "login": "bluefir",
      "id": 1903683,
      "node_id": "MDQ6VXNlcjE5MDM2ODM=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1903683?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bluefir",
      "html_url": "https://github.com/bluefir",
      "followers_url": "https://api.github.com/users/bluefir/followers",
      "following_url": "https://api.github.com/users/bluefir/following{/other_user}",
      "gists_url": "https://api.github.com/users/bluefir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bluefir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bluefir/subscriptions",
      "organizations_url": "https://api.github.com/users/bluefir/orgs",
      "repos_url": "https://api.github.com/users/bluefir/repos",
      "events_url": "https://api.github.com/users/bluefir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bluefir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-19T02:53:39Z",
    "updated_at": "2012-11-19T02:53:39Z",
    "author_association": "NONE",
    "body": "Yep, among other things. But that's the point! Faster code. -OO also removes docstrings. I am not sure how much it helps though. If it's hard to fix, fughetaboutit :-)\n"
  }
]
