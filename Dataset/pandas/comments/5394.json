[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27457810",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27457810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27457810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDU3ODEw",
    "user": {
      "login": "cancan101",
      "id": 51059,
      "node_id": "MDQ6VXNlcjUxMDU5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/51059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cancan101",
      "html_url": "https://github.com/cancan101",
      "followers_url": "https://api.github.com/users/cancan101/followers",
      "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
      "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
      "organizations_url": "https://api.github.com/users/cancan101/orgs",
      "repos_url": "https://api.github.com/users/cancan101/repos",
      "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cancan101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T02:57:46Z",
    "updated_at": "2013-10-31T02:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you mean `convert_float` not `coerce_number`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27457842",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27457842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27457842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDU3ODQy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T02:58:38Z",
    "updated_at": "2013-10-31T02:58:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, that was from the original issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27475072",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27475072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27475072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDc1MDcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T10:22:40Z",
    "updated_at": "2013-10-31T10:22:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can do this at the very end by (should be faster)\n\n```\ndf,_data  = df._data.downcast(dtype='infer')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27479220",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27479220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27479220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDc5MjIw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T11:42:21Z",
    "updated_at": "2013-10-31T11:42:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Three issues:\n\n1 - a column like ['ID', '(All)', 100, 312, 15,  22] will be read in as Series(['(All)', 100.0, 312.0, 15.0, 22.0], name='ID']) and then you end up with all floats in the column when you remove the '(All)' while cleaning.\n2. downcast doesn't try to convert the index (should be a kwarg for that, maybe default False)\n\nThis wouldn't be a problem if it weren't that Index(1.0, 2.0, 3.0) is very different from Index(1, 2, 3).\n1. downcast appears not to always accept the kwarg 'dtype=infer', as this example generates an error:\n\n``` python\nDataFrame({\"A\": [1.0, 2.0], \"B\": [\"1.0\", \"2.0\"]}, index=[1.0, 2.0])._data.downcast(dtype='infer')\n\n../pandas/core/internals.pyc in apply(self, f, *args, **kwargs)\n   2145                 applied = f(blk, *args, **kwargs)\n   2146             else:\n-> 2147                 applied = getattr(blk, f)(*args, **kwargs)\n   2148\n   2149             if isinstance(applied, list):\n\nTypeError: downcast() got an unexpected keyword argument 'dtype'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27479501",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27479501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27479501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDc5NTAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T11:48:00Z",
    "updated_at": "2013-10-31T11:48:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry, meant `dtypes='infer'`\n\nthis just calls `com._possibly_downcast_to_dtype(arr,dtype)` (dtype can be 'infer' here)., so you could add that in Index I suppose.\n\nit is pretty conservative about what it tries to do, you shouldn't see false positives.\n\n```\nIn [3]: df = DataFrame({\"A\": [1.0, 2.0], \"B\": [\"1.0\", \"2.0\"]}, index=[1.0, 2.0])\n\nIn [4]: df\nOut[4]: \n   A    B\n1  1  1.0\n2  2  2.0\n\nIn [5]: df.dtypes\nOut[5]: \nA    float64\nB     object\ndtype: object\n\nIn [6]: df_new = DataFrame(df._data.downcast(dtypes='infer'))\n\nIn [7]: df_new\nOut[7]: \n   A    B\n1  1  1.0\n2  2  2.0\n\nIn [8]: df_new.dtypes\nOut[8]: \nA     int64\nB    object\ndtype: object\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27479846",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27479846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27479846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDc5ODQ2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T11:54:41Z",
    "updated_at": "2013-10-31T11:54:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay, well that suggests that performance difference should be pretty big, given that downcast will be vectorized vs. applied to every element, but I'll need to test it out.  The key would be able to downcast Index as well. (even if it's just \"Hey! Are you a Float64Index? Could you be an Int64Index? Pretty please?!? Great!\")\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27480292",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27480292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27480292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDgwMjky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T12:03:20Z",
    "updated_at": "2013-10-31T12:03:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "just pushing a fix so that this now works (apparently you can't round an object array)\n\n```\nIn [1]: arr = np.array([1.0,2.0],dtype=object)\n\nIn [3]: pandas.core.common._possibly_downcast_to_dtype(arr,'infer')\nOut[3]: array([1, 2])\n\n```\n\nso you can do this (should probl build a downcast method into Index), but for now\n\n```\nIn [4]: Index([1.,2.])\nOut[4]: Float64Index([1.0, 2.0], dtype='object')\n\nIn [6]: Index(pandas.core.common._possibly_downcast_to_dtype(Index([1.,2.]).values,'infer'))\nOut[6]: Int64Index([1, 2], dtype='int64')\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27481745",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27481745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27481745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDgxNzQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-31T12:30:25Z",
    "updated_at": "2013-10-31T12:30:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner ok...good to go\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27539309",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27539309",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27539309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTM5MzA5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:03:34Z",
    "updated_at": "2013-11-01T00:03:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "It turns out the performance hit is really minimal (about 10% at most) and in exchange you get integers in object dtypes as integers as well:\n\nHere's using downcast on 4 column DataFrame and converting Float64Index to Int64Index:\n\n```\n100 entries\n100 loops, best of 3: 11.8 ms per loop\n1000 entries\n10 loops, best of 3: 82 ms per loop\n10000 entries\n1 loops, best of 3: 791 ms per loop\n100000 entries\n1 loops, best of 3: 8.4 s per loop\n```\n\nWhereas the non-vectorized int conversion is:\n\n```\n100 entries\n100 loops, best of 3: 11.2 ms per loop\n1000 entries\n10 loops, best of 3: 93.3 ms per loop\n10000 entries\n1 loops, best of 3: 839 ms per loop\n100000 entries\n1 loops, best of 3: 8.44 s per loop\n```\n\nI just think the benefits of converting to int far outweigh the downsides, given the small perf hit. [ran this multiple times and came out similar]\n\nDowncasting down via:\n\n``` python\n        if convert_float:\n            if isinstance(result.index, pd.Float64Index):\n                casted = com._possibly_downcast_to_dtype(result.index.view(np.ndarray).astype(float),\n                                                'infer')\n                if not issubclass(casted.dtype.type, (np.floating, np.complexfloating)):\n                    result.index = pd.Index(casted)\n            # TODO: Downcast index too!\n            result._data = result._data.downcast(dtypes='infer')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27539380",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27539380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27539380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTM5Mzgw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:05:23Z",
    "updated_at": "2013-11-01T00:05:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "The reason that's so awkward is that possibly_downcast_to_dtype refuses to downcast object dtype, which means that you have to view as ndarray and then try to get to integer.  Does it make sense to have the Index type inference try to go to Int64Index if the inferred_type is integer?  That would resolve this and other issues (though in 0.12, `Index([1.0, 2.0])` resulted in `Index([1.0, 2.0])` rather than Int64Index or anything.  I can set that up.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27540441",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27540441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27540441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQwNDQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:34:25Z",
    "updated_at": "2013-11-01T00:35:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "You have something funky in your perf tests. and you don't need to view and all that, just use `.values`.\n\n```\nIn [4]: i = pd.Float64Index(np.arange(100000))\n\nIn [5]: from pandas.core import common as com\n\nIn [6]: com._possibly_downcast_to_dtype(i.values,'infer')\nOut[6]: array([    0,     1,     2, ..., 99997, 99998, 99999])\n\nIn [7]: com._possibly_downcast_to_dtype(i.values,'infer').dtype\nOut[7]: dtype('int64')\n\nIn [8]: %timeit Index(com._possibly_downcast_to_dtype(i.values,'infer'))\n100 loops, best of 3: 14.1 ms per loop\n\n```\n\nAnd works just fine with `object` type.\n\n```\nIn [13]: i = pd.Index(np.arange(100000),dtype=object)\n\nIn [14]: i.dtype\nOut[14]: dtype('O')\n\nIn [15]: type(i)\nOut[15]: pandas.core.index.Index\n\nIn [16]: Index(com._possibly_downcast_to_dtype(i.values,'infer')).dtype\nOut[16]: dtype('int64')\n\nIn [17]: type(Index(com._possibly_downcast_to_dtype(i.values,'infer')))\nOut[17]: pandas.core.index.Int64Index\n\nIn [18]: %timeit Index(com._possibly_downcast_to_dtype(i.values,'infer'))\n100 loops, best of 3: 9.05 ms per loop\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27540722",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27540722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27540722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQwNzIy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:42:08Z",
    "updated_at": "2013-11-01T00:42:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not really surprised by it, because you still have to iterate over _every_ value regardless to do the other type conversions...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27540726",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27540726",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27540726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQwNzI2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:42:21Z",
    "updated_at": "2013-11-01T00:42:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "but I'll tweak again and see what I get.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27540839",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27540839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27540839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQwODM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:44:42Z",
    "updated_at": "2013-11-01T00:44:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "well...that's the thing....why are you doing that? you should just convert them all at once; and you have a big advantage over read_csv, you already know what they are supposed to be, you don't need to try them in sequence)\n\n(this of course may need to be pushed to 0.14 - the changing of the conversion method), just a suggestion\n\nbut this PR good for 0.13\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27541042",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27541042",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27541042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQxMDQy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:50:30Z",
    "updated_at": "2013-11-01T00:50:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback because Excel stores everything as float - there's no integer type in Excel. So if you have a column like this:\n\n``` python\n            (\"Str2Col\", [\"a\", 3, \"c\", \"d\", \"e\"]),\n```\n\nit'll come back as:\n\n``` python\n            (\"Str2Col\", [\"a\", 3.0, \"c\", \"d\", \"e\"]),\n```\n\nThe part where this gets surprising is if you have an Index column like: `Series([\"cruft\", 1, 2, 3], name=\"Index\")` and you strip off the first row after reading in and then set index, you end up with Float64Index, because Excel doesn't have an Integer type.\n\nSwitched to the better way and still don't get a perf boost:\n\n``` python\n100 entries\n100 loops, best of 3: 12 ms per loop\n1000 entries\n10 loops, best of 3: 86 ms per loop\n10000 entries\n1 loops, best of 3: 811 ms per loop\n100000 entries\n1 loops, best of 3: 8.85 s per loop\n```\n\nIt's a little faster before this PR on very large input [i.e. no downcast/index conversion and no int conversion in for loop]:\n\n``` python\n100 entries\n100 loops, best of 3: 10.8 ms per loop\n1000 entries\n10 loops, best of 3: 84.5 ms per loop\n10000 entries\n1 loops, best of 3: 809 ms per loop\n100000 entries\n1 loops, best of 3: 8.55 s per loop\n```\n\nBut it's not even a 10% difference.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27541182",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27541182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27541182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQxMTgy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:54:12Z",
    "updated_at": "2013-11-01T00:54:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "And just to be clear, you can't tell what the dtype is for those cells, because there are only [8 cell types](http://www.lexicon.net/sjmachin/xlrd.html#xlrd.Cell-class):\n- XL_CELL_EMPTY [u'']\n- XL_CELL_TEXT [unicode string]\n- XL_CELL_NUMBER [float]\n- XL_CELL_DATE [float]\n- XL_CELL_BOOLEAN [1 or 0 int]\n- XL_CELL_ERROR [int error code]\n- XL_CELL_BLANK [u'']\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27541217",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27541217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27541217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQxMjE3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T00:55:19Z",
    "updated_at": "2013-11-01T00:55:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "We're already converting date, bool, and error, so we're already incurring the loop cost...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27544761",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27544761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27544761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQ0NzYx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T02:51:56Z",
    "updated_at": "2013-11-01T02:51:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I realized that all the xlrd types are just integers, so I spent an hour trying to vectorize this with Cython. I came up with a vectorized format, but didn't give much of a perf boost because (as you might expect) xlrd is really the limiting factor. Might be worthwhile to bring up again - you might have a better idea of how to work it, especially because I'm betting I've missed some of the Cython optimizations when you know dtype and ndim of your array. (it's my vectorize-excel branch).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27544791",
    "html_url": "https://github.com/pandas-dev/pandas/pull/5394#issuecomment-27544791",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5394",
    "id": 27544791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTQ0Nzkx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-01T02:52:48Z",
    "updated_at": "2013-11-01T02:52:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm merging this because I think it falls under POLS, but Excel I/O can definitely still be improved speed-wise.\n"
  }
]
