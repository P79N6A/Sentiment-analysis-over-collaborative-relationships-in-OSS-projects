[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/227032774",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13489#issuecomment-227032774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13489",
    "id": 227032774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzAzMjc3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-20T01:19:12Z",
    "updated_at": "2016-06-20T01:19:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think it's the _bins_ that get shared across axes, not necessarily the x-axis: https://github.com/pydata/pandas/blob/b01e07e3395f7cee5a9922af979ea41aa40ff892/pandas/tools/plotting.py#L2055\n\nNot sure there's much we can do about this. I suppose `bins` could be a dictionary of `{column_name: bins}`. Does that sound reasonable?\n\nFor now, I'd recommend iteration instead\n\n``` python\nIn [5]: df = pd.DataFrame(np.random.randn(1000, 4) * np.array([1, 10, 100, 1000]))\n\nIn [6]: fig, axes = plt.subplots(ncols=4)\n\nIn [7]: for ax, (name, col) in zip(axes, df.iteritems()):\n   ...:     col.plot.hist(bins=80, ax=ax)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/227193347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13489#issuecomment-227193347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13489",
    "id": 227193347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzE5MzM0Nw==",
    "user": {
      "login": "Aerlinger",
      "id": 604138,
      "node_id": "MDQ6VXNlcjYwNDEzOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/604138?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Aerlinger",
      "html_url": "https://github.com/Aerlinger",
      "followers_url": "https://api.github.com/users/Aerlinger/followers",
      "following_url": "https://api.github.com/users/Aerlinger/following{/other_user}",
      "gists_url": "https://api.github.com/users/Aerlinger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Aerlinger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Aerlinger/subscriptions",
      "organizations_url": "https://api.github.com/users/Aerlinger/orgs",
      "repos_url": "https://api.github.com/users/Aerlinger/repos",
      "events_url": "https://api.github.com/users/Aerlinger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Aerlinger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-20T16:24:02Z",
    "updated_at": "2016-06-20T16:24:02Z",
    "author_association": "NONE",
    "body": "Thanks for clarifying. The cause of issue makes sense, though my impression and intuition is that `sharex` shares an _axis_ regardless of its underlying datatype. It also seems like the issue is not only with plotting, but the fact that categories other than the first are being improperly binned since they're using the bins of the first category.\n\nAlso, `{column_name: bins}` provides flexibility, but might be a bit verbose in the common case where a user wants the same number of bins (or the default). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/227992879",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13489#issuecomment-227992879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13489",
    "id": 227992879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzk5Mjg3OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-23T09:11:20Z",
    "updated_at": "2016-06-23T09:11:20Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger We actually indeed calculate the bins for the raveled values in the method above `_plot`: https://github.com/pydata/pandas/blob/b01e07e3395f7cee5a9922af979ea41aa40ff892/pandas/tools/plotting.py#L2036\n\nWe could just _not_ do this .. But of course, where you have columns in a similar range of from the same variable, it is nice to have the exact same bins. Would there be a way to know which of the two case it is? (in principle we _could_ use `sharex` keyword for this, but not sure if it is meant for something like this) \n"
  }
]
