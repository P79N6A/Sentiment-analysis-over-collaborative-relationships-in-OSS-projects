[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60248359",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60248359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60248359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjQ4MzU5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-23T14:36:36Z",
    "updated_at": "2014-10-23T14:36:36Z",
    "author_association": "MEMBER",
    "body": "@sinhrks @TomAugspurger @jreback \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60299444",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60299444",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60299444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMjk5NDQ0",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-23T19:59:04Z",
    "updated_at": "2014-10-23T21:57:12Z",
    "author_association": "MEMBER",
    "body": "Maybe someone should bite the bullet and try to get plots of np.datetime64 working upstream in matplotlib? Here's the relevant issue: https://github.com/matplotlib/matplotlib/issues/1097\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60304776",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60304776",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60304776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzA0Nzc2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-23T20:36:23Z",
    "updated_at": "2014-10-23T20:36:23Z",
    "author_association": "MEMBER",
    "body": "yes, good point :-) \nI have already been thinking a long time about that, but never found the time for it ..\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60381129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60381129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60381129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzgxMTI5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-24T12:39:54Z",
    "updated_at": "2014-10-24T12:39:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would just stick a note in the docs (we already have a small section about using matplotlib directly for certain higher perf plots). this is a matplotlib issue and the pandas behavior is correct (and was noted in the whatsnew for 0.15.0; PeriodIndex plotting already exhibited this) - I think you workaround is fine.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60384732",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60384732",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60384732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwMzg0NzMy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-24T13:14:10Z",
    "updated_at": "2014-10-24T13:14:10Z",
    "author_association": "MEMBER",
    "body": "@jreback It was not mentioned in the whatsnew docs AFAIK (or did I miss it somewhere? there is something about plotting a PeriodIndex, but this is about DatetimeIndex and about plotting directly with matplotlib), but I will add it when finishing #8586\n\nI know it is matplotlib issue, but it is just that I think a lot of people relied on this behaviour (as I did myself in my code). But as I said, don't think there is much we can do about it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60464310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60464310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60464310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNDY0MzEw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-25T00:09:34Z",
    "updated_at": "2014-10-25T00:09:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche oh, I meant that comment :). Ok, not sure much to do then except doc it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60737618",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60737618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60737618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzM3NjE4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T10:49:02Z",
    "updated_at": "2014-10-28T10:49:02Z",
    "author_association": "MEMBER",
    "body": "It seems simply doing `units.registry[np.datetime64] = DatetimeConverter()` does already do the trick (see #8655), which means this can be easily solved from the pandas side (just add a units registry entry), and it should also not be that difficult to push this upstream to matplotlib for someone who has some time for this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60739353",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60739353",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60739353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzM5MzUz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T11:05:14Z",
    "updated_at": "2014-10-28T11:05:14Z",
    "author_association": "MEMBER",
    "body": "So we can easily register a converter for `datetime64` data, as we already do for `datetime.date/datetime` (see https://github.com/pydata/pandas/blob/v0.15.0/pandas/tseries/converter.py#L30). \nThe question is: would there be people who rely on the fact that `datetime64` arrays are regarded as ints in matplotlib? As this will change such plots by just importing pandas ..\n\nOther possibility is to add to the docs that users who want to do this direct plotting with matplotlib, can always add `units.registry[np.datetime64] = DatetimeConverter()` themselves to their script.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60740307",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60740307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60740307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzQwMzA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T11:14:41Z",
    "updated_at": "2014-10-28T11:14:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 on this\nwe work with all kinds of other types and register converters. This is probably the most common datetime like type. so should just work. if it's this simple then let's just do it.\n\nyou can always disable by resetting the index and convert to ints.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60744798",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60744798",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60744798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzQ0Nzk4",
    "user": {
      "login": "agijsberts",
      "id": 1579083,
      "node_id": "MDQ6VXNlcjE1NzkwODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1579083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agijsberts",
      "html_url": "https://github.com/agijsberts",
      "followers_url": "https://api.github.com/users/agijsberts/followers",
      "following_url": "https://api.github.com/users/agijsberts/following{/other_user}",
      "gists_url": "https://api.github.com/users/agijsberts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agijsberts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agijsberts/subscriptions",
      "organizations_url": "https://api.github.com/users/agijsberts/orgs",
      "repos_url": "https://api.github.com/users/agijsberts/repos",
      "events_url": "https://api.github.com/users/agijsberts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agijsberts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T12:01:48Z",
    "updated_at": "2014-10-28T12:01:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche The chances of this being accepted upstream in matplotlib seem slim: https://github.com/matplotlib/matplotlib/issues/1097\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60794415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60794415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60794415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNzk0NDE1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T17:17:52Z",
    "updated_at": "2014-10-28T17:17:52Z",
    "author_association": "MEMBER",
    "body": "My guess is that matplotlib would like to have a fuller solution for automatic datetime64 conversion that handles other precisions than `ns`. The pandas solution relies on converting dates into a `DatetimeIndex`, so I don't see how that could get easily pulled separately into matplotlib.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60800087",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60800087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60800087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODAwMDg3",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T17:50:57Z",
    "updated_at": "2014-10-28T17:50:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "iirc there was also an issue  with supporting older versions of numpy that don't have datetime64 (we go back to 1.6, but only recently dropped 1.5).\n\nThe numpy docs ( http://docs.scipy.org/doc/numpy/reference/arrays.datetime.html) say the dtype is experimental, is that no longer true?  I guess if both pandas and mpl start using it as-is we are a decent lobby to prevent breaking the API\n\nThis is now near the top of my mid-term to-do list....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60802370",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60802370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60802370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODAyMzcw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T18:03:34Z",
    "updated_at": "2014-10-28T18:03:34Z",
    "author_association": "MEMBER",
    "body": "@tacaswell Numpy's datetime64 remains broken in a number of ways (e.g., NaT, timezone support, conversions, etc.). But we don't have any better alternative, and pandas has patched over most of it. \n\nFrom an design perspective, the custom precision available in datetime64 is regrettable because it adds a lot of complexity (pandas only uses `ns` precision). But, on the plus side, datetime64 added very little surface to the numpy API, so I don't see much in the way of negative consequences to supporting it in matplotlib. Even only supporting ns precision (as used in pandas) would be a big step up -- I haven't seen other precisions used much out in the wild.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60804614",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60804614",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60804614,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODA0NjE0",
    "user": {
      "login": "agijsberts",
      "id": 1579083,
      "node_id": "MDQ6VXNlcjE1NzkwODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1579083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agijsberts",
      "html_url": "https://github.com/agijsberts",
      "followers_url": "https://api.github.com/users/agijsberts/followers",
      "following_url": "https://api.github.com/users/agijsberts/following{/other_user}",
      "gists_url": "https://api.github.com/users/agijsberts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agijsberts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agijsberts/subscriptions",
      "organizations_url": "https://api.github.com/users/agijsberts/orgs",
      "repos_url": "https://api.github.com/users/agijsberts/repos",
      "events_url": "https://api.github.com/users/agijsberts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agijsberts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T18:17:41Z",
    "updated_at": "2014-10-28T18:17:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer Actually, pandas' solution relies on converting `DatetimeIndex` to `datetime64`, so it would be trivial to push a similar patch to matplotlib. \n\nAlthough this quick fix would work fine for most users, a nasty problem is that the resolution of matplotlib's current datetime format (float days since 0001) is on the order of ~10 microseconds (iirc) for the typical range of years and thus not sufficient to represent the full resolution of `datetime64[ns]`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60810053",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60810053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60810053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODEwMDUz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T18:48:17Z",
    "updated_at": "2014-10-28T18:48:17Z",
    "author_association": "MEMBER",
    "body": "I could be wrong here, but I'm pretty sure I noticed a to_datetime hiding in DatetimeConverter. That gives you back a DatetimeIndex (with ns precision). The simple check would be to try registering this and see if something chokes on datetime64 that doesn't fit in ns precision.\n\nOn Tue, Oct 28, 2014 at 11:17 AM, agijsberts notifications@github.com\nwrote:\n\n> @shoyer Actually, pandas' solution relies on converting `DatetimeIndex` to `datetime64`, so it would be trivial to push a similar patch to matplotlib. \n> \n> ## Although this quick fix would work fine for most users, a nasty problem is that the resolution of matplotlib's current datetime format (float days since 0001) is on the order of ~10 microseconds (iirc) for the typical range of years and thus not sufficient to represent the full resolution of `datetime64[ns]`.\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/issues/8614#issuecomment-60804614\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60821040",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60821040",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60821040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODIxMDQw",
    "user": {
      "login": "agijsberts",
      "id": 1579083,
      "node_id": "MDQ6VXNlcjE1NzkwODM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1579083?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/agijsberts",
      "html_url": "https://github.com/agijsberts",
      "followers_url": "https://api.github.com/users/agijsberts/followers",
      "following_url": "https://api.github.com/users/agijsberts/following{/other_user}",
      "gists_url": "https://api.github.com/users/agijsberts/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/agijsberts/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/agijsberts/subscriptions",
      "organizations_url": "https://api.github.com/users/agijsberts/orgs",
      "repos_url": "https://api.github.com/users/agijsberts/repos",
      "events_url": "https://api.github.com/users/agijsberts/events{/privacy}",
      "received_events_url": "https://api.github.com/users/agijsberts/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T19:58:40Z",
    "updated_at": "2014-10-28T20:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer I'm not sure if I understood you correctly, but I meant that **rudimentary** support for `datetime64` is straightforward. See for example the following proof of concept and example:\n\n```\nfrom matplotlib import units, dates\nfrom matplotlib import pyplot as plt\nfrom numpy import datetime64, timedelta64, arange, ndarray, dtype\nfrom numpy.random import rand\nimport datetime\n\nresolution_scale = {\n    dtype('datetime64[ns]'): 1e-9,\n    dtype('datetime64[us]'): 1e-6,\n    dtype('datetime64[ms]'): 1e-3,\n    dtype('datetime64[s]'): 1,\n    dtype('datetime64[m]'): 60,\n    dtype('datetime64[h]'): 60 * 60,\n    dtype('datetime64[D]'): 24 * 60 * 60,\n}\n\nclass Datetime64Converter(dates.DateConverter):\n    @staticmethod\n    def convert(values, unit, axis):\n        if isinstance(values, ndarray) and issubclass(values.dtype.type, datetime64):\n            return dates.epoch2num(values.view('i8') * resolution_scale[values.dtype])\n        elif isinstance(values, datetime.date):\n            return dates.date2num(values)\n        else:\n            return values\n\nunits.registry[datetime64] = Datetime64Converter\n\na = arange('2014-01-01', '2014-01-07', timedelta64(1, 'D'), dtype='datetime64[D]')\nb = rand(len(a))\nfor i, r in enumerate(('ns', 'us', 'ms', 's', 'm', 'h', 'D')):\n    plt.plot(a.astype('datetime64[{0}]'.format(r)), b + i, label=r)\nplt.legend()\nplt.show()\n```\n\nThis approach does not rely in any way on pandas, though it's much like how it's done now in pandas (with added support for multiple resolutions). Of course the problem of matplotlib not being able to fully represent the possible resolutions remains a show-stopper.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60824575",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60824575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60824575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODI0NTc1",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T20:21:34Z",
    "updated_at": "2014-10-28T20:21:34Z",
    "author_association": "MEMBER",
    "body": "@agijsberts Ah, OK. Yes, I like your solution. Much simpler, doesn't need pandas.\n\nIMO this is still worth doing even if higher resolution dates with matplotlib are not possible. I would be happy just with a warning that triggers when the limits of datetime axis are too close together (e.g., less than 1 ms apart) to accurately plot the times. For most uses, us precision is not necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60826460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60826460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60826460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODI2NDYw",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T20:33:47Z",
    "updated_at": "2014-10-28T20:33:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Things are slowly starting to make sense to me about this.\n\nIs the best (long term) solution here to rip out the float representation used in the dates module and replace it with datetime64 objects?\n\ncc @cimarronm \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60845996",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60845996",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60845996,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODQ1OTk2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T22:53:15Z",
    "updated_at": "2014-10-28T22:53:15Z",
    "author_association": "MEMBER",
    "body": "@shoyer It indeed uses `to_datetime`, but just to convert the array to datetime64 values (not the DatetimeIndex itself is used, but its datetime64 values). But if you already have datetime64 values, it does not further rely on specific pandas features, as @agijsberts showed.\n\nFor matplotlib:\n- I think the easiest solution on short term, is to just add a converter for datetime64 -> float, as @agijsberts showed above and is really easy, and for the rest just rely on the existing infrastructure to determine the ticks, formatting etc based on the float date values\n- In the long term, I personally think matplotlib could rewrite this full date support to rely on datetime64 instead of on the float numbers, but that is obviously a lot more work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/60849572",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8614#issuecomment-60849572",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8614",
    "id": 60849572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODQ5NTcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-28T23:25:55Z",
    "updated_at": "2014-10-28T23:25:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "only think a tiny bit non- trivial is that\nif u have a tz attached to a DatetimeIndex then it is converted properly\n\nso if a tz is attached you should use datetime.datetimes (but with a non-pandas array it's not possible anyhow so prob not a big deal)\n"
  }
]
