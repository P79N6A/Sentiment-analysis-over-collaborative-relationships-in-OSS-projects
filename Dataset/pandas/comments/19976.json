[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370801344",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-370801344",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 370801344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDgwMTM0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T14:37:26Z",
    "updated_at": "2018-04-12T18:22:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "```python\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: import numpy as np\r\n\r\nIn [3]: np.any(pd.DataFrame({\"A\": [False], \"B\": [False]}))\r\nOut[3]:\r\nA    False\r\nB    False\r\ndtype: bool\r\n\r\nIn [4]: np.__version__\r\nOut[4]: '1.15.0.dev0+400607b'\r\n```\r\n\r\n`Out[3]` was previously False\r\n\r\nLooking through NumPy commits, this was *possibly* https://github.com/numpy/numpy/commit/b344da928f06d867b0a4f41746c1bcb759a2fd8f\r\n\r\nIf I pass `keepdims`, pandas raises an exception\r\n\r\n```pytb\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-4-94458d898bc2> in <module>()\r\n----> 1 np.any(pd.DataFrame({\"A\": [False], \"B\": [False]}), keepdims=False)\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/numpy/numpy/core/fromnumeric.py in any(a, axis, out, keepdims)\r\n   1989\r\n   1990     \"\"\"\r\n-> 1991     return _wrapreduction(a, np.logical_or, 'any', axis, None, out, keepdims=keepdims)\r\n   1992\r\n   1993\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/numpy/numpy/core/fromnumeric.py in _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs)\r\n     79                 return reduction(axis=axis, dtype=dtype, out=out, **passkwargs)\r\n     80             else:\r\n---> 81                 return reduction(axis=axis, out=out, **passkwargs)\r\n     82\r\n     83     return ufunc.reduce(obj, axis, dtype, out, **passkwargs)\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/generic.py in logical_func(self, axis, bool_only, skipna, level, **kwargs)\r\n   7984     def logical_func(self, axis=None, bool_only=None, skipna=None, level=None,\r\n   7985                      **kwargs):\r\n-> 7986         nv.validate_logical_func(tuple(), kwargs, fname=name)\r\n   7987         if skipna is None:\r\n   7988             skipna = True\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/compat/numpy/function.py in __call__(self, args, kwargs, fname, max_fname_arg_count, method)\r\n     48                 validate_args(fname, args, max_fname_arg_count, self.defaults)\r\n     49             elif method == 'kwargs':\r\n---> 50                 validate_kwargs(fname, kwargs, self.defaults)\r\n     51             elif method == 'both':\r\n     52                 validate_args_and_kwargs(fname, args, kwargs,\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/util/_validators.py in validate_kwargs(fname, kwargs, compat_args)\r\n    154     \"\"\"\r\n    155     kwds = kwargs.copy()\r\n--> 156     _check_for_invalid_keys(fname, kwargs, compat_args)\r\n    157     _check_for_default_values(fname, kwds, compat_args)\r\n    158\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/util/_validators.py in _check_for_invalid_keys(fname, kwargs, compat_args)\r\n    125         raise TypeError((\"{fname}() got an unexpected \"\r\n    126                          \"keyword argument '{arg}'\".\r\n--> 127                          format(fname=fname, arg=bad_arg)))\r\n    128\r\n    129\r\n\r\nTypeError: any() got an unexpected keyword argument 'keepdims'\r\n```\r\n\r\nSo we're being too strict here.\r\n\r\n(cc @hameerabbasi just FYI)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370805915",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-370805915",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 370805915,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDgwNTkxNQ==",
    "user": {
      "login": "hameerabbasi",
      "id": 2190658,
      "node_id": "MDQ6VXNlcjIxOTA2NTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2190658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hameerabbasi",
      "html_url": "https://github.com/hameerabbasi",
      "followers_url": "https://api.github.com/users/hameerabbasi/followers",
      "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions",
      "organizations_url": "https://api.github.com/users/hameerabbasi/orgs",
      "repos_url": "https://api.github.com/users/hameerabbasi/repos",
      "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hameerabbasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T14:50:49Z",
    "updated_at": "2018-03-06T15:12:55Z",
    "author_association": "NONE",
    "body": "From what I can tell, the failure is because Pandas doesn't realize that `ufunc.reduce(...)` accepts `keepdims` (via `**kwargs`). I may be wrong.\r\n\r\nIdeally, something like this should not have occurred, since the function signature for the methods themselves (`any`, `all`, etc.) didn't change. However, we did base it on the `np.logical_or` ufunc instead of the cached methods in `numpy/core/_methods.py`. This can be reversed if it is super-important, or made to depend on the methods in `numpy/core/_methods.py` methods again."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370812647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-370812647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 370812647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDgxMjY0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T15:10:53Z",
    "updated_at": "2018-03-06T15:10:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> From what I can tell, the failure is because Pandas doesn't realize that ufunc.reduce(...) accepts keepdims (via **kwargs). I may be wrong.\r\n\r\nYes I think you're right. We do some keyword argument filtering within pandas itself (@gfyoung I think you know the most about this?)\r\n\r\n> This can be reversed if it is super-important\r\n\r\nI'm not sure. @shoyer do you have thoughts here? I'm not sure what the relative usage of `np.any(frame)` vs. `frame.any` is.\r\n\r\nEither way, pandas will fix things on our end."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370814760",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-370814760",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 370814760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDgxNDc2MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T15:17:03Z",
    "updated_at": "2018-03-06T15:17:03Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger : Given my previous runarounds with `numpy` and `pandas` compatibility, I agree that `frame.any` would be preferable.\r\n\r\nAs for keyword argument filtering, we try to keep them as strict as possible so as to prevent extraneous keywords from filtering and discouraging the mixing of the `numpy` API with `pandas` objects.  So in this case, we were disallowing the `keepdims` argument, but we could update it to accept when validating."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370926096",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-370926096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 370926096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDkyNjA5Ng==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-06T20:59:26Z",
    "updated_at": "2018-03-06T20:59:26Z",
    "author_association": "MEMBER",
    "body": "The problem seems to be that NumPy now checks for `any`/`all` methods to defer to, like it's long done for `sum`, `mean`, `min`, `max`, etc.\r\n\r\nOn the whole, I think this is more consistent for pandas: `np.any` and `np.all` now work like other NumPy aggregation functions when called on pandas objects.."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380887450",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-380887450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 380887450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDg4NzQ1MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T17:41:12Z",
    "updated_at": "2018-04-12T17:41:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure how to proceed here. I would like to ensure that `np.all(dataframe)` continues to work like before. It'd be a shame to break that, as that was a reasonable way to get a scalar boolean from a dataframe.\r\n\r\nHowever, this conflicts with NumPy's (reasonable) expectation that `np.all(thing, **kwargs)` matches `thing.all(**kwargs)`. In the past that's differed since `np.all` used to reduce a DataFrame to a scalar, while `DataFrame.all` reduced to a Series.\r\n\r\nAFAICT, even implementing `keepdims` for DataFrame.all/any won't solve the issue, since our default is different."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380890233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-380890233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 380890233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDg5MDIzMw==",
    "user": {
      "login": "hameerabbasi",
      "id": 2190658,
      "node_id": "MDQ6VXNlcjIxOTA2NTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2190658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hameerabbasi",
      "html_url": "https://github.com/hameerabbasi",
      "followers_url": "https://api.github.com/users/hameerabbasi/followers",
      "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions",
      "organizations_url": "https://api.github.com/users/hameerabbasi/orgs",
      "repos_url": "https://api.github.com/users/hameerabbasi/repos",
      "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hameerabbasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T17:50:50Z",
    "updated_at": "2018-04-12T18:10:35Z",
    "author_association": "NONE",
    "body": "Looping in @eric-wieser here. Eric, would it be reasonable to just make it so that (for `any` and `all`), `getattr` is not called like it is now (as it wasn't being called before)? Or possibly give priority to the `ufunc` over the attribute call (I'm not sure if that will fix this).\r\n\r\nEdit: Semi-relevant xkcd: https://xkcd.com/1172/"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380936330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-380936330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 380936330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDkzNjMzMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T20:35:43Z",
    "updated_at": "2018-04-12T20:35:43Z",
    "author_association": "MEMBER",
    "body": "A possible option would be to implement `df.any(axis=None)` to actually reduce over all dimensions? Or does numpy not pass `axis=None` to `df.any(..)`? But, that would of course also make it inconsistent with the rest of pandas.\r\n(currently I think the main reason the default is `axis=None` but interpreted as `axis=0` for both series and dataframe, is only Panel. But since that is deprecated, I think we can ignore consistency with Panel)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381030314",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-381030314",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 381030314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTAzMDMxNA==",
    "user": {
      "login": "hameerabbasi",
      "id": 2190658,
      "node_id": "MDQ6VXNlcjIxOTA2NTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2190658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hameerabbasi",
      "html_url": "https://github.com/hameerabbasi",
      "followers_url": "https://api.github.com/users/hameerabbasi/followers",
      "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions",
      "organizations_url": "https://api.github.com/users/hameerabbasi/orgs",
      "repos_url": "https://api.github.com/users/hameerabbasi/repos",
      "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hameerabbasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T05:45:50Z",
    "updated_at": "2018-04-13T05:58:20Z",
    "author_association": "NONE",
    "body": "Yes, that would be best. `df.any()` has a default axis of maybe `0`/`1` (I'm not sure what's appropriate here), but `np.any` usually passes `axis=None` by default, thus achieving the desired behavior. Alternatively, you can create a sentinel `PdAxis` (which would be invalid with `np.any`) to signify that this is coming from Pandas.\r\n\r\nIn fact, this is how `ufunc.reduce` works, default is `axis=0` but `sum`/`prod`/`any`/`all` override it to `None`.\r\n\r\nIn fact, if `DataFrame` already implements `__array_ufunc__` or similar, `df.all` etc can just defer to that rather than duplicating code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381102634",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-381102634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 381102634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTEwMjYzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T11:06:10Z",
    "updated_at": "2018-04-13T11:06:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> A possible option would be to implement df.any(axis=None) to actually reduce over all dimensions? \r\n\r\n-1 on this. We don't use ``None`` as a valid parameter anywhere else and would be inconsistent. ok with using a signaling object (rather than ``None``) so that ``np.any`` works (as current) though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381106487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-381106487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 381106487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTEwNjQ4Nw==",
    "user": {
      "login": "hameerabbasi",
      "id": 2190658,
      "node_id": "MDQ6VXNlcjIxOTA2NTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2190658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hameerabbasi",
      "html_url": "https://github.com/hameerabbasi",
      "followers_url": "https://api.github.com/users/hameerabbasi/followers",
      "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions",
      "organizations_url": "https://api.github.com/users/hameerabbasi/orgs",
      "repos_url": "https://api.github.com/users/hameerabbasi/repos",
      "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hameerabbasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T11:25:19Z",
    "updated_at": "2018-04-13T11:25:19Z",
    "author_association": "NONE",
    "body": "@jreback The issue here is that Numpy itself passes `axis=None`. It definitely does this for `sum`/`prod`. The thing that changed is that now it does this for `any` and `all` too. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/381108004",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-381108004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 381108004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTEwODAwNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T11:32:42Z",
    "updated_at": "2018-04-13T11:32:42Z",
    "author_association": "MEMBER",
    "body": "Accepting `None` temporarily as a valid value (and which is not overridden by the implicit default of 0) makes it possible to actually deprecate this, without having the hard breakage as we see now in this issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385370668",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-385370668",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 385370668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM3MDY2OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T11:19:46Z",
    "updated_at": "2018-04-30T11:19:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think I'll get to this for 0.23.0"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385379553",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-385379553",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 385379553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM3OTU1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T12:06:53Z",
    "updated_at": "2018-04-30T12:06:53Z",
    "author_association": "MEMBER",
    "body": "Personally, for now accepting `axis=None` as backwards compatibility, should be a rather easy short-term solution. That way we can discuss later the long term solution that we want (a long term deprecation would probably have the same short-term solution as temporary backwards compatibility)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385380025",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-385380025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 385380025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM4MDAyNQ==",
    "user": {
      "login": "hameerabbasi",
      "id": 2190658,
      "node_id": "MDQ6VXNlcjIxOTA2NTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2190658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hameerabbasi",
      "html_url": "https://github.com/hameerabbasi",
      "followers_url": "https://api.github.com/users/hameerabbasi/followers",
      "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions",
      "organizations_url": "https://api.github.com/users/hameerabbasi/orgs",
      "repos_url": "https://api.github.com/users/hameerabbasi/repos",
      "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hameerabbasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T12:08:55Z",
    "updated_at": "2018-04-30T12:08:55Z",
    "author_association": "NONE",
    "body": "Wouldn't having the same solution as `sum`/`prod` be acceptable? I'm not too familiar with Pandas but sounds like it should be handled the same way now, as it is in Numpy?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395514138",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-395514138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 395514138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTUxNDEzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T18:10:28Z",
    "updated_at": "2018-06-07T18:10:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Personally, for now accepting axis=None as backwards compatibility, should be a rather easy short-term solution.\r\n\r\nI'd like to do this for 0.23.1. I have a PR mostly ready.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396209228",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-396209228",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 396209228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjIwOTIyOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T11:18:43Z",
    "updated_at": "2018-06-11T11:18:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Quick status update: I have this mostly working so that `np.all(df)` has the previous behavior (reducing to a scalar). It allows `DataFrame.all(axis=None)` to mean reduce all axes. I can push these changes up now, but would it be strange for only the logical reductions to support `axis=None`, while for the other reductions `axis=None` means reduce the stat axis?\r\n\r\nIs there a planned release date for NumPy 1.15?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396220365",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-396220365",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 396220365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjIyMDM2NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T12:06:16Z",
    "updated_at": "2018-06-11T12:06:16Z",
    "author_association": "MEMBER",
    "body": ">  can push these changes up now, but would it be strange for only the logical reductions to support axis=None, while for the other reductions axis=None means reduce the stat axis?\r\n\r\nThat is strange, but maybe something we can leave for after 0.23.1 to discuss/change ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/396384383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-396384383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 396384383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NjM4NDM4Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-11T20:56:06Z",
    "updated_at": "2018-06-11T20:56:51Z",
    "author_association": "MEMBER",
    "body": "> Is there a planned release date for NumPy 1.15?\r\n\r\n@TomAugspurger : FWIW, probably not for some time.  `1.14.4` just came out 5 days ago, and they also do candidate releases before an official major release.\r\n\r\nI agree with @jorisvandenbossche to leave for after `0.23.1`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397263023",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-397263023",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 397263023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI2MzAyMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T11:32:21Z",
    "updated_at": "2018-06-14T11:32:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK there's talk on the NumPy ML of 1.15 rcs coming up soon so I'm going to finish this today.\r\n\r\n---\r\n\r\nOne question: DataFrame works around NumPy's object behavior:\r\n\r\n\r\n```python\r\nIn [4]: pd.DataFrame({\"A\": ['a', 'b'], 'B': ['c', 'd']}).all()\r\nOut[4]:\r\nA    True\r\nB    True\r\ndtype: bool\r\n```\r\n\r\nBut we don't do that for Series.\r\n\r\n\r\n```python\r\nIn [7]: pd.Series(['a', 'b']).all()\r\nOut[7]: 'b'\r\n```\r\n\r\nDo we want to clean this all up at once?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397264991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-397264991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 397264991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI2NDk5MQ==",
    "user": {
      "login": "hameerabbasi",
      "id": 2190658,
      "node_id": "MDQ6VXNlcjIxOTA2NTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2190658?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hameerabbasi",
      "html_url": "https://github.com/hameerabbasi",
      "followers_url": "https://api.github.com/users/hameerabbasi/followers",
      "following_url": "https://api.github.com/users/hameerabbasi/following{/other_user}",
      "gists_url": "https://api.github.com/users/hameerabbasi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hameerabbasi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hameerabbasi/subscriptions",
      "organizations_url": "https://api.github.com/users/hameerabbasi/orgs",
      "repos_url": "https://api.github.com/users/hameerabbasi/repos",
      "events_url": "https://api.github.com/users/hameerabbasi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hameerabbasi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T11:40:58Z",
    "updated_at": "2018-06-14T11:40:58Z",
    "author_association": "NONE",
    "body": "> would it be strange for only the logical reductions to support `axis=None`, while for the other reductions `axis=None` means reduce the stat axis?\r\n\r\nThe interpretation of `axis=None` is up to the implementer. What's weird us, `ufunc.reduce(...)` defaults to the `axis=0` behavior (\"across the first axis\"), and NumPy usually interprets `axis=None` to mean \"across all axes\".\r\n\r\nThough, if you so wish, you can make it mean something else. I'd say you should set `axis=None` to mean whatever you wish for the default to be."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397279374",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-397279374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 397279374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzI3OTM3NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T12:39:53Z",
    "updated_at": "2018-06-14T12:39:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to be clear, we'll follow NumPy's behavior of `axis=None` meaning reduce across all axes, 0 for first axis, etc. The difference is the defaults. The pandas methods will default to `axis=0`, NumPy will default to `axis=None`.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397368299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-397368299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 397368299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzM2ODI5OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T17:05:15Z",
    "updated_at": "2018-06-14T17:05:15Z",
    "author_association": "MEMBER",
    "body": "> Do we want to clean this all up at once?\r\n\r\nLet's maybe keep that for 0.24.0 ?\r\n\r\nDo you have a PR to review for this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397370411",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-397370411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 397370411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzM3MDQxMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T17:12:14Z",
    "updated_at": "2018-06-14T17:12:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Later today hopefully."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397419083",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19976#issuecomment-397419083",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19976",
    "id": 397419083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzQxOTA4Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T19:56:22Z",
    "updated_at": "2018-06-14T19:56:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "PR at https://github.com/pandas-dev/pandas/pull/21486"
  }
]
