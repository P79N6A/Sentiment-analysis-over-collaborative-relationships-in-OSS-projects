[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285830383",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-285830383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 285830383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTgzMDM4Mw==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-11T01:50:04Z",
    "updated_at": "2017-03-11T01:51:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Try it out yourself:\r\n\r\n```python\r\npd.DataFrame({'a': [1,2,np.nan], 'b': [np.nan, 2, 3]}).fillna({'a': 'foo', 'b': 'bar'}, errors='raise')\r\npd.DataFrame({'a': [1,2,np.nan], 'b': [np.nan, 2, 3]}).fillna({'a': 'foo', 'b': 'bar'}, errors='force')\r\npd.DataFrame({'a': [1,2,np.nan], 'b': [np.nan, 2, 3]}).fillna({'a': 'foo', 'b': 'bar'}, errors='ignore')\r\n```\r\n\r\n`types/missing.py:valid_fill_value` has a test suite in `test_missing.py`, but I'm confused as to where I should put the tests for the new `fillna` bits..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285831299",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-285831299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 285831299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTgzMTI5OQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-11T02:02:19Z",
    "updated_at": "2017-03-11T02:02:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Two API questions:\r\n\r\n1. Pretty sure it should be `coerce`, not `force`. See e.g. [here](http://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.to_numeric.html).\r\n2. Should the default behavior change? You stated [in discussion](https://github.com/pandas-dev/pandas/issues/15533#issuecomment-285442956) that the default behavior should be `ignore`, not `force`. The latter is the default right now, however. This seems like a really big change, I think it'd be wise to have a deprecation cycle first..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285841086",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-285841086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 285841086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTg0MTA4Ng==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-11T04:24:53Z",
    "updated_at": "2017-03-11T04:24:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "This fails seemingly every `sparse` test in the test suite. ðŸ‘€\r\n\r\n`sparse` things obviously already have hardcoded `dtype` requirements so I should find a way of disabling this feature for all such types."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285863494",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-285863494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 285863494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTg2MzQ5NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-11T12:24:00Z",
    "updated_at": "2017-03-11T12:24:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I think `'coerce'` instead of `'force'`. Not sure about changing the default. I don't think `ignore` should be the default. I think `raise` is more consistent with `to_numeric`. But it's a big change, and maybe not worth it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291021920",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-291021920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 291021920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTAyMTkyMA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-02T23:10:38Z",
    "updated_at": "2017-04-02T23:10:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm investigating the five tests in the suite that the current code still doesn't pass, and I've hit something I can't explain originating in `TestDataFrameMissingData.test_fillna_datetime_columns`.\r\n\r\nAt a high level the bug is the fact that with the following bit:\r\n\r\n```\r\n>>> pd.DataFrame({'A': [-1, -2, np.nan],\r\n              'B': [pd.Timestamp('2013-01-01'), pd.Timestamp('2013-01-02'), pd.NaT],\r\n              'C': ['foo', 'bar', None],\r\n              'D': ['foo2', 'bar2', None]},\r\n              index=pd.date_range('20130110', periods=3)).fillna('?')\r\n```\r\n\r\n`0.19.2` gives:\r\n\r\n```\r\n            A                    B    C     D\r\n2013-01-10 -1  2013-01-01 00:00:00  foo  foo2\r\n2013-01-11 -2  2013-01-02 00:00:00  bar  bar2\r\n2013-01-12  ?                    ?    ?     ?\r\n```\r\n\r\nWhile this PR gives:\r\n\r\n```\r\n            A                    B    C     D\r\n2013-01-10 -1  2013-01-01 00:00:00  foo  foo2\r\n2013-01-11 -2  2013-01-02 00:00:00  bar  bar2\r\n2013-01-12  ?           \tNaT   ?     ?\r\n```\r\n\r\nThis difference seems to be emitting from line 268 in `frame.py`, where in `DataFrame.__init__` you have:\r\n\r\n        if isinstance(data, BlockManager):\r\n            mgr = self._init_mgr(data, axes=dict(index=index, columns=columns),\r\n                                 dtype=dtype, copy=copy)\r\n\r\nIn `0.19.2` this emits:\r\n\r\n```\r\nBlockManager\r\nItems: Index(['A', 'B', 'C', 'D'], dtype='object')\r\nAxis 1: DatetimeIndex(['2013-01-10', '2013-01-11', '2013-01-12'], dtype='datetime64[ns]', freq='D')\r\nObjectBlock: slice(0, 4, 1), 4 x 3, dtype: object\r\n```\r\n\r\nIn this PR:\r\n\r\n```\r\nBlockManager\r\nItems: Index(['A', 'B', 'C', 'D'], dtype='object')\r\nAxis 1: DatetimeIndex(['2013-01-10', '2013-01-11', '2013-01-12'], dtype='datetime64[ns]', freq='D')\r\nDatetimeBlock: slice(1, 2, 1), 1 x 3, dtype: datetime64[ns]\r\nObjectBlock: [0, 2, 3], 3 x 3, dtype: object\r\n```\r\n\r\nBut how is this possible? This PR only adds a bit of if-else logic to the `fillna` method; it doesn't touch any of these deep internals (which are mostly beyond me anyway). So it *shouldn't* cause any differences in how block managers operate.\r\n\r\nAnd the current master seems to pass all tests, including this one...huh.\r\n\r\nI wouldn't call this an edge case, the old behavior definitely needs to be preserved.\r\n\r\nMaybe I'm missing something, going to have to circle back to this later."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291170887",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-291170887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 291170887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTE3MDg4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T15:04:04Z",
    "updated_at": "2017-04-03T15:04:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario this is related to this bug: https://github.com/pandas-dev/pandas/issues/15613 I think\r\n\r\nwith the default ``errors='ignore'`` this should return as 0.19.2"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291368019",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-291368019",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 291368019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTM2ODAxOQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T01:39:45Z",
    "updated_at": "2017-04-04T01:39:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the clarification, this is seems to be the same as [your comment](https://github.com/pandas-dev/pandas/issues/15613#issuecomment-285034706). Going to need to fiddle with it to find a workaround.\r\n\r\nA more minimal example:\r\n\r\n```python\r\npd.Series([pd.Timestamp('2015-01-01'), pd.NaT]).fillna(\"?\")\r\n```\r\n\r\nFills with `?` on master and `NaT` on `fillna-errors`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291369328",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-291369328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 291369328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTM2OTMyOA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T01:49:15Z",
    "updated_at": "2017-04-04T01:49:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should probably write the tests first, this got picked up because a test happened to depend on this behavior, maybe there are other cases also like this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/291580794",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-291580794",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 291580794,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTU4MDc5NA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-04T17:55:16Z",
    "updated_at": "2017-04-04T17:55:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking at the tests, I see three dissatisfactory cases:\r\n\r\n1. `Period` columns are always `dtype('O')`, and there's no easy way of checking whether or not a column is period-type (previously discussed).\r\n2. date-type things auto-coerce to `NaT`, so their default behavior is equivalent to `errors=\"ignore\"` for everything else (see above).\r\n3. A column with a `bool` and `nan` is `dtype('O')`. So e.g. we can't prevent `Series([True, np.nan]).fillna('foobar', errors='ignore')` from producing `True, 'foobar'`.\r\n\r\nThe second one needs to be solved, the first and last are limitations of `pandas` nullity handling that probably need to be lived with."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/294375075",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-294375075",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 294375075,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDM3NTA3NQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-16T21:22:59Z",
    "updated_at": "2017-04-16T21:22:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like it was simpler than I had thought.\r\n\r\nThe problem is that to keep `generic/fillna` working with `categorical` types, I pass `None` instead of `'coerce'` down as the default value to `internals/fillna`. Adding:\r\n\r\n```\r\nif not errors:\r\n    errors = 'coerce'\r\n```\r\n\r\nTo the `fillna` method body fixed this problem. For now, this is OK. But, I'm hoping I'll find a better solution later."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/296763119",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-296763119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 296763119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Njc2MzExOQ==",
    "user": {
      "login": "kernc",
      "id": 684364,
      "node_id": "MDQ6VXNlcjY4NDM2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kernc",
      "html_url": "https://github.com/kernc",
      "followers_url": "https://api.github.com/users/kernc/followers",
      "following_url": "https://api.github.com/users/kernc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kernc/subscriptions",
      "organizations_url": "https://api.github.com/users/kernc/orgs",
      "repos_url": "https://api.github.com/users/kernc/repos",
      "events_url": "https://api.github.com/users/kernc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kernc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-24T17:37:54Z",
    "updated_at": "2017-04-24T17:37:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does this perhaps also fix the problem reported in https://github.com/pandas-dev/pandas/issues/16112?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297532059",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-297532059",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 297532059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzUzMjA1OQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T20:30:21Z",
    "updated_at": "2017-04-26T20:30:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "No, trying an error mode on a sparse matrix will raise an error for now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297548564",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-297548564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 297548564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzU0ODU2NA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T21:37:02Z",
    "updated_at": "2017-04-26T22:38:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "`TestDataFrameOperators.test_timestamp_compare` fails because of something remarkably subtle.\r\n\r\nSuppose we have:\r\n\r\n```python\r\nimport pandas as pd\r\nfrom io import StringIO\r\n\r\nres = pd.read_csv(StringIO(\"\"\",dates1,dates2,floatcol,intcol,stringcol\r\n0,1970-01-01 00:00:00.000000000,1970-01-01 00:00:00.000000000,,,\r\n1,1970-01-01 00:00:00.000000000,,,,\r\n2,1970-01-01 00:00:00.000000000,1970-01-01 00:00:00.000000000,,,\r\n3,1970-01-01 00:00:00.000000000,,,,\r\n4,1970-01-01 00:00:00.000000000,,,,\r\n5,1970-01-01 00:00:00.000000000,1970-01-01 00:00:00.000000000,,,\r\n6,1970-01-01 00:00:00.000000000,1970-01-01 00:00:00.000000000,,,\r\n7,1970-01-01 00:00:00.000000000,,,,\r\n8,1970-01-01 00:00:00.000000000,1970-01-01 00:00:00.000000001,,,\r\n9,1970-01-01 00:00:00.000000001,1970-01-01 00:00:00.000000001,,,\"\"\"), index_col=0)\r\n```\r\n\r\nOn master:\r\n\r\n```\r\nIn [14]: res.fillna(True).dtypes\r\nOut[14]: \r\ndates1        object\r\ndates2        object\r\nfloatcol     float64\r\nintcol       float64\r\nstringcol    float64\r\ndtype: object\r\n```\r\n\r\nOn the feature branch:\r\n\r\n```\r\nIn [14]: res.fillna(True).dtypes\r\nOut[14]: \r\ndates1        datetime64[ns]\r\ndates2        object\r\nfloatcol     float64\r\nintcol       float64\r\nstringcol    float64\r\ndtype: object\r\n```\r\n\r\nOn master even though the first column is already full and doesn't receive any boolean fills, the column `dtype` still gets upcast to `object`. I think that's because `fillna` internally runs the operation, and the upcast, on the 2-by-n \"double datetimes\" `block`.\r\n\r\nSince I now force this operation to be done column-by-column, `fillna` will no longer do this&mdash;it will leave that first column's `dtype` untouched. That's not a bug; that's a feature!\r\n\r\nBut, this test relies on the old behavior, because it then attempts:\r\n\r\n```python\r\nres.fillna(True).astype(bool)\r\n```\r\n\r\nWhich fails with:\r\n\r\n```\r\n*** TypeError: cannot astype a datetimelike from [datetime64[ns]] to [bool]\r\n```\r\n\r\nBecause while `object` columns can be cast to `bool`, `datetime64` columns cannot.\r\n\r\nI suspect the other remaining failures are similar."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297561788",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-297561788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 297561788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzU2MTc4OA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-26T22:40:10Z",
    "updated_at": "2017-04-26T22:40:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "On master:\r\n\r\n```python\r\nimport pandas as pd\r\nfrom io import StringIO\r\n\r\nres = pd.read_csv(StringIO(\"\"\",dates1,dates2\r\n0,1970-01-01 00:00:00.000000000,1970-01-01 00:00:00.000000000\r\n1,1970-01-01 00:00:00.000000000,\"\"\"), index_col=0)\r\n\r\nres['dates1'] = pd.to_datetime(res['dates1'])\r\nres.astype(bool)\r\n```\r\n\r\nRaises:\r\n\r\n```\r\nTypeError: cannot astype a datetimelike from [datetime64[ns]] to [bool]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298108340",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-298108340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 298108340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEwODM0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T21:14:33Z",
    "updated_at": "2017-04-28T21:14:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario your last is correct. if you need to do booleans with that you have to fillna first.\r\n\r\n```\r\nIn [25]: pd.to_datetime(res['dates2'])\r\nOut[25]: \r\n0   1970-01-01\r\n1          NaT\r\nName: dates2, dtype: datetime64[ns]\r\n\r\nIn [26]: pd.to_datetime(res['dates2']).fillna(False).astype(bool)\r\nOut[26]: \r\n0     True\r\n1    False\r\nName: dates2, dtype: bool\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298141311",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-298141311",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 298141311,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE0MTMxMQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-29T02:21:18Z",
    "updated_at": "2017-04-29T02:21:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Unsure what you mean above, can you clarify?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/298186225",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-298186225",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 298186225,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODE4NjIyNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-29T18:29:56Z",
    "updated_at": "2017-04-29T18:29:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario I mean your example above is exactly as expected an not an error."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/307654563",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-307654563",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 307654563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzY1NDU2Mw==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-11T20:27:22Z",
    "updated_at": "2017-06-11T20:27:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Returning to this after a long absence.\r\n\r\n@jreback's solution works in the reproduction case, but can't be used in implementation. The problem is that it uses `fillna`, and this changeset is a feature patch for...`fillna`.\r\n\r\nThe brute-force way of resolving this, mentioned at #16155, is to upcast the `datetime` to `object` `dtype` beforehand. That doesn't seem right at all.\r\n\r\nBut I'm just not seeing any hooks I can use to get in there and fix just this corner case specifically, either.\r\n\r\nI'm stumped. Welcoming suggestions from others.\r\n\r\nThis is the last remaining test failure in this PR (assuming the driver failures are benign). There's still work to do with checking the impact on performance and going over the tests again, but this is otherwise reasonably close to a finish."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/323031581",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15653#issuecomment-323031581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15653",
    "id": 323031581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzAzMTU4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T10:31:07Z",
    "updated_at": "2017-08-17T10:31:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as stale. this is a bit easier in current master FYI."
  }
]
