[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/308980432",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16711#issuecomment-308980432",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16711",
    "id": 308980432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODk4MDQzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-16T09:34:16Z",
    "updated_at": "2017-06-16T09:34:16Z",
    "author_association": "MEMBER",
    "body": "There is certainly something strange going on, but what are you exactly trying to obtain? \r\nBecause now you are trying to put Series objects inside a list inside a dataframe. But does not seem that useful."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/309181428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16711#issuecomment-309181428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16711",
    "id": 309181428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTE4MTQyOA==",
    "user": {
      "login": "xmduhan",
      "id": 4588429,
      "node_id": "MDQ6VXNlcjQ1ODg0Mjk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4588429?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xmduhan",
      "html_url": "https://github.com/xmduhan",
      "followers_url": "https://api.github.com/users/xmduhan/followers",
      "following_url": "https://api.github.com/users/xmduhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/xmduhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xmduhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xmduhan/subscriptions",
      "organizations_url": "https://api.github.com/users/xmduhan/orgs",
      "repos_url": "https://api.github.com/users/xmduhan/repos",
      "events_url": "https://api.github.com/users/xmduhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xmduhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-17T01:29:57Z",
    "updated_at": "2017-06-17T01:29:57Z",
    "author_association": "NONE",
    "body": "I have a datafrme present some parameters:\r\n```\r\n       p1 \tp2 \tp3\r\na \t0 \t0 \t0\r\nb \t1 \t1 \t1\r\nc \t2 \t2 \t2\r\n... ... \r\n```\r\neach row is a group of a parameters. \r\nI will do some calculation  with parameters, then I will get some results, a value and series.\r\nI need to save them on datafrme:\r\n```\r\n       p1 \tp2 \tp3     value   series\r\na \t0 \t0 \t0        0         [...]\r\nb \t1 \t1 \t1        1         [...]\r\nc \t2 \t2 \t2        2         [...]\r\n```\r\n\r\nIt's fine to do it row by row. But the calculation is time consuming, and can it be optimizated with whole dataframe calculating at once. And then batch result will be a series present  each row's value, and result dataframe with each row's series. Result dataframe's columns is parameter dataframe's index:\r\n```\r\n        a \tb \tc\r\n0 \t0 \t20 \t30\r\n1 \t1 \t21 \t31\r\n2 \t2 \t22 \t32\r\n3 \t3 \t23 \t33\r\n4 \t4 \t24 \t34\r\n5 \t5 \t25 \t35\r\n```\r\nI want to put them back. I use:\r\n`resultSeries = resultDataframe.apply(lambda x: [x])`\r\nto change it to a series, then use:\r\n`parameterDataframe['series'] = resultSeries`\r\nto put them back.\r\n\r\nBut the \"resultDataframe.apply(lambda x: [x])\" does not get what I need.\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/309317185",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16711#issuecomment-309317185",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16711",
    "id": 309317185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTMxNzE4NQ==",
    "user": {
      "login": "BranYang",
      "id": 4443076,
      "node_id": "MDQ6VXNlcjQ0NDMwNzY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4443076?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BranYang",
      "html_url": "https://github.com/BranYang",
      "followers_url": "https://api.github.com/users/BranYang/followers",
      "following_url": "https://api.github.com/users/BranYang/following{/other_user}",
      "gists_url": "https://api.github.com/users/BranYang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BranYang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BranYang/subscriptions",
      "organizations_url": "https://api.github.com/users/BranYang/orgs",
      "repos_url": "https://api.github.com/users/BranYang/repos",
      "events_url": "https://api.github.com/users/BranYang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BranYang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-19T01:21:38Z",
    "updated_at": "2017-06-19T01:21:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "`df.apply(lambda x: [list(x.values)])` will do what you want @xmduhan \r\n```\r\nIn [4]: df.apply(lambda x: [list(x.values)])\r\nOut[4]: \r\na              [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]]\r\nb    [[20, 21, 22, 23, 24, 25, 26, 27, 28, 29]]\r\nc    [[30, 31, 32, 33, 34, 35, 36, 37, 38, 39]]\r\ndtype: object\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/309592584",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16711#issuecomment-309592584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16711",
    "id": 309592584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwOTU5MjU4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-19T22:34:56Z",
    "updated_at": "2017-06-19T22:34:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "as @BranYang example shows. You are just returning a reference to the variable. Using lists as cell should simply be avoided as its completely non-performant (and you are using something mutable anyhow)."
  }
]
