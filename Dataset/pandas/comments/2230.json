[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10272724",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10272724",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10272724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjcyNzI0",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-11T21:48:30Z",
    "updated_at": "2012-11-11T21:48:30Z",
    "author_association": "MEMBER",
    "body": "The files here were made executable again (notably, this causes nose to exclude them from runs). Something must be wrong with your env-- as a band-aid you can globally configure git so it doesn't change file permissions\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10273325",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10273325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10273325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjczMzI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-11T22:33:09Z",
    "updated_at": "2012-11-11T22:33:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "git config core.filemode false\nseems to fix this....pushed a change to update modes on these 2 files\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10273701",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10273701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10273701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjczNzAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-11T23:03:40Z",
    "updated_at": "2012-11-11T23:06:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also think something like this should be added to the docs:\n\nselecting with a single column of a df (eg df[df['A']>0])\n  will potentially change the shape of the frame (as entire rows can be dropped)\n\nwhile masking with the entire frame (eg df[df>0])\n  returns an equal sized frame\n  (even in the case of partial masking on the rows)\n   eg df[df[:-1]>0]\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10277272",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10277272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10277272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjc3Mjcy",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T04:41:02Z",
    "updated_at": "2012-11-12T04:41:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jseabold :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10296143",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10296143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10296143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk2MTQz",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T17:23:12Z",
    "updated_at": "2012-11-12T17:56:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wesm @jreback, what's more intuitive to you:\n1. mask where cond is True or False? Guess depends on whether you think of it as putmask-like or boolean selection.\n2. should where take values from self or other when cond is True?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10297146",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10297146",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10297146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk3MTQ2",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T17:51:05Z",
    "updated_at": "2012-11-12T17:51:05Z",
    "author_association": "MEMBER",
    "body": "I'm unconvinced about the `df[bool_dataframe]` yielding a masked DataFrame behavior (instead of asking that people explicitly use mask). I guess the use case you're thinking of is to be able to do stuff like:\n\n`df[df > 0].mean(1)` \n\nvs\n\n`df.mask(df > 0).mean(1)`\n\n?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10297372",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10297372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10297372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk3Mzcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T17:56:29Z",
    "updated_at": "2012-11-12T18:04:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually no; I use mask like this:\n\n```\ndf = start_frame\nfor m in masks:\n    df = df.mask(m)\n```\n\nso I am 'applying' a series of 'filters' to df, but I want to avoid reindexing at each step (as I like to preserve the shape);\n(these operations are not necessarily simple either - so they are not all 'ands' - this is also a simplification - I don't do it in a loop like this but pass it around - and other functions need to know about the whole frame)\n\nI am fine with making users do df.mask explicity; I was actually thinking that since df[df > 0 ] = 2 is supported, then the converse operation should directly yield a frame (rather than an ndarray)\n\n`df[df > 0]` (in the new version)\n\nis equivalent to the more verbose (assume that df[df >0] returns a frame rather than an ndarray)\n\n`df[df > 0].reindex_like(df)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10297490",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10297490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10297490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjk3NDkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-12T17:59:25Z",
    "updated_at": "2012-11-12T17:59:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "in response to @changhiskhan \n1) I agree 'True' is more natural (as that is what masking implies).....maybe it shouldn't be called mask, but 'select' (but that's taken!)..\n2) i don't see a problem with how 'where' is done now....?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10331894",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10331894",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10331894,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzMxODk0",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T16:14:48Z",
    "updated_at": "2012-11-13T16:14:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback, on #2, I was just thinking whether it's more intuitive that self.where(cond, other) is like np.where(cond, self, other) or np.where(cond, other, self). In your pull request, the cond is used in putmask where you need to invert the cond to match non-inplace DataFrame.where.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10334199",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10334199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10334199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzM0MTk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T17:14:47Z",
    "updated_at": "2012-11-13T17:18:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@changhiskhan \nI had justed copied what was in _setitem_; here other is really the value that gets set, so it is what you want if cond is true\n\ninplace = true is _setitem_, while inplace = false (e.g. use np.where) is _getitem_\nand wanted to use the same alignment code (in theory these could actually/maybe should be separate methods)...inplace=True is kind of 'internal'; I dont' think it would ever would be called directly (instead you would call indirectly via _setitem_)\n\nhere's what I would do:\n1. eliminate mask (the user can always recreate by inverting the condition / or make it call where with an inverted condition)\n2. change the where signalture to:  where(self, cond, other = NA, inplace = False)\n3. change getitem to use where (rather than mask)\n\nso then syntax is pretty clean: `df.where(cond)` is equiv to `df[cond]` when cond is a Frame\n\nI have tested and am ready to push if this looks ok\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10347949",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10347949",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10347949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzQ3OTQ5",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T23:03:37Z",
    "updated_at": "2012-11-13T23:03:37Z",
    "author_association": "MEMBER",
    "body": "I don't think the semantics for `inplace=True` are right-- it's doing the opposite of what you would want (leaving values in `df` where the condition is True otherwise making them values from the `other` value). Making the necessary changes...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10349248",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10349248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10349248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzQ5MjQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T23:47:58Z",
    "updated_at": "2012-11-13T23:47:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok...make sense.....only (minor) issue....in numpy pretty sure that negation (-) is completely equivalent of invert (~) when applied to boolean?\n\nin mask should change ~cond to -cond ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10349321",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10349321",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10349321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzQ5MzIx",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-13T23:49:53Z",
    "updated_at": "2012-11-13T23:49:53Z",
    "author_association": "MEMBER",
    "body": "Yeah, no biggie either way\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10350859",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10350859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10350859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzUwODU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-14T00:52:34Z",
    "updated_at": "2012-11-14T11:26:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "these might be helpful examples for whatsnew and/or docs.....\n\n```\nimport pandas\nimport numpy as np\n\ndf = pandas.DataFrame(np.random.randn(5, 3),columns=['A','B','C'])\ndf\n```\n\nstandard frame selection (with a boolean series as the condition),\n  get a frame that is not necessarily the same shape as the input frame\n\n```\ndf[df.A>0]\n```\n\nstandard frame selection (but with boolean frame as the condition, \n get a masked frame as the result, the same size as the original frame)\n\n```\ndf[df>0]\n```\n\nwhere is the underlying mechanism\n\n```\ndf.where(df>0)\n```\n\nsubstitue values that meet the condition\n\n```\ndf.where(df>0,-df)\n```\n\nsetting values\n\n```\ndf2 = df.copy()\ndf2[df2>0] = -df2\ndf2\n```\n\nmasking is the inverse boolean operation of where\n\n```\ndf.mask(df>0)\n\ndf.where(df<=0)\n```\n\nadvanced: partial selection and setting   \n\n```\ndf2 = df.copy()\ncrit = df2[1:2]>0\ncrit\ndf2[crit] = 3\ndf2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10392840",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10392840",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10392840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzkyODQw",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T00:39:42Z",
    "updated_at": "2012-11-15T00:39:42Z",
    "author_association": "MEMBER",
    "body": "if someone wants to do a PR to add these to the docs/what's new that'd be great. i am doing too many other things to do it myself\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10394801",
    "html_url": "https://github.com/pandas-dev/pandas/pull/2230#issuecomment-10394801",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2230",
    "id": 10394801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzk0ODAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-15T02:04:33Z",
    "updated_at": "2012-11-15T02:04:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "done....added a small pull-request with the changes for whatsnew for 0.9.1...let me know if you need anything further!\n"
  }
]
