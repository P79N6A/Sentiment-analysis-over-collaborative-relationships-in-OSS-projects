[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36169681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6488#issuecomment-36169681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6488",
    "id": 36169681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTY5Njgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T20:00:49Z",
    "updated_at": "2014-02-26T20:00:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "related is #3190 which proposes to do this with templates\n\nhowever, I think a possible solution is as follows.\n\nmodify `core/frame/to_html.py` to allow it to take a custom `HTMLFormatter` (as a keyword argument), defaulting to the current `HTMLFormatter`, which is then instantiated in `core/format.py/DataFrameFormatter/to_html`.\n\nThen modify `HTMLFormatter` to be a bit more flexible (so in stead of 'hard coding' things, would just call methods that have defaults); these can be overriden by the user via a custom sub-class of `HTMLFormatter`, or by passing in different defaults at construction time\n\ne.g.\n\n```\nfrom pandas.core.format import HTMLFormatter\ndf.to_html(........, formatter = HTMLFormatter(.....))\n```\n\nand need to modify `HTMLFormatter` a bit to make it a bit more sub-class friendly, as well as to deal with passes in kwargs better. (as it will be instantiated before the format\nis available)\n\n```\nclass HTMLFormatter(TableFormatter):\n\n    def __init__(self, fmt=None,.......):\n          self.fmt = fmt\n\n    def set_formatter(self, fmt):\n          self.fmt = fmt\n\n    def write_result(self, buf):\n            ........\n            self.write_classes(self):\n            self.write(....)\n\n```\n\nlmk if you are up for this....It seems a much bigger change that it actually is, but it is necessary\nin order to avoid having the user pass a gazillion number of parameters in that pandas then has to handle. This makes the most useful of parameters/attributes available for modification by simply overriding the HTMLFormatter class.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45054992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6488#issuecomment-45054992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6488",
    "id": 45054992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDU0OTky",
    "user": {
      "login": "hmeine",
      "id": 462802,
      "node_id": "MDQ6VXNlcjQ2MjgwMg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/462802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmeine",
      "html_url": "https://github.com/hmeine",
      "followers_url": "https://api.github.com/users/hmeine/followers",
      "following_url": "https://api.github.com/users/hmeine/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmeine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmeine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmeine/subscriptions",
      "organizations_url": "https://api.github.com/users/hmeine/orgs",
      "repos_url": "https://api.github.com/users/hmeine/repos",
      "events_url": "https://api.github.com/users/hmeine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmeine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-04T06:16:41Z",
    "updated_at": "2014-06-04T06:16:41Z",
    "author_association": "NONE",
    "body": "Currently, the HTMLFormatter methods take a 'tags' kwarg, IMHO that should be named 'attributes' instead (in order to match expected HTML/XML terminology).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45067189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6488#issuecomment-45067189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6488",
    "id": 45067189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDY3MTg5",
    "user": {
      "login": "CRP",
      "id": 807824,
      "node_id": "MDQ6VXNlcjgwNzgyNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/807824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CRP",
      "html_url": "https://github.com/CRP",
      "followers_url": "https://api.github.com/users/CRP/followers",
      "following_url": "https://api.github.com/users/CRP/following{/other_user}",
      "gists_url": "https://api.github.com/users/CRP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CRP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CRP/subscriptions",
      "organizations_url": "https://api.github.com/users/CRP/orgs",
      "repos_url": "https://api.github.com/users/CRP/repos",
      "events_url": "https://api.github.com/users/CRP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CRP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-04T08:57:42Z",
    "updated_at": "2014-06-04T08:57:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "How about adding the scope attribute to the `<td>`\ntag in order to allow for separate formatting of columns and index?\nCurrently, I can add a style such as `<style>th {text-align: left}</style>`, but this will affect both axes. Or does anyone know a different way to achieve the same result?\n\nThanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45098571",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6488#issuecomment-45098571",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6488",
    "id": 45098571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDk4NTcx",
    "user": {
      "login": "hmeine",
      "id": 462802,
      "node_id": "MDQ6VXNlcjQ2MjgwMg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/462802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmeine",
      "html_url": "https://github.com/hmeine",
      "followers_url": "https://api.github.com/users/hmeine/followers",
      "following_url": "https://api.github.com/users/hmeine/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmeine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmeine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmeine/subscriptions",
      "organizations_url": "https://api.github.com/users/hmeine/orgs",
      "repos_url": "https://api.github.com/users/hmeine/repos",
      "events_url": "https://api.github.com/users/hmeine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmeine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-04T14:38:00Z",
    "updated_at": "2014-06-04T14:38:00Z",
    "author_association": "NONE",
    "body": "This could be done similar to #7338 , but I think in this case it may even be possible using non-trivial CSS selectors like\n\n``` css\ntable.dataframe tr:firstchild { color: red }\n```\n\nOf course, that would not deal with hierarchical indices yet, so I am +1 on additional classes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/45143198",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6488#issuecomment-45143198",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6488",
    "id": 45143198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTQzMTk4",
    "user": {
      "login": "CRP",
      "id": 807824,
      "node_id": "MDQ6VXNlcjgwNzgyNA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/807824?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CRP",
      "html_url": "https://github.com/CRP",
      "followers_url": "https://api.github.com/users/CRP/followers",
      "following_url": "https://api.github.com/users/CRP/following{/other_user}",
      "gists_url": "https://api.github.com/users/CRP/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CRP/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CRP/subscriptions",
      "organizations_url": "https://api.github.com/users/CRP/orgs",
      "repos_url": "https://api.github.com/users/CRP/repos",
      "events_url": "https://api.github.com/users/CRP/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CRP/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-04T19:57:53Z",
    "updated_at": "2014-06-04T19:57:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I tried that but results are bad with MultiIndex, so this is a no go.\nI understand that the pandas team is trying to keep the \"output formatting\" features at the minimum level, as this can be handled perfectly well by dedicated packages or style sheets, but for the latter to be really useful classes should be added wherever possible.\n"
  }
]
