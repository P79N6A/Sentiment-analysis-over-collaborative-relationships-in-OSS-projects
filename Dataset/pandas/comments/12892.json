[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209531516",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12892#issuecomment-209531516",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12892",
    "id": 209531516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTUzMTUxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T16:25:59Z",
    "updated_at": "2016-04-13T16:25:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "so this is expected.\n\nwhen these are aligned they are converted to floats\n\n```\nIn [9]: l2, r2 = l.align(r)\n\nIn [10]: l2\nOut[10]: \n0    NaN\n1    1.0\n2    2.0\n3    3.0\ndtype: float64\n\nIn [11]: r2\nOut[11]: \n0    1.0\n1    NaN\n2    1.0\n3    0.0\ndtype: float64\n\nIn [12]: l2 // r2\nOut[12]: \n0    NaN\n1    NaN\n2    2.0\n3    NaN\ndtype: float64\n```\n\nwe only do the 'filling' part on integer series (IOW how the 0/0 -> inf) happens)\n\n```\nIn [13]: np.array([0])/np.array([0])\nOut[13]: array([0])\n\nIn [14]: np.array([0.])/np.array([0])\nOut[14]: array([ nan])\n```\n\nIOW for 13 the 0's get filled, but for 14 they don't (they remain NaN).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209534795",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12892#issuecomment-209534795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12892",
    "id": 209534795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTUzNDc5NQ==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T16:36:05Z",
    "updated_at": "2016-04-13T16:36:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "From a user perspective was not very expected.  It was actually pretty surprising.\n\nWhy are integer series converted to floats when aligned?\n\nAlso, my NumPy behaves differently than yours apparently:\n\n``` python\nIn [1]: import numpy as np\n\nIn [2]: np.array([0]) / np.array([0])\n/home/mrocklin/Software/anaconda/bin/ipython:1: RuntimeWarning: invalid value encountered in true_divide\n  #!/home/mrocklin/Software/anaconda/bin/python3\nOut[2]: array([ nan])\n\nIn [3]: np.array([0.]) / np.array([0.])\n/home/mrocklin/Software/anaconda/bin/ipython:1: RuntimeWarning: invalid value encountered in true_divide\n  #!/home/mrocklin/Software/anaconda/bin/python3\nOut[3]: array([ nan])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209538280",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12892#issuecomment-209538280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12892",
    "id": 209538280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTUzODI4MA==",
    "user": {
      "login": "jcrist",
      "id": 2783717,
      "node_id": "MDQ6VXNlcjI3ODM3MTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcrist",
      "html_url": "https://github.com/jcrist",
      "followers_url": "https://api.github.com/users/jcrist/followers",
      "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
      "organizations_url": "https://api.github.com/users/jcrist/orgs",
      "repos_url": "https://api.github.com/users/jcrist/repos",
      "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcrist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T16:45:11Z",
    "updated_at": "2016-04-13T16:45:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "This actually seems to be a change in how numpy handles things.\n- Numpy 1.10.4\n\n``` python\nIn [4]: l // r\nOut[4]:\n0         NaN\n1         NaN\n2    2.000000\n3         inf\ndtype: float64\n\nIn [5]: import numpy as np\n\nIn [6]: np.__version__\nOut[6]: '1.10.4'\n\nIn [7]: pd.__version__\nOut[7]: u'0.18.0'\n```\n- Numpy 1.11.0\n\n``` python\nIn [4]: l // r\nOut[4]:\n0    NaN\n1    NaN\n2    2.0\n3    NaN\ndtype: float64\n\nIn [5]: import numpy as np\n\nIn [6]: np.__version__\nOut[6]: '1.11.0'\n\nIn [7]: pd.__version__\nOut[7]: u'0.18.0'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209577917",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12892#issuecomment-209577917",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12892",
    "id": 209577917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTU3NzkxNw==",
    "user": {
      "login": "jcrist",
      "id": 2783717,
      "node_id": "MDQ6VXNlcjI3ODM3MTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcrist",
      "html_url": "https://github.com/jcrist",
      "followers_url": "https://api.github.com/users/jcrist/followers",
      "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
      "organizations_url": "https://api.github.com/users/jcrist/orgs",
      "repos_url": "https://api.github.com/users/jcrist/repos",
      "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcrist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T18:19:48Z",
    "updated_at": "2016-04-13T18:19:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Does pandas special case integer floor division? For aligned partitions, the behavior of `1//0 == inf` differs from numpy's of `0` or `nan` (depending on float or int dtype).\n\n``` python\nIn [51]: l = pd.Series([1, 2])\n\nIn [52]: r = pd.Series([1, 0])\n\nIn [53]: l // r\nOut[53]:\n0    1.000000\n1         inf\ndtype: float64\n\nIn [54]: l.values // r.values\nOut[54]: array([1, 0])\n\nIn [55]: l.values // r.values.astype('float64')\nOut[55]: array([  1.,  nan])\n\nIn [56]: l.values.astype('float64') // r.values\nOut[56]: array([  1.,  nan])\n\nIn [57]: l.values.astype('float64') // r.values.astype('float64')\nOut[57]: array([  1.,  nan])\n\nIn [58]: pd.__version__\nOut[58]: u'0.18.0'\n\nIn [59]: np.__version__\nOut[59]: '1.11.0'\n```\n"
  }
]
