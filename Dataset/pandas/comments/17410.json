[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326574897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17410#issuecomment-326574897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17410",
    "id": 326574897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjU3NDg5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-01T13:05:17Z",
    "updated_at": "2017-09-01T13:05:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "something changed recently? with this; the path now excepts every time (inside the _attemptYYMMDD). this should be *much* faster."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326576742",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17410#issuecomment-326576742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17410",
    "id": 326576742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjU3Njc0Mg==",
    "user": {
      "login": "pratapvardhan",
      "id": 3757165,
      "node_id": "MDQ6VXNlcjM3NTcxNjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3757165?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pratapvardhan",
      "html_url": "https://github.com/pratapvardhan",
      "followers_url": "https://api.github.com/users/pratapvardhan/followers",
      "following_url": "https://api.github.com/users/pratapvardhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/pratapvardhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pratapvardhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pratapvardhan/subscriptions",
      "organizations_url": "https://api.github.com/users/pratapvardhan/orgs",
      "repos_url": "https://api.github.com/users/pratapvardhan/repos",
      "events_url": "https://api.github.com/users/pratapvardhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pratapvardhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-01T13:14:14Z",
    "updated_at": "2017-09-01T13:14:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect, for `format='%Y%m%d'` it goes through [`_attempt_YYYYMMDD`](https://github.com/pandas-dev/pandas/blob/dad39d593eacd1ee2b2465dc2ac025b0cfaffe2a/pandas/core/tools/datetimes.py#L642) in [`pandas.core.tools.datetimes`](https://github.com/pandas-dev/pandas/blob/dad39d593eacd1ee2b2465dc2ac025b0cfaffe2a/pandas/core/tools/datetimes.py#L410) and is reconverting the type from object to int to object again and then having [`lib.try_parse_year_month_day`](https://github.com/pandas-dev/pandas/blob/dad39d593eacd1ee2b2465dc2ac025b0cfaffe2a/pandas/core/tools/datetimes.py#L656) prior to `tslib.array_to_datetime` seems taking up time. Whereas, without `format`, it directly uses [`tslib.array_to_datetime`](https://github.com/pandas-dev/pandas/blob/dad39d593eacd1ee2b2465dc2ac025b0cfaffe2a/pandas/core/tools/datetimes.py#L434)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326592145",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17410#issuecomment-326592145",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17410",
    "id": 326592145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjU5MjE0NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-01T14:16:53Z",
    "updated_at": "2017-09-01T14:16:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "One change, though not especially recent, is that the iso 8601 path will now handle `'%Y%m%d'`, so it will be much faster than it once was.  Still seems like it would be possible to make `_attempt_YYYYMMDD` faster, not clear to me why we're casting back and forth to objects."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435637217",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17410#issuecomment-435637217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17410",
    "id": 435637217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTYzNzIxNw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-04T02:38:44Z",
    "updated_at": "2018-11-04T02:38:44Z",
    "author_association": "MEMBER",
    "body": "I looked into this briefly in https://github.com/mroeschke/pandas/tree/non_object_parsing  and was able to get it down ~2x from master by getting rid of casting to object, but it's still slower than not providing a format:\r\n\r\n```\r\nIn [13]: pd.__version__\r\nOut[13]: '0.24.0.dev0+890.gd57115285.dirty'\r\n\r\nIn [14]: s = pd.Series(['20120101']*1000000)\r\n\r\nIn [15]: %timeit pd.to_datetime(s)\r\n135 ms ± 852 µs per loop (mean ± std. dev. of 7 runs, 10 loops each)\r\n\r\n# Branch\r\nIn [16]: %timeit pd.to_datetime(s, format='%Y%m%d')\r\n240 ms ± 1.53 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n\r\n# master\r\nIn [3]: %timeit pd.to_datetime(s, format='%Y%m%d')\r\n531 ms ± 34.3 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)\r\n```\r\n\r\nGiven that this branch can provide a slowdown, it might be worth removing this path for now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435637505",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17410#issuecomment-435637505",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17410",
    "id": 435637505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTYzNzUwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-04T02:46:57Z",
    "updated_at": "2018-11-04T02:46:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "this used to be way faster than naive parsing\r\nsomething changed - "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435701522",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17410#issuecomment-435701522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17410",
    "id": 435701522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTcwMTUyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-04T20:10:13Z",
    "updated_at": "2018-11-04T20:10:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "This patch makes the speed almost the same. But since its just duplicating a lot of paths, maybe just easier to simplify this (e.g. if format is %Y%m%d then just remove the format and parse).\r\n\r\nI think this got way slower because of floating point math was introduced (e.g. ``/`` rather than ``//``)\r\n```\r\ndiff --git a/pandas/_libs/tslibs/conversion.pyx b/pandas/_libs/tslibs/conversion.pyx\r\nindex 8cf42bf93..2f303e1f2 100644\r\n--- a/pandas/_libs/tslibs/conversion.pyx\r\n+++ b/pandas/_libs/tslibs/conversion.pyx\r\n@@ -481,6 +481,34 @@ cdef _TSObject convert_str_to_tsobject(object ts, object tz, object unit,\r\n     return convert_to_tsobject(ts, tz, unit, dayfirst, yearfirst)\r\n \r\n \r\n+def try_parse_year_month_day(int64_t[:] years, int64_t[:] months,\r\n+                             int64_t[:] days):\r\n+    cdef:\r\n+        Py_ssize_t i, n\r\n+        int64_t[:] iresult\r\n+        npy_datetimestruct dts\r\n+\r\n+    n = len(years)\r\n+    if len(months) != n or len(days) != n:\r\n+        raise ValueError('Length of years/months/days must all be equal')\r\n+    result = np.empty(n, dtype='M8[ns]')\r\n+    iresult = result.view('i8')\r\n+\r\n+    dts.hour = 0\r\n+    dts.min = 0\r\n+    dts.sec = 0\r\n+    dts.us = 0\r\n+    dts.ps = 0\r\n+\r\n+    for i in range(n):\r\n+        dts.year = years[i]\r\n+        dts.month = months[i]\r\n+        dts.day = days[i]\r\n+        result[i] = dtstruct_to_dt64(&dts)\r\n+\r\n+    return np.asarray(result)\r\n+\r\n+\r\n cdef inline check_overflows(_TSObject obj):\r\n     \"\"\"\r\n     Check that we haven't silently overflowed in timezone conversion\r\ndiff --git a/pandas/_libs/tslibs/parsing.pyx b/pandas/_libs/tslibs/parsing.pyx\r\nindex 71bb8f796..cd911153c 100644\r\n--- a/pandas/_libs/tslibs/parsing.pyx\r\n+++ b/pandas/_libs/tslibs/parsing.pyx\r\n@@ -10,7 +10,6 @@ from cython import Py_ssize_t\r\n \r\n from cpython.datetime cimport datetime\r\n \r\n-\r\n import numpy as np\r\n \r\n # Avoid import from outside _libs\r\n@@ -19,7 +18,6 @@ if sys.version_info.major == 2:\r\n else:\r\n     from io import StringIO\r\n \r\n-\r\n # dateutil compat\r\n from dateutil.tz import (tzoffset,\r\n                          tzlocal as _dateutil_tzlocal,\r\n@@ -465,23 +463,6 @@ def try_parse_date_and_time(object[:] dates, object[:] times,\r\n     return result.base  # .base to access underlying ndarray\r\n \r\n \r\n-def try_parse_year_month_day(object[:] years, object[:] months,\r\n-                             object[:] days):\r\n-    cdef:\r\n-        Py_ssize_t i, n\r\n-        object[:] result\r\n-\r\n-    n = len(years)\r\n-    if len(months) != n or len(days) != n:\r\n-        raise ValueError('Length of years/months/days must all be equal')\r\n-    result = np.empty(n, dtype='O')\r\n-\r\n-    for i in range(n):\r\n-        result[i] = datetime(int(years[i]), int(months[i]), int(days[i]))\r\n-\r\n-    return result.base  # .base to access underlying ndarray\r\n-\r\n-\r\n def try_parse_datetime_components(object[:] years,\r\n                                   object[:] months,\r\n                                   object[:] days,\r\ndiff --git a/pandas/core/tools/datetimes.py b/pandas/core/tools/datetimes.py\r\nindex dcba51d26..c82140eff 100644\r\n--- a/pandas/core/tools/datetimes.py\r\n+++ b/pandas/core/tools/datetimes.py\r\n@@ -244,6 +244,7 @@ def _convert_listlike_datetimes(arg, box, format, name=None, tz=None,\r\n             if format == '%Y%m%d':\r\n                 try:\r\n                     result = _attempt_YYYYMMDD(arg, errors=errors)\r\n+                    return DatetimeIndex._simple_new(result, name=name, tz=tz)\r\n                 except (ValueError, TypeError, tslibs.OutOfBoundsDatetime):\r\n                     raise ValueError(\"cannot convert the input to \"\r\n                                      \"'%Y%m%d' date format\")\r\n@@ -713,12 +714,9 @@ def _attempt_YYYYMMDD(arg, errors):\r\n     \"\"\"\r\n \r\n     def calc(carg):\r\n-        # calculate the actual result\r\n-        carg = carg.astype(object)\r\n-        parsed = parsing.try_parse_year_month_day(carg / 10000,\r\n-                                                  carg / 100 % 100,\r\n-                                                  carg % 100)\r\n-        return tslib.array_to_datetime(parsed, errors=errors)[0]\r\n+        return conversion.try_parse_year_month_day(carg // 10000,\r\n+                                                   (carg // 100) % 100,\r\n+                                                   carg % 100)\r\n \r\n     def calc_with_mask(carg, mask):\r\n         result = np.empty(carg.shape, dtype='M8[ns]')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/435701583",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17410#issuecomment-435701583",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17410",
    "id": 435701583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNTcwMTU4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-04T20:10:57Z",
    "updated_at": "2018-11-04T20:10:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "of course for this example, ``cache=True`` helps quite a bit :>"
  }
]
