[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21275383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21275383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21275383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjc1Mzgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T20:29:18Z",
    "updated_at": "2013-07-19T20:29:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "out of curiosity why are you using the python `array` as opposed to a numpy array to begin with?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21277136",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21277136",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21277136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjc3MTM2",
    "user": {
      "login": "lgautier",
      "id": 650866,
      "node_id": "MDQ6VXNlcjY1MDg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/650866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgautier",
      "html_url": "https://github.com/lgautier",
      "followers_url": "https://api.github.com/users/lgautier/followers",
      "following_url": "https://api.github.com/users/lgautier/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgautier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgautier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgautier/subscriptions",
      "organizations_url": "https://api.github.com/users/lgautier/orgs",
      "repos_url": "https://api.github.com/users/lgautier/repos",
      "events_url": "https://api.github.com/users/lgautier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgautier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T21:00:52Z",
    "updated_at": "2013-07-19T21:00:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not seeing an opposition in the use of one rather than the other, as I am using using either (or both) depending on the needs.\n\nWhen I pick Python's array, the reason can be one of:\n- Shipping with Python\n- Fast\n\n``` bash\n$ python -m timeit -s 'import array' -s 'a = array.array(\"i\", range(1000))' -- 'for e in a:' '  pass'\n100000 loops, best of 3: 15.8 usec per loop\n$ python -m timeit -s 'import numpy' -s 'a = numpy.array(range(1000))' -- 'for e in a:' '  pass'\n10000 loops, best of 3: 77.2 usec per loop\n```\n- Lightweight implementation of the buffer protocol (to try out things)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21277590",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21277590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21277590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjc3NTkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T21:08:46Z",
    "updated_at": "2013-07-19T21:08:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "your first point is valid, though `numpy` is so installed nowadays as its a base for most other packages\n\nyou speed test is not testing anything, try doing actual operations\n\n```\nIn [25]: x=array.array('i', range(100000))\n\nIn [28]: %timeit sum(x)\n1000 loops, best of 3: 1.09 ms per loop\n\nIn [29]: y = np.arange(100000)\n\nIn [30]: %timeit y.sum()\n10000 loops, best of 3: 72.7 us per loop\n\n```\n\nnumpy support the buffer protocol\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21279122",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21279122",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21279122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjc5MTIy",
    "user": {
      "login": "lgautier",
      "id": 650866,
      "node_id": "MDQ6VXNlcjY1MDg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/650866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgautier",
      "html_url": "https://github.com/lgautier",
      "followers_url": "https://api.github.com/users/lgautier/followers",
      "following_url": "https://api.github.com/users/lgautier/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgautier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgautier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgautier/subscriptions",
      "organizations_url": "https://api.github.com/users/lgautier/orgs",
      "repos_url": "https://api.github.com/users/lgautier/repos",
      "events_url": "https://api.github.com/users/lgautier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgautier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T21:37:21Z",
    "updated_at": "2013-07-19T21:45:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note: the issue report is about is about a missing functionality. Should you wish (and have the powers) to decide not to \nimplement it, just close the report (grey button). If wishing to tell the world that Python's arrays have no use, the Python mailing lists is where you should head ;-)\n\nOtherwise:\n1. The claim that `numpy` is a base for most Python packages is somewhat bold. Data would help believe it.\n2. I am comparing the time to access elements in the respective arrays with the exact same code. You are comparing a generic Python function with a specialized C-extension. When outside of the canned C-extensions, Python's arrays are faster.\n3. \"lightweight\" (as in \"shipping with Python - no dependency involved\")\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21279889",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21279889",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21279889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjc5ODg5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-19T21:54:25Z",
    "updated_at": "2013-07-19T21:54:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lgautier I don't have a problem with your request.\n\nI am simply pointing out to you that IMHO there is no reason to use`array` over `numpy` ever for any kind of actual computation. Yes `array.array` has its uses, but 99% of the time `numpy` or lists are usually the answer.\n\nYour 3rd point is also very odd; if you want lightweight, then how would you expect to use `pandas`, which relies on `numpy`?\n\nyour second point is also not a use case. accessing elements is not a relevant benchmark as it tests a very specific criteria (which maybe array is optimized for); `numpy` is optimized for a much broader range of computations.\n\nas to your first point, http://sourceforge.net/projects/numpy/files/NumPy/stats/timeline?dates=2013-01-01+to+2013-07-19, seems like a lot to me\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21293095",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21293095",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21293095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjkzMDk1",
    "user": {
      "login": "lgautier",
      "id": 650866,
      "node_id": "MDQ6VXNlcjY1MDg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/650866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgautier",
      "html_url": "https://github.com/lgautier",
      "followers_url": "https://api.github.com/users/lgautier/followers",
      "following_url": "https://api.github.com/users/lgautier/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgautier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgautier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgautier/subscriptions",
      "organizations_url": "https://api.github.com/users/lgautier/orgs",
      "repos_url": "https://api.github.com/users/lgautier/repos",
      "events_url": "https://api.github.com/users/lgautier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgautier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T12:54:11Z",
    "updated_at": "2013-07-20T12:54:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd like to keep the issue report on track: this is about suggesting that objects supporting the buffer protocol should be accepted by constructors for `DataFrame` (the Python arrays being the easiest way to have them since the package `array` is part of the Python standard library).\n\nTo keep answering to what has moved, in my opinion, to an extraneous discussion, may be because of mutual incomprehension.\n\nPoint 1: I looked at the link, and I really could not get the slightest hint that \"numpy is a base for most Python packages\" (if the thread was more relaxed I could have made the comment that the graph caught my attention first, and that a striking feature is the decreasing number of downloads over time... ;-) ). If the number of download is what I should be looking at, that's not a small number, but a little perspective would not hurt: \n\n``` bash\n$ vanity sqlalchemy | tail -n 1\nSQLAlchemy has been downloaded 2183196 times!\n$ vanity numpy | tail -n 1\nnumpy has been downloaded 883206 times!\n```\n\nI would certainly not claim that most Python packages are based on SQLAlchemy, or not even that most Python packages having anything to do with SQL are using SQLAlchemy.\nMy point was that one of the general reasons I can occasionally be using `array`, in answer to your initial question, is that it is shipping with Python (so always there, including alternative Python implementations).\n\nPoint 2: accessing elements in an array quickly is either not an operation, or too specialized ?! Come on !\nAgain, my point here is to give one of the general reasons I can occasionally be using `array`, in answer to your initial question. I said that Python arrays are fast, and backed it up with the exact same Python code on arrays from `numpy` and `array`. I initially did not write /faster/, but you looked for it ;-)\n\nPoint 3: that's also in answer to your question about why one would ever use Python's arrays. I just listed what is sometimes making me use `arrays` over `numpy`. `pandas` is requiring `numpy`, but other packages do not necessarily (see point 1 - by the way, did I just see a gimmick \"99%\" thrown around without backing data ? Tsk, tsk, tsk... not when arguing about scientific computing... ;-) ). The buffer interface is here to allow a loose coupling between packages, and the array package in Python is here to precisely allow that. Should one wish to do operations with `numpy` it can be imported. This issue was unfortunately hijacked, but in the original context this means that `pandas` could be imported whenever required, and the vectors to be bundled in a `DataFrame`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21295170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21295170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21295170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjk1MTcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T15:24:14Z",
    "updated_at": "2013-07-20T15:24:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok...I have marked this for 0.13. Not a big deal.\n\nYour point 3 is obviously completely False; you cannot use `pandas` without `numpy`. Doesn't matter if it supports fully `array.array` or not. That is irrelevant.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21296014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21296014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21296014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjk2MDE0",
    "user": {
      "login": "lgautier",
      "id": 650866,
      "node_id": "MDQ6VXNlcjY1MDg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/650866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgautier",
      "html_url": "https://github.com/lgautier",
      "followers_url": "https://api.github.com/users/lgautier/followers",
      "following_url": "https://api.github.com/users/lgautier/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgautier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgautier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgautier/subscriptions",
      "organizations_url": "https://api.github.com/users/lgautier/orgs",
      "repos_url": "https://api.github.com/users/lgautier/repos",
      "events_url": "https://api.github.com/users/lgautier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgautier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T16:17:08Z",
    "updated_at": "2013-07-20T16:17:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> ok...I have marked this for 0.13.\n\nThanks.\n\n> ```\n>  Not a big deal.\n> ```\n\nI don't want to be arguing over a controversial issue then... ;-)\n\n> Your point 3 is obviously completely False; you cannot use pandas without numpy. Doesn't matter if it supports fully array.array or not. That is irrelevant.\n\nCould you point out which part is (allegedly) false ? I'd happy to try clarifying.\n\nYour comment suggests that you might have understood that I am claiming that `pandas` can be used without `numpy`, leaving me quite puzzled since I wrote the exact opposite:\n\n> `pandas` is requiring `numpy`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21299689",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21299689",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21299689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjk5Njg5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T20:13:49Z",
    "updated_at": "2013-07-20T20:15:30Z",
    "author_association": "MEMBER",
    "body": "@lgautier\n1. In point 3, you seem to be implying that users should have a choice between using `array` or using `numpy` when using `pandas`. This simply will never happen. Furthermore, `array` instances will be turned into `numpy` arrays anyway, if this supported, so at best it's introducing a redundancy for the very rare case (and no, I don't have any empirical evidence for this, just anecdotal) of using `array` instead of `numpy`. IMHO, It's very silly to use `array` instead of `numpy`. Element access is a weak benchmark, since most of the time you're not using arrays because you want fast element-by-element access, you want to do operations on the _whole_ array so that benchmark isn't very realistic. If you're going to use `pandas` then you need `numpy`, so again, why not just use that?\n2. Yes, other packages don't require `numpy`, but so what? `pandas` will probably have `numpy` as a dependency for the foreseeable future.\n3. Can you honestly provide a _real-world_ use case where `array` outperforms `numpy`, other than element access?\n4. Python's `array`s are a \"canned\" C-extension:\n\n```\nPython 2.7.5 (default, May 17 2013, 07:55:04)\n[GCC 4.8.0 20130502 (prerelease)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import array\n>>> array\n<module 'array' from '/home/phillip/.virtualenvs/pandas/lib/python2.7/lib-dynload/array.so'>\n```\n\n> When outside of the canned C-extensions, Python's arrays are faster.\n\nWhat evidence is there to support this, other than the rarely-used element-by-element access in pure Python? A factor of ~3 for a rare use case is not evidence.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21299746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21299746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21299746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjk5NzQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T20:17:43Z",
    "updated_at": "2013-07-20T20:17:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@lgautier \n\nsorry this got out of hand :)\n\nI was honestly trying to find a usecase for `arrays`, so was interested in why you were using them.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21299821",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21299821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21299821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjk5ODIx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T20:21:41Z",
    "updated_at": "2013-07-20T20:23:12Z",
    "author_association": "MEMBER",
    "body": "I think supporting objects that implement the buffer protocol is probably okay. E.g., you could pass a Cython `memoryview` array into `DataFrame`. This would be useful if we get the ball rolling on using fused types since we could just return Cython arrays and not have to worry about converting them to numpy arrays in Cython. Although, I'm not sure if any of the Cython routines are used at such a high level. I would imagine they are called by Python functions that `DataFrame` calls and thus it would never even see any Cython arrays\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21300069",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21300069",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21300069,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzAwMDY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T20:36:31Z",
    "updated_at": "2013-07-20T20:36:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud you could easily do that in wrappers, `DataFrame` is too high level for that, and in any event usually need  the 3 different (data,index,columns) arrays to really _do_ anything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21300136",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21300136",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21300136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzAwMTM2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T20:41:55Z",
    "updated_at": "2013-07-20T20:41:55Z",
    "author_association": "MEMBER",
    "body": "yeah was thinking something similar. crossing too much of the api for something probably not that useful\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21300237",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21300237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21300237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzAwMjM3",
    "user": {
      "login": "lgautier",
      "id": 650866,
      "node_id": "MDQ6VXNlcjY1MDg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/650866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgautier",
      "html_url": "https://github.com/lgautier",
      "followers_url": "https://api.github.com/users/lgautier/followers",
      "following_url": "https://api.github.com/users/lgautier/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgautier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgautier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgautier/subscriptions",
      "organizations_url": "https://api.github.com/users/lgautier/orgs",
      "repos_url": "https://api.github.com/users/lgautier/repos",
      "events_url": "https://api.github.com/users/lgautier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgautier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T20:49:46Z",
    "updated_at": "2013-07-20T20:49:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud \n\n> IMHO, It's very silly to use array instead of numpy. Element access is a weak benchmark, since most of the time you're not using arrays because you want fast element-by-element access, you want to do operations on the whole array so that benchmark isn't very realistic.\n\n<sigh>  now we have a combo: unsubstantiated judgment (first part), lecturing people about what their code is doing (without knowing much of the said code), and comments (there and in the rest of the post) largely showing a miscomprehension of what is discussed.\n\nSorry for teasing, but can you read the thread ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21300591",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21300591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21300591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzAwNTkx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-20T21:16:55Z",
    "updated_at": "2013-07-20T21:16:55Z",
    "author_association": "MEMBER",
    "body": "@lgautier Why don't you just submit a PR then instead of wasting time on pedantic arguments? It sounds like you're the only one that understands what's going on in your head, so let the code speak for itself.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21309991",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21309991",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21309991,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzA5OTkx",
    "user": {
      "login": "lgautier",
      "id": 650866,
      "node_id": "MDQ6VXNlcjY1MDg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/650866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgautier",
      "html_url": "https://github.com/lgautier",
      "followers_url": "https://api.github.com/users/lgautier/followers",
      "following_url": "https://api.github.com/users/lgautier/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgautier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgautier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgautier/subscriptions",
      "organizations_url": "https://api.github.com/users/lgautier/orgs",
      "repos_url": "https://api.github.com/users/lgautier/repos",
      "events_url": "https://api.github.com/users/lgautier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgautier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-21T13:26:52Z",
    "updated_at": "2013-07-21T13:26:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \n\n> sorry this got out of hand :)\n\nI am tempted to say: \"I did not expect the Spanish Inquisition\"\n;-)\n\n> I was honestly trying to find a usecase for arrays, so was interested in why you were using them.\n\nSure. \n\nNote that I understand the question as:\n\"why would one ever use `array` instead of `numpy` ?\" \n\n(\"where does `array` fit when `pandas` requires `numpy` ?\" is for later).\n\nWhile `numpy` is providing a number of useful operations on arrays (initially matrix multiplication and linear algebra, by wrapping BLAS/LAPACK) there are situations where the most important part is to have an efficient structure for storing fixed-size numerical arrays (lists or tuple use quickly much more memory)... and Python `array` provides just that.\n\nTo give a concrete example. I can have a simple module \"foo.py\"\n\n``` python\nfrom array import array\n\ndef load_data():\n    genome_pos = array.fromfile('genome_pos.dat') # sorted genomic positions\n    signal = array.fromfile('signal.dat') # some signal (let's keep it short, this is an example)\n    return (genome_pos, signal)\n\nimport bisect\ndef interval_indices(genome_pos, pos_a, pos_b):\n    i_a = bisect.bisect(genome_pos, pos_a)\n    i_b = bisect.bisect(genome_pos, pos_b)\n    return (i_a, i_b)\n```\n\nThat module can be used to put together a quick application.\n\n``` python\nimport foo\ngenome_pos, signal = foo.load_data()\n\nfrom flask import Flask\napp = Flask(__name__)\nfrom flask import request\n\n@app.route('/slice/<pos_a>/<pos_b>')\ndef hello(pos_a=None, pos_b=None):\n    i_a, i_b = foo.interval_indices(genome_pos, pos_a, pos_b)\n    return render_template('xyplot.html', x=genome_pos[i_a:i_b], y=signal[i_a:i_b])\n\nif __name__ == '__main__':\n    app.run()\n```\n\n`numpy` could be used in place of `array`, but `array` is up to the task and is shipping with Python. I often have to write code to be run elsewhere and I weight every dependency on 3rd-party modules.\n\nThis leads to the second question:\n\"where does `array` fit when `pandas` requires `numpy` ?\"\n\nThe convenience of the buffer interface is that, should computation with `numpy` (or `OpenCV`... just to be annoying ;-) ) be wished, the underlying data can be wrapped up seamlessly. I can ensure minimal capabilities without requiring `numpy` or else.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/21355533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4297#issuecomment-21355533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4297",
    "id": 21355533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzU1NTMz",
    "user": {
      "login": "lgautier",
      "id": 650866,
      "node_id": "MDQ6VXNlcjY1MDg2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/650866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lgautier",
      "html_url": "https://github.com/lgautier",
      "followers_url": "https://api.github.com/users/lgautier/followers",
      "following_url": "https://api.github.com/users/lgautier/following{/other_user}",
      "gists_url": "https://api.github.com/users/lgautier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lgautier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lgautier/subscriptions",
      "organizations_url": "https://api.github.com/users/lgautier/orgs",
      "repos_url": "https://api.github.com/users/lgautier/repos",
      "events_url": "https://api.github.com/users/lgautier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lgautier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-22T16:13:28Z",
    "updated_at": "2013-07-22T16:13:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "The buffer interface turned out to be out of the equation for the fix.\n\nPull request:\nhttps://github.com/pydata/pandas/pull/4317\n"
  }
]
