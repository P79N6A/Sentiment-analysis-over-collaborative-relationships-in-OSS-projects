[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37569280",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-37569280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 37569280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTY5Mjgw",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T18:26:46Z",
    "updated_at": "2014-03-13T18:26:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I'm not 100% sure it's a good idea to always clear and reflect when you need Meta, in cases where you have a lot of tables it can take a few seconds. On the other hand you are right that if someone starts mixing in raw SQL (which i guess is very likely) we have no way of know whether Meta needs updating or not :/ I guess we can try it as a property and dive into potential performance issues later \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37571028",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-37571028",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 37571028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTcxMDI4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-13T18:41:16Z",
    "updated_at": "2014-03-13T18:41:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you invalidate the metadata `_meta?` when a raw string is passed? then only need to recreate if the user does raw stuff\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37636987",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-37636987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 37636987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjM2OTg3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T11:10:19Z",
    "updated_at": "2014-03-14T11:10:57Z",
    "author_association": "MEMBER",
    "body": "@mangecoeur I agree it seems not the best idea to always clear and reflect the meta, but I do not see another way to prevent that the meta will not be up to date anymore if one has executed some raw SQL code.\n\n@jreback But the problem is that we don't know when the user does raw stuff. They could do it with `sql.execute(\"DROP TABLE table\")`, and this we could maybe 'detect', but you can also do it via sqlalchemy of directly in eg PgAdminIII for PostgreSQL.\n\nMaybe another way to prevent the possible performance issues is to limit the cases that `meta` is called in our code. Eg for `has_table`, sqlalchemy has also an `has_table` method directly on the engine that maybe has not to pass through meta.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37637913",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-37637913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 37637913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjM3OTEz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-14T11:24:42Z",
    "updated_at": "2014-03-14T11:24:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "what happens if you only reflect the meta once\nif user does raw stuff then they should manually reflect if they are then using pandas functions\n(or maybe a flag to do it every time)\n\nI think this is users issue\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37709560",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-37709560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 37709560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzA5NTYw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-15T00:14:50Z",
    "updated_at": "2014-03-15T00:14:50Z",
    "author_association": "MEMBER",
    "body": "It is indeed maybe a user issue, but I think a common issue (as we already did it ourselves in the test suite (https://github.com/jorisvandenbossche/pandas/blob/sql2/pandas/io/tests/test_sql.py#L109), why one of the tests was not really working), so if we can easily prevent it, why not?\n\nBut I can see an argument to leave this as is, as it is the same with sqlalchemy, and we would just copy sqlalchemy behaviour then. \nIf we do that, i would certainly change has_table so this is up to date. So it would only be the direct use of PandasSQL.meta that would not always be up to date.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37754889",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-37754889",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 37754889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzU0ODg5",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-16T11:38:34Z",
    "updated_at": "2014-03-16T11:38:34Z",
    "author_association": "MEMBER",
    "body": "@mangecoeur @hayd @jreback Anybody a strong opinion on this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37756701",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-37756701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 37756701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzU2NzAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-16T13:12:44Z",
    "updated_at": "2014-03-16T13:12:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think should be a passed in option when creating the engine defaulting to True is ok\nmaybe meta='always', and accept None which will allow the user to manually reflect (maybe should make reflect/clear a public method)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43341513",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-43341513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 43341513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQxNTEz",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-16T15:01:44Z",
    "updated_at": "2014-05-16T15:01:44Z",
    "author_association": "MEMBER",
    "body": "Pushed this to 0.14.1, as the OO api is also not yet finalized (and this only concerns that, not the functional api)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43346359",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-43346359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 43346359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQ2MzU5",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-16T15:42:04Z",
    "updated_at": "2014-05-16T15:42:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "On refelction I like the idea of invalidating meta if the user does something \"manual\" like using raw SQL, but leave scope open for adding more useful functions that take advantage of SQLs expression API (or these could be added by people/projects who want to subclass the SQLAlchemy api class). Like I mentioned in another issue, it's important to make it possible for a user to manually manage reflection of metadata/supply their own metadata object for advanced use cases. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44360262",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-44360262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 44360262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzYwMjYy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T02:49:37Z",
    "updated_at": "2014-05-28T02:49:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps raise a UserWarning if they have done something manual? Say that meta could be invalid / user should reflect ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44407021",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-44407021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 44407021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDA3MDIx",
    "user": {
      "login": "mangecoeur",
      "id": 743508,
      "node_id": "MDQ6VXNlcjc0MzUwOA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/743508?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mangecoeur",
      "html_url": "https://github.com/mangecoeur",
      "followers_url": "https://api.github.com/users/mangecoeur/followers",
      "following_url": "https://api.github.com/users/mangecoeur/following{/other_user}",
      "gists_url": "https://api.github.com/users/mangecoeur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mangecoeur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mangecoeur/subscriptions",
      "organizations_url": "https://api.github.com/users/mangecoeur/orgs",
      "repos_url": "https://api.github.com/users/mangecoeur/repos",
      "events_url": "https://api.github.com/users/mangecoeur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mangecoeur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-28T13:37:50Z",
    "updated_at": "2014-05-28T13:37:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd I think that might make it too easy for people to shoot themselves in the foot. Perhaps the best is to always reflect but have a class \"reflect\" or \"get meta\" function. An advanced user can just create a subclass and override that function.\nOR we could think of a clean way to pass SQLAlchemy options into the object - preferably without spamming dozens of kwargs...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/71398355",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-71398355",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 71398355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMzk4MzU1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-25T22:57:23Z",
    "updated_at": "2015-01-25T22:57:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche keep this open?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77477839",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-77477839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 77477839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NDc3ODM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-05T23:46:50Z",
    "updated_at": "2015-03-05T23:46:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77528052",
    "html_url": "https://github.com/pandas-dev/pandas/pull/6627#issuecomment-77528052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6627",
    "id": 77528052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3NTI4MDUy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-06T09:11:56Z",
    "updated_at": "2015-03-06T09:11:56Z",
    "author_association": "MEMBER",
    "body": "Closing for now. In any case not applicable as is, but I should have a closer look about how `meta` is handled now (things changed somewhat).\n"
  }
]
