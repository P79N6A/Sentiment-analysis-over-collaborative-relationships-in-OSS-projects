[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368709403",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-368709403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 368709403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODcwOTQwMw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-02-27T01:05:54Z",
    "updated_at": "2018-03-02T16:24:55Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19913?src=pr&el=h1) Report\n> Merging [#19913](https://codecov.io/gh/pandas-dev/pandas/pull/19913?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/1e4c50a56f7e953ab84308f000dff6fc1ac71171?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `75%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/19913/graphs/tree.svg?width=650&height=150&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/19913?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #19913      +/-   ##\n==========================================\n+ Coverage   91.66%   91.67%   +0.01%     \n==========================================\n  Files         150      150              \n  Lines       48969    49049      +80     \n==========================================\n+ Hits        44886    44966      +80     \n  Misses       4083     4083\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.05% <75%> (+0.01%)` | :arrow_up: |\n| #single | `41.79% <50%> (-0.06%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/19913?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/arrays/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2NhdGVnb3JpY2FsLnB5) | `95.06% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/core/arrays/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2Jhc2UucHk=) | `74.35% <50%> (-1.32%)` | :arrow_down: |\n| [pandas/core/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29tbW9uLnB5) | `92.04% <0%> (-0.92%)` | :arrow_down: |\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `96.33% <0%> (-0.61%)` | :arrow_down: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.85% <0%> (-0.56%)` | :arrow_down: |\n| [pandas/core/indexes/datetimelike.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZWxpa2UucHk=) | `96.83% <0%> (-0.5%)` | :arrow_down: |\n| [pandas/io/formats/style.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvc3R5bGUucHk=) | `96.03% <0%> (-0.19%)` | :arrow_down: |\n| [pandas/core/groupby.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS5weQ==) | `92.14% <0%> (-0.18%)` | :arrow_down: |\n| [pandas/core/sparse/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc3BhcnNlL3Nlcmllcy5weQ==) | `95.2% <0%> (-0.05%)` | :arrow_down: |\n| [pandas/core/indexes/timedeltas.py](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy90aW1lZGVsdGFzLnB5) | `91.17% <0%> (-0.04%)` | :arrow_down: |\n| ... and [15 more](https://codecov.io/gh/pandas-dev/pandas/pull/19913/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19913?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/19913?src=pr&el=footer). Last update [1e4c50a...8406f11](https://codecov.io/gh/pandas-dev/pandas/pull/19913?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368711030",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-368711030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 368711030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODcxMTAzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T01:13:58Z",
    "updated_at": "2018-02-27T01:13:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is just API bloat. what is the point here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368728194",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-368728194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 368728194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODcyODE5NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T02:46:17Z",
    "updated_at": "2018-02-27T02:46:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "> what is the point here?\r\n\r\nNot imposing things on the subclasses `__init__`. I believe @jorisvandenbossche already had issues with the old design in geopandas. You could imagine a class whose `__init__` wants to use keyword only arguments."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368785002",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-368785002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 368785002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODc4NTAwMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T08:27:34Z",
    "updated_at": "2018-02-27T08:27:34Z",
    "author_association": "MEMBER",
    "body": "@jreback I think this is actually very much in line with how we are doing it currently internally (having constructors as class methods). The only difference here is that we make a constructor class method that is more specific in its behaviour, which I think is a plus both for internal usage as for the extension author to clearly communicate what we exactly expect from the constructor (in this case, that it takes a sequence of scalars). \r\nI think limiting the expected behaviour is a good thing. And we can call it `_constructor` to be 'consistent' with other places in the code base, but given its specific behaviour, I think embedding that in the name is better (we could also use `_constructor_from_scalars` if you like that more). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368816362",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-368816362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 368816362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODgxNjM2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T10:03:44Z",
    "updated_at": "2018-02-27T10:03:44Z",
    "author_association": "MEMBER",
    "body": "> Not imposing things on the subclasses __init__. I believe @jorisvandenbossche already had issues with the old design in geopandas. You could imagine a class whose __init__ wants to use keyword only arguments.\r\n\r\nTo add: it is not *really* a problem for geopandas to support this in its `__init__.py`. It was just that we initially did not choose to do this, and I needed to adapt the `__init__;py` in my branch that tests the extension array interface (and for that I just needed to figure out some memory management stuff that Matthew originally did). But now it is coded, it is also not complicated to support it. \r\nBut that said, I still think it is useful for the extension interface to be very explicit about what we expect from certain constructors, so having a separate one for constructing from scalars is IMO a good idea (giving more flexibility about the main `__init__` to the extension author). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368869477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-368869477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 368869477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODg2OTQ3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T13:16:04Z",
    "updated_at": "2018-02-27T13:16:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think `_from` already indicates pretty well that it's a constructor. `_constructor_from` feels redundant."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369000896",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369000896",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369000896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTAwMDg5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-27T19:40:47Z",
    "updated_at": "2018-02-27T19:40:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "> this is just API bloat. what is the point here?\r\n\r\n@jreback does the comments https://github.com/pandas-dev/pandas/pull/19913#issuecomment-368785002 and https://github.com/pandas-dev/pandas/pull/19913#issuecomment-368728194 make sense? This is blocking https://github.com/pandas-dev/pandas/pull/19869 and factorizing EAs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369071463",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369071463",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369071463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTA3MTQ2Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T00:01:15Z",
    "updated_at": "2018-02-28T00:01:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback I think this is actually very much in line with how we are doing it currently internally (having constructors as class methods). The only difference here is that we make a constructor class method that is more specific in its behaviour, which I think is a plus both for internal usage as for the extension author to clearly communicate what we exactly expect from the constructor (in this case, that it takes\r\n\r\nI am not opposing this motivation. I agree with it. But you going off with new names w/o a very clear purpose. We *already* have somewhat of a mess, e.g. ``_shallow_copy`` and ``_simple_new`` in the Index space, and ``_constructor`` in the Series/DataFrame space. So you are creating something new here. Let's stick with the current ones. Then if you want to change they should be changed for everything. Forging yet another path is just going creating technical debt.\r\n\r\nThis is my basic hesitiion with things like creating a new ``.fillna`` impl as well. Sure adding code is exciting as it can be very clean. But the existing code base is simply being let behind, creating an *even bigger* issue for later.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369100210",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369100210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369100210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTEwMDIxMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T02:31:10Z",
    "updated_at": "2018-02-28T02:31:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> But you going off with new names w/o a very clear purpose\r\n\r\nSorry I wasn't clearer then. I thought the convention was that `self._constructor` was a property that returns a class. The proposal here is for a classmethod. We have places in the code that do things expect `_constructor` to be a class like `self._constructor.__name__`.\r\n\r\nI don't really care whether we call it `_constructor` or `_from_scalars`. But they're different things so I'd prefer to have different names. Your call."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369517255",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369517255",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369517255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTUxNzI1NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T08:43:29Z",
    "updated_at": "2018-03-01T08:43:29Z",
    "author_association": "MEMBER",
    "body": "@jreback ping"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369558011",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369558011",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369558011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTU1ODAxMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T11:06:18Z",
    "updated_at": "2018-03-01T11:06:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I dont' see a purpose of adding this, nor are you showing utility."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369561735",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369561735",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369561735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTU2MTczNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T11:22:27Z",
    "updated_at": "2018-03-01T11:22:37Z",
    "author_association": "MEMBER",
    "body": "I think all our long comments are trying to explain the utility. And remember it was you who asked to add a constructor class method in the first place. The last question of Tom (the \"your call\") was mainly about the *name*. \r\nUnless you disagree about adding a constructor like this that is limited in functionality (a specific one to construct from scalars) at all. But then please be more specific about what you want to see."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369564721",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369564721",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369564721,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTU2NDcyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T11:35:43Z",
    "updated_at": "2018-03-01T11:35:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche simply need ``_constructor`` as a class property. You don't need a class constructor. We do no use them anywhere else and it is a major break."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369579392",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369579392",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369579392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTU3OTM5Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T12:40:31Z",
    "updated_at": "2018-03-01T12:40:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "> simply need `_constructor` as a class property\r\n\r\nAh, I see the misunderstanding. That's not an option since it relies on `self._constructor(data)` being valid. We don't know that the subclass's `__init__` takes a sequence of scalar types."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369643819",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369643819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369643819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTY0MzgxOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T16:15:56Z",
    "updated_at": "2018-03-01T16:15:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Trying to summarize the arguments here.\r\n\r\nJeff wants a property `_constructor` that constructs the new EA. This would have the same requirements used in pandas today\r\n\r\n1. `self._constructor` is a class\r\n2. The class can be constructed with a single positional argument.\r\n\r\nMy objection to that is that I don't want to put any restrictions a 3rd party EAs `__init__` method. For example, an IPArray might be constructable in a few ways\r\n\r\n1. sequence of `ipaddress` objects\r\n2. sequence of integers\r\n3. a bytestring\r\n\r\nI want to support all these, but not with pandas' \"magical\" constructors of just inferring things. So I use keyword only arguments.\r\n\r\n```python\r\nclass IPArray(ExtensionArray):\r\n    \"\"\"Holder for IP Addresses.\"\"\"\r\n    def __init__(self, *, addresses=None, ints=None, bytestring=None):\r\n        from .parser import _to_ip_array\r\n\r\n        if addresses is not None:\r\n            values = _to_ip_array(addresses)\r\n        elif ints is not None:\r\n            ...\r\n        else:\r\n            values = self._from_bytes(addresses)\r\n        self.data = values\r\n```\r\n\r\nWe can't use pandas usual `_constructor` route\r\n\r\n```python\r\n@property\r\ndef _constructor(self):\r\n    return IPArray\r\n```\r\n\r\nWhat's *possible* is to use a property that returns a function\r\n\r\n```python\r\n    @property\r\n    def _constructor(self):\r\n        def fn(values):\r\n            return type(self)(addresses=values)\r\n        return fn\r\n```\r\n\r\nNow, the question is, do we *want* this? This now puts restrictions on uses of `self._constructor` within pandas.\r\n\r\n1. We need to ensure we're just using `self._constructor` as a callable. We can't treat it as a class to access additional attributes off it.\r\n2. We're conflating two similar things:\r\n  a.) A method for creating a data structure from a very specific type (sequence of your scalar type)\r\n  b.) A method for creating a data structure from anything.\r\n\r\nAgain, I don't feel too strongly about this, but I do prefer `_from_scalars` since it's clearer that this is a very specific use case that will be limited to just `arrays/base.py`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369892730",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369892730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369892730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTg5MjczMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T11:06:26Z",
    "updated_at": "2018-03-02T11:07:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the problem with this is the name. I understand and am ok with a class method that allows an extension array author to do internal construction with a class method, eg.. ``_constructor_from_default(....)``, The ``_from_scalars`` is just confusing, because you are most often costructing from an ``ndarray`` or a ``list`` (e.g. after an internal pandas operation) of *scalars*.  \r\n\r\nmaybe even ``_constructor_from_sequence`` is more appropriate\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369893706",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369893706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369893706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTg5MzcwNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T11:11:23Z",
    "updated_at": "2018-03-02T11:11:23Z",
    "author_association": "MEMBER",
    "body": "I don't really mind the exact name, but would like to keep the word 'scalar' in it, as that is essential (it is not just accepting an array/list, but an array/list of scalars). \r\nThe longest and complete name would be `_constructor_from_sequence_of_scalars` ... so but now we need to find the best compromise between length and clarity :-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369895688",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369895688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369895688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTg5NTY4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T11:20:53Z",
    "updated_at": "2018-03-02T11:20:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "and I would like to remove scalars, yes its *from* a sequence of scalars, the relevant part is that its a list of *something*.\r\n\r\n``_constructor_from_sequence`` works for me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369971858",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-369971858",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 369971858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTk3MTg1OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T16:24:21Z",
    "updated_at": "2018-03-02T16:24:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "All green. merging later today."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/370055841",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19913#issuecomment-370055841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19913",
    "id": 370055841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MDA1NTg0MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-02T21:20:45Z",
    "updated_at": "2018-03-02T21:20:45Z",
    "author_association": "MEMBER",
    "body": "Thanks!"
  }
]
