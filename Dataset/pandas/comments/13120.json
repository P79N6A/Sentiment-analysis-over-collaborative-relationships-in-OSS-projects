[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217905248",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217905248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217905248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkwNTI0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T15:52:36Z",
    "updated_at": "2016-05-09T15:52:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose. You are much better off just doing `np.array(m)` before sending this in. If you want to push a PR which checks if its a memory buffer then ok.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217905548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217905548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217905548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkwNTU0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T15:53:40Z",
    "updated_at": "2016-05-09T15:53:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "note that `_simple_new` methods are NOT public, you should really really not sue internal/private things.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217905809",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217905809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217905809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkwNTgwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T15:54:29Z",
    "updated_at": "2016-05-09T15:54:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "We prob don't handle construction for Series/DataFrame with a memory buffer either.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217916629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217916629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217916629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkxNjYyOQ==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T16:33:23Z",
    "updated_at": "2016-05-09T16:33:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> You are much better off just doing np.array(m) before sending this in\n\nThis is what we're currently doing (and what we'll probably continue to do for a while since we support older versions of pandas).\n\n> note that _simple_new methods are NOT public, you should really really not sue internal/private things.\n\nYep, I assumed as much.  What would you think about making public versions of some of the Pandas object constructors that accept limited, specific arguments and don't do any coercion?  We frequently have the problem in Zipline that we have an object of a well-known type and we want to construct an Index/Series/DataFrame without incurring the extra overhead of Pandas having to infer the type of our input.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217917508",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217917508",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217917508,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkxNzUwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T16:36:40Z",
    "updated_at": "2016-05-09T16:36:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssanderson not sure what you mean. The inference is generally very light so you shouldn't incur costs with anything. If you have a specific example I can look.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217921900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217921900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217921900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkyMTkwMA==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T16:52:59Z",
    "updated_at": "2016-05-09T16:52:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If you want to push a PR which checks if its a memory buffer then ok.\n\nWould the preferred behavior here be to coerce to `ndarray`, or to treat this as an error and barf?  It seems like Pandas' general philosophy is to try its best to do reasonable coercions when possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217922047",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217922047",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217922047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkyMjA0Nw==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T16:53:32Z",
    "updated_at": "2016-05-09T16:53:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The inference is generally very light so you shouldn't incur costs with anything. If you have a specific example I can look.\n\nThe case that comes to mind offhand is something like `DataFrame.from_records` when reading values out of a tabular database.  In that case, we know that all our records will have the same columns and dtypes, but there isn't a good way to tell pandas that information.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217923752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217923752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217923752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkyMzc1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T16:59:29Z",
    "updated_at": "2016-05-09T16:59:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssanderson no you could certainly add it as a clause somewhere here: https://github.com/pydata/pandas/blob/master/pandas/indexes/base.py#L124\n\neasy enough to add a: \n\n```\ndef coerce_memory_view_to_ndarray(data):\n    if isinstance(data, memoryview):\n           data = np.array(data)\n   return data\n```\n\nthough better to put in the if/else's if possible (as it reduces the checks needed) e.g. right before the scalar check.\n\n```\n        elif isinstance(data, memoryview)\n               return cls(np.array(data), ......)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217925219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217925219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217925219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkyNTIxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T17:04:56Z",
    "updated_at": "2016-05-09T17:04:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "btw `.from_records` is trivial, give it a structured array\n\n```\nIn [9]: arr = np.zeros((2,), dtype=('i4,f4,a10'))\n\nIn [10]: arr[:] = [(1, 2., 'Hello'), (2, 3., \"World\")]\n\nIn [11]: arr\nOut[11]: \narray([(1, 2.0, 'Hello'), (2, 3.0, 'World')], \n      dtype=[('f0', '<i4'), ('f1', '<f4'), ('f2', 'S10')])\n\nIn [12]: DataFrame.from_records(arr)\nOut[12]: \n   f0   f1     f2\n0   1  2.0  Hello\n1   2  3.0  World\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217930719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217930719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217930719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkzMDcxOQ==",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T17:25:41Z",
    "updated_at": "2016-05-09T17:25:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> btw .from_records is trivial, give it a structured array\n\nTIL\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/217933248",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-217933248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 217933248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzkzMzI0OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T17:35:40Z",
    "updated_at": "2016-05-09T17:35:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ssanderson this is what all of the read-sql type things do (and pytables as well), these are row-structured arrays essentially.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/445392510",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13120#issuecomment-445392510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13120",
    "id": 445392510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTM5MjUxMA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-07T23:05:04Z",
    "updated_at": "2018-12-07T23:05:04Z",
    "author_association": "MEMBER",
    "body": "FWIW this works in master for DatetimeIndex and TimedeltaIndex (though not for PeriodIndex):\r\n\r\n```\r\nm = memoryview(np.arange(5))\r\n\r\ndti = pd.DatetimeIndex(m)\r\ntdi = pd.TimedeltaIndex(m)\r\n\r\npd.PeriodIndex(m, freq='Y')  # <-- pandas._libs.tslibs.parsing.DateParseError: Unable to parse datetime string: \r\npd.Int64Index(m)   # <-- TypeError: String dtype not supported, you may need to explicitly cast to a numeric type\r\npd.Float64Index(m) # <-- TypeError: String dtype not supported, you may need to explicitly cast to a numeric type\r\n\r\n>>> pd.Index(m)\r\nIndex([u'', u'', u'', u'', u''], dtype='object')\r\n```"
  }
]
