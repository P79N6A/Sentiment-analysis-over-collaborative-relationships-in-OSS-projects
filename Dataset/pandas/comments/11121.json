[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140625125",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140625125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140625125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDYyNTEyNQ==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-16T04:39:00Z",
    "updated_at": "2015-09-16T04:39:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "The build failed on travis. I noticed an unusual error in the build log.\nhttps://travis-ci.org/pydata/pandas/jobs/80567794\n\n```\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"pandas/__init__.py\", line 16, in <module>\n    \"extensions first.\".format(module))\nImportError: C extension: hashtable not built. If you want to import pandas from the source directory, you may need to run 'python setup.py build_ext --inplace' to build the C extensions first.\nnosetests --exe -A slow and not network and not disabled pandas --doctest-tests --with-xunit --xunit-file=/tmp/nosetests.xml\nE\n======================================================================\nERROR: Failure: ImportError (C extension: hashtable not built. If you want to import pandas from the source directory, you may need to run 'python setup.py build_ext --inplace' to build the C extensions first.)\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/travis/miniconda/envs/pandas/lib/python2.7/site-packages/nose/loader.py\", line 418, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/home/travis/miniconda/envs/pandas/lib/python2.7/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/home/travis/miniconda/envs/pandas/lib/python2.7/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/home/travis/build/pydata/pandas/pandas/__init__.py\", line 16, in <module>\n    \"extensions first.\".format(module))\nImportError: C extension: hashtable not built. If you want to import pandas from the source directory, you may need to run 'python setup.py build_ext --inplace' to build the C extensions first.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140625627",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140625627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140625627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDYyNTYyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-16T04:45:13Z",
    "updated_at": "2015-09-16T04:45:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@parthea I restarted the build. Maybe it was a one-off failure.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140733006",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140733006",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140733006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDczMzAwNg==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-16T12:54:34Z",
    "updated_at": "2015-09-16T12:54:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ready for review. All tests passed in my local environment,\n\n```\nnosetests test_gbq.py -v\ntest_should_be_able_to_get_a_bigquery_service (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_results_from_query (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_schema_from_query (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_valid_credentials (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_make_a_connector (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_bad_project_id (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_bad_table_name (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_column_order (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_column_order_plus_index (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_download_dataset_larger_than_200k_rows (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_index_column (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_malformed_query (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_arbitrary_timestamp (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_empty_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_false_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_floats (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_integers (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_timestamp (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_timestamp_unix_epoch (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_true_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_floats (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_integers (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_unicode_string_conversion_and_normalization (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_zero_rows (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_read_gbq_with_no_project_id_given_should_fail (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_booleans_as_python_booleans (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_floats_as_python_floats (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_integers_as_python_floats (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_strings_as_python_strings (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_timestamps_as_numpy_datetime (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_that_parse_data_works_properly (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_to_gbq_should_fail_if_invalid_table_name_passed (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_to_gbq_with_no_project_id_given_should_fail (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_create_bq_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_create_bq_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_dataset_does_not_exist (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_dataset_exists (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_delete_bq_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_delete_bq_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_generate_bq_schema (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_google_upload_errors_should_raise_exception (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_bq_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_bq_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_bq_table_zero_results (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_table_does_not_exist (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_append (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_fail (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_replace (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\npandas.io.tests.test_gbq.test_requirements ... ok\n\n----------------------------------------------------------------------\nRan 53 tests in 368.008s\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140929359",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140929359",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140929359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkyOTM1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:02:50Z",
    "updated_at": "2015-09-17T00:02:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@parthea travis is fixed. go ahead and rebase\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140929513",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140929513",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140929513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkyOTUxMw==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:04:00Z",
    "updated_at": "2015-09-17T00:04:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \nCould this make it into 0.17.0 ? It would helpful for my other PR #11110\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140929933",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140929933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140929933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkyOTkzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:08:01Z",
    "updated_at": "2015-09-17T00:08:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "what does create_dataset do? what is the difference between this and a table? \n\nlist_table is ok.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140930094",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140930094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140930094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMDA5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:09:22Z",
    "updated_at": "2015-09-17T00:09:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "why is this needed for #11110  ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140930312",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140930312",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140930312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMDMxMg==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:11:01Z",
    "updated_at": "2015-09-17T00:14:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "A table belongs to a dataset. In order to create a table, you must either have an existing dataset or create a new dataset.\n\nTables\nhttps://cloud.google.com/bigquery/docs/reference/v2/tables\n\nDatasets\nhttps://cloud.google.com/bigquery/docs/reference/v2/datasets\n\nFrom https://cloud.google.com/bigquery/what-is-bigquery#tables,\nDatasets allow you to organize and control access to your tables. Because tables are contained in datasets, you'll need to create at least one dataset before loading data into BigQuery.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140930554",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140930554",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140930554,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMDU1NA==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:12:58Z",
    "updated_at": "2015-09-17T00:15:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> why is this needed for #11110 ?\n\nThe `bq` command line module doesn't support python 3. The  `bq` command line module is currently used to create and delete datasets so unit tests will be broken in python 3 builds without the ability to create and delete datasets.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140930919",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140930919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140930919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMDkxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:16:18Z",
    "updated_at": "2015-09-17T00:16:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you simply do this via a web interface? we are adding all of these functions which should be done externally to pandas.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140931106",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140931106",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140931106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMTEwNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:18:10Z",
    "updated_at": "2015-09-17T00:18:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "separately I think we need to make the API's more explicit, e.g.\n\n```\ncreate_table\ndelete_table\ntable_exists\n```\n\nshould these be\n\n```\ntable_create\ntable_delete\ntable_exists\n```\n\n?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140931537",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140931537",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140931537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMTUzNw==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:22:00Z",
    "updated_at": "2015-09-17T00:22:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "> can you simply do this via a web interface?\n\nYes, it can be done through web interface. From the integration testing point of view, it would be easier to be able to create datasets programatically. Each time the test starts, there is a newly created dataset used for testing. The dataset is deleted programatically after the test. \n\nOne potential change could be to use the create and delete functions for unit testing purposes only without exposing the functionality globally.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140931701",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140931701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140931701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMTcwMQ==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:23:36Z",
    "updated_at": "2015-09-17T00:23:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\ntable_create\ntable_delete\ntable_exists\n```\n\nYes, I agree this is much better. I will commit a new version.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140932185",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140932185",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140932185,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMjE4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:28:21Z",
    "updated_at": "2015-09-17T00:28:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't we just advertise the `GbqConnector` as the main way to do things (and then you have methods you can call directly on it), e.g. `create()`, `delete()`, `exists()`. \n\nI would actually rename this to `Table`, then no problem with having an `Dataset` object as well.\n\ne.g.\n\n```\nt = Table(project_id=....)\nt.create()\nt.delete()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/140933571",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-140933571",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 140933571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MDkzMzU3MQ==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T00:35:22Z",
    "updated_at": "2015-09-17T00:35:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "sounds good! I'll commit a new version soon.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141237642",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-141237642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 141237642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTIzNzY0Mg==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-17T21:46:39Z",
    "updated_at": "2015-09-17T21:46:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ready for review. All tests passed.\n\n```\nnosetests test_gbq.py -v\ntest_should_be_able_to_get_a_bigquery_service (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_results_from_query (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_schema_from_query (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_valid_credentials (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_make_a_connector (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_bad_project_id (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_bad_table_name (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_column_order (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_column_order_plus_index (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_download_dataset_larger_than_200k_rows (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_index_column (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_malformed_query (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_arbitrary_timestamp (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_empty_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_false_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_floats (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_integers (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_timestamp (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_timestamp_unix_epoch (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_true_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_floats (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_integers (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_unicode_string_conversion_and_normalization (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_zero_rows (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_read_gbq_with_no_project_id_given_should_fail (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_booleans_as_python_booleans (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_floats_as_python_floats (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_integers_as_python_floats (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_strings_as_python_strings (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_timestamps_as_numpy_datetime (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_that_parse_data_works_properly (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_to_gbq_should_fail_if_invalid_table_name_passed (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_to_gbq_with_no_project_id_given_should_fail (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_create_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_create_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_dataset_does_not_exist (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_dataset_exists (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_delete_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_delete_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_generate_schema (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_google_upload_errors_should_raise_exception (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_table_zero_results (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_table_does_not_exist (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_append (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_fail (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_replace (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\npandas.io.tests.test_gbq.test_requirements ... ok\n\n----------------------------------------------------------------------\nRan 53 tests in 458.258s\n\nOK\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141306338",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-141306338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 141306338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTMwNjMzOA==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-18T01:56:34Z",
    "updated_at": "2015-09-18T01:56:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Travis is green\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141581152",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-141581152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 141581152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTU4MTE1Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-18T22:10:18Z",
    "updated_at": "2015-09-18T22:10:18Z",
    "author_association": "MEMBER",
    "body": "I am not familiar with gbq, but about the API: if you have a `gbq.Table` class, I would expect that this maps to a certain table in a gbq Dataset. But if that is the case, something like `table.exists('my_table')` is a bit strange. \nAnd given that a table gets created like `gbq.Table(projectid, 'my_dataset')`, this seems more like it maps to a Dataset, although you also have a `Dataset` class which does not map to a Dataset but only holds a project id.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141668462",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-141668462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 141668462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTY2ODQ2Mg==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-19T13:39:11Z",
    "updated_at": "2015-09-19T17:28:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \nI agree. I'm going to propose another naming convention. Assuming the following structure on Google BigQuery : \n1. A table belongs to a dataset. \n2. A dataset  belongs to a project id.\n\n**Current implementation for Dataset class**\n`dataset = gbq.Dataset(projectid)`\nThe `Dataset` class has the following instance methods:  `create`, `delete`, `list`, `exists`\n- Where `create(datasetid)` creates the specified dataset under the project `projectid`.\n- Where `delete(datasetid)` deletes the specified dataset under the project `projectid`.\n- Where `list()` lists all datasets under the project `projectid`\n- Where `exists(dataset_id)` checks to see if the dataset exists under project `projectid`\n\n**Proposed implementation for Project, Dataset, Table class**\n\n**Project class**\n\n`project = gbq.Project(projectid)`\nThe `Project` class has the following instance methods: `dataset_list`\n- Where `dataset_list()` lists all the datasets under project `projectid`\n\n**Dataset class**\n\n`dataset = gbq.Dataset(project, datasetid)`\nThe `Dataset` class has the following instance methods: `table_list`,`create`, `delete`, `exists`\n- Where `table_list()` lists all tables under the dataset `datasetid`\n- Where `create()` creates the specified dataset under the dataset `datasetid`.\n- Where `delete()` deletes the specified dataset under the dataset `datasetid`.\n- Where `exists()` checks to see if the dataset exists under dataset `datasetid`\n\n**Table class**\n\n`table = gbq.Table(dataset, tableid)`\nThe `Table` class has the following instance methods: `create`, `delete`, `exists`\n- Where `create()` creates the specified table under the table `tableid`.\n- Where `delete()` deletes the specified table under the table `tableid`.\n- Where `exists()` checks to see if the table exists under table `tableid`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141822972",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-141822972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 141822972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTgyMjk3Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-20T19:24:58Z",
    "updated_at": "2015-09-20T19:24:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "let's not add even more API here, keep it as minimal as possible.`Dataset/Table` are enough. and just have a `Dataset.tables()` method.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141951957",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-141951957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 141951957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTk1MTk1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-21T12:01:36Z",
    "updated_at": "2015-09-21T12:01:36Z",
    "author_association": "MEMBER",
    "body": "@parthea Is your assessment that this would be used a lot by users? (creating the DataSet \nprogrammatically) Or is it mainly because we need this ourselves for the tests? \nBecause otherwise, we could maybe also start with just having these as private methods for internal use as a first step.\n\nFurther, creating the `Dataset` and `Table` objects to only be able to create or delete them, seems a bit overkill to me thinking a bit more about it.\n\n```\ndataset = gbq.Dataset(projectid, datasetid)\ndataset.create()\n```\n\nvs\n\n```\ngbq.create_dataset(projectid, datasetid)\n```\n\nObject oriented APIs can be nice, but in some case just sticking to some functions can be simpler and more straightforward.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142124414",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-142124414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 142124414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjEyNDQxNA==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-21T22:11:00Z",
    "updated_at": "2015-09-21T22:11:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche\n@jreback\n\n> we could maybe also start with just having these as private methods for internal use as a first step.\n\nThis need for this enhancement was driven around integration testing. While I was working on this enhancement, I thought it would be good to expose the create and delete functions for tables and datasets in case others require it. I believe the value of this enhancement is with integration testing so I am ok with using private functions to create and delete tables / datasets and see if there is demand to expose the functionality.\n\nI think it would be more flexible for future development if I keep the `Table` and `Dataset` classes, but don't expose them. I could add the `dataset.tables()` instance method as requested. Listing datasets will also be useful for integration testing during the integration testing setup and teardown. (ie use `project.datasets()` to list datasets ). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142277836",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-142277836",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 142277836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjI3NzgzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-22T12:47:41Z",
    "updated_at": "2015-09-22T12:47:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@parthea ok, let's keep them private for now (maybe make them `_Table`, `_Dataset` to recognize this, and take them out of the `API.rst`. All for integration testing :)\n\nbut since we are so close to actually releasing, just want to finish this up.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142576880",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-142576880",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 142576880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjU3Njg4MA==",
    "user": {
      "login": "parthea",
      "id": 5184014,
      "node_id": "MDQ6VXNlcjUxODQwMTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5184014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parthea",
      "html_url": "https://github.com/parthea",
      "followers_url": "https://api.github.com/users/parthea/followers",
      "following_url": "https://api.github.com/users/parthea/following{/other_user}",
      "gists_url": "https://api.github.com/users/parthea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parthea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parthea/subscriptions",
      "organizations_url": "https://api.github.com/users/parthea/orgs",
      "repos_url": "https://api.github.com/users/parthea/repos",
      "events_url": "https://api.github.com/users/parthea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parthea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-23T11:50:14Z",
    "updated_at": "2015-09-23T11:52:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I am currently travelling. A colleague will commit the final changes for this PR (should be today)\n\n@aaront \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142603579",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-142603579",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 142603579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjYwMzU3OQ==",
    "user": {
      "login": "aaront",
      "id": 50092,
      "node_id": "MDQ6VXNlcjUwMDky",
      "avatar_url": "https://avatars1.githubusercontent.com/u/50092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaront",
      "html_url": "https://github.com/aaront",
      "followers_url": "https://api.github.com/users/aaront/followers",
      "following_url": "https://api.github.com/users/aaront/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaront/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaront/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaront/subscriptions",
      "organizations_url": "https://api.github.com/users/aaront/orgs",
      "repos_url": "https://api.github.com/users/aaront/repos",
      "events_url": "https://api.github.com/users/aaront/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaront/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-23T13:37:44Z",
    "updated_at": "2015-09-23T13:37:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback let me know if anything else is needed\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142774884",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-142774884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 142774884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjc3NDg4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T01:09:36Z",
    "updated_at": "2015-09-24T01:09:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@parthea ok, small API change and a doc check. ping when green. (also confirm that this passes locally for you ).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142814565",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-142814565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 142814565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjgxNDU2NQ==",
    "user": {
      "login": "aaront",
      "id": 50092,
      "node_id": "MDQ6VXNlcjUwMDky",
      "avatar_url": "https://avatars1.githubusercontent.com/u/50092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaront",
      "html_url": "https://github.com/aaront",
      "followers_url": "https://api.github.com/users/aaront/followers",
      "following_url": "https://api.github.com/users/aaront/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaront/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaront/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaront/subscriptions",
      "organizations_url": "https://api.github.com/users/aaront/orgs",
      "repos_url": "https://api.github.com/users/aaront/repos",
      "events_url": "https://api.github.com/users/aaront/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaront/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T05:23:17Z",
    "updated_at": "2015-09-24T05:24:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback made the requested changes except for the generator, I don't want to rock the boat too much at the moment :)\n\nThe indentation in api.rst looks OK on my end.\n\nMy only concern at this point is that some public API was removed: `create_table`, `delete_table`, and `table_exists` are no longer part of the module. If this is OK, then all is go.\n\nI've just made a commit for some fixups for some broken tests, as well.\n\nRunning all the gbq tests locally yields:\n\n```\n> nosetests test_gbq.py -v\ntest_should_be_able_to_get_a_bigquery_service (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_results_from_query (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_schema_from_query (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_get_valid_credentials (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_should_be_able_to_make_a_connector (pandas.io.tests.test_gbq.TestGBQConnectorIntegration) ... ok\ntest_bad_project_id (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_bad_table_name (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_column_order (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_column_order_plus_index (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_download_dataset_larger_than_200k_rows (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_index_column (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_malformed_query (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_arbitrary_timestamp (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_empty_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_false_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_floats (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_integers (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_null_timestamp (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_timestamp_unix_epoch (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_true_boolean (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_floats (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_integers (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_should_properly_handle_valid_strings (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_unicode_string_conversion_and_normalization (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_zero_rows (pandas.io.tests.test_gbq.TestReadGBQIntegration) ... ok\ntest_read_gbq_with_no_project_id_given_should_fail (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_booleans_as_python_booleans (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_floats_as_python_floats (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_integers_as_python_floats (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_strings_as_python_strings (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_should_return_bigquery_timestamps_as_numpy_datetime (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_that_parse_data_works_properly (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_to_gbq_should_fail_if_invalid_table_name_passed (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_to_gbq_with_no_project_id_given_should_fail (pandas.io.tests.test_gbq.TestReadGBQUnitTests) ... ok\ntest_create_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_create_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_dataset_does_not_exist (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_dataset_exists (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_delete_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_delete_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_generate_schema (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_google_upload_errors_should_raise_exception (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_dataset (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_table (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_list_table_zero_results (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_table_does_not_exist (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_append (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_fail (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\ntest_upload_data_if_table_exists_replace (pandas.io.tests.test_gbq.TestToGBQIntegration) ... ok\npandas.io.tests.test_gbq.test_requirements ... ok\n\n----------------------------------------------------------------------\nRan 53 tests in 429.681s\n\nOK\n```\n\nPing me if there's anything else needed.\n\ncc: @parthea \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142904108",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-142904108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 142904108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjkwNDEwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T11:37:17Z",
    "updated_at": "2015-09-24T11:37:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@aaront @parthea \n\n> My only concern at this point is that some public API was removed: create_table, delete_table, and table_exists are no longer part of the module. If this is OK, then all is go.\n\nThese only existed in master. They have not been released, so this is ok.\n\nJust make the small change in the naming of `generate_schema` and I think good to go.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/143008293",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-143008293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 143008293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzAwODI5Mw==",
    "user": {
      "login": "aaront",
      "id": 50092,
      "node_id": "MDQ6VXNlcjUwMDky",
      "avatar_url": "https://avatars1.githubusercontent.com/u/50092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaront",
      "html_url": "https://github.com/aaront",
      "followers_url": "https://api.github.com/users/aaront/followers",
      "following_url": "https://api.github.com/users/aaront/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaront/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaront/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaront/subscriptions",
      "organizations_url": "https://api.github.com/users/aaront/orgs",
      "repos_url": "https://api.github.com/users/aaront/repos",
      "events_url": "https://api.github.com/users/aaront/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaront/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T18:12:27Z",
    "updated_at": "2015-09-24T18:12:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback all 53 tests pass locally again.\n\nPing me if you'd like me to squash these commits. Will ping when travis is green.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/143052201",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11121#issuecomment-143052201",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11121",
    "id": 143052201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzA1MjIwMQ==",
    "user": {
      "login": "aaront",
      "id": 50092,
      "node_id": "MDQ6VXNlcjUwMDky",
      "avatar_url": "https://avatars1.githubusercontent.com/u/50092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaront",
      "html_url": "https://github.com/aaront",
      "followers_url": "https://api.github.com/users/aaront/followers",
      "following_url": "https://api.github.com/users/aaront/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaront/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaront/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaront/subscriptions",
      "organizations_url": "https://api.github.com/users/aaront/orgs",
      "repos_url": "https://api.github.com/users/aaront/repos",
      "events_url": "https://api.github.com/users/aaront/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaront/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T21:11:47Z",
    "updated_at": "2015-09-24T21:11:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Got your comment about deprecating & removing after I had made the rename of `generate_bq_schema`. Will remove this from the docs and properly deprecate.\n"
  }
]
