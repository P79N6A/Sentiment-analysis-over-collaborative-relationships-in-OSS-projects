[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456201886",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24869#issuecomment-456201886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24869",
    "id": 456201886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjIwMTg4Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T21:20:47Z",
    "updated_at": "2019-01-21T21:20:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "iirc u tried this before but was never merged\r\n\r\nI don’t think these are actually more efficient (maybe prove me wrong); not sure moving is really that useful here - what is the policy for keeping in the main class vs the subclass? really almost all should be in one or the other (which is the way we have it now)\r\n\r\ncan u provide some rationale?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456206605",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24869#issuecomment-456206605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24869",
    "id": 456206605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjIwNjYwNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T21:44:41Z",
    "updated_at": "2019-01-21T21:44:41Z",
    "author_association": "MEMBER",
    "body": "> I don’t think these are actually more efficient (maybe prove me wrong)\r\n\r\nI'm trusting the cython docs (https://cython.readthedocs.io/en/latest/src/tutorial/cdef_classes.html)\r\n\r\n```\r\nThey are somewhat restricted compared to Python classes, but are generally more memory efficient and faster than generic Python classes\r\n```\r\n\r\n> what is the policy for keeping in the main class vs the subclass? really almost all should be in one or the other (which is the way we have it now)\r\n\r\nThe policy _should_ be that anything that can be in the cdef class goes in the cdef class.  e.g. `Period` defines only `__new__` and everything else is in `_Period`.  After this PR, `Timestamp` behaves the same way.  `Timedelta` isn't there yet.\r\n\r\n> can u provide some rationale?\r\n\r\nBesides the slightly-more-performant bit, if we can get everything into the cdef class, then we can change some `import`s to `cimport`s elsewhere in _libs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456211089",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24869#issuecomment-456211089",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24869",
    "id": 456211089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjIxMTA4OQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-21T22:08:15Z",
    "updated_at": "2019-01-21T22:08:15Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=h1) Report\n> Merging [#24869](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/12bb6d0536b947f74b66ebe18b5f451bfdd7453f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24869/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24869      +/-   ##\n==========================================\n+ Coverage   92.38%   92.39%   +<.01%     \n==========================================\n  Files         166      166              \n  Lines       52412    52412              \n==========================================\n+ Hits        48423    48424       +1     \n+ Misses       3989     3988       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.81% <ø> (ø)` | :arrow_up: |\n| #single | `42.89% <ø> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/24869/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `88.13% <0%> (+0.09%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=footer). Last update [12bb6d0...fbe9b3f](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456211094",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24869#issuecomment-456211094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24869",
    "id": 456211094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjIxMTA5NA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-21T22:08:16Z",
    "updated_at": "2019-01-21T22:10:58Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=h1) Report\n> Merging [#24869](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/12bb6d0536b947f74b66ebe18b5f451bfdd7453f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24869/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24869      +/-   ##\n==========================================\n+ Coverage   92.38%   92.39%   +<.01%     \n==========================================\n  Files         166      166              \n  Lines       52412    52412              \n==========================================\n+ Hits        48423    48424       +1     \n+ Misses       3989     3988       -1\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.81% <ø> (ø)` | :arrow_up: |\n| #single | `42.89% <ø> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/24869/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `88.13% <0%> (+0.09%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=footer). Last update [12bb6d0...fbe9b3f](https://codecov.io/gh/pandas-dev/pandas/pull/24869?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456223937",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24869#issuecomment-456223937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24869",
    "id": 456223937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjIyMzkzNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-21T23:27:48Z",
    "updated_at": "2019-01-21T23:27:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "and does this provide any speedups?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456228388",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24869#issuecomment-456228388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24869",
    "id": 456228388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjIyODM4OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T00:02:05Z",
    "updated_at": "2019-01-22T00:02:05Z",
    "author_association": "MEMBER",
    "body": "> and does this provide any speedups?\r\n\r\n%timeit results are showing very small speedups in `Timestamp.__radd__` and very small slowdown in `td.floor`\r\n\r\n```\r\nIn [2]: td = pd.Timedelta(hours=25)\r\nIn [3]: %timeit td.floor('D')\r\n10000 loops, best of 3: 74.5 µs per loop     # <-- PR\r\n10000 loops, best of 3: 72.6 µs per loop     # <-- master\r\n\r\nIn [4]: ts = pd.Timestamp.now()\r\nIn [5]: %timeit td + ts\r\n100000 loops, best of 3: 2.27 µs per loop  # <-- PR\r\n100000 loops, best of 3: 2.35 µs per loop  # <-- master\r\n```\r\n\r\nfor both of these benchmarks, the results are consistent across multiple %timeit runs.\r\n\r\nI'd speculate that the slowdown for floor is because it has to do a `__mro__` lookup."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456425834",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24869#issuecomment-456425834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24869",
    "id": 456425834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjQyNTgzNA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-22T14:48:01Z",
    "updated_at": "2019-01-22T14:48:01Z",
    "author_association": "MEMBER",
    "body": "> but before moving I would like to understand what you are proposing for the endgame,\r\n\r\nThe endgame is to have everything in the cdef versions and only have Timestamp, Timedelta, Period, no _Timestamp/_Timedelta/_Period.\r\n\r\nIt looks like only `__radd__` has a perf improvement, so I'll revert everything except for that (and the typo fixes) for now.  If my `__mro__` guess is correct, most of the rest we don't get any upside until the endgame becomes a reality."
  }
]
