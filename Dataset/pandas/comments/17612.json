[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331227565",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17612#issuecomment-331227565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17612",
    "id": 331227565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTIyNzU2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-21T17:33:52Z",
    "updated_at": "2017-09-21T17:33:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "What would \"preserve the order\" mean here? Could you show an example?\n\nI don't know if we have a keyword like this anywhere else in the library,\nso this would be a bit unusual. However, given that the function knows the\nnames of the newly created columns, while the user might not, this may be\nworth adding.\n\nOn Thu, Sep 21, 2017 at 7:41 AM, Giftlin Rajaiah <notifications@github.com>\nwrote:\n\n> Using get_dummies is moving the columns to the end. What @jreback\n> <https://github.com/jreback> and @TomAugspurger\n> <https://github.com/tomaugspurger> have commented is right. But there are\n> situations in which we require to preserve the order. For example, in scipy\n> model creation algorithms, the functions give preference for the columns\n> based on the order of the columns. We are having to reorder the columns\n> explicitly.\n>\n> So, I guess we must atleast have an option to preserve the order. Let the\n> default be as the new columns to be at the end.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/17612>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIuXv87CLlh6HfxSbzyRCdqxEX0ygks5sklmUgaJpZM4PfQjl>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331232253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17612#issuecomment-331232253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17612",
    "id": 331232253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTIzMjI1Mw==",
    "user": {
      "login": "Giftlin",
      "id": 31629119,
      "node_id": "MDQ6VXNlcjMxNjI5MTE5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/31629119?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Giftlin",
      "html_url": "https://github.com/Giftlin",
      "followers_url": "https://api.github.com/users/Giftlin/followers",
      "following_url": "https://api.github.com/users/Giftlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Giftlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Giftlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Giftlin/subscriptions",
      "organizations_url": "https://api.github.com/users/Giftlin/orgs",
      "repos_url": "https://api.github.com/users/Giftlin/repos",
      "events_url": "https://api.github.com/users/Giftlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Giftlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-21T17:51:19Z",
    "updated_at": "2017-09-21T17:53:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "import pandas as pd\r\n\r\ndf = pd.DataFrame({'A': [\"apple\", \"apple\", \"orange\", \"orange\", \"lemon\", \"lemon\"],\r\n                   'B': [98, 87, 45, 25, 12, 5]})\r\ndf = pd.get_dummies(df)\r\nprint(df)\r\n\r\n\r\nOutput:\r\n![image](https://user-images.githubusercontent.com/31629119/30710610-cfd976f2-9f23-11e7-8cf0-23f95f25f35f.png)\r\n\r\n\r\nOutput (preserving order of columns):\r\n![image](https://user-images.githubusercontent.com/31629119/30710587-b85f472c-9f23-11e7-834b-a4cb19513385.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331264704",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17612#issuecomment-331264704",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17612",
    "id": 331264704,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTI2NDcwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-21T19:58:39Z",
    "updated_at": "2017-09-21T19:58:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "categoricals already allow you to provide an order (note that these are not stricly ``ordered=True``), rather you are providing the order, as opposed to a lex-sort order.\r\n\r\nAnd this works as expected.\r\n```\r\nIn [10]: df['A_ordered'] = df['A'].astype('category', categories=['apple', 'orange', 'lemon'])\r\n\r\nIn [11]: df\r\nOut[11]: \r\n        A   B A_ordered\r\n0   apple  98     apple\r\n1   apple  87     apple\r\n2  orange  45    orange\r\n3  orange  25    orange\r\n4   lemon  12     lemon\r\n5   lemon   5     lemon\r\n\r\nIn [12]: df.A_ordered\r\nOut[12]: \r\n0     apple\r\n1     apple\r\n2    orange\r\n3    orange\r\n4     lemon\r\n5     lemon\r\nName: A_ordered, dtype: category\r\nCategories (3, object): [apple, orange, lemon]\r\n\r\nIn [13]: pd.get_dummies(df.A)\r\nOut[13]: \r\n   apple  lemon  orange\r\n0      1      0       0\r\n1      1      0       0\r\n2      0      0       1\r\n3      0      0       1\r\n4      0      1       0\r\n5      0      1       0\r\n\r\nIn [14]: pd.get_dummies(df.A_ordered)\r\nOut[14]: \r\n   apple  orange  lemon\r\n0      1       0      0\r\n1      1       0      0\r\n2      0       1      0\r\n3      0       1      0\r\n4      0       0      1\r\n5      0       0      1\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331265480",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17612#issuecomment-331265480",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17612",
    "id": 331265480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTI2NTQ4MA==",
    "user": {
      "login": "Giftlin",
      "id": 31629119,
      "node_id": "MDQ6VXNlcjMxNjI5MTE5",
      "avatar_url": "https://avatars2.githubusercontent.com/u/31629119?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Giftlin",
      "html_url": "https://github.com/Giftlin",
      "followers_url": "https://api.github.com/users/Giftlin/followers",
      "following_url": "https://api.github.com/users/Giftlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/Giftlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Giftlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Giftlin/subscriptions",
      "organizations_url": "https://api.github.com/users/Giftlin/orgs",
      "repos_url": "https://api.github.com/users/Giftlin/repos",
      "events_url": "https://api.github.com/users/Giftlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Giftlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-21T20:01:52Z",
    "updated_at": "2017-09-21T20:01:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback no, I'm not talking about column values here. It is the column I am talking about."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331270771",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17612#issuecomment-331270771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17612",
    "id": 331270771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTI3MDc3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-21T20:23:19Z",
    "updated_at": "2017-09-21T20:23:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\r\nIn [6]: pd.concat([df.drop(['A'], axis=1), pd.get_dummies(df.A)], axis=1)\r\nOut[6]: \r\n    B  apple  lemon  orange\r\n0  98      1      0       0\r\n1  87      1      0       0\r\n2  45      0      0       1\r\n3  25      0      0       1\r\n4  12      0      1       0\r\n5   5      0      1       0\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331280681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17612#issuecomment-331280681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17612",
    "id": 331280681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTI4MDY4MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-21T21:00:54Z",
    "updated_at": "2017-09-21T21:00:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that example only works here since `A` was first.\r\n\r\nMy initial reaction was to just have the user to `pd.get_dummies(df)[desired_order]`. Getting that order is *somewhat* difficult...\r\n\r\n```python\r\ndef get_order(df):\r\n    order = []\r\n    for col in df.columns:\r\n        if pd.api.types.is_categorical(df[col]):\r\n            order.extend(['{}_{}'.format(col, val)\r\n                          for val in df[col].cat.categories])\r\n        else:\r\n            order.append(col)\r\n    return order\r\n```\r\n\r\nThat doesn't handle object types, but it wouldn't be hard to fix it to do that.\r\n\r\nWe could start with a cookbook recipe? And expand to a keyword argument if others want it? This is on the borderline of whether or not it's worth a keyword to me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/331373848",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17612#issuecomment-331373848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17612",
    "id": 331373848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMTM3Mzg0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-22T07:35:21Z",
    "updated_at": "2017-09-22T07:35:21Z",
    "author_association": "MEMBER",
    "body": "You can also do something like this to preserve the exact order:\r\n\r\n```\r\nIn [178]: pd.concat([pd.get_dummies(df[col], prefix=col) if df[col].dtype == object else df[col] for col in df], axis=1)\r\nOut[178]: \r\n   A_apple  A_lemon  A_orange   B\r\n0        1        0         0  98\r\n1        1        0         0  87\r\n2        0        0         1  45\r\n3        0        0         1  25\r\n4        0        1         0  12\r\n5        0        1         0   5\r\n```\r\n\r\nOnly the `if df[col].dtype == object` should be optimized to do exactly what you want (eg probably also categorical)."
  }
]
