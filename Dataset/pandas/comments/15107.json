[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271868470",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15107#issuecomment-271868470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15107",
    "id": 271868470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTg2ODQ3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T13:29:54Z",
    "updated_at": "2017-01-11T13:29:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for catching that. Nothing special about `'a'` by the way. Any label on the outer level will show the same result."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/271869329",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15107#issuecomment-271869329",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15107",
    "id": 271869329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MTg2OTMyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-11T13:33:51Z",
    "updated_at": "2017-01-11T13:33:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm, indexing with nans if fraught with complication. the indexer must be off here.\r\n\r\npull requests to fix are welcome."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303874739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15107#issuecomment-303874739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15107",
    "id": 303874739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzg3NDczOQ==",
    "user": {
      "login": "theairportexplorer",
      "id": 2644406,
      "node_id": "MDQ6VXNlcjI2NDQ0MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2644406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theairportexplorer",
      "html_url": "https://github.com/theairportexplorer",
      "followers_url": "https://api.github.com/users/theairportexplorer/followers",
      "following_url": "https://api.github.com/users/theairportexplorer/following{/other_user}",
      "gists_url": "https://api.github.com/users/theairportexplorer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theairportexplorer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theairportexplorer/subscriptions",
      "organizations_url": "https://api.github.com/users/theairportexplorer/orgs",
      "repos_url": "https://api.github.com/users/theairportexplorer/repos",
      "events_url": "https://api.github.com/users/theairportexplorer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theairportexplorer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T22:53:52Z",
    "updated_at": "2017-05-24T22:55:20Z",
    "author_association": "NONE",
    "body": "I'm checking out pandas through the pycon dev sprint, and I'm taking a stab at the issue.\r\n\r\nI'm able to replicate the bug, but instead of getting 'a' to replace the np.nan, I see np.nan (on a Windows box running Python3.6). \r\n\r\n(I think) I've traced the issue down to the Index._join_level() function in pandas/core/indexes/base.py module. Will report back when I've nailed down the offending line."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303883734",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15107#issuecomment-303883734",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15107",
    "id": 303883734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzg4MzczNA==",
    "user": {
      "login": "theairportexplorer",
      "id": 2644406,
      "node_id": "MDQ6VXNlcjI2NDQ0MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2644406?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theairportexplorer",
      "html_url": "https://github.com/theairportexplorer",
      "followers_url": "https://api.github.com/users/theairportexplorer/followers",
      "following_url": "https://api.github.com/users/theairportexplorer/following{/other_user}",
      "gists_url": "https://api.github.com/users/theairportexplorer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theairportexplorer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theairportexplorer/subscriptions",
      "organizations_url": "https://api.github.com/users/theairportexplorer/orgs",
      "repos_url": "https://api.github.com/users/theairportexplorer/repos",
      "events_url": "https://api.github.com/users/theairportexplorer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theairportexplorer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T23:47:29Z",
    "updated_at": "2017-05-24T23:50:09Z",
    "author_association": "NONE",
    "body": "I think I found the issue...\r\n\r\nIn pandas/core/indexes/base.py, Index._join_level() is the following line:\r\n`new_lev_labels = algos.take_nd(rev_indexer, left.labels[level], allow_fill=False)`\r\n\r\nRunning PDB these are the values going into algos.take_nd:\r\n\r\n`(Pdb) level`\r\n`0`\r\n`(Pdb) rev_indexer`\r\n`array([ 0, -1, -1, -1], dtype=int64)`\r\n`(Pdb) left`\r\n`MultiIndex(levels=[['a', 'b', 'c', 'd'], [1, 2, 3, 4, 5]],\r\n           labels=[[0, 1, 2, 3, -1], [0, 1, 2, 3, 4]],\r\n           names=['ind1', 'ind2'])`\r\n\r\nalgos.take_nd() pads 0's when allow_fill is False, pads with nan when allow_fill is True. The subsequent code takes any index of new_lev_label with 0's and returns the corresponding rows in the original DataFrame object (which is why the row labeled with np.NaN returned when it shouldn't).\r\n\r\nI think the options are either prevent np.NaN values in indices or in base.py set `allow_fill=True` and replace nan's with -1."
  }
]
