[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/390340458",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21097#issuecomment-390340458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21097",
    "id": 390340458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MDM0MDQ1OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-18T21:42:57Z",
    "updated_at": "2018-05-18T21:42:57Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger I think this might be up your alley."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/391125666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21097#issuecomment-391125666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21097",
    "id": 391125666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTEyNTY2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T20:15:33Z",
    "updated_at": "2018-05-22T20:15:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Comes from https://github.com/pandas-dev/pandas/pull/19684\r\n\r\nWe check `is_scalar(value)`, and for `County` that's false.\r\n\r\n`is_scalar` doesn't quite seem like the right check. We want to see if it's in the categories... Here's a simpler repro:\r\n\r\n```python\r\nIn [25]: c = pd.Categorical([(0, 1), (1, 2)])\r\n\r\nIn [26]: c.fillna((0, 1))\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-26-69f5393b61c6> in <module>()\r\n----> 1 c.fillna((0, 1))\r\n\r\n~/sandbox/pandas/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    175                 else:\r\n    176                     kwargs[new_arg_name] = new_arg_value\r\n--> 177             return func(*args, **kwargs)\r\n    178         return wrapper\r\n    179     return _deprecate_kwarg\r\n\r\n~/sandbox/pandas/pandas/core/arrays/categorical.py in fillna(self, value, method, limit)\r\n   1767                 raise TypeError('\"value\" parameter must be a scalar, dict '\r\n   1768                                 'or Series, but you passed a '\r\n-> 1769                                 '\"{0}\"'.format(type(value).__name__))\r\n   1770\r\n   1771         return self._constructor(values, categories=self.categories,\r\n\r\nTypeError: \"value\" parameter must be a scalar, dict or Series, but you passed a \"tuple\"\r\n```\r\n\r\nWe'll need to watch out for non-hashable `value`"
  }
]
