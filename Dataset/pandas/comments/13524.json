[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229072236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229072236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229072236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTA3MjIzNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T14:47:43Z",
    "updated_at": "2016-06-28T14:47:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "`cut` returns a categorcial. By design, you can't `append` new categories\n\n``` python\nIn [6]: s1 = pd.Series(['a', 'b']).astype('category')\n\nIn [7]: s1.append(pd.Series(['b', 'c']).astype('category'))\n...\nValueError: incompatible categories in categorical concat\n```\n\nI believe your code would work if you change the `pd.cut(...)` to `pd.cut(...).categories`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229078064",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229078064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229078064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTA3ODA2NA==",
    "user": {
      "login": "lvphj",
      "id": 15664307,
      "node_id": "MDQ6VXNlcjE1NjY0MzA3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15664307?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lvphj",
      "html_url": "https://github.com/lvphj",
      "followers_url": "https://api.github.com/users/lvphj/followers",
      "following_url": "https://api.github.com/users/lvphj/following{/other_user}",
      "gists_url": "https://api.github.com/users/lvphj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lvphj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lvphj/subscriptions",
      "organizations_url": "https://api.github.com/users/lvphj/orgs",
      "repos_url": "https://api.github.com/users/lvphj/repos",
      "events_url": "https://api.github.com/users/lvphj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lvphj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T15:05:12Z",
    "updated_at": "2016-06-28T15:05:12Z",
    "author_association": "NONE",
    "body": "If you change your example code slightly so there are no NEW categories being added:\n\n``` python\nIn [6]: s1 = pd.Series(['a', 'b']).astype('category')\nIn [7]: s1.append(pd.Series(['b', 'a']).astype('category'))\n\n```\n\nthen it runs OK. In the original problem, the pd.cut() function generates the same categories in each dataframe, namely 1 to 5, so no new categories are being added.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229080961",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229080961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229080961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTA4MDk2MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T15:14:33Z",
    "updated_at": "2016-06-28T15:14:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Gotcha, here's a simpler example.\n\n``` python\nIn [44]: df = pd.DataFrame(columns=['a'])\n\nIn [45]: a = pd.DataFrame({\"a\": pd.Categorical([1, 2, 3], ordered=True)})\n\nIn [46]: a.a\nOut[46]:\n0    1\n1    2\n2    3\nName: a, dtype: category\nCategories (3, int64): [1 < 2 < 3]\n\nIn [47]: df.append(a).a\nOut[47]:\n0    1\n1    2\n2    3\nName: a, dtype: category\nCategories (3, int64): [1, 2, 3]\n```\n\nSo the orderedness of `a` is lost in the `append`. @lvphj any interest in digging through the traceback to see where it's lost?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229093100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229093100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229093100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTA5MzEwMA==",
    "user": {
      "login": "lvphj",
      "id": 15664307,
      "node_id": "MDQ6VXNlcjE1NjY0MzA3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/15664307?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lvphj",
      "html_url": "https://github.com/lvphj",
      "followers_url": "https://api.github.com/users/lvphj/followers",
      "following_url": "https://api.github.com/users/lvphj/following{/other_user}",
      "gists_url": "https://api.github.com/users/lvphj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lvphj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lvphj/subscriptions",
      "organizations_url": "https://api.github.com/users/lvphj/orgs",
      "repos_url": "https://api.github.com/users/lvphj/repos",
      "events_url": "https://api.github.com/users/lvphj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lvphj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T15:51:45Z",
    "updated_at": "2016-06-28T15:51:45Z",
    "author_association": "NONE",
    "body": "Certainly interested – but may not have the skill set.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229094552",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229094552",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229094552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTA5NDU1Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T15:56:14Z",
    "updated_at": "2016-06-28T15:56:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "👍 just post here if you have any questions. Either way, thanks for the report.\n\nJust a hunch, but I would start looking in https://github.com/pydata/pandas/blob/1a9abc44bbfd65675fd99701fe33aad8805ab147/pandas/types/concat.py#L147\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229095400",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229095400",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229095400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTA5NTQwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T15:58:51Z",
    "updated_at": "2016-06-28T15:58:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is by definition. you need union_categorical \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229097387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229097387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229097387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTA5NzM4Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-28T16:05:39Z",
    "updated_at": "2016-06-28T16:05:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I think my last example should work, no? E.g. `df.append(a)` should have an ordered categorical if `a` was ordered?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229345222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229345222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229345222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTM0NTIyMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T12:47:15Z",
    "updated_at": "2016-06-29T12:47:15Z",
    "author_association": "MEMBER",
    "body": "Yes, I think that is correct.\n\nIt only seems to happen when you start with an empty frame, or append an empty frame:\n\n```\nIn [29]: a.append(df).a  # <-- append empty frame\nOut[29]:\n0    1\n1    2\n2    3\nName: a, dtype: category\nCategories (3, int64): [1, 2, 3]\n\nIn [30]: a.append(a).a\nOut[30]:\n0    1\n1    2\n2    3\n0    1\n1    2\n2    3\nName: a, dtype: category\nCategories (3, int64): [1 < 2 < 3]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229346679",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229346679",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229346679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTM0NjY3OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T12:53:39Z",
    "updated_at": "2016-06-29T12:53:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, is the empty set of categories ordered or not? 😄 `pd.Categorical([]).ordered` is False (by default).\nIs this worth special casing so that `empty_categorical.append(ordered_categorical)` becomes ordered? I think so, but maybe not.\n\ncc @janschulz, thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229347538",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229347538",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229347538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTM0NzUzOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T12:57:22Z",
    "updated_at": "2016-06-29T12:57:22Z",
    "author_association": "MEMBER",
    "body": "Well, if we say that an empty series is ordered=False, then it should actually raise an error instead of changing the order of the result :-) \nBut actually, in this case, you don't have an empty categorical, but just an empty frame without dtype info, so in this case it should ignore the fact that that part is ordered or not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/229348132",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-229348132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 229348132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTM0ODEzMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-29T12:59:43Z",
    "updated_at": "2016-06-29T12:59:43Z",
    "author_association": "MEMBER",
    "body": "The problem is here: https://github.com/pydata/pandas/blob/1a9abc44bbfd65675fd99701fe33aad8805ab147/pandas/types/concat.py#L201 When concat is not dealing with only categoricals, but with a mixture of categoricals and object arrays, it takes the categories from the first categorical to concat, but not the other properties like ordered or not. Should be an easy fix to also pass ordered there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230114583",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-230114583",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 230114583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDExNDU4Mw==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-02T18:04:55Z",
    "updated_at": "2016-07-02T18:04:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [44]: df = pd.DataFrame(columns=['a'])\nIn [45]: a = pd.DataFrame({\"a\": pd.Categorical([1, 2, 3], ordered=True)})\nIn [47]: df.append(a).a\n```\n\nIMO there can be two interpretations:\n- If the df in the above append is seen as already having `category` column (and this is `Category([])` then this should IMO error because `Category([])` is ordered false (default) and has different Categories (= empty) and therefore this two shouldn't be appendable (as with two different categoricals in the column).\n- If the dataframe has no type information at all and this is seen as basically a `set the column to the new type` and it should retain the information in the appended categorical.\n\n``` py\npandas.DataFrame({\"a\": pandas.Categorical([1,2,3])}).append(pandas.DataFrame({\"a\": pandas.Categorical([1,2])})) # -> Error as it should be...\npandas.DataFrame({\"a\": pandas.Categorical([])}).append(pandas.DataFrame({\"a\": pandas.Categorical([1,2])})) # -> Also errors...\n```\n\nThe question is if an empty column is the same as a categorical column without any value\n\nIMO that's the difference between this two dataframes:\n\n```\n# 1. defined column type, but no value\npandas.DataFrame({\"a\": [1]})[[False]].dtypes # -> dtype of a: int64\nprint(pandas.DataFrame(columns=[\"a\"])).dtypes # -> dtype of a: object\nas_float = pandas.DataFrame({\"a\": [1.]})[[False]] # -> float64\nas_float.append(pandas.DataFrame({\"a\": [1]})).dtypes # -> kept as float64 as that takes both int and float\n```\n\nand\n\n```\n# 2. no defined value\nempty_object = pandas.DataFrame(columns=[\"a\"])\nprint(empty_object.dtypes) # -> object\nempty_object.append(pandas.DataFrame({\"a\": [1]})).dtypes # -> Float64 ??? why not int64 or object?\n```\n\nthe first is just the usual  \"cast to something which can take both\" which is the rule for everything but categorical.  The second seems to be the upcast rules for int + object? So if the second follows the \"normal rules\", then IMO appending a categorical should also follow the usual categorical rules, aka erroring.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233792648",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13524#issuecomment-233792648",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13524",
    "id": 233792648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzc5MjY0OA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-19T23:03:46Z",
    "updated_at": "2016-07-19T23:05:47Z",
    "author_association": "MEMBER",
    "body": "I met the same problem in #13626 and wrote short summary of `Series` `Index`differences.\n\nHow about following spec:\n- concat 2 categories -> use the rule of `union_categorical`\n- concat category and other dtype (which values are all in the category, including empty) -> category\n  - this rule is applied regardless of order (if there is at least one category in concatenating values)\n  - the property like `ordered` should be preserved.\n- concat category and other dtype (which values are not in the category) -> not category (dtype is infered)  \n"
  }
]
