[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24185834",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24185834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24185834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTg1ODM0",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T19:03:57Z",
    "updated_at": "2013-09-10T19:03:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Previous discussion of:\n- Series + MultiIndex:\n  - #4190 \n  - #4187 \n- DataFrames + MultiIndex:\n  - #3323\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24309578",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24309578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24309578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MzA5NTc4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-12T10:52:20Z",
    "updated_at": "2013-09-12T10:52:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "You have some failing tests, because this isn't valid in python 3 (IIRC keys() is a set rather than a list):\n\n```\ndata.keys()[0], tuple):\nTypeError: 'dict_keys' object does not support indexing\n```\n\nYou need to add some tests to demonstrate this behaviour for both Series and DataFrame.\n\nI guess for consistency, this should also be the case if you are passing a list of tuples to index argument...? Are there any other cases where this would also make sense?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24437780",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24437780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24437780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDM3Nzgw",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T06:17:12Z",
    "updated_at": "2013-09-14T06:17:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @hayd,\n\nThanks for your response.  I was waiting for a response before continuing with this pr, hence the general incompleteness of the pr. \n\nI think your idea to put this in the Index constructor is great, because then we don't need duplicate code in the Series or DataFrames.  However, I've been trying to make this change, and it's actually quite complicated.  First, I'm getting multiple seg faults (one of which I fixed and this fix might resolve other bugs in pandas).  Second, because the Index constructor converts a list of tuples into a MultiIndex, it breaks a few tests.\n\nIt's fairly complicated to resolve, especially since I don't know an efficient way for figuring out causes for seg faults.  Hopefully, I'll update this pr later this weekend with some progress.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24447429",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24447429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24447429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQ3NDI5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T14:18:06Z",
    "updated_at": "2013-09-14T14:18:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adgaudio if you're experiencing segfaults, you might want to check that you aren't doing the following (with Cython code):\n1. passing incorrectly typed objects to the code (Cython functions need to have _exactly_ the correct type)\n2. passing objects of the wrong length (i.e., with code with the boundscheck false decorator)\n\nFor example, if you pass a tuple to a function that expects type `list` or a defaultdict to a function expecting dict, it could fail (though usually it'll explicitly tell you).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24451621",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24451621",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24451621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDUxNjIx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T17:33:03Z",
    "updated_at": "2013-09-14T17:33:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner I've seen some segfaulting with the MultiIndexes before (example was Series of a mi #4187, now NotImplemented), I didn't look into the why it was happening...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24451762",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24451762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24451762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDUxNzYy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T17:41:56Z",
    "updated_at": "2013-09-14T17:41:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd if I had to hazard a guess, it's probably because `MultiIndex` is basically a fake `ndarray`, as opposed to `Index` which really is an ndarray. So you can pass a `MultiIndex` to Cython and it will try to do things with it, but all of them will fail, since the internal datastructure does't really have anything to do with `ndarray`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24459606",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24459606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24459606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU5NjA2",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T21:30:28Z",
    "updated_at": "2013-09-14T21:36:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for that tips @jtratner and @hayd!  I just figured out some interesting details about GH #4187 that could let us propose a workaround fix to that one...  When the Series constructor is called, it calls _sanitize_array, which eventually calls infer_dtype and causes the seg fault.  ...So, if you make the cpython call to \"infer_dtype(...)\" (see inference.pyx) with a MultiIndex, you can cause the seg fault.\n\n---\n\nIf we're interested in avoiding workarounds, I think the core question we need to ask is just what @jtratner basically asked: Is it possible to make a MultiIndex compatible with Cython?\n\nIf we can't make the MultiIndex (or pa.Array) cython compatible, it seems pretty clear that we will have a million little work arounds for these damn MultiIndexes.  The work-arounds I'd propose are to add an \"if isinstance(X, MultiIndex): data = data.values\" to _sanitize_array and a variation of that to _homogenize() (in frame.py) \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24459720",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24459720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24459720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU5NzIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T21:37:09Z",
    "updated_at": "2013-09-14T21:37:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Its faulting somewhere else....this is safe to call (as it accepts an object type)\n\n```\nIn [1]: pd.lib.infer_dtype(np.array([1,2,3]))\nOut[1]: 'integer'\n\nIn [2]: pd.lib.infer_dtype(np.array([1,2,3],dtype=object))\nOut[2]: 'integer'\n\nIn [3]: pd.lib.infer_dtype(np.array([1,2,3.0],dtype=object))\nOut[3]: 'mixed-integer-float'\n\nIn [4]: pd.lib.infer_dtype(np.array(['a','b','c'],dtype=object))\nOut[4]: 'string'\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24459726",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24459726",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24459726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU5NzI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T21:37:29Z",
    "updated_at": "2013-09-14T21:37:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adgaudio show the traceback where it faults (the whole one)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24459797",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24459797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24459797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU5Nzk3",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T21:41:25Z",
    "updated_at": "2013-09-14T21:46:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, I realized that I mis-spoke and updated my comment a few mins ago.  This is the error I get.  No traceback:\n\n```\nIn [13]: a = pandas.MultiIndex.from_tuples(zip(range(10), range(10)))\n\nIn [14]: pandas.lib.infer_dtype(a)\nzsh: segmentation fault (core dumped)  ipython\n\n-- OR --\n\nIn [2]: pandas.lib.fast_multiget({1: 2}, a)\nzsh: segmentation fault (core dumped)  ipython\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24459822",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24459822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24459822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU5ODIy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T21:42:49Z",
    "updated_at": "2013-09-14T21:42:49Z",
    "author_association": "MEMBER",
    "body": "I'm getting this segfault as well. I don't even get an error message :(\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24459944",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24459944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24459944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU5OTQ0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T21:51:23Z",
    "updated_at": "2013-09-14T21:51:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do this.....the problem is an index/mi is a 'special' that overrides some ndarray methods....\nI don't think this will break anything else.\n\nThis is called in _possibly_convert_datetime, so that will do nothing (which is correct)\n\n```\ndiff --git a/pandas/src/inference.pyx b/pandas/src/inference.pyx\nindex e0bbc1a..a37de47 100644\n--- a/pandas/src/inference.pyx\n+++ b/pandas/src/inference.pyx\n@@ -41,6 +41,9 @@ def infer_dtype(object _values):\n             _values = list(_values)\n         values = list_to_object_array(_values)\n\n+    if hasattr(values,'values'):\n+        values = values.values\n+\n     val_kind = values.dtype.type\n     if val_kind in _TYPE_MAP:\n         return _TYPE_MAP[val_kind]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24459990",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24459990",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24459990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU5OTkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T21:53:40Z",
    "updated_at": "2013-09-14T21:53:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "also...pls check perf, e.g. test_perf.sh for any change you make....it is important that Series construction doesn't change the common cases too much\n\nas an aside...I don't think doing an `isinstance(value, Index)` in `_sanitize_array` is a big deal (after all they ARE (currrently) `ndarrays`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24463443",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24463443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24463443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYzNDQz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-15T03:03:21Z",
    "updated_at": "2013-09-15T03:03:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adgaudio @jreback yeah, it's tricky. MultiIndex is only nominally an ndarray, because all of its features are actually reimplemented in Python so if Cython does any optimizations for ndarray, it'll mess up around this.\n\nBtw, for cython, better to do this:\n\n``` python\nvalues = getattr(values, 'values', values)\n```\n\nthan the hasattr check, because it can optimize it better.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24463797",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24463797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24463797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYzNzk3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-15T03:40:26Z",
    "updated_at": "2013-09-15T03:40:26Z",
    "author_association": "MEMBER",
    "body": "good 2 know about `hasattr` vs. `getattr`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24465182",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24465182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24465182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY1MTgy",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-15T06:17:13Z",
    "updated_at": "2013-09-15T06:17:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm - I think the topic of this pr has strayed a little from its original goal (which is primarily my fault!).  The original goal was to make pandas.Index(list_of_tuples) return a MultiIndex.  Having spent several hours in the past couple days looking at pandas internals, it seems pretty clear to me now that the Index should not return a MultiIndex.  For instance, methods like MultiIndex._tuple_index rely on the fact that the Index won't return a MI...  And as a further argument, if an Index constructor was allowed to return a MultiIndex, then shouldn't a DataFrame be able to return a Panel?  That doesn't seem like functionality pandas would support.\n\nOn the other hand, we discussed some useful things that are probably worth implementing:\n- There may be some benefit to adding additional safeguards against seg faults.\n  - in fast_multiget(...) and infer_dtype(...)\n- Series(some_multi_index) should work\n  - (I think) more to the point, np.array(some_multi_index) should not return an empty list\n  - this also would depend on @jreback's seg fault fix 3 comments up. \n\nIs everyone okay if I close this PR and maybe make a new one to address the seg faults?  In sum, I changed my mind and don't think an Index should return a MultiIndex.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24465208",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24465208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24465208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDY1MjA4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-15T06:20:26Z",
    "updated_at": "2013-09-15T06:20:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adgaudio if you want that makes sense. That said, I don't think it's unreasonable to have a dict input to constructor return something with a MultiIndex.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24477652",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24477652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24477652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDc3NjUy",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-15T19:03:17Z",
    "updated_at": "2013-09-15T19:03:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok - I can certainly do that!  In that case, I may just try to merge seg fault stuff into here.  Will be interesting to see whether there's a significant perf hit with the changes this brings.\n\n... will be in prog here for a few days\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24977510",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24977510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24977510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc3NTEw",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T06:24:57Z",
    "updated_at": "2013-09-24T06:24:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok...this is ready for review. Sorry for the delay\n\nIn summary, MultiIndexes are automatically created for index and columns when passing a dict to Series and DataFrames.\n\nI also ran a perf test and will be posting those results in a follow-up comment.  I described() the last column of numbers, which represent the ratio of master to \"my changes rebased against master\".  If I understand this correctly, this feature makes pandas slower by 1.005 times on average.\n\ncount  171.000000\nmean     1.004673\nstd      0.076243\nmin      0.779600\n25%      0.977800\n50%      0.993800\n75%      1.026200\nmax      1.498600\n\n![ratios](https://f.cloud.github.com/assets/860369/1197670/e373649a-24e1-11e3-89b1-f3e46c17d81e.png)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24977511",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24977511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24977511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTc3NTEx",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T06:25:04Z",
    "updated_at": "2013-09-24T06:25:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nInvoked with :\n--ncalls: 1\n--repeats: 3\n\n\n-------------------------------------------------------------------------------\nTest name                                    | head[ms] | base[ms] |  ratio   |\n-------------------------------------------------------------------------------\nframe_reindex_both_axes                      |  15.2452 |  32.3210 |   0.4717 |\nseries_value_counts_strings                  |   4.0641 |   5.2130 |   0.7796 |\nframe_add                                    |   3.9530 |   4.9031 |   0.8062 |\ntimeseries_asof_single                       |   0.0291 |   0.0360 |   0.8079 |\nindexing_dataframe_boolean                   |  49.4530 |  57.8468 |   0.8549 |\nindexing_dataframe_boolean_rows              |   0.2789 |   0.3099 |   0.9000 |\njoin_dataframe_index_single_key_bigger       |   5.2481 |   5.7790 |   0.9081 |\nwrite_csv_standard                           |  30.0810 |  33.0341 |   0.9106 |\nstats_rolling_mean                           |   1.0490 |   1.1470 |   0.9146 |\ntimeseries_add_irregular                     |  15.7468 |  17.2162 |   0.9147 |\nreindex_frame_level_reindex                  |   0.5591 |   0.6101 |   0.9164 |\nreshape_pivot_time_series                    | 129.9939 | 141.0310 |   0.9217 |\nmask_bools                                   |  24.4670 |  26.4800 |   0.9240 |\nframe_to_string_floats                       |  30.3071 |  32.7630 |   0.9250 |\nframe_repr_wide                              |   0.7708 |   0.8330 |   0.9253 |\nseries_string_vector_slice                   | 146.1499 | 156.5220 |   0.9337 |\nframe_getitem_single_column                  |  17.7062 |  18.9250 |   0.9356 |\nstats_rank_average                           |  23.2301 |  24.7140 |   0.9400 |\nappend_frame_single_mixed                    |   0.5651 |   0.5999 |   0.9420 |\nsort_level_one                               |   3.7041 |   3.9291 |   0.9427 |\nmask_floats                                  |  12.7940 |  13.5541 |   0.9439 |\nmelt_dataframe                               |   1.6730 |   1.7691 |   0.9457 |\ngroupby_multi_series_op                      |  12.2011 |  12.8889 |   0.9466 |\nstat_ops_frame_mean_int_axis_1               |   5.3780 |   5.6581 |   0.9505 |\nframe_fancy_lookup                           |   2.7161 |   2.8570 |   0.9507 |\nreshape_unstack_simple                       |   2.7251 |   2.8622 |   0.9521 |\nframe_insert_500_columns_end                 |  79.2389 |  83.1900 |   0.9525 |\nframe_drop_duplicates_na                     |  13.4761 |  14.1251 |   0.9541 |\nframe_drop_duplicates                        |  13.3901 |  14.0190 |   0.9551 |\nindex_datetime_intersection                  |   8.4031 |   8.7969 |   0.9552 |\nstat_ops_frame_sum_int_axis_0                |   4.8449 |   5.0640 |   0.9567 |\nframe_to_csv2                                |  81.8870 |  85.3350 |   0.9596 |\nstats_rank2d_axis1_average                   |  10.9470 |  11.3881 |   0.9613 |\nstat_ops_frame_sum_float_axis_1              |   4.5249 |   4.6859 |   0.9657 |\nframe_fillna_inplace                         |  10.3819 |  10.7038 |   0.9699 |\nindexing_panel_subset                        |   0.3691 |   0.3800 |   0.9711 |\nframe_to_csv                                 |  91.5911 |  94.3000 |   0.9713 |\nframe_ctor_list_of_dict                      |  64.0192 |  65.8691 |   0.9719 |\nmerge_2intkey_sort                           |  32.4190 |  33.3450 |   0.9722 |\nframe_multi_and                              |  69.8371 |  71.7850 |   0.9729 |\nstat_ops_frame_sum_int_axis_1                |   4.9090 |   5.0452 |   0.9730 |\nframe_reindex_both_axes_ix                   |  32.0160 |  32.8770 |   0.9738 |\nseries_drop_duplicates_int                   |   0.5660 |   0.5791 |   0.9774 |\ntimeseries_asof                              |   6.8550 |   7.0112 |   0.9777 |\njoin_dataframe_index_multi                   |  16.8700 |  17.2520 |   0.9779 |\njoin_dataframe_index_single_key_bigger_sort  |  13.3920 |  13.6938 |   0.9780 |\nframe_loc_dups                               |   0.6258 |   0.6399 |   0.9780 |\nframe_constructor_ndarray                    |   0.0429 |   0.0439 |   0.9783 |\nreindex_fillna_backfill                      |   0.5271 |   0.5388 |   0.9783 |\nseries_align_left_monotonic                  |  10.3209 |  10.5450 |   0.9787 |\ngroupby_multi_cython                         |  13.3641 |  13.6521 |   0.9789 |\nindex_int64_union                            |  64.3780 |  65.7530 |   0.9791 |\nstat_ops_frame_sum_float_axis_0              |   4.4549 |   4.5469 |   0.9798 |\ndti_reset_index_tz                           |  10.0758 |  10.2811 |   0.9800 |\nread_csv_vb                                  |  16.2349 |  16.5591 |   0.9804 |\nstat_ops_series_std                          |   0.8879 |   0.9048 |   0.9813 |\ntimeseries_asof_nan                          |   6.3412 |   6.4590 |   0.9818 |\nstat_ops_frame_mean_int_axis_0               |   4.8530 |   4.9391 |   0.9826 |\nframe_to_csv_mixed                           | 191.1800 | 194.5429 |   0.9827 |\nstat_ops_frame_mean_float_axis_0             |   4.4539 |   4.5290 |   0.9834 |\ngroupby_multi_different_numpy_functions      |  10.8140 |  10.9761 |   0.9852 |\nframe_reindex_upcast                         |  10.7739 |  10.9279 |   0.9859 |\ngroupby_last                                 |   3.2680 |   3.3140 |   0.9861 |\nstat_ops_level_series_sum                    |   2.3448 |   2.3770 |   0.9865 |\nseries_value_counts_int64                    |   1.8809 |   1.9040 |   0.9879 |\ngroupby_multi_python                         | 104.6109 | 105.8180 |   0.9886 |\nmerge_2intkey_nosort                         |  14.5009 |  14.6639 |   0.9889 |\nframe_reindex_axis1                          | 454.3140 | 459.0740 |   0.9896 |\nmatch_strings                                |   0.2739 |   0.2768 |   0.9897 |\ngroupby_series_simple_cython                 |   4.0159 |   4.0562 |   0.9901 |\nseries_align_int64_index                     |  23.7849 |  24.0159 |   0.9904 |\nread_csv_thou_vb                             |  14.1041 |  14.2410 |   0.9904 |\nframe_fancy_lookup_all                       |  12.5110 |  12.6290 |   0.9907 |\nframe_mult                                   |   3.9458 |   3.9830 |   0.9907 |\nlib_fast_zip                                 |   7.6091 |   7.6802 |   0.9907 |\nstats_rank_average_int                       |  18.6820 |  18.8482 |   0.9912 |\ngroupby_pivot_table                          |  16.5930 |  16.7401 |   0.9912 |\ntimeseries_timestamp_downsample_mean         |   3.5810 |   3.6111 |   0.9917 |\nframe_reindex_axis0                          |  77.9679 |  78.6190 |   0.9917 |\nstats_corr_spearman                          |  70.6170 |  71.1949 |   0.9919 |\ntimeseries_infer_freq                        |   6.5250 |   6.5749 |   0.9924 |\ntimeseries_period_downsample_mean            |   5.3890 |   5.4300 |   0.9924 |\nstat_ops_level_frame_sum                     |   2.9190 |   2.9399 |   0.9929 |\njoin_dataframe_integer_2key                  |   4.4181 |   4.4479 |   0.9933 |\nseries_align_irregular_string                |  50.0710 |  50.4081 |   0.9933 |\nreindex_frame_level_align                    |   0.5832 |   0.5870 |   0.9935 |\nstat_ops_level_frame_sum_multiple            |   7.2091 |   7.2539 |   0.9938 |\ngroupby_multi_size                           |  24.5860 |  24.7180 |   0.9947 |\nstats_rank2d_axis0_average                   |  18.5640 |  18.6539 |   0.9952 |\nsparse_series_to_frame                       | 117.1200 | 117.5661 |   0.9962 |\nunstack_sparse_keyspace                      |   1.3909 |   1.3959 |   0.9964 |\ngroupby_first                                |   3.0730 |   3.0839 |   0.9964 |\nframe_ctor_nested_dict                       |  57.8749 |  58.0280 |   0.9974 |\nreindex_fillna_backfill_float32              |   0.4182 |   0.4191 |   0.9977 |\nreshape_stack_simple                         |   1.4410 |   1.4429 |   0.9987 |\njoin_dataframe_integer_key                   |   1.4930 |   1.4949 |   0.9987 |\nreplace_replacena                            |   3.6631 |   3.6659 |   0.9992 |\ngroupby_frame_median                         |   5.4619 |   5.4641 |   0.9996 |\nread_csv_standard                            |   9.2361 |   9.2380 |   0.9998 |\ngroupby_last_float32                         |   3.2320 |   3.2320 |   1.0000 |\nseries_constructor_ndarray                   |   0.0160 |   0.0160 |   1.0000 |\nframe_fillna_many_columns_pad                |  12.1920 |  12.1920 |   1.0000 |\ntimeseries_large_lookup_value                |   0.0231 |   0.0231 |   1.0000 |\nreindex_daterange_backfill                   |   2.4390 |   2.4371 |   1.0008 |\ntimeseries_sort_index                        |  18.2889 |  18.2478 |   1.0022 |\nreindex_daterange_pad                        |   2.4340 |   2.4259 |   1.0033 |\nframe_sort_index_by_columns                  |  31.2161 |  31.1110 |   1.0034 |\nread_csv_comment2                            |  17.5040 |  17.4401 |   1.0037 |\ngroupby_indices                              |   6.3572 |   6.3312 |   1.0041 |\nframe_boolean_row_select                     |   0.2131 |   0.2120 |   1.0056 |\ntimeseries_to_datetime_iso8601               |   3.8910 |   3.8612 |   1.0077 |\nreplace_fillna                               |   3.6750 |   3.6449 |   1.0082 |\nlib_fast_zip_fillna                          |  10.5841 |  10.4971 |   1.0083 |\ngroupby_multi_different_functions            |  10.8781 |  10.7880 |   1.0084 |\ndatetimeindex_normalize                      |   2.2500 |   2.2280 |   1.0098 |\nstat_ops_level_series_sum_multiple           |   6.6872 |   6.6178 |   1.0105 |\nindex_datetime_union                         |   8.6920 |   8.6010 |   1.0106 |\nframe_get_dtype_counts                       |   0.0880 |   0.0870 |   1.0110 |\nframe_iteritems                              |  25.3410 |  25.0630 |   1.0111 |\nreindex_fillna_pad                           |   0.5260 |   0.5200 |   1.0115 |\nframe_insert_100_columns_begin               |  15.4629 |  15.2860 |   1.0116 |\npanel_from_dict_two_different_indexes        |  39.9530 |  39.4778 |   1.0120 |\ngroupby_first_float32                        |   3.0582 |   3.0160 |   1.0140 |\nframe_getitem_single_column2                 |  18.0881 |  17.8120 |   1.0155 |\nstat_ops_frame_mean_float_axis_1             |   5.0459 |   4.9639 |   1.0165 |\nindexing_dataframe_boolean_rows_object       |   0.4680 |   0.4601 |   1.0171 |\ngroupby_sum_booleans                         |   0.7811 |   0.7651 |   1.0209 |\nframe_drop_dup_inplace                       |   2.2190 |   2.1710 |   1.0221 |\nread_parse_dates_iso8601                     |   1.1170 |   1.0900 |   1.0247 |\ngroupby_simple_compress_timing               |  29.3281 |  28.5370 |   1.0277 |\nsparse_frame_constructor                     |   9.3942 |   9.1388 |   1.0279 |\nsort_level_zero                              |   3.7801 |   3.6709 |   1.0297 |\npanel_from_dict_all_different_indexes        |  53.7281 |  52.1729 |   1.0298 |\ngroupby_frame_singlekey_integer              |   2.1300 |   2.0669 |   1.0306 |\nreindex_multiindex                           |   0.8409 |   0.8130 |   1.0343 |\nappend_frame_single_homogenous               |   0.2060 |   0.1991 |   1.0347 |\nreindex_fillna_pad_float32                   |   0.4320 |   0.4170 |   1.0360 |\ndataframe_reindex                            |   0.3462 |   0.3340 |   1.0364 |\ngroupby_transform                            | 117.1820 | 112.8821 |   1.0381 |\nframe_get_numeric_data                       |   0.0780 |   0.0751 |   1.0381 |\ngroupby_apply_dict_return                    |  24.9550 |  23.9921 |   1.0401 |\nindex_int64_intersection                     |  23.8118 |  22.8329 |   1.0429 |\nconcat_series_axis1                          |  65.4199 |  62.6309 |   1.0445 |\nread_table_multiple_date_baseline            |  75.4662 |  72.0320 |   1.0477 |\npanel_from_dict_equiv_indexes                |  24.9131 |  23.7088 |   1.0508 |\ntimeseries_1min_5min_mean                    |   0.4830 |   0.4590 |   1.0525 |\ndti_reset_index                              |   0.1781 |   0.1690 |   1.0536 |\npanel_from_dict_same_index                   |  24.9889 |  23.6831 |   1.0551 |\ndatetimeindex_unique                         |   0.0939 |   0.0889 |   1.0563 |\nread_table_multiple_date                     | 163.5280 | 153.4901 |   1.0654 |\nframe_drop_dup_na_inplace                    |   2.2259 |   2.0850 |   1.0676 |\ndatetimeindex_add_offset                     |   0.1731 |   0.1619 |   1.0692 |\nframe_iloc_dups                              |   0.2170 |   0.2019 |   1.0744 |\nframe_iteritems_cached                       |   0.4621 |   0.4299 |   1.0749 |\nconcat_small_frames                          |  12.3281 |  11.4250 |   1.0790 |\nframe_xs_row                                 |   0.0370 |   0.0341 |   1.0839 |\nseries_drop_duplicates_string                |   0.4370 |   0.4032 |   1.0840 |\nframe_reindex_columns                        |   0.3030 |   0.2789 |   1.0863 |\njoin_dataframe_index_single_key_small        |   5.3852 |   4.9469 |   1.0886 |\nframe_repr_tall                              |   2.2731 |   2.0730 |   1.0965 |\nframe_ctor_nested_dict_int64                 |  82.3250 |  75.0730 |   1.0966 |\ngroupby_frame_cython_many_columns            |   3.0849 |   2.8129 |   1.0967 |\nframe_xs_col                                 |   0.0231 |   0.0210 |   1.1023 |\ntimeseries_1min_5min_ohlc                    |   0.5291 |   0.4780 |   1.1067 |\ntimeseries_to_datetime_YYYYMMDD              |   7.9660 |   7.1719 |   1.1107 |\nctor_index_array_string                      |   0.0169 |   0.0150 |   1.1270 |\ntimeseries_slice_minutely                    |   0.0441 |   0.0381 |   1.1562 |\ntimeseries_timestamp_tzinfo_cons             |   0.0129 |   0.0110 |   1.1739 |\ngroupby_frame_apply_overhead                 |   8.7209 |   7.2041 |   1.2106 |\ngroupby_frame_apply                          |  42.1200 |  34.2922 |   1.2283 |\nseries_ctor_from_dict                        |   2.9459 |   2.1560 |   1.3664 |\nperiod_setitem                               | 156.1499 | 104.1942 |   1.4986 |\n-------------------------------------------------------------------------------\nTest name                                    | head[ms] | base[ms] |  ratio   |\n-------------------------------------------------------------------------------\n\nRatio < 1.0 means the target commit is faster then the baseline.\nSeed used: 1234\n\nTarget [da81e40] : ENH: Series and DataFrame constructor autodetect when index/columns\nshould be MultiIndex\n\nENH: prevents some seg faults in calls to cython funcs\nBase   [d702de0] : Merge pull request #4783 from jtratner/wrap-compressed-fileobjects-in-py3\n\nBUG: Fix input bytes conversion in Py3 to return str\n\n\n<class 'pandas.core.frame.DataFrame'>\nIndex: 172 entries, frame_reindex_both_axes to period_setitem\nData columns (total 8 columns):\ncount    172  non-null values\nmean     172  non-null values\nstd      172  non-null values\nmin      172  non-null values\n25%      172  non-null values\n50%      172  non-null values\n75%      172  non-null values\nmax      172  non-null values\ndtypes: float64(8)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24991407",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24991407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24991407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTkxNDA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T10:18:29Z",
    "updated_at": "2013-09-24T10:20:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you add releaset notes? does it close all 3 of those listed issues? have tests from all 3?  pls add the issues it closes to the very top of the PR, with something like `closes #issue`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24991599",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24991599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24991599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTkxNTk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T10:22:08Z",
    "updated_at": "2013-09-24T10:22:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you perf tests the bottom 2 (period_setitem and series_constructor) with a higher number of ncalls (so it will avg them)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24991661",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-24991661",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 24991661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTkxNjYx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T10:23:32Z",
    "updated_at": "2013-09-24T10:23:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "If it turns out to be slow, might make sense to add a keyword argument to disable/enable this processing. (similar to tupleize_cols for csv, etc)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25015910",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-25015910",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 25015910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDE1OTEw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T15:37:00Z",
    "updated_at": "2013-09-24T15:37:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's not so crazy that passing in tuples to index could lead to a mi... (You can also get a DatetimeIndex when creating an Index and it's very different from the Panel vs DataFrame!*)\n\n```\nIn [1]: s = pd.Series(index=[[1, 3], [3, 4]])\n\nIn [2]: s.index\nOut[2]:\nMultiIndex\n[(1, 3), (3, 4)]\n\nIn [3]: isinstance(s.index, pd.Index)\nOut[3]: True\n\nIn [4]: pd.Index([[1, 3], [3, 4]])  # inconsistent / weird\nOut[4]: Index([[1, 3], [3, 4]], dtype=object)\n```\n\nI think this should be consistent however you construct... imo this is a good opportunity to correct the above behaviour, where you get a different index depending! Should be the same via Index, Series(index=) or passing dict... atm it's not\n\n+1 for adding some keyword to disable (?) this (like tuplize_col..)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25031043",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-25031043",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 25031043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDMxMDQz",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T18:38:09Z",
    "updated_at": "2013-09-24T18:38:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd,\n\nI think it would be a great idea to have the Index constructure also return a MultiIndex, but only if a kwarg like \"infer_multiindex=True\" was passed to the constructor.  By default, the \"infer_multiindex=False\" because if it was True, it would cause seg faults and break several tests.  I might be able to tackle this in this PR.  If not, perhaps another pr...\n\nLogically, something also seems funky about letting an Index return a MultiIndex. For instance, should a DataFrame be able to return a Panel?  I think you hinted at this in your comment.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25036375",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-25036375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 25036375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDM2Mzc1",
    "user": {
      "login": "adgaudio",
      "id": 860369,
      "node_id": "MDQ6VXNlcjg2MDM2OQ==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/860369?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adgaudio",
      "html_url": "https://github.com/adgaudio",
      "followers_url": "https://api.github.com/users/adgaudio/followers",
      "following_url": "https://api.github.com/users/adgaudio/following{/other_user}",
      "gists_url": "https://api.github.com/users/adgaudio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adgaudio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adgaudio/subscriptions",
      "organizations_url": "https://api.github.com/users/adgaudio/orgs",
      "repos_url": "https://api.github.com/users/adgaudio/repos",
      "events_url": "https://api.github.com/users/adgaudio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adgaudio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T19:46:13Z",
    "updated_at": "2013-09-24T19:46:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner - thanks for your comments.\n\nHere are the perf results with ncalls=5.  I also just rebased against master.   The average ratio is now actually a tiny bit worse (was 1.004 and now is 1.01), but the basic distribution of ratios looks more or less like the picture I posted above.  \n\nAre these performance hits alright for this PR, or should I add a kwarg to the DataFrame and Series constructors that disables it by default?\n\ncount  190.000000\nmean     1.010531\nstd      0.041385\nmin      0.877500\n25%      0.995000\n50%      1.003550\n75%      1.018125\nmax      1.231000\n\n```\n[... truncated ...]\nframe_ctor_list_of_dict                      |  68.6394 |  64.7336 |   1.0603 |\nmerge_2intkey_sort                           |  34.2390 |  32.1878 |   1.0637 |\nframe_fancy_lookup_all                       |  13.8032 |  12.9736 |   1.0639 |\nframe_sort_index_by_columns                  |  33.8332 |  31.7710 |   1.0649 |\nframe_ctor_nested_dict_int64                 |  81.2192 |  75.8838 |   1.0703 |\nseries_value_counts_strings                  |   4.4824 |   4.1206 |   1.0878 |\nstats_rank_average                           |  23.8794 |  21.7868 |   1.0961 |\nmerge_2intkey_nosort                         |  15.9592 |  14.2020 |   1.1237 |\njoin_dataframe_index_multi                   |  19.3036 |  16.8800 |   1.1436 |\nmask_bools                                   |  13.2502 |  11.4928 |   1.1529 |\ngroupby_pivot_table                          |  20.3042 |  16.7432 |   1.2127 |\ngroupby_multi_different_functions            |  13.4090 |  11.0168 |   1.2171 |\ngroupby_multi_different_numpy_functions      |  13.3692 |  10.8602 |   1.2310 |\n-------------------------------------------------------------------------------\nTest name                                    | head[ms] | base[ms] |  ratio   |\n-------------------------------------------------------------------------------\n\nRatio < 1.0 means the target commit is faster then the baseline.\nSeed used: 1234\n\nTarget [8e15111] : rel notes  ### FYI - I squashed this, and it represents my latest commit.\nBase   [275a42c] : Merge pull request #4965 from westurner/patch-1\n\nDOC: remote_data.rst: Fama/French punctuation\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25042068",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-25042068",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 25042068,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDQyMDY4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T21:00:13Z",
    "updated_at": "2013-09-24T21:00:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I disagree - it makes sense that `Index` can return a `MultiIndex`. `MultiIndex` is a subclass of `Index` and behaves in pretty much the same way [as compared to the alternative of an index of tuples].  `Index` can return `Int64Index` or `DatetimeIndex`. We will, at some point, harmonize the API for `Index` objects, so the distinction will be less important going forward (and, eventually, you'll just use one of the helper methods (from_tuples, from_arrays) to construct a `MultiIndex`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25043627",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-25043627",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 25043627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDQzNjI3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T21:21:32Z",
    "updated_at": "2013-09-24T21:21:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@adgaudio I was the saying the Panel/DataFrame thing is a completely different beast (a Panel is not a DataFrame, an mi is an Index).\n\n> By default, the \"infer_multiindex=False\" because if it was True, it would cause seg faults and break several tests\n\nThese are really bugs... and not a reason not to do the right thing (i.e. fix them) :).\n\nI'm with @jtratner, I don't actually think Index return a mi is weird behaviour, but expected... What _is_ weird is the current **inconsistent** behaviour seen in my example above!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25045590",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-25045590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 25045590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDQ1NTkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T21:50:10Z",
    "updated_at": "2013-09-24T21:50:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "concur with both @hayd , @jtratner \n\nan `Index` with with tuples is by definition a Multi-index, just not created properly\n\nso @adgaudio one thing to do would be to put a temporary 'hack' in the `Index` constructor to even see where these are (as the tests are current wrong), then fix the tests, then take the hack out!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/25045800",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4805#issuecomment-25045800",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4805",
    "id": 25045800,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDQ1ODAw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-24T21:53:30Z",
    "updated_at": "2013-09-24T21:53:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @adgaudio you don't need to do that for now if you don't want to (but really helpful if you did). I guess I'm going to be working on unifying the Index/MultiIndex api anyways, so that will be a part of it anyhow.\n"
  }
]
