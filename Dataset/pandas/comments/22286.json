[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412308258",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-412308258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 412308258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjMwODI1OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-08-11T23:34:54Z",
    "updated_at": "2018-09-23T09:37:19Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22286?src=pr&el=h1) Report\n> Merging [#22286](https://codecov.io/gh/pandas-dev/pandas/pull/22286?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/fb784caf51a37ffd9ec3662ade1f5e9cdebefd17?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22286/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/22286?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #22286      +/-   ##\n==========================================\n+ Coverage   92.18%   92.18%   +<.01%     \n==========================================\n  Files         169      169              \n  Lines       50810    50815       +5     \n==========================================\n+ Hits        46839    46844       +5     \n  Misses       3971     3971\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.6% <100%> (ø)` | :arrow_up: |\n| #single | `42.37% <0%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22286?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/22286/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.2% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22286?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22286?src=pr&el=footer). Last update [fb784ca...83f7f5e](https://codecov.io/gh/pandas-dev/pandas/pull/22286?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412829624",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-412829624",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 412829624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjgyOTYyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-14T10:39:33Z",
    "updated_at": "2018-08-14T10:39:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am really -1 on ``inplace`` generally. To the extent that this is actually doing inplace operations, I guess explict is better than implicit."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412984014",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-412984014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 412984014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjk4NDAxNA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-14T19:13:13Z",
    "updated_at": "2018-08-14T19:15:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I am really -1 on `inplace` generally. To the extent that this is actually doing inplace operations, I guess explict is better than implicit.\r\n\r\nThis is one of the few(?) methods that's inplace by default - so to move *away* from that, it's necessary to introduce an inplace-kwarg in the first place, to then eventually, maybe deprecate away from `inplace=True`... ;-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413104398",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-413104398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 413104398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzEwNDM5OA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T06:16:56Z",
    "updated_at": "2018-08-15T06:16:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback  All green. I opened a follow-up for giving the same capabilities to `Series.update`, #22358."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413573601",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-413573601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 413573601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU3MzYwMQ==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T14:52:51Z",
    "updated_at": "2018-08-16T14:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Going towards my comments on #21858 and the name \"update\" seeming wrong for a non-inplace method. It seems to me that there are a lot of methods which perform variations on the same functionality (join, combine, combine_first, update). It seems to me that non-inplace `update` is basically a slightly-modified version of `join` or `combine`. Perhaps deprecation of `update` and the addition of its specific features (e.g. filter_func) as optional parameters to one of the other non-inplace methods would be more appropriate?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413590030",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-413590030",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 413590030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU5MDAzMA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T15:40:28Z",
    "updated_at": "2018-08-16T15:40:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Liam3851 I think we see the world quite differently on that. To me, the essential functionality of `update` (like any other method) is the intended *result*, in this case a DF suitably updated with another one.\r\n\r\nWhether that operation is inplace or not is purely a semantic distinction, and (IMHO) down to your habits - meaning no offense, of course. To illustrate my point, the exact same argument could be used to argue that `fillna` must work in place (hypothetical quote):\r\n> To me, `fillna` connotes `inplace` -- you're filling the \"holes\" of *this* DataFrame, why should this return another object?\r\n\r\nRegarding your suggestion to wrap this into other methods, I don't think it would work. `join` does something different, `combine_first` should be deprecated (#21859), and `combine` needs a `func`-argument. If there were a default function that would allow using `combine` as `update`, I could maybe see it work - all the existing keywords of `update` would work, plus it could be without `inplace` from the get-go. But I tried quickly writing such a function, and it essentially boils down to rewriting the essential functionality of `update` manually.\r\n\r\nFinally, I find \"combine\" to be a much too general term, when the thought process a user might try to materialise is simply \"update this DF with that DF, but don't overwrite\" (or maybe do...). For that reason, I never used `combine` (resp. needed to), because `update` was always the more obvious choice."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413632403",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-413632403",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 413632403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzYzMjQwMw==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T17:58:26Z",
    "updated_at": "2018-08-16T17:58:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari To me \"update\" has a distinct connotation in terms of both dicts and SQL as changing the underlying data, but I agree the point is largely semantic. \r\n\r\nMy personal experience as a longtime user is that I've hardly ever used `update`, while `combine_first` is bread-and-butter and has an analog in `xarray`, so I'm a pretty strong -1 on deprecating the latter (#21859) and replacing it with the former."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/414556586",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-414556586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 414556586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDU1NjU4Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-21T05:44:50Z",
    "updated_at": "2018-08-21T05:44:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I incorporated the requested changes a week ago."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/415458525",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-415458525",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 415458525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNTQ1ODUyNQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-23T15:25:18Z",
    "updated_at": "2018-08-23T15:25:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Rebased and all green. The content has not changed from a week ago."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/416680766",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-416680766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 416680766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjY4MDc2Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T17:53:13Z",
    "updated_at": "2018-08-28T17:53:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Two weeks of green. ;-)\r\nWould appreciate some progress on this as it's blocking PRs for #22358 and #21855 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/416681270",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-416681270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 416681270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjY4MTI3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T17:54:24Z",
    "updated_at": "2018-08-28T17:54:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari there are a number of open questions on this API generally. maybe @TomAugspurger @jorisvandenbossche have some thoughts"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/416681786",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-416681786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 416681786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjY4MTc4Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T17:55:58Z",
    "updated_at": "2018-08-28T18:00:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback OK cool, let's have a discussion. Could you specify which open questions you see?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/418252758",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-418252758",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 418252758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxODI1Mjc1OA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-04T06:16:06Z",
    "updated_at": "2018-09-04T06:16:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @tomaugspurger @jorisvandenbossche\r\n\r\nDo you see any downside to adding an `inplace` kwarg to `update`? That in and of itself should not be controversial - explicit is better than implicit, no?\r\n\r\nThe discussion about the joins can be continued in #21855."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419962348",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-419962348",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 419962348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk2MjM0OA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T15:49:42Z",
    "updated_at": "2018-09-10T15:53:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @TomAugspurger @jorisvandenbossche @toobaz \r\n\r\nThis PR has been green for 4 weeks (the issue has been open another month on top of that with little discussion) - could I please have some guidance of how to proceed (then I'd also offer to tackle PRs for #22358 and #21855)?\r\n\r\nAs this PR suggests, I'd prefer to add an `inplace`-kwarg to `update`, but could imagine another option as well (quoting myself from the issue):\r\n\r\n> Alternatively, if `update` is such a reserved name, one could think of having the required functionality (fusing two dataframes with given precedence and requirement for output dimensions) in a separate method called e.g. `df.fuse` or `df.coalesce`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419964055",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-419964055",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 419964055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk2NDA1NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T15:54:30Z",
    "updated_at": "2018-09-10T15:54:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think my thoughts have changed since\nhttps://github.com/pandas-dev/pandas/issues/21858#issuecomment-410675641\n\nI don't think we should add an inplace keyword argument.\n\nI'm fine with returning `self`, the updated dataframe, to aid with method\nchaining.\n\nOn Mon, Sep 10, 2018 at 10:51 AM h-vetinari <notifications@github.com>\nwrote:\n\n> @jreback <https://github.com/jreback> @TomAugspurger\n> <https://github.com/TomAugspurger> @jorisvandenbossche\n> <https://github.com/jorisvandenbossche> @toobaz\n> <https://github.com/toobaz>\n>\n> This PR has been green for 4 weeks and hasn't moved forward due to lack of\n> input (the issue has been open another month on top of that with little\n> discussion) - can I please have some guidance of how to proceed (then I'd\n> also offer to tackle PRs for #22358\n> <https://github.com/pandas-dev/pandas/issues/22358> and #21855\n> <https://github.com/pandas-dev/pandas/issues/21855>)?\n>\n> As this PR suggests, I'd prefer to add an inplace-kwarg to update, but\n> could imagine another option as well (quoting myself from the issue):\n>\n> Alternatively, if update is such a reserved name, one could think of\n> having the required functionality (fusing two dataframes with given\n> precedence and requirement for output dimensions) in a separate method\n> called e.g. df.coalesce?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/22286#issuecomment-419962348>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIi2p6ozWU1BbrGEisBPc1PpiZB4Lks5uZop2gaJpZM4V5Vf->\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419967876",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-419967876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 419967876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk2Nzg3Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T16:05:16Z",
    "updated_at": "2018-09-10T16:10:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\nThanks for the response! I responded to your remark in the issue with the suggestion quoted above (of then having a different method for that functionality) - any comment about that? Especially in chained calls, I find it *not* desirable to have inplace operations (whether returning `self` or not).\r\n\r\nAside from that, does any `inplace` operation currently return something other than `None`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419970166",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-419970166",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 419970166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk3MDE2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T16:12:21Z",
    "updated_at": "2018-09-10T16:12:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why do you prefer not-inplace ops in method chains, or more precisely, why\ndoes it matter?\nOther than the first operation in a method chain, you aren't going to have\na reference to the output\nof the previous step, so it shouldn't matter.\n\nIf you're starting with `.update`, maybe start with `.copy` as a workaround?\n\nOn Mon, Sep 10, 2018 at 11:07 AM h-vetinari <notifications@github.com>\nwrote:\n\n> @TomAugspurger <https://github.com/TomAugspurger>\n> Thanks for the response! I responded to your remark in the issue with the\n> suggestion quoted above (of then having a different method for that\n> functionality) - any comment about that? Especially in chained calls, I\n> find it *not* desirable to have inplace operations (whether returning self\n> or not).\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/22286#issuecomment-419967876>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIupFWUI7lByc7S5g4JHPLB1P-C84ks5uZo4wgaJpZM4V5Vf->\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/419992584",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-419992584",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 419992584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxOTk5MjU4NA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T17:22:58Z",
    "updated_at": "2018-09-10T18:04:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\n\r\n> Why do you prefer not-inplace ops in method chains, or more precisely, why does it matter?\r\n\r\nThat's easy to answer: because the original might still be needed later in computation (example below). That's why - if this is not about the functionality, but rather the semantic distinction of what \"update\" means - I suggested a different method name.\r\n\r\nAs for the example, here's the simple setup:\r\n```\r\nN = 1000\r\ndf = pd.DataFrame({'x': np.random.randint(0, 10, (N,))})\r\ndf2 = df.sample(int(N/2)).add(2).mod(10)\r\ndf3 = df.sample(int(N/2)).add(2).mod(10)\r\n```\r\n\r\nMy suggestion: with `inplace=False` (`1 sloc`):\r\n```\r\nres = df.loc[df.update(df2, inplace=False).gt(df.update(df3, inplace=False)).x].mean()\r\n```\r\n\r\nEven better would be something that's not inplace by default (`1 sloc`):\r\n```\r\nres = df.loc[df.fuse(df2).gt(df.fuse(df3)).x].mean()\r\n```\r\n\r\nWith `self`-returning `update`, it would work as well, at the cost of (potentially many) `copy`-calls (`1 sloc`):\r\n```\r\nres = df.loc[df.copy().update(df2).gt(df.copy().update(df3)).x].mean()\r\n```\r\n\r\nCurrent status (`5 sloc`):\r\n```\r\ndfo = df.copy()  # original\r\ndfi = df.copy()  # intermediate\r\ndfi.update(df2)\r\ndf.update(df3)\r\nres = dfo.loc[dfi.gt(df).x].mean()\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420004489",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-420004489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 420004489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDAwNDQ4OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T18:00:03Z",
    "updated_at": "2018-09-10T18:00:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks. I think I would recommend your 3rd solution. I prefer that to adding additional keyword arguments or new methods."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420008524",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-420008524",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 420008524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDAwODUyNA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T18:12:43Z",
    "updated_at": "2018-09-10T18:12:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\n> Thanks. I think I would recommend your 3rd solution. I prefer that to adding additional keyword arguments or new methods.\r\n\r\nI get your point, just two comments:\r\n* the `inplace`-ing would/will get even more complicated with allowing different joins for `update` (#21855)\r\n* but perhaps even more importantly:\r\n  > [...] does any `inplace` operation currently return something other than `None`?\r\n  \r\n  This was the reason I didn't understand your comment in the issue - I didn't get that you meant that the method should return something *despite* being `inplace`, as this goes against all (my) experience in python/pandas."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420010686",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-420010686",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 420010686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDAxMDY4Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T18:19:12Z",
    "updated_at": "2018-09-10T18:19:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "No sure about elsewhere in the library. I think it's been discussed before.\n\nOn Mon, Sep 10, 2018 at 1:12 PM h-vetinari <notifications@github.com> wrote:\n\n> @TomAugspurger <https://github.com/TomAugspurger>\n>\n> Thanks. I think I would recommend your 3rd solution. I prefer that to\n> adding additional keyword arguments or new methods.\n>\n> I get your point, just two comments:\n>\n>    -\n>\n>    the inplace-ing would/will get even more complicated with allowing\n>    different joins for update (#21855\n>    <https://github.com/pandas-dev/pandas/issues/21855>)\n>    -\n>\n>    but perhaps even more importantly:\n>\n>    [...] does any inplace operation currently return something other than\n>    None?\n>\n>    This was the reason I didn't understand your comment in the issue - I\n>    didn't get that you meant that the method should return something\n>    *despite* being inplace, as this goes against all (my) experience in\n>    python/pandas.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/22286#issuecomment-420008524>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIqERiID_Y5n4fGMIkw4bE8enfkGoks5uZquhgaJpZM4V5Vf->\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423801913",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-423801913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 423801913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgwMTkxMw==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T09:00:31Z",
    "updated_at": "2018-09-23T09:00:31Z",
    "author_association": "NONE",
    "body": "Hello @h-vetinari! Thanks for updating the PR.\n\n - There are no PEP8 issues in the file [`pandas/core/frame.py`](https://github.com/h-vetinari/pandas/blob/83f7f5e310f09b5f61820d43d782ec86f6bae0fe/pandas/core/frame.py) !\n\n - There are no PEP8 issues in the file [`pandas/tests/frame/test_combine_concat.py`](https://github.com/h-vetinari/pandas/blob/83f7f5e310f09b5f61820d43d782ec86f6bae0fe/pandas/tests/frame/test_combine_concat.py) !\n\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423814805",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-423814805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 423814805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgxNDgwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T12:58:47Z",
    "updated_at": "2018-09-23T12:58:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari I don't mind the code changes you did, they look fine. The issue is that ``inplace=True`` is no-where the default anywhere in pandas. Changing this is simply not-tenable, w/o a deprecation cycle (e.g. adding the keyword defaulting to None and then showing a warning if its not passed).\r\n\r\nSo we have ``.update`` (in-place defaults) and ``.combine_first`` which is not very standard terminology. \r\n\r\nIn an ideal world I think adding ``.coalesce`` is probably the right thing to do (does R use this term?).\r\nwhich is basically a rename of ``.combine_first``, and deprecate ``.update``.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423816127",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-423816127",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 423816127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgxNjEyNw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T13:21:58Z",
    "updated_at": "2018-09-23T13:21:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \r\n\r\nThanks for the comment, I strongly agree in principle.\r\n\r\n> The issue is that `inplace=True` is no-where the default anywhere in pandas\r\n\r\nIt is effectively in `.update`, just without having the explicit kwarg...\r\n\r\n> In an ideal world I think adding `.coalesce` is probably the right thing to do (does R use this term?).\r\nwhich is basically a rename of `.combine_first`, and deprecate `.update`.\r\n\r\nI _really_ like this idea. This would also basically solve the whole discussion about more joins for `.update` (see #21855), which is why I brought up `.coalesce` (or `.fuse`)  as an alternative there as well...\r\n\r\nAnd yes, dplyr uses \"coalesce\", which itself is inspired by SQL: https://cran.r-project.org/web/packages/dplyr/dplyr.pdf#page.15"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423816265",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-423816265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 423816265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgxNjI2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T13:24:06Z",
    "updated_at": "2018-09-23T13:24:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It is effectively in .update, just without having the explicit kwarg...\r\n\r\nyes and that is exactly the problem. We can't simply add an ``inplace=True`` keyword here, which I think would be way more confusing\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423816667",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-423816667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 423816667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgxNjY2Nw==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T13:30:16Z",
    "updated_at": "2018-09-23T13:30:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> yes and that is exactly the problem. We can't simply add an `inplace=True` keyword here, which I think would be way more confusing\r\n\r\nI disagree that this would be more confusing (just more explicit), but this is moot anyway if we follow the `.coalesce` route. Should I open an issue to introduce `.coalesce` (with the capabilities of `update`; to be able to eventually deprecate `combine_first` and `update`)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/423816850",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-423816850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 423816850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzgxNjg1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-23T13:33:19Z",
    "updated_at": "2018-09-23T13:33:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@h-vetinari i think that would be ok, to get some more commentary on this, esp from @jorisvandenbossche and @TomAugspurger (and some off-line discussions that I had with @cpcloud )"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443566335",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-443566335",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 443566335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzU2NjMzNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T01:59:21Z",
    "updated_at": "2018-12-03T01:59:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing this. there are many issues about this, and this PR is stale."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443607552",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22286#issuecomment-443607552",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22286",
    "id": 443607552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzYwNzU1Mg==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T06:56:15Z",
    "updated_at": "2018-12-03T06:56:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "It wasn't stale just stalled - it's a PR I haven't pushed because there are more pressing issues to me.\r\n\r\nYou mention \"many\" issues, but so far, no-one has given an actual example (aside from personal preference that `.update` should *always* mean inplace).\r\n\r\nIn any case, I'm letting this be, but tried to restart the conversation in #22812. Would appreciate if you could comment there. :)"
  }
]
