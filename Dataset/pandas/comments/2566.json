[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11538907",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11538907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11538907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTM4OTA3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T17:20:12Z",
    "updated_at": "2012-12-19T17:20:12Z",
    "author_association": "MEMBER",
    "body": "This is a well-known \"Python problem\":\n\nIn [21]: from StringIO import StringIO\n\n```\nIn [22]: read_csv(StringIO('0.011277'), header=None)\nOut[22]: \n          0\n0  0.011277\n\nIn [23]: read_csv(StringIO('0.011277'), header=None)[0][0]\nOut[23]: 0.011276999999999999\n\nIn [24]: str(read_csv(StringIO('0.011277'), header=None)[0][0])\nOut[24]: '0.011277'\n```\n\nIt varies by platform, here is using `np.float64` to do the casting:\n\n```\nIn [29]: read_csv(StringIO('0.011277'), header=None)[0][0].view(np.uint64)\nOut[29]: 4577654369684779146\n\nIn [30]: np.float64('0.011277')\nOut[30]: 0.011277000000000001\n\nIn [31]: np.float64('0.011277')\nOut[31]: 0.011277000000000001\n\nIn [32]: np.float64('0.011277').view(np.uint64)\nOut[32]: 4577654369684779147\n```\n\nLooks like the conversion algorithm differs in the result by one bit in the mantissa\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11539506",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11539506",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11539506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTM5NTA2",
    "user": {
      "login": "yarivm",
      "id": 2735044,
      "node_id": "MDQ6VXNlcjI3MzUwNDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2735044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarivm",
      "html_url": "https://github.com/yarivm",
      "followers_url": "https://api.github.com/users/yarivm/followers",
      "following_url": "https://api.github.com/users/yarivm/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarivm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarivm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarivm/subscriptions",
      "organizations_url": "https://api.github.com/users/yarivm/orgs",
      "repos_url": "https://api.github.com/users/yarivm/repos",
      "events_url": "https://api.github.com/users/yarivm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarivm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T17:34:37Z",
    "updated_at": "2012-12-19T17:34:37Z",
    "author_association": "NONE",
    "body": "That was a quick response :)\n1. I just added to the issue's text above that the behavior of Pandas changed from v.0.9.0 to v.0.10.0.\n2. I don't understand how it's a Python problem. Isn't it the code in read_csv() which produces this behavior? Don't we want read_csv() to conform to Numpy's string parsing?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11540670",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11540670",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11540670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTQwNjcw",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T18:02:31Z",
    "updated_at": "2012-12-19T18:02:31Z",
    "author_association": "MEMBER",
    "body": "The parsed numbers are < 1e-17 apart which is within the acceptable margin of error (typically 1e-14 or 1e-15) for double precision floating point numbers. I'm happy to make the results consistent but will require some digging to modify the new parser's C code for string to double conversion to exactly match Python's internal version. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11543236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11543236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11543236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTQzMjM2",
    "user": {
      "login": "yarivm",
      "id": 2735044,
      "node_id": "MDQ6VXNlcjI3MzUwNDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2735044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarivm",
      "html_url": "https://github.com/yarivm",
      "followers_url": "https://api.github.com/users/yarivm/followers",
      "following_url": "https://api.github.com/users/yarivm/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarivm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarivm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarivm/subscriptions",
      "organizations_url": "https://api.github.com/users/yarivm/orgs",
      "repos_url": "https://api.github.com/users/yarivm/repos",
      "events_url": "https://api.github.com/users/yarivm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarivm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T19:04:55Z",
    "updated_at": "2012-12-19T19:04:55Z",
    "author_association": "NONE",
    "body": "How can I write code which gives back '0.011277' from both floats? Should I use np.round(x,14)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11543390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11543390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11543390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTQzMzkw",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T19:08:28Z",
    "updated_at": "2012-12-19T19:08:28Z",
    "author_association": "MEMBER",
    "body": "use `str` instead of `repr`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11543663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11543663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11543663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNTQzNjYz",
    "user": {
      "login": "yarivm",
      "id": 2735044,
      "node_id": "MDQ6VXNlcjI3MzUwNDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2735044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarivm",
      "html_url": "https://github.com/yarivm",
      "followers_url": "https://api.github.com/users/yarivm/followers",
      "following_url": "https://api.github.com/users/yarivm/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarivm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarivm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarivm/subscriptions",
      "organizations_url": "https://api.github.com/users/yarivm/orgs",
      "repos_url": "https://api.github.com/users/yarivm/repos",
      "events_url": "https://api.github.com/users/yarivm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarivm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-19T19:14:58Z",
    "updated_at": "2012-12-19T19:14:58Z",
    "author_association": "NONE",
    "body": "Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11648228",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11648228",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11648228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjQ4MjI4",
    "user": {
      "login": "yarivm",
      "id": 2735044,
      "node_id": "MDQ6VXNlcjI3MzUwNDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2735044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarivm",
      "html_url": "https://github.com/yarivm",
      "followers_url": "https://api.github.com/users/yarivm/followers",
      "following_url": "https://api.github.com/users/yarivm/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarivm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarivm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarivm/subscriptions",
      "organizations_url": "https://api.github.com/users/yarivm/orgs",
      "repos_url": "https://api.github.com/users/yarivm/repos",
      "events_url": "https://api.github.com/users/yarivm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarivm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-23T17:23:27Z",
    "updated_at": "2012-12-23T17:23:27Z",
    "author_association": "NONE",
    "body": "The biggest issue here for me is that df.astype('i') doesn't work as before/expected, because truncation now sometimes returns a value which is smaller by 1. My ad-hoc solution is to round before truncation: np.rint(df.acolumn).astype('i').\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11664357",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11664357",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11664357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjY0MzU3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-24T18:22:41Z",
    "updated_at": "2012-12-24T18:22:41Z",
    "author_association": "MEMBER",
    "body": "Are you multiplying by a number then converting to integer? Or how does `df.astype('i')` lead to a wrong answer (maybe you have data where it becomes slightly less than a whole number?). Generally speaking relying on a float->int cast without some explicit handling of floating point error is not very advisable. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11671169",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-11671169",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 11671169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNjcxMTY5",
    "user": {
      "login": "yarivm",
      "id": 2735044,
      "node_id": "MDQ6VXNlcjI3MzUwNDQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2735044?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yarivm",
      "html_url": "https://github.com/yarivm",
      "followers_url": "https://api.github.com/users/yarivm/followers",
      "following_url": "https://api.github.com/users/yarivm/following{/other_user}",
      "gists_url": "https://api.github.com/users/yarivm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yarivm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yarivm/subscriptions",
      "organizations_url": "https://api.github.com/users/yarivm/orgs",
      "repos_url": "https://api.github.com/users/yarivm/repos",
      "events_url": "https://api.github.com/users/yarivm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yarivm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-25T09:26:15Z",
    "updated_at": "2012-12-25T09:26:15Z",
    "author_association": "NONE",
    "body": "1) Yes, I multiply by 1e6 before converting, in attempt to retrieve the digits. 2) You are right, float->int is problematic in general.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-24862548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 24862548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyNTQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:36:53Z",
    "updated_at": "2013-09-21T13:36:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as not a bug\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50102731",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-50102731",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 50102731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTAyNzMx",
    "user": {
      "login": "mdmueller",
      "id": 6729036,
      "node_id": "MDQ6VXNlcjY3MjkwMzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6729036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mdmueller",
      "html_url": "https://github.com/mdmueller",
      "followers_url": "https://api.github.com/users/mdmueller/followers",
      "following_url": "https://api.github.com/users/mdmueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/mdmueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mdmueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mdmueller/subscriptions",
      "organizations_url": "https://api.github.com/users/mdmueller/orgs",
      "repos_url": "https://api.github.com/users/mdmueller/repos",
      "events_url": "https://api.github.com/users/mdmueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mdmueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T02:44:07Z",
    "updated_at": "2014-07-25T02:44:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I might be missing something here (no expert on floating-point storage), but isn't this still an issue? For highly precise values, `read_csv()` doesn't seem to have the closest approximation:\n\n```\nIn [3]: df = pd.read_csv(StringIO('1.2345678901234567890'), header=None)\n\nIn [4]: df[0][0]\nOut[4]: 1.2345678901234569\n\nIn [5]: df[0][0].hex()\nOut[5]: '0x1.3c0ca428c59fcp+0'\n\nIn [6]: val = np.float64('1.2345678901234567890')\n\nIn [7]: val\nOut[7]: 1.2345678901234567\n\nIn [8]: val.hex()\nOut[8]: '0x1.3c0ca428c59fbp+0'\n```\n\nI guess I'm just wondering what the rationale is behind using `xstrtod()` rather than `strtod()` (which agrees exactly with numpy's conversion). I've noticed that `xstrtod()` is quite a bit faster than `strtod()` for high-precision values, but this seems to be because `xstrtod()` bypasses the correction loop in `strtod()` and therefore isn't guaranteed to be within 0.5 ULP.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/50153475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2566#issuecomment-50153475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2566",
    "id": 50153475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTUzNDc1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-25T14:05:06Z",
    "updated_at": "2014-07-25T14:05:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@amras1 I think that is exactly the reason, speed of parsing for floats. The difference is immaterial as its below the precision of floats anyhow.\n"
  }
]
