[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47363937",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-47363937",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 47363937,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzYzOTM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T15:45:39Z",
    "updated_at": "2014-06-27T15:45:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may have worked < 0.14.0. But i am not sure that their is a guarantee on `sys.exc_info()` at all. You cannot guarantee that an operation will NOT raise an exception (or use an exception internally). `sys.exc_info()` is just the last raised one.\n\nI wouldn't do it this way, instead:\n\n```\ntry:\n    raise KeyError()\nexcept Exception as e:\n    ......\n    raise e\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47368430",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-47368430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 47368430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzY4NDMw",
    "user": {
      "login": "keeganmccallum",
      "id": 3915058,
      "node_id": "MDQ6VXNlcjM5MTUwNTg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3915058?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keeganmccallum",
      "html_url": "https://github.com/keeganmccallum",
      "followers_url": "https://api.github.com/users/keeganmccallum/followers",
      "following_url": "https://api.github.com/users/keeganmccallum/following{/other_user}",
      "gists_url": "https://api.github.com/users/keeganmccallum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keeganmccallum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keeganmccallum/subscriptions",
      "organizations_url": "https://api.github.com/users/keeganmccallum/orgs",
      "repos_url": "https://api.github.com/users/keeganmccallum/repos",
      "events_url": "https://api.github.com/users/keeganmccallum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keeganmccallum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T16:14:52Z",
    "updated_at": "2014-06-27T16:14:52Z",
    "author_association": "NONE",
    "body": "The example I gave is contrived, in an attempt to recreate the issue, We have a complex error handling system, and basically, we raise without arguments to preserve the traceback of the error. In your example the traceback would lead to our error handing module, and not the original traceback which is not our intended result. Also, if an exception is raised in our error handling system, this does not pose an issue as we would like to be properly notified of this and can fix the issue, but as sys.exc_info() is completely wiped clean, not populated with a new error, this is not the case. Also, no exception is raised in this instance, the previous exception is just wiped clean.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47369815",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-47369815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 47369815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzY5ODE1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T16:22:07Z",
    "updated_at": "2014-06-27T16:22:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "why don't you just save a reference to `sys.exc_info()` at the beginning of the exception?\n\nexceptions can certainly be raised during exceptions, so their is no guarantee on this (unless you can point to a source otherwise).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47379620",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-47379620",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 47379620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Mzc5NjIw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T17:48:40Z",
    "updated_at": "2014-06-27T17:49:10Z",
    "author_association": "MEMBER",
    "body": "I think this is a bug. Shouldn't `sys.exc_info()` be preserved? Why would it be `None`'d out at all except in those rare cases pointed out in the documentation?\n\nI think this is related to the `max_rows` display option + the display of both string and number columns. Here's an example (I have my `max_rows` set to 15):\n\n`max_rows` + string and numeric\n\n```\nIn [30]: try:\n    raise KeyError()\nexcept:\n    print(df.iloc[:pd.options.display.max_rows, [0, -1]])\n    print(sys.exc_info())\n   ....:\n    SepalLength         Name\n0           5.1  Iris-setosa\n1           4.9  Iris-setosa\n2           4.7  Iris-setosa\n3           4.6  Iris-setosa\n4           5.0  Iris-setosa\n5           5.4  Iris-setosa\n6           4.6  Iris-setosa\n7           5.0  Iris-setosa\n8           4.4  Iris-setosa\n9           4.9  Iris-setosa\n10          5.4  Iris-setosa\n11          4.8  Iris-setosa\n12          4.8  Iris-setosa\n13          4.3  Iris-setosa\n14          5.8  Iris-setosa\n(<type 'exceptions.KeyError'>, KeyError(), <traceback object at 0x7f45b9a97a28>)\n```\n\n`max_rows` + 1 + string and numeric\n\n```\nIn [33]: try:\n    raise KeyError()\nexcept:\n    print(df.iloc[:pd.options.display.max_rows + 1, [0, -1]])\n    print(sys.exc_info())\n   ....:\n    SepalLength         Name\n0           5.1  Iris-setosa\n1           4.9  Iris-setosa\n2           4.7  Iris-setosa\n3           4.6  Iris-setosa\n4           5.0  Iris-setosa\n5           5.4  Iris-setosa\n6           4.6  Iris-setosa\n..          ...          ...\n9           4.9  Iris-setosa\n10          5.4  Iris-setosa\n11          4.8  Iris-setosa\n12          4.8  Iris-setosa\n13          4.3  Iris-setosa\n14          5.8  Iris-setosa\n15          5.7  Iris-setosa\n\n[16 rows x 2 columns]\n(None, None, None)\n```\n\n`max_rows` + only numeric\n\n```\nIn [34]: try:\n    raise KeyError()\nexcept:\n    print(df.iloc[:pd.options.display.max_rows + 1, [0]])\n    print(sys.exc_info())\n   ....:\n    SepalLength\n0           5.1\n1           4.9\n2           4.7\n3           4.6\n4           5.0\n5           5.4\n6           4.6\n..          ...\n9           4.9\n10          5.4\n11          4.8\n12          4.8\n13          4.3\n14          5.8\n15          5.7\n\n[16 rows x 1 columns]\n(<type 'exceptions.KeyError'>, KeyError(), <traceback object at 0x7f45b9a95908>)\n```\n\n`max_rows` + _only_ string\n\n```\nIn [35]: try:\n    raise KeyError()\nexcept:\n    print(df.iloc[:pd.options.display.max_rows + 1, [-1]])\n    print(sys.exc_info())\n   ....:\n           Name\n0   Iris-setosa\n1   Iris-setosa\n2   Iris-setosa\n3   Iris-setosa\n4   Iris-setosa\n5   Iris-setosa\n6   Iris-setosa\n..          ...\n9   Iris-setosa\n10  Iris-setosa\n11  Iris-setosa\n12  Iris-setosa\n13  Iris-setosa\n14  Iris-setosa\n15  Iris-setosa\n\n[16 rows x 1 columns]\n(<type 'exceptions.KeyError'>, KeyError(), <traceback object at 0x7f45b9a97878>)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47403754",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-47403754",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 47403754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDAzNzU0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T21:44:35Z",
    "updated_at": "2014-06-27T21:44:35Z",
    "author_association": "MEMBER",
    "body": "This has to be one of the most esoteric bugs i've ever tracked down.\n\nI _think_ it's related to using `yield` from within Cython:\n\ncheck out this notebook:\n\nhttp://nbviewer.ipython.org/github/cpcloud/cython_hell/blob/master/cython_hell.ipynb\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47403897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-47403897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 47403897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDAzODk3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T21:46:40Z",
    "updated_at": "2014-06-27T21:46:40Z",
    "author_association": "MEMBER",
    "body": "The reason some of the above examples succeed has to do with concatenation over a single block.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47408280",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-47408280",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 47408280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDA4Mjgw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T22:49:02Z",
    "updated_at": "2014-06-27T22:49:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "well yield is like a continued function\nthe stack is saved, you execute something else, then a stack pop\n\nguessing here - it's possible that cython doesn't guarantee anything with this context switch because of efficiency , or maybe you need a hint to cython like the error? that signals that the operation may raise \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47408574",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-47408574",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 47408574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDA4NTc0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T22:54:33Z",
    "updated_at": "2014-06-27T22:54:33Z",
    "author_association": "MEMBER",
    "body": "Right I always assumed that yield essentially takes a snapshot of the stack. Guess that doesn't apply with Cython with yield \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149720628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7590#issuecomment-149720628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7590",
    "id": 149720628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcyMDYyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T22:26:36Z",
    "updated_at": "2015-10-20T22:26:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as stale. pls reopen if still an issue.\n"
  }
]
