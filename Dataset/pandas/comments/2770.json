[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/12859486",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-12859486",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 12859486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyODU5NDg2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-01-29T21:36:59Z",
    "updated_at": "2013-01-29T21:36:59Z",
    "author_association": "NONE",
    "body": "related #2655 (maybe)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13335417",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-13335417",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 13335417,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzM1NDE3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-09T18:08:00Z",
    "updated_at": "2013-02-09T18:08:00Z",
    "author_association": "MEMBER",
    "body": "This is kind of a tricky problem, e.g. when should you \"recompute\" the levels? Have to table this until I have a chance to look a bit more deeply. Another solution is to exclude levels with no observations in such a groupby\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13335751",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-13335751",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 13335751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzM1NzUx",
    "user": {
      "login": "darindillon",
      "id": 2766856,
      "node_id": "MDQ6VXNlcjI3NjY4NTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2766856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darindillon",
      "html_url": "https://github.com/darindillon",
      "followers_url": "https://api.github.com/users/darindillon/followers",
      "following_url": "https://api.github.com/users/darindillon/following{/other_user}",
      "gists_url": "https://api.github.com/users/darindillon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darindillon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darindillon/subscriptions",
      "organizations_url": "https://api.github.com/users/darindillon/orgs",
      "repos_url": "https://api.github.com/users/darindillon/repos",
      "events_url": "https://api.github.com/users/darindillon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darindillon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-09T18:24:54Z",
    "updated_at": "2013-02-09T18:27:34Z",
    "author_association": "NONE",
    "body": "Well, is there any easy workaround I can use? Like if I know I have this problem, can I manually call a .rebuild_index() or something? I've played around with all the obvious possibilities (short of creating a brand new dataframe) and can't find any workaround.\n  It's the last line (the .groupby(...).sum() ) that I care about -- that's the one I need to make the bad data go away. \n\nEDIT: better clarification. I have one function that builds the dataset and drops the rows. At that point, I know I'm in the situation described in this issue, and I'd like to do my workaround there.  But then the .groupby().sum() happens much much later in a different function. I could easily hack that second function as you say (exclude levels with no observations) but it makes more sense to keep my workaround code in the first function. Any ideas?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13344264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-13344264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 13344264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzQ0MjY0",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-10T04:20:40Z",
    "updated_at": "2013-02-10T04:20:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "How about the workaround that I proposed for #2655 ? In your case maybe \n\n``` python\nx.groupby(x.index.get_level_values(1)).sum() \n```\n\nshould do the correct thing, if I'm not wrong? I don't know why, but the result of this function delivers updated values.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13344591",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-13344591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 13344591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzQ0NTkx",
    "user": {
      "login": "darindillon",
      "id": 2766856,
      "node_id": "MDQ6VXNlcjI3NjY4NTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2766856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darindillon",
      "html_url": "https://github.com/darindillon",
      "followers_url": "https://api.github.com/users/darindillon/followers",
      "following_url": "https://api.github.com/users/darindillon/following{/other_user}",
      "gists_url": "https://api.github.com/users/darindillon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darindillon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darindillon/subscriptions",
      "organizations_url": "https://api.github.com/users/darindillon/orgs",
      "repos_url": "https://api.github.com/users/darindillon/repos",
      "events_url": "https://api.github.com/users/darindillon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darindillon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-10T05:08:28Z",
    "updated_at": "2013-02-10T05:08:28Z",
    "author_association": "NONE",
    "body": "Yes that works; but the code that does .groupby().sum() is in one function and the code that removes the value from the table is in another fxn. It would be much much clear to use a workaround that cleans up the problem with the dataframe in the fxn that creates it -- that way any other fxn could use the dataframe without having to do your trick.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/13345823",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-13345823",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 13345823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzQ1ODIz",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-02-10T08:07:11Z",
    "updated_at": "2013-02-10T08:07:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ehm, can you confirm that this problem still exists with 0.10.1?\nI just tried your example, and I don't see a dummy row with index \"deleteMe\" ?\n\n``` python\nIn [9]: print x.index.levels\n[Index([deleteMe, keepMe, keepMeToo], dtype=object), Int64Index([1, 2, 3], dtype=int64)]\n\nIn [10]: x.groupby(level='first').sum()\nOut[10]: \n           second  third\nfirst                   \nkeepMe          2      9\nkeepMeToo       3      9\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14896785",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-14896785",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 14896785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODk2Nzg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-14T11:06:49Z",
    "updated_at": "2013-03-14T11:06:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "is this closable? @tavistmorph does this exist in 0.11-dev?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14915097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-14915097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 14915097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTE1MDk3",
    "user": {
      "login": "darindillon",
      "id": 2766856,
      "node_id": "MDQ6VXNlcjI3NjY4NTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2766856?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darindillon",
      "html_url": "https://github.com/darindillon",
      "followers_url": "https://api.github.com/users/darindillon/followers",
      "following_url": "https://api.github.com/users/darindillon/following{/other_user}",
      "gists_url": "https://api.github.com/users/darindillon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darindillon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darindillon/subscriptions",
      "organizations_url": "https://api.github.com/users/darindillon/orgs",
      "repos_url": "https://api.github.com/users/darindillon/repos",
      "events_url": "https://api.github.com/users/darindillon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darindillon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-14T17:05:14Z",
    "updated_at": "2013-03-14T17:05:14Z",
    "author_association": "NONE",
    "body": "It's still an issue. Still happens for me in 10.1 and 0.11 (as of the last time I pulled, at least). Just run the code snippet in my orig post and you can see it. \n\nMichael -- the deleted row appears in your output above on step #9 (\"deleteMe\" should not be there since we deleted it) and then it appears in the output for step 10 (\"first\" should not appear since all the rows with the \"first\" value were deleted). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14939314",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-14939314",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 14939314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM5MzE0",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-15T01:26:27Z",
    "updated_at": "2013-03-15T01:26:27Z",
    "author_association": "MEMBER",
    "body": "This isn't really a bug. Perhaps an option should be added to return an array of _observed_ values in a particular level in the index (which is what you're after)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14939496",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-14939496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 14939496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTM5NDk2",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-15T01:34:06Z",
    "updated_at": "2013-03-15T01:34:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you precise what you mean by _observed_? Do you mean, that the object is a _view_ into the original object (I don't know if it is), and that's why it still contains the 'deleteMe' index?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/14940814",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-14940814",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 14940814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTQwODE0",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-15T02:29:41Z",
    "updated_at": "2013-03-15T02:29:41Z",
    "author_association": "MEMBER",
    "body": "The levels are not computed from the actual observed values. For example, in R you can have a factor (categorical variable) in which some distinct values are not observed:\n\n```\n> d\n[1] b c b c\nLevels: a b c\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29544754",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29544754",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29544754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ0NzU0",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-30T03:10:34Z",
    "updated_at": "2013-11-30T03:11:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Version: '0.12.0-1184-gc73b957'\nThe MultiIndex still shows all previously existing index values and therefore still is confusing to the user who looks at it, after chopping off the 'deleteMe' rows:\n\n``` python\nIn [10]: x.index\nOut[10]:\nMultiIndex(levels=[[u'deleteMe', u'keepMe', u'keepMeToo'], [1, 2, 3]],\n           labels=[[1, 2], [1, 2]],\n           names=[u'first', u'second'])\n```\n\nbut at least the groupby does not create an empty row anymore for previously existing indices:\n\n``` python\nIn [12]: x.groupby(level='first').sum()\nOut[12]:\n           second  third\nfirst\nkeepMe          2      9\nkeepMeToo       3      9\n\n[2 rows x 2 columns]\n```\n\nso the discussion now boils down to the confusion of looking at df.index. I would argue, as I am looking often at the index to see what I am working with, that I would still be very puzzled by the index showing old values and from that point on I would not trust the results anymore.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29545764",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29545764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29545764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ1NzY0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-30T04:42:36Z",
    "updated_at": "2013-11-30T04:42:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you print that MultiIndex, it looks like what you want:\n\n``` python\nIn [7]: mi\nOut[7]:\nMultiIndex(levels=[[u'deleteMe', u'keepMe', u'keepMeToo'], [1, 2, 3]],\n           labels=[[1, 2], [1, 2]],\n           names=[u'first', u'second'])\n\nIn [8]: print mi\nfirst      second\nkeepMe     2\nkeepMeToo  3\n```\n\nThus, a simple way to handle this is to examine your indices with print rather than the repr that IPython shows you.\n\nThe MultiIndex repr isn't really intuitive in any case, unless you understand that it's a categorical and that labels represent the integer positions of the levels at each location. You shouldn't need to care about that as a consumer of a MultiIndex.  And if you understand the internal representation, you can then also understand why it doesn't matter whether there are extra levels.\n\nThe issue becomes clearer with a more complicated MI:\n\n``` python\nIn [2]: ind = pd.MultiIndex.from_arrays([['a', 'a', 'b', 'b', 'c'], ['d', 'e', 'f', 'g', 'h']])\n\nIn [3]: ind\nOut[3]:\nMultiIndex(levels=[[u'a', u'b', u'c'], [u'd', u'e', u'f', u'g', u'h']],\n           labels=[[0, 0, 1, 1, 2], [0, 1, 2, 3, 4]])\n\nIn [4]: print ind\n\na  d\n   e\nb  f\n   g\nc  h\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29545806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29545806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29545806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ1ODA2",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-30T04:47:38Z",
    "updated_at": "2013-11-30T04:48:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Based on your previous comment, it seems like the key issue here (groupby showing unused levels) is now resolved. Can we close this or edit this issue to be a feature request? (e.g., method to allow MI to consolidate its levels)\n\nAs an aside, my perspective is that it's more intuitive to have the entire level set remain, because it makes slices very clear (and you can share the memory for storing levels):\n\n``` python\nIn [15]: ind\nOut[15]:\nMultiIndex(levels=[[u'a', u'b', u'c'], [u'd', u'e', u'f', u'g', u'h']],\n           labels=[[0, 0, 1, 1, 2], [0, 1, 2, 3, 4]])\n\nIn [16]: ind[:2]\nOut[16]:\nMultiIndex(levels=[[u'a', u'b', u'c'], [u'd', u'e', u'f', u'g', u'h']],\n           labels=[[0, 0], [0, 1]])\n\nIn [17]: ind[2:4]\nOut[17]:\nMultiIndex(levels=[[u'a', u'b', u'c'], [u'd', u'e', u'f', u'g', u'h']],\n           labels=[[1, 1], [2, 3]])\n\nIn [18]: ind[4:5]\nOut[18]:\nMultiIndex(levels=[[u'a', u'b', u'c'], [u'd', u'e', u'f', u'g', u'h']],\n           labels=[[2], [4]])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29547063",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29547063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29547063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ3MDYz",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-30T06:48:24Z",
    "updated_at": "2013-11-30T06:48:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would argue that to use repr as a way to examine pandas objects is the default and advertised use case, as pandas docs are full of that, so I don't find it really satisfying and a tad inconsistent that I have to resort to printing an object for clarity while repr works for all (most?) other cases.\nI don't really understand what you want to show in your last comment. What does it have to do with deleted indexes remaining in the index?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29547103",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29547103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29547103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTQ3MTAz",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-30T06:52:15Z",
    "updated_at": "2013-11-30T11:01:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also would like to point out that the pandas core team does not seem to have come to a consistent conclusion how to handle this, as we have 3 issue related to this, and in one (#2655) the claim is made that it is no bug, while the 2 others (#3686 and this one) have been marked as a bug. Maybe you guys should have an internal discussion about it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29551251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29551251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29551251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTUxMjUx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-30T12:07:54Z",
    "updated_at": "2013-11-30T22:13:59Z",
    "author_association": "NONE",
    "body": "@michaelaye, I think you (legitimately) [missed](https://github.com/pydata/pandas/issues/3686#issuecomment-18321336) the point wes was making. My guess is that you're under a misconception \nof the role of `levels`. It is not the equivalent of a regular  `Index` labels, that equivalent is `mi.labels`.\nwes made this point to you, and so has jtratner https://github.com/pydata/pandas/issues/2655#issuecomment-29418847 to no avail.\n\nTest yourself with this example:\n\n``` python\nIn [10]: MultiIndex.from_tuples([[0,1],[0,2]])\nOut[10]: \nMultiIndex(levels=[[0], [1, 2]],\n           labels=[[0, 0], [0, 1]])\n```\n\nDo you understand why the first element in levels only has one item? \nHave you noticed that the number of elements in levels is not directly related to the \nnumber of rows in the frame? Then, it make sense that rows could be deleted without \n`levels` logically having to change?\n\nYou may find it counter-intuitive (I did in the past), but then the problem to be addressed\nis the misunderstanding , not the implementation. Hopefully, now you know.\n\nThe fact that a groupby emitted a group for entries that appear in `levels` but not in `labels`\n(What wes meant by \"unobserved\") _was_ a bug, and it has been fixed. \n\nI would venture a guess that the reason this non-bug issue has lingered for so long is\nlack of time or significance or, indeed, patience to spell things out like this and **not** a \npaucity of managerial suggestions or demerits from you.\n\nAlso:\n1. issue labels are not holy scripture. <del>(removed \"bug\" label)</del> The extra groupby\nrow was a bug though.\n\nI agree with @jtratner, we can close this.\nIf someone wants that consolidate method he suggested, open an issue. \nPersonally, I don't see the need.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29561524",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29561524",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29561524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTYxNTI0",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-30T21:32:14Z",
    "updated_at": "2013-11-30T21:32:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you for your efforts. I indeed was puzzled by the meaning of 'unobserved' and 'observed' and finally understand Wes' comment. Still, there are API calls that take levels as an argument, e.g. groupby(). If other users don't find it confusing to have a list of levels not representing the current state, than it must be me.\nI am sad to see that my effort to bring these issues forward is interpreted as demerit of your excellent work and apologize if I upset anyone.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29562100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29562100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29562100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTYyMTAw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-30T22:04:39Z",
    "updated_at": "2013-11-30T22:04:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you're finding something wrong with groupby (ie you end up with spurious\nlevels in final output) can you post it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29566199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29566199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29566199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTY2MTk5",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-01T03:00:40Z",
    "updated_at": "2013-12-01T03:01:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't have anything showing up wrong, and I didn't mean to imply that. My work-style is very much relying on looking at indices and columns with `__repr__` because most of the time my dataframes are just too big to be helpful to be displayed. Your suggesting of printing it solves potential confusions with having glimpsed the content of `levels`, but it is now the only object I would need to `print`. Any chance the definition of `__str__` and `__repr__` could be swapped for the MultiIndex or would that mess up other things?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29566694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29566694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29566694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTY2Njk0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-01T03:43:22Z",
    "updated_at": "2013-12-01T03:43:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelaye unlikely to happen - [`repr`](http://docs.python.org/2/library/functions.html#func-repr) is set to be something that's potentially `eval`'able. Makes it much easier to reproduce indexes when their repr can be copy/pasted.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29566725",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-29566725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 29566725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTY2NzI1",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars1.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-01T03:46:34Z",
    "updated_at": "2013-12-01T03:46:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Understood. Thanks for your patience.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30433609",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-30433609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 30433609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMzNjA5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-12T15:47:28Z",
    "updated_at": "2013-12-12T15:47:28Z",
    "author_association": "NONE",
    "body": "The pandas API doesn't fit in my head anymore. For reference `df.index.get_level_values` \nmight be relevent for whatever use case this was a problem for. DOes the right thing.\n\n``` python\n    ...: \n    ...: x = pandas.DataFrame([['deleteMe',1, 9],['keepMe',2, 9],['keepMeToo',3, 9]], columns=['first','second', 'third'])\n    ...: x = x.set_index(['first','second'], drop=False)\n    ...: \n    ...: print x.index.get_level_values(0)\n    ...: x = x[x['first'] != 'deleteMe'] #Chop off all the 'deleteMe' rows\n    ...: print x.index.get_level_values(0)\n    ...: \nIndex([u'deleteMe', u'keepMe', u'keepMeToo'], dtype='object')\nIndex([u'keepMe', u'keepMeToo'], dtype='object')\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72220847",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-72220847",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 72220847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjIwODQ3",
    "user": {
      "login": "robertmuil",
      "id": 637885,
      "node_id": "MDQ6VXNlcjYzNzg4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/637885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robertmuil",
      "html_url": "https://github.com/robertmuil",
      "followers_url": "https://api.github.com/users/robertmuil/followers",
      "following_url": "https://api.github.com/users/robertmuil/following{/other_user}",
      "gists_url": "https://api.github.com/users/robertmuil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robertmuil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robertmuil/subscriptions",
      "organizations_url": "https://api.github.com/users/robertmuil/orgs",
      "repos_url": "https://api.github.com/users/robertmuil/repos",
      "events_url": "https://api.github.com/users/robertmuil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robertmuil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T15:46:31Z",
    "updated_at": "2015-01-30T15:46:31Z",
    "author_association": "NONE",
    "body": "I'm afraid I don't understand why there is no easy way of instructing the dataframe to drop absent levels.\n\nFor a clear use-case: counting the number of unique levels present in a data series is a computationally intensive task: if it can be done once, when `drop` or similar is called, then one need only look at the `index.levels` to determine the unique levels, rather than use the clunky, and slow, `data.index.get_level_values(level='whatever').unique()`.\n\nI know this has been discussed considerably, but I did not see any mention of this 'unique counting' use-case, which I see as rather important.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72224366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-72224366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 72224366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjI0MzY2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T16:07:46Z",
    "updated_at": "2015-01-30T16:07:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@robertmuil this is an efficiency argument. It _can_ be done on selection, the problem is the user may be doing multiple things (e.g.. selections or whatnot), and it is inefficient to do it then (this _can_ be an expensive operation). So it is completely up to the user to rebuild or not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72226850",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-72226850",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 72226850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjI2ODUw",
    "user": {
      "login": "robertmuil",
      "id": 637885,
      "node_id": "MDQ6VXNlcjYzNzg4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/637885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robertmuil",
      "html_url": "https://github.com/robertmuil",
      "followers_url": "https://api.github.com/users/robertmuil/followers",
      "following_url": "https://api.github.com/users/robertmuil/following{/other_user}",
      "gists_url": "https://api.github.com/users/robertmuil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robertmuil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robertmuil/subscriptions",
      "organizations_url": "https://api.github.com/users/robertmuil/orgs",
      "repos_url": "https://api.github.com/users/robertmuil/repos",
      "events_url": "https://api.github.com/users/robertmuil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robertmuil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T16:22:38Z",
    "updated_at": "2015-01-30T16:22:38Z",
    "author_association": "NONE",
    "body": "@jreback I see, that makes a lot of sense. Would it not be possible, though, to provide a flag to the `drop` function which causes this rebuild to occur? Even if `drop` is used under the hood by the slicing / selection operators, as long as the default is not to rebuild, this shouldn't have any impact at all, just allow the user to specify it when they are dropping the items, and thus get a more intuitively consistent DataFrame from the drop operation.\n\nIt is also unclear to me what the recommended way to rebuild the levels of the index is: is it by `reset_index().set_index(...)`?\n\nThanks very much for your quick response, by the way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72228116",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-72228116",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 72228116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjI4MTE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T16:30:06Z",
    "updated_at": "2015-01-30T16:30:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you put up a simple example of what you are doing?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72433686",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-72433686",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 72433686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNDMzNjg2",
    "user": {
      "login": "robertmuil",
      "id": 637885,
      "node_id": "MDQ6VXNlcjYzNzg4NQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/637885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robertmuil",
      "html_url": "https://github.com/robertmuil",
      "followers_url": "https://api.github.com/users/robertmuil/followers",
      "following_url": "https://api.github.com/users/robertmuil/following{/other_user}",
      "gists_url": "https://api.github.com/users/robertmuil/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robertmuil/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robertmuil/subscriptions",
      "organizations_url": "https://api.github.com/users/robertmuil/orgs",
      "repos_url": "https://api.github.com/users/robertmuil/repos",
      "events_url": "https://api.github.com/users/robertmuil/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robertmuil/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-02T10:20:31Z",
    "updated_at": "2015-02-02T10:20:31Z",
    "author_association": "NONE",
    "body": "Sure:\n\n```\n> x = pandas.DataFrame([['deleteMe',1, 9],['keepMe',2, 9],['keepMeToo',3, 9]], columns=['first','second', 'third'])\n> x.set_index(['first', 'second'], inplace=True)\n```\n\nBefore dropping levels, the following are consistent:\n\n```\n> len(x.index.levels[0])\n3\n> len(x.index.get_level_values(level='first').unique())\n3\n```\n\nBut afterward, not:\n\n```\n> x.drop('deleteMe', level='first', inplace=True)\n> len(x.index.levels[0])\n3\n> len(x.index.get_level_values(level='first').unique())\n2\n```\n\nAnd this can be important, because the `get_level_values().unique()` is **hundreds** of times slower. So, I thought that a possibility would be to allow the drop() function to explicitly be told to reindex:\n\n```\n> x.drop('deleteMe', level='first', inplace=True, reindex=True)\n> len(x.index.levels[0])\n2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/76500001",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-76500001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 76500001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2NTAwMDAx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-02-28T00:54:17Z",
    "updated_at": "2015-02-28T00:54:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@robertmuil \n\nsorry, forgot to respond to you.\n\nHere is an easy way to do this\n\ncreate the new frame\n(FYI in general doing things `inplace` IMHO is confusing to the user and doesn't help with speed at all)\n\n```\nIn [43]: dropped = x.drop('deleteMe', level='first')\n\nIn [44]: dropped\nOut[44]: \n                  third\nfirst     second       \nkeepMe    2           9\nkeepMeToo 3           9\n\nIn [46]: dropped.index.get_level_values(level='first').unique()\nOut[46]: array(['keepMe', 'keepMeToo'], dtype=object)\n```\n\nThis returns a new frame (You can assign alternatively if you want)\n\n```\nIn [47]: dropped.set_index(pd.MultiIndex.from_tuples(dropped.index.values))\nOut[47]: \n             third\nkeepMe    2      9\nkeepMeToo 3      9\nIn [50]: dropped.set_index(pd.MultiIndex.from_tuples(dropped.index.values)).index.get_level_values(level=0).unique()\nOut[50]: array(['keepMe', 'keepMeToo'], dtype=object)\n\n# has only the new values\nIn [51]: dropped.set_index(pd.MultiIndex.from_tuples(dropped.index.values)).index.levels[0]                         \nOut[51]: Index([u'keepMe', u'keepMeToo'], dtype='object')\n```\n\nThis is pretty cheap to do (though not completely free).\n\nI suppose you could add this as an option to `drop` if you'd like. (and I would say `reindex` would be a fine kw for this).\n\nlike to do a pull-request?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/242121659",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2770#issuecomment-242121659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2770",
    "id": 242121659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjEyMTY1OQ==",
    "user": {
      "login": "pjadzinsky",
      "id": 12551293,
      "node_id": "MDQ6VXNlcjEyNTUxMjkz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12551293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pjadzinsky",
      "html_url": "https://github.com/pjadzinsky",
      "followers_url": "https://api.github.com/users/pjadzinsky/followers",
      "following_url": "https://api.github.com/users/pjadzinsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/pjadzinsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pjadzinsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pjadzinsky/subscriptions",
      "organizations_url": "https://api.github.com/users/pjadzinsky/orgs",
      "repos_url": "https://api.github.com/users/pjadzinsky/repos",
      "events_url": "https://api.github.com/users/pjadzinsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pjadzinsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-24T16:10:13Z",
    "updated_at": "2016-08-24T16:10:13Z",
    "author_association": "NONE",
    "body": "Hi,\nI know this is a somewhat old thread but I wanted to pitch in since I see some inconsistencies and wanted to learn whether this is my misunderstanding of something fundamental or this should be treated as a bug\n\nHere is a simple example.\n\n```\nIn [22]: df = pd.DataFrame(np.random.randint(0,4,(3,2)))\n\nIn [23]: df2 = pd.concat([df,df,df], keys=['a','b','c'], names=[1,2])\n\nIn [24]: df2\nOut[24]: \n     0  1\n1 2      \na 0  2  0\n  1  0  2\n  2  2  0\nb 0  2  0\n  1  0  2\n  2  2  0\nc 0  2  0\n  1  0  2\n  2  2  0\n```\n\nAnd now if I do:\n\n```\nIn [27]: df2.loc[['a']].index\nOut[27]: \nMultiIndex(levels=[[u'a'], [0, 1, 2]],\n           labels=[[0, 0, 0], [0, 1, 2]],\n           names=[1, 2])\n\nIn [28]: df2.loc[['a','b']].index\nOut[28]: \nMultiIndex(levels=[[u'a', u'b', u'c'], [0, 1, 2]],\n           labels=[[0, 0, 0, 1, 1, 1], [0, 1, 2, 0, 1, 2]],\n           names=[1, 2])\n```\n\nI was expecting the Multiindex to be either identical in both cases (based on the discussion on this thread) or that the last one (Out[28]) should be like this:\n\n```\n[MultiIndex(levels=[[u'a', u'b'], [0, 1, 2]],\n           labels=[[0, 0, 0, 1, 1, 1], [0, 1, 2, 0, 1, 2]],\n           names=[1, 2])\n```\n\nThanks in advance for clarifying my question and for an awesome package.\n"
  }
]
