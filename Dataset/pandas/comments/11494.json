[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152774233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11494#issuecomment-152774233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11494",
    "id": 152774233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc3NDIzMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-31T21:23:06Z",
    "updated_at": "2015-10-31T21:23:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "What are `X` and y?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152795024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11494#issuecomment-152795024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11494",
    "id": 152795024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjc5NTAyNA==",
    "user": {
      "login": "ShivangiM",
      "id": 8286633,
      "node_id": "MDQ6VXNlcjgyODY2MzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8286633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShivangiM",
      "html_url": "https://github.com/ShivangiM",
      "followers_url": "https://api.github.com/users/ShivangiM/followers",
      "following_url": "https://api.github.com/users/ShivangiM/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShivangiM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShivangiM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShivangiM/subscriptions",
      "organizations_url": "https://api.github.com/users/ShivangiM/orgs",
      "repos_url": "https://api.github.com/users/ShivangiM/repos",
      "events_url": "https://api.github.com/users/ShivangiM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShivangiM/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-01T05:33:36Z",
    "updated_at": "2015-11-01T05:33:55Z",
    "author_association": "NONE",
    "body": "X = pca.fit_transform(data)\nand y is are the label,  \ndef extrct_labels(filename):\n\n```\nn = len(filename)\ny = np.zeros(n,dtype = np.int32)\n\nfor i,filename in enumerate(filename): \n    # If 'check' string is in file name assign '0'\n    if 'check' in str(filename):\n        y[i] = 0\n    else:\n        y[i] = 1\nreturn y\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152822946",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11494#issuecomment-152822946",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11494",
    "id": 152822946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MjgyMjk0Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-01T12:35:22Z",
    "updated_at": "2015-11-01T12:35:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you give a copy-pastable example that reproduces the problem?\n\n> On Nov 1, 2015, at 00:33, ShivangiM notifications@github.com wrote:\n> \n> X = pca.fit_transform(data)\n> and y is are the label, def extrct_labels(filename):\n> \n> n = len(filename)\n> y = np.zeros(n,dtype = np.int32)\n> \n> for i,filename in enumerate(filename): \n>     # If 'check' string is in file name assign '0'\n>     if 'check' in str(filename):\n>         y[i] = 0\n>     else:\n>         y[i] = 1\n> return y\n> â€”\n> Reply to this email directly or view it on GitHub.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152951503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11494#issuecomment-152951503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11494",
    "id": 152951503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjk1MTUwMw==",
    "user": {
      "login": "ShivangiM",
      "id": 8286633,
      "node_id": "MDQ6VXNlcjgyODY2MzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8286633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ShivangiM",
      "html_url": "https://github.com/ShivangiM",
      "followers_url": "https://api.github.com/users/ShivangiM/followers",
      "following_url": "https://api.github.com/users/ShivangiM/following{/other_user}",
      "gists_url": "https://api.github.com/users/ShivangiM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ShivangiM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ShivangiM/subscriptions",
      "organizations_url": "https://api.github.com/users/ShivangiM/orgs",
      "repos_url": "https://api.github.com/users/ShivangiM/repos",
      "events_url": "https://api.github.com/users/ShivangiM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ShivangiM/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-02T08:35:39Z",
    "updated_at": "2015-11-02T09:05:11Z",
    "author_association": "NONE",
    "body": "Ya sure below is the code: \n\n```\nfrom scipy.misc import imread\nimport numpy as np\nimport os\nimport numpy as np\nfrom sklearn.decomposition import RandomizedPCA\nimport pandas as pd\nimport pylab as pl\nimg_dir = 'pics/'\npics = [img_dir+ f for f in os.listdir(img_dir)]\ndef extrct_labels(filename):\n\n    n = len(filename)\n    y = np.zeros(n,dtype = np.int32)\n\n    for i,filename in enumerate(filename): \n        # If 'check' string is in file name assign '0'\n        if 'check' in str(filename):\n            y[i] = 0\n        else:\n            y[i] = 1\n    return y\ndata = []\nfor pic in pics:\n    img = imread(pic)\n    img = img.flatten()\n    data.append(img)\n\ndata = np.array(data)\npca = RandomizedPCA(n_components=2)\nX = pca.fit_transform(data)\ndf = pd.DataFrame({\"x-1\": X[:,0], \"x-2\": X[:,1], \"label\": np.where(y==1, \"Driver's License\", \"Check\")})\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/152962739",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11494#issuecomment-152962739",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11494",
    "id": 152962739,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1Mjk2MjczOQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-02T09:08:55Z",
    "updated_at": "2015-11-02T09:08:55Z",
    "author_association": "MEMBER",
    "body": "@ShivangiM we don't have your directory of images handy, and using scikit-learn obscures the origin of this problem (see http://sscce.org/). Please try reproducing the issue using only numpy and pandas, if possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/154051258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11494#issuecomment-154051258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11494",
    "id": 154051258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NDA1MTI1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-05T12:56:04Z",
    "updated_at": "2015-11-05T12:56:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls provide a copy-pastable example that is runnable w/o your data (and ideally is just write before the DataFrame creation step).\n"
  }
]
