[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/436734718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23541#issuecomment-436734718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23541",
    "id": 436734718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNjczNDcxOA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-07T18:47:54Z",
    "updated_at": "2018-11-07T18:48:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "A few thoughts:\r\n\r\n1. Maybe rename `DataFrame.filter()` to `DataFrame.filter_axis()`, because that is what you are doing\r\n2. Maybe the title of this Issue should be \"Support selecting axis labels for MultiIndex via filters\"\r\n3. One could imagine having different filters that are applied to different axes at the same time, so I don't think that just adding a `level` argument is enough.  For example, if your first level was years `2000, 2001, ..., 2018` and your second level had quarters `Q1, Q2, Q3, Q4`, you might want to pick all years between 2010 and 2015, and just the first 2 quarters, so you need a filter for each level. On the other hand, you could just string the `filter()` calls together via method chaining to do that.  So maybe the idea of specifying filters for multiple levels at once is a bit too much of an enhancement.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437148638",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23541#issuecomment-437148638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23541",
    "id": 437148638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE0ODYzOA==",
    "user": {
      "login": "alimcmaster1",
      "id": 16733618,
      "node_id": "MDQ6VXNlcjE2NzMzNjE4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16733618?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alimcmaster1",
      "html_url": "https://github.com/alimcmaster1",
      "followers_url": "https://api.github.com/users/alimcmaster1/followers",
      "following_url": "https://api.github.com/users/alimcmaster1/following{/other_user}",
      "gists_url": "https://api.github.com/users/alimcmaster1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alimcmaster1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alimcmaster1/subscriptions",
      "organizations_url": "https://api.github.com/users/alimcmaster1/orgs",
      "repos_url": "https://api.github.com/users/alimcmaster1/repos",
      "events_url": "https://api.github.com/users/alimcmaster1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alimcmaster1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T20:43:04Z",
    "updated_at": "2018-11-08T20:43:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re point (1) that seems like a scary change? All users would have to change to that new method name, filter seems like a clear method name to me, axis is just something you are filtering on."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437151514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23541#issuecomment-437151514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23541",
    "id": 437151514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE1MTUxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T20:52:35Z",
    "updated_at": "2018-11-08T20:52:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "- we have discussed depreciating filter in the past. filter is something you do to rows (from SQL and R)\r\n\r\n- this is getting close to duplicating what .loc does (for multi axis filtering)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437158994",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23541#issuecomment-437158994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23541",
    "id": 437158994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE1ODk5NA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T21:16:59Z",
    "updated_at": "2018-11-08T21:16:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Not sure it duplicates what `.loc` does as it seems the advantage of `DataFrame.filter()` is that you can use `regex` or `like` arguments to select the columns you want.  The proposal here is to make `filter()` support `MultiIndex`.  If the idea is to deprecate `filter()`, then the rename I suggested makes the functionality more clear and separates it from the SQL/R interpretation.\r\n\r\nI don't feel strongly about this as this discussion made me aware of `filter()` in the first place, and now I will start using it to select specific columns."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437162679",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23541#issuecomment-437162679",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23541",
    "id": 437162679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE2MjY3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T21:29:39Z",
    "updated_at": "2018-11-08T21:29:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "- .loc should do inexact matching (maybe by a like keyword), but it’s already pretty overloaded and you would need to differentiate between exact and inexact matches per axis - .filter already uses .loc internally FYI\r\n\r\n- we depreciated .select a couple versions back to possibly use an alternative here - as it’s rhe correct verb for row filtering \r\n\r\nthe confusing issue here is that you are filtering in the labels and not the data (which is what filter implies), and also note that groupby.filter does something different as well "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437164914",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23541#issuecomment-437164914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23541",
    "id": 437164914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE2NDkxNA==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T21:37:18Z",
    "updated_at": "2018-11-08T21:37:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I think what @WillAyd was looking for was a way to do inexact matching on the labels for columns that are backed by a `MultiIndex`.  The current `filter()` only works for columns backed by a regular `Index`. \r\n\r\nSo one idea is to deprecate `filter()` because of the ambiguity in the name, and then have a `filter_axis()` or `filter_labels()` or `select_labels()` (or some other name) that allows inexact matching on either the row labels or column labels, even when either is backed by a `MultiIndex`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437166230",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23541#issuecomment-437166230",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23541",
    "id": 437166230,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzE2NjIzMA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-08T21:41:56Z",
    "updated_at": "2018-11-08T21:41:56Z",
    "author_association": "MEMBER",
    "body": "Yep thanks @Dr-Irv . I'm not obviously not tied to `filter` being the ultimate home here. `.loc` is certainly another option as well though the pattern matching / exclusion support might be a little tricky to stuff in that method alone"
  }
]
