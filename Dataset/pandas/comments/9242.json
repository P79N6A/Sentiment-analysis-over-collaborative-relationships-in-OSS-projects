[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69793472",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9242#issuecomment-69793472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9242",
    "id": 69793472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NzkzNDcy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T18:28:54Z",
    "updated_at": "2015-01-13T18:28:54Z",
    "author_association": "MEMBER",
    "body": "Your analysis is generally correct. The problem is, as you pointed out, that numpy does not have support for time zones, and the data in columns are stored as numpy arrays.\n\nThe DatetimeIndex provides some work-arounds to handle time zones at the level of the full index, and these workaround are not (yet) available for columns ('blocks'). But, as far as I understand, it would be possible to do something similar for the DatetimeBlock, but @jreback can shed more light on this. \n\nI think it is a rather big enhancement, but if your are interested in working on this, certainly welcome! Or, for improving timezone support in numpy itself, they are certainly also looking for help.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69800865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9242#issuecomment-69800865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9242",
    "id": 69800865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODAwODY1",
    "user": {
      "login": "quicknir",
      "id": 10457096,
      "node_id": "MDQ6VXNlcjEwNDU3MDk2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10457096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quicknir",
      "html_url": "https://github.com/quicknir",
      "followers_url": "https://api.github.com/users/quicknir/followers",
      "following_url": "https://api.github.com/users/quicknir/following{/other_user}",
      "gists_url": "https://api.github.com/users/quicknir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quicknir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quicknir/subscriptions",
      "organizations_url": "https://api.github.com/users/quicknir/orgs",
      "repos_url": "https://api.github.com/users/quicknir/repos",
      "events_url": "https://api.github.com/users/quicknir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quicknir/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T19:12:32Z",
    "updated_at": "2015-01-13T19:12:32Z",
    "author_association": "NONE",
    "body": "Thank your @jorisvandenbossche, very helpful. Handling it at the DatetimeBlock level seems a bit messier, e.g. different columns could have different timezone or precision information. I was thinking of a solution more like Categorical. As far as I can see Categorical seems to have all the right basic infrastructure in place to duplicate to create a DatetimeColumn, but naturally this is a very superficial viewpoint.\n\nSure, I am interested in at least looking at what would be required. The timezone support on the numpy side I actually view as adequate, in the sense that I think the datetime64[ns] is perfectly adequate as a low-level data type, and has the enormous advantage of being just exactly a 64 bit integer and nothing else. This, I think, should be handled on the pandas side.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69843902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9242#issuecomment-69843902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9242",
    "id": 69843902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5ODQzOTAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-13T23:40:09Z",
    "updated_at": "2015-01-13T23:40:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "dupe of #8260 \n\n@quicknir you are welcome to give this a go, its actually not that tricky, just inherit from `DatetimeBlock`. And the `NonConsolidatingBlock` mixin (so these blocks are not combined with one another). This is by far the cleanest soln. \n\n> > Sure, I am interested in at least looking at what would be required. The timezone support on the numpy side I actually view as adequate, in the sense that I think the datetime64[ns] is perfectly adequate as a low-level data type, and has the enormous advantage of being just exactly a 64 bit integer and nothing else. This, I think, should be handled on the pandas side.\n\n support on numpy is non-existant, though there are some proposals. just look thru the pandas codebase and you will appreciate the enormity of what @wesm did with timezones. \n"
  }
]
