[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285098064",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15602#issuecomment-285098064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15602",
    "id": 285098064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTA5ODA2NA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T16:52:24Z",
    "updated_at": "2017-03-08T16:53:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback What's up with these tests? AppVeyor passes, TravisCI fails once, CircleCI fails lots of times. Is this somehow platform-dependent or are they not all running the same tests...?\r\n\r\nFrom the CircleCI output it looks like the `_check_axes_shape` tests rely on the old behavior (`set_visible(False)`) of removing the subplots in unnecessary axis positions. As I understand it in the new behavior (`axis('off')`) the subplots exist, they just aren't displayed, so they still have a `BBox` and avoid confusing `tight_layout` with a `None`.\r\n\r\nThis *looks* like it's the only side effect. If so, I can just swap in 4s for 3s in the tests and they should all pass..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285115004",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15602#issuecomment-285115004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15602",
    "id": 285115004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExNTAwNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T17:50:53Z",
    "updated_at": "2017-03-08T17:50:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario all of the CI tests different things (well there is some overlap). For example appveyor doesn't run any slow tests. What you are changing are slow tests (most plotting tests are slow), so they pass. circleci mostly tests slow, but using different locales. Travis generally tests everything. only 1 run is slow.\r\n\r\nSo you need to click thru and examine the test failures and repro locally."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285146340",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15602#issuecomment-285146340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15602",
    "id": 285146340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTE0NjM0MA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T19:41:21Z",
    "updated_at": "2017-03-08T19:41:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Done, thanks.\r\n\r\nSuppose the following code example:\r\n\r\n```python\r\nimport numpy as np\r\nfrom numpy import random\r\n\r\nn = 100\r\n\r\ngender = np.random.choice(['Male', 'Female'], size=n)\r\nclassroom = np.random.choice(['A', 'B', 'C'], size=n)\r\n\r\nhist_df = pd.DataFrame({'gender': gender,\r\n                        'classroom': classroom,\r\n                        'height': random.normal(66, 4, size=n),\r\n                        'weight': random.normal(161, 32, size=n),\r\n                        'category': random.randint(4, size=n)})\r\nhist_df.hist(column='height', by=hist_df.category, layout=(4, 2))\r\n```\r\n\r\nThe user has reserved space for way more subplots than there are things to fill them.\r\n\r\nThe current behavior doesn't reserve any space for these additional plots:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/3466341/23720334/72628f66-040c-11e7-854d-9b0984751fdd.png)\r\n\r\nThe new behavior does:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/3466341/23720481/c4a0b186-040c-11e7-880e-f49c7df9ffb4.png)\r\n\r\n\r\nIt seems to me that it is impossible to have both this old space-preserving behavior and the new `tight_layout` compatibility at the same time. `tight_layout` effectively requires that everything has a bounding box, and having a bounding box requires space be reserved for said bounding box. So you can have one, or the other, but not both.\r\n\r\nI don't think this old space-saving behavior is very useful, so I think that this is an acceptable trade-off to make. The user is manually specifying a layout that doesn't actually make sense; `pandas` doesn't necessarily *have to* conform the output to something that does. We can instead hold the user to providing input that makes sense in the first place."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285149600",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15602#issuecomment-285149600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15602",
    "id": 285149600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTE0OTYwMA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T19:52:54Z",
    "updated_at": "2017-03-08T19:58:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, this is more complicated than I thought at first.\r\n\r\nWith:\r\n\r\n```python\r\nhist_df.boxplot(column=['height', 'weight', 'category'], by='gender', return_type='axes')\r\n```\r\n\r\nOld:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/3466341/23721125/d58f0360-040e-11e7-8aed-76407e3d204e.png)\r\n\r\nNew:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/3466341/23721116/d0336744-040e-11e7-878f-9e2920d7817e.png)\r\n\r\nNo good, obviously. But this should be fixable...\r\n\r\nI wonder if this wouldn't be easier to fix in the `matplotlib` source. cf. [matplotlib#8225](https://github.com/matplotlib/matplotlib/issues/8225)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285988349",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15602#issuecomment-285988349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15602",
    "id": 285988349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTk4ODM0OQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-12T23:51:15Z",
    "updated_at": "2017-03-12T23:51:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing this PR as the fix is downstreamed to `matplotlib`, cf. [here](https://github.com/matplotlib/matplotlib/pull/8244)."
  }
]
