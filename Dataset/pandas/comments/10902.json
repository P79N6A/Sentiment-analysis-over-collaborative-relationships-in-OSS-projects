[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/134780719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10902#issuecomment-134780719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10902",
    "id": 134780719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDc4MDcxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T00:52:43Z",
    "updated_at": "2015-08-26T00:52:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [17]: Timestamp('20130101') + DO(hour=2) + DO(hour=3)\nOut[17]: Timestamp('2013-01-01 03:00:00')\n```\n\nThese do not form composite objects. I suppose they could, but not sure if it has a useful case as these can operate directly on Series/Timestamps.\n\n@aickley pls show the utility here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/134913615",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10902#issuecomment-134913615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10902",
    "id": 134913615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDkxMzYxNQ==",
    "user": {
      "login": "ilya-kolpakov",
      "id": 592849,
      "node_id": "MDQ6VXNlcjU5Mjg0OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/592849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ilya-kolpakov",
      "html_url": "https://github.com/ilya-kolpakov",
      "followers_url": "https://api.github.com/users/ilya-kolpakov/followers",
      "following_url": "https://api.github.com/users/ilya-kolpakov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ilya-kolpakov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ilya-kolpakov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ilya-kolpakov/subscriptions",
      "organizations_url": "https://api.github.com/users/ilya-kolpakov/orgs",
      "repos_url": "https://api.github.com/users/ilya-kolpakov/repos",
      "events_url": "https://api.github.com/users/ilya-kolpakov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ilya-kolpakov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T09:21:25Z",
    "updated_at": "2015-08-26T09:21:25Z",
    "author_association": "NONE",
    "body": "This would be useful when 1) offsets are defined at a different place from where there are used and 2) when offsets are defined relative to each other. For instance, currently I have some code conceptually similar to\n\n``` python\n# Parameters of a study\npredictors_window_bdays = 3\npredictors_window_end = DateOffset(...) # offset from an event\npredictors_window_start = predictors_window_start - DateOffset(bdays=predictors_window_bdays)\n# response_window_{bdays,start,end} defined similarly\n\n# The code where the real work is done\n# events is a DatetimeIndex()\nx = predictors.ix[events+predictors_window_end] - predictors.ix[events+predictors_window_start]\ny = response.ix[events+response_window_end]  - response.ix[events+response_window_start]\n# analyze the relationship between x and y\n```\n\nNow it is not possible to specify `predictor_window_end` corresponding to, say, 12:00 of a business day preceding the day of the event (in my view the most intuitive syntax for that would be `DateOffset(bdays=-1, hour=12)` as suggested in #10903). Additionally, it is not possible to define `predictor_window_start` relative to `predictor_window_end` using an intuitive syntax described above.\n\nAs a workaround, I am currently storing lists of `DateOffset`s that are being applied to the index one after the other.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135006454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10902#issuecomment-135006454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10902",
    "id": 135006454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTAwNjQ1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T13:08:40Z",
    "updated_at": "2015-08-26T13:09:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is currently not allowed because adding anything to a `BusinessDays` (except other business days) is not defined without an absolute reference point. E.g. if you had `Timestamp('20130101 11:59:59) + BDay(1) + Second(1)` it is clear what to do.\n\nBut if you have `BDay(1) + Second()` then these have to be kept (and applied) independently.\n\nSo aside from `BusinessHours` which I think _could_ be added to a `BuisinessDay` I don't think this is really possible.\n\nI'll leave it open for you to provide a reasonable proof-of-concept.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135008812",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10902#issuecomment-135008812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10902",
    "id": 135008812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTAwODgxMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T13:11:35Z",
    "updated_at": "2015-08-26T13:11:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "For non-business days I suppose these could be combinable as `Timedeltas` are.\n\ne.g.\n\n`Day() + Hour()` -> `DateOffset(days=1,hours=1)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135070709",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10902#issuecomment-135070709",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10902",
    "id": 135070709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTA3MDcwOQ==",
    "user": {
      "login": "ilya-kolpakov",
      "id": 592849,
      "node_id": "MDQ6VXNlcjU5Mjg0OQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/592849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ilya-kolpakov",
      "html_url": "https://github.com/ilya-kolpakov",
      "followers_url": "https://api.github.com/users/ilya-kolpakov/followers",
      "following_url": "https://api.github.com/users/ilya-kolpakov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ilya-kolpakov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ilya-kolpakov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ilya-kolpakov/subscriptions",
      "organizations_url": "https://api.github.com/users/ilya-kolpakov/orgs",
      "repos_url": "https://api.github.com/users/ilya-kolpakov/repos",
      "events_url": "https://api.github.com/users/ilya-kolpakov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ilya-kolpakov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T15:40:40Z",
    "updated_at": "2015-08-26T15:45:09Z",
    "author_association": "NONE",
    "body": "Ok, I understand that `BDay`s is not a time unit and hence it's very different from `Hour`, `Minute` etc. That being said, in principle, `DateOffset` can have a `bdays` offset independent from the other components. When such an extended `DateOffset` is applied to a date the only ambiguity is whether offsetting by business days or usual time units is done first.\n\nApart from that, combining `BDay` with _absolute_ time of the day (`BDay() + DateOffset(hour=12, minute=1)`) is a transparent operation which is very useful when looking at intraday financial time series.\n\nBTW, surprisingly enough, now one can combine `BDay` and `Second`\n\n```\nIn [33]: delta = BDay() + Second()\nIn [34]: (pandas.DatetimeIndex(['2015-08-24']) - delta)[0]\nOut[34]: Timestamp('2015-08-21 00:00:01')\n```\n\nand the result is different from the direct application\n\n```\nIn [35]: (pandas.DatetimeIndex(['2015-08-24']) - BDay() - Second())[0]\nOut[35]: Timestamp('2015-08-20 23:59:59')\n```\n\nwhich is clearly a bug. The same applies to `Hour` (I checked) and, I guess, all the other units.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/135597549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10902#issuecomment-135597549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10902",
    "id": 135597549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNTU5NzU0OQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-28T01:23:34Z",
    "updated_at": "2015-08-28T13:35:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@aickley It's not so clear to me that's a bug, because `offsets` are not necessarily associative. \n\nThe way addition of a delta on BDay works right now is that the offset remains a `BusinessDay` - the additional delta is applied at the last step _without regard to sign/count on the offset_.  \n\nE.g:\n\n```\nIn [5]: delta = pd.offsets.BDay() + pd.offsets.Hour()\nIn [6]: delta\nOut[6]: <BusinessDay: offset=Timedelta('0 days 01:00:00')>\n\nIn [9]: pd.Timestamp('2015-1-1') + delta\nOut[9]: Timestamp('2015-01-02 01:00:00')\n\nIn [10]: pd.Timestamp('2015-1-1') + 2 * delta\nOut[10]: Timestamp('2015-01-05 01:00:00')\n\nIn [11]: pd.Timestamp('2015-1-1') - 2 * delta\nOut[11]: Timestamp('2014-12-30 01:00:00')\n```\n\nThis definition actually makes sense if you think of the delta as an 'anchored' offset - that is, 1:00 on each business day.  But it may be less surprising if the sign/count propagated to the additional delta and that maybe could be changed.  It is a bit ambiguous / surprising.\n\nIn any case, I'm not seeing why you can't just apply multiple `offsets` to your data?  That would avoid any ambiguity.\n"
  }
]
