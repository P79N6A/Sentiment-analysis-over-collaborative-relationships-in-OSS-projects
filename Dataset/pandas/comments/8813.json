[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63016128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63016128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63016128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDE2MTI4",
    "user": {
      "login": "aimboden",
      "id": 8589139,
      "node_id": "MDQ6VXNlcjg1ODkxMzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8589139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aimboden",
      "html_url": "https://github.com/aimboden",
      "followers_url": "https://api.github.com/users/aimboden/followers",
      "following_url": "https://api.github.com/users/aimboden/following{/other_user}",
      "gists_url": "https://api.github.com/users/aimboden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aimboden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aimboden/subscriptions",
      "organizations_url": "https://api.github.com/users/aimboden/orgs",
      "repos_url": "https://api.github.com/users/aimboden/repos",
      "events_url": "https://api.github.com/users/aimboden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aimboden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T06:31:27Z",
    "updated_at": "2014-11-14T06:31:27Z",
    "author_association": "NONE",
    "body": "Note that reversing the order does work:\n\n``` python\npd.Series(range(10))*pd.to_timedelta(10, unit='D')\nOut[158]: \n0    0 days\n1   10 days\n2   20 days\n3   30 days\n4   40 days\n5   50 days\n6   60 days\n7   70 days\n8   80 days\n9   90 days\ndtype: timedelta64[ns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63049640",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63049640",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63049640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ5NjQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T11:35:32Z",
    "updated_at": "2014-11-14T11:35:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I recall that their was no easy way to fix this\n(though will look again)\nbecause TimeDelta is a scalar and Python thinks for some reason doesn't call **rmul**\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63050391",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63050391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63050391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDUwMzkx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T11:41:13Z",
    "updated_at": "2014-11-14T11:41:13Z",
    "author_association": "MEMBER",
    "body": "@jreback I can also take a look, I've written a lot of classes that do arithmetic at this point. I'm pretty sure this is fixable.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63056502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63056502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63056502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDU2NTAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T12:23:18Z",
    "updated_at": "2014-11-14T12:23:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "oh, this is a buggie. It is intercepted in cython. I don't allow _any_ multiplication of a scalar timedelta with other objects (nothing makes sense). Except for the other way around (e.g. Series/Timedelta) if its an integer Series/Index it makes sense to allow multiple and does (so this is the bug).\n\nI think division is right, but maybe check that too. E.g. you can only divide a Timedelta (object/series/index) by a Timedelta object (though I think allow integer division too).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63061275",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63061275",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63061275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDYxMjc1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T13:02:16Z",
    "updated_at": "2014-11-14T13:02:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't allow any multiplication of a scalar timedelta with other objects (nothing makes sense)\n\nThis doesn't feel right.\n\nI mean, set of possible multiplicand types is inherently open, you cannot realistically say that nothing in the infinite set of possibilities makes sense.  Which is why python requires `NotImplemented` to be returned from binary operators so that the second operand has a shot at performing a reflected operation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63062378",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63062378",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63062378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDYyMzc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T13:10:48Z",
    "updated_at": "2014-11-14T13:10:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "sorry, misspoke, numpy array/index/series of integers works. (other return a TypeError). could certainly be NotImplemetedError though).\n\n@immerrr not much actually makes sense. Maybe you have something that does that was missed?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63063715",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63063715",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63063715,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDYzNzE1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T13:24:41Z",
    "updated_at": "2014-11-14T13:31:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "First, it's not `raise NotImplementedError`, it's `return NotImplemented`: https://docs.python.org/2/reference/datamodel.html#object.__radd__.  `NotImplemented` itself is documented poorly, but ~~hopefully this will be fixed soon~~ there's an [issue](http://bugs.python.org/issue22780) that has landed recently that changed the [doc](https://docs.python.org/3.5/reference/datamodel.html#object.__add__) to unambiguously state the following :\n\n```\nIf one of those methods does not support the operation with the supplied arguments, it should return NotImplemented.\n```\n\nRestricting the set of operand types in python's world of duck typing doesn't make sense to me.  For the very least think of all the possible types of ndarray-like containers that don't pass the isinstance(ndarray) check, e.g. scipy sparse matrices or `xray.DataArray`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63065722",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63065722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63065722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDY1NzIy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T13:43:31Z",
    "updated_at": "2014-11-14T13:43:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr \nof course restricting makes sense. If only to preserve user sanity.\nYou don't want to constantly gave to check for `NotImplemented` types. Its just counter-productive.\n\n`xray` can feel free to handle any cases it wants. but 99% of users want to be informed that\n`pd.Timedelta(....)*pd.Timedelta(..)` just does not make sense\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63073741",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63073741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63073741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDczNzQx",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T14:46:36Z",
    "updated_at": "2014-11-14T14:46:36Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  You don't want to constantly gave to check for NotImplemented types. Its just counter-productive.\n\nCould you rephrase that? I suppose you mean that you'll have to check for `NotImplemented` in user-level code, it's not true: python interpreter will raise a `TypeError` on its own if both `a.__mul__(b)` and `b.__rmul__(a)` return `NotImplemented`.\n\n> xray can feel free to handle any cases it wants. but 99% of users want to be informed that\n> pd.Timedelta(....)*pd.Timedelta(..) just does not make sense\n\nIt is exactly my point that it _won't be able to do that_.  `timedelta.__mul__` raising a TypeError preemptively won't give `dataarray.__rmul__` a chance to handle the operation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63079040",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63079040",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63079040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDc5MDQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T15:23:06Z",
    "updated_at": "2014-11-14T15:23:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, i'll rephrase. What I mean is for 99% of the users a `TypeError` is the expectation for an operation that is not 'right' and NOT `NotImplementedError` returned / raise, which means that it just has not been  done. `TypeError` means this does not make sense (in pandas). \n\nIf xray wants to implement then they can do it (though I suspect since its much easier to simply push this upstream, e.g. to get @shoyer to convince us that its a valid operation and support it mainstream in pandas). E.g. `Interval`\n\nthis is much easier IMHO that e.g. pushing upstream to numpy (TL;DR) the other discussions that we have had.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63085631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63085631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63085631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg1NjMx",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T16:01:55Z",
    "updated_at": "2014-11-14T16:01:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> ok, i'll rephrase. What I mean is for 99% of the users a TypeError is the expectation for an operation that is not 'right' and NOT NotImplementedError returned / raise, which means that it just has not been done. TypeError means this does not make sense (in pandas). \n1. There may be (probably, are already) many projects that implement their own ndarray-like containers.\n2. There's a non-formalized \"convincing\" operation which may or may not succeed or in which a certain project maintainer may or may not be interested.\n3. It's not `NotImplementedError`, it's a singleton object called `NotImplemented`, and it doesn't mean \"it just has not been done\",  it means, according to the doc, that it \"does not support the operation with the supplied arguments\", for whatever reason. E.g. ints/datetimes do that:\n\n``` python\nIn [32]: d = datetime.datetime.now()\n\nIn [33]: x = 1\n\nIn [34]: d.__add__(x)\nOut[34]: NotImplemented\n\nIn [35]: x.__add__(d)\nOut[35]: NotImplemented\n\nIn [36]: d + x\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-36-aa9ad8fe26a5> in <module>()\n----> 1 d + x\n\nTypeError: unsupported operand type(s) for +: 'datetime.datetime' and 'int'\n```\n\nSurprisingly, though, strings do raise a TypeError.  BUT they also call `__radd__` if it's present on the other object:\n\n``` python\nIn [37]: 'foobar'.__add__(x)\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-37-6c317551e6f0> in <module>()\n----> 1 'foobar'.__add__(x)\n\nTypeError: cannot concatenate 'str' and 'int' objects\n\nIn [38]: class Foo(object):\n   ....:     def __radd__(self, other):\n   ....:         return 'xyzzy'\n   ....:     \n\nIn [39]: 'foobar'.__add__(Foo())\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-39-d607980902de> in <module>()\n----> 1 'foobar'.__add__(Foo())\n\nTypeError: cannot concatenate 'str' and 'Foo' objects\n\nIn [40]: 'foobar' + Foo()\nOut[40]: 'xyzzy'\n\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63085935",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63085935",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63085935,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg1OTM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T16:03:47Z",
    "updated_at": "2014-11-14T16:03:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess i disagree with this spec a bit. pandas just tries to do the right thing and not raise _too_ many `TypeErrors/NotImplemented`. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63086745",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63086745",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63086745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg2NzQ1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T16:08:40Z",
    "updated_at": "2014-11-14T16:08:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm trying to point out that python allows the other object to have a say in what's allowed or not, too.  Raising TypeErrors doesn't.\n\nYou don't agree to play by that rules? Fine, I rest my case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63089332",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63089332",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63089332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDg5MzMy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T16:24:25Z",
    "updated_at": "2014-11-14T16:24:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr are we really disagreeing with whether to raise `TypeError` or return `NotImplemented` in an obvious case?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63096619",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63096619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63096619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDk2NjE5",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T17:09:36Z",
    "updated_at": "2014-11-14T17:09:36Z",
    "author_association": "MEMBER",
    "body": "I can dive into this more later, but in brief, I agree with @immerrr that the appropriate thing to do with an invalid operation is always to always return NotImplemented rather than to explicitly raise TypeError. That said, Timedelta should use duck typing for dtype == int rather than isinstance checks.\n\nOn Fri, Nov 14, 2014 at 8:24 AM, jreback notifications@github.com wrote:\n\n> ## @immerrr are we really disagreeing with whether to raise `TypeError` or return `NotImplemented` in an obvious case?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/issues/8813#issuecomment-63089332\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63098179",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63098179",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63098179,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDk4MTc5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-14T17:20:03Z",
    "updated_at": "2014-11-14T17:20:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, will leave to @shoyer @immerrr for a pull-request then. I prefer more explicit checking here, othewise what's the point of a `TypeError`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/63172325",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8813#issuecomment-63172325",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8813",
    "id": 63172325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTcyMzI1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-15T13:30:08Z",
    "updated_at": "2014-11-15T13:30:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "> are we really disagreeing with whether to raise TypeError or return NotImplemented in an obvious case?\n\nKind of, yes :)\n\nI'm trying to show that the obvious solution (allow series/index only) violates [open-closed principle](http://en.wikipedia.org/wiki/Open/closed_principle) and may force you (us) to get back to this issue in future (to add support for potentially infinite number of types). This particular case is, of course, trivial to fix in either way. However the idea of allowing the second operand to handle the operation really applies to all of the binary operators and may be beneficial for other places in the code, too.\n"
  }
]
