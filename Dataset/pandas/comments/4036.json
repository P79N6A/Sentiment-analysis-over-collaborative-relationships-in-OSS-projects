[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20250930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-20250930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 20250930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMjUwOTMw",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-30T17:28:42Z",
    "updated_at": "2013-06-30T17:28:42Z",
    "author_association": "NONE",
    "body": "This is somewhat related to Issue #3057. Being able to select on arbitrary combinations of index levels and return arbitrary index levels. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35040592",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-35040592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 35040592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQwNTky",
    "user": {
      "login": "hsharrison",
      "id": 4441865,
      "node_id": "MDQ6VXNlcjQ0NDE4NjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4441865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsharrison",
      "html_url": "https://github.com/hsharrison",
      "followers_url": "https://api.github.com/users/hsharrison/followers",
      "following_url": "https://api.github.com/users/hsharrison/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsharrison/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsharrison/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsharrison/subscriptions",
      "organizations_url": "https://api.github.com/users/hsharrison/orgs",
      "repos_url": "https://api.github.com/users/hsharrison/repos",
      "events_url": "https://api.github.com/users/hsharrison/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsharrison/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T23:43:59Z",
    "updated_at": "2014-02-13T23:43:59Z",
    "author_association": "NONE",
    "body": "@jreback \n\nI did look through the new code and the docs so apologies if I missed this, but it would still be nice to be able to select by index names, as in @dragoljub 's suggestion `df.ix[{index_level:value}]`.\n\nObviously this is a minor convenience compared to what you just merged, so thank you for that. But maybe this could be left open? Or should a separate issue be opened?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35041333",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-35041333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 35041333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQxMzMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T23:54:06Z",
    "updated_at": "2014-02-13T23:54:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hsharrison ahh...did even see that, so you want to pass a dict (rather than a nested tuple) bascically? (with keys of the level numbers or names)....\n\nhmm...I don't think that would be that difficult....\n\ncan you post an example of using the partial slicing syntax (what I just merged) and your proposed\naddition? so we can see side-by-side just what it looks like? thanks...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35061919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-35061919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 35061919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDYxOTE5",
    "user": {
      "login": "hsharrison",
      "id": 4441865,
      "node_id": "MDQ6VXNlcjQ0NDE4NjU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4441865?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hsharrison",
      "html_url": "https://github.com/hsharrison",
      "followers_url": "https://api.github.com/users/hsharrison/followers",
      "following_url": "https://api.github.com/users/hsharrison/following{/other_user}",
      "gists_url": "https://api.github.com/users/hsharrison/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hsharrison/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hsharrison/subscriptions",
      "organizations_url": "https://api.github.com/users/hsharrison/orgs",
      "repos_url": "https://api.github.com/users/hsharrison/repos",
      "events_url": "https://api.github.com/users/hsharrison/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hsharrison/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T07:25:39Z",
    "updated_at": "2014-02-14T07:28:51Z",
    "author_association": "NONE",
    "body": "```\nIn [8]: levels = ['A', 'B', 'C']\n\nIn [9]: columns = ['n_foos', 'n_bars']\n\nIn [10]: index = MultiIndex.from_product([range(3) for _ in levels], names=levels)\n\nIn [12]: df = DataFrame(random_integers(0, 100, size=(len(index), len(columns))), index=index, columns=columns)\n\nIn [13]: df\nOut[13]: \n       n_foos  n_bars\nA B C                \n0 0 0      35      91\n    1      17      89\n    2      20      80\n  1 0      35      12\n    1      14       0\n    2      78      23\n  2 0      61      93\n    1      86      26\n    2      78      76\n1 0 0      25      93\n    1      46      87\n    2      14      21\n  1 0      78      33\n    1      59      54\n    2      63       2\n  2 0      40      99\n    1      57      78\n    2      99      22\n2 0 0      48      78\n    1      18      58\n    2      12      87\n  1 0      86      96\n    1       9      47\n    2       8      40\n  2 0      93      32\n    1      30      69\n    2      74      15\n\n[27 rows x 2 columns]\n\nIn [15]: df.loc[(1, slice(None), 2), :]\nOut[15]: \n       n_foos  n_bars\nA B C                \n1 0 2      14      21\n  1 2      63       2\n  2 2      99      22\n\n[3 rows x 2 columns]\n```\n\nAnd reference by name using a dict:\n\n```\nIn [15]: df.loc[dict(A=1, C=2), :]\nOut[15]: \n       n_foos  n_bars\nA B C                \n1 0 2      14      21\n  1 2      63       2\n  2 2      99      22\n\n[3 rows x 2 columns]\n```\n\nAnother possibility is to use keyword arguments in a function instead of a dict in a getitem. Not sure if `xs` is appropriate, but consider as an example `df.xs(A=1, C=2)`.\n\n(well, maybe not. The conciseness is nice but it can't refer to non-named levels)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61835864",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-61835864",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 61835864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODM1ODY0",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T16:30:27Z",
    "updated_at": "2014-11-05T16:30:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 on allowing empty slicing. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61856153",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-61856153",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 61856153,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODU2MTUz",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T18:24:52Z",
    "updated_at": "2014-11-05T18:24:52Z",
    "author_association": "NONE",
    "body": "Hey cool to see this being revived! :+1:  \n\nI also like how the curly brace dict notation looks. :smile:  Althought the dict(A=1, C=2) seems more natural. Its interesting the parsing the dict constructor does to infer the string column name. However you will not be able to specify the index level with `dict(0=3, 2=2)`, but you could do `{0:2, 2:2}` if you were so inclined. :sunglasses: \n\n``` python\nIn [15]: df.loc[{'A':1, 'C':2}, :]\nOut[15]: \n       n_foos  n_bars\nA B C                \n1 0 2      14      21\n  1 2      63       2\n  2 2      99      22\n\n[3 rows x 2 columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61857552",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-61857552",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 61857552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxODU3NTUy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-05T18:33:48Z",
    "updated_at": "2014-11-05T18:33:48Z",
    "author_association": "MEMBER",
    "body": "In xray (pandas for N-dim data) we have [somewhat similar](http://xray.readthedocs.org/en/v0.3.1/indexing.html) support for doing indexing with named axes (rather than levels) via the keyword arguments in a function pattern, e.g., `ds.sel(time='2000-01-01', letter=slice('a', 'z'))`. This works pretty well as long as all the levels/dimensions are named (xray enforces this). I have also [considered](https://github.com/xray/xray/issues/187) parsing dictionaries  in `loc` as well, but haven't gotten around to implementing it yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/61909546",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-61909546",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 61909546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA5NTQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-06T00:45:14Z",
    "updated_at": "2014-11-06T00:45:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "so we can revisit this\n\nsomeone want to post a short (but complete) usecase / example and proposed syntax (in a new issue)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/199130999",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-199130999",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 199130999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTEzMDk5OQ==",
    "user": {
      "login": "kianho",
      "id": 783366,
      "node_id": "MDQ6VXNlcjc4MzM2Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/783366?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kianho",
      "html_url": "https://github.com/kianho",
      "followers_url": "https://api.github.com/users/kianho/followers",
      "following_url": "https://api.github.com/users/kianho/following{/other_user}",
      "gists_url": "https://api.github.com/users/kianho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kianho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kianho/subscriptions",
      "organizations_url": "https://api.github.com/users/kianho/orgs",
      "repos_url": "https://api.github.com/users/kianho/repos",
      "events_url": "https://api.github.com/users/kianho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kianho/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-21T05:19:09Z",
    "updated_at": "2016-03-21T05:19:09Z",
    "author_association": "NONE",
    "body": ":+1:  on this feature, would find it very useful\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348998470",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4036#issuecomment-348998470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4036",
    "id": 348998470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODk5ODQ3MA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T15:35:42Z",
    "updated_at": "2017-12-04T15:35:42Z",
    "author_association": "MEMBER",
    "body": "More related SO questions [1](https://stackoverflow.com/questions/25224545/filtering-muliple-items-in-a-multi-index-python-panda-dataframe), [2](https://stackoverflow.com/questions/22987015/slice-pandas-dataframe-by-multiindex-level-or-sublevel)"
  }
]
