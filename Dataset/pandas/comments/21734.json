[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402582372",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21734#issuecomment-402582372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21734",
    "id": 402582372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU4MjM3Mg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T01:38:26Z",
    "updated_at": "2018-07-05T01:38:26Z",
    "author_association": "MEMBER",
    "body": "@JacobHayes : Thanks for reporting this!  Do you mind also providing (i.e. copy/paste into this issue) what you're seeing currently?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402585491",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21734#issuecomment-402585491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21734",
    "id": 402585491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjU4NTQ5MQ==",
    "user": {
      "login": "JacobHayes",
      "id": 2555532,
      "node_id": "MDQ6VXNlcjI1NTU1MzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2555532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JacobHayes",
      "html_url": "https://github.com/JacobHayes",
      "followers_url": "https://api.github.com/users/JacobHayes/followers",
      "following_url": "https://api.github.com/users/JacobHayes/following{/other_user}",
      "gists_url": "https://api.github.com/users/JacobHayes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JacobHayes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JacobHayes/subscriptions",
      "organizations_url": "https://api.github.com/users/JacobHayes/orgs",
      "repos_url": "https://api.github.com/users/JacobHayes/repos",
      "events_url": "https://api.github.com/users/JacobHayes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JacobHayes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T02:01:18Z",
    "updated_at": "2018-07-05T02:01:18Z",
    "author_association": "NONE",
    "body": "Sure!\r\n\r\n```\r\n1970-01-01\r\n1970-01-01\r\n1970-01-01\r\n1970-01-01\r\n1970-01-01\r\n\r\ndate,datetime\r\n1970-01-01 00:00:00,1970-01-01 00:00:00\r\n1970-01-01 00:00:00,1970-01-01 01:00:00\r\n1970-01-01 00:00:00,1970-01-01 02:00:00\r\n1970-01-01 00:00:00,1970-01-01 03:00:00\r\n1970-01-01 00:00:00,1970-01-01 04:00:00\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/402602953",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21734#issuecomment-402602953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21734",
    "id": 402602953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMjYwMjk1Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-05T04:25:20Z",
    "updated_at": "2018-07-05T04:25:20Z",
    "author_association": "MEMBER",
    "body": "Hmm...that does look a little strange.  Investigation and PR are welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/417528060",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21734#issuecomment-417528060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21734",
    "id": 417528060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzUyODA2MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T02:12:23Z",
    "updated_at": "2018-08-31T02:12:23Z",
    "author_association": "MEMBER",
    "body": "@mroeschke I know you've been looking at csvs+datetimes recently.  Any suggestions for OP on where to start on this?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/417555429",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21734#issuecomment-417555429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21734",
    "id": 417555429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNzU1NTQyOQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-31T05:25:38Z",
    "updated_at": "2018-08-31T05:25:38Z",
    "author_association": "MEMBER",
    "body": "Just to clarify OP's ask, Pandas doesn't not support a `date` data type. `pd.to_datetime('1970-01-01')` will return a  datetime.\r\n\r\n```\r\nIn [8]: df.dtypes\r\nOut[8]:\r\ndate        datetime64[ns]\r\ndatetime    datetime64[ns]\r\ndtype: object\r\n```\r\n\r\nSo trying to determine whether a column has date vs datetime data based on a repr is fragile.\r\n\r\nI don't think this is a CSV issue, but that being said, maybe the datetime repr may be a bit confusing and or inconsistent between dates vs datetime and Series vs DataFrames respectively."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/429448911",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21734#issuecomment-429448911",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21734",
    "id": 429448911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyOTQ0ODkxMQ==",
    "user": {
      "login": "JacobHayes",
      "id": 2555532,
      "node_id": "MDQ6VXNlcjI1NTU1MzI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2555532?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JacobHayes",
      "html_url": "https://github.com/JacobHayes",
      "followers_url": "https://api.github.com/users/JacobHayes/followers",
      "following_url": "https://api.github.com/users/JacobHayes/following{/other_user}",
      "gists_url": "https://api.github.com/users/JacobHayes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JacobHayes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JacobHayes/subscriptions",
      "organizations_url": "https://api.github.com/users/JacobHayes/orgs",
      "repos_url": "https://api.github.com/users/JacobHayes/repos",
      "events_url": "https://api.github.com/users/JacobHayes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JacobHayes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-12T20:12:40Z",
    "updated_at": "2018-10-12T20:26:21Z",
    "author_association": "NONE",
    "body": "@mroeschke I know pandas uses datetimes in all cases and I'm _not_ trying to determine if the data is a date or datetime based on the repr. Instead, I'm loading data from CSV into more strictly typed columns (BigQuery in this case). The problem is that BigQuery (and I'd guess many other systems) validates the data matches the column type and errors (instead of truncating the datetime to date).\r\n\r\nAs I said originally, the problem is that the formatting of a \"date\" Series/datetime without time (within a DataFrame) is variable depending on the inclusion of _other_ columns in the DataFrame. So even more subtly, the repr (aka the output that is fed to other systems and is considered more than just python/pandas implementation details IMO) is inconsistent even between DataFrames.\r\n\r\nAs an alternative to fixing the output format inference to be per-Series (with the current result seemingly being: \"datetime repr if any Series has time, else date repr\"), what do people think about changing the `to_csv` `date_format` argument to allow a mapping of Series name to format?\r\n\r\nEdit:\r\n\r\nI think I see where things may have gotten mixed up. @mroeschke - note that in my example I'm using `to_csv`, but explicitly writing to stdout, hence I'm not showing the in-python `repr` but the CSV output there. It is worth noting however that the DataFrame `repr` _does_ have the \"proper\" output in all cases - Series without times are formatted without times even if there are other Series with times in the same DataFrame, as show in this example building from the one above:\r\n\r\n```\r\n>>> df\r\n        date            datetime\r\n0 1970-01-01 1970-01-01 00:00:00\r\n1 1970-01-01 1970-01-01 01:00:00\r\n2 1970-01-01 1970-01-01 02:00:00\r\n3 1970-01-01 1970-01-01 03:00:00\r\n4 1970-01-01 1970-01-01 04:00:00\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/430495318",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21734#issuecomment-430495318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21734",
    "id": 430495318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMDQ5NTMxOA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-17T05:34:32Z",
    "updated_at": "2018-10-17T05:34:32Z",
    "author_association": "MEMBER",
    "body": "Okay I better understand your point now, thanks! It makes sense that `DataFrame.to_csv`  and `Series.to_csv` should write datetime columns consistently and in a similar way.\r\n\r\nAs a side note: You can export pandas objects directly to BigQuery instead of going to CSV and then BigQuery\r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_gbq.html"
  }
]
