[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441826651",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23933#issuecomment-441826651",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23933",
    "id": 441826651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTgyNjY1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T22:33:57Z",
    "updated_at": "2018-11-26T22:34:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Root cause is that we don't factorize empty period arrays correctly\r\n\r\n```pytb\r\nIn [2]: arr = pd.PeriodIndex([], freq='D')\r\n\r\nIn [3]: pd.factorize(arr)\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-3-65d36072b155> in <module>()\r\n----> 1 pd.factorize(arr)\r\n\r\n~/sandbox/pandas/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    175                 else:\r\n    176                     kwargs[new_arg_name] = new_arg_value\r\n--> 177             return func(*args, **kwargs)\r\n    178         return wrapper\r\n    179     return _deprecate_kwarg\r\n\r\n~/sandbox/pandas/pandas/core/algorithms.py in factorize(values, sort, order, na_sentinel, size_hint)\r\n    630                                         assume_unique=True)\r\n    631\r\n--> 632     uniques = _reconstruct_data(uniques, dtype, original)\r\n    633\r\n    634     # return original tenor\r\n\r\n~/sandbox/pandas/pandas/core/algorithms.py in _reconstruct_data(values, dtype, original)\r\n    146     from pandas import Index\r\n    147     if is_extension_array_dtype(dtype):\r\n--> 148         values = dtype.construct_array_type()._from_sequence(values)\r\n    149     elif is_datetime64tz_dtype(dtype) or is_period_dtype(dtype):\r\n    150         values = Index(original)._shallow_copy(values, name=None)\r\n\r\n~/sandbox/pandas/pandas/core/arrays/period.py in _from_sequence(cls, scalars, dtype, copy)\r\n    200             periods = periods.copy()\r\n    201\r\n--> 202         freq = freq or libperiod.extract_freq(periods)\r\n    203         ordinals = libperiod.extract_ordinals(periods, freq)\r\n    204         return cls(ordinals, freq=freq)\r\n\r\n~/sandbox/pandas/pandas/_libs/tslibs/period.pyx in pandas._libs.tslibs.period.extract_freq()\r\n   1484             pass\r\n   1485\r\n-> 1486     raise ValueError('freq not specified and cannot be inferred')\r\n   1487\r\n   1488\r\n\r\nValueError: freq not specified and cannot be inferred\r\n\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441827470",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23933#issuecomment-441827470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23933",
    "id": 441827470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTgyNzQ3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-26T22:36:47Z",
    "updated_at": "2018-11-26T22:36:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "PeriodArray._from_sequence should probably check `if isinstance(scalars, cls): return cls`. Will want to check that `dtype` is None / matches `scalars.dtype` and handle copying correctly.\r\n\r\nIt'd be good to add a base extension test for factorizing an empty array."
  }
]
