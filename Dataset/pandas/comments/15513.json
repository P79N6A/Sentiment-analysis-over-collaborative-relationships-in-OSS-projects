[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282579979",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282579979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282579979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU3OTk3OQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T19:25:10Z",
    "updated_at": "2017-02-26T19:25:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note: this conversation is continued from #12640.\r\n\r\nThis is a PR which aliases certain top-level functions into `DataFrame` and/or `Series` object methods, for reasons of syntax and method chaining. Still a WIP atm.\r\n\r\nThe top-level method bodies remain in the tooling libraries in which they were defined before, but the docstrings have been moved to `_shared_docs` dictionary objects in `core/frame.py` and/or `core/series.py`. `_shared_docs` is then back-ported into the tooling libraries and attached to the original method using the `Appender` decorator.\r\n\r\nThis is done so that the docstrings between the top-level and object-method differ in two respects:\r\n\r\n1. The new object method gets a `new in 0.20.0` marker in the docs.\r\n2. The new object method links to the old top-level function in `See also`, and vice versa.\r\n\r\nThis reuses an earlier-established convention used elsewhere throughout the library.\r\n\r\nHave not written nor attempted to pass tests just yet.\r\n\r\nThat being said, in the conversation on the [issue](#12640) @jreback mentions tweaking the pattern by possible e.g. [using another newly created decorator](https://github.com/pandas-dev/pandas/pull/15484/commits/e75eacb2f7d165fa4b2148c2c5cb051b0bff816c). I agree that this could be a smart change, because the use of `Appender` is starting to become a little fritzy (see my notes on `pd.get_dummies` below).\r\n\r\nIn this PR: `pd.crosstab <-> pd.DataFrame.crosstab`, `pd.melt <-> pd.DataFrame.melt`, `pd.cut <-> pd.Series.cut`, `pd.qcut <-> pd.Series.qcut`.\r\n\r\nNot in this PR: `pd.pivot_table <-> pd.DataFrame.pivot_table`, which was already done long ago but needs a refactor; and `pd.get_dummies <-> pd.DataFrame.get_dummies/pd.Series.get_dummies`, which is a bit problematic. The issue with the latter is the question as to where the docstring should go: should it be hosted in `series.py` or in `frame.py`? Whichever of those files doesn't host it would have to import it from its sibling.\r\n\r\nFinally, `Appender` is used somewhat haphazardously right now. What I mean by that is that the docstrings are sometimes imported as e.g. `from ... import base; base._shared_docs` and sometimes directly as `from ... import _shared_docs`. I think it'd be useful to establish a convention here: `from base import _shared_docs as _base_shared_docs` and `from frame import _shared_docs as _frame_shared_docs`, for example."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282580390",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282580390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282580390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4MDM5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T19:31:05Z",
    "updated_at": "2017-02-26T19:31:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario to address a point that you made.\r\n\r\nWhen we have a shared method that is needed for *both* Series & DataFrame, we actually put it in ``pandas.core.generic`` and put the shared doc-string there. So that's a good place for ``.get_dummies`` (note that there is a section near the end so that the methods are *only* for ``Series/DataFrames``, and not all inherited objects)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282580517",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282580517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282580517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4MDUxNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T19:32:37Z",
    "updated_at": "2017-02-26T19:32:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "alternatively, since some of our files (e.g. ``frame.py``) are getting very large. We could do something like:\r\n\r\n``pandas/core/docs.py`` where *only* doc-strings exist (or maybe ``pandas/core/frame/docs`` and similar). A bit odd to separate code from the doc-strings, but it might be appropriate in this case.\r\n\r\n@jorisvandenbossche "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282581220",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282581220",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282581220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4MTIyMA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T19:42:53Z",
    "updated_at": "2017-02-26T19:42:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re: `generic`, gotcha, can-do then. It looks like the two remaining functions can also be touched up using `Appender` alone, then.\r\n\r\nRe: globing off the docs, I don't have a strong opinion on this. Having a file for docstrings is weird, but then again, so is having docstrings floating somewhere about their method bodies :). It would certainly make things significantly cleaner, architecturally.\r\n\r\nI wouldn't mind implementing either/or. The latter kind of sounds like a different PR, though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282584247",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282584247",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282584247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4NDI0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T20:22:35Z",
    "updated_at": "2017-02-26T20:22:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario yep go ahead and make changes to move things to ``generic.py`` as appropriate. The generaized move to something like a ``docs.py`` would be a different PR (looking more some community thought whether this makes sense)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282585254",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282585254",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282585254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4NTI1NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T20:35:56Z",
    "updated_at": "2017-02-26T20:35:56Z",
    "author_association": "MEMBER",
    "body": "Sorry that I didn't raise my concert earlier on the issue, and @ResidentMario I find it difficult to give this backlash given the very nice effort you are putting in this issue. \r\nBut, I am personally not sure I find it a good idea to add all of these top-level functions as methods on a dataframe/series. I don't have much time this evening to look more into detail, but we already have a large amount of methods on DataFrame/Series, and I think adding new ones should really be worth it.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282585496",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282585496",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282585496,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4NTQ5Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T20:39:25Z",
    "updated_at": "2017-02-26T20:39:25Z",
    "author_association": "MEMBER",
    "body": "Regarding the docstrings, that's something I also already thought about once. Our current infrastructure of shared_docs is a bit of a mess for contributors, and can use some rethinking. But that indeed sounds like another issue/PR.\r\n\r\nIn case of `melt`, you could also do it like pivot_table, which is added to DataFrame in pivot.py"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282588754",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282588754",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282588754,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU4ODc1NA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T21:22:40Z",
    "updated_at": "2017-02-26T21:26:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "So long as you agree with the [method chaining](https://tomaugspurger.github.io/method-chaining.html) philosophy, the ability to use `df.melt(...)` instead of `df.pipe(lambda df: pd.melt(df, ...))` seems to absolutely be worth the maintenance burden.\r\n\r\nThe other consideration is a broader one about API design. Where does `pandas` want to try to keep its algorithms? Should they be object methods, or top-level functions? Having things available in both was once convenient (`pd.pivot_table(data)` beats `pd.DataFrame(data).pivot_table()`), but the API is so large now that having some kind of strict differential&mdash;e.g. IO tasks only in the top-level, everything else in object mehtods&mdash;seems like a necessary way forward.\r\n\r\nOtherwise, `pandas` risks confusing newcomers by providing them too many options: to do x you can use either route, to do y you have to use an object, z is only available as a top-level...if there could be a simple and memorable rule controlling which is where, that would be really helpful for users!\r\n\r\nIt sounds like `pandas` has already been moving towards object methods for some time. Looking at the docs, here are the current top-level methods (excluding file I/O):\r\n\r\n* `bdate_range`\r\n* `concat`\r\n* `crosstab`\r\n* `cut`\r\n* `date_range`\r\n* `eval`\r\n* `factorize`\r\n* `get_dummies`\r\n* `get_option`\r\n* `isnull`\r\n* `melt`\r\n* `merge`\r\n* `merge_asof`\r\n* `merge_ordered`\r\n* `notnull`\r\n* `option_context`\r\n* `period_range`\r\n* `piviot`\r\n* `pivot_table`\r\n* `qcut`\r\n* `reset_option`\r\n* `set_option`\r\n* `test`\r\n* `to_datetime`\r\n* `to_numeric`\r\n* `to_timedelta`\r\n* `wide_to_long`\r\n\r\nMaybe the agreement to be reached here is on which of these \"ought\" to be where?\r\n\r\ncc: @TomAugspurger"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282599155",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282599155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282599155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjU5OTE1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-26T23:47:24Z",
    "updated_at": "2017-02-26T23:47:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ResidentMario \r\n\r\nso *most* of the functions on the list, should certainly be top-level, and yes we should have a clear policy. \r\n\r\nOne easy differentiator is a function which only takes a single argument, that is a Series OR a DataFrame only\r\n\r\n- This eliminates things like concat/merge.``pd.concat`` can take multiple objects, as for example does ``pd.merge``. Now one could make the case that ``DataFrame.merge`` should exist (though we have ``.join`` which by-definition does auto alignment).\r\n\r\n- A function like ``.cut/.qcut`` *does* fall into this category, but OTOH, it can take *multiple* types of arguments (e.g. ``ndarray/Index/Series``), so I would put about +0 for adding these (include also the ``.to_datetime/.to_numeric/.to_timedelta`` in this bucket).). \r\n\r\n- Something that I am +1 on converting is ``.melt``, as this completes the reshaping ops, with ``.unstack/.stack/.pivot`` already methods.\r\n\r\nIn fact I would go as far as deprecating ``pd.pivot/pd.pivot_table``, which are *only* useful as methods.\r\n\r\nSo I agree there is much confusion here on what should be where. Another example, we used to have *only* ``pd.null/isnull``. But these make *much* more sense as methods, esp for having clean-concise code.\r\n\r\n@jorisvandenbossche is right that we have too many methods as it is, BUT, I still think we need to clean this up and have as much consistency as possible.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282605646",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282605646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282605646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjYwNTY0Ng==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T01:14:34Z",
    "updated_at": "2017-02-27T02:28:37Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15513?src=pr&el=h1) Report\n> Merging [#15513](https://codecov.io/gh/pandas-dev/pandas/pull/15513?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/b3ae4c7698de4623e1279d579b46192ef79250d1?src=pr&el=desc) will **decrease** coverage by `-0.01%`.\n> The diff coverage is `76.47%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##           master   #15513      +/-   ##\n==========================================\n- Coverage   90.36%   90.36%   -0.01%     \n==========================================\n  Files         136      136              \n  Lines       49553    49587      +34     \n==========================================\n+ Hits        44780    44807      +27     \n- Misses       4773     4780       +7\n```\n\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/15513?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/tools/pivot.py](https://codecov.io/gh/pandas-dev/pandas/compare/b3ae4c7698de4623e1279d579b46192ef79250d1...4a64c390b04b469381c2698a3e36273f3784be2d?src=pr&el=tree#diff-cGFuZGFzL3Rvb2xzL3Bpdm90LnB5) | `95.1% <100%> (+0.06%)` | :white_check_mark: |\n| [pandas/core/reshape.py](https://codecov.io/gh/pandas-dev/pandas/compare/b3ae4c7698de4623e1279d579b46192ef79250d1...4a64c390b04b469381c2698a3e36273f3784be2d?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS5weQ==) | `99.26% <100%> (ø)` | :white_check_mark: |\n| [pandas/tools/tile.py](https://codecov.io/gh/pandas-dev/pandas/compare/b3ae4c7698de4623e1279d579b46192ef79250d1...4a64c390b04b469381c2698a3e36273f3784be2d?src=pr&el=tree#diff-cGFuZGFzL3Rvb2xzL3RpbGUucHk=) | `96.95% <100%> (+0.09%)` | :white_check_mark: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/compare/b3ae4c7698de4623e1279d579b46192ef79250d1...4a64c390b04b469381c2698a3e36273f3784be2d?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.64% <60%> (-0.19%)` | :x: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/compare/b3ae4c7698de4623e1279d579b46192ef79250d1...4a64c390b04b469381c2698a3e36273f3784be2d?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `94.64% <63.63%> (-0.33%)` | :x: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/compare/b3ae4c7698de4623e1279d579b46192ef79250d1...4a64c390b04b469381c2698a3e36273f3784be2d?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.31% <0%> (ø)` | :white_check_mark: |\n| [pandas/core/common.py](https://codecov.io/gh/pandas-dev/pandas/compare/b3ae4c7698de4623e1279d579b46192ef79250d1...4a64c390b04b469381c2698a3e36273f3784be2d?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29tbW9uLnB5) | `91.36% <0%> (+0.33%)` | :white_check_mark: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15513?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15513?src=pr&el=footer). Last update [b3ae4c7...643d54b](https://codecov.io/gh/pandas-dev/pandas/compare/b3ae4c7698de4623e1279d579b46192ef79250d1...643d54b76edabb5d5954d2ecd960978dbf4d8d83?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282612183",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282612183",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282612183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjYxMjE4Mw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T02:19:51Z",
    "updated_at": "2017-02-27T02:19:51Z",
    "author_association": "MEMBER",
    "body": ">  So long as you agree with the method chaining philosophy, the ability to use df.melt(...) instead of df.pipe(lambda df: pd.melt(df, ...)) seems to absolutely be worth the maintenance burden.\r\n\r\nI think the alternative of `df.pipe(pd.melt, ...)` is not too bad."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282612384",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282612384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282612384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjYxMjM4NA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T02:21:51Z",
    "updated_at": "2017-02-27T02:30:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oof, my bad there with the method signature. I still don't want to have to use `pipe` though, if I can help it, for a built-in."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282613601",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282613601",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282613601,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjYxMzYwMQ==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T02:33:25Z",
    "updated_at": "2017-02-27T02:34:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Alright, I've added commits for each of the functions. Whichever ones we decide to transfer can be cherry-picked off the pull request.\r\n\r\n`get_dummies` was easily the most difficult of the set, since it required transferring some things between files. Hopefully I got the implementation right.\r\n\r\nTests still TBD, pending further discussion (?)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282655881",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282655881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282655881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjY1NTg4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T08:23:01Z",
    "updated_at": "2017-02-27T08:23:01Z",
    "author_association": "MEMBER",
    "body": "@jreback I think you are missing a few methods on DataFrame :-) \r\nBoth `pivot_table` and `merge` already *exist* also as DataFrame methods (one can discuss whether it is good that they are duplicated, but in any case they already are).\r\n\r\nA bit more specific concerns:\r\n\r\n- `crosstab`: \r\n  - the current signature is not suitable for adding it as a DataFrame method. As a consequence, your current implementation in this PR will also not work.\r\n  - The result of `crosstab` can already be obtained with `DataFrame.pivot_table` using `aggfunc='count'`, so a bit less essential although a convenient shortcut. But the convenient shortcut can also be a top-level function\r\n- `melt`:\r\n  - I agree this one would be nice to complement the existing reshaping dataframe method `pivot`\r\n  - But, there have also some issues been raised about the current melt API (https://github.com/pandas-dev/pandas/issues/10109, https://github.com/pandas-dev/pandas/issues/14876#issuecomment-266907956), so we should make sure that the *current* melt is what we actually want to add as a method\r\n\r\nI would also not move the `get_dummies` implementation, but keep it here consistent with the approach for the other reshaping methods: functionality in a separate module, import from there for adding it to NDFrame. We don't have any other public functions (apart from methods) defined in generic.py\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282737770",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282737770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282737770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjczNzc3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T14:38:09Z",
    "updated_at": "2017-02-27T14:38:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche you can see how much I use ``DataFrame.merge`` !\r\n\r\nyeah I think main method that needs inclusion is ``.melt`` (though ackowledge the signature confusion), but that's the case either way.\r\n\r\nand agree on ``.get_dummies``. I would argue that we should call this ``.dummies`` for consistency, but that's another issue.\r\n\r\nok @ResidentMario can you strip out just ``.melt`` for now (into a new PR) or update this one, either way."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/282772388",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15513#issuecomment-282772388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15513",
    "id": 282772388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Mjc3MjM4OA==",
    "user": {
      "login": "ResidentMario",
      "id": 3466341,
      "node_id": "MDQ6VXNlcjM0NjYzNDE=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3466341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ResidentMario",
      "html_url": "https://github.com/ResidentMario",
      "followers_url": "https://api.github.com/users/ResidentMario/followers",
      "following_url": "https://api.github.com/users/ResidentMario/following{/other_user}",
      "gists_url": "https://api.github.com/users/ResidentMario/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ResidentMario/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ResidentMario/subscriptions",
      "organizations_url": "https://api.github.com/users/ResidentMario/orgs",
      "repos_url": "https://api.github.com/users/ResidentMario/repos",
      "events_url": "https://api.github.com/users/ResidentMario/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ResidentMario/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-27T16:32:29Z",
    "updated_at": "2017-02-27T16:32:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll open a new PR with just the `melt` changes, then."
  }
]
