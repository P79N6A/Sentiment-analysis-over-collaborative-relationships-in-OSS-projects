[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453665606",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24729#issuecomment-453665606",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24729",
    "id": 453665606,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzY2NTYwNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T21:40:29Z",
    "updated_at": "2019-01-11T21:40:29Z",
    "author_association": "MEMBER",
    "body": "cc @jreback @toobaz "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453665884",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24729#issuecomment-453665884",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24729",
    "id": 453665884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzY2NTg4NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T21:41:30Z",
    "updated_at": "2019-01-11T21:41:30Z",
    "author_association": "MEMBER",
    "body": "@faulaire : Do you mind modifying your example slightly to construct the `DataFrame` explicitly instead of via `read_csv` ?  That way, it makes it clear to everyone that we're just focusing on the (un)stacking, and that CSV functionality is not really involved in this issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453672698",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24729#issuecomment-453672698",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24729",
    "id": 453672698,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzY3MjY5OA==",
    "user": {
      "login": "faulaire",
      "id": 306648,
      "node_id": "MDQ6VXNlcjMwNjY0OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/306648?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/faulaire",
      "html_url": "https://github.com/faulaire",
      "followers_url": "https://api.github.com/users/faulaire/followers",
      "following_url": "https://api.github.com/users/faulaire/following{/other_user}",
      "gists_url": "https://api.github.com/users/faulaire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/faulaire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/faulaire/subscriptions",
      "organizations_url": "https://api.github.com/users/faulaire/orgs",
      "repos_url": "https://api.github.com/users/faulaire/repos",
      "events_url": "https://api.github.com/users/faulaire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/faulaire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T22:08:19Z",
    "updated_at": "2019-01-11T22:08:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung  : done."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/476797315",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24729#issuecomment-476797315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24729",
    "id": 476797315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc5NzMxNQ==",
    "user": {
      "login": "alexmemory",
      "id": 926410,
      "node_id": "MDQ6VXNlcjkyNjQxMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/926410?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexmemory",
      "html_url": "https://github.com/alexmemory",
      "followers_url": "https://api.github.com/users/alexmemory/followers",
      "following_url": "https://api.github.com/users/alexmemory/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexmemory/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexmemory/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexmemory/subscriptions",
      "organizations_url": "https://api.github.com/users/alexmemory/orgs",
      "repos_url": "https://api.github.com/users/alexmemory/repos",
      "events_url": "https://api.github.com/users/alexmemory/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexmemory/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T18:52:33Z",
    "updated_at": "2019-03-26T18:52:33Z",
    "author_association": "NONE",
    "body": "Here's a different example of unexpected unstack behavior that may be related.  Like @faulaire's example, for single level columns the behavior is the expected one.  \r\n```python\r\nimport pandas as pd\r\ndf = (pd.DataFrame({**{'a'+str(n):[1] for n in range(7)}, \r\n                    **{'b0':[2]}})\r\n      .set_index(['a'+str(n) for n in range(7)]))\r\ndf = pd.concat([df], keys=['b1'], axis=1)\r\n# Expected true, actual true\r\ndf.unstack(['a0', 'a1', 'a2']).index.names == ['a3', 'a4', 'a5', 'a6']\r\n# Expected true, actual false\r\ndf.unstack(['a0', 'a1', 'a2', 'a3']).index.names == ['a4', 'a5', 'a6']\r\n# Expected false, actual true\r\ndf.unstack(['a0', 'a1', 'a2', 'a3']).index.names == ['a3', 'a5', 'a6']\r\n# Expected true, actual false\r\ndf.unstack(['a0', 'a1', 'a2', 'a3', 'a4']).index.names == ['a5', 'a6']\r\n# Expected false, actual true\r\ndf.unstack(['a0', 'a1', 'a2', 'a3', 'a4']).index.names == ['a3', 'a6']\r\n# If single level column, no problem \r\ndf.columns = df.columns.droplevel()\r\n# Expected true, actual true\r\ndf.unstack(['a0', 'a1', 'a2', 'a3']).index.names == ['a4', 'a5', 'a6']\r\n```"
  }
]
