[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285384779",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15634#issuecomment-285384779",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15634",
    "id": 285384779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTM4NDc3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T15:33:31Z",
    "updated_at": "2017-03-09T15:33:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @kernc "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287739694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15634#issuecomment-287739694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15634",
    "id": 287739694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzczOTY5NA==",
    "user": {
      "login": "kernc",
      "id": 684364,
      "node_id": "MDQ6VXNlcjY4NDM2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kernc",
      "html_url": "https://github.com/kernc",
      "followers_url": "https://api.github.com/users/kernc/followers",
      "following_url": "https://api.github.com/users/kernc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kernc/subscriptions",
      "organizations_url": "https://api.github.com/users/kernc/orgs",
      "repos_url": "https://api.github.com/users/kernc/repos",
      "events_url": "https://api.github.com/users/kernc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kernc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T11:58:29Z",
    "updated_at": "2017-05-03T10:51:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "So how would this work? The exact same functionality as currently in `.from_coo` which assigns a multiindex? Note, series from_coo is currently different from any series sliced from a sparse data frame:\r\n```py\r\n>>> spm = scipy.sparse.coo_matrix(np.eye(5))\r\n\r\n>>> pd.SparseSeries.from_coo(spm)\r\n0  0    1.0\r\n1  1    1.0\r\n2  2    1.0\r\n3  3    1.0\r\n4  4    1.0\r\ndtype: float64\r\nBlockIndex\r\nBlock locations: array([0], dtype=int32)\r\nBlock lengths: array([5], dtype=int32)\r\n\r\n>>> pd.SparseSeries.from_coo(spm.tocsr()[0].tocoo())  # first row only\r\n0  0    1.0\r\ndtype: float64\r\nBlockIndex\r\nBlock locations: array([0], dtype=int32)\r\nBlock lengths: array([1], dtype=int32)\r\n\r\n>>> pd.SparseDataFrame(spm).iloc[0]  # first row sliced from df\r\n0    1.0\r\n1    NaN\r\n2    NaN\r\n3    NaN\r\n4    NaN\r\nName: 0, dtype: float64\r\nBlockIndex\r\nBlock locations: array([0], dtype=int32)\r\nBlock lengths: array([1], dtype=int32)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287750720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15634#issuecomment-287750720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15634",
    "id": 287750720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Nzc1MDcyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T12:54:30Z",
    "updated_at": "2017-03-20T12:54:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking at this again, I think we should just fully deprecate this method. You can do the exact same thing with ``SparseDataFrame`` and its more natural. Though I can see a MultiIndex with a set of data is pretty much what COO is.\r\n\r\nI could see ``SparseSeries`` accepting a 1-d sparse structure though (is there a concept in scipy)?\r\n\r\nMaybe have a read in the original issue and see that the use was."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/296779084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15634#issuecomment-296779084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15634",
    "id": 296779084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Njc3OTA4NA==",
    "user": {
      "login": "kernc",
      "id": 684364,
      "node_id": "MDQ6VXNlcjY4NDM2NA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/684364?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kernc",
      "html_url": "https://github.com/kernc",
      "followers_url": "https://api.github.com/users/kernc/followers",
      "following_url": "https://api.github.com/users/kernc/following{/other_user}",
      "gists_url": "https://api.github.com/users/kernc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kernc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kernc/subscriptions",
      "organizations_url": "https://api.github.com/users/kernc/orgs",
      "repos_url": "https://api.github.com/users/kernc/repos",
      "events_url": "https://api.github.com/users/kernc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kernc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-24T18:20:18Z",
    "updated_at": "2017-05-03T10:42:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> a MultiIndex with a set of data is pretty much what COO is\r\n\r\nBut that's an implementation detail of what is generally an arbitrary n-d structure. `(row, col), value` triplets could just as well (or better) be represented with a non-sparse Series.\r\n\r\n> I could see SparseSeries accepting a 1-d sparse structure though (is there a concept in scipy)?\r\n\r\nAll scipy sparse matrces are `ndim == 2`. Since `spm.mean(0)` is a 1x5 matrix, we still might accept such a matrix in the constructor when any dimension has length 1. Will prepare something. Is it too late to get it in v0.20.0?\r\n\r\n-----\r\n\r\n`to_coo`/`from_coo` introduced in PR https://github.com/pandas-dev/pandas/pull/9076 fixing https://github.com/pandas-dev/pandas/issues/8048.\r\nThe main use case seems to have been the use of [`SparseSeries.unstack()` to shape the MultiIndex sparse series into a sparse data frame](https://github.com/pandas-dev/pandas/issues/8048#issuecomment-52427404). So indeed, using the frame is more natural."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297846693",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15634#issuecomment-297846693",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15634",
    "id": 297846693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Nzg0NjY5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T21:39:01Z",
    "updated_at": "2017-04-27T21:39:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kernc yeah the more I look at this the more I think we should just remove these from ``Series`` entirely. Is there truly a useful case for having them on ``Series``?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/297846879",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15634#issuecomment-297846879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15634",
    "id": 297846879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Nzg0Njg3OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T21:39:47Z",
    "updated_at": "2017-04-27T21:39:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Will prepare something. Is it too late to get it in v0.20.0?\r\n\r\nyes; to the extent that something is a true bug fix or simply an enhancement it can go in a point release (e.g. 0.20.1)"
  }
]
