[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379981388",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16425#issuecomment-379981388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16425",
    "id": 379981388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTk4MTM4OA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T05:47:25Z",
    "updated_at": "2018-04-10T05:47:25Z",
    "author_association": "MEMBER",
    "body": "What is the expectation of this? Doesn't expanding just provide a window yielding all values up to that point in time? \r\n\r\nIt's not possible to provide the size of the window in the expanding constructor hence the error (it gets inadvertently sent to the `min_periods` argument instead) so this is a non-issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380001252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16425#issuecomment-380001252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16425",
    "id": 380001252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDAwMTI1Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T07:25:10Z",
    "updated_at": "2018-04-10T07:25:10Z",
    "author_association": "MEMBER",
    "body": "I am also not sure what the original intent was, but if it is to specify `min_periods` using a frequency string (since `min_periods` is the only keyword argument apart from center/axis): I personally don't think that makes sense in the case of expanding."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380078093",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16425#issuecomment-380078093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16425",
    "id": 380078093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDA3ODA5Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-10T12:18:35Z",
    "updated_at": "2018-04-10T12:18:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "i'll clarify. it is useful to run an expanding window with a min_periods. For rolling min_periods defaults to the same as the window length \r\n\r\n```\r\nIn [7]: dft.expanding(min_periods='2s').sum()\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-7-597db88bedaf> in <module>()\r\n----> 1 dft.expanding(min_periods='2s').sum()\r\n\r\n~/pandas/pandas/core/generic.py in expanding(self, min_periods, center, axis)\r\n   8721             axis = self._get_axis_number(axis)\r\n   8722             return rwindow.expanding(self, min_periods=min_periods,\r\n-> 8723                                      center=center, axis=axis)\r\n   8724 \r\n   8725         cls.expanding = expanding\r\n\r\n~/pandas/pandas/core/window.py in expanding(obj, **kwds)\r\n   2396         raise TypeError('invalid type: %s' % type(obj))\r\n   2397 \r\n-> 2398     return Expanding(obj, **kwds)\r\n   2399 \r\n   2400 \r\n\r\n~/pandas/pandas/core/window.py in __init__(self, obj, min_periods, center, axis, **kwargs)\r\n   1686                  **kwargs):\r\n   1687         super(Expanding, self).__init__(obj=obj, min_periods=min_periods,\r\n-> 1688                                         center=center, axis=axis)\r\n   1689 \r\n   1690     @property\r\n\r\n~/pandas/pandas/core/window.py in __init__(self, obj, window, min_periods, center, win_type, axis, on, closed, **kwargs)\r\n     78         self.win_freq = None\r\n     79         self.axis = obj._get_axis_number(axis) if axis is not None else None\r\n---> 80         self.validate()\r\n     81 \r\n     82     @property\r\n\r\n~/pandas/pandas/core/window.py in validate(self)\r\n    101         if self.min_periods is not None and not \\\r\n    102            is_integer(self.min_periods):\r\n--> 103             raise ValueError(\"min_periods must be an integer\")\r\n    104         if self.closed is not None and self.closed not in \\\r\n    105            ['right', 'both', 'left', 'neither']:\r\n\r\nValueError: min_periods must be an integer\r\n```\r\n\r\nNote this doesn't actually work for rolling either.\r\n```\r\nIn [8]: dft.rolling('2s', min_periods='2s').sum()\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-8-9001c1afc49b> in <module>()\r\n----> 1 dft.rolling('2s', min_periods='2s').sum()\r\n\r\n~/pandas/pandas/core/generic.py in rolling(self, window, min_periods, center, win_type, on, axis, closed)\r\n   8713                                    min_periods=min_periods,\r\n   8714                                    center=center, win_type=win_type,\r\n-> 8715                                    on=on, axis=axis, closed=closed)\r\n   8716 \r\n   8717         cls.rolling = rolling\r\n\r\n~/pandas/pandas/core/window.py in rolling(obj, win_type, **kwds)\r\n   2386         return Window(obj, win_type=win_type, **kwds)\r\n   2387 \r\n-> 2388     return Rolling(obj, **kwds)\r\n   2389 \r\n   2390 \r\n\r\n~/pandas/pandas/core/window.py in __init__(self, obj, window, min_periods, center, win_type, axis, on, closed, **kwargs)\r\n     78         self.win_freq = None\r\n     79         self.axis = obj._get_axis_number(axis) if axis is not None else None\r\n---> 80         self.validate()\r\n     81 \r\n     82     @property\r\n\r\n~/pandas/pandas/core/window.py in validate(self)\r\n   1373 \r\n   1374     def validate(self):\r\n-> 1375         super(Rolling, self).validate()\r\n   1376 \r\n   1377         # we allow rolling on a datetimelike index\r\n\r\n~/pandas/pandas/core/window.py in validate(self)\r\n    101         if self.min_periods is not None and not \\\r\n    102            is_integer(self.min_periods):\r\n--> 103             raise ValueError(\"min_periods must be an integer\")\r\n    104         if self.closed is not None and self.closed not in \\\r\n    105            ['right', 'both', 'left', 'neither']:\r\n\r\nValueError: min_periods must be an integer\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380319024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16425#issuecomment-380319024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16425",
    "id": 380319024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDMxOTAyNA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-11T03:53:48Z",
    "updated_at": "2018-04-11T03:53:48Z",
    "author_association": "MEMBER",
    "body": "What would you expect in the above examples though? Perhaps I'm misreading this but I feel like this is a way of requiring a minimum distance from a given point in the window to calculate. So with the above you'd ignore any entry that wasn't at least 2s away from the window location (?). \r\n\r\nIf that's the case do we need to restrict this to frequencies or could we apply that same time of logic to numeric indices as well?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380425488",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16425#issuecomment-380425488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16425",
    "id": 380425488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDQyNTQ4OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-11T11:54:40Z",
    "updated_at": "2018-04-11T11:54:40Z",
    "author_association": "MEMBER",
    "body": "Yes, I also don't directly see how it would *work*.\r\n\r\nLet's take an example:\r\n\r\n```\r\nIn [114]: s = pd.Series(range(8), index=pd.date_range(\"2018-01-01\", periods=8))\r\n\r\nIn [115]: s.iloc[3] = np.nan\r\n\r\nIn [116]: s\r\nOut[116]: \r\n2018-01-01    0.0\r\n2018-01-02    1.0\r\n2018-01-03    2.0\r\n2018-01-04    NaN\r\n2018-01-05    4.0\r\n2018-01-06    5.0\r\n2018-01-07    6.0\r\n2018-01-08    7.0\r\nFreq: D, dtype: float64\r\n\r\nIn [117]: s.rolling('3D', min_periods=3).sum()\r\nOut[117]: \r\n2018-01-01     NaN\r\n2018-01-02     NaN\r\n2018-01-03     3.0\r\n2018-01-04     NaN\r\n2018-01-05     NaN\r\n2018-01-06     NaN\r\n2018-01-07    15.0\r\n2018-01-08    18.0\r\nFreq: D, dtype: float64\r\n```\r\n\r\nThe `min_periods=3` ensures that where there is the original NaN gap, we get NaNs in the result. \r\n\r\nBut what would a `min_periods='3D'` do? Assume you get the window of 2018-01-03 to 2018-01-05, which is a window of 3 days, but has only 2 valid values. "
  }
]
