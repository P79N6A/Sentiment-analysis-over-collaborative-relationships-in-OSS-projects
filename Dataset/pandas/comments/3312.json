[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406934333",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3312#issuecomment-406934333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3312",
    "id": 406934333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjkzNDMzMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-23T04:16:06Z",
    "updated_at": "2018-07-23T04:16:06Z",
    "author_association": "MEMBER",
    "body": "@jreback I think this PR introduced some behavior (definitely codified it in a test) that is incorrect.  From the test:\r\n\r\n```\r\n        df = DataFrame(dict(A = date_range('20130102',periods=5), \r\n                            B = date_range('20130104',periods=5),\r\n                            C = np.random.randn(5)))\r\n\r\n        stamp = datetime(2013,1,3)\r\n        result = df[df > stamp]\r\n```\r\n\r\nBut if you just look at the `df  > stamp`:\r\n\r\n```\r\n>>> df > stamp\r\n       A     B     C\r\n0  False  True  True\r\n1  False  True  True\r\n2   True  True  True\r\n3   True  True  True\r\n4   True  True  True\r\n```\r\n\r\nConsistency with `Series`, `Index`, and scalars would require comparison with the \"C\" column to raise `TypeError`.  Also the reverse inequality _also_ comes back as all-True for the \"C\" column:\r\n\r\n```\r\n>>> df < stamp\r\n       A      B     C\r\n0   True  False  True\r\n1  False  False  True\r\n2  False  False  True\r\n3  False  False  True\r\n4  False  False  True\r\n```\r\n\r\nSo the question: OK to make this raise?  Or is there a compelling reason for this to be different?"
  }
]
