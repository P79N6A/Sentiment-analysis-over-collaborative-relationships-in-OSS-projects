[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66533080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-66533080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 66533080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTMzMDgw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-10T22:06:25Z",
    "updated_at": "2014-12-10T22:06:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref is #8593  (which would replace / enhance this)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66580380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-66580380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 66580380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NTgwMzgw",
    "user": {
      "login": "aimboden",
      "id": 8589139,
      "node_id": "MDQ6VXNlcjg1ODkxMzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/8589139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aimboden",
      "html_url": "https://github.com/aimboden",
      "followers_url": "https://api.github.com/users/aimboden/followers",
      "following_url": "https://api.github.com/users/aimboden/following{/other_user}",
      "gists_url": "https://api.github.com/users/aimboden/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aimboden/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aimboden/subscriptions",
      "organizations_url": "https://api.github.com/users/aimboden/orgs",
      "repos_url": "https://api.github.com/users/aimboden/repos",
      "events_url": "https://api.github.com/users/aimboden/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aimboden/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-11T06:59:42Z",
    "updated_at": "2014-12-11T06:59:42Z",
    "author_association": "NONE",
    "body": "Thanks for the tip. Didn't realize this was possible either, this will save me from building my multicolumns \"by hand\".\n\n@jreback are you planning any API change for 0.16.0 on this? #8593 does not seem to interfere with this behaviour, but maybe a deeper change is planned?\n\nI'd rather not rely on this if it's not tested atm. Or would you accept a test for this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66604565",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-66604565",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 66604565,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NjA0NTY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-11T11:11:35Z",
    "updated_at": "2014-12-11T11:11:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Gimli510 this IS implemented. Its basically the same as the following (except the name determination is slightly different).\n\n```\nIn [5]: df.groupby('B').agg({'A': ['mean','median'], 'C': ['mean','median']})\nOut[5]: \n     A           C       \n  mean median mean median\nB                        \na  1.5    1.5  3.5    3.5\nb  3.0    3.0  5.0    5.0\n```\n\nI haven't carefully looked thru, but I suspect their is at least 1 tests. Though would for sure accept a PR which makes these tests more prominent (e.g. test_agg_api or something).\n\n`pd.Summary` will enhance this API, the existing will remain.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/156270964",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-156270964",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 156270964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NjI3MDk2NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-12T23:34:17Z",
    "updated_at": "2015-11-12T23:34:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "from [mailing list](https://groups.google.com/forum/#!topic/pydata/nXutBGUDEYw)\n\n```\nIn [2]: df = pd.DataFrame({'A' : ['foo', 'bar', 'foo', 'bar',\n   ...:                           'foo', 'bar', 'foo', 'foo'],\n   ...:                    'B' : ['one', 'one', 'two', 'three',\n   ...:                           'two', 'two', 'one', 'three'],\n   ...:                    'C' : np.random.randn(8),\n   ...:                    'D' : np.random.randn(8)})\n\nIn [3]: \n\nIn [3]: grouped = df.groupby(['A', 'B'])\n\nIn [4]: grouped[['D','C']].agg({'r':np.sum, 'r2':np.mean})\nOut[4]: \n                    r        r2\nA   B                          \nbar one   D -0.460078 -0.460078\n          C  0.798220  0.798220\n    three D  1.599986  1.599986\n          C -0.554798 -0.554798\n    two   D  0.124900  0.124900\n          C  0.084758  0.084758\nfoo one   D -0.466082 -0.233041\n          C -0.585512 -0.292756\n    three D -0.184726 -0.184726\n          C  0.130756  0.130756\n    two   D -1.985586 -0.992793\n          C  1.275138  0.637569\n\nIn [5]: grouped[['D','C']].agg({'r': { 'C' : np.sum }, 'r2' : { 'D' : np.mean }})\nOut[5]: \n                    r        r2\n                    C         D\nA   B                          \nbar one   D -0.460078 -0.460078\n          C  0.798220  0.798220\n    three D  1.599986  1.599986\n          C -0.554798 -0.554798\n    two   D  0.124900  0.124900\n          C  0.084758  0.084758\nfoo one   D -0.466082 -0.233041\n          C -0.585512 -0.292756\n    three D -0.184726 -0.184726\n          C  0.130756  0.130756\n    two   D -1.985586 -0.992793\n          C  1.275138  0.637569\n\nIn [6]: grouped[['D','C']].agg([np.sum, np.mean])\nOut[6]: \n                  D                   C          \n                sum      mean       sum      mean\nA   B                                            \nbar one   -0.460078 -0.460078  0.798220  0.798220\n    three  1.599986  1.599986 -0.554798 -0.554798\n    two    0.124900  0.124900  0.084758  0.084758\nfoo one   -0.466082 -0.233041 -0.585512 -0.292756\n    three -0.184726 -0.184726  0.130756  0.130756\n    two   -1.985586 -0.992793  1.275138  0.637569\n```\n\nwith a trivial patch\n\n```\ndiff --git a/pandas/core/groupby.py b/pandas/core/groupby.py\nindex add5080..b885b6f 100644\n--- a/pandas/core/groupby.py\n+++ b/pandas/core/groupby.py\n@@ -2837,9 +2837,6 @@ class NDFrameGroupBy(GroupBy):\n             keys = []\n             if self._selection is not None:\n                 subset = obj\n-                if isinstance(subset, DataFrame):\n-                    raise NotImplementedError(\"Aggregating on a DataFrame is \"\n-                                              \"not supported\")\n\n                 for fname, agg_how in compat.iteritems(arg):\n                     colg = SeriesGroupBy(subset, selection=self._selection,\n```\n\nof course need some tests......\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164754772",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-164754772",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 164754772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDc1NDc3Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-15T12:49:45Z",
    "updated_at": "2015-12-15T12:49:45Z",
    "author_association": "MEMBER",
    "body": "I do not really like this:\n\n```\nIn [3]: grouped = df.groupby(['A', 'B'])\n\nIn [4]: grouped[['D','C']].agg({'r':np.sum, 'r2':np.mean})\nOut[4]: \n                    r        r2\nA   B                          \nbar one   D -0.460078 -0.460078\n          C  0.798220  0.798220\n    three D  1.599986  1.599986\n...\n```\n\nThe fact that `C` and `D` end up as rows, feels so different as all other groupby things, that I would not add it to the API. It is rather easy to get with a `stack` after `groupby` if you want it that way.\n\nAlso, it is a bit strange that it works on `grouped[['C', 'D']]`, but not on `grouped` itself, while it both are DataFrameGroupby objects (but this is also inconsistent with current master). I would expect both to be the same, but that is not the case now:\n\n```\nIn [27]: grouped[['C', 'D']].agg({'r':np.sum, 'r2':np.mean})\n...\nNotImplementedError: Aggregating on a DataFrame is not supported\n\nIn [28]: grouped.agg({'r':np.sum, 'r2':np.mean})\n...\nKeyError: 'r'\n```\n\n```\nIn [21]: grouped[['D','C']].agg({'D':np.sum, 'C':np.mean})\n...\nNotImplementedError: Aggregating on a DataFrame is not supported\n\nIn [22]: grouped.agg({'D':np.sum, 'C':np.mean})\nOut[22]:\n                  C         D\nA   B\nbar one    1.249205 -1.576279\n    three -0.262759 -0.352865\n    two    1.151419 -0.670436\nfoo one   -0.259004 -0.135123\n    three  0.588044 -0.523053\n    two    0.817821  2.095902\n```\n\nSo apparantly `grouped` and `grouped[['C', 'D']]` is not the same, but this difference has never occured to me (I though it was the same just like `df` and `df[['C', 'D']]` is the same for a frame with those two columns). So I think this difference is also too subtle to base different behaviour upon.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/164759860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-164759860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 164759860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NDc1OTg2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-15T13:16:50Z",
    "updated_at": "2015-12-15T13:17:42Z",
    "author_association": "MEMBER",
    "body": "I think the most important is to have a clear set of rules how the (nested) dicts are interpreted. Eg:\n- For a SeriesGroupby: \n  - list: applies functions, and different column names are inferred from function \n    - eg `grouped['C'].agg(['mean', 'std'])`)\n  - flat dict: different columns names are taken from the dict keys \n    - eg `grouped['C'].agg({'C_mean': 'mean', 'C_std': 'std'})`)\n  - nested dict (with lists/dicts as elements): not allowed\n- For a DataFrameGroupby:\n  - list: functions are applied to each column, column names are inferred from functions, end up with MultiIndex\n    - eg `grouped[['C', 'D']].agg(['mean', 'std'])`\n  - flat dict: to specify a different (set of) function(s) to be applied to each column\n    - eg `grouped.agg({'C': 'mean', 'D': ['mean', 'std']})`\n    - and I think `grouped[['C', 'D']].agg({'C': 'mean', 'D': ['mean', 'std']})` should be equivalent\n  - nested dict: first level is column to which function is applied, second level can be used to give custom names to columns (current behaviour)\n    - eg `grouped.agg({'C': {'mean1': 'mean', 'med1': 'median'}, 'D': {'mean2': 'mean', 'med2': 'median'}})`\n    - and I think `grouped[['C', 'D']].agg(..)` should be equivalent. \n\nThe above are the current rules (as far as I know from using it, I don't know if everything is explicitly meant/tested/documented to be the rules). \nYou can do almost everything, but indeed the case for a DataFrameGroupby of \"apply several functions to all columns but with custom name\" is not really easy. Because the first level of the dict is interpreted as the column names, you now have to repeat this twice:\n\n```\nIn [48]: grouped.agg({'C': {'r':np.sum, 'r2':np.mean},'D': {'r':np.sum, 'r2':np.\nmean}})\nOut[48]:\n                  C                   D\n                  r        r2         r        r2\nA   B\nbar one    1.249205  1.249205 -1.576279 -1.576279\n    three -0.262759 -0.262759 -0.352865 -0.352865\n    two    1.151419  1.151419 -0.670436 -0.670436\nfoo one   -0.518008 -0.259004 -0.135123 -0.067562\n    three  0.588044  0.588044 -0.523053 -0.523053\n    two    1.635643  0.817821  2.095902  1.047951\n```\n\nBut allowing to let the first level of the dict to be the custom names instead of column names (as implemented in #11603) to ease this case:\n\n```\nIn [130]: grouped[['D','C']].agg({'r':np.sum, 'r2':np.mean})     ## not behaviour of master\nOut[130]:\n                    r        r2\nA   B\nbar one   D -0.435276 -0.435276\n          C  0.602266  0.602266\n    three D -2.090016 -2.090016\n          C -1.138887 -1.138887\n    two   D -1.012663 -1.012663\n          C  1.069958  1.069958\nfoo one   D -0.609795 -0.304898\n          C -0.812805 -0.406402\n    three D -1.957863 -1.957863\n          C  0.655829  0.655829\n    two   D  1.139243  0.569621\n          C -0.327944 -0.163972\n```\n\nseems like a potential rabbit hole to me .. (possible conflicts between existing column names / custom names, behaviour dependent on the presence of a column with a certain name, ..)\n\nSo I would rather vote to keep the rules as above, and remove the distinction between `grouped` and `grouped[['C', 'D']]`. \nI agree that it makes the specified use case of above (and of https://groups.google.com/forum/#!topic/pydata/nXutBGUDEYw) more cumbersome, but I do not directly see a way to do this cleanly\n\ncc @jreback @TomAugspurger @sinhrks @shoyer \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/165985607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-165985607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 165985607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTk4NTYwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-19T13:52:34Z",
    "updated_at": "2015-12-19T13:52:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "acutally not closing this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183999756",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-183999756",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 183999756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4Mzk5OTc1Ng==",
    "user": {
      "login": "xflr6",
      "id": 6342379,
      "node_id": "MDQ6VXNlcjYzNDIzNzk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6342379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xflr6",
      "html_url": "https://github.com/xflr6",
      "followers_url": "https://api.github.com/users/xflr6/followers",
      "following_url": "https://api.github.com/users/xflr6/following{/other_user}",
      "gists_url": "https://api.github.com/users/xflr6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xflr6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xflr6/subscriptions",
      "organizations_url": "https://api.github.com/users/xflr6/orgs",
      "repos_url": "https://api.github.com/users/xflr6/repos",
      "events_url": "https://api.github.com/users/xflr6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xflr6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-14T23:15:42Z",
    "updated_at": "2016-02-14T23:15:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "The following raises `SpecificationError` in 0.18.0, although there is no [ambiguity](https://github.com/jreback/pandas/commit/e243f1808fd97c746990bc8a6f7cbc449584bec9) (SeriesGroupby):\n\n``` python\nimport pandas as pd\nimport numpy as np\n\ndf = pd.DataFrame({'A': ['foo', 'bar', 'foo', 'bar',\n                         'foo', 'bar', 'foo', 'foo'],\n                   'B': ['one', 'one', 'two', 'three',\n                         'two', 'two', 'one', 'three'],\n                   'C': np.random.randn(8),\n                   'D': np.arange(8)})\n\ngrouped = df.groupby(['A', 'B'])\n\ngrouped['D'].agg({'D': np.sum, 'result2': np.mean})\n```\n\nIs this intended or a bug (I'd prefer to be able to reuse the series column name)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184003243",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-184003243",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 184003243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDAwMzI0Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-14T23:25:09Z",
    "updated_at": "2016-02-14T23:25:09Z",
    "author_association": "MEMBER",
    "body": "This should work (it is also a regression, as it worked before). \nI think this should work because for a SeriesGroupBy, the dict keys can/should always be interpreted as new column names, and not to select existing columns names.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/184251501",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-184251501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 184251501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDI1MTUwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-15T15:22:50Z",
    "updated_at": "2016-02-15T15:23:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@xflr6 \n\nthis is fixed in #12329 \n\n```\nIn [3]: grouped['D'].agg({'D': np.sum, 'result2': np.mean})\nOut[3]: \n           result2  D\nA   B                \nbar one          1  1\n    three        3  3\n    two          5  5\nfoo one          3  6\n    three        7  7\n    two          3  6\n```\n\nNote that this works as well, though maybe not as to the users intent (e.g. the C is exactly a label here, nothing to do with the actual aggregation columns.\n\n```\nIn [4]: grouped['D'].agg({'D': np.sum, 'c': np.mean})\nOut[4]: \n           C  D\nA   B          \nbar one    1  1\n    three  3  3\n    two    5  5\nfoo one    3  6\n    three  7  7\n    two    3  6\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275852333",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-275852333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 275852333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTg1MjMzMw==",
    "user": {
      "login": "arita37",
      "id": 18707623,
      "node_id": "MDQ6VXNlcjE4NzA3NjIz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18707623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arita37",
      "html_url": "https://github.com/arita37",
      "followers_url": "https://api.github.com/users/arita37/followers",
      "following_url": "https://api.github.com/users/arita37/following{/other_user}",
      "gists_url": "https://api.github.com/users/arita37/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arita37/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arita37/subscriptions",
      "organizations_url": "https://api.github.com/users/arita37/orgs",
      "repos_url": "https://api.github.com/users/arita37/repos",
      "events_url": "https://api.github.com/users/arita37/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arita37/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-28T14:50:11Z",
    "updated_at": "2017-01-28T14:50:11Z",
    "author_association": "NONE",
    "body": "To reference on complex groupby:\r\nWe have sometimes 2 dimensionnal data like\r\n`date, user_id, val1, val2, val3`\r\n\r\nand need to transform into 'groupby' :  \r\n`user_id_, mycol1, mycol2,..`\r\n\r\nUsually, this is done by\r\n```\r\nfor x in user_id_list : \r\n   dfi= df[ df.user_id= x] \r\n   user_dict[x]['mycol1']=  myfun(dfi)\r\n   user_dict[x]['mycol2']=  myfun2(dfi)\r\n```\r\n\r\n\r\nIs there a way to this kind of complex and generic grouping in groupby pandas ?\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275853010",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9052#issuecomment-275853010",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9052",
    "id": 275853010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTg1MzAxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-28T15:02:37Z",
    "updated_at": "2017-01-28T15:02:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas.pydata.org/pandas-docs/stable/groupby.html#aggregation"
  }
]
