[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30223253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30223253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30223253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjIzMjUz",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-10T12:49:50Z",
    "updated_at": "2013-12-10T12:49:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd be on board with that. Definitely gets annoying to constantly be\ncalling fillna() before/after bool-producing string methods.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30233157",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30233157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30233157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjMzMTU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-10T14:51:30Z",
    "updated_at": "2013-12-10T14:51:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can do this. Though I agree with you both that this should be the default for the 'boolean' type of ops on strings.\n\n```\nIn [6]: dta.ix[dta.vari.str.startswith('f',na=False)]\nOut[6]: \n     vari\n2  foobar\n\n[1 rows x 1 columns]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30561515",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30561515",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30561515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTYxNTE1",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T06:22:38Z",
    "updated_at": "2013-12-14T06:23:15Z",
    "author_association": "NONE",
    "body": "Yes it should. :+1: \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30578723",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30578723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30578723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTc4NzIz",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T16:21:11Z",
    "updated_at": "2013-12-14T16:22:20Z",
    "author_association": "NONE",
    "body": "Isn't there a legitimate distinction between missing values and empty strings to be preserved?\n\n```\nIn [43]: pd.read_csv(StringIO(\"'123', '',, '123'\"),dialect=csv.get_dialect(\"excel\"),header=None)\nOut[43]: \n       0    1   2       3\n0  '123'   '' NaN   '123'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30580418",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30580418",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30580418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTgwNDE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T16:42:40Z",
    "updated_at": "2013-12-14T16:42:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@y-p this only applies to Series.str methods (and only the ones that return bools)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30580716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30580716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30580716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTgwNzE2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T16:55:14Z",
    "updated_at": "2013-12-14T16:55:36Z",
    "author_association": "NONE",
    "body": "@jreback, isn't proper nan propagation the right thing everywhere, even the Series.str methods?\n\nAn empty string is not a nan, and it looks like at least in the example given if you don't mixup the two -\nthe problem goes away.\n\nThere may be other cases, if so, let's look at those.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30580921",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30580921",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30580921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTgwOTIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T17:06:10Z",
    "updated_at": "2013-12-14T17:06:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the issue is that a method that is in effect a boolean method can return Nan's so you always need to fill \n\nthose methods should be guaranteed boolean returns\n\nkind of like any/all always return a boolean result\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30581608",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30581608",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30581608,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTgxNjA4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T17:38:58Z",
    "updated_at": "2013-12-14T17:38:58Z",
    "author_association": "NONE",
    "body": "they _are_ methods that return boolean series, I don't think it's true nans have no intrinsic \nmeaning in a boolean series. course they do.\n\n```\nIn [45]: np.array([False, np.nan, True])\nOut[45]: array([  0.,  nan,   1.])\n```\n\n...excepting the usual limitations of numpy arrays wrt to nan for some dtypes. That's not a good \nreason though.\n`any` and `all` seem to have that behaviour on the surface, but i's because of the way they test\nvalues, not because they explicitly ignore nans. Plus, I'm pretty sure that's not what you want here:\n\n```\nIn [51]: np.array([np.nan,  np.nan]).any()\nOut[51]: True\nIn [50]: bool(np.nan)\nOut[50]: True\n```\n\nIf you want nans to behave like empty strings, use empty strings instead. Problem solved. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30581838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30581838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30581838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTgxODM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T17:48:40Z",
    "updated_at": "2013-12-14T17:48:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "their is already an argument, na to the string method to fill the Nan's - no interpretation required\n\nI think a method in python space\n\nstartswith always returns a boolean result\n\nand the default makes sense to return a boolean array in pandas (right now the default for na is False, the proposal is to make it True)\n\nI think their are 2 classes of string methods: boolean operators (startswitj, contains) and transformers (split,extract)\n\nthe first should fillna according to the na arg, the second should not\n\nbooleans tend to be used in indexing, so u can argue whether the default should be True or False but I think it's clear that it should be boolean\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30582316",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30582316",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30582316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTgyMzE2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T18:11:32Z",
    "updated_at": "2013-12-14T18:11:46Z",
    "author_association": "NONE",
    "body": "It makes sense to me that some questions have undefined as their answer.\nIsn't np.nan a signal for \"I can't answer that\"?\n\n```\nIn [87]: s=pd.Series([1])\n    ...: s.str.startswith(\"a\")\n    ...: \nOut[87]: \n0   NaN\ndtype: float64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30586422",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30586422",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30586422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTg2NDIy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-14T19:57:06Z",
    "updated_at": "2013-12-14T19:57:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's a bit annoying that you have to do fillna, but at least it errors out when you try to use it as a selector:\n\n``` python\n>>> df = pd.DataFrame({\"A\":['a', np.nan]})\n>>> df[df.A.str.startswith('a')]\nTraceback\n    ...\nValueError: cannot index with vector containing NA / NaN values.\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30596191",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30596191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30596191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTk2MTkx",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-15T01:50:28Z",
    "updated_at": "2013-12-15T01:50:28Z",
    "author_association": "NONE",
    "body": "That's a more reasonable place to choose the semantics of indexing with nan.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/30596639",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5672#issuecomment-30596639",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5672",
    "id": 30596639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTk2NjM5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-12-15T02:29:38Z",
    "updated_at": "2013-12-15T02:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Why is the kwarg called `na`? Do we do that elsewhere?\n"
  }
]
