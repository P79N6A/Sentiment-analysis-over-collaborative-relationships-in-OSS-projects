[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/129206593",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10778#issuecomment-129206593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10778",
    "id": 129206593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTIwNjU5Mw==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-09T16:06:12Z",
    "updated_at": "2015-08-09T16:06:12Z",
    "author_association": "NONE",
    "body": "If I convert using `df['B'] = df['B'].astype(str)`, then `df.to_json` works fine.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/129405560",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10778#issuecomment-129405560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10778",
    "id": 129405560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyOTQwNTU2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-10T10:51:40Z",
    "updated_at": "2015-08-10T10:51:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #10321 \n\nThis has not been implemented. pull-requests are welcome.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/165807812",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10778#issuecomment-165807812",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10778",
    "id": 165807812,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTgwNzgxMg==",
    "user": {
      "login": "bbirand",
      "id": 334435,
      "node_id": "MDQ6VXNlcjMzNDQzNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/334435?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bbirand",
      "html_url": "https://github.com/bbirand",
      "followers_url": "https://api.github.com/users/bbirand/followers",
      "following_url": "https://api.github.com/users/bbirand/following{/other_user}",
      "gists_url": "https://api.github.com/users/bbirand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bbirand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bbirand/subscriptions",
      "organizations_url": "https://api.github.com/users/bbirand/orgs",
      "repos_url": "https://api.github.com/users/bbirand/repos",
      "events_url": "https://api.github.com/users/bbirand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bbirand/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-18T15:34:46Z",
    "updated_at": "2015-12-18T15:34:46Z",
    "author_association": "NONE",
    "body": ":+1: \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/177125549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10778#issuecomment-177125549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10778",
    "id": 177125549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NzEyNTU0OQ==",
    "user": {
      "login": "Timusan",
      "id": 1012919,
      "node_id": "MDQ6VXNlcjEwMTI5MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1012919?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Timusan",
      "html_url": "https://github.com/Timusan",
      "followers_url": "https://api.github.com/users/Timusan/followers",
      "following_url": "https://api.github.com/users/Timusan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Timusan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Timusan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Timusan/subscriptions",
      "organizations_url": "https://api.github.com/users/Timusan/orgs",
      "repos_url": "https://api.github.com/users/Timusan/repos",
      "events_url": "https://api.github.com/users/Timusan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Timusan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-30T09:27:17Z",
    "updated_at": "2016-01-31T23:15:17Z",
    "author_association": "NONE",
    "body": "My apologies if this is simply extra noise, but I think I came across the same issue in (maybe) a slightly different situation. Thought this might help to give more insight into this issue.\n\nWith me this happens when trying to convert a DataFrame with binned data into JSON.\n\nThe kernel reports back the following:\n\nJan 30 18:18:04 debian kernel: [ 1632.371968] python[24794]: segfault at ffffffffffffffff ip 00007f58f570655d sp 00007ffe13a8c410 error 7 in multiarray.so[7f58f55bf000+1d9000]\n\nVersion info:\n- Linux Debian Jessie x86_64\n- Python 2.7.10 (GCC 4.9.2)\n- NumPy 1.10.4\n- Pandas 0.17.1\n\nGreatly simplified piece of code which reproduces the error:\n\n```\nimport pandas\n\ndef calculate_age_dist(df):\n    # Setup the bins to divide. Setting a final bin\n    # of 200 to mimic 60+ behavior.\n    age_ranges = [0,2,10,20,30,40,50,60,200]\n    age_ranges_labels = ['0-1', '2-9', '10-19', '20-29',\n                         '30-39', '40-49', '50-59', '60+']\n\n    # Divide the data into the bins. Using \"right=False\" to\n    # exclude the upper range (so 30 is only included in bin 30-40\n    # and not in bin 20-30).\n    df['age_cat'] = pandas.cut(x = df['age'],\n                               bins = age_ranges,\n                               right = False,\n                               labels = age_ranges_labels)\n\n    # Leave only the top ten sports per age group\n    # and convert the whole back to a DataFrame.\n    age_dist = age_dist.groupby('age_cat').head(10).reset_index(drop=True)\n\n    return age_dist\n\n# The data.\ndf = pandas.DataFrame(data = {'age': [55,20,30,40,50,60,65,23],\n                              'sport': ['soccer', 'baseball', 'soccer', 'football',\n                                        'swimming', 'tennig', 'swimming', 'baseball']},\n                      columns = {'age', 'sport'})\n\n# The call which causes the segfault.\nprint calculate_age_dist(df).to_json()\n```\n\nConverting the \"age_cat\" column with `df['age_cat'] = df['age_cat'].astype(str)` does indeed circumvent the segfault.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464847994",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10778#issuecomment-464847994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10778",
    "id": 464847994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDg0Nzk5NA==",
    "user": {
      "login": "annacnev",
      "id": 40902441,
      "node_id": "MDQ6VXNlcjQwOTAyNDQx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/40902441?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/annacnev",
      "html_url": "https://github.com/annacnev",
      "followers_url": "https://api.github.com/users/annacnev/followers",
      "following_url": "https://api.github.com/users/annacnev/following{/other_user}",
      "gists_url": "https://api.github.com/users/annacnev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/annacnev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/annacnev/subscriptions",
      "organizations_url": "https://api.github.com/users/annacnev/orgs",
      "repos_url": "https://api.github.com/users/annacnev/repos",
      "events_url": "https://api.github.com/users/annacnev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/annacnev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-18T19:15:45Z",
    "updated_at": "2019-02-18T19:15:45Z",
    "author_association": "NONE",
    "body": "Apologies for the noise, came across this issue two weeks ago when I was converting a json file to a pandas data frame using pd.DataFrame.from_records. I had a large json file that I pulled from multiple webpages into one file that I was trying to parse through and separate using a loop and the pandas function. One of the webpages did not load and it went into my larger file as an empty list-unbeknownst to me. That empty list when read into pandas caused the seg fault. Took me forever to figure that out and eventually adding a try and except to my code solved the issue. \r\n\r\nNot sure if this is the appropriate place to post this, but this was the first forum that came up when I googled \"seg fault json pandas\" and I wanted to put this out there incase someone in future ran into the problem I had and might be able to save some time. \r\n\r\nOne the developer site though, just a recommendation, it might be nice if a try and except could be added to the \"from records\" function that would give an output when an empty list is encountered because that seg fault had me messing with my python framework thinking something was very wrong."
  }
]
