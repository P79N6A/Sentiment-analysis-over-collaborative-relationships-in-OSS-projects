[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36129038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36129038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36129038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTI5MDM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T14:19:19Z",
    "updated_at": "2014-02-26T14:20:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.values` coerces to a common dtype, `object` in this case. This is in general not a good idea to use `values` in any event. What are you trying to do?\n\nSlicing etc should be just fine as long as you use pandas methods.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36132203",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36132203",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36132203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTMyMjAz",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T14:49:34Z",
    "updated_at": "2014-02-26T14:59:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "I actually ran into the whole datetime64 thing when I was pondering on where the 100x speed drop comes from in the case below (the example is for a pure float64 panel) and whether it can be related to datetime64 field (as in the previous example):\n\n``` python\n>>> pn = pd.Panel(np.random.random((12, 5412, 162)))\n\n>>> ix = np.ones(pn.shape[1], dtype=bool)\n\n>>> ix[np.random.random(ix.size) > 0.5] = 0\n\n>>> %timeit pn.loc[0, ix]  # one field, as fast as dataframe\n1000 loops, best of 3: 690 Âµs per loop\n\n>>> %timeit pn.loc[[0, 1], ix]  # two fields, 233x slower\n10 loops, best of 3: 161 ms per loop\n\n>>> %timeit pn.loc[:, ix]\n1 loops, best of 3: 666 ms per loop\n\n>>> pn_t = pn.swapaxes(0, 1).copy()  # try .loc on the first axis\n\n>>> %timeit pn_t.loc[ix]\n1 loops, best of 3: 1.27 s per loop\n\n>>> def pn_slice_major(pn, ix):  # a really stupid way of doing this\n   ..:     slices = dict((item, pn.loc[item, ix]) for item in pn.items)\n   ..:     pn_s = pd.Panel(major_axis=slices[0].index, minor_axis=slices[0].columns)\n   ..:     for item in pn.items:\n   ..:         pn_s[item] = slices[item]\n   ..:     return pn_s\n   ..:\n\n>>> %timeit pn_slice_major(pn, ix)  # 13.5x faster than .loc[:, ix]\n10 loops, best of 3: 49.5 ms per loop\n```\n\nStill have no idea what's the exact reason for this ^.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36133307",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36133307",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36133307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTMzMzA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T14:59:10Z",
    "updated_at": "2014-02-26T14:59:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "#6440 can prob help with this\n\nthe indexing code is very tricky\n\nif you can implement this in a generic way go for it, pls look into contributing a fix for this.\n\nyou have to be really careful with this, because if for example their are a lot of items, this would be way slower. indexing is optimized for 0th access, (otherwise you are doing a lot of cross-section indexing).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36133883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36133883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36133883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTMzODgz",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T15:04:11Z",
    "updated_at": "2014-02-26T15:04:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can sure write hacks and workarounds that work faster for specific use cases, but solving it generally is quite a bit more complicated in pandas, especially when you're not as familiar with the entire internal api :/ I'll try looking into it a bit later, maybe it's something more or less obvious.\n\nI find Panels generally very useful (esp for financial market data, where you often have date/symbol/field/etc) and tried using them to avoid indexing similarly indexed data multiple times.. but  ironically that's exactly what I have to do now because it's faster.\n\nAs for a lot of items: see above where I index the transposed panel.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36134497",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36134497",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36134497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTM0NDk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T15:09:45Z",
    "updated_at": "2014-02-26T15:09:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@aldanor great...I use them for the same reason!\n\nI DO think their is a perf degredation from 0.12 to 0.13.1...but as you noted the slicing is pretty tricky.\n\nshould be pretty straightfoward in this case to at least see where its coming from then can address it.\n\nas an aside, it is _sometimes_ more efficient to transpose, then slice and transpose back (but a bit tricky to make this work correctly). as the 0th axis vs the -1th axis have different slicing characteristics because of how numpy aligns memory.\n\nI generally line the panels up like I use them (and somethimes this is different from how I store then in HDF5), e.g. generally do something like: items x dates x symbols\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36138962",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36138962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36138962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTM4OTYy",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T15:44:33Z",
    "updated_at": "2014-02-26T15:46:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good point, I'll try to bench all the above from 0.12 through to 0.13.1 -- I bet it wasn't that slow before.\n\nBtw! More weirdness (data from the very first example):\n\n``` python\n>>> %timeit pn2.ix[['volumes', 'discounts']]  # panel w/o timestamps; both fields are floats\n100 loops, best of 3: 16.9 ms per loop\n\n>>> %timeit pn1.ix[['volumes', 'discounts']]  # panel w/ timestamps; both fields are floats\n1 loops, best of 3: 1.42 s per loop  # WTF?\n```\n\nNote that I'm not calling `.values` or anything that would (or should, at least) trigger coercion. Just pulling 2 items out of 12 should be sort of instant.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36139970",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36139970",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36139970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTM5OTcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T15:51:45Z",
    "updated_at": "2014-02-26T15:51:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Panels are very tricky with multi-dtypes. Look at `pn2._data` and see if the blocks are correct. and then do this with the sliced.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36140351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36140351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36140351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTQwMzUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T15:54:48Z",
    "updated_at": "2014-02-26T15:54:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your data is prob lined up cross sectionally which causes conversion to object\n\n```\nIn [12]: pn = pd.Panel(np.random.random((12, 5412, 162)))\n\nIn [13]: pn._data\nOut[13]: \nBlockManager\nItems: Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], dtype='int64')\nAxis 1: Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...], dtype='int64')\nAxis 2: Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...], dtype='int64')\nFloatBlock: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 12 x 5412 x 162, dtype: float64\n\nIn [14]: %timeit pn.ix[[0,1]]\n100 loops, best of 3: 14.6 ms per loop\n\nIn [15]: pn['foo'] = DataFrame({ 0 : { 0 : Timestamp('20130101') }})\n\nIn [16]: pn._data\nOut[16]: \nBlockManager\nItems: Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, u'foo'], dtype='object')\nAxis 1: Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...], dtype='int64')\nAxis 2: Int64Index([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, ...], dtype='int64')\nFloatBlock: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 12 x 5412 x 162, dtype: float64\nDatetimeBlock: [foo], 1 x 5412 x 162, dtype: datetime64[ns]\n\nIn [17]: %timeit pn.ix[[0,1]]\n10 loops, best of 3: 30.7 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36151716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36151716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36151716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTUxNzE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-26T17:29:15Z",
    "updated_at": "2014-02-26T17:29:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@aldanor see #6486 fixes this case. can you add some vbenches for these cases (and then see what the effect of this on other things you are testing?) thanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36306986",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36306986",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36306986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzA2OTg2",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-27T23:55:26Z",
    "updated_at": "2014-02-27T23:55:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Hey, sorry I wouldn't have time to look into this until weekend. Mind if I add couple edge cases to the vbench regarding panels?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36307162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6484#issuecomment-36307162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6484",
    "id": 36307162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzA3MTYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-27T23:57:36Z",
    "updated_at": "2014-02-27T23:57:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "np submit a pr at your leisure\n(keep in mind #6440) is systematically putting in vbenches though may not cover these cases\n"
  }
]
