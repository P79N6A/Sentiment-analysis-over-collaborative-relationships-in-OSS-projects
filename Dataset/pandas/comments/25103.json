[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/460036982",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25103#issuecomment-460036982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25103",
    "id": 460036982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDAzNjk4Mg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-02-03T09:38:07Z",
    "updated_at": "2019-02-03T09:38:07Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=h1) Report\n> Merging [#25103](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/f75a220ff1e5e027ef2b070430fd7f4490cdcbf0?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/25103/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #25103      +/-   ##\n==========================================\n+ Coverage   92.37%   92.37%   +<.01%     \n==========================================\n  Files         166      166              \n  Lines       52415    52417       +2     \n==========================================\n+ Hits        48418    48420       +2     \n  Misses       3997     3997\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.79% <100%> (ø)` | :arrow_up: |\n| #single | `42.87% <66.66%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/internals/blocks.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2Jsb2Nrcy5weQ==) | `94.18% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=footer). Last update [f75a220...f393d18](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/460036983",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25103#issuecomment-460036983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25103",
    "id": 460036983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDAzNjk4Mw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-02-03T09:38:07Z",
    "updated_at": "2019-03-20T20:35:49Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=h1) Report\n> Merging [#25103](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/fbe25233345b750031911f0d4b0845fa115c4432?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/25103/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #25103      +/-   ##\n==========================================\n- Coverage   91.27%   91.26%   -0.01%     \n==========================================\n  Files         173      173              \n  Lines       53002    52983      -19     \n==========================================\n- Hits        48375    48356      -19     \n  Misses       4627     4627\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.83% <100%> (-0.01%)` | :arrow_down: |\n| #single | `41.76% <100%> (-0.02%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/internals/blocks.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzL2Jsb2Nrcy5weQ==) | `94.09% <100%> (ø)` | :arrow_up: |\n| [pandas/core/computation/common.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29tcHV0YXRpb24vY29tbW9uLnB5) | `85.71% <0%> (-3.76%)` | :arrow_down: |\n| [pandas/core/computation/expr.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY29tcHV0YXRpb24vZXhwci5weQ==) | `88.17% <0%> (-0.36%)` | :arrow_down: |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `93.51% <0%> (-0.01%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `96.79% <0%> (-0.01%)` | :arrow_down: |\n| [pandas/core/ops.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvb3BzLnB5) | `91.74% <0%> (ø)` | :arrow_up: |\n| [pandas/io/excel/\\_base.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2V4Y2VsL19iYXNlLnB5) | `92.48% <0%> (ø)` | :arrow_up: |\n| [pandas/core/series.py](https://codecov.io/gh/pandas-dev/pandas/pull/25103/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvc2VyaWVzLnB5) | `93.68% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=footer). Last update [fbe2523...83a6b14](https://codecov.io/gh/pandas-dev/pandas/pull/25103?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/460090774",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25103#issuecomment-460090774",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25103",
    "id": 460090774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDA5MDc3NA==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-03T21:34:39Z",
    "updated_at": "2019-03-20T20:35:22Z",
    "author_association": "NONE",
    "body": "Hello @kinow! Thanks for updating this PR. We checked the lines you've touched for [PEP 8](https://www.python.org/dev/peps/pep-0008) issues, and found:\n\n\n\n\n\nThere are currently no PEP 8 issues detected in this Pull Request. Cheers! :beers: \n\n##### Comment last updated at 2019-03-20 20:35:22 UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/460461924",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25103#issuecomment-460461924",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25103",
    "id": 460461924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDQ2MTkyNA==",
    "user": {
      "login": "kinow",
      "id": 304786,
      "node_id": "MDQ6VXNlcjMwNDc4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/304786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kinow",
      "html_url": "https://github.com/kinow",
      "followers_url": "https://api.github.com/users/kinow/followers",
      "following_url": "https://api.github.com/users/kinow/following{/other_user}",
      "gists_url": "https://api.github.com/users/kinow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kinow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kinow/subscriptions",
      "organizations_url": "https://api.github.com/users/kinow/orgs",
      "repos_url": "https://api.github.com/users/kinow/repos",
      "events_url": "https://api.github.com/users/kinow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kinow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T00:00:16Z",
    "updated_at": "2019-02-05T01:27:54Z",
    "author_association": "NONE",
    "body": "@jreback just finished running asv with the following command\r\n\r\n```bash\r\nasv continuous -f 1.1 upstream/master HEAD -b ^io.csv\r\n```\r\n\r\nComplete output in this [gist](https://gist.github.com/kinow/9e3760ddfa036b82df0f587323e17ee6), but near the bottom of its output, it says\r\n\r\n```\r\n+      9.92±0.1ms       11.7±0.6ms     1.18  io.csv.ReadCSVFloatPrecision.time_read_csv_python_engine(',', '_', None)\r\n+         119±1ms          135±4ms     1.14  io.csv.ReadCSVCategorical.time_convert_direct\r\n+         171±5ms          190±4ms     1.11  io.csv.ReadCSVCategorical.time_convert_post\r\n\r\nSOME BENCHMARKS HAVE CHANGED SIGNIFICANTLY.\r\n```\r\n\r\nWhich doesn't look good I think... do you reckon I should try to find another alternative, perhaps duplicating code and leaving the previous method unaltered? \r\n\r\nBy the way, I didn't find a `pytables.py` under the benchmarks folder. Is there another way to trigger benchmarking tests for pytest in Pandas?\r\n\r\nThanks\r\nBruno"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474655367",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25103#issuecomment-474655367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25103",
    "id": 474655367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDY1NTM2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-20T02:07:48Z",
    "updated_at": "2019-03-20T02:07:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you merge master"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474656119",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25103#issuecomment-474656119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25103",
    "id": 474656119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDY1NjExOQ==",
    "user": {
      "login": "kinow",
      "id": 304786,
      "node_id": "MDQ6VXNlcjMwNDc4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/304786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kinow",
      "html_url": "https://github.com/kinow",
      "followers_url": "https://api.github.com/users/kinow/followers",
      "following_url": "https://api.github.com/users/kinow/following{/other_user}",
      "gists_url": "https://api.github.com/users/kinow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kinow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kinow/subscriptions",
      "organizations_url": "https://api.github.com/users/kinow/orgs",
      "repos_url": "https://api.github.com/users/kinow/repos",
      "events_url": "https://api.github.com/users/kinow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kinow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-20T02:12:09Z",
    "updated_at": "2019-03-20T02:12:09Z",
    "author_association": "NONE",
    "body": "Branch rebased onto `master`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/474780388",
    "html_url": "https://github.com/pandas-dev/pandas/pull/25103#issuecomment-474780388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25103",
    "id": 474780388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NDc4MDM4OA==",
    "user": {
      "login": "kinow",
      "id": 304786,
      "node_id": "MDQ6VXNlcjMwNDc4Ng==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/304786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kinow",
      "html_url": "https://github.com/kinow",
      "followers_url": "https://api.github.com/users/kinow/followers",
      "following_url": "https://api.github.com/users/kinow/following{/other_user}",
      "gists_url": "https://api.github.com/users/kinow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kinow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kinow/subscriptions",
      "organizations_url": "https://api.github.com/users/kinow/orgs",
      "repos_url": "https://api.github.com/users/kinow/repos",
      "events_url": "https://api.github.com/users/kinow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kinow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-20T10:52:45Z",
    "updated_at": "2019-03-20T10:53:10Z",
    "author_association": "NONE",
    "body": "@jreback added a whatsnew entry as requested - happy to amend if text is incorrect or too simple.\r\n\r\nI resolved the outdated discussions, except for one that is still pertinent. The initial approach was to calculate the maximum length when it was a string, and then just create a type of that length. That way the masked values were not truncated.\r\n\r\nThe pending discussion is around that approach, where we tried instead to change the order of where the mask gets applied. But several other tests failed after that (see my last comment that Travis failed). In one test that I found, it had an empty string, and for some reason with the different order, it was trying to call `int('')` and returning `ValueError: invalid literal for int() with base 10: ''`.\r\n\r\nSo I reverted that change, and Travis stopped complaining. Also ran `asv`:\r\n\r\n```\r\n$ asv continuous -f 1.1 upstream/master HEAD -b ^io.csv\r\n· No information stored about machine 'ranma'. I know about nothing.\r\n  \r\n\r\nI will now ask you some questions about this machine to identify it in the benchmarks.\r\n\r\n1. machine:  A unique name to identify this machine in the results.\r\n   May be anything, as long as it is unique across all the machines\r\n   used to benchmark this project.  NOTE: If changed from the default,\r\n   it will no longer match the hostname of this machine, and you may\r\n   need to explicitly use the --machine argument to asv.\r\nmachine [ranma]: \r\n2. os:  The OS type and version of this machine.  For example,\r\n   'Macintosh OS-X 10.8'.\r\nos [Linux 4.15.0-46-generic]: \r\n3. arch:  The generic CPU architecture of this machine.  For example,\r\n   'i386' or 'x86_64'.\r\narch [x86_64]: \r\n4. cpu:  A specific description of the CPU of this machine, including\r\n   its speed and class.  For example, 'Intel(R) Core(TM) i5-2520M CPU\r\n   @ 2.50GHz (4 cores)'.\r\ncpu [Intel(R) Core(TM) i7-3720QM CPU @ 2.60GHz]: \r\n5. ram:  The amount of physical RAM on this machine.  For example,\r\n   '4GB'.\r\nram [16119292]: \r\n· Creating environments......................................................................................................................................................................................................\r\n· Discovering benchmarks\r\n·· Uninstalling from conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n·· Building 6e0dd9cf <fix-issue-gh25099-csv-narep> for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt.........................................................\r\n·· Installing 6e0dd9cf <fix-issue-gh25099-csv-narep> into conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt..\r\n· Running 32 total benchmarks (2 commits * 1 environments * 16 benchmarks)\r\n[  0.00%] · For pandas commit 46639512 <master> (round 1/2):\r\n[  0.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt............................................................\r\n[  0.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[  1.56%] ··· Running (io.csv.ReadCSVCategorical.time_convert_direct--)...............\r\n[ 25.00%] · For pandas commit 6e0dd9cf <fix-issue-gh25099-csv-narep> (round 1/2):\r\n[ 25.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[ 25.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 26.56%] ··· Running (io.csv.ReadCSVCategorical.time_convert_direct--)...............\r\n[ 50.00%] · For pandas commit 6e0dd9cf <fix-issue-gh25099-csv-narep> (round 2/2):\r\n[ 50.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 51.56%] ··· io.csv.ReadCSVCategorical.time_convert_direct                                                                                                          56.9±0.6ms\r\n[ 53.12%] ··· io.csv.ReadCSVCategorical.time_convert_post                                                                                                            82.8±0.5ms\r\n[ 54.69%] ··· io.csv.ReadCSVComment.time_comment                                                                                                                     38.6±0.6ms\r\n[ 56.25%] ··· io.csv.ReadCSVDInferDatetimeFormat.time_read_csv                                                                                                               ok\r\n[ 56.25%] ··· ======================= ============= ============= =============\r\n              --                                        format                 \r\n              ----------------------- -----------------------------------------\r\n               infer_datetime_format      custom       iso8601         ymd     \r\n              ======================= ============= ============= =============\r\n                        True           8.42±0.02ms   2.87±0.03ms   2.89±0.01ms \r\n                       False             138±1ms     2.41±0.01ms   2.27±0.01ms \r\n              ======================= ============= ============= =============\r\n\r\n[ 57.81%] ··· io.csv.ReadCSVFloatPrecision.time_read_csv                                                                                                                     ok\r\n[ 57.81%] ··· ===== ============= ============= ================ ============= ============= ================\r\n              --                                    decimal / float_precision                                \r\n              ----- -----------------------------------------------------------------------------------------\r\n               sep     . / None      . / high    . / round_trip     _ / None      _ / high    _ / round_trip \r\n              ===== ============= ============= ================ ============= ============= ================\r\n                ,    2.31±0.02ms   2.21±0.04ms    2.95±0.03ms     2.56±0.03ms   2.56±0.02ms    2.56±0.03ms   \r\n                ;    2.33±0.02ms   2.24±0.05ms    2.96±0.04ms     2.53±0.03ms   2.49±0.04ms    2.53±0.03ms   \r\n              ===== ============= ============= ================ ============= ============= ================\r\n\r\n[ 59.38%] ··· io.csv.ReadCSVFloatPrecision.time_read_csv_python_engine                                                                                                       ok\r\n[ 59.38%] ··· ===== ============ ============ ================ ============= ============= ================\r\n              --                                   decimal / float_precision                               \r\n              ----- ---------------------------------------------------------------------------------------\r\n               sep    . / None     . / high    . / round_trip     _ / None      _ / high    _ / round_trip \r\n              ===== ============ ============ ================ ============= ============= ================\r\n                ,    4.66±0.2ms   4.63±0.1ms     4.70±0.1ms     3.90±0.05ms   3.90±0.03ms    3.89±0.05ms   \r\n                ;    4.64±0.2ms   4.62±0.1ms     4.62±0.2ms     3.88±0.02ms   3.89±0.05ms    3.90±0.04ms   \r\n              ===== ============ ============ ================ ============= ============= ================\r\n\r\n[ 60.94%] ··· io.csv.ReadCSVMemoryGrowth.mem_parser_chunks                                                                                                                    0\r\n[ 62.50%] ··· io.csv.ReadCSVParseDates.time_baseline                                                                                                                2.71±0.05ms\r\n[ 64.06%] ··· io.csv.ReadCSVParseDates.time_multiple_date                                                                                                           3.13±0.01ms\r\n[ 65.62%] ··· io.csv.ReadCSVSkipRows.time_skipprows                                                                                                                          ok\r\n[ 65.62%] ··· ========== ============\r\n               skiprows              \r\n              ---------- ------------\r\n                 None     23.0±0.2ms \r\n                10000     15.1±0.3ms \r\n              ========== ============\r\n\r\n[ 67.19%] ··· io.csv.ReadCSVThousands.time_thousands                                                                                                                         ok\r\n[ 67.19%] ··· ===== ============ ============\r\n              --            thousands        \r\n              ----- -------------------------\r\n               sep      None          ,      \r\n              ===== ============ ============\r\n                ,    18.6±0.2ms   19.5±0.5ms \r\n                |    18.6±0.3ms   20.7±0.2ms \r\n              ===== ============ ============\r\n\r\n[ 68.75%] ··· io.csv.ReadUint64Integers.time_read_uint64                                                                                                             4.79±0.1ms\r\n[ 70.31%] ··· io.csv.ReadUint64Integers.time_read_uint64_na_values                                                                                                  7.47±0.07ms\r\n[ 71.88%] ··· io.csv.ReadUint64Integers.time_read_uint64_neg_values                                                                                                 7.32±0.09ms\r\n[ 73.44%] ··· io.csv.ToCSV.time_frame                                                                                                                                        ok\r\n[ 73.44%] ··· ======= ============\r\n                kind              \r\n              ------- ------------\r\n                wide   133±0.8ms  \r\n                long    237±1ms   \r\n               mixed   29.8±0.6ms \r\n              ======= ============\r\n\r\n[ 75.00%] ··· io.csv.ToCSVDatetime.time_frame_date_formatting                                                                                                        25.5±0.2ms\r\n[ 75.00%] · For pandas commit 46639512 <master> (round 2/2):\r\n[ 75.00%] ·· Building for conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt...\r\n[ 75.00%] ·· Benchmarking conda-py3.6-Cython-matplotlib-numexpr-numpy-openpyxl-pytables-pytest-scipy-sqlalchemy-xlrd-xlsxwriter-xlwt\r\n[ 76.56%] ··· io.csv.ReadCSVCategorical.time_convert_direct                                                                                                          53.8±0.3ms\r\n[ 78.12%] ··· io.csv.ReadCSVCategorical.time_convert_post                                                                                                            80.2±0.5ms\r\n[ 79.69%] ··· io.csv.ReadCSVComment.time_comment                                                                                                                     39.6±0.7ms\r\n[ 81.25%] ··· io.csv.ReadCSVDInferDatetimeFormat.time_read_csv                                                                                                               ok\r\n[ 81.25%] ··· ======================= ============= ============= =============\r\n              --                                        format                 \r\n              ----------------------- -----------------------------------------\r\n               infer_datetime_format      custom       iso8601         ymd     \r\n              ======================= ============= ============= =============\r\n                        True           8.48±0.06ms   2.89±0.02ms   2.87±0.03ms \r\n                       False            140±0.3ms    2.42±0.01ms   2.31±0.01ms \r\n              ======================= ============= ============= =============\r\n\r\n[ 82.81%] ··· io.csv.ReadCSVFloatPrecision.time_read_csv                                                                                                                     ok\r\n[ 82.81%] ··· ===== ============= ============= ================ ============= ============= ================\r\n              --                                    decimal / float_precision                                \r\n              ----- -----------------------------------------------------------------------------------------\r\n               sep     . / None      . / high    . / round_trip     _ / None      _ / high    _ / round_trip \r\n              ===== ============= ============= ================ ============= ============= ================\r\n                ,    2.31±0.04ms   2.22±0.03ms    3.00±0.04ms     2.58±0.04ms   2.58±0.04ms    2.63±0.05ms   \r\n                ;    2.32±0.05ms   2.21±0.04ms    3.00±0.04ms     2.62±0.04ms   2.63±0.03ms    2.59±0.04ms   \r\n              ===== ============= ============= ================ ============= ============= ================\r\n\r\n[ 84.38%] ··· io.csv.ReadCSVFloatPrecision.time_read_csv_python_engine                                                                                                       ok\r\n[ 84.38%] ··· ===== ============ ============ ================ ============ ============ ================\r\n              --                                  decimal / float_precision                              \r\n              ----- -------------------------------------------------------------------------------------\r\n               sep    . / None     . / high    . / round_trip    _ / None     _ / high    _ / round_trip \r\n              ===== ============ ============ ================ ============ ============ ================\r\n                ,    5.10±0.6ms   5.07±0.6ms     5.06±0.5ms     4.43±0.5ms   4.36±0.5ms     4.48±0.6ms   \r\n                ;    5.07±0.6ms   5.05±0.5ms     5.09±0.5ms     4.41±0.5ms   4.36±0.5ms     4.41±0.6ms   \r\n              ===== ============ ============ ================ ============ ============ ================\r\n\r\n[ 85.94%] ··· io.csv.ReadCSVMemoryGrowth.mem_parser_chunks                                                                                                                    0\r\n[ 87.50%] ··· io.csv.ReadCSVParseDates.time_baseline                                                                                                                2.72±0.05ms\r\n[ 89.06%] ··· io.csv.ReadCSVParseDates.time_multiple_date                                                                                                           3.13±0.02ms\r\n[ 90.62%] ··· io.csv.ReadCSVSkipRows.time_skipprows                                                                                                                          ok\r\n[ 90.62%] ··· ========== ============\r\n               skiprows              \r\n              ---------- ------------\r\n                 None     22.9±0.3ms \r\n                10000     15.0±0.1ms \r\n              ========== ============\r\n\r\n[ 92.19%] ··· io.csv.ReadCSVThousands.time_thousands                                                                                                                         ok\r\n[ 92.19%] ··· ===== ============ ============\r\n              --            thousands        \r\n              ----- -------------------------\r\n               sep      None          ,      \r\n              ===== ============ ============\r\n                ,    18.9±0.2ms   19.6±0.2ms \r\n                |    19.1±0.2ms   20.6±0.1ms \r\n              ===== ============ ============\r\n\r\n[ 93.75%] ··· io.csv.ReadUint64Integers.time_read_uint64                                                                                                            4.75±0.06ms\r\n[ 95.31%] ··· io.csv.ReadUint64Integers.time_read_uint64_na_values                                                                                                  7.38±0.08ms\r\n[ 96.88%] ··· io.csv.ReadUint64Integers.time_read_uint64_neg_values                                                                                                  7.32±0.1ms\r\n[ 98.44%] ··· io.csv.ToCSV.time_frame                                                                                                                                        ok\r\n[ 98.44%] ··· ======= ============\r\n                kind              \r\n              ------- ------------\r\n                wide   130±0.4ms  \r\n                long    234±5ms   \r\n               mixed   28.9±0.4ms \r\n              ======= ============\r\n\r\n[100.00%] ··· io.csv.ToCSVDatetime.time_frame_date_formatting                                                                                                        25.7±0.5ms\r\n\r\nBENCHMARKS NOT SIGNIFICANTLY CHANGED.\r\n```\r\n\r\nHowever, I am still not too confident if that is a valid approach, as I did not find other parts of the code in Pandas where types had a dynamic size :confused: \r\n\r\nI hope that makes sense."
  }
]
