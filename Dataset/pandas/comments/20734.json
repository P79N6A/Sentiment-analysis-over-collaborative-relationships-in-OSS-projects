[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382531677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20734#issuecomment-382531677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20734",
    "id": 382531677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjUzMTY3Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T21:14:43Z",
    "updated_at": "2018-04-18T21:14:43Z",
    "author_association": "MEMBER",
    "body": "I think this issue is back one layer in NumPy:\r\n\r\n```python\r\nnp.dtype('float') == np.dtype('float').name\r\nTrue\r\nnp.dtype('S64') == np.dtype('S64').name\r\n*** TypeError: data type \"bytes512\" not understood\r\n```\r\n\r\nNot an expert on dtypes so will see if others chime in, but I have a feeling this will need to be opened as an issue with that project instead of here"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382557292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20734#issuecomment-382557292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20734",
    "id": 382557292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjU1NzI5Mg==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T23:09:22Z",
    "updated_at": "2018-04-18T23:09:22Z",
    "author_association": "MEMBER",
    "body": "See https://github.com/numpy/numpy/issues/5329"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382770157",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20734#issuecomment-382770157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20734",
    "id": 382770157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjc3MDE1Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T15:03:18Z",
    "updated_at": "2018-04-19T15:03:18Z",
    "author_association": "MEMBER",
    "body": "The issue @jschendel links to is about that numpy does not compare to dtypes it does not know about (because `np.dtype('unknown_string')` will raise an error). \r\nHowever, in this case I think you could argue that `np.dtype('bytes512')` should work since it is the name of their own dtype (although I don't know what guarantees numpy gives about the `.name` attribute of dtypes)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/382799437",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20734#issuecomment-382799437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20734",
    "id": 382799437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Mjc5OTQzNw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-19T16:31:17Z",
    "updated_at": "2018-04-19T16:31:17Z",
    "author_association": "MEMBER",
    "body": "For sure it's a little bit of a gray area to the issue described, but reading through the comments it doesn't seem like NumPy wants to make any guarantees about str comps. This one is certainly more compelling of an argument to support than a comp to an arbitrary string so I suppose we could open the issue there and see if it gains more traction than the linked issue (happy to open that).\r\n\r\ncc @jreback for any input"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383023229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20734#issuecomment-383023229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20734",
    "id": 383023229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzAyMzIyOQ==",
    "user": {
      "login": "stephenmartindale",
      "id": 6370145,
      "node_id": "MDQ6VXNlcjYzNzAxNDU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6370145?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stephenmartindale",
      "html_url": "https://github.com/stephenmartindale",
      "followers_url": "https://api.github.com/users/stephenmartindale/followers",
      "following_url": "https://api.github.com/users/stephenmartindale/following{/other_user}",
      "gists_url": "https://api.github.com/users/stephenmartindale/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stephenmartindale/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stephenmartindale/subscriptions",
      "organizations_url": "https://api.github.com/users/stephenmartindale/orgs",
      "repos_url": "https://api.github.com/users/stephenmartindale/repos",
      "events_url": "https://api.github.com/users/stephenmartindale/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stephenmartindale/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T08:25:02Z",
    "updated_at": "2018-04-20T08:29:16Z",
    "author_association": "NONE",
    "body": "@jschendel I'd think that that NumPy bug is relevant but, in this case, not the same bug because `S64` or `bytes512` should be a valid NumPy type and, therefore, should be a fair target for comparison.\r\n\r\nOf course, I'd also argue that the expample given in that issue (`np.dtype('i8') == 'foo'`) should *also* work without throwing. I'd say that `np.dtype('i8') == 'foo'` should result in `False`. Why? Because the outcome of the comparison, as it is written, is clearly false. Is the comparison of `i8` to `foo` likely a programming error or mistake? Almost certainly. A warning along the lines of `'foo' is not a data type` would notify the user that they've likely typed an error but the comparison should yield `False` none the less.\r\n\r\nSuch a design change, had it been effected, would change the story of *this* issue. We would now be discussion why my DataFrame code was throwing warnings saying that `bytes512` is not a data type when it clearly is. That would lead to much more sensible issues being logged upstream in NumPy: \"comparison says that `bytes512` is not a data type when it clearly is.\"\r\n\r\nFinally: *why* is `S64` being treated differently to `S24` in my code? 64-characters is hardly an excessive string. In my use-case, it's just a hash of some data that my source uses to identify that data. (A third-party. Not my design choice.)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383053402",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20734#issuecomment-383053402",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20734",
    "id": 383053402,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzA1MzQwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T10:20:09Z",
    "updated_at": "2018-04-20T10:20:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is a numpy issue (if that) and not solvable in pandas"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383055371",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20734#issuecomment-383055371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20734",
    "id": 383055371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzA1NTM3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-20T10:28:47Z",
    "updated_at": "2018-04-20T10:28:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "actually we should do this patch:\r\n\r\n```\r\nIn [3]: df.dtypes\r\nOut[3]: \r\na    uint32\r\nb      |S64\r\nc      |S64\r\nd     uint8\r\ndtype: object\r\n\r\nIn [4]: quit()\r\ng(pandas) bash-3.2$ git diff\r\ndiff --git a/pandas/core/internals.py b/pandas/core/internals.py\r\nindex 37d112964..5e7d37ef8 100644\r\n--- a/pandas/core/internals.py\r\n+++ b/pandas/core/internals.py\r\n@@ -5115,7 +5115,7 @@ def _block_shape(values, ndim=1, shape=None):\r\n def _vstack(to_stack, dtype):\r\n \r\n     # work around NumPy 1.6 bug\r\n-    if dtype == _NS_DTYPE or dtype == _TD_DTYPE:\r\n+    if is_dtype_equal(dtype, _NS_DTYPE) or is_dtype_equal(dtype, _TD_DTYPE):\r\n         new_values = np.vstack([x.view('i8') for x in to_stack])\r\n         return new_values.view(dtype)\r\n```\r\n\r\nthough its still buggy. string types like these should be converted to ``object`` as they are unsupported."
  }
]
