[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123704503",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10651#issuecomment-123704503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10651",
    "id": 123704503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcwNDUwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:28:26Z",
    "updated_at": "2015-07-22T12:28:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are actually changing something else here. This is why using `inplace` is ALWAYS a bad idea. It works correctly, but the user is confused.\n\n```\nIn [16]: df2.index.is_lexsorted()\nOut[16]: False\n\nIn [18]: df3 = df2.sortlevel()      \n\nIn [19]: df3.index.is_lexsorted()\nOut[19]: True\n\nIn [20]: df2.index.is_lexsorted()\nOut[20]: False\n\n# make sure that we are copying the index for demonstration\nIn [21]: df4 = df2.copy(deep=True)\n\nIn [22]: df4.index.is_lexsorted()\nOut[22]: False\n\n# the correct way to set things\nIn [23]: df4.index = df4.index.set_levels(['b','d','a'], level='col1')\n\nIn [24]: df4.index.is_lexsorted()\nOut[24]: False\n\nIn [25]: df4.index = df4.index.set_labels([0,1,0,2], level='col1')\n\nIn [26]: df4.index.is_lexsorted()\nOut[26]: False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123704802",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10651#issuecomment-123704802",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10651",
    "id": 123704802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcwNDgwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:29:14Z",
    "updated_at": "2015-07-22T12:29:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.sortlevel` will create a new frame and guarantee sortedness. Note that this is not a very new method and has been around quite a while. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123705200",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10651#issuecomment-123705200",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10651",
    "id": 123705200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcwNTIwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:30:18Z",
    "updated_at": "2015-07-22T12:30:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "#9212 might be enlightening for you\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123711366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10651#issuecomment-123711366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10651",
    "id": 123711366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcxMTM2Ng==",
    "user": {
      "login": "tangobravo",
      "id": 770066,
      "node_id": "MDQ6VXNlcjc3MDA2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/770066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tangobravo",
      "html_url": "https://github.com/tangobravo",
      "followers_url": "https://api.github.com/users/tangobravo/followers",
      "following_url": "https://api.github.com/users/tangobravo/following{/other_user}",
      "gists_url": "https://api.github.com/users/tangobravo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tangobravo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tangobravo/subscriptions",
      "organizations_url": "https://api.github.com/users/tangobravo/orgs",
      "repos_url": "https://api.github.com/users/tangobravo/repos",
      "events_url": "https://api.github.com/users/tangobravo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tangobravo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T12:58:16Z",
    "updated_at": "2015-07-22T12:58:16Z",
    "author_association": "NONE",
    "body": "@jreback Thanks for the replies, but I'm still confused. Even using your example code to avoid inplace when changing the index, for me sortlevel returns a dataframe that is not lexsorted. It will return an index where the labels are sorted in that level (ie [0,0,1,2]) but the \"levels\" are not rearranged and are not lexographically sorted (still ['b','d','a']).\n\nThis appears to be the behaviour described in this part of the docs:\nhttp://pandas.pydata.org/pandas-docs/stable/advanced.html#the-need-for-sortedness-with-multiindex\n \"There is an important new method sortlevel to sort an axis within a MultiIndex so that its labels are grouped and sorted by the original ordering of the associated factor at that level. Note that this does not necessarily mean the labels will be sorted lexicographically!\"\n\nWhich contradicts the description in the sortlevel reference, which states \"Data will be lexicographically sorted by the chosen level followed by the other levels (in order)\":\nhttp://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sortlevel.html?highlight=sortlevel#pandas.DataFrame.sortlevel\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123718223",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10651#issuecomment-123718223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10651",
    "id": 123718223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcxODIyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T13:24:57Z",
    "updated_at": "2015-07-22T13:24:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls show a complete example. i am not sure what you are referring.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123726515",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10651#issuecomment-123726515",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10651",
    "id": 123726515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzcyNjUxNQ==",
    "user": {
      "login": "tangobravo",
      "id": 770066,
      "node_id": "MDQ6VXNlcjc3MDA2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/770066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tangobravo",
      "html_url": "https://github.com/tangobravo",
      "followers_url": "https://api.github.com/users/tangobravo/followers",
      "following_url": "https://api.github.com/users/tangobravo/following{/other_user}",
      "gists_url": "https://api.github.com/users/tangobravo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tangobravo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tangobravo/subscriptions",
      "organizations_url": "https://api.github.com/users/tangobravo/orgs",
      "repos_url": "https://api.github.com/users/tangobravo/repos",
      "events_url": "https://api.github.com/users/tangobravo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tangobravo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T13:43:29Z",
    "updated_at": "2015-07-22T13:43:29Z",
    "author_association": "NONE",
    "body": "``` python\nIn [1]: import pandas as pd\n\nIn [2]: df = pd.DataFrame({'col1':['b','a','a'], 'col2':[1,3,1], 'col3':[1,2,3]})\n\nIn [3]: df\nOut[3]: \n  col1  col2  col3\n0    b     1     1\n1    a     3     2\n2    a     1     3\n\nIn [4]: df2 = df.set_index(['col1','col2'])\n\nIn [5]: df2\nOut[5]: \n           col3\ncol1 col2      \nb    1        1\na    3        2\n     1        3\n\nIn [6]: df3 = df2.sortlevel()\n\nIn [7]: df3\nOut[7]: \n           col3\ncol1 col2      \na    1        3\n     3        2\nb    1        1\n\nIn [8]: df3.index.is_lexsorted()\nOut[8]: True\n\n# This is all as expected so far\n\nIn [9]: df3.index\nOut[9]: \nMultiIndex(levels=[[u'a', u'b'], [1, 3]],\n           labels=[[0, 0, 1], [0, 1, 0]],\n           names=[u'col1', u'col2'])\n\n# Reorder the elements in the levels array, but reset labels too so data is the same\n\nIn [10]: df3.index = df3.index.set_levels(['b','a'], level='col1')\n\nIn [11]: df3.index = df3.index.set_labels([1,1,0], level='col1')\n\nIn [12]: df3\nOut[12]: \n           col3\ncol1 col2      \na    1        3\n     3        2\nb    1        1\n\n# Data looks the same as Out[7], and hence looks lexsorted, but\n\nIn [13]: df3.index.is_lexsorted()\nOut[13]: False\n\nIn [14]: df4 = df3.sortlevel()\n\nIn [15]: df4\nOut[15]: \n           col3\ncol1 col2      \nb    1        1\na    1        3\n     3        2\n\n# This doesn't look lexsorted any more, but...\n\nIn [16]: df4.index.is_lexsorted()\nOut[16]: True\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/123740762",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10651#issuecomment-123740762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10651",
    "id": 123740762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMzc0MDc2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-22T14:28:44Z",
    "updated_at": "2015-07-22T14:28:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "so I don't think the `.set_levels/.set_labels` reset the sortedness indicator (eg. needs to reset to `None` so its recomputed). This is the same bug as in #9212.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125154945",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10651#issuecomment-125154945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10651",
    "id": 125154945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTE1NDk0NQ==",
    "user": {
      "login": "tangobravo",
      "id": 770066,
      "node_id": "MDQ6VXNlcjc3MDA2Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/770066?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tangobravo",
      "html_url": "https://github.com/tangobravo",
      "followers_url": "https://api.github.com/users/tangobravo/followers",
      "following_url": "https://api.github.com/users/tangobravo/following{/other_user}",
      "gists_url": "https://api.github.com/users/tangobravo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tangobravo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tangobravo/subscriptions",
      "organizations_url": "https://api.github.com/users/tangobravo/orgs",
      "repos_url": "https://api.github.com/users/tangobravo/repos",
      "events_url": "https://api.github.com/users/tangobravo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tangobravo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-27T10:10:39Z",
    "updated_at": "2015-07-27T10:10:39Z",
    "author_association": "NONE",
    "body": "I don't think this is just about resetting indicators.\n\nLooking at the implementation of sortlevel() it doesn't consider the \"levels\" array of the MultiIndex at all, just blindly copies that across to the new index https://github.com/pydata/pandas/blob/master/pandas/core/index.py#L4833 and ensures the sort is by the \"labels\" array. That explains the behaviour I'm seeing, and the comment in the general docs that states it won't ensure the \"labels\" are sorted, but suggests the sortlevel() reference that mentions that it will sort lexicographically is incorrect.\n"
  }
]
