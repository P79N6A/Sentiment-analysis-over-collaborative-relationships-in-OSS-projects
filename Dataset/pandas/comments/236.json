[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/4654907",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-4654907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 4654907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTQ5MDc=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-03-23T07:51:15Z",
    "updated_at": "2012-03-23T07:51:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Same idea came up [on this mailing list thread](https://groups.google.com/forum/?fromgroups#!topic/pystatsmodels/M77RuKGvC6c).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18628522",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18628522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18628522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NjI4NTIy",
    "user": {
      "login": "kghose",
      "id": 664644,
      "node_id": "MDQ6VXNlcjY2NDY0NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/664644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kghose",
      "html_url": "https://github.com/kghose",
      "followers_url": "https://api.github.com/users/kghose/followers",
      "following_url": "https://api.github.com/users/kghose/following{/other_user}",
      "gists_url": "https://api.github.com/users/kghose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kghose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kghose/subscriptions",
      "organizations_url": "https://api.github.com/users/kghose/orgs",
      "repos_url": "https://api.github.com/users/kghose/repos",
      "events_url": "https://api.github.com/users/kghose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kghose/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-29T16:23:39Z",
    "updated_at": "2013-05-29T16:23:39Z",
    "author_association": "NONE",
    "body": "Yes, I would voice support for a general index that keeps the original index dtype. I used a float as index (it was time in seconds) and was delighted when everything, including `df.plot()` worked swimmingly. But then I wasted 30min figuring out why `pylab.exp(df.index.values)` was failing with the mysterious `AttributeError: exp`. pandas and Python normally make things so pleasant, but unexpected behavior like this reminds me of my dark days debugging c :(\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18885308",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18885308",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18885308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODg1MzA4",
    "user": {
      "login": "baldwint",
      "id": 1120261,
      "node_id": "MDQ6VXNlcjExMjAyNjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1120261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baldwint",
      "html_url": "https://github.com/baldwint",
      "followers_url": "https://api.github.com/users/baldwint/followers",
      "following_url": "https://api.github.com/users/baldwint/following{/other_user}",
      "gists_url": "https://api.github.com/users/baldwint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baldwint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baldwint/subscriptions",
      "organizations_url": "https://api.github.com/users/baldwint/orgs",
      "repos_url": "https://api.github.com/users/baldwint/repos",
      "events_url": "https://api.github.com/users/baldwint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baldwint/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T02:12:37Z",
    "updated_at": "2013-06-04T02:12:37Z",
    "author_association": "NONE",
    "body": "@kghose: I agree. I also use indices to store things like the time in seconds (e.g. oscilloscope traces), and am constantly having to do `array(df.index.values, dtype=float)` in place of a simple `df.index.values` to get an array that I can use with scipy fitting functions. It's an awkward idiom.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18889286",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18889286",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18889286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4ODg5Mjg2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T05:02:03Z",
    "updated_at": "2013-06-04T05:02:03Z",
    "author_association": "MEMBER",
    "body": "+1 here. Matplotlib issue has tripped me up a number of times when I needed to make custom plots. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18914105",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18914105",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18914105,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE0MTA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T14:51:13Z",
    "updated_at": "2013-06-04T14:52:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "see http://pandas.pydata.org/pandas-docs/dev/indexing.html#fallback-indexing, it is rarely necessary to actually use a float index; you are often better off served by using a column. The point of the index is to make individual elements faster, e.g. `df[1.0]`, but this is quite tricky;  this is the reason for having an issue about this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18916079",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18916079",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18916079,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE2MDc5",
    "user": {
      "login": "kghose",
      "id": 664644,
      "node_id": "MDQ6VXNlcjY2NDY0NA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/664644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kghose",
      "html_url": "https://github.com/kghose",
      "followers_url": "https://api.github.com/users/kghose/followers",
      "following_url": "https://api.github.com/users/kghose/following{/other_user}",
      "gists_url": "https://api.github.com/users/kghose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kghose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kghose/subscriptions",
      "organizations_url": "https://api.github.com/users/kghose/orgs",
      "repos_url": "https://api.github.com/users/kghose/repos",
      "events_url": "https://api.github.com/users/kghose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kghose/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T15:17:25Z",
    "updated_at": "2013-06-04T15:17:25Z",
    "author_association": "NONE",
    "body": "Yes, its true because whether two floats are the same depends on precision, but its nice to be able to have that as a time index.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18916120",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18916120",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18916120,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE2MTIw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T15:17:48Z",
    "updated_at": "2013-06-04T15:17:48Z",
    "author_association": "MEMBER",
    "body": "In my cases I don't really care about being able to select via get item ish style indexing I usually want to loop over the index series pairs or I have them in frame that I want to show as an image with the index in the columns. The object dtype makes matplotlib show the index to full precision which is really annoying since I then have to go in and format the tick labels by hand. I wholeheartedly agree that float indexes are to be avoided but sometimes they make sense. My cases are mostly plotting issues which only matters when I can't use pandas plotting abilities which thankfully isn't that often. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18916390",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18916390",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18916390,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE2Mzkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T15:21:34Z",
    "updated_at": "2013-06-04T15:21:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kghose consider using a datetime64[ns] index (if you are dealing with time), or as I said, use it as a column; you can do nearly everything you need (with an ocassional `set_index/reset_index`). what you are you trying to do? as @cpcloud indicates, the only real issue with not having a `FloatIndex` typed as `float` is for plotting (w/o manual conversion)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18917522",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18917522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18917522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE3NTIy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T15:36:40Z",
    "updated_at": "2013-06-04T15:36:40Z",
    "author_association": "MEMBER",
    "body": "General index dtype retention is probably not worth the amount of complexity and code that it would require to do it right. Datetime indexes are your friend. @jreback what about attempting coercion of object indexes when accessing the values attribute? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18918485",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18918485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18918485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE4NDg1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T15:50:17Z",
    "updated_at": "2013-06-04T15:50:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Something like this is pretty easy (@cpcloud, can't change the way `values` works or everything breaks)\n\nIs this useful?\n\n```\nIn [1]: idx = pd.Index(np.arange(10).astype('float64'))\n\nIn [3]: idx\nOut[3]: Index([0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0], dtype=object)\n\nIn [4]: idx.inferred_values\nOut[4]: array([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9.])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18918770",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18918770",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18918770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE4Nzcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T15:54:16Z",
    "updated_at": "2013-06-04T15:54:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Of course for datetimes you get this\n\n```\nIn [1]: idx = date_range('20130101',periods=5)\n\nIn [2]: idx\nOut[2]: \n<class 'pandas.tseries.index.DatetimeIndex'>\n[2013-01-01 00:00:00, ..., 2013-01-05 00:00:00]\nLength: 5, Freq: D, Timezone: None\n\nIn [3]: idx.inferred_values\nOut[3]: \narray([1356998400000000000, 1357084800000000000, 1357171200000000000,\n       1357257600000000000, 1357344000000000000])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18919267",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18919267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18919267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE5MjY3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T16:00:50Z",
    "updated_at": "2013-06-04T16:00:50Z",
    "author_association": "MEMBER",
    "body": "Well it's consistent... But it looks like it would only be useful in the float case... What would strings return? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18919443",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18919443",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18919443,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE5NDQz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T16:03:12Z",
    "updated_at": "2013-06-04T16:03:12Z",
    "author_association": "MEMBER",
    "body": "Shouldn't dates return array of date time? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18919971",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18919971",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18919971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTE5OTcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T16:10:30Z",
    "updated_at": "2013-06-04T16:10:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could return anything...(e.g. a datetime64[ns]) numpy array for example, is easy enough, strings will return the same (an object array)..\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18920253",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18920253",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18920253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTIwMjUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T16:14:34Z",
    "updated_at": "2013-06-04T16:14:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "numpy 1.7 (this is the same as .values though)\n\n```\nIn [5]: x = date_range('20130101',periods=5)\n\nIn [6]: x.inferred_values\nOut[6]: \narray(['2012-12-31T19:00:00.000000000-0500',\n       '2013-01-01T19:00:00.000000000-0500',\n       '2013-01-02T19:00:00.000000000-0500',\n       '2013-01-03T19:00:00.000000000-0500',\n       '2013-01-04T19:00:00.000000000-0500'], dtype='datetime64[ns]')\n\nIn [7]: x.inferred_values[0]\nOut[7]: numpy.datetime64('2012-12-31T19:00:00.000000000-0500')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18920297",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18920297",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18920297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTIwMjk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T16:15:17Z",
    "updated_at": "2013-06-04T16:15:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I think you are right, only float is dfferent...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18922659",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18922659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18922659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTIyNjU5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T16:50:33Z",
    "updated_at": "2013-06-04T16:50:33Z",
    "author_association": "MEMBER",
    "body": "i mean...i don't feel super strong about this since it seems like there are so few use cases for float indices. i _do_ think that it should return the \"highest level\" dtype possible that can be represented by numpy, e.g., return dates as dates like u show if this is going to be done. again though, `inferred_values` will be the same as `values` in every case except `float` and _maybe_ you could return a 2D array for `MultiIndex`...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18924015",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18924015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18924015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTI0MDE1",
    "user": {
      "login": "baldwint",
      "id": 1120261,
      "node_id": "MDQ6VXNlcjExMjAyNjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1120261?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/baldwint",
      "html_url": "https://github.com/baldwint",
      "followers_url": "https://api.github.com/users/baldwint/followers",
      "following_url": "https://api.github.com/users/baldwint/following{/other_user}",
      "gists_url": "https://api.github.com/users/baldwint/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/baldwint/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/baldwint/subscriptions",
      "organizations_url": "https://api.github.com/users/baldwint/orgs",
      "repos_url": "https://api.github.com/users/baldwint/repos",
      "events_url": "https://api.github.com/users/baldwint/events{/privacy}",
      "received_events_url": "https://api.github.com/users/baldwint/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T17:11:00Z",
    "updated_at": "2013-06-04T17:11:00Z",
    "author_association": "NONE",
    "body": "I've been using float indices a lot, so I would love `inferred_values`, or some property that gives you back an array cast to the same dtype as the one originally passed to the  `index=` keyword argument.\n\nA time axis is not the only use case for a float index; sometimes I work with spectral data where the X axis is a floating point value representing frequency or wavelength.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18924567",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18924567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18924567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTI0NTY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T17:19:09Z",
    "updated_at": "2013-06-04T17:19:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do this somewhere in your code (before you use it!)\nThis is a monkey patch\n\n```\nimport numpy as np\nimport pandas as pd\nIn [10]: def inferred_values(self):\n   ....:     if self.inferred_type == 'floating':\n   ....:         return np.asarray(self,dtype='float64')\n   ....:     return np.asarray(self)\n   ....: \n\nIn [11]: pd.Index.inferred_values = property(inferred_values)\n\nIn [12]: idx.inferred_values\nOut[12]: array([ 0.1,  1.1,  2.1,  3.1,  4.1])\n\nIn [13]: idx = Index(np.arange(5)+0.1)\n\nIn [14]: idx\nOut[14]: Index([0.1, 1.1, 2.1, 3.1, 4.1], dtype=object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18924932",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-18924932",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 18924932,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTI0OTMy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-04T17:24:02Z",
    "updated_at": "2013-06-04T17:24:13Z",
    "author_association": "MEMBER",
    "body": "> A time axis is not the only use case for a float index; sometimes I work with spectral data where the X axis is a floating point value representing frequency or wavelength.\n\nYou're abs right here, I also use it for things other than time. It would be great if there was some way to integrate pandas with [`quantities`](https://github.com/python-quantities/python-quantitieshttps://github.com/python-quantities/python-quantities), but that's probably a long way away...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24513251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-24513251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 24513251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTEzMjUx",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T14:21:41Z",
    "updated_at": "2013-09-16T14:21:41Z",
    "author_association": "NONE",
    "body": "I (inadvertently) started a thread about this on the pystatsmodels list; thread link: https://groups.google.com/forum/#!topic/pystatsmodels/ua7WpNd-U8Q\n\nMy use case is also for time values (and DatetimeIndex is not useful for a variety of reasons, most notably that all I have a deltas against some unknown epoch defined as \"whenever someone hit the record button\".). My concern though isn't so much having a useful .values attribute (though I guess that might be nice too!), but for having a reliable way to do time-based indexing, mostly for ad hoc interactive use. The main features I'm looking for are:\n- Make it reliably predictable whether any given indexing expression will go by time-in-milliseconds or offset-in-array\n- For a time-based indexing expression, slices should give all values that fall within their bounds, whether or not the exact endpoints are present in the array. (NB: my index will always be sorted.) This is to support ad hoc queries like \"eh, let's see one second of data from channel P4\" -> `plot(df.loc[:1000, \"P4\"])`. For this kind of usage, no-one cares whether there was a sample taken at exactly 1000 milliseconds or not. Currently `.ix` does interpret floating point slices like this, but `.loc` does not.\n- For bonus points: if a time does happen to be a nice exact integer value, then there should be some way to write down a time-based indexing expression that picks it out exactly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24515072",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-24515072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 24515072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE1MDcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T14:44:47Z",
    "updated_at": "2013-09-16T14:45:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@njsmith \n\nI made a couple of minor changes to .loc to get the following behavior, which I believe is still consistent\nwith label based, but does NOT fallback (the end-points of a slice are allowed to just not be in the index, which is slightly inconsistent, but they select on a label basis, so I think that is ok) . Pls review and lmk.\n\n```\nIn [1]: s = Series(np.arange(5), index=np.arange(5) * 2.5)\n\nIn [2]: s\nOut[2]: \n0.0     0\n2.5     1\n5.0     2\n7.5     3\n10.0    4\ndtype: int64\n\nIn [3]: # label based slicing\n\nIn [4]: s[1.0:3.0]\nOut[4]: \n2.5    1\ndtype: int64\n\nIn [5]: s.ix[1.0:3.0]\nOut[5]: \n2.5    1\ndtype: int64\n\nIn [6]: s.loc[1.0:3.0]\nOut[6]: \n2.5    1\ndtype: int64\n\nIn [7]: # exact indexing when found\n\nIn [8]: s[5.0]\nOut[8]: 2\n\nIn [9]: s.loc[5.0]\nOut[9]: 2\n\nIn [10]: s.ix[5.0]\nOut[10]: 2\n\nIn [11]: # non-fallback location based should raise this error (__getitem__,ix fallback here)\n\nIn [12]: s.loc[4.0]\nKeyError: 'the label [4.0] is not in the [index]'\n\nIn [13]: s[4.0] == s[4]\nOut[13]: True\n\nIn [14]: s[4] == s[4]\nOut[14]: True\n\n# confusing slicing patterns in __getitem__/ix, loc is clear\n\nIn [15]: s.loc[2.0:5.0]\nOut[15]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [16]: s.loc[2.0:5]\nOut[16]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [17]: s.loc[2.1:5]\nOut[17]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [18]: # these are what __getitem__/ix does\n\nIn [19]: s.ix[2.0:5.0]\nOut[19]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [20]: s.ix[2.0:5]\nOut[20]: \n5.0     2\n7.5     3\n10.0    4\ndtype: int64\n\nIn [21]: s.ix[2.1:5]\nOut[21]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [22]: s[2.0:5.0]\nOut[22]: \n2.5    1\n5.0    2\ndtype: int64\n\nIn [23]: s[2.0:5]\nOut[23]: \n5.0     2\n7.5     3\n10.0    4\ndtype: int64\n\nIn [24]: s[2.1:5]\nOut[24]: \n2.5    1\n5.0    2\ndtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24517049",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-24517049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 24517049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTE3MDQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T15:09:27Z",
    "updated_at": "2013-09-16T15:09:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @dragoljub, cc @nehalecky\n\nyou guys have had interests in indexing in the past....not sure if you have any comments wrt this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24531761",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-24531761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 24531761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMxNzYx",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T18:16:37Z",
    "updated_at": "2013-09-16T18:16:37Z",
    "author_association": "NONE",
    "body": "BTW, I'd be in favor of a `Float64Index` class that specifically implemented the limited subset of stuff that makes sense for floating point indices and not the stuff that didn't. So e.g. trying to groupby would just be an error, and I can even see the argument for making scalar indexing an error. This would be much safer than the current situation, making @jreback happy :-). But, stuff like slicing and `.values` could still act the way people want, making users happy too.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24533840",
    "html_url": "https://github.com/pandas-dev/pandas/issues/236#issuecomment-24533840",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/236",
    "id": 24533840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NTMzODQw",
    "user": {
      "login": "dragoljub",
      "id": 2701562,
      "node_id": "MDQ6VXNlcjI3MDE1NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2701562?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dragoljub",
      "html_url": "https://github.com/dragoljub",
      "followers_url": "https://api.github.com/users/dragoljub/followers",
      "following_url": "https://api.github.com/users/dragoljub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dragoljub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dragoljub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dragoljub/subscriptions",
      "organizations_url": "https://api.github.com/users/dragoljub/orgs",
      "repos_url": "https://api.github.com/users/dragoljub/repos",
      "events_url": "https://api.github.com/users/dragoljub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dragoljub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-16T18:43:18Z",
    "updated_at": "2013-09-16T18:43:18Z",
    "author_association": "NONE",
    "body": "For much of the data I work with I have been OK with using Object/Int64 index types, however I do also keep a copy of my indexers as data columns to enable easier plotting/slicing for some cases.\n\nIMO, anything that enables a smoother interface to MatplotLib, Galry or Scikit-Learn I'm :+1: \n"
  }
]
