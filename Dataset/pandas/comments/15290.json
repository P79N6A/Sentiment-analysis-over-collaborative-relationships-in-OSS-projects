[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276954519",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-276954519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 276954519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Njk1NDUxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T13:18:22Z",
    "updated_at": "2017-02-02T13:18:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you are confused as to the purpose of ``.transform``. This is a reductive operation on a group to a scalar, which is then broadcast back to the original shape. \r\n\r\nSo I would say that what you are doing should actually raise a ``ValueError``; we don't really check this fully.\r\n\r\n``.apply`` is a more general operator that will infer what you are doing / want.\r\n\r\nFurther I think we completely ignore ``as_index`` with transform as it makes no sense. Since it defaults to ``True``, I think we could/should raise if its not ``True``.\r\n\r\nI will mark this as a better error reporting"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277088689",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277088689",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277088689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzA4ODY4OQ==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T21:24:48Z",
    "updated_at": "2017-02-02T21:24:48Z",
    "author_association": "NONE",
    "body": "I concur that I'm confused, however why should transform drop the groupby columns? Why is this more useful than returning the transformed columns with the groupby columns prepended as is done by agg?\r\n\r\n\r\n \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277091111",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277091111",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277091111,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzA5MTExMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T21:34:14Z",
    "updated_at": "2017-02-02T21:34:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the docs are pretty clear: http://pandas.pydata.org/pandas-docs/stable/groupby.html#transformation"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277109656",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277109656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277109656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzEwOTY1Ng==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T22:47:37Z",
    "updated_at": "2017-02-02T22:47:37Z",
    "author_association": "NONE",
    "body": "The docs  states \"The transform method returns an object that is indexed the same\", so it is clear that the index labels are the same, however it is silent on \r\n1. Which columns are transformed. Excluding the \"by\" columns makes sense and is the same as agg.\r\n2. What happens to the \"by\" columns and why dropping them is the right choice where as with agg they are retained."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277119297",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277119297",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277119297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzExOTI5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-02T23:34:27Z",
    "updated_at": "2017-02-02T23:34:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "well I think that should be clear, the semantics are exactly the same as ``.agg``, IOW on a ``DataFrameGroupby`` you get all columns but the groupers, and on a ``SeriesGrouppBy`` you get that column.\r\n\r\n``.transform`` is essentially a reductive operation on each group which is then broadcast back to the original size.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277124692",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277124692",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277124692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzEyNDY5Mg==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T00:02:13Z",
    "updated_at": "2017-02-03T00:02:13Z",
    "author_association": "NONE",
    "body": "Yes the semantics are the same, making point 1 explicit (both for agg and transform) in the docs would help new users like myself.  \r\n\r\nWhat about point 2, why is it the right thing to drop the groupers columns, which is not how .agg works?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277125427",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277125427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277125427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzEyNTQyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T00:05:54Z",
    "updated_at": "2017-02-03T00:05:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, if you want to a pull-request would be helpful.\r\n\r\nits a transform, by-definition you are only affecting the non-groupers. you are returning the original just with replaced data for the non-groupers.\r\n\r\nits rarely makes sense to perform an operation on grouped columns. for example normalizing doesn't make any sense on datetimes or strings, sure it makes sense on intergers (talking about groupers here), but that would be just weird."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277126716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277126716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277126716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzEyNjcxNg==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T00:13:22Z",
    "updated_at": "2017-02-03T00:13:22Z",
    "author_association": "NONE",
    "body": "I'm not suggesting transforming the groupers just  prepending them to the transformed columns, which is the same as the .agg semantics. \r\n\r\nThe transformed DataFrame then has the same shape as the original, with the same indexes and same columns. I think that makes more sense. \r\n\r\nIt also enable as_index = True to have a sensible interpretation."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277135634",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277135634",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277135634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzEzNTYzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T01:05:50Z",
    "updated_at": "2017-02-03T01:05:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's not very useful. The point is to align the index on assign back. IOW a very common thing to do is.\r\n\r\n```\r\ndf = df.assign(transformed=df.groupby(...).foo.transform(...))\r\n```\r\n\r\nwhich only makes sense if the returned column has the *same* index as the original."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277157468",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277157468",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277157468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzE1NzQ2OA==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T03:45:17Z",
    "updated_at": "2017-02-03T03:45:17Z",
    "author_association": "NONE",
    "body": "BTW, thank you for persisting with me on this.\r\n\r\nAgreed this is common, however if the groupers were retained (i.e., prepended as with .agg) in what I suspect is the common use case there isn't a need to do an assign. \r\n\r\nUsing my example you propose writing:\r\n\r\n```python\r\nts[['Entry', 'Exit']] = ts.groupby(['Year', 'Day']).transform(zscore)\r\n````\r\nusing assignment to update ts as a side-effect. This works if the index is unique, and is a common approach, but fails if the index is not unique. In my case, the index is only unique within each group.\r\n\r\nI'm proposing the following give the same result by pre-pended the groupers, as is done with .agg \r\n```python\r\nts.groupby(['Year', 'Day']).transform(zscore)\r\n```\r\n\r\nThis has the advantages of: \r\n1. being shorter,\r\n2. the same behaviour as .agg\r\n3. allows an interpretation of as_index\r\n4. being side effect free. \r\n\r\nOf course if I only want to apply the transform just Exit, then there is a problem and I'd need to write\r\n\r\n```python\r\nts[['Exit']] = ts.groupby(['Year', 'Day']).transform(zscore).Exit\r\n````"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277158062",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277158062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277158062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzE1ODA2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T03:50:31Z",
    "updated_at": "2017-02-03T03:50:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can just use ``.apply`` to get what you want. ``.transform`` has a specific function. Please really learn why things are before trying to change them. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277161265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15290#issuecomment-277161265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15290",
    "id": 277161265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzE2MTI2NQ==",
    "user": {
      "login": "Kevin-McIsaac",
      "id": 16606323,
      "node_id": "MDQ6VXNlcjE2NjA2MzIz",
      "avatar_url": "https://avatars2.githubusercontent.com/u/16606323?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kevin-McIsaac",
      "html_url": "https://github.com/Kevin-McIsaac",
      "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
      "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
      "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
      "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
      "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-03T04:20:37Z",
    "updated_at": "2017-02-03T04:20:37Z",
    "author_association": "NONE",
    "body": "Fair enough.  I did spend about 6 hrs on this before raising the issue. Taking your advice I tried apply in the obvious way:\r\n\r\n```python\r\nzscore = lambda x: (x - x.mean()) / x.std()\r\nts.groupby(['Year', 'Day'],  as_index=True).apply(zscore)\r\n```\r\nbut this gives\r\n```python\r\nValueError: can only convert an array of size 1 to a Python scalar\r\n```\r\nso I exclude the groupers \r\n```python\r\nts.groupby(['Year', 'Day'],  as_index=True).apply(lambda g: zscore(g[['Exit', 'Entry']]))\r\n```\r\nand then I get the same result as transform. So is this the semantics of transform, i.e., apply excluding groupers.\r\n\r\nTo get the result I've proposed I have to write\r\n```python\r\ndef my_transform(group, by, fn):\r\n    transformed = fn(group.drop(by, axis='columns'))\r\n    return pd.concat([group[by], transformed], axis='columns')\r\n\r\nts.groupby(['Year', 'Day']).apply(lambda g:my_transform(g, ['Year', 'Day'], zscore))\r\n```"
  }
]
