[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443359831",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24022#issuecomment-443359831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24022",
    "id": 443359831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzM1OTgzMQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T22:32:51Z",
    "updated_at": "2018-11-30T22:32:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you reduce this to a minimal, runnable example?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443363313",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24022#issuecomment-443363313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24022",
    "id": 443363313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzM2MzMxMw==",
    "user": {
      "login": "jmarshall9120",
      "id": 30184747,
      "node_id": "MDQ6VXNlcjMwMTg0NzQ3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/30184747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmarshall9120",
      "html_url": "https://github.com/jmarshall9120",
      "followers_url": "https://api.github.com/users/jmarshall9120/followers",
      "following_url": "https://api.github.com/users/jmarshall9120/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmarshall9120/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmarshall9120/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmarshall9120/subscriptions",
      "organizations_url": "https://api.github.com/users/jmarshall9120/orgs",
      "repos_url": "https://api.github.com/users/jmarshall9120/repos",
      "events_url": "https://api.github.com/users/jmarshall9120/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmarshall9120/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T22:49:01Z",
    "updated_at": "2018-12-03T00:00:24Z",
    "author_association": "NONE",
    "body": "@chris-b1: I am the OP, this is my personal account, I didn't realize that other account was logged on when I posted.\r\n\r\nHere's a minimal I just tested:\r\n\r\nPaste the below in a csv:\r\n\r\n```\r\n,ga:source,ga:deviceCategory,ga:country,ga:metro,ga:date,ga:minute,ga:channelGrouping,ga:sessions,ga:transactions\r\n0,(direct),desktop,(not set),(not set),20180110,14,Direct,1,5\r\n1,(direct),desktop,(not set),(not set),20180110,20,Direct,1,5\r\n2,(direct),desktop,(not set),(not set),20180110,25,Direct,1,5\r\n3,(direct),desktop,(not set),(not set),20180116,38,Direct,1,5\r\n4,(direct),desktop,(not set),(not set),20180122,33,Direct,1,5\r\n5,(direct),desktop,(not set),(not set),20180126,35,Direct,1,5\r\n```\r\n\r\nrun this:\r\n\r\n```\r\nimport pandas as pd\r\nfrom numpy import dtype\r\n\r\n# replace \"my.csv\" with the full path of your csv\r\ncsvPath = \"my.csv\"\r\n\r\ndtypesA = {'ga:source': dtype('O'), 'ga:deviceCategory': dtype('O'),\r\n    'ga:country': dtype('O'), 'ga:metro': dtype('O'), 'ga:date': dtype('O'), \r\n    'ga:minute': dtype('O'), 'ga:channelGrouping': dtype('O'), 'ga:sessions': \r\n    dtype('int64'), 'ga:transactions': dtype('int64')}\r\n\r\ndtypesB = {'ga:source': dtype('O'), 'ga:deviceCategory': dtype('O'),\r\n    'ga:country': dtype('O'), 'ga:metro': dtype('O'), 'ga:date': dtype('int64'), \r\n    'ga:minute': dtype('int64'), 'ga:channelGrouping': dtype('O'), 'ga:sessions': \r\n    dtype('int64'), 'ga:transactions': dtype('int64')}\r\n\r\ndfA = pd.read_csv(csvPath, dtype=dtypesA)\r\ndfB = pd.read_csv(csvPath, dtype=dtypesB)\r\ndfB = dfB.astype(dtypesA)\r\n\r\nindexCols = ['ga:source', 'ga:deviceCategory', 'ga:country', 'ga:metro', \r\n    'ga:date', 'ga:minute', 'ga:channelGrouping']\r\n\r\ndfA.set_index(indexCols, inplace=True)\r\ndfB.set_index(indexCols, inplace=True)\r\n\r\ndfB[len(dfB.columns)] = 1\r\nt = dfA.merge(dfB, how=\"left\", left_index=True, \r\nright_index=True, suffixes = ('','_y'))\r\n\t\r\nt.iloc[:,-1].notnull().any()\r\n```\r\n\r\nactual output:\r\n`>False`\r\n\r\nexpected output:\r\n`>True`\r\n\r\nEDIT:\r\n\r\nforgot the .astype cast in the example.  Just fixed it.  This example should now replicate the problem."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443888110",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24022#issuecomment-443888110",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24022",
    "id": 443888110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Mzg4ODExMA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T22:05:22Z",
    "updated_at": "2018-12-03T22:05:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I think here is a simpler repro of the fundamental problem\r\n```python\r\nfrom io import StringIO\r\n\r\ndfA = pd.read_csv(StringIO('a,b\\n1,2'), dtype={'a': dtype('O')})\r\ndfB = pd.reac_csv(StringIO('a,b\\n1,2'), dtype={'a': dtype('int64')}).astype({'b': dtype('O')})\r\n\r\ntype(dfA['a'].values[0])\r\nOut[162]: str\r\n\r\ntype(dfB['a'].values[0])\r\nOut[163]: int\r\n```\r\n\r\nIn read_csv `dtype=object` always means strings (pass through the data unparsed).  In astype, as it works in numpy, `dtype=object` boxes the individual values into the appropriate python type.  e.g. \r\n```python\r\ntype(np.array([1,2,3]).astype(dtype('O'))[0])\r\nOut[169]: int\r\n```\r\n\r\nI think your best bet here, is to use `str` in place of `dtype('O')` - in both cases will then cast to strings.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443901803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24022#issuecomment-443901803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24022",
    "id": 443901803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzkwMTgwMw==",
    "user": {
      "login": "jmarshall9120",
      "id": 30184747,
      "node_id": "MDQ6VXNlcjMwMTg0NzQ3",
      "avatar_url": "https://avatars0.githubusercontent.com/u/30184747?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmarshall9120",
      "html_url": "https://github.com/jmarshall9120",
      "followers_url": "https://api.github.com/users/jmarshall9120/followers",
      "following_url": "https://api.github.com/users/jmarshall9120/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmarshall9120/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmarshall9120/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmarshall9120/subscriptions",
      "organizations_url": "https://api.github.com/users/jmarshall9120/orgs",
      "repos_url": "https://api.github.com/users/jmarshall9120/repos",
      "events_url": "https://api.github.com/users/jmarshall9120/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmarshall9120/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-03T22:53:51Z",
    "updated_at": "2018-12-03T22:53:51Z",
    "author_association": "NONE",
    "body": "Thanks, for the reply.\r\n\r\nThat's kind of a problematic solution.  In the case I've presented I know the data came from a .csv and is thus can cast to string.  But what if i didn't know where the data was coming from?\r\n\r\nI think my real problem here is type consistency when setting indexes.  As it it the DataFrame tells me the data its dtype('O') and it becomes dtype('int64') just by calling `.set_index`.  So any data I use pandas for is now suspect.  \r\n\r\nSo I guess the question is, that if this isn't a bug, how do I inspect a DataFrame and cast the data types so I can be sure of the out come of `set_index`?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/444120741",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24022#issuecomment-444120741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24022",
    "id": 444120741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NDEyMDc0MQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-04T14:35:05Z",
    "updated_at": "2018-12-04T14:35:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Casting (`astype`) to `dtype('O')` is almost always a bad idea (at least off the top of my head) - the issue isn't really `set_index` - it's that cast that put your data in an odd state - integer values boxed in a object dtype.\r\n\r\nAnd it of course depends, but in the general use of pandas, there shouldn't be a lot of casting/dtype specifying required.  e.g., typically in read_csv you'd only specify a type if necessary to override the inference."
  }
]
