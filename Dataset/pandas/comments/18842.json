[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/352817375",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18842#issuecomment-352817375",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18842",
    "id": 352817375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjgxNzM3NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-19T16:48:28Z",
    "updated_at": "2017-12-19T16:48:28Z",
    "author_association": "MEMBER",
    "body": "It looks like previous versions would automatically convert that large number to a float, but you're getting an overflow error in 0.21.1 because it is attempting to fit that number into an int.\r\n\r\nFWIW you can work around this by explicitly specifying the dtype:\r\n\r\n    pd.read_json(json.dumps(json_data), typ='series', dtype={\"articleId\": np.float64})"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353498602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18842#issuecomment-353498602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18842",
    "id": 353498602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzQ5ODYwMg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T01:21:11Z",
    "updated_at": "2017-12-22T02:13:57Z",
    "author_association": "MEMBER",
    "body": "I believe the difference here was introduced in 4fd104a72a825914851820fee623fbcdf1a989a7 at the line below. Previously this was using a bare except that would catch everything, but now that the exception is more explicit that OverFlow error is not being caught and instead is sent further up the stack.\r\n\r\nI can take a go at this in a PR\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/4fd104a72a825914851820fee623fbcdf1a989a7/pandas/io/json/json.py#L684"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420041654",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18842#issuecomment-420041654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18842",
    "id": 420041654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDA0MTY1NA==",
    "user": {
      "login": "tocunha",
      "id": 17748264,
      "node_id": "MDQ6VXNlcjE3NzQ4MjY0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17748264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tocunha",
      "html_url": "https://github.com/tocunha",
      "followers_url": "https://api.github.com/users/tocunha/followers",
      "following_url": "https://api.github.com/users/tocunha/following{/other_user}",
      "gists_url": "https://api.github.com/users/tocunha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tocunha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tocunha/subscriptions",
      "organizations_url": "https://api.github.com/users/tocunha/orgs",
      "repos_url": "https://api.github.com/users/tocunha/repos",
      "events_url": "https://api.github.com/users/tocunha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tocunha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T20:03:10Z",
    "updated_at": "2018-09-10T20:03:10Z",
    "author_association": "NONE",
    "body": "I am experiencing the same error when reading a huge compressed json file.\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/json/json.py in __next__(self)\r\n    568         if lines:\r\n    569             lines_json = self._combine_lines(lines)\r\n--> 570             obj = self._get_object_parser(lines_json)\r\n    571 \r\n    572             # Make sure that the returned objects have the right index.\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/json/json.py in _get_object_parser(self, json)\r\n    544         obj = None\r\n    545         if typ == 'frame':\r\n--> 546             obj = FrameParser(json, **kwargs).parse()\r\n    547 \r\n    548         if typ == 'series' or obj is None:\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/json/json.py in parse(self)\r\n    642         if self.convert_axes:\r\n    643             self._convert_axes()\r\n--> 644         self._try_convert_types()\r\n    645         return self.obj\r\n    646 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/json/json.py in _try_convert_types(self)\r\n    897 \r\n    898         self._process_converter(\r\n--> 899             lambda col, c: self._try_convert_data(col, c, convert_dates=False))\r\n    900 \r\n    901     def _try_convert_dates(self):\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/json/json.py in _process_converter(self, f, filt)\r\n    877         for i, (col, c) in enumerate(self.obj.iteritems()):\r\n    878             if filt(col, c):\r\n--> 879                 new_data, result = f(col, c)\r\n    880                 if result:\r\n    881                     c = new_data\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/json/json.py in <lambda>(col, c)\r\n    897 \r\n    898         self._process_converter(\r\n--> 899             lambda col, c: self._try_convert_data(col, c, convert_dates=False))\r\n    900 \r\n    901     def _try_convert_dates(self):\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/io/json/json.py in _try_convert_data(self, name, data, use_dtypes, convert_dates)\r\n    712             # coerce ints if we can\r\n    713             try:\r\n--> 714                 new_data = data.astype('int64')\r\n    715                 if (new_data == data).all():\r\n    716                     data = new_data\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/util/_decorators.py in wrapper(*args, **kwargs)\r\n    176                 else:\r\n    177                     kwargs[new_arg_name] = new_arg_value\r\n--> 178             return func(*args, **kwargs)\r\n    179         return wrapper\r\n    180     return _deprecate_kwarg\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/generic.py in astype(self, dtype, copy, errors, **kwargs)\r\n   4999             # else, only a single dtype is given\r\n   5000             new_data = self._data.astype(dtype=dtype, copy=copy, errors=errors,\r\n-> 5001                                          **kwargs)\r\n   5002             return self._constructor(new_data).__finalize__(self)\r\n   5003 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/internals.py in astype(self, dtype, **kwargs)\r\n   3712 \r\n   3713     def astype(self, dtype, **kwargs):\r\n-> 3714         return self.apply('astype', dtype=dtype, **kwargs)\r\n   3715 \r\n   3716     def convert(self, **kwargs):\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/internals.py in apply(self, f, axes, filter, do_integrity_check, consolidate, **kwargs)\r\n   3579 \r\n   3580             kwargs['mgr'] = self\r\n-> 3581             applied = getattr(b, f)(**kwargs)\r\n   3582             result_blocks = _extend_blocks(applied, result_blocks)\r\n   3583 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/internals.py in astype(self, dtype, copy, errors, values, **kwargs)\r\n    573     def astype(self, dtype, copy=False, errors='raise', values=None, **kwargs):\r\n    574         return self._astype(dtype, copy=copy, errors=errors, values=values,\r\n--> 575                             **kwargs)\r\n    576 \r\n    577     def _astype(self, dtype, copy=False, errors='raise', values=None,\r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/internals.py in _astype(self, dtype, copy, errors, values, klass, mgr, **kwargs)\r\n    662 \r\n    663                 # _astype_nansafe works fine with 1-d only\r\n--> 664                 values = astype_nansafe(values.ravel(), dtype, copy=True)\r\n    665                 values = values.reshape(self.shape)\r\n    666 \r\n\r\n~/anaconda3/lib/python3.6/site-packages/pandas/core/dtypes/cast.py in astype_nansafe(arr, dtype, copy)\r\n    707         # work around NumPy brokenness, #1987\r\n    708         if np.issubdtype(dtype.type, np.integer):\r\n--> 709             return lib.astype_intsafe(arr.ravel(), dtype).reshape(arr.shape)\r\n    710 \r\n    711         # if we have a datetime/timedelta array of objects\r\n\r\npandas/_libs/lib.pyx in pandas._libs.lib.astype_intsafe()\r\n\r\npandas/_libs/src/util.pxd in util.set_value_at_unsafe()\r\n\r\nOverflowError: Python int too large to convert to C long"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/420042171",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18842#issuecomment-420042171",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18842",
    "id": 420042171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMDA0MjE3MQ==",
    "user": {
      "login": "tocunha",
      "id": 17748264,
      "node_id": "MDQ6VXNlcjE3NzQ4MjY0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17748264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tocunha",
      "html_url": "https://github.com/tocunha",
      "followers_url": "https://api.github.com/users/tocunha/followers",
      "following_url": "https://api.github.com/users/tocunha/following{/other_user}",
      "gists_url": "https://api.github.com/users/tocunha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tocunha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tocunha/subscriptions",
      "organizations_url": "https://api.github.com/users/tocunha/orgs",
      "repos_url": "https://api.github.com/users/tocunha/repos",
      "events_url": "https://api.github.com/users/tocunha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tocunha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-10T20:04:55Z",
    "updated_at": "2018-09-10T20:04:55Z",
    "author_association": "NONE",
    "body": "I tried the work around, but didn't have success.\r\n\r\n            for chunk in pd.read_json(dir_+filename, chunksize=10000, compression = 'bz2', lines=True, dtype={\"created_utc\": np.int64, 'retrieved_on':np.int64, 'created':np.int64}):                \r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421452405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18842#issuecomment-421452405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18842",
    "id": 421452405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTQ1MjQwNQ==",
    "user": {
      "login": "tocunha",
      "id": 17748264,
      "node_id": "MDQ6VXNlcjE3NzQ4MjY0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17748264?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tocunha",
      "html_url": "https://github.com/tocunha",
      "followers_url": "https://api.github.com/users/tocunha/followers",
      "following_url": "https://api.github.com/users/tocunha/following{/other_user}",
      "gists_url": "https://api.github.com/users/tocunha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tocunha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tocunha/subscriptions",
      "organizations_url": "https://api.github.com/users/tocunha/orgs",
      "repos_url": "https://api.github.com/users/tocunha/repos",
      "events_url": "https://api.github.com/users/tocunha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tocunha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T18:54:07Z",
    "updated_at": "2018-09-14T18:54:07Z",
    "author_association": "NONE",
    "body": "I avoided this error passing dtype=False "
  }
]
