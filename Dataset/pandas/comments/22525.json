[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/416497787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22525#issuecomment-416497787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22525",
    "id": 416497787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjQ5Nzc4Nw==",
    "user": {
      "login": "pazzarpj",
      "id": 6457830,
      "node_id": "MDQ6VXNlcjY0NTc4MzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6457830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pazzarpj",
      "html_url": "https://github.com/pazzarpj",
      "followers_url": "https://api.github.com/users/pazzarpj/followers",
      "following_url": "https://api.github.com/users/pazzarpj/following{/other_user}",
      "gists_url": "https://api.github.com/users/pazzarpj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pazzarpj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pazzarpj/subscriptions",
      "organizations_url": "https://api.github.com/users/pazzarpj/orgs",
      "repos_url": "https://api.github.com/users/pazzarpj/repos",
      "events_url": "https://api.github.com/users/pazzarpj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pazzarpj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T08:31:37Z",
    "updated_at": "2018-08-28T08:31:37Z",
    "author_association": "NONE",
    "body": "Having just noticed the comment in io.json.json.read_json\r\n\r\n    Notes\r\n    -----\r\n    Specific to ``orient='table'``, if a :class:`DataFrame` with a literal\r\n    :class:`Index` name of `index` gets written with :func:`to_json`, the\r\n    subsequent read operation will incorrectly set the :class:`Index` name to\r\n    ``None``. This is because `index` is also used by :func:`DataFrame.to_json`\r\n    to denote a missing :class:`Index` name, and the subsequent\r\n    :func:`read_json` operation cannot distinguish between the two. The same\r\n    limitation is encountered with a :class:`MultiIndex` and any names\r\n    beginning with ``'level_'``.\r\n\r\nFrom that I can see that this as been noted during development.\r\nAssuming that to be true, does this also cover the case with the numbers trying to be converted to nan?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/416656821",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22525#issuecomment-416656821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22525",
    "id": 416656821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjY1NjgyMQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T16:41:41Z",
    "updated_at": "2018-08-28T16:41:41Z",
    "author_association": "MEMBER",
    "body": "A smattering of issues here but generally I don't think any of these can be supported due to having a numeric column name (see #19129). Can you try assigning a non-numeric column name and see if that resolves?\r\n\r\nError messages can certainly be improved; aforementioned issue is still open if you want to take a look"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/416773449",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22525#issuecomment-416773449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22525",
    "id": 416773449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjc3MzQ0OQ==",
    "user": {
      "login": "pazzarpj",
      "id": 6457830,
      "node_id": "MDQ6VXNlcjY0NTc4MzA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6457830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pazzarpj",
      "html_url": "https://github.com/pazzarpj",
      "followers_url": "https://api.github.com/users/pazzarpj/followers",
      "following_url": "https://api.github.com/users/pazzarpj/following{/other_user}",
      "gists_url": "https://api.github.com/users/pazzarpj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pazzarpj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pazzarpj/subscriptions",
      "organizations_url": "https://api.github.com/users/pazzarpj/orgs",
      "repos_url": "https://api.github.com/users/pazzarpj/repos",
      "events_url": "https://api.github.com/users/pazzarpj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pazzarpj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-28T23:30:22Z",
    "updated_at": "2018-08-28T23:30:22Z",
    "author_association": "NONE",
    "body": "Thanks Will,\r\nI was in the middle of investigating that possibility. I hadn't seen #19129, It seems that they would be closely related if not the same issue.\r\n\r\nGive me some time to investigate if all of the issues stem from #19129 or whether there are new bug discovered here."
  }
]
