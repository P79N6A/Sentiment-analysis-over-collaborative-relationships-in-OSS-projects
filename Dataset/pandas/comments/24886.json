[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456919945",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-456919945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 456919945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjkxOTk0NQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-23T18:45:56Z",
    "updated_at": "2019-01-23T18:45:56Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=h1) Report\n> Merging [#24886](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/4b937ff59127bf0edec8e07a667fa222bf2e3b4e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24886/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #24886   +/-   ##\n=======================================\n  Coverage   92.39%   92.39%           \n=======================================\n  Files         166      166           \n  Lines       52413    52413           \n=======================================\n  Hits        48425    48425           \n  Misses       3988     3988\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.81% <ø> (ø)` | :arrow_up: |\n| #single | `42.89% <ø> (ø)` | :arrow_up: |\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=footer). Last update [4b937ff...cfc2699](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/456919952",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-456919952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 456919952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NjkxOTk1Mg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-23T18:45:58Z",
    "updated_at": "2019-03-03T17:42:23Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=h1) Report\n> Merging [#24886](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/42b4c975e55c59da7868f99f9949841aca12a08d?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24886/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #24886   +/-   ##\n=======================================\n  Coverage   91.75%   91.75%           \n=======================================\n  Files         173      173           \n  Lines       52960    52960           \n=======================================\n  Hits        48595    48595           \n  Misses       4365     4365\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.33% <ø> (ø)` | :arrow_up: |\n| #single | `41.71% <ø> (ø)` | :arrow_up: |\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=footer). Last update [42b4c97...6dd2120](https://codecov.io/gh/pandas-dev/pandas/pull/24886?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457019078",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-457019078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 457019078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzAxOTA3OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T00:25:07Z",
    "updated_at": "2019-01-24T00:25:07Z",
    "author_association": "MEMBER",
    "body": "@jreback you're moving the goalposts. In #23701 you agreed that singleton fixtures were not a good use case.  In #24769 you argued that fixtures were less verbose and more clear, an argument which can only plausibly refer to non-inlineable fixtures (i.e. not the ones covered by this PR).\r\n\r\n> The fixture is well named and obvious. It is so clear that something is testing an empty dataframe.\r\n\r\nEven if it weren't ridiculous to claim that `empty_frame` in an arg is somehow more obvious than `DataFrame({})`, then how in the world do you square this with your argument [here](https://github.com/pandas-dev/pandas/pull/24873#issuecomment-456258172) that `Timestamp.now()` is too simple to be a fixture?  Seriously.  Explain to me the relevant distinction between these two cases. \r\n\r\nFreaky Friday body swap remains my main hypothesis."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457028528",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-457028528",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 457028528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzAyODUyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T01:14:12Z",
    "updated_at": "2019-01-24T01:14:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel I said exactly\r\n\r\n> if it’s truly a singleton the. no a fixture is not warranted\r\n\r\nshow me a fixture that is a singleton?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457028898",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-457028898",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 457028898,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzAyODg5OA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T01:16:06Z",
    "updated_at": "2019-01-24T01:16:06Z",
    "author_association": "MEMBER",
    "body": "> show me a fixture that is a singleton?\r\n\r\nEvery single one of the ones under discussion returns a single object, i.e. has no params/parameterization."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457033387",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-457033387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 457033387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzAzMzM4Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T01:37:43Z",
    "updated_at": "2019-01-24T01:37:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Every single one of the ones under discussion returns a single object, i.e. has no params/parameterization.\r\n\r\nso why be inconsistent? fixtures are the way to go\r\nfunctions are simply going to be a mess; we had this once (and still have a fair amount remaining) from the old unittest framework\r\n\r\nwe have a nice consistent use of fixtures - changing at this stage is a big step backwards"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457035040",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-457035040",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 457035040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzAzNTA0MA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T01:46:20Z",
    "updated_at": "2019-01-24T01:46:20Z",
    "author_association": "MEMBER",
    "body": "> so why be inconsistent?\r\n\r\nSo you're agreeing that individually these are useless-at-best but have value because they are consistent with the user pattern of [something]?\r\n\r\nThis gets us back to the \"why not a fixture for `Timestamp.now()`?\" question.  To be consistent with these singleton fixtures we would need to make fixtures for essentially every object used anywhere in the tests."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457037788",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-457037788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 457037788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzAzNzc4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T01:59:53Z",
    "updated_at": "2019-01-24T01:59:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> So you're agreeing that individually these are useless-at-best but have value because they are consistent with the user pattern of [something]?\r\n\r\nnope didn’t say or imply that. these fixtures are good because they r consistent. in ANY codebase i would use fixtures like this.\r\n\r\n> This gets us back to the \"why not a fixture for Timestamp.now()?\" question. To be consistent with these singleton fixtures we would need to make fixtures for essentially every object used anywhere in the tests.\r\n\r\nactually should probably use a fixture for Timestanp.now.\r\n\r\nYou are missing the big picture here and the reason I am not going to budge on this at all. We have an extremely large code and test base. It is really hard to be consistent. A lot of things we do we can enforce with linting, but a lot we cannot. \r\n\r\nFixtures enforce good testing habits by making sure even simple and of course complex things can be tested pretty easily. We have exactly 1 way of creating a frame of a certain class for example (be it empty or floats or mixed or whatever). There is no confusion if empty means no index or no columns or both. In fact the test writer actually doesn’t need to even understand this; we have a well constructed fixture that does it. \r\n\r\nThe abstraction helps a lot here. This also promotes readibility (assume the fixtures are well named, then it is immediately obvious what they produce)\r\n\r\nSure you could argue that for simple things functions are enough, but that leads to the inevitable: when should I use a function (over a fixture). Well I think the answer should now be clear; never.\r\n\r\nEither construct a test specific thing (which we do quite a lot); if you need something that is generic then use a fixture.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457042313",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-457042313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 457042313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzA0MjMxMw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T02:24:18Z",
    "updated_at": "2019-01-24T02:24:18Z",
    "author_association": "MEMBER",
    "body": "Well at least by saying Timestamp.now() should have a fixture you are being internally consistent.  Is there anything that shouldn’t be a fixture?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/468984081",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-468984081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 468984081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODk4NDA4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-03T03:27:10Z",
    "updated_at": "2019-03-03T03:27:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am ok with this one. Can you merge master. Also let's use ``DataFrame()`` and ``Series()`` for the empties."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/469369010",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24886#issuecomment-469369010",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24886",
    "id": 469369010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTM2OTAxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T18:40:39Z",
    "updated_at": "2019-03-04T18:40:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @jbrockmendel "
  }
]
