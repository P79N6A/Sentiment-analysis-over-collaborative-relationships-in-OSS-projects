[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24816160",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-24816160",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 24816160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODE2MTYw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T14:55:12Z",
    "updated_at": "2013-09-20T14:55:12Z",
    "author_association": "MEMBER",
    "body": "What you've got there doesn't make a whole lot of sense (maybe you're doing something that does and this is just an example):\n\n``` python\ndf = DataFrame({'a': [1, 1, 2, 2, 3, 3]})\nm = df.a.mean()\ndf.eval('m') == m\npd.eval('m') == m\n```\n\nso just evaluate it in Python.\n\nNo new features will be added to `eval`, `query` for the next release (0.13) and possibly even 0.14\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24816826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-24816826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 24816826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODE2ODI2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T15:04:24Z",
    "updated_at": "2013-09-20T15:05:36Z",
    "author_association": "MEMBER",
    "body": "Slightly OT: @glaucouri Just in case that error message is a bit cryptic: A \"Call\" node is a node in the _abstract syntax tree_ created by parsing Python source. [Here](http://docs.python.org/2/reference/expressions.html#calls) is the language reference on callable objects.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24818853",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-24818853",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 24818853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODE4ODUz",
    "user": {
      "login": "glaucouri",
      "id": 3242660,
      "node_id": "MDQ6VXNlcjMyNDI2NjA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/3242660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glaucouri",
      "html_url": "https://github.com/glaucouri",
      "followers_url": "https://api.github.com/users/glaucouri/followers",
      "following_url": "https://api.github.com/users/glaucouri/following{/other_user}",
      "gists_url": "https://api.github.com/users/glaucouri/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glaucouri/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glaucouri/subscriptions",
      "organizations_url": "https://api.github.com/users/glaucouri/orgs",
      "repos_url": "https://api.github.com/users/glaucouri/repos",
      "events_url": "https://api.github.com/users/glaucouri/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glaucouri/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T15:32:12Z",
    "updated_at": "2013-09-20T15:32:12Z",
    "author_association": "NONE",
    "body": "What i'm trying to explain (with my poor english) is that in an eval environment if [a] is a P.Series i expect that i can use a this syntax : ( this is my working program, that users can use for do personalized equations)\n\nsafe_env = dict( [(k,df[k]) for k in df.keys() ])\nsafe_env # some other injections  from numpy\nval = eval(equation,safe_env)\n#now val is the result of the equation, so with a little of broadcasting i can insert it in the df\n\nActually, with this solution users can do filtering, grouping and equation in a DataFrame environment.\n\nThank's\nGla\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24819115",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-24819115",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 24819115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODE5MTE1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-20T15:36:00Z",
    "updated_at": "2013-09-20T15:36:07Z",
    "author_association": "MEMBER",
    "body": "@glaucouri What you've just described is essentially what happens under the hood in `DataFrame.query()`/`DataFrame.eval()`. Currently, you cannot call functions with either of those methods. Does that make sense?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35840913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-35840913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 35840913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQwOTEz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-23T19:45:21Z",
    "updated_at": "2014-02-23T19:45:21Z",
    "author_association": "MEMBER",
    "body": "Closing as stale ... not really a demand for this right now \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49765516",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-49765516",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 49765516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzY1NTE2",
    "user": {
      "login": "havoc-io",
      "id": 1358139,
      "node_id": "MDQ6VXNlcjEzNTgxMzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1358139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/havoc-io",
      "html_url": "https://github.com/havoc-io",
      "followers_url": "https://api.github.com/users/havoc-io/followers",
      "following_url": "https://api.github.com/users/havoc-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/havoc-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/havoc-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/havoc-io/subscriptions",
      "organizations_url": "https://api.github.com/users/havoc-io/orgs",
      "repos_url": "https://api.github.com/users/havoc-io/repos",
      "events_url": "https://api.github.com/users/havoc-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/havoc-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T16:43:06Z",
    "updated_at": "2014-07-22T16:43:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Out of curiosity, would a (well-written) pull request adding support for the numexpr intrinsic functions be accepted?  I've noticed that there is a variable defined in the expression parser called `_numexpr_supported_calls`, which seems to enumerate these functions, but this variable doesn't seem to be used anywhere.  Stuff like `abs` or some of the transcendental functions might be quite useful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49766688",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-49766688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 49766688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzY2Njg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T16:51:46Z",
    "updated_at": "2014-07-22T16:51:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "we always accept a well-written PR (even some not so well-written!) :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49768659",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-49768659",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 49768659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzY4NjU5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T17:05:37Z",
    "updated_at": "2014-07-22T17:39:11Z",
    "author_association": "MEMBER",
    "body": "@havoc-io Yes, a PR would be great! To get started (if you haven't already) take a look in `pandas/computation/expr.py`. This is where the parsing logic is implemented. You'd need to allow `Call` nodes by removing them from the set exclusion happening in the decorator.\n\nHere's an example of what a `Call` node looks like for the code `f(a, b, c=1)`:\n\n``` python\nimport ast\nfrom ast import *  # forgive the star import here\nnode = ast.parse('f(a, b, c=1)', mode='eval').body\nnode.func == Name(id='f', ctx=Load())\nnode.args == [Name(id='a', ctx=Load()), Name(id='b', ctx=Load())]\nnode.keywords == [keyword(arg='c', value=Num(n=1))]\n```\n\nYou could probably skip implementing keyword arguments for now and just implement unary or binary functions to get a feel for how difficult (or not) it would be to do this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49777296",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-49777296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 49777296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Nzc3Mjk2",
    "user": {
      "login": "havoc-io",
      "id": 1358139,
      "node_id": "MDQ6VXNlcjEzNTgxMzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1358139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/havoc-io",
      "html_url": "https://github.com/havoc-io",
      "followers_url": "https://api.github.com/users/havoc-io/followers",
      "following_url": "https://api.github.com/users/havoc-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/havoc-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/havoc-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/havoc-io/subscriptions",
      "organizations_url": "https://api.github.com/users/havoc-io/orgs",
      "repos_url": "https://api.github.com/users/havoc-io/repos",
      "events_url": "https://api.github.com/users/havoc-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/havoc-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T18:05:43Z",
    "updated_at": "2014-07-22T18:05:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Eish, this may be a bit complicated actually, given the conditional handling of `Call` nodes (not to mention their subnodes).  It might bloat the parsing code quite a bit, maybe more than it's worth.  Perhaps simply transforming `Series` objects before `eval`ing is going to be easier for now for my use case.\n\nIt may also not be as well-defined as I initially imagined.  E.g., would you want the behavior for only the 'numexpr' engine or the 'python' engine as well (with appropriate replacement functions from math or NumPy)?  I'm also not sure what the behavior should be if `local_dict` overrides one of the intrinsics - I'd have to see what numexpr does in this case.\n\nMaybe best to leave this issue dead for now :(.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49778156",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-49778156",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 49778156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Nzc4MTU2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T18:11:30Z",
    "updated_at": "2014-07-22T18:11:30Z",
    "author_association": "MEMBER",
    "body": "@havoc-io There are quite a few details to be worked out here, which is part of the reason I didn't implement these right away.\n\nIt _would_ be nice to have the `python` engine for testing and speed comparisons, but you could also just test using regular `numpy` based, toplevel python code. Maybe see how hard it would be to do the simplest thing.\n- only `numexpr` for now\n- add the funcs to the global namespace (just for validation) ... this may require some kind of custom \"delayed\" call node that doesn't do anything because you don't want to actually evaluate it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/49778607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/4893#issuecomment-49778607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4893",
    "id": 49778607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5Nzc4NjA3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-22T18:14:39Z",
    "updated_at": "2014-07-22T18:14:39Z",
    "author_association": "MEMBER",
    "body": "I believe numexpr overrides intrinsics so a variable called sin wouldn't work. \n"
  }
]
