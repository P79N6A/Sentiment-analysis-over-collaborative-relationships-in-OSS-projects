[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367144822",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19801#issuecomment-367144822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19801",
    "id": 367144822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE0NDgyMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T22:35:13Z",
    "updated_at": "2018-02-20T22:35:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you give an example? You're already allowed to add arbitrary attributes to a DataFrame, so you could add a dict and put stuff in there."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367168352",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19801#issuecomment-367168352",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19801",
    "id": 367168352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE2ODM1Mg==",
    "user": {
      "login": "lijose",
      "id": 33356321,
      "node_id": "MDQ6VXNlcjMzMzU2MzIx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/33356321?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lijose",
      "html_url": "https://github.com/lijose",
      "followers_url": "https://api.github.com/users/lijose/followers",
      "following_url": "https://api.github.com/users/lijose/following{/other_user}",
      "gists_url": "https://api.github.com/users/lijose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lijose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lijose/subscriptions",
      "organizations_url": "https://api.github.com/users/lijose/orgs",
      "repos_url": "https://api.github.com/users/lijose/repos",
      "events_url": "https://api.github.com/users/lijose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lijose/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T00:17:27Z",
    "updated_at": "2018-02-21T00:17:27Z",
    "author_association": "NONE",
    "body": "This is a sample scenario which comes common in SCD (Slowly Changing Dimension). There are work around for it, but it would be better if there was some temporary variable. \r\n\r\n**Scenario:** \r\n1) Select a list of columns from source data frame  \r\n\tnatural_keys = [col1, col2, ...]\r\n2) Apply MD5 function after merging all columns as string and add to **temp** column the source dataframe (source_df.cdc)\r\n3) Select same set of columns from target data frame \r\n4) Apply MD5 function after merging all columns as string  and add to **temp** column  the target dataframe (target_df.cdc)\r\n5) Compare the cdc column between source and target data frame and set a **temp** column to specify flag\r\n\tlike  values matching    : 'NC'( No change )\r\n\t\t  value not matching : 'U'  (update)\r\n\t\t  value matching    :   'NA' (Ignore)\r\n\t\t  target.cdc is null : 'I'  (Insert)\r\n\t\t  \r\nIn above scenario step 2, 4 and 5 needs to have a temp variable and no point in saving  its value in hard disk.\r\n\r\nI hope it clears everything.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367171170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19801#issuecomment-367171170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19801",
    "id": 367171170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE3MTE3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T00:31:36Z",
    "updated_at": "2018-02-21T00:31:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Personally this sounds like a complication to pandas data model, with little gain. We’d then have to define how these are handled in operations, expose them in the UI, ... doesn’t seem worthwhile when the alternative is to drop before writing.\n\nCurious to hear what others think.\n\n________________________________\nFrom: Lijo Jose <notifications@github.com>\nSent: Tuesday, February 20, 2018 6:17:33 PM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Comment\nSubject: Re: [pandas-dev/pandas] Suggestion: Temporary Variable in Pandas Data Frame (#19801)\n\n\nThis is a sample scenario which comes common in SCD (Slowly Changing Dimension). There are work around for it, but it would be better if there was some temporary variable.\n\nScenario:\n\n  1.  Select a list of columns from source data frame\nnatural_keys = [col1, col2, ...]\n  2.  Apply MD5 function after merging all columns as string and add to temp column the source dataframe (source_df.cdc)\n  3.  Select same set of columns from target data frame\n  4.  Apply MD5 function after merging all columns as string and add to temp column the target dataframe (target_df.cdc)\n  5.  Compare the cdc column between source and target data frame and set a temp column to specify flag\nlike values matching : 'NC'( No change )\nvalue not matching : 'U' (update)\nvalue matching : 'NA' (Ignore)\ntarget.cdc is null : 'I' (Insert)\n\nIn above scenario step 2, 4 and 5 needs to have a temp variable and no point in saving its value in hard disk.\n\nI hope it clears everything.\n\n—\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/issues/19801#issuecomment-367168352>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHIo86q6M1Ea1jbD86StqJUWZlkr_Iks5tW2CdgaJpZM4SMuz9>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/367186292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19801#issuecomment-367186292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19801",
    "id": 367186292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzE4NjI5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T01:47:53Z",
    "updated_at": "2018-02-21T01:47:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "All of the above operations are easily accomplished by writing idiomatic code\r\nno special facilities are needed. if you have a specific example please show it."
  }
]
