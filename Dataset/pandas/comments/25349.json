[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464453576",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25349#issuecomment-464453576",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25349",
    "id": 464453576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDQ1MzU3Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-17T12:54:54Z",
    "updated_at": "2019-02-17T12:54:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "It's hard to say without a [minimal example](http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports), but it appears that you're getting confused by the alignment. See http://pandas-docs.github.io/pandas-docs-travis/reference/api/pandas.concat.html?highlight=concat#pandas.concat\r\n\r\nSpecifically, the `ignore_index_parameter`\r\n\r\n> Note the index values on the other axes are still respected in the join.\r\n\r\n\r\nSince you're using `axis=1`,\r\n\r\n1. the column labels will be reset to `[0, n)`\r\n2. the row labels will be preserved (and aligned).\r\n\r\nIf you really don't care about your row labels, then you'll want to drop the row labels before concating `pd.concat([df1.reset_index(drop=True), df2.reset_index(drop=True)], ...)`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464466973",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25349#issuecomment-464466973",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25349",
    "id": 464466973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDQ2Njk3Mw==",
    "user": {
      "login": "Mark531",
      "id": 17707763,
      "node_id": "MDQ6VXNlcjE3NzA3NzYz",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17707763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mark531",
      "html_url": "https://github.com/Mark531",
      "followers_url": "https://api.github.com/users/Mark531/followers",
      "following_url": "https://api.github.com/users/Mark531/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mark531/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mark531/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mark531/subscriptions",
      "organizations_url": "https://api.github.com/users/Mark531/orgs",
      "repos_url": "https://api.github.com/users/Mark531/repos",
      "events_url": "https://api.github.com/users/Mark531/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mark531/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-17T14:57:04Z",
    "updated_at": "2019-02-17T14:57:04Z",
    "author_association": "NONE",
    "body": "Ok, I didn't get that ignore_index_parameter was referring to the concatenation axis index. But I don't understand its utility in that case. The most classic use case happening in data preparation is adding to a dataframe the columns of another dataframe (given that they have of course the same number of rows), whatever their row indices. I regret that ignore_index_parameter would not allow that."
  }
]
