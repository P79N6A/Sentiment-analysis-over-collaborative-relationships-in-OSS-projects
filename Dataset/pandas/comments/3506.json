[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17304799",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17304799",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17304799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA0Nzk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T20:34:22Z",
    "updated_at": "2013-05-01T20:34:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is by design. is there a reason that this is a problem?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17306748",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17306748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17306748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA2NzQ4",
    "user": {
      "login": "mamikonyan",
      "id": 4315091,
      "node_id": "MDQ6VXNlcjQzMTUwOTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4315091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mamikonyan",
      "html_url": "https://github.com/mamikonyan",
      "followers_url": "https://api.github.com/users/mamikonyan/followers",
      "following_url": "https://api.github.com/users/mamikonyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mamikonyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mamikonyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mamikonyan/subscriptions",
      "organizations_url": "https://api.github.com/users/mamikonyan/orgs",
      "repos_url": "https://api.github.com/users/mamikonyan/repos",
      "events_url": "https://api.github.com/users/mamikonyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mamikonyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T21:11:14Z",
    "updated_at": "2013-05-01T21:11:14Z",
    "author_association": "NONE",
    "body": "Oh, I see. It's a problem because we'd like to use 64-bit unsigned integers for the index. Also, I would expect the Index ctor to raise an exception when the user explicitly specifies the 'uint64' dtype. Instead:\n\nIn [5]: pandas.Index(np.array([2**64-1]), 'u8')\nOut[5]: Int64Index([18446744073709551615], dtype=uint64)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17307007",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17307007",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17307007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA3MDA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T21:15:58Z",
    "updated_at": "2013-05-01T21:15:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is actually tricky, because there are a _VERY FEW_ times when we actually need to use a different dtype in Int64Index (well 1, its on a 32-bit platform there is a certain time we need to allow int32's in the actual index), but otherwise it is by defintion ALWAYS int64's. And Index will convert integer indicies to Int64Indexes. There is cython code that is type specific, so can't have many types here (and also even raising an exception is somewhat tricky)\n\nI don't think there is a reason to EVER specify explicty a dtype for the index. What are you trying to do?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17308424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17308424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17308424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA4NDI0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T21:42:04Z",
    "updated_at": "2013-05-01T21:42:14Z",
    "author_association": "MEMBER",
    "body": "I agree with jreback. I don't think I've ever set the dtype of an integer index, nor would I ever want to care about doing so. I suppose for gigantic arrays conversion from uint to int might be a problem.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17308581",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17308581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17308581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzA4NTgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T21:45:21Z",
    "updated_at": "2013-05-01T21:45:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "if u really want to set an uint64 put it in a column (or use a float)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17311988",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17311988",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17311988,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzExOTg4",
    "user": {
      "login": "mamikonyan",
      "id": 4315091,
      "node_id": "MDQ6VXNlcjQzMTUwOTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4315091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mamikonyan",
      "html_url": "https://github.com/mamikonyan",
      "followers_url": "https://api.github.com/users/mamikonyan/followers",
      "following_url": "https://api.github.com/users/mamikonyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mamikonyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mamikonyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mamikonyan/subscriptions",
      "organizations_url": "https://api.github.com/users/mamikonyan/orgs",
      "repos_url": "https://api.github.com/users/mamikonyan/repos",
      "events_url": "https://api.github.com/users/mamikonyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mamikonyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T23:07:46Z",
    "updated_at": "2013-05-01T23:07:46Z",
    "author_association": "NONE",
    "body": "Well, first of all, you can't jam a 64-bit integer into a (64-bit) float. Secondly, if indices  are always int64, then what's the point of the dtype ctor parameter? In general, I don't quite understand why the 64-bit signed integer is so much more legitimate index type than the 64-bit unsigned integer. Shouldn't this be left up to the user? If the design prohibits this, then why offer the choice in the Index constructor?\n\nIn [5]: pandas.Index(np.array([2**64-1]), 'u8')\nOut[5]: Int64Index([18446744073709551615], dtype=uint64)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17313381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17313381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17313381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzEzMzgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T23:49:34Z",
    "updated_at": "2013-05-01T23:49:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "The dtype argument is mainly for internal use, the externally visible dtype creatable indices are object and int64 (and as I said int32 only very occasionally), all of the underlying support code only deals with these types. The reason for int64 over say uint64 (even though was decided quite a long time ago) is mainly to allow a sentinel value (e.g. -1 to indiciate missing values, again internally), this is to work around numpy. uint64 doesn't gain you anything and you lose this ability.\n\nstill curious _why_ you could actually need a uint64 value _in an index_?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17313602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17313602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17313602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzEzNjAy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T23:55:45Z",
    "updated_at": "2013-05-01T23:55:45Z",
    "author_association": "MEMBER",
    "body": "@mamikony Where did floats come in? Their support is marginal in pandas, but that's a different issue and probably has its reasons as well and might just take a little bit of careful coding to enhance. Also, pandas takes a very practical approach to most things and sometimes that shows up. Of course there's no _reason_ you couldn't have a `uint64` index, in fact you can have anything you want in an index. Now I too am very curious what your use case is...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17313735",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17313735",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17313735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzEzNzM1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-01T23:59:43Z",
    "updated_at": "2013-05-01T23:59:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud I mentioned floats (e.g. if you actually wanted to have these uint64 values then you could just put them in a column. floats was my bad, I meant a _value_, not the index)\n\n```\n>>> np.iinfo(np.int64).max\n9223372036854775807\n>>> np.iinfo(np.uint64).max\n18446744073709551615L\n>>> np.finfo(np.float64).max\n1.7976931348623157e+308\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17313795",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17313795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17313795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzEzNzk1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-02T00:01:45Z",
    "updated_at": "2013-05-02T00:01:45Z",
    "author_association": "MEMBER",
    "body": "@mamikony @jreback My bad.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17316587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17316587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17316587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzE2NTg3",
    "user": {
      "login": "mamikonyan",
      "id": 4315091,
      "node_id": "MDQ6VXNlcjQzMTUwOTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4315091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mamikonyan",
      "html_url": "https://github.com/mamikonyan",
      "followers_url": "https://api.github.com/users/mamikonyan/followers",
      "following_url": "https://api.github.com/users/mamikonyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mamikonyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mamikonyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mamikonyan/subscriptions",
      "organizations_url": "https://api.github.com/users/mamikonyan/orgs",
      "repos_url": "https://api.github.com/users/mamikonyan/repos",
      "events_url": "https://api.github.com/users/mamikonyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mamikonyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-02T01:39:59Z",
    "updated_at": "2013-05-02T01:39:59Z",
    "author_association": "NONE",
    "body": "Sure. I understand about the sentinel value. My suspicion was that the extra bit is getting used in a way like this. As far as a use case, I'm processing financial data, and I use a synthetic (uint64) id to identify transactions. It's elegant and useful to use this id as the index for various data frames that you can later join using Pandas' default rules. But you're right, of course, in that I can be more explicit in the join operations.\n\nI don't really know anything about Pandas' internals, but it's not clear to me why there needs to be a reserved value in the index for specifying missing values. Isn't this usually done in the columns themselves, not the index?\n\nThanks for your comments, by the way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17317428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17317428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17317428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzE3NDI4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-02T02:16:34Z",
    "updated_at": "2013-05-02T02:16:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "makes sense\n\nwe use a similar sentinel value (but its the min neg int64) to represent NaT in datetime64[ns]\n\nindices normally don't have missing values (though they can, imagine doing a set_index when u have missing values), however it's convenient to use a sentinel value is operating on indices (eg when masking) that is the same dtype ( eg int), and not a valid value of the index; -1 is natural as its not a valid index (neg indices are a different, and allowed but only as use input - another topic)\n\nI believe u could use an object index that has a uint64\nthough u will get better perf from an int64 index\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17358346",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17358346",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17358346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzU4MzQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-02T19:13:26Z",
    "updated_at": "2013-05-02T19:13:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "going to close this unless you have any more questions?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17358772",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3506#issuecomment-17358772",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3506",
    "id": 17358772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzU4Nzcy",
    "user": {
      "login": "mamikonyan",
      "id": 4315091,
      "node_id": "MDQ6VXNlcjQzMTUwOTE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4315091?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mamikonyan",
      "html_url": "https://github.com/mamikonyan",
      "followers_url": "https://api.github.com/users/mamikonyan/followers",
      "following_url": "https://api.github.com/users/mamikonyan/following{/other_user}",
      "gists_url": "https://api.github.com/users/mamikonyan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mamikonyan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mamikonyan/subscriptions",
      "organizations_url": "https://api.github.com/users/mamikonyan/orgs",
      "repos_url": "https://api.github.com/users/mamikonyan/repos",
      "events_url": "https://api.github.com/users/mamikonyan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mamikonyan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-02T19:20:44Z",
    "updated_at": "2013-05-02T19:20:44Z",
    "author_association": "NONE",
    "body": "thanks\n"
  }
]
