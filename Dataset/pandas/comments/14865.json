[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266405462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-266405462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 266405462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjQwNTQ2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-12T11:28:50Z",
    "updated_at": "2016-12-12T11:30:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is raising on a validation check and hitting positional indexing, rather than label indexing: \r\n\r\n```\r\nIn [12]: s.index.holds_integer()\r\nOut[12]: True\r\n\r\nIn [13]: s.index.is_categorical()\r\nOut[13]: False\r\n\r\nIn [14]: s.index.is_integer()\r\nOut[14]: True\r\n\r\nIn [15]: s.index.holds_integer()\r\nOut[15]: True\r\n\r\nIn [16]: s2.index.is_categorical()\r\nOut[16]: True\r\n\r\nIn [17]: s2.index.holds_integer()\r\nOut[17]: False\r\n\r\n```\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/master/pandas/indexes/base.py#L1128\r\n```\r\n    def holds_integer(self):\r\n        return self.inferred_type in ['integer', 'mixed-integer']\r\n```\r\n\r\nsomething like might work (though might cause other things to break)\r\nIn pandas/indexes/category.py override to \r\n```\r\n    def holds_integer(self):\r\n        return self.categories.holds_integer()\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/266506383",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-266506383",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 266506383,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjUwNjM4Mw==",
    "user": {
      "login": "alex-filatov",
      "id": 4473791,
      "node_id": "MDQ6VXNlcjQ0NzM3OTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4473791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-filatov",
      "html_url": "https://github.com/alex-filatov",
      "followers_url": "https://api.github.com/users/alex-filatov/followers",
      "following_url": "https://api.github.com/users/alex-filatov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-filatov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-filatov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-filatov/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-filatov/orgs",
      "repos_url": "https://api.github.com/users/alex-filatov/repos",
      "events_url": "https://api.github.com/users/alex-filatov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-filatov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-12T18:12:18Z",
    "updated_at": "2016-12-12T18:12:18Z",
    "author_association": "NONE",
    "body": "I was mistaken regarding positional indexing. It seems that category codes are used as the index:\r\n\r\n```python\r\n>>> s3 = pd.Series(['a', 'b', 'c'], index=pd.Series([3, 1, 2], dtype='category'))\r\n>>> s3.get(3) is None\r\nTrue\r\n>>> s3.get(0)\r\n'b'\r\n>>> s3.get(1)\r\n'c'\r\n>>> s3.get(2)\r\n'a'\r\n>>> s3.index.codes\r\narray([2, 0, 1], dtype=int8)\r\n```\r\n\r\nTried to override `holds_integer` as advised - didn't resolve the issue. Not sure the method is invoked in this case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337689048",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337689048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337689048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY4OTA0OA==",
    "user": {
      "login": "elsander",
      "id": 11319980,
      "node_id": "MDQ6VXNlcjExMzE5OTgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11319980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elsander",
      "html_url": "https://github.com/elsander",
      "followers_url": "https://api.github.com/users/elsander/followers",
      "following_url": "https://api.github.com/users/elsander/following{/other_user}",
      "gists_url": "https://api.github.com/users/elsander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elsander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elsander/subscriptions",
      "organizations_url": "https://api.github.com/users/elsander/orgs",
      "repos_url": "https://api.github.com/users/elsander/repos",
      "events_url": "https://api.github.com/users/elsander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elsander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T18:41:56Z",
    "updated_at": "2017-10-18T18:41:56Z",
    "author_association": "NONE",
    "body": "I was looking for a first issue-- I can take a look at this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337693767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337693767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337693767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY5Mzc2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T18:58:14Z",
    "updated_at": "2017-10-18T18:58:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool, thanks. If making that change to `indexes/category.py` *does* end up breaking other things, then this could turn out to be difficult."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337720752",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337720752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337720752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzcyMDc1Mg==",
    "user": {
      "login": "elsander",
      "id": 11319980,
      "node_id": "MDQ6VXNlcjExMzE5OTgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11319980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elsander",
      "html_url": "https://github.com/elsander",
      "followers_url": "https://api.github.com/users/elsander/followers",
      "following_url": "https://api.github.com/users/elsander/following{/other_user}",
      "gists_url": "https://api.github.com/users/elsander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elsander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elsander/subscriptions",
      "organizations_url": "https://api.github.com/users/elsander/orgs",
      "repos_url": "https://api.github.com/users/elsander/repos",
      "events_url": "https://api.github.com/users/elsander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elsander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T20:38:47Z",
    "updated_at": "2017-10-18T20:39:20Z",
    "author_association": "NONE",
    "body": "I've been playing around with this to understand the behavior, and the category codes can be used as the index for non-numeric categorical columns as well:\r\n\r\n```\r\nIn [35]: s4 = pd.Series(['a', 'b', 'c'], index=pd.Series(['hello', 'there', 'world'], dtype='category\r\n    ...: '))\r\n\r\nIn [36]: s4.get(2)\r\nOut[36]: 'c'\r\n```\r\n\r\nThis makes me wonder whether this is a bug at all-- should the category codes just be the default here? The behavior is different than you might expect at first, but it is consistent. I'm going to look for a fix to see if we can default to using the category over the category code, but if it breaks other things, it might make sense to document the behavior rather than changing it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337722147",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337722147",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337722147,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzcyMjE0Nw==",
    "user": {
      "login": "elsander",
      "id": 11319980,
      "node_id": "MDQ6VXNlcjExMzE5OTgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11319980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elsander",
      "html_url": "https://github.com/elsander",
      "followers_url": "https://api.github.com/users/elsander/followers",
      "following_url": "https://api.github.com/users/elsander/following{/other_user}",
      "gists_url": "https://api.github.com/users/elsander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elsander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elsander/subscriptions",
      "organizations_url": "https://api.github.com/users/elsander/orgs",
      "repos_url": "https://api.github.com/users/elsander/repos",
      "events_url": "https://api.github.com/users/elsander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elsander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T20:44:13Z",
    "updated_at": "2017-10-18T20:44:13Z",
    "author_association": "NONE",
    "body": "Also, I get different behavior from @alex-filatov here. \r\n\r\n```\r\nIn [59]: s3 = pd.Series(['a', 'b', 'c'], index=pd.Series([3, 1, 2], dtype='category'))\r\n\r\nIn [60]: s3.get(3)\r\nOut[60]: 'a' # not None!\r\n\r\nIn [61]: s3.get(2)\r\nOut[61]: 'c'\r\n\r\nIn [62]: s3.get(1)\r\nOut[62]: 'b'\r\n\r\nIn [63]: s3.get(0)\r\nOut[63]: 'b'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337730027",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337730027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337730027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzczMDAyNw==",
    "user": {
      "login": "elsander",
      "id": 11319980,
      "node_id": "MDQ6VXNlcjExMzE5OTgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11319980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elsander",
      "html_url": "https://github.com/elsander",
      "followers_url": "https://api.github.com/users/elsander/followers",
      "following_url": "https://api.github.com/users/elsander/following{/other_user}",
      "gists_url": "https://api.github.com/users/elsander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elsander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elsander/subscriptions",
      "organizations_url": "https://api.github.com/users/elsander/orgs",
      "repos_url": "https://api.github.com/users/elsander/repos",
      "events_url": "https://api.github.com/users/elsander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elsander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T21:15:26Z",
    "updated_at": "2017-10-18T21:15:26Z",
    "author_association": "NONE",
    "body": "Maybe there's been a version release where this got fixed? I can't replicate the behavior."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337731062",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337731062",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337731062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzczMTA2Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T21:19:30Z",
    "updated_at": "2017-10-18T21:19:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "For you first example, `s4.get(2)`, that's correctly falling back to positional indexing (I think). There's only ambiguity when the categories are themselves integers, so there shouldn't be any positional indexing fallback (again, I could be wrong here).\r\n\r\nFor your second example, yes I'm seeing that too. And I think that's the correct behavior.\r\n\r\nTo summarize, I think the correct behavior is that:\r\n\r\n1. indexing into a CategoricalIndex should always use the `categories`, not the codes\r\n2. whether or not a CategoricalIndex falls back to positional indexing should depend on whether the categories or integers.\r\n\r\nOr, to put it another way these two should be identical w.r.t. indexing:\r\n\r\n```python\r\nIn [43]: s = pd.Series(['a', 'b', 'c'], index=pd.CategoricalIndex([1, 2, 3]))\r\n\r\nIn [44]: s2 = pd.Series(s.values, s.index.get_values())\r\n\r\nIn [45]: s.get(0)\r\nOut[45]: 'a'\r\n\r\nIn [46]: s2.get(0)\r\n```\r\n\r\nThe difference is that a Categoricalndex with integer categories falls back to positional indexing when it shouldn't."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337732865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337732865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337732865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzczMjg2NQ==",
    "user": {
      "login": "elsander",
      "id": 11319980,
      "node_id": "MDQ6VXNlcjExMzE5OTgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11319980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elsander",
      "html_url": "https://github.com/elsander",
      "followers_url": "https://api.github.com/users/elsander/followers",
      "following_url": "https://api.github.com/users/elsander/following{/other_user}",
      "gists_url": "https://api.github.com/users/elsander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elsander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elsander/subscriptions",
      "organizations_url": "https://api.github.com/users/elsander/orgs",
      "repos_url": "https://api.github.com/users/elsander/repos",
      "events_url": "https://api.github.com/users/elsander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elsander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T21:26:48Z",
    "updated_at": "2017-10-18T21:30:51Z",
    "author_association": "NONE",
    "body": "[Edit: changing this comment, now that I think I understand better]\r\n\r\nSo, if I understand correctly, the changes to be made are:\r\n- CategoricalIndex should no longer use the category codes for indexing\r\n- If the categories are integers, we should not fall back to anything. Otherwise, fall back to positional indexing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337734284",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337734284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337734284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzczNDI4NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T21:32:21Z",
    "updated_at": "2017-10-18T21:32:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that's correct (though @jreback will know better). This should also fix this error, which I think is a bug:\r\n\r\n```python\r\n\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: s = pd.Series(['a', 'b', 'c'], index=pd.CategoricalIndex([1, 2, 3]))\r\n\r\nIn [3]: s\r\nOut[3]:\r\n1    a\r\n2    b\r\n3    c\r\ndtype: object\r\n\r\nIn [4]: s.loc[1]\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-4-609ae8a0f3fe> in <module>()\r\n----> 1 s.loc[1]\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/indexing.py in __getitem__(self, key)\r\n   1371\r\n   1372             maybe_callable = com._apply_if_callable(key, self.obj)\r\n-> 1373             return self._getitem_axis(maybe_callable, axis=axis)\r\n   1374\r\n   1375     def _is_scalar_access(self, key):\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/indexing.py in _getitem_axis(self, key, axis)\r\n   1624\r\n   1625         # fall thru to straight lookup\r\n-> 1626         self._has_valid_type(key, axis)\r\n   1627         return self._get_label(key, axis=axis)\r\n   1628\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/indexing.py in _has_valid_type(self, key, axis)\r\n   1502\r\n   1503             try:\r\n-> 1504                 key = self._convert_scalar_indexer(key, axis)\r\n   1505                 if not ax.contains(key):\r\n   1506                     error()\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/indexing.py in _convert_scalar_indexer(self, key, axis)\r\n    254         ax = self.obj._get_axis(min(axis, self.ndim - 1))\r\n    255         # a scalar\r\n--> 256         return ax._convert_scalar_indexer(key, kind=self.name)\r\n    257\r\n    258     def _convert_slice_indexer(self, key, axis):\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/indexes/category.py in _convert_scalar_indexer(self, key, kind)\r\n    573\r\n    574         return super(CategoricalIndex, self)._convert_scalar_indexer(\r\n--> 575             key, kind=kind)\r\n    576\r\n    577     @Appender(_index_shared_docs['_convert_list_indexer'])\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/indexes/base.py in _convert_scalar_indexer(self, key, kind)\r\n   1391             elif kind in ['loc'] and is_integer(key):\r\n   1392                 if not self.holds_integer():\r\n-> 1393                     return self._invalid_indexer('label', key)\r\n   1394\r\n   1395         return key\r\n\r\n~/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/core/indexes/base.py in _invalid_indexer(self, form, key)\r\n   1575                         \"indexers [{key}] of {kind}\".format(\r\n   1576                             form=form, klass=type(self), key=key,\r\n-> 1577                             kind=type(key)))\r\n   1578\r\n   1579     def get_duplicates(self):\r\n\r\nTypeError: cannot do label indexing on <class 'pandas.core.indexes.category.CategoricalIndex'> with these indexers [1] of <class 'int'>\r\n```\r\n\r\nThat should return `'a'`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337734684",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337734684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337734684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzczNDY4NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T21:34:04Z",
    "updated_at": "2017-10-18T21:34:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/pandas-dev/pandas/issues/17569 for that second bug, if it's actually a bug. Posting a comment there."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337736335",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337736335",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337736335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzczNjMzNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T21:41:01Z",
    "updated_at": "2017-10-18T21:41:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, just posting here, since there are other related issues: (https://github.com/pandas-dev/pandas/issues/15470). Sorry you've walked into a bit of a minefield @elsander, but this will be a good issue to learn on :)\r\n\r\nHow about this: For a CategoricalIndex with integer categories, the behavior or `__getitem__`, `.loc`, and `iloc` should be identical to a regular Integer index. In particular, no fallback to positional indexing. Then we have the simple rule that for two series `x` and `y` where\r\n\r\n```python\r\n# x has a CategoricalIndex with integer categories\r\ny = x.copy()\r\ny.index = x.index.get_values()\r\n```\r\n\r\nall indexing is identical. Hopefully that doesn't break anything.\r\n\r\ncc @jorisvandenbossche thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337737478",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337737478",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337737478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzczNzQ3OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T21:45:42Z",
    "updated_at": "2017-10-18T21:45:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@elsander if that summary is correct, the fix @jreback suggested up above of overriding `holds_integer` in `pandas/core/indexes/category.py` *should* work. Then we'll want tests that check\r\n\r\n- `CategoricalIndex.holds_category` for integer / non-integer `categories`\r\n- Tests that exercise the simple rule above for\r\n    * loc\r\n    * iloc\r\n    * at\r\n    * iat\r\n    * get\r\nand for indexers that are in the Index and not in the Index"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337751944",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337751944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337751944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzc1MTk0NA==",
    "user": {
      "login": "elsander",
      "id": 11319980,
      "node_id": "MDQ6VXNlcjExMzE5OTgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11319980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elsander",
      "html_url": "https://github.com/elsander",
      "followers_url": "https://api.github.com/users/elsander/followers",
      "following_url": "https://api.github.com/users/elsander/following{/other_user}",
      "gists_url": "https://api.github.com/users/elsander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elsander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elsander/subscriptions",
      "organizations_url": "https://api.github.com/users/elsander/orgs",
      "repos_url": "https://api.github.com/users/elsander/repos",
      "events_url": "https://api.github.com/users/elsander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elsander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T22:59:44Z",
    "updated_at": "2017-10-18T23:06:13Z",
    "author_association": "NONE",
    "body": "Okay, yeah, this is more complicated than I originally thought! Still happy to work on it as long as I know what the expected behavior is. I wrote the following tests to demonstrate the expected behavior:\r\n\r\n```\r\n    def test_fallback_to_positional(self):\r\n        # test that CategorialIndex falls back to positional\r\n        # indexing rather than category code indexing for\r\n        # non-numeric categories\r\n        s = pd.Series(['a', 'b', 'c'], index=pd.Series(\r\n            ['three', 'one', 'two'], dtype='category'))\r\n        assert s.get(0) == 'a'\r\n        assert s.get(1) == 'b'\r\n        assert s.get(2) == 'c'\r\n\r\n    def test_numeric_categorical_index(self):\r\n        # test that CategorialIndex uses categories and does\r\n        # not fall back to positional indexing when categories\r\n        # are numeric\r\n        s = pd.Series(['a', 'b', 'c'], index=pd.Series([3, 1, 2],\r\n                                                       dtype='category'))\r\n        assert s.get(0) is None\r\n        assert s.get(1) == 'b'\r\n        assert s.get(2) == 'c'\r\n        assert s.get(3) == 'a'\r\n```\r\n\r\nDoes this still match the behavior you expect? I can also add the tests that you suggest."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337767077",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337767077",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337767077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzc2NzA3Nw==",
    "user": {
      "login": "elsander",
      "id": 11319980,
      "node_id": "MDQ6VXNlcjExMzE5OTgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11319980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elsander",
      "html_url": "https://github.com/elsander",
      "followers_url": "https://api.github.com/users/elsander/followers",
      "following_url": "https://api.github.com/users/elsander/following{/other_user}",
      "gists_url": "https://api.github.com/users/elsander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elsander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elsander/subscriptions",
      "organizations_url": "https://api.github.com/users/elsander/orgs",
      "repos_url": "https://api.github.com/users/elsander/repos",
      "events_url": "https://api.github.com/users/elsander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elsander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T00:42:33Z",
    "updated_at": "2017-10-19T00:42:33Z",
    "author_association": "NONE",
    "body": "I get an `AttributeError` on `s.holds_category()`. Is that a method you wanted to have implemented? It doesn't look like it's a method in the base `Index` class either."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337770048",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337770048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337770048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzc3MDA0OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T01:04:47Z",
    "updated_at": "2017-10-19T01:04:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, I should have said holds_integer"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337830244",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337830244",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337830244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzgzMDI0NA==",
    "user": {
      "login": "alex-filatov",
      "id": 4473791,
      "node_id": "MDQ6VXNlcjQ0NzM3OTE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4473791?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alex-filatov",
      "html_url": "https://github.com/alex-filatov",
      "followers_url": "https://api.github.com/users/alex-filatov/followers",
      "following_url": "https://api.github.com/users/alex-filatov/following{/other_user}",
      "gists_url": "https://api.github.com/users/alex-filatov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alex-filatov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alex-filatov/subscriptions",
      "organizations_url": "https://api.github.com/users/alex-filatov/orgs",
      "repos_url": "https://api.github.com/users/alex-filatov/repos",
      "events_url": "https://api.github.com/users/alex-filatov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alex-filatov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T08:01:07Z",
    "updated_at": "2017-10-19T08:01:07Z",
    "author_association": "NONE",
    "body": "> Also, I get different behavior from @alex-filatov here.\r\n\r\n> Maybe there's been a version release where this got fixed? I can't replicate the behavior.\r\n\r\nI reported this issue with pandas 0.19.1, current version is 0.20.3 and it's indeed seems to be partially fixed, but still:\r\n\r\n```python\r\n>> s3 = pd.Series(['a', 'b', 'c'], index=pd.Series([3, 1, 2], dtype='category'))\r\n>> s3.get(1)\r\n'b'\r\n>> s3.get(0)\r\n'b'\r\n```\r\n\r\n> So, if I understand correctly, the changes to be made are:\r\n> \r\n> CategoricalIndex should no longer use the category codes for indexing\r\n> If the categories are integers, we should not fall back to anything. Otherwise, fall back to positional indexing.\r\n\r\nMakes sense to me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337836732",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337836732",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337836732,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzgzNjczMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T08:28:25Z",
    "updated_at": "2017-10-19T08:28:57Z",
    "author_association": "MEMBER",
    "body": "Let's keep the two issues discussed here separate: a) the fact that codes are used to index and b) whether categorical index with integers should fallback to positional or not.\r\n\r\na) **the fact that codes are used to index** is clearly a bug:\r\n\r\n```\r\nIn [116]: s = pd.Series([1, 2, 3, 4], index=pd.Categorical(['b', 'a', 'b', 'c']))\r\n\r\nIn [117]: s.index.codes\r\nOut[117]: array([1, 0, 1, 2], dtype=int8)\r\n\r\nIn [118]: s[0]\r\nOut[118]: 2    <---- since it is a string categorical index, s[0] should be positional \r\n                     (so like iloc below), but it somehow uses the codes\r\n\r\nIn [119]: s.iloc[0]\r\nOut[119]: 1\r\n```\r\n\r\nThis is a clear bug and can be fixed separately I think.\r\n\r\nb) **whether categorical index with integers should fallback to positional or not** is less clear to me. This is what is discussed in https://github.com/pandas-dev/pandas/issues/15470 (although not much discussion there ..). At the time, I argued [there](https://github.com/pandas-dev/pandas/issues/15470#issuecomment-281488245) that I think CategoricalIndex with numerical categories should not be regarded as a numerical index (in the sense: it should use integers for positional indexing in `__getitem__`, and not as labels)\r\n\r\nSo it comes back to: how do we see a CategoricalIndex with numerical categories? \r\nDo we see it as a numerical index? Then what @TomAugspurger says above (https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337736335) is correct and the behavior of `__getitem__`, `.loc`, and `iloc` should be identical to a regular Integer index (which also means: no fallback to positional indexing in `[]`/`__getitem_`)\r\nOr do we see it as a non-numerical index? (which is somehow supported in the sense that numerical operations like for integer index are not supported, but that's also not super convincing argument) In that case, integers in `[]`/`__getitem__` should rather be positional.\r\n\r\nBut in the end, `__getitem__` will always be confusing/dubious in those cases, and it is maybe more important to fix the use of `loc` with integer categories (https://github.com/pandas-dev/pandas/issues/17569) to at least allow the user to be more specific."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337882615",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337882615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337882615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzg4MjYxNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T11:43:43Z",
    "updated_at": "2017-10-19T11:43:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> how do we see a CategoricalIndex with numerical categories?\r\n\r\n@jorisvandenbossche where do you come down on this?\r\n\r\nI think the \"numericness\" of a CategoricalIndex should depend on the type of the categories, instead of always treating it as non-numeric like we are now.\r\n\r\nI don't like the type-specific behavior with respect to falling back to positional indexing, but that's where we are. And I think it's more consistent for the indexing behavior to depend on the type of the values here.\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/337924434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337924434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 337924434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzkyNDQzNA==",
    "user": {
      "login": "elsander",
      "id": 11319980,
      "node_id": "MDQ6VXNlcjExMzE5OTgw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/11319980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elsander",
      "html_url": "https://github.com/elsander",
      "followers_url": "https://api.github.com/users/elsander/followers",
      "following_url": "https://api.github.com/users/elsander/following{/other_user}",
      "gists_url": "https://api.github.com/users/elsander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elsander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elsander/subscriptions",
      "organizations_url": "https://api.github.com/users/elsander/orgs",
      "repos_url": "https://api.github.com/users/elsander/repos",
      "events_url": "https://api.github.com/users/elsander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elsander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T14:24:39Z",
    "updated_at": "2017-10-19T14:24:39Z",
    "author_association": "NONE",
    "body": "I'm still happy to work on this, but I'm going to hold off for now until there's a consensus on the expected behavior. As a user, I would find falling back to positional indexing for numeric CategoricalIndexes confusing (especially if the positional indices overlapped partially with the categories), but happy to implement it however the maintainers prefer."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338205883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-338205883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 338205883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODIwNTg4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T13:27:00Z",
    "updated_at": "2017-10-20T13:27:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually I find this a really easy issue from the API.\r\n\r\n- ``.get`` is de-facto ``.loc``, so all indexing should be label based.\r\n- ``.codes`` are completely irrelevant and simply an implementation detail (so this is the bug part)\r\n- we should by-definition (as we are using ``.loc``) never fall back or anything else again as its label based (with the labels being the categories)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338214649",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-338214649",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 338214649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODIxNDY0OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T13:58:53Z",
    "updated_at": "2017-10-20T13:58:53Z",
    "author_association": "MEMBER",
    "body": "> .get is de-facto .loc, so all indexing should be label based.\r\n\r\nNo, it is de-facto `__getitem__`/`[]`. I agree it *would be* logical to have it only label based (but that is not how it currently is). For another issue, but we could deprecate the positional behaviour of `get` (or have a keyword to ask for it explicitly) ?\r\n\r\n> we should by-definition (as we are using .loc) never fall back or anything else again as its label based (with the labels being the categories).\r\n\r\nAgain, this discussion is *not* about `loc[]`, it is about `[]`. As I said above, we can discuss that we rather want to use `.loc[]` for `get`, which would solve the problem for `get`, but we still need to decide what the behaviour of `[]` on a numerical categorical index should be.\r\n\r\n> >   how do we see a CategoricalIndex with numerical categories?\r\n>\r\n> @jorisvandenbossche where do you come down on this?\r\n>\r\n> I think the \"numericness\" of a CategoricalIndex should depend on the type of the categories, instead of always treating it as non-numeric like we are now.\r\n> \r\n> I don't like the type-specific behavior with respect to falling back to positional indexing, but that's where we are. And I think it's more consistent for the indexing behavior to depend on the type of the values here.\r\n\r\nYeah, maybe that is the more sensible thing to do. But to explain my reservation about changing this, let's explain it in a different way. \r\nThe behaviour of `[]`: do we see it as 1) \"try label based, if raises KeyError, then use positional (fallback) (except don't fall back for numerical)\" or rather 2) \"label based for Int64Index, positional for any other type of Index\" ? Both are more or less equivalent (apart from special cases like the one we are discussing here, or a mixed type object dtype Index). In practice it is currently 1) (except for the case what we are discussing), but I personally would find 2) cleaner (and thus, this would be moving from 2) to 1) .., but OK, that's how it currenlty is for all others)\r\n\r\n \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/338217564",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-338217564",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 338217564,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODIxNzU2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T14:09:40Z",
    "updated_at": "2017-10-20T14:09:40Z",
    "author_association": "MEMBER",
    "body": "To keep the discussions a bit separate, I opened an issue about the \"should `get` be only positional or not\" (so use `loc` instead of `[]`) at https://github.com/pandas-dev/pandas/issues/17928. \r\nLet's keep it here about the behaviour of `[]` for CateogoricalIndex with numerical categories."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385708231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14865#issuecomment-385708231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14865",
    "id": 385708231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTcwODIzMQ==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T15:59:16Z",
    "updated_at": "2018-05-01T15:59:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "In #20882, I was asked to see if this was the same.  So I collected all of the examples listed above here, used v0.22.0, and relabeled them to be able to keep track.  This might help anyone who decides to address these issues in the future.\r\n\r\n```python\r\n>>> import pandas as pd\r\n>>> pd.__version__\r\n'0.22.0'\r\n>>>\r\n>>> s1 = pd.Series(['a', 'b', 'c'], index=pd.Series([1, 2, 3]))\r\n>>> s1.get(3)\r\n'c'\r\n>>>\r\n>>>\r\n>>> s2 = pd.Series(['a', 'b', 'c'], index=pd.Series([1, 2, 3], dtype='category'))\r\n>>> s2.get(3)\r\n'c'\r\n>>> s2.get(0)\r\n'a'\r\n>>>\r\n>>> s3 = pd.Series(['a', 'b', 'c'], index=pd.Series([3, 1, 2], dtype='category'))\r\n>>> [s3.get(i) for i in range(4)]\r\n['b', 'b', 'c', 'a']\r\n>>>\r\n>>> s4 = pd.Series(['a', 'b', 'c'], index=pd.Series(['hello', 'there', 'world'],\r\n\r\n...                                                 dtype='category'))\r\n>>> s4.get(2)\r\n'c'\r\n>>>\r\n>>> s5 = pd.Series(['a', 'b', 'c'], index=pd.CategoricalIndex([1, 2, 3]))\r\n>>> s6 =  pd.Series(s5.values, s5.index.get_values())\r\n>>> s5.get(0)\r\n'a'\r\n>>> s6.get(0) is None\r\nTrue\r\n>>>\r\n>>> s7 = pd.Series(['a', 'b', 'c'], index=pd.CategoricalIndex([1, 2, 3]))\r\n>>> try:\r\n...     print('s7.loc[1] ', s7.loc[1])\r\n... except TypeError as e:\r\n...     print('Expected TypeError raised ', e)\r\n... except Exception as e:\r\n...     print('Unexpected exception raised: ', e)\r\n...\r\nExpected TypeError raised  cannot do label indexing on <class 'pandas.core.indexes.category.CategoricalIndex'> with these indexers [1] of <class 'int'>\r\n>>> s8 = pd.Series([1, 2, 3, 4], index=pd.Categorical(['b', 'a', 'b', 'c']))\r\n>>> s8[0]\r\n2\r\n>>>\r\n>>> s8.iloc[0]\r\n1\r\n>>>\r\n```\r\nI think the results for `s1`, `s2`, `s3`, `s4`, and `s5` are all correct.  *If* the semantics of `Series.get()` change as discussed in #17928, then those will need to be revisited.\r\n\r\nI think the ones that have to be dealt with are the results related to `s6`, `s7` and `s8[0]`.  For `s7`, this is #17569.\r\n\r\nAnd there are 2 overriding issues (using the example `s8` here) discussed in this comment above https://github.com/pandas-dev/pandas/issues/14865#issuecomment-337836732 by @jorisvandenbossche about `CategoricalIndex` behavior -- one case is a bug, the other is a philosophical one (all well described in the referenced comment).\r\n"
  }
]
