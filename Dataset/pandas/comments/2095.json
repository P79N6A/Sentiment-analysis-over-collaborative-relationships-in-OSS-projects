[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9902882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2095#issuecomment-9902882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2095",
    "id": 9902882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MDI4ODI=",
    "user": {
      "login": "pag",
      "id": 20008,
      "node_id": "MDQ6VXNlcjIwMDA4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pag",
      "html_url": "https://github.com/pag",
      "followers_url": "https://api.github.com/users/pag/followers",
      "following_url": "https://api.github.com/users/pag/following{/other_user}",
      "gists_url": "https://api.github.com/users/pag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pag/subscriptions",
      "organizations_url": "https://api.github.com/users/pag/orgs",
      "repos_url": "https://api.github.com/users/pag/repos",
      "events_url": "https://api.github.com/users/pag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-30T11:54:23Z",
    "updated_at": "2012-10-30T11:54:23Z",
    "author_association": "NONE",
    "body": "Similarly with timedelta64:\n\n```\n>>> np.array([1100, 20], dtype='timedelta64[s]')\n 36 array([0:18:20, 0:00:20], dtype=timedelta64[s])\n>>> print pd.DataFrame({'x': np.array([1100, 20], dtype='timedelta64[s]')}).to_string()\n      x\n0  1100\n1    20\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9903236",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2095#issuecomment-9903236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2095",
    "id": 9903236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MDMyMzY=",
    "user": {
      "login": "pag",
      "id": 20008,
      "node_id": "MDQ6VXNlcjIwMDA4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pag",
      "html_url": "https://github.com/pag",
      "followers_url": "https://api.github.com/users/pag/followers",
      "following_url": "https://api.github.com/users/pag/following{/other_user}",
      "gists_url": "https://api.github.com/users/pag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pag/subscriptions",
      "organizations_url": "https://api.github.com/users/pag/orgs",
      "repos_url": "https://api.github.com/users/pag/repos",
      "events_url": "https://api.github.com/users/pag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-30T12:08:18Z",
    "updated_at": "2012-10-30T12:08:18Z",
    "author_association": "NONE",
    "body": "It's even worse with timedelta64 because I can find no way to convince DataFrame to just let it through unmolested. Is there any way to do this? I've tried\n\n```\n>>> orig\n 74 array([0:18:20, 0:00:20], dtype=timedelta64[s])\n>>> df['x']\n 75 \n0    1100\n1      20\nName: x\n>>> df['x'] = orig\n>>> df['x']\n 77 \n0    1100\n1      20\nName: x\n>>> df['x'] = df['x'].astype('timedelta64[s]')\n>>> df['x']\n 79 \n0    1100\n1      20\nName: x\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9915550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2095#issuecomment-9915550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2095",
    "id": 9915550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5MTU1NTA=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-30T17:42:16Z",
    "updated_at": "2012-10-30T17:42:16Z",
    "author_association": "MEMBER",
    "body": "DataFrame's preference is to coerce datetime64 values to nanoseconds. I have no test coverage at all for timedelta64-- where is this data originating for you? I will do what I can\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9983182",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2095#issuecomment-9983182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2095",
    "id": 9983182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5ODMxODI=",
    "user": {
      "login": "pag",
      "id": 20008,
      "node_id": "MDQ6VXNlcjIwMDA4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pag",
      "html_url": "https://github.com/pag",
      "followers_url": "https://api.github.com/users/pag/followers",
      "following_url": "https://api.github.com/users/pag/following{/other_user}",
      "gists_url": "https://api.github.com/users/pag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pag/subscriptions",
      "organizations_url": "https://api.github.com/users/pag/orgs",
      "repos_url": "https://api.github.com/users/pag/repos",
      "events_url": "https://api.github.com/users/pag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-01T15:05:57Z",
    "updated_at": "2012-11-01T15:05:57Z",
    "author_association": "NONE",
    "body": "The timedelta64s are coming from a database of offsets (KDB times; they can be negative, so they're best represented as time deltas in some cases).\n\nThanks for the quick patch. Is it harder to leave the timedelta64 type information as it was passed in than convert to nanoseconds? If I pass in datetime64[D] I want to maintain the distinction between points in time and symbolic dates. Pandas should respect that if possible.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9983271",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2095#issuecomment-9983271",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2095",
    "id": 9983271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5ODMyNzE=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-01T15:08:31Z",
    "updated_at": "2012-11-01T15:08:31Z",
    "author_association": "MEMBER",
    "body": "Handling multiple datetime64/timedelta64 units is pretty difficult right now. I do plan to change that soon (there will be more \"type management work\" in 0.10, not soon-to-be-released 0.9.1 though)-- I'm going to look at the timedelta64 issue separately. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/9985050",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2095#issuecomment-9985050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2095",
    "id": 9985050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk5ODUwNTA=",
    "user": {
      "login": "pag",
      "id": 20008,
      "node_id": "MDQ6VXNlcjIwMDA4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pag",
      "html_url": "https://github.com/pag",
      "followers_url": "https://api.github.com/users/pag/followers",
      "following_url": "https://api.github.com/users/pag/following{/other_user}",
      "gists_url": "https://api.github.com/users/pag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pag/subscriptions",
      "organizations_url": "https://api.github.com/users/pag/orgs",
      "repos_url": "https://api.github.com/users/pag/repos",
      "events_url": "https://api.github.com/users/pag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-01T15:55:24Z",
    "updated_at": "2012-11-01T15:55:24Z",
    "author_association": "NONE",
    "body": "OK, thanks very much\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/10900269",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2095#issuecomment-10900269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2095",
    "id": 10900269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwOTAwMjY5",
    "user": {
      "login": "pag",
      "id": 20008,
      "node_id": "MDQ6VXNlcjIwMDA4",
      "avatar_url": "https://avatars1.githubusercontent.com/u/20008?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pag",
      "html_url": "https://github.com/pag",
      "followers_url": "https://api.github.com/users/pag/followers",
      "following_url": "https://api.github.com/users/pag/following{/other_user}",
      "gists_url": "https://api.github.com/users/pag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pag/subscriptions",
      "organizations_url": "https://api.github.com/users/pag/orgs",
      "repos_url": "https://api.github.com/users/pag/repos",
      "events_url": "https://api.github.com/users/pag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-30T19:09:36Z",
    "updated_at": "2012-11-30T19:09:36Z",
    "author_association": "NONE",
    "body": "Is there a ticket I can watch for the improved datetime handling? I've searched through but can't find anything similar.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/11111548",
    "html_url": "https://github.com/pandas-dev/pandas/issues/2095#issuecomment-11111548",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/2095",
    "id": 11111548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTExNTQ4",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-12-06T23:39:11Z",
    "updated_at": "2012-12-06T23:39:11Z",
    "author_association": "MEMBER",
    "body": "You should open one (or more) for whatever features you're looking for exactly\n"
  }
]
