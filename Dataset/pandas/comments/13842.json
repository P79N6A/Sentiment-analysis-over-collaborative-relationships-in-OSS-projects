[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236285857",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236285857",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236285857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI4NTg1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T20:31:12Z",
    "updated_at": "2016-07-29T20:31:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls read the documentation: http://pandas.pydata.org/pandas-docs/stable/advanced.html#using-slicers\n\na scalar will always drop and a list will never drop\n\nsince you are showing scalars this is as expected - \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236289780",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236289780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236289780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI4OTc4MA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T20:49:35Z",
    "updated_at": "2016-07-29T20:49:35Z",
    "author_association": "NONE",
    "body": "I think this issue should be re-opened.  \n\n@jreback I know you're probably busy but I think you missed the part where an existing DataFrame's index is modified **in place** by the use of that .loc.  That is a serious issue, whether I used the correct syntax or not, .loc should never ever modify something without reassignment, right?  From a user's perspective that is horrifying.\n\nThank you, however, regarding the syntax.  I've read through that documentation several times (possibly older versions) and I thought I'd finally understood the MultiIndex slicing.  It's not exactly the most straightforward thing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236290701",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236290701",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236290701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MDcwMQ==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T20:53:47Z",
    "updated_at": "2016-07-29T20:54:25Z",
    "author_association": "NONE",
    "body": "@jreback Actually, further, \"a scalar will always drop and a list will never drop\" is simply not true.  Look more closely at the example I gave you.  I have two different dataframes with the same number of levels.  In both cases I provided a scalar.  In one case, the index was dropped.   In the other case, it was not.  If level 0 has more than one unique value, it did _not_ drop.  If it had only one unique value, it did. The scary part in particular is simply that in one of the cases the dataframe was also modified in place.\n\nYou are correct however, that df1.loc[pd.IndexSlice[[1], :, :]] gives the expected behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236291246",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236291246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236291246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MTI0Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T20:56:14Z",
    "updated_at": "2016-07-29T20:56:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mborysow I believe you're correct about the bug. I'll reopen.\n\nI've also edited your original post to be a bit more succinct ðŸ˜„ \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236291718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236291718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236291718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MTcxOA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T20:58:19Z",
    "updated_at": "2016-07-29T20:58:19Z",
    "author_association": "NONE",
    "body": "@TomAugspurger Thanks.  I'll try to cut clearer to the point next time. =)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236291725",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236291725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236291725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MTcyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T20:58:21Z",
    "updated_at": "2016-07-29T20:58:21Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  In one case, the index was dropped. In the other case, it was not.\n\nI believe that's the difference between unique vs. dupes (though I could be wrong). Let's keep this issue focused on `df1.loc[pd.IndexSlice[1, :, :]]` modifying `df1`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236292216",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236292216",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236292216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MjIxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:00:32Z",
    "updated_at": "2016-07-29T21:00:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mborysow the problem is you are addressing 'things you don't like' and not a focused examples\n\ne.g\n\n```\nIn [42]: df1 = pd.DataFrame(data=dict(A=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    ...:     ...:                              B=[1, 1, 2, 2, 2, 3, 1, 1, 1, 2, 3, 4],\n    ...:     ...:                              C=[1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 4],\n    ...:     ...:                              X=[1, 5, 2, 3, 8, 3, 3, 3, 1, 2, 1, 4],\n    ...:     ...:                              Y=[7, 3, 4, 1, 3, 9, 9, 3, 1, 9, 3, 7]))\n    ...: \n    ...: \n    ...: df1 = df1.set_index(['A', 'B', 'C']).sortlevel()\n    ...: \n    ...: \n    ...: \n    ...: \n    ...: \n    ...: \n\nIn [43]: df1.loc[pd.IndexSlice[1, :, :]]\nOut[43]: \n     X  Y\nB C      \n1 1  1  7\n  1  3  9\n  2  5  3\n  2  3  3\n  3  1  1\n2 1  2  4\n  2  3  1\n  2  2  9\n  3  8  3\n3 1  1  3\n  2  3  9\n4 4  4  7\n\nIn [44]: df1\nOut[44]: \n     X  Y\nB C      \n1 1  1  7\n  1  3  9\n  2  5  3\n  2  3  3\n  3  1  1\n2 1  2  4\n  2  3  1\n  2  2  9\n  3  8  3\n3 1  1  3\n  2  3  9\n4 4  4  7\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236292333",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236292333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236292333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MjMzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:01:03Z",
    "updated_at": "2016-07-29T21:01:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "which does look buggy. please have a look and see if you can come up with the reason why (in the code).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236292920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236292920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236292920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MjkyMA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:03:32Z",
    "updated_at": "2016-07-29T21:04:44Z",
    "author_association": "NONE",
    "body": "@TomAugspurger Oops.  I didn't notice the duplicate indices in there...  I swapped in a dataframe that didn't have any, see below.  Result is exactly the same, FYI.\n\n```\ndf1 = pd.DataFrame(data=dict(A=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n                             B=[1, 1, 2, 2, 2, 3, 1, 1, 1, 2, 3, 4],\n                             C=[1, 2, 5, 2, 3, 2, 8, 4, 3, 9, 1, 4],\n                             X=[1, 5, 2, 3, 8, 3, 3, 3, 5, 2, 1, 4],\n                             Y=[7, 3, 4, 1, 3, 9, 9, 3, 1, 9, 3, 7]))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236293718",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236293718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236293718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5MzcxOA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:07:14Z",
    "updated_at": "2016-07-29T21:07:14Z",
    "author_association": "NONE",
    "body": "@jreback Sorry.  I appreciate the feedback on issue submission.  I was trying to point out the difference in behavior in the two cases.  I'll try to focus it down next time.  Maybe I should have opened two issues.  One pointing out the difference in result and the other pointing out the side effect.  Would that have been better?  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236294227",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236294227",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236294227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5NDIyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:09:28Z",
    "updated_at": "2016-07-29T21:09:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mborysow yes that would have been better. The first is a user question, the 2nd a bug. Ideally an issue is a simple repro that get's right to the point. The longer it is the more likely it won't be read / acted on / understood immeditaly and will just cause confusion. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236294667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236294667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236294667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5NDY2Nw==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:11:33Z",
    "updated_at": "2016-07-29T21:11:33Z",
    "author_association": "NONE",
    "body": "@jreback Should I go ahead and create a new issue for that now?  I suppose there's a reasonable chance they stem from the same root cause.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236295713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236295713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236295713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjI5NTcxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:16:31Z",
    "updated_at": "2016-07-29T21:16:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "for what exactly? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236300004",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236300004",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236300004,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjMwMDAwNA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:37:02Z",
    "updated_at": "2016-07-29T21:37:02Z",
    "author_association": "NONE",
    "body": "So there were two issues. \n\n1) The clear bug where .loc exhibits a side effect., which you've already acknowledged this issue should focus on.\n\n2) Where indexing df1 and df2 the same way (pd.IndexSlice[1, :, :]]) drops index 'A' for df1 but not for df2.  The only difference between the two is that all the values of A in df1 are the same, whereas df2 has two unique values.  \n\nExample output next and code to copy and paste to reproduce below...\n\n##### df2, where 'A' is not dropped (A has more than one unique value)\n\n```\ndf2:\n       X  Y\nA B C      \n1 1 1  1  4\n    2  2  3\n2 2 1  3  2\n    2  4  1\n\ndf2.loc[pd.IndexSlice[1, :, :]]:\n       X  Y\nA B C      \n1 1 1  1  4\n    2  2  3\n```\n\n##### df1, where 'A' is dropped (all rows have A = 1)\n\n```\ndf1:\n       X  Y\nA B C      \n1 1 1  1  4\n    2  2  3\n  2 1  3  2\n    2  4  1\n\ndf1.loc[pd.IndexSlice[1, :, :]]:\n     X  Y\nB C      \n1 1  1  4\n  2  2  3\n2 1  3  2\n  2  4  1\n```\n\n##### Code to reproduce:\n\n```\ndf1 = pd.DataFrame(data=dict(A=[1, 1, 1, 1],\n                             B=[1, 1, 2, 2],\n                             C=[1, 2, 1, 2],\n                             X=[1, 2, 3, 4],\n                             Y=[4, 3, 2, 1]))\ndf2 = df1.copy(deep=True)\ndf2['A'] = [1, 1, 2, 2]\n\ndf1 = df1.set_index(['A', 'B', 'C']).sortlevel()\ndf2 = df2.set_index(['A', 'B', 'C']).sortlevel()\n\nprint(df1.loc[pd.IndexSlice[1, :, :]])\nprint(df2.loc[pd.IndexSlice[1, :, :]])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236300299",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236300299",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236300299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjMwMDI5OQ==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:38:19Z",
    "updated_at": "2016-07-29T21:38:19Z",
    "author_association": "NONE",
    "body": "Personally, it wouldn't surprise me to find out the the root cause of both those things is the same.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236300533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236300533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236300533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjMwMDUzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:39:28Z",
    "updated_at": "2016-07-29T21:39:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "as I said before this is as expected\n\nuse a list to have no drops whether unique or not\n\nfurther using a non unique mi is generally not supports that well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236301393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236301393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236301393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjMwMTM5Mw==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T21:43:37Z",
    "updated_at": "2016-07-29T21:43:37Z",
    "author_association": "NONE",
    "body": "Yeah, I will use lists from now on for sure.  But just to clarify, maybe I misunderstand what you are calling unique...  \n\nI assumed non-unique in this context meant that two rows shared an exact index., e.g.,\nRow(1): A=1, B=1\nRow(2): A=1, B=1\n\nWhen you say non-unique mi, are you also referring to the following as a non-unique mi?\nRow(1): A=1, B=1\nRow(2): A=1, B=2\n\nIs it the former, or the latter?  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236313101",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236313101",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236313101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjMxMzEwMQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T22:51:52Z",
    "updated_at": "2016-07-29T22:52:40Z",
    "author_association": "MEMBER",
    "body": "I agree with @mborysow that this behavior isn't very intuitive. It feels like an implementation detail that has leaked into the API. For operations that select out a single value along a level, I don't see why we couldn't always drop that level from the index.\n\n@mborysow What @jreback means about \"non-unique\" is that each row is unique. So your second example would be unique:\nRow(1): A=1, B=1\nRow(2): A=1, B=2\nYou can test this by calling the `index.is_unique` property (also note `index.is_monotonic`).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236658992",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236658992",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236658992,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY1ODk5Mg==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T18:06:06Z",
    "updated_at": "2016-08-01T18:09:05Z",
    "author_association": "NONE",
    "body": "@shoyer I actually would rather argue the opposite.  I prefer if it would never drop the level.  Worse though is that whether you select one value or multiple give you a different number of levels.  Some programmatic code may just choose items that pass some threshold, if sometimes it's just one, then everywhere I do this I need code to check what the new shape of the index is, and that's not fun.  For the same reason, if you select none (e.g., via an empty list in the slicer) I think it should just return an empty DataFrame with the index intact.  Otherwise, any time I choose a variable number of items from the DataFrame I have to check for two separate outliers (0 values or 1 value).\n\n It makes much more sense to me that .loc and similar indexing methods should just return a consistent number of levels regardless of what is selected.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236667129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236667129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236667129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY2NzEyOQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T18:35:06Z",
    "updated_at": "2016-08-01T18:35:06Z",
    "author_association": "MEMBER",
    "body": "> Worse though is that whether you select one value or multiple give you a different number of levels. Some programmatic code may just choose items that pass some threshold, if sometimes it's just one, then everywhere I do this I need code to check what the new shape of the index is, and that's not fun.\n\nI think I did a poor job of explaining the alternative, which is closer to the existing behavior.\n\nI agree that behavior absolutely should not depend on data values or their length. However, it's OK to make distinctions based on types. The current behavior (for unique MultiIndexes) is:\n- For scalar values, drop the level.\n- For list values (even of length 0 or 1), keep the level.\n\nThis mirrors the rule for dropping axis with normal indexing, which in turn mirrors similar behavior from numpy. In fact, this is where the different behavior depending on uniqueness arises -- indexing a non-unique index with a scalar returns an object that still has that axis (by necessity), whereas indexing a unique-index with a scalar drops the axis.\n\nChanging this behavior (to never drop levels/axes) might be desirable, but it would be a major API change, so it would be best discussed in a separate issue.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236668265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236668265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236668265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY2ODI2NQ==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T18:39:08Z",
    "updated_at": "2016-08-01T18:39:08Z",
    "author_association": "NONE",
    "body": "@shoyer Ahh.  Then I agree completely. =)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236673848",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236673848",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236673848,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY3Mzg0OA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T18:58:57Z",
    "updated_at": "2016-08-01T18:59:59Z",
    "author_association": "NONE",
    "body": "@shoyer I agree completely with the following that you said:\n\n---\n\nI agree that behavior absolutely should not depend on data values or their length. However, it's OK to make distinctions based on types. The current behavior (for unique MultiIndexes) is:\n\nFor scalar values, drop the level.\nFor list values (even of length 0 or 1), keep the level.  \n\n---\n\nAre we in agreement though that this is **not** what is currently happening?  @jreback ck called what I described above the expected behavior.  \n\nIn this comment I made above there are two dataframes: \nhttps://github.com/pydata/pandas/issues/13842#issuecomment-236300004\n\nIn the first case the indices are 111, 112, 221, and 222 and in the other it's 111, 112, 121, and 122.  Clearly unique indices based on the description above, and hence why I clarified.  These two have **different** behaviors when indexing on the scalar value.  They do behave the same when indexing on the list value. I'm perfectly happy with the scalar vs. list indexing working as you've described it if it's consistent, but that's the problem, it's not currently consistent.\n\nAnyhow, the thing I'm sure has been communicated and acknowledged is the side effect (the in-place index modification). That's a clear bug. The thing I'm not sure has been communicated is the difference in behavior based on the dataframe.  I suspect strongly that the two are related, but I can't say for certain.  _This_ is the thing I was trying to clarify whether or not I should create a new issue for.\n\nSorry if I'm beating a dead horse.  Just paranoid that I'm not communicating the issue well.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236675833",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236675833",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236675833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY3NTgzMw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T19:05:54Z",
    "updated_at": "2016-08-01T19:05:54Z",
    "author_association": "MEMBER",
    "body": "> In the first case the indices are 111, 112, 221, and 222 and in the other it's 111, 112, 121, and 122. Clearly unique indices based on the description above, and hence why I clarified. These two have different behaviors when indexing on the scalar value. They do behave the same when indexing on the list value. I'm perfectly happy with the scalar vs. list indexing working as you've described it if it's consistent, but that's the problem, it's not currently consistent.\n\nYes, this looks like a bug to me. Both of these of this indexes are unique and lex-sorted (monotonic), so they should work the same way when indexed with a scalar value.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236685599",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236685599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236685599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY4NTU5OQ==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T19:44:03Z",
    "updated_at": "2016-08-01T20:25:39Z",
    "author_association": "NONE",
    "body": "Hopped into a debugger and found where it is happening.  This is for version 0.18.1.  \n\nI can look a little deeper if I can be directed.  Let me know if this is helpful or not.  Trying to help point in the right direction..\n\ndf1 (all A = 1)...  \n called .loc[pd.IndexSlice[1, :, :]]...\n pandas.core.indexing._LocationIndexer.__getitem__ is called with (1, slice(None, None, None), slice(None, None, None))\n_getitem_tuple(key) seems to call __getitem__ from an _iLocIndexer instance with this key:\n**slice(None,None, None)**\n\ndf2 (multiple values for A)\nSame as above, execpt the _iLocIndexer.__getitem__ is called with this key:\n**(array([0, 1]), slice(None, None, None))**\n\n**The actual culprit for the overwrite is in pandas.core.generic.NDFrame.xs line 1778**.  This code block is **NOT** reached by df2, only df1.  At this point these two lines are executed:\n\n``` python\nresult = self.iloc[loc]\nresult.index = new_index\n```\n\nloc is slice(None, None, None) for the df1 case.  I'm guessing that self.iloc[:] returns the initial dataframe and not a new dataframe object pointing to the same data. Right here the index is overwritten (here the index has had level 0 dropped).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236694493",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236694493",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236694493,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY5NDQ5Mw==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:17:14Z",
    "updated_at": "2016-08-01T20:25:30Z",
    "author_association": "NONE",
    "body": "... A little more...\n\nIn pandas.indexes.multi.MultiIndex.get_loc_level, line 1710:\n(For both df1 and df2, key is still (1, slice(None, None, None), slice(None, None, None)))\n\n``` python\n                for i, k in enumerate(key):\n                    if not isinstance(k, slice):\n                        k = self._get_level_indexer(k, level=i)\n                        if isinstance(k, slice):\n                            # everything\n                            if k.start == 0 and k.stop == len(self):\n                                k = slice(None, None)\n                        else:\n                            k_index = k\n\n                    if isinstance(k, slice):\n                        if k == slice(None, None):\n                            continue\n                        else:\n                            raise TypeError(key)\n```\n\nAt \"k.start == 0 and k.stop == len(self).\"  In df1, indexing with the scalar value of 1 selects everything, so:\nk.start == 0 and k.stop == len(self) evaluates true and it sets k to slice(None, None). This doesn'tt really do anything, but it prevents the TypeError from being raised (haven't followed what happens when that propagates up).\n\nFor df2, since selecting A=1 does not select all the values in the index, so the TypeError exception is raised in the last line of the code pasted above (line 1719 in pandas.indexes.multi.MultiIndex.get_loc_level.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236699595",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236699595",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236699595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY5OTU5NQ==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:36:25Z",
    "updated_at": "2016-08-01T20:36:25Z",
    "author_association": "NONE",
    "body": "@jreback, @shoyer Is the above helpful in finding a solution?  \nI think just fixing the side effect  requires checking that loc is not slice(None, None, None) for this code, right?  That's if I'm correct that iloc[slice(None, None, None)] returns a reference to the original object?  If we're returning an identical object, don't muck with the index in .xs()?\n\n``` python\nresult = self.iloc[loc]\nresult.index = new_index\n```\n\ncould become like this:\n\n``` python\nresult = self.iloc[loc]\nif isinstance(loc, slice) and loc == slice(None, None, None):\n    pass\nelse:\n    result.index = new_index\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236699990",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236699990",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236699990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY5OTk5MA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:37:46Z",
    "updated_at": "2016-08-01T20:37:46Z",
    "author_association": "NONE",
    "body": "Oh, or as @shoyer just linked to another issue, don't return the original object for .iloc[:] and .loc[:].  =)  \n\nThat makes more sense.\n\nOk, so the inconsistency is a separate issue.  I will create a new issue about it later.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236700282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236700282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236700282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcwMDI4Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:38:40Z",
    "updated_at": "2016-08-01T20:38:40Z",
    "author_association": "MEMBER",
    "body": "I raised a new issue for the behavior of `.iloc[:]` (https://github.com/pydata/pandas/issues/13873).\n\n@mborysow It looks like you're well on your way to a fix here -- a pull request would be very welcome! Even a temporary work around would be better than the current behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236700827",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236700827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236700827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcwMDgyNw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:40:26Z",
    "updated_at": "2016-08-01T20:40:26Z",
    "author_association": "MEMBER",
    "body": "@mborysow I would suggest something like this instead (if you don't fix the underlying issue):\n\n```\nif isinstance(loc, slice) and loc == slice(None, None, None):\n    result = self.copy(deep=False)\nelse:\n    result = self.iloc[loc]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236702818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13842#issuecomment-236702818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13842",
    "id": 236702818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjcwMjgxOA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T20:47:47Z",
    "updated_at": "2016-08-01T20:47:47Z",
    "author_association": "NONE",
    "body": "@shoyer I'm in an airgapped environment and have actually never made a pull request (also, most of my experience is with mercurial).  I'll take a stab at it tonight when I get home.\n"
  }
]
