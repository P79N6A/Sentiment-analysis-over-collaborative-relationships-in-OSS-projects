[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19952049",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-19952049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 19952049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTUyMDQ5",
    "user": {
      "login": "rhstanton",
      "id": 2153614,
      "node_id": "MDQ6VXNlcjIxNTM2MTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2153614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhstanton",
      "html_url": "https://github.com/rhstanton",
      "followers_url": "https://api.github.com/users/rhstanton/followers",
      "following_url": "https://api.github.com/users/rhstanton/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhstanton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhstanton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhstanton/subscriptions",
      "organizations_url": "https://api.github.com/users/rhstanton/orgs",
      "repos_url": "https://api.github.com/users/rhstanton/repos",
      "events_url": "https://api.github.com/users/rhstanton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhstanton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-25T04:08:10Z",
    "updated_at": "2013-06-25T04:08:10Z",
    "author_association": "NONE",
    "body": "Thanks for getting to this so quickly. A quick comment - in the example above, because of the 2\\* and 3\\* in line 5, the contents of the two dataframes are actually different (even ignoring the index), so I wouldn't expect the results to be the same, just to take the same amount of time to calculate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19965412",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-19965412",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 19965412,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTY1NDEy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-25T10:03:51Z",
    "updated_at": "2013-06-25T10:03:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "if you were using `loc` that would be true, but remember `iloc` is based on locations, and it happens that all of the locations are in the first part, so they index the same, IOW all of the elements in idx are < 300000 (which happens is the len of df). df2 is 900k ellements long\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19980645",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-19980645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 19980645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTgwNjQ1",
    "user": {
      "login": "rhstanton",
      "id": 2153614,
      "node_id": "MDQ6VXNlcjIxNTM2MTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2153614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhstanton",
      "html_url": "https://github.com/rhstanton",
      "followers_url": "https://api.github.com/users/rhstanton/followers",
      "following_url": "https://api.github.com/users/rhstanton/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhstanton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhstanton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhstanton/subscriptions",
      "organizations_url": "https://api.github.com/users/rhstanton/orgs",
      "repos_url": "https://api.github.com/users/rhstanton/repos",
      "events_url": "https://api.github.com/users/rhstanton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhstanton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-25T14:39:15Z",
    "updated_at": "2013-06-25T14:39:15Z",
    "author_association": "NONE",
    "body": "Oh yes - I meant to put df2 inside the concat, not df...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19994377",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-19994377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 19994377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTk0Mzc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-25T17:50:49Z",
    "updated_at": "2013-06-25T17:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "one more question.....\n\nin 0.11.1 non-unique indexing was changed to guarantee ordering, IOW, you would get back in the same order as you put in...., however this comes at a speed penalty\n\n```\nIn [18]: %timeit df2.loc[idx]\n1 loops, best of 3: 1.5 s per loop\n```\n\nWith no ordering guarantee\n\n```\nIn [17]: %timeit df2.loc[df2.index.isin(idx)]\n10 loops, best of 3: 31.9 ms per loop\n```\n\nshould prob just document this? what do you think (this only really matters when you lots of indexers)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19996819",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-19996819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 19996819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTk2ODE5",
    "user": {
      "login": "rhstanton",
      "id": 2153614,
      "node_id": "MDQ6VXNlcjIxNTM2MTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2153614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhstanton",
      "html_url": "https://github.com/rhstanton",
      "followers_url": "https://api.github.com/users/rhstanton/followers",
      "following_url": "https://api.github.com/users/rhstanton/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhstanton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhstanton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhstanton/subscriptions",
      "organizations_url": "https://api.github.com/users/rhstanton/orgs",
      "repos_url": "https://api.github.com/users/rhstanton/repos",
      "events_url": "https://api.github.com/users/rhstanton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhstanton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-25T18:27:53Z",
    "updated_at": "2013-06-25T18:27:53Z",
    "author_association": "NONE",
    "body": "Are those timings with a newer version than currently on github? Assuming this is the same df2 and idx as in the example from earlier, df2.loc[idx] take forever on my machine (about 5 minutes so far and it still hasn't given me a result, and that's without using %timeit!)\n\nFrom: jreback <notifications@github.com<mailto:notifications@github.com>>\nReply-To: pydata/pandas <reply@reply.github.com<mailto:reply@reply.github.com>>\nDate: Tuesday, June 25, 2013 10:51 AM\nTo: pydata/pandas <pandas@noreply.github.com<mailto:pandas@noreply.github.com>>\nCc: Richard Stanton <stanton@haas.berkeley.edu<mailto:stanton@haas.berkeley.edu>>\nSubject: Re: [pandas] BUG: GH4017, efficiently support non-unique indicies with iloc (#4018)\n\none more question.....\n\nin 0.11.1 non-unique indexing was changed to guarantee ordering, IOW, you would get back in the same order as you put in...., however this comes at a speed penalty\n\nIn [18]: %timeit df2.loc[idx]\n1 loops, best of 3: 1.5 s per loop\n\nWith no ordering guarantee\n\nIn [17]: %timeit df2.loc[df2.index.isin(idx)]\n10 loops, best of 3: 31.9 ms per loop\n\nshould prob just document this? what do you think (this only really matters when you lots of indexers)\n\n—\nReply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4018#issuecomment-19994377.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19998151",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-19998151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 19998151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTk4MTUx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-25T18:47:17Z",
    "updated_at": "2013-06-25T18:47:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "from this PR, clone this branch and give a try\n\n(master very slow  on `loc` with dup selections)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19999445",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-19999445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 19999445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5OTk5NDQ1",
    "user": {
      "login": "rhstanton",
      "id": 2153614,
      "node_id": "MDQ6VXNlcjIxNTM2MTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2153614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhstanton",
      "html_url": "https://github.com/rhstanton",
      "followers_url": "https://api.github.com/users/rhstanton/followers",
      "following_url": "https://api.github.com/users/rhstanton/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhstanton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhstanton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhstanton/subscriptions",
      "organizations_url": "https://api.github.com/users/rhstanton/orgs",
      "repos_url": "https://api.github.com/users/rhstanton/repos",
      "events_url": "https://api.github.com/users/rhstanton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhstanton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-25T19:05:52Z",
    "updated_at": "2013-06-25T19:05:52Z",
    "author_association": "NONE",
    "body": "Maybe this should be an option? The time difference really is huge.\n\nThough I guess the user can always use the second version manually, as long as it's documented in very large letters somewhere (e.g., when you type df.loc( and press TAB)\n\nFrom: jreback <notifications@github.com<mailto:notifications@github.com>>\nReply-To: pydata/pandas <reply@reply.github.com<mailto:reply@reply.github.com>>\nDate: Tuesday, June 25, 2013 10:51 AM\nTo: pydata/pandas <pandas@noreply.github.com<mailto:pandas@noreply.github.com>>\nCc: Richard Stanton <stanton@haas.berkeley.edu<mailto:stanton@haas.berkeley.edu>>\nSubject: Re: [pandas] BUG: GH4017, efficiently support non-unique indicies with iloc (#4018)\n\none more question.....\n\nin 0.11.1 non-unique indexing was changed to guarantee ordering, IOW, you would get back in the same order as you put in...., however this comes at a speed penalty\n\nIn [18]: %timeit df2.loc[idx]\n1 loops, best of 3: 1.5 s per loop\n\nWith no ordering guarantee\n\nIn [17]: %timeit df2.loc[df2.index.isin(idx)]\n10 loops, best of 3: 31.9 ms per loop\n\nshould prob just document this? what do you think (this only really matters when you lots of indexers)\n\n—\nReply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4018#issuecomment-19994377.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20022805",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-20022805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 20022805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDIyODA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-26T01:55:22Z",
    "updated_at": "2013-06-26T01:55:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rhstanton ok...give this a try, its a _bit_ faster....was doing stupid things; this is an easy problem once you figure it out.....\n\nnotice the different results FYI between using `isin` which doesn't care about ordering nor about repeated elements in the index (in this case there aren't any). Also note that the index in the `df2.loc[idx]` case includes all of the elements you asked for, whether they have values or not (they are `nan`)\n\n```\nIn [8]: df2.loc[idx]\nOut[8]: \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 5022 entries, 0 to 296901\nData columns (total 2 columns):\nA    3033  non-null values\nB    3033  non-null values\ndtypes: float64(2)\n\nIn [9]: df2.loc[df2.index.isin(idx)]\nOut[9]: \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 3033 entries, 0 to 99990\nData columns (total 2 columns):\nA    3033  non-null values\nB    3033  non-null values\ndtypes: float64(1), int64(1)\n```\n\nHere's an example of using repeated entries; ordering is preserverd\n\n```\nIn [14]: df2.loc[np.concatenate([idx,np.array([1,2,3,0])])]\nOut[14]: \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 5034 entries, 0 to 0\nData columns (total 2 columns):\nA    3045  non-null values\nB    3045  non-null values\ndtypes: float64(2)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20062064",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-20062064",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 20062064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDYyMDY0",
    "user": {
      "login": "rhstanton",
      "id": 2153614,
      "node_id": "MDQ6VXNlcjIxNTM2MTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2153614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhstanton",
      "html_url": "https://github.com/rhstanton",
      "followers_url": "https://api.github.com/users/rhstanton/followers",
      "following_url": "https://api.github.com/users/rhstanton/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhstanton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhstanton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhstanton/subscriptions",
      "organizations_url": "https://api.github.com/users/rhstanton/orgs",
      "repos_url": "https://api.github.com/users/rhstanton/repos",
      "events_url": "https://api.github.com/users/rhstanton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhstanton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-26T16:40:43Z",
    "updated_at": "2013-06-26T16:40:43Z",
    "author_association": "NONE",
    "body": "Just tried it. It's _much_ faster than before.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20062124",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-20062124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 20062124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDYyMTI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-26T16:41:37Z",
    "updated_at": "2013-06-26T16:41:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "gr8...thanks for your help...merging soon\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20154742",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-20154742",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 20154742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTU0NzQy",
    "user": {
      "login": "rhstanton",
      "id": 2153614,
      "node_id": "MDQ6VXNlcjIxNTM2MTQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2153614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rhstanton",
      "html_url": "https://github.com/rhstanton",
      "followers_url": "https://api.github.com/users/rhstanton/followers",
      "following_url": "https://api.github.com/users/rhstanton/following{/other_user}",
      "gists_url": "https://api.github.com/users/rhstanton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rhstanton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rhstanton/subscriptions",
      "organizations_url": "https://api.github.com/users/rhstanton/orgs",
      "repos_url": "https://api.github.com/users/rhstanton/repos",
      "events_url": "https://api.github.com/users/rhstanton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rhstanton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-27T21:02:46Z",
    "updated_at": "2013-06-27T21:02:46Z",
    "author_association": "NONE",
    "body": "A (very) minor follow-up:\n\n Here are some new test results, where the input dataframe is identical apart from one having a unique index and one having a repeated index. In both cases, iloc now runs very fast, but why does it take over 4x as long with the unique index? I'd have assumed that the timing of iloc should be independent of the index.\n\ndf = DataFrame({'A' : [0.1] \\* 30000000, 'B' : [1] \\* 30000000})\nidx = array(range(30000)) \\* 99\n%timeit a = df.iloc[idx]\n\n1 loops, best of 3: 4.81 ms per loop\n\ndf2 = DataFrame({'A' : [0.1] \\* 10000000, 'B' : [1] \\* 10000000})\ndf2 = concat([df2, df2, df2])\n%timeit a = df2.iloc[idx]\n\n1 loops, best of 3: 1.15 ms per loop\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20187356",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4018#issuecomment-20187356",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4018",
    "id": 20187356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMTg3MzU2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-28T13:19:18Z",
    "updated_at": "2013-06-28T13:19:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "good point....\n\nunique case was converting to labels then back to indexers so doing some extra work, fixed in #4070\n"
  }
]
