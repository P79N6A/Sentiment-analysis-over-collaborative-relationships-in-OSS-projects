[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377936842",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-377936842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 377936842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzkzNjg0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T14:08:00Z",
    "updated_at": "2018-04-02T14:08:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "this makes categorical groupers work like other groupers and should make things more performant and intuitive. It is somewhat walking back a change from when we first introduced categorical groupers. But the information is preserved (meaning the categories are still there), just removes the automatic re-indexing (which was causing memory to blow up).\r\n\r\nstill need some increased test coverage. note the first commit actually has almost all of the changes, the next are just cleaning up tests."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/377946301",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-377946301",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 377946301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Nzk0NjMwMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T14:50:13Z",
    "updated_at": "2018-04-02T14:50:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just making sure, this affects grouping by a single categorical as well?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378024777",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-378024777",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 378024777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODAyNDc3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-02T19:51:43Z",
    "updated_at": "2018-04-02T19:51:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes this affects just a single categorical column also "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/378068248",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-378068248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 378068248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODA2ODI0OA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-04-02T22:36:05Z",
    "updated_at": "2018-05-01T15:09:43Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20583?src=pr&el=h1) Report\n> Merging [#20583](https://codecov.io/gh/pandas-dev/pandas/pull/20583?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/28edd06498987972953b5c8e1c98b7f55d24b8d2?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `98.07%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/20583/graphs/tree.svg?src=pr&height=150&width=650&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/20583?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #20583      +/-   ##\n==========================================\n+ Coverage   91.78%   91.79%   +<.01%     \n==========================================\n  Files         153      153              \n  Lines       49341    49371      +30     \n==========================================\n+ Hits        45287    45319      +32     \n+ Misses       4054     4052       -2\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.18% <98.07%> (+0.01%)` | :arrow_up: |\n| #single | `41.92% <5.76%> (-0.03%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/20583?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/20583/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `95.94% <ø> (ø)` | :arrow_up: |\n| [pandas/core/arrays/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/20583/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2NhdGVnb3JpY2FsLnB5) | `95.67% <100%> (+0.05%)` | :arrow_up: |\n| [pandas/core/groupby/groupby.py](https://codecov.io/gh/pandas-dev/pandas/pull/20583/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS9ncm91cGJ5LnB5) | `92.62% <100%> (+0.07%)` | :arrow_up: |\n| [pandas/core/indexes/category.py](https://codecov.io/gh/pandas-dev/pandas/pull/20583/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9jYXRlZ29yeS5weQ==) | `97.03% <100%> (ø)` | :arrow_up: |\n| [pandas/core/reshape/pivot.py](https://codecov.io/gh/pandas-dev/pandas/pull/20583/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS9waXZvdC5weQ==) | `96.97% <87.5%> (ø)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/20583/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `84.59% <0%> (+0.2%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20583?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/20583?src=pr&el=footer). Last update [28edd06...bdf7525](https://codecov.io/gh/pandas-dev/pandas/pull/20583?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379814750",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-379814750",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 379814750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTgxNDc1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T16:36:11Z",
    "updated_at": "2018-04-09T16:36:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "so this is all ready to go if any comments. @TomAugspurger @jorisvandenbossche \r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/379904559",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-379904559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 379904559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3OTkwNDU1OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-09T21:48:03Z",
    "updated_at": "2018-04-09T21:48:03Z",
    "author_association": "MEMBER",
    "body": "> yes this affects just a single categorical column also\r\n\r\nThat doesn't seem to be the case?\r\n\r\nWith this branch, and the example of the whatsnew docs:\r\n\r\n```\r\nIn [14]: df.groupby(['A', 'B']).sum()\r\nOut[14]: \r\n     values\r\nA B        \r\na c       1\r\n  d       2\r\nb c       3\r\n  d       4\r\n\r\nIn [15]: df.groupby('A').sum()\r\nOut[15]: \r\n   values\r\nA        \r\na       3\r\nb       7\r\nz       0               <---------- now unobserved category is included\r\n```\r\n\r\nFurther a general comment (will try to do more detailed review later this week): I am not sure we can just change this. First, it is a API breaking change in several places, eg also pivot_table\\*. And second, I think the current behaviour can actually useful in certain cases and it would be nice to have a way to keep this behaviour. \r\nI know this is very ugly, but it would be worth to have a keyword for this in `groupby` ?\r\n\r\n\\* but I agree we should look into it and try to make this more consistent. As, for example, `pivot` does not seem to include unobserved categories (already currently on master), while `pivot_table` does include them but apparently only for the index and not columns? (try `df.pivot_table('values', 'A', 'B')` with the example of whatsnew). On the other hand, `value_counts` does include them (and I think rightly so), but that also introduces an inconsistency with groupby."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380759167",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-380759167",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 380759167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc1OTE2Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T10:39:08Z",
    "updated_at": "2018-04-12T10:39:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I could also change this for a single grouper. That breaks a couple of tests. I am inclined to do this actually as then it makes the multi and single case consistent. \r\n\r\nWe cannot support a full cartesian product for multi-groupers as this will blow up memory and kill performance. So either we go for:\r\n\r\n-  an option to turn this on/off. \r\n- differing behavior for single vs multi\r\n- change single grouping behavior as well"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/380762018",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-380762018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 380762018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MDc2MjAxOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-12T10:49:03Z",
    "updated_at": "2018-04-12T10:49:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I’d favor an option. I think the default should eventually be to exclude unobserved categories (after a deprecation cycle)\n\n________________________________\nFrom: Jeff Reback <notifications@github.com>\nSent: Thursday, April 12, 2018 5:39:16 AM\nTo: pandas-dev/pandas\nCc: Tom Augspurger; Mention\nSubject: Re: [pandas-dev/pandas] API: categorical grouping will no longer return the cartesian product (#20583)\n\n\nSo I could also change this for a single grouper. That breaks a couple of tests. I am inclined to do this actually as then it makes the multi and single case consistent.\n\nWe cannot support a full cartesian product for multi-groupers as this will blow up memory and kill performance. So either we go for:\n\n  *   an option to turn this on/off.\n  *   differing behavior for single vs multi\n  *   change single grouping behavior as well\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/pandas-dev/pandas/pull/20583#issuecomment-380759167>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ABQHItJEfaXLGyuztAiN7hpsUYEzKUqRks5tny7UgaJpZM4TDk6b>.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384485210",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384485210",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384485210,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDQ4NTIxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T01:37:55Z",
    "updated_at": "2018-04-26T01:37:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is read for a look\r\n\r\n@TomAugspurger @jorisvandenbossche "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384639285",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384639285",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384639285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDYzOTI4NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T13:23:35Z",
    "updated_at": "2018-04-26T13:23:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "http://pandas-docs.github.io/pandas-docs-travis/categorical.html#operations would be a good place to show `observed=False`.\r\n\r\nAbout `pivot_table`, I always forget what dropna does... Does it control dropping columns / rows that are all NA before or after aggregating?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384798345",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384798345",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384798345,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDc5ODM0NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T21:43:18Z",
    "updated_at": "2018-04-26T21:43:18Z",
    "author_association": "MEMBER",
    "body": "I will try to give this a more detailed look tomorrow.\r\n\r\nBut general comment: now that we have the keyword to specify the behaviour (for now with `observed=False` for back compat), I am not really sure that we should change the default in the future.\r\n\r\nIt's difficult to judge, as I personally don't run much in such situations, but my gut feeling says that the original issue that motivated the change (the combinatorial explosion with multiple categorical groupers) is not the majority usage pattern of categoricals. And if you don't want to include unobserved categoricals in your analyses in general (groupby, pivot, value_counts, plotting, ..), you always have the easy functionality of `remove_unused_categories`.\r\n\r\ncc @jankatins "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384804058",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384804058",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384804058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDgwNDA1OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T22:08:09Z",
    "updated_at": "2018-04-26T22:08:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger the pivot was a red herring, was not passing things thru. and ``dropna`` (in pivot) is exactly equivalent of the ``observed`` kwarg (to groupby). So maybe should just rename ``observed`` -> ``dropna``, and would be consistent across other functions (``value_counts``) as well.\r\n\r\n@jorisvandenbossche I disagree. You almost *never* want a cartesian product of all of the groupers. It can easily blow you up and shouldn't be the default. (its also easy to create if you need). Not this has *nothing* to do with the actual categories that are returned, they are in BOTH cases indicated on the dtype of the level of that index, (observed or not), its the groupers that are the issue."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384806191",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384806191",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384806191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDgwNjE5MQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T22:18:14Z",
    "updated_at": "2018-04-26T22:18:14Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche I also think the default should change. Categoricals are mostly an implementation detail, and should behave as similarly as possible as ordinary ``Series``."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384808176",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384808176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384808176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDgwODE3Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T22:28:02Z",
    "updated_at": "2018-04-26T22:28:02Z",
    "author_association": "MEMBER",
    "body": "> You almost *never* want a cartesian product of all of the groupers. It can easily blow you up and shouldn't be the default. \r\n\r\nBut in most cases you have *no* cartesian product, you only have a single categorical key\r\n\r\n> It can easily blow you up and shouldn't be the default. (its also easy to create if you need).\r\n\r\nIt's also easy to get the version with only the observed ones (certainly now there is the keyword), so that is not really an argument IMO\r\n\r\n> Not this has nothing to do with the actual categories that are returned, they are in BOTH cases indicated on the dtype of the level of that index\r\n\r\nYes, and that is certainly a good thing. But for me it is still the question what we want the *visible* output to be. \r\nFor example a pivot table is often used as a kind of a summary table. In such a case, I often do want to know that a certain category I care about (otherwise it would not be in the categories) has no values. \r\nAnd it is also about consistency: `value_counts` does include the unobserved one (and rightly so, IMO)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384881477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384881477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384881477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDg4MTQ3Nw==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T06:50:30Z",
    "updated_at": "2018-04-27T06:50:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "My original motivation to work on categoricals were stuff like lickert scales (\"completly agree ... completly disagree\", 5 to 7 values). For that seing unobserved categoricals in group bys are a good thing.\r\n\r\nSince then a lot of changes have been made to make categoricals usefull in other situations (like as a memory efficient string replacement or to analyse genes?).\r\n\r\nThis change feels like it is a change to make working with the latter easier but will make the former harder."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384886484",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384886484",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384886484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDg4NjQ4NA==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T07:15:41Z",
    "updated_at": "2018-04-27T07:15:41Z",
    "author_association": "MEMBER",
    "body": "> And it is also about consistency: value_counts does include the unobserved one (and rightly so, IMO).\r\n\r\nI gave it as granted that if we change ``groupby`` we will also change ``value_counts`` - otherwise I agree it doesn't make any sense.\r\n\r\n> This change feels like it is a change to make working with the latter easier but will make the former harder.\r\n\r\nTrue... I just think your use case is more rare (but I have no data to support this statement, other than personal experience). Anyway, with the new argument both things will be pretty easy anyway, it is mainly a matter of which use case should require awareness from the user."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384900787",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384900787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384900787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDkwMDc4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T08:21:06Z",
    "updated_at": "2018-04-27T08:21:06Z",
    "author_association": "MEMBER",
    "body": "You can indeed use Categorical as memory-efficient string storage if you have some repetition, but, I don't think we should take that use case into account for designing the *default* API (note I say default, it's certainly we make that use case *possible*, which it is with the keyword).\r\n\r\nOf course, you can still have \"real\" categorical data with many categories, from which you typically only observe a subset. And then you might want to have the dropping behaviour as default. \r\nMy feeling says that the use case with fewer categories of which you typically observe the majority is more common, but I also have completely no objective idea about this :-)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384931536",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-384931536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 384931536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDkzMTUzNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T10:27:51Z",
    "updated_at": "2018-04-27T10:27:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "agree for consistency should change:\r\n\r\n```\r\nIn [1]:  pd.Series(list('aabc')).astype(pd.api.types.CategoricalDtype(list('abcd'))).value_counts(dropna=True)\r\nOut[1]: \r\na    2\r\nc    1\r\nb    1\r\nd    0\r\ndtype: int64\r\n\r\nIn [2]:  pd.Series(list('aabc')).astype(pd.api.types.CategoricalDtype(list('abcd'))).value_counts(dropna=False)\r\nOut[2]: \r\na    2\r\nc    1\r\nb    1\r\nd    0\r\ndtype: int64\r\n```\r\n\r\nso that ``True`` would remove the unobserved."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385057923",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385057923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385057923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTA1NzkyMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T18:37:26Z",
    "updated_at": "2018-04-27T18:37:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think in the long run I'd prefer unobserved categories to be excluded from groupby, primarily because the cartesian product issue seems like such a difficult gotcha. Though if / when we have an \"interned string\" array type (categorical, but with different semantics), would we want to go back on that change?\r\n\r\n---\r\n\r\n`value_counts` highlights my discomfort with overloading `dropna`. It will require an `observed` keyword to handle cases like\r\n\r\n```python\r\nIn [21]: c1 = pd.Categorical(['a', 'a', None], categories=['a'])\r\n\r\nIn [22]: c2 = pd.Categorical(['a', 'a', None], categories=['a', 'b'])\r\n```\r\n\r\nI don't think `c1.value_counts(dropna=True)`  should be the same as `c2.value_counts(dropna=True)`. `c2` has the additional category. So either recommend `c2.remove_unused_categories.value_counts(dropna=True)` or `c2.value_counts(dropna=True, observed=True)`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385143545",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385143545",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385143545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE0MzU0NQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-28T05:57:55Z",
    "updated_at": "2018-04-28T05:57:55Z",
    "author_association": "MEMBER",
    "body": "Might be a crazy idea... but just in case it's not, I'll rather propose it now than later: what if showing empty categories (or not) was a property of the _dtype_, preserved across transformations, just like the (possible) ordering?\r\n\r\nThat way, @jankatins would need to specify only once, when creating the categorical for the first time, that his categories (the Likert scale values) are \"all important\". Otherwise, the categories would be considered as merely \"functional\".\r\n\r\nWe could even think that a categorical created by passing the categories has \"important\" categories by default, while a categorical which creates its own categories automatically has \"functional\" categories by default (clearly with a parameter allowing to change this). (But this might be too much magic.)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385162953",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385162953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385162953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE2Mjk1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-28T10:18:01Z",
    "updated_at": "2018-04-28T10:18:54Z",
    "author_association": "MEMBER",
    "body": "I would rather make a \"dict-encoded / interned string\" type than overloading Categorical with this. Because in such a case, you would typically also not care about introducing new categories (eg when concatting etc), which now raises errors for Categorical. We have had discussion about exactly that before: https://github.com/pandas-dev/pandas/issues/8640 (but you will see the discussion is also a bit dated :-))"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385166942",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385166942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385166942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE2Njk0Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-28T11:11:15Z",
    "updated_at": "2018-04-28T11:11:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "In a pandas with an interned string array, would we want the `observed` keyword? I think so, but the default would stay `False`, as it is now."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385169929",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385169929",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385169929,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE2OTkyOQ==",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-28T12:02:13Z",
    "updated_at": "2018-04-28T12:02:13Z",
    "author_association": "MEMBER",
    "body": "> I would rather make a \"dict-encoded / interned string\" type than overloading Categorical with this\r\n\r\nWhile I have no objection to relying on a different (as in \"differently named\") type, which in turn might benefit from convenience functions to categorize strings (thanks for the link @jorisvandenbossche ), it seems to me that 1) there is no need to make that different dtype specifically string-ish 2) the implementation would/could be 99% identical to ``Categorical`` 3) it would be useful to be able to switch from one type to the other without re-encoding, and 4) anyway, the fact that we don't allow categories to change is a limitation of implementation, not a virtue, hopefully to be lifted some day regardless of this issue (am I wrong?)\r\n\r\nIn particular, if 3) was true (which would most certailny be the case if 2) was true), then the use of the ``observed`` keyword would be quite redundant ( @TomAugspurger ). (Which is not to say it is necessarily useless - it is mostly a matter of which is the most convenient API: what do you think @jankatins ?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385171194",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385171194",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385171194,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE3MTE5NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-28T12:25:19Z",
    "updated_at": "2018-04-28T12:25:19Z",
    "author_association": "MEMBER",
    "body": "> 4) anyway, the fact that we don't allow categories to change is a limitation of implementation, not a virtue, hopefully to be lifted some day regardless of this issue (am I wrong?)\r\n\r\nAs far as I know, this is by design (to preserve the integrity of the categorical dtype). We have eg a `union_categoricals` helper function if you want that when merging data: https://pandas.pydata.org/pandas-docs/stable/categorical.html#unioning (I seem to recall we had quite some discussion if we should use that by default in `concat` or not)\r\n\r\n> In a pandas with an interned string array, would we want the observed keyword? I think so, but the default would stay False, as it is now.\r\n\r\nThat's a bit what I meant above with that I think we should design the Categorical default behaviour for the \"categorical\" use case, and not for the \"memory efficient strings\" usecase for which it is also used in absence of a better string dtype. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385178313",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385178313",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385178313,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTE3ODMxMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-28T14:03:53Z",
    "updated_at": "2018-04-28T14:03:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> General question (in case we keep the deprecation warning): do we want to show it always? Or only in the case where you actually have unobserved values?\r\n\r\nwe *only* show it if you have a categorical in the groupers. I think this is a fine case to surface to the user to make them be explicit. Otherwise you end up showing it depending on the data, generally not a great idea."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385288154",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385288154",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385288154,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTI4ODE1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-29T22:50:48Z",
    "updated_at": "2018-04-29T22:50:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "updated, but didn't address @jorisvandenbossche comments yet."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385394180",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385394180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385394180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM5NDE4MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T13:13:23Z",
    "updated_at": "2018-04-30T13:13:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback what are your thoughts on the likelihood of an \"interned string\" extension array (for 0.24)? It'll be able to share much of the implementation with Categorical, but would have different semantics around groupby, value_counts, pivot_table, etc.\r\n\r\nAssuming we had that already, would `observed=True` be a good default *for Categorical* (it wouldn't apply to the interrned string EA)?\r\n\r\nSince we don't have that extension array today, I think this PR is still great to have for 0.23. I'm just worried about the default being `observed=True`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385398333",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385398333",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385398333,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM5ODMzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T13:29:56Z",
    "updated_at": "2018-04-30T13:29:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "well I think we *could* do a String dtype, ideally would be based on ``pyarrow`` but don't think that will be ready, we *could* store as a fixed length numpy array with offsets so that might work. I think this will be some work to do it though (was planning on int NA better)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385399023",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385399023",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385399023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM5OTAyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T13:32:43Z",
    "updated_at": "2018-04-30T13:32:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Since we don't have that extension array today, I think this PR is still great to have for 0.23. I'm just worried about the default being observed=True.\r\n\r\nI think even IF we have a string type (EA), this should still be ``observed=True``. The reason is that this can blow up a grouper very easily (or work, yet be very very slow)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/385399184",
    "html_url": "https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385399184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20583",
    "id": 385399184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTM5OTE4NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-30T13:33:24Z",
    "updated_at": "2018-04-30T13:33:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "(agreed about int NA being more useful, but let's keep that separate).\n\nI could see a use-case for an general String EA, and an InternedString EA\n(or DictEncodedString). What you're describing sounds like the general\nString type.\n\nInternedString would have the same impl as Categorical: a set of codes\nindexing into a Index of strings (instead of categories). But things like\n`_codes_for_groupby` would be different, since it would exclude unobserved\ncategories.\n\nOn Mon, Apr 30, 2018 at 8:30 AM, Jeff Reback <notifications@github.com>\nwrote:\n\n> well I think we *could* do a String dtype, ideally would be based on\n> pyarrow but don't think that will be ready, we *could* store as a fixed\n> length numpy array with offsets so that might work. I think this will be\n> some work to do it though (was planning on int NA better)\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/20583#issuecomment-385398333>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIr4_-tfHZS01jrR1bwQEyoy_ZdX5ks5ttxHYgaJpZM4TDk6b>\n> .\n>\n"
  }
]
