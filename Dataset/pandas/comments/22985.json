[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/426856582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22985#issuecomment-426856582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22985",
    "id": 426856582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNjg1NjU4Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T01:33:27Z",
    "updated_at": "2018-10-04T01:33:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let us know if you can provide a minimal example: http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427096155",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22985#issuecomment-427096155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22985",
    "id": 427096155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA5NjE1NQ==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T17:05:58Z",
    "updated_at": "2018-10-04T17:05:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@david-r-wasserman I think the problem is you have dtype=object:\r\n\r\n```python3\r\nIn [26]: pd.DataFrame({'a':pd.Series([2, 3, 1])}).interpolate()\r\nOut[26]:\r\n   a\r\n0  2\r\n1  3\r\n2  1\r\n\r\nIn [27]: pd.DataFrame({'a':pd.Series([2, 3, 1], dtype=object)}).interpolate()\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-27-87d427d43aa7> in <module>()\r\n----> 1 pd.DataFrame({'a':pd.Series([2, 3, 1], dtype=object)}).interpolate()\r\n\r\nC:\\Miniconda2\\lib\\site-packages\\pandas\\core\\generic.pyc in interpolate(self, method, axis, limit, inplace, limit_direction, downcast, **kwargs)\r\n   3668         if _maybe_transposed_self._data.get_dtype_counts().get(\r\n   3669                 'object') == len(_maybe_transposed_self.T):\r\n-> 3670             raise TypeError(\"Cannot interpolate with all NaNs.\")\r\n   3671\r\n   3672         # create/use the index\r\n\r\nTypeError: Cannot interpolate with all NaNs.\r\n```\r\n\r\n@TomAugspurger I think the `TypeError` here is confusing. The code check is that all columns of the DataFrame have dtype object, but the message says there's a problem with NaNs, even if the dataset has no NaNs."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427097385",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22985#issuecomment-427097385",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22985",
    "id": 427097385,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA5NzM4NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T17:10:00Z",
    "updated_at": "2018-10-04T17:10:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed, that's a confusing error message... It's also not really clear to me why we're doing that in the first place (and I think I wrote that code ðŸ˜„). Any investigation here would be welcome."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427115568",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22985#issuecomment-427115568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22985",
    "id": 427115568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzExNTU2OA==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T18:05:54Z",
    "updated_at": "2018-10-04T18:05:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yup, it's your commit (from 2013!), revision aff7346f3be41d1b190f311f862653b6088e2ad7 added\r\n\r\n```python3\r\n        if self._data.get_dtype_counts().get('object') == len(self.T):\r\n            raise TypeError(\"Cannot interpolate with all NaNs.\")\r\n```\r\n\r\nThat one commit added basically all the type checking currently in the function.. Only thought is that right below in the same commit is another check:\r\n\r\n```python3\r\n        if pd.isnull(index).any():\r\n            raise NotImplementedError(\"Interpolation with NaNs in the index \"\r\n                                      \"has not been implemented. Try filling \"\r\n                                      \"those NaNs before interpolating.\")\r\n```\r\n\r\nAt this point I assume you meant to write TypeError(\"Cannot interpolate with all objects\"), had the second check on the brain and typoed?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/427907327",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22985#issuecomment-427907327",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22985",
    "id": 427907327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzkwNzMyNw==",
    "user": {
      "login": "pambot",
      "id": 6526199,
      "node_id": "MDQ6VXNlcjY1MjYxOTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/6526199?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pambot",
      "html_url": "https://github.com/pambot",
      "followers_url": "https://api.github.com/users/pambot/followers",
      "following_url": "https://api.github.com/users/pambot/following{/other_user}",
      "gists_url": "https://api.github.com/users/pambot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pambot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pambot/subscriptions",
      "organizations_url": "https://api.github.com/users/pambot/orgs",
      "repos_url": "https://api.github.com/users/pambot/repos",
      "events_url": "https://api.github.com/users/pambot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pambot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-08T16:58:15Z",
    "updated_at": "2018-10-08T16:58:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I decided to just fix the error message because it's just making sure that all columns aren't `object`. Confirmed by making sure this doesn't trigger it:\r\n\r\n```\r\npd.concat((pd.DataFrame({'a':pd.Series([2, 3, 1], dtype=object)}), pd.DataFrame({'b':pd.Series([2, 3, 1])}))).interpolate()\r\n```\r\n\r\nBut this still does:\r\n\r\n```\r\npd.concat((pd.DataFrame({'a':pd.Series([2, 3, 1], dtype=object)}), pd.DataFrame({'b':pd.Series([2, 3, 1], dtype=object)}))).interpolate()\r\n```"
  }
]
