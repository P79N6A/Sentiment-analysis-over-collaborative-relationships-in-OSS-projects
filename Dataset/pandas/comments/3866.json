[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19340528",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3866#issuecomment-19340528",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3866",
    "id": 19340528,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQwNTI4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T17:14:39Z",
    "updated_at": "2013-06-12T17:14:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [1]: df2=read_csv('testpandas2.txt',index_col=0)\n\nIn [2]: df2\nOut[2]: \n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 1000000 entries, 0 to 999999\nData columns (total 1 columns):\ncolA    1000000  non-null values\ndtypes: object(1)\n\nIn [3]: from collections import Counter\n\nIn [4]: Counter(df2.colA.apply(lambda x: type(x)))\nOut[4]: Counter({<type 'int'>: 737856, <type 'str'>: 262144})\n```\n\nSo the way parsing works (when you don't specify a specifc dtyp) is that on a particular column you\nloop over all dtypes, and try to convert to an actual type; if something breaks you go to the next dtype. The\ndata is left is modified in-place, so the rows before the strings are converted to integers; when it hits the strings the parsing stops and the column is marked object\n\nso the end result is the correct dtype.\n\nyou essentially want _downcasting back to strings for object dtype_; easy enough, specify _object_ as the dtype for this column.\n\nIf you want this automatic I think we'd have to provide an option to do it, because that would be inefficient from a parsing speed as you have to copy the column for every dtype you try\n\ncan you explain why this actually matters?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19345651",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3866#issuecomment-19345651",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3866",
    "id": 19345651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQ1NjUx",
    "user": {
      "login": "martingoodson",
      "id": 1798941,
      "node_id": "MDQ6VXNlcjE3OTg5NDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1798941?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martingoodson",
      "html_url": "https://github.com/martingoodson",
      "followers_url": "https://api.github.com/users/martingoodson/followers",
      "following_url": "https://api.github.com/users/martingoodson/following{/other_user}",
      "gists_url": "https://api.github.com/users/martingoodson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martingoodson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martingoodson/subscriptions",
      "organizations_url": "https://api.github.com/users/martingoodson/orgs",
      "repos_url": "https://api.github.com/users/martingoodson/repos",
      "events_url": "https://api.github.com/users/martingoodson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martingoodson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T18:35:02Z",
    "updated_at": "2013-06-12T18:35:02Z",
    "author_association": "NONE",
    "body": "I'm not sure I understand. Why aren't there 500K integers and 500K+2\nstrings if everything after the string is encountered is parsed as a string?\n\nThis matters because if you try and aggregate using the object type column\nas a key, the results will be incorrect. You get twice as many keys as you\nactually intended. Thus, even trying to find the number of unique keys in a\ntable, a fairly basic task, will not work as expected.\n\nOn Wed, Jun 12, 2013 at 6:14 PM, jreback notifications@github.com wrote:\n\n> In [1]: df2=read_csv('testpandas2.txt',index_col=0)\n> \n> In [2]: df2\n> Out[2]:\n> <class 'pandas.core.frame.DataFrame'>\n> Int64Index: 1000000 entries, 0 to 999999\n> Data columns (total 1 columns):\n> colA    1000000  non-null values\n> dtypes: object(1)\n> \n> In [3]: from collections import Counter\n> \n> In [4]: Counter(df2.colA.apply(lambda x: type(x)))\n> Out[4]: Counter({<type 'int'>: 737856, <type 'str'>: 262144})\n> \n> So the way parsing works (when you don't specify a specifc dtyp) is that\n> on a particular column you\n> loop over all dtypes, and try to convert to an actual type; if something\n> breaks you go to the next dtype. The\n> data is left is modified in-place, so the rows before the strings are\n> converted to integers; when it hits the strings the parsing stops and the\n> column is marked object\n> \n> so the end result is the correct dtype.\n> \n> you essentially want _downcasting back to strings for object dtype_; easy\n> enough, specify _object_ as the dtype for this column.\n> \n> If you want this automatic I think we'd have to provide an option to do\n> it, because that would be inefficient from a parsing speed as you have to\n> copy the column for every dtype you try\n> \n> can you explain why this actually matters?\n> \n> â€”\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/3866#issuecomment-19340528\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19349772",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3866#issuecomment-19349772",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3866",
    "id": 19349772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQ5Nzcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T19:33:02Z",
    "updated_at": "2013-06-12T19:33:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wesm pls take a look\n\nso the int conversion stops at 262144, which is exactly 2**16 \\* 4...weird must be something odd going on\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20742638",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3866#issuecomment-20742638",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3866",
    "id": 20742638,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzQyNjM4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-10T13:42:45Z",
    "updated_at": "2013-07-10T13:42:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can repro, but fix is eluding me :)\n"
  }
]
