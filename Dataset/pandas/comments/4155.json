[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20579268",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20579268",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20579268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTc5MjY4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-07T22:56:49Z",
    "updated_at": "2013-07-07T23:16:44Z",
    "author_association": "MEMBER",
    "body": "looks nice!\n\n`visit` calls `generic_visitor` if there's no `visit_SomeASTNode` method\n\nnot sure if `Value` could be replaced by `Constant` since if look up fails and `name` is not a string then the value is used, but if `name` is a string then it will raise, since you're allowing strings that's a problem. you could do is map string to themselves\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20579658",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20579658",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20579658,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTc5NjU4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-07T23:22:17Z",
    "updated_at": "2013-07-07T23:22:22Z",
    "author_association": "MEMBER",
    "body": "did u take out `USub`?\n\nhttps://s3.amazonaws.com/archive.travis-ci.org/jobs/8829617/log.txt\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20579861",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20579861",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20579861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTc5ODYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-07T23:36:08Z",
    "updated_at": "2013-07-07T23:36:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "no but I think I need to handle the class vars differently\nI think I am overwriting the base class (I need to copy)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20580136",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20580136",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20580136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgwMTM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-07T23:56:10Z",
    "updated_at": "2013-07-07T23:56:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "class vars ok.....just looking at the 3.2 fails now....\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20580226",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20580226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20580226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgwMjI2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T00:01:44Z",
    "updated_at": "2013-07-08T00:01:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "turn out `[-1]` parses using `USub` in py3.....weird\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20580240",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20580240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20580240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgwMjQw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T00:03:12Z",
    "updated_at": "2013-07-08T00:03:42Z",
    "author_association": "MEMBER",
    "body": "shouldn't that parse as `List(elts=[USub(op=Neg, value=Num(n=1))])` or something like that (not sure I got all of the fields correct...regardless of version?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20580259",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20580259",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20580259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgwMjU5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T00:04:43Z",
    "updated_at": "2013-07-08T00:04:43Z",
    "author_association": "MEMBER",
    "body": "nope i'm wrong, py2 does it without the `USub`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20580310",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20580310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20580310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgwMzEw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T00:07:47Z",
    "updated_at": "2013-07-08T00:07:47Z",
    "author_association": "MEMBER",
    "body": "py3: `'Module(body=[Expr(value=List(elts=[UnaryOp(op=USub(), operand=Num(n=1))], ctx=Load()))])` which is what i would have expected all along, looks like py2 special cases constants\n\npy2: `'Module(body=[Expr(value=List(elts=[Num(n=-1)], ctx=Load()))])`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20580349",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20580349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20580349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgwMzQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T00:10:01Z",
    "updated_at": "2013-07-08T00:10:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "py2 is different (and actually this was a subscript op but that's ok)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20581199",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20581199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20581199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgxMTk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T01:01:04Z",
    "updated_at": "2013-07-08T01:01:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok...fixed some silly py3 issues...everything should pass now\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20582778",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20582778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20582778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgyNzc4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T02:24:15Z",
    "updated_at": "2013-07-08T02:24:41Z",
    "author_association": "MEMBER",
    "body": "so i guess assignment expressions are out of the question, for all time? Going to be difficult to disambiguate the parse if we wanted to do that later down the line, unless there's an arbitrary rule: something like `a = b` means assignment but e.g., in the context of boolean operations `a = b | b = c` `=` means `==`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20582890",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20582890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20582890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgyODkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T02:30:00Z",
    "updated_at": "2013-07-08T02:30:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "no I think u might be able to handle assignment for the ne engine\nfor pytables I am always going to do the translation (as by its nature a query expression)\nso prob just need to refactor out the assignment conversion\nso u can ignore it and I will use it\n\nI think I mentioned above that ExprVisitor should be vey general (eg having pretty much all ops defined)\nthen in sub classes u can override as needed ( and have explicit enabling of ops)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20582909",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20582909",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20582909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgyOTA5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T02:31:11Z",
    "updated_at": "2013-07-08T02:31:11Z",
    "author_association": "MEMBER",
    "body": "oh i see. yes tweak the parser in a subclass for the engine but keep reasonable parsing defaults\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20582926",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20582926",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20582926,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgyOTI2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T02:32:27Z",
    "updated_at": "2013-07-08T02:32:27Z",
    "author_association": "MEMBER",
    "body": "watch out `blaze` here we come!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20582946",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20582946",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20582946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgyOTQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T02:33:32Z",
    "updated_at": "2013-07-08T02:33:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "hahha\n\nwant to be careful about syntax though \ndon't want to go crazy\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20582978",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20582978",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20582978,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTgyOTc4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T02:35:01Z",
    "updated_at": "2013-07-08T02:35:20Z",
    "author_association": "MEMBER",
    "body": "sure lest we all start declaring brainf--k executable pseudocode\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20594446",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20594446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20594446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTk0NDQ2",
    "user": {
      "login": "meteore",
      "id": 807608,
      "node_id": "MDQ6VXNlcjgwNzYwOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/807608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meteore",
      "html_url": "https://github.com/meteore",
      "followers_url": "https://api.github.com/users/meteore/followers",
      "following_url": "https://api.github.com/users/meteore/following{/other_user}",
      "gists_url": "https://api.github.com/users/meteore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meteore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meteore/subscriptions",
      "organizations_url": "https://api.github.com/users/meteore/orgs",
      "repos_url": "https://api.github.com/users/meteore/repos",
      "events_url": "https://api.github.com/users/meteore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meteore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T09:28:56Z",
    "updated_at": "2013-07-08T09:28:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi, are you planning to also enable this for in-memory DF's? \n\nThis would be a huge improvement. At the moment df[df.a==7] does not only imply more typing (most df's having longer names and logical conditions more terms) but more importantly, it makes impossible to apply the same query to same-schema df's or to df after merging with another data frame. I.e. if I have cond = 'a=b & c<d' applicable in df, it is very advantageous to be able to reuse this expression in df3 = df.merge(df2), which is currently not the case. \n\nBut probably you have thought of this already! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20599865",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20599865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20599865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNTk5ODY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T11:39:41Z",
    "updated_at": "2013-07-08T11:39:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a sample perf test\n\n@meteore not exactly sure what you are asking\n\ncan you give a more concrete example?\n\n```\nIn [54]: df = DataFrame(randn(1000000, 10))\ndf2\nIn [55]: df2 = DataFrame(randn(*df.shape))\ndf\nIn [56]: df3 = DataFrame(randn(*df.shape))\n\nIn [57]: ex1 = 'df + df2 * 2 + df3 ** 2 * df * df + df2 ** 4'\n\nIn [58]: ex2 = 'df + df2 + df3'\n\nIn [59]: timeit pd.eval(ex1)\n10 loops, best of 3: 58.5 ms per loop\n\nIn [60]: timeit pd.eval(ex2)\n10 loops, best of 3: 53.5 ms per loop\n\nIn [61]: timeit df + df2 * 2 + df3 ** 2 * df * df + df2 ** 4\n1 loops, best of 3: 558 ms per loop\n\nIn [62]: timeit df + df2 + df3\n10 loops, best of 3: 77.2 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20605376",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20605376",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20605376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA1Mzc2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T13:35:36Z",
    "updated_at": "2013-07-08T13:39:07Z",
    "author_association": "MEMBER",
    "body": "sounds like @meteore might be asking if we're going to include method calls and/or attribute access. the answer to both for the `numexpr` engine is: maybe\n\n#### ideas about how to do it\n\none way to do this is to call the method (attribute access is a method too) on the pandas object in python and then reassign to a temporary variable (doing this recursively down the chain of methods if any). ostensibly this would work for any function too\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20605503",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20605503",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20605503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA1NTAz",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T13:37:29Z",
    "updated_at": "2013-07-08T13:58:21Z",
    "author_association": "MEMBER",
    "body": "i think @meteore is asking if we're going to allow something like\n\n`df.eval('a < b & c == d')` where `a`, `b`, `c` and `d` are columns in `df`\n\nwhich is probably not a big deal to add (no `pytables` engine here)\n\nand definitely much better than\n\n`df[(df.a < df.b) & (df.c == df.d)]`\n\nprobably just adding the scope, a la\n\n``` python\ndef eval(self, expr, enforce_scope=True, **kwargs):\n    columns = self.columns\n    env = kwargs.setdefault('env', Scope())\n    if set(env.locals) & set(env.globals) & set(columns) and enforce_scope:\n        raise NameError(\"a useful error message\")\n    else:\n        env.locals.update(self.to_dict())\n    return pd.eval(expr, **kwargs)\n```\n\nwould work\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20605939",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20605939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20605939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA1OTM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T13:44:24Z",
    "updated_at": "2013-07-08T13:47:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "i think supporting\n\n`df[\"df['a']>df['b']\"]` is pretty easy, just need to add the new methods i defined in visit for: attribute, subscript,index, slice,call,list, etc....\n\nthe assignment thing I would wait on...I mean you could do\n\n`pd.eval(\"df['a'] = df['a'] + df['b']\")`\n\nbut not sure that's _useful_\n\n`df['a'] = E(\"df['a'] + df['b']\")` I think will be the way to specify this\n\n(`E` is of course shortcut for `pd.eval`)\n\nand of course\n\n```\nfoo = ['A','B']\ndf[\"df>0 & df['a'] == foo\"] = ......\n```\n\nis quite doable with currrent impl\n\nas an FYI on this, some optimization may actually make perf worse....eg. `isin` is quite fast (and ne/nummexpr)\nprob don't handle this anyhow so the `df['a'] == foo` should be ddone in pandas space rather than ne....\n\nsome of these you can prob  deal with some maybe be hard to even figure out....\n\nthis cann get infiitly complex\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20606152",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20606152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20606152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA2MTUy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T13:47:33Z",
    "updated_at": "2013-07-08T13:47:33Z",
    "author_association": "MEMBER",
    "body": "no i wasn't suggesting assignment, i that was a typo sorry, don't think that's useful either.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20606349",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20606349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20606349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA2MzQ5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T13:50:55Z",
    "updated_at": "2013-07-08T13:51:14Z",
    "author_association": "MEMBER",
    "body": "slicing inside the string seems a bit redundant i would highly discourage users from using that syntax and just name the columns, problem there is a name clash between outer scope vars and column names, because python objects are really just namespaces\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20606615",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20606615",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20606615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA2NjE1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T13:54:37Z",
    "updated_at": "2013-07-08T13:55:52Z",
    "author_association": "MEMBER",
    "body": "@jreback do u call the method before putting into the op? or do u call it when needed?\n\nas for the previous, we could have an `enforce_scope=True` keyword argument that makes `eval` raise when column names overlap if `True` and favors column names if `False`, defaulting to `True` it would only be for frame `eval`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20607084",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20607084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20607084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA3MDg0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T14:01:24Z",
    "updated_at": "2013-07-08T14:01:24Z",
    "author_association": "MEMBER",
    "body": "see above ... i'll add that if you ok it. i think not having to type all of the `df.x1 op1 ... opN df.xN` would be nice, but is another thing to remember. but hey if you're using `eval` you might be ok with taxing your working memory a bit more ;)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20607119",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20607119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20607119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA3MTE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T14:01:51Z",
    "updated_at": "2013-07-08T14:01:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I effectively delay all op calling to the very end\n\nmy algo is a bit different then yours\n- parse the terms (which will for example turn `df.index[foo]` into the selected index (e.g. say foo is a slice or a sub-set or whatever)\n- I create 2 different pruned trees\n  - condition, which is the syntax I pass to `ne`, I have to prune to remove any `filters`, e.g. a selector which is not in the table (e.g. if you store a frame, then you can use `ne` to select on the `index`, but the `columns` becomes a filter\n  - filter, which is the inverse of condition. I actually only allow a single `andable` filter here for simplicity, e.g.\n    I don't allow right now (`columns = A | columns = B`), in theory I could but didn't on this iteration\n\nthen I pass the condition syntax to `ne` and use the `filter` to post-process\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20607348",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20607348",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20607348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA3MzQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T14:04:55Z",
    "updated_at": "2013-07-08T14:04:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "scope is easier than you think....because you have the expression and you can grab scope right there (its a tiny bit tricky because if the user wraps the expression in a `Term` then it grabs scope, then later I 'rememberr' this scope and update when I assemble the final expression\n\nso the following are equivalent\n\n`store.select('df',[Term('....'),Term('....')])`\n\nand\n\n`store.select('df',['.... & ....'])` \n\nIOW I implicity and  passed list/tuple (see my version of `Expr`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20607389",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20607389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20607389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA3Mzg5",
    "user": {
      "login": "meteore",
      "id": 807608,
      "node_id": "MDQ6VXNlcjgwNzYwOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/807608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meteore",
      "html_url": "https://github.com/meteore",
      "followers_url": "https://api.github.com/users/meteore/followers",
      "following_url": "https://api.github.com/users/meteore/following{/other_user}",
      "gists_url": "https://api.github.com/users/meteore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meteore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meteore/subscriptions",
      "organizations_url": "https://api.github.com/users/meteore/orgs",
      "repos_url": "https://api.github.com/users/meteore/repos",
      "events_url": "https://api.github.com/users/meteore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meteore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T14:05:29Z",
    "updated_at": "2013-07-08T14:05:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to clarify: what would be very useful is the following (just made up this example; I have this all the time in neurophysiology data analysis)\n\n**Now**\n\n``` python\n    closed_high = issues_df[(issues_df.severity>=2) & (issues_df.status== 'done')]\n    # I need to specify the condition again for another filter\n    closed_critical = closed_high[closed_high.severity>=4] \n```\n\n**Proposal**\n\n``` python\n    is_done = 'status=done' # or use == if better-defined\n    is_high = 'severity >=2'\n    is_critical = 'severity >=4'\n\n    # can use everywhere!\n    closed_high = issues_df[and(is_done, is_high)] \n    closed_critical = closed_high[is_critical] # one can reuse the query string if instead applying directly to issues\n```\n\nLittle details:\n- using = or == for equality, whatever is most convenient.\n- if `[ ]` too overloaded, could use `.query`\n- `is_interesting = is_done + ' & ' + is_high` should also be possible.  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20607446",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20607446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20607446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA3NDQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T14:06:29Z",
    "updated_at": "2013-07-08T14:06:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "scoping issues I use the `update` method of `Scope`, essentially taking a stack_level and updating the namespace from top-level to bottom (e.g. in reverse stack order)....seems to work (with nearer shadow variables overwriting top-level)...in practie I don't think this is a big deal.....biggest issues is to make sure that you capture the calling state\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/20607686",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4155#issuecomment-20607686",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4155",
    "id": 20607686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjA3Njg2",
    "user": {
      "login": "meteore",
      "id": 807608,
      "node_id": "MDQ6VXNlcjgwNzYwOA==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/807608?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meteore",
      "html_url": "https://github.com/meteore",
      "followers_url": "https://api.github.com/users/meteore/followers",
      "following_url": "https://api.github.com/users/meteore/following{/other_user}",
      "gists_url": "https://api.github.com/users/meteore/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meteore/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meteore/subscriptions",
      "organizations_url": "https://api.github.com/users/meteore/orgs",
      "repos_url": "https://api.github.com/users/meteore/repos",
      "events_url": "https://api.github.com/users/meteore/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meteore/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-07-08T14:09:57Z",
    "updated_at": "2013-07-08T14:09:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another little detail\n- prefixing a column name with a string signals that it is nonlocal to the current data frame.\n- and somewhat unrelated but also  very useful for relational work: if a column access results in KeyError, search amongst the named indexes before giving up.\n"
  }
]
