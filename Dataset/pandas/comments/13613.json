[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235190661",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13613#issuecomment-235190661",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13613",
    "id": 235190661,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTE5MDY2MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T07:59:06Z",
    "updated_at": "2016-07-26T07:59:06Z",
    "author_association": "MEMBER",
    "body": "The reason is because `errors='ignore'`, is well, ignored.  I think I would just wrap the current `try-except` logic as follows:\n\n``` python\ntry:\n    try:\n        for i in range(n):\n            result[i] = parse_timedelta_string(values[i])  # always raise\n    except Exception:\n        for i in range(n):\n            result[i] = convert_to_timedelta64(values[i], unit, is_coerce)\nexcept Exception:  # when is_coerce=False\n    if errors == 'raise':\n        raise\n   elif errors == 'ignore':\n        return values\nreturn iresult\n```\n\nThe reason is that one could consider the original `try-except` block as the process through which we convert to `timedelta`, then all three options for `errors` are satisfied:\n\n1) `errors='raise'`\n\nTry to convert via method 1, which fails, so we try with method 2.  If that fails, we raise the exception.\n\n2) `errors='coerce'` --> `is_coerce=True`\n\nTry to convert via method 1, which fails, so we try with method 2.  In method 2, if converting one of the elements fails, we return `NPY_NAT`.\n\n3) `errors='ignore'`\n\nTry to convert via method 1, which fails, so we try with method 2.  If that fails, we just return the original `values` array as promised in documentation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235222222",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13613#issuecomment-235222222",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13613",
    "id": 235222222,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTIyMjIyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T09:53:36Z",
    "updated_at": "2016-07-26T09:53:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah this prob needs some logic like that\n\nthis is similar to how datetime parsing works\n"
  }
]
