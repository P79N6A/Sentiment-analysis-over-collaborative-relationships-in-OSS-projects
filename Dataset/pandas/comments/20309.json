[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372450959",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20309#issuecomment-372450959",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20309",
    "id": 372450959,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ1MDk1OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T20:26:55Z",
    "updated_at": "2018-03-12T20:26:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your quoting rules seem sensible to me.\r\n\r\nFor \"See Also\" I say no to things that are in pandas' top-level namespace, at least Index / Series / DataFrame. Maybe for less well-known things like Categorical.\r\n\r\nFor Missing values: NA when referring to the concept, NaN (or NaT) when referring to a specific value. So\r\n\r\n```\r\n# docstring for isna.\r\n\r\nCheck for missing (NA) values. The values ``NaN``, ``NaT``, ... are considered missing.\r\n\r\n```\r\n\r\nFor \"label\", yes I think so. Likewise for row labels.\r\n\r\n---\r\n\r\nSome other ones: Do we use sphinx reference markup in types? I merged a couple in plotting that were like\r\n\r\n```\r\nReturns\r\n--------\r\nax : :class:`matplotlib.axes.Axes`\r\n    ...\r\n```\r\n\r\nBut that's a bit noisy. I think it'd be better to just have\r\n\r\n```\r\nax : Axes\r\n    The :class:`matplotlib.axes.Axes` this was plotted on...\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372456522",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20309#issuecomment-372456522",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20309",
    "id": 372456522,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ1NjUyMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T20:46:00Z",
    "updated_at": "2018-03-12T20:46:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should emphasize linking back to relevant sections of the user guide."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372459662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20309#issuecomment-372459662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20309",
    "id": 372459662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ1OTY2Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T20:56:42Z",
    "updated_at": "2018-03-12T20:56:42Z",
    "author_association": "MEMBER",
    "body": "> We should emphasize linking back to relevant sections of the user guide.\r\n\r\nYes, I was thinking about if we could have a separate section for this (like See Also now, but then similar box with eg \"Related User Guides\" or something like that), but that would require some changes to numpydoc to allow this. And I was also thinking of a kind of general way to do this from tagging sections in User guide with methods that should be linked to that section, and then those links could automatically be added in the docstrings (like with a Gallery, the links are also injected into the docstrings). \r\nBut since both are rather far off, more plain linking for now is a good recommendation :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372460393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20309#issuecomment-372460393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20309",
    "id": 372460393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ2MDM5Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T20:59:11Z",
    "updated_at": "2018-03-12T20:59:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "For now, I think that the extended summary is the best place for referring to the user guide."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372477539",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20309#issuecomment-372477539",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20309",
    "id": 372477539,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ3NzUzOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T22:01:28Z",
    "updated_at": "2018-03-12T22:01:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another quoting rule: exception classes like `ValueError`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372609013",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20309#issuecomment-372609013",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20309",
    "id": 372609013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjYwOTAxMw==",
    "user": {
      "login": "IHackPy",
      "id": 22932421,
      "node_id": "MDQ6VXNlcjIyOTMyNDIx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/22932421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IHackPy",
      "html_url": "https://github.com/IHackPy",
      "followers_url": "https://api.github.com/users/IHackPy/followers",
      "following_url": "https://api.github.com/users/IHackPy/following{/other_user}",
      "gists_url": "https://api.github.com/users/IHackPy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IHackPy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IHackPy/subscriptions",
      "organizations_url": "https://api.github.com/users/IHackPy/orgs",
      "repos_url": "https://api.github.com/users/IHackPy/repos",
      "events_url": "https://api.github.com/users/IHackPy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IHackPy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T09:55:55Z",
    "updated_at": "2018-03-13T09:55:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought example section too : \r\n1. We should copy our example from normal python terminal instead of IPython or jupyter.\r\n2. When we add comment with in the example and also when therir should gap b/w lines\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372761081",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20309#issuecomment-372761081",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20309",
    "id": 372761081,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc2MTA4MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-13T18:00:09Z",
    "updated_at": "2018-03-13T18:00:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "In https://github.com/pandas-dev/pandas/issues/20332 @adatasetaday mentioned \"format of axis parameters\".\r\n\r\n```\r\naxis : \"{0 or 'index', 1 or 'columns', None}, default None\"\r\n```\r\n\r\nTo what extent do we think that we can add rules like this to the linter? I'd like as much of this to be rules-based and automated."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373495419",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20309#issuecomment-373495419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20309",
    "id": 373495419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzQ5NTQxOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-15T19:28:11Z",
    "updated_at": "2018-03-15T19:28:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Should explain how we doctest warnings.\r\n\r\n```\r\ndoctest doesn't make it show and test when a warning is issued. Our approach\r\nis to include the warning as a comment in the input of the snippet.\r\n\r\ndef f(x):\r\n    warnings.warn(\"This function warns\")\r\n    return x\r\n\r\nSo in the doctest, you would write\r\n\r\n>>> f(2)\r\n... # UserWarning: This function warns\r\n2\r\n\r\nNote that the line displaying the warning starts with `...`. This makes it part of the\r\ninput so it isn't actually tested. But it doesn't interfere with the test output.\r\n```"
  }
]
