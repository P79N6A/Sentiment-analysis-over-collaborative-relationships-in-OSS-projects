[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225437820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225437820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225437820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQzNzgyMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T14:24:18Z",
    "updated_at": "2016-06-12T14:26:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Might be a bug, see the docs [here](http://pandas-docs.github.io/pandas-docs-travis/advanced.html#sorting-a-multiindex), these have been updated since 0.18.1; these should be the same. But you will have to step thru and have a look.\n\n```\nIn [10]: df2.sort_index().index.lexsort_depth\nOut[10]: 0\n\nIn [12]: df2.sort_index(level=0).index.lexsort_depth\nOut[12]: 2\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225438063",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225438063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225438063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQzODA2Mw==",
    "user": {
      "login": "zym1010",
      "id": 4273204,
      "node_id": "MDQ6VXNlcjQyNzMyMDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zym1010",
      "html_url": "https://github.com/zym1010",
      "followers_url": "https://api.github.com/users/zym1010/followers",
      "following_url": "https://api.github.com/users/zym1010/following{/other_user}",
      "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions",
      "organizations_url": "https://api.github.com/users/zym1010/orgs",
      "repos_url": "https://api.github.com/users/zym1010/repos",
      "events_url": "https://api.github.com/users/zym1010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zym1010/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T14:29:31Z",
    "updated_at": "2016-06-12T14:30:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback  right I have seen that. Thus I think the updated doc is good, without all that complicated descriptions about lexicographically sortedness. But maybe the current implementation is inconsistent with the updated doc...\n\nAnyway, I think some workarounds for all multiindex related issues are\n1. when constructing the dataframe, always use the vanilla, integer index\n2. after constructing the data in the dataframe, use `set_index` to create multiindex\n3. don't ever play around the levels of the index. Basically, don't use factors (categorical variables with orders)\n\nCurrently my workflow is compatible with the above three, so this bug is not a problem for me now, but I think this is a big issue needing some clarification.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225445901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225445901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225445901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0NTkwMQ==",
    "user": {
      "login": "zym1010",
      "id": 4273204,
      "node_id": "MDQ6VXNlcjQyNzMyMDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zym1010",
      "html_url": "https://github.com/zym1010",
      "followers_url": "https://api.github.com/users/zym1010/followers",
      "following_url": "https://api.github.com/users/zym1010/following{/other_user}",
      "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions",
      "organizations_url": "https://api.github.com/users/zym1010/orgs",
      "repos_url": "https://api.github.com/users/zym1010/repos",
      "events_url": "https://api.github.com/users/zym1010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zym1010/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T16:16:46Z",
    "updated_at": "2016-06-12T16:28:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \n\nI think the problem is due to a potential re initialization of factor levels in https://github.com/pydata/pandas/blob/4de83d25d751d8ca102867b2d46a5547c01d7248/pandas/core/frame.py#L3245-L3259.\n\nAccording to the code, if `level` is not `None` (which I believe implies index being a `MultiIndex`), then the `MultiIndex.sortlevel` is used, which respects factor level.\n\nHowever, if `level` is `None` and index is `MultiIndex`, the code will first check if it's sorted (in terms of factor levels, not naive lexicographical order). If not, then the levels will be re initialized in naive lexicographical order, and `_lexsort_indexer` will make the labels follow naive lexicographical order, yet levels are not updated when returning the new dataframe, because the reinitialized `labels` in https://github.com/pydata/pandas/blob/4de83d25d751d8ca102867b2d46a5547c01d7248/pandas/core/frame.py#L3255-L3256 is NOT used to update the original index, making the levels and labels inconsistent.\n\nThis may explain #9212, I believe. Basically, whether `sort_index()` will do naive lexicographical sorting, or factor-respecting sorting depends on whether the original index is sorted in a factor-respecting way, which looks like a bug to me.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225446791",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225446791",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225446791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0Njc5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T16:35:31Z",
    "updated_at": "2016-06-12T16:35:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "could very well be\n\ndo you want to put in place tests for this issue (and other); and make a change -- see if you can fix without breaking em anything else?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225447174",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225447174",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225447174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0NzE3NA==",
    "user": {
      "login": "zym1010",
      "id": 4273204,
      "node_id": "MDQ6VXNlcjQyNzMyMDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zym1010",
      "html_url": "https://github.com/zym1010",
      "followers_url": "https://api.github.com/users/zym1010/followers",
      "following_url": "https://api.github.com/users/zym1010/following{/other_user}",
      "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions",
      "organizations_url": "https://api.github.com/users/zym1010/orgs",
      "repos_url": "https://api.github.com/users/zym1010/repos",
      "events_url": "https://api.github.com/users/zym1010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zym1010/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T16:43:15Z",
    "updated_at": "2016-06-12T16:48:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I'd like to, though may be no time this month, and I'm a beginner into pandas, starting to use it just yesterday... But maybe this looks easy enough to me.\n\nMy main question is\n1. what's the expected behavior of `DataFrame.sort_index()`? I believe in any case, it should return a sorted index ready for slicing, but should the factor levels in naive order, or should the original factor levels be preserved?\n\nActually I found comments on https://github.com/pydata/pandas/blob/4de83d25d751d8ca102867b2d46a5547c01d7248/pandas/core/frame.py#L3253-L3254 to be funny. If `labels.is_lexsorted()`, then why any further more sorting is needed anymore?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225447489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225447489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225447489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0NzQ4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T16:49:38Z",
    "updated_at": "2016-06-12T16:49:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.sort_index()` and `.sort_index(level=0)` should yield the same index. The factors are the same (and don't change) in all cases.\n\nSee [here for the contributing docs](http://pandas.pydata.org/pandas-docs/stable/contributing.html)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225447989",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225447989",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225447989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0Nzk4OQ==",
    "user": {
      "login": "zym1010",
      "id": 4273204,
      "node_id": "MDQ6VXNlcjQyNzMyMDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zym1010",
      "html_url": "https://github.com/zym1010",
      "followers_url": "https://api.github.com/users/zym1010/followers",
      "following_url": "https://api.github.com/users/zym1010/following{/other_user}",
      "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions",
      "organizations_url": "https://api.github.com/users/zym1010/orgs",
      "repos_url": "https://api.github.com/users/zym1010/repos",
      "events_url": "https://api.github.com/users/zym1010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zym1010/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T17:00:01Z",
    "updated_at": "2016-06-12T17:00:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "looks to me simply removing https://github.com/pydata/pandas/blob/4de83d25d751d8ca102867b2d46a5547c01d7248/pandas/core/frame.py#L3255-L3256 should do. But I have one question: does `na_position` have any effect for `sort_index`? looks there can't be any `NaN` in index labels (which are integers).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225448144",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225448144",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225448144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ0ODE0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T17:02:43Z",
    "updated_at": "2016-06-12T17:02:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "there _can_ be `NaN` (though generally you shouldn't have them), behavior may be slightly odd / not completely tested though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225451128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225451128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225451128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ1MTEyOA==",
    "user": {
      "login": "zym1010",
      "id": 4273204,
      "node_id": "MDQ6VXNlcjQyNzMyMDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zym1010",
      "html_url": "https://github.com/zym1010",
      "followers_url": "https://api.github.com/users/zym1010/followers",
      "following_url": "https://api.github.com/users/zym1010/following{/other_user}",
      "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions",
      "organizations_url": "https://api.github.com/users/zym1010/orgs",
      "repos_url": "https://api.github.com/users/zym1010/repos",
      "events_url": "https://api.github.com/users/zym1010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zym1010/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T17:59:28Z",
    "updated_at": "2016-06-12T18:19:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks that removing those lines will undo #8017. Actually, the current version of pandas (0.18.1) won't have same behavior on `sort_index(level=0)` and `sort_index()` on the example dataframe in that one either. Looks that adding columns with a multiindex is really troublesome.\n\nI think the fundamental problem is that when using a multindex, each subindex in it becomes a categorical variable implicitly (labels and levels), including things that are not categorical in nature, such as float.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225453155",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225453155",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225453155,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTQ1MzE1NQ==",
    "user": {
      "login": "zym1010",
      "id": 4273204,
      "node_id": "MDQ6VXNlcjQyNzMyMDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zym1010",
      "html_url": "https://github.com/zym1010",
      "followers_url": "https://api.github.com/users/zym1010/followers",
      "following_url": "https://api.github.com/users/zym1010/following{/other_user}",
      "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions",
      "organizations_url": "https://api.github.com/users/zym1010/orgs",
      "repos_url": "https://api.github.com/users/zym1010/repos",
      "events_url": "https://api.github.com/users/zym1010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zym1010/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-12T18:41:56Z",
    "updated_at": "2016-06-12T18:44:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Basically I don't think given the current implementation, one can tell the difference between \"true\" `is_lexsorted()` and accidental `is_lexsorted()` due to the fact that when there's a new value added to a multiindex, it's always in the back (so if an multiindex is sorted in the beginning, it will be always sorted when adding more values to it). Maybe add some flag, say `flush` to `sort_index`, and let users choose whether to reconstruct the index or not.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225876434",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225876434",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225876434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTg3NjQzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-14T13:12:46Z",
    "updated_at": "2016-06-14T13:12:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "its possible that issue was confused because it exposed a printing issue.\n\nI don't think there is any difference between true lexsorted and accidental, except that accidental might just be not recorded as such (so its a bug in keeping state).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/225914529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13431#issuecomment-225914529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13431",
    "id": 225914529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTkxNDUyOQ==",
    "user": {
      "login": "zym1010",
      "id": 4273204,
      "node_id": "MDQ6VXNlcjQyNzMyMDQ=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4273204?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zym1010",
      "html_url": "https://github.com/zym1010",
      "followers_url": "https://api.github.com/users/zym1010/followers",
      "following_url": "https://api.github.com/users/zym1010/following{/other_user}",
      "gists_url": "https://api.github.com/users/zym1010/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zym1010/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zym1010/subscriptions",
      "organizations_url": "https://api.github.com/users/zym1010/orgs",
      "repos_url": "https://api.github.com/users/zym1010/repos",
      "events_url": "https://api.github.com/users/zym1010/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zym1010/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-14T15:14:27Z",
    "updated_at": "2016-06-14T15:14:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "as you can see from the example in #8017, although `print` gives correct result, the actual index level for the float index is wrong, and it's not lexsorted, not ready for slicing.\n\n``` python\nIn [1]: import pandas as pd\n\nIn [2]: import numpy as np\n\nIn [3]:\n\nIn [3]: np.random.seed(0)\n\nIn [4]: data = np.random.randn(3,4)\n\nIn [5]:\n\nIn [5]: df_multi_float = pd.DataFrame(data, index=list('def'), columns=pd.MultiIndex.from_tuples([('red', i) for i in [1., 3., 2., 5.]]))\n\nIn [6]: df_multi_float[('red', 4.0)] = 'world'\n\nIn [7]: a=df_multi_float.sort_index(axis=1)\n\nIn [8]: a\nOut[8]:\n        red\n        1.0       2.0       3.0    4.0       5.0\nd  1.764052  0.978738  0.400157  world  2.240893\ne  1.867558  0.950088 -0.977278  world -0.151357\nf -0.103219  0.144044  0.410599  world  1.454274\n\nIn [9]: a.columns\nOut[9]:\nMultiIndex(levels=[[u'red'], [1.0, 2.0, 3.0, 5.0, 4.0]],\n           labels=[[0, 0, 0, 0, 0], [0, 1, 2, 4, 3]])\n\nIn [10]: pd.__version__\nOut[10]: u'0.18.1'\n\nIn [11]: a.columns.is_lexsorted()\nOut[11]: False\n```\n"
  }
]
