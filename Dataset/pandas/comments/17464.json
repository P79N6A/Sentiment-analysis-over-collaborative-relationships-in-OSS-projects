[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/327861281",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17464#issuecomment-327861281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17464",
    "id": 327861281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzg2MTI4MQ==",
    "user": {
      "login": "colin1alexander",
      "id": 3209516,
      "node_id": "MDQ6VXNlcjMyMDk1MTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3209516?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/colin1alexander",
      "html_url": "https://github.com/colin1alexander",
      "followers_url": "https://api.github.com/users/colin1alexander/followers",
      "following_url": "https://api.github.com/users/colin1alexander/following{/other_user}",
      "gists_url": "https://api.github.com/users/colin1alexander/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/colin1alexander/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/colin1alexander/subscriptions",
      "organizations_url": "https://api.github.com/users/colin1alexander/orgs",
      "repos_url": "https://api.github.com/users/colin1alexander/repos",
      "events_url": "https://api.github.com/users/colin1alexander/events{/privacy}",
      "received_events_url": "https://api.github.com/users/colin1alexander/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T17:00:27Z",
    "updated_at": "2017-09-07T17:00:27Z",
    "author_association": "NONE",
    "body": "The `midx` returned as constructed above is as follows:\r\n\r\n```\r\nMultiIndex(levels=[[0, 1], \r\n                   [0, 0, 1, 1]],\r\n           labels=[[0, 0, 0, 0, 1, 1, 1, 1], \r\n                   [0, 0, 1, 1, 0, 0, 1, 1]],\r\n           names=[u'idx0', u'idx1'])\r\n```\r\n\r\nWhereas typical construction would be:\r\n\r\n```\r\nmidx = pd.MultiIndex.from_product([[0, 1], [0, 0, 1, 1]], names=['idx0', 'idx1'])\r\n>>> midx\r\nMultiIndex(levels=[[0, 1], \r\n                   [0, 1]],\r\n           labels=[[0, 0, 0, 0, 1, 1, 1, 1], \r\n                   [0, 0, 1, 1, 0, 0, 1, 1]],\r\n           names=[u'idx0', u'idx1'])\r\n```\r\nUsing the typical construction,  indexing via `df.loc[[(0, 1)]]` appears to behave as expected.\r\n\r\nI believe the issue here is how this indexing handles duplicates in one of the levels (i.e. the `1`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/327954381",
    "html_url": "https://github.com/pandas-dev/pandas/issues/17464#issuecomment-327954381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/17464",
    "id": 327954381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzk1NDM4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T23:23:19Z",
    "updated_at": "2017-09-07T23:24:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "your directly constructing the MultiIndex is violating guarantees, namely that the levels are each unique. We don't explicitly check this as the public constructors guarantee this. I suppose we could check this when ``verify_integrity=True``.\r\n\r\nwant to do a PR for this?\r\n\r\nto clarify, you certainly can have a non-unique MultiIndex (though generally discouraged as they are not that performant), but you would have duplicate ``labels``, never ``level`` values."
  }
]
