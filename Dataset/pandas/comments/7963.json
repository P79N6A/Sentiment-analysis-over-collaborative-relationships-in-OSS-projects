[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51609747",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51609747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51609747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjA5NzQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T14:32:51Z",
    "updated_at": "2014-08-08T14:32:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "`is_dst` should accept a `boolean` _or_ and `ndarray-like` array (equal length to the series), check this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51610269",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51610269",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51610269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjEwMjY5",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T14:37:02Z",
    "updated_at": "2014-08-08T14:37:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "It does, that's why it's ndarray rather than a typed ndarray.  I will add a test.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51611040",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51611040",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51611040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjExMDQw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T14:42:30Z",
    "updated_at": "2014-08-08T14:42:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "so\n\n```\ndr = date_range(datetime(2011, 11, 6, 0), periods=5,\n                        freq=datetools.Hour())\n```\n\nthese should both work (accept a list-like, use `com.is_list_like` to detect), then convert to a ndarray (you may need to do in a try-except in case its non-convertible)\n\n```\ndr.tz_localize('US/Eastern',is_dst=True)\ndr.tz_localize('US/Eastern',is_dst=[1,1,0,0,0])\n```\n\nalso if `is_dst` is not None and `infer_dst` is True that should raise (ambiguous options)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51611778",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51611778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51611778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjExNzc4",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T14:48:31Z",
    "updated_at": "2014-08-08T14:48:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I misunderstood.  Right now [1,1,0,0,0] or [True,True,False,False,False] are what are supported.  I'd almost rather have it be explicit.  If the times aren't ambiguous then `is_dst` doesn't really do anything.\n\n`is_dst` and `infer_dst` does raise.  I didn't add a test, though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51612071",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51612071",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51612071,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjEyMDcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T14:50:51Z",
    "updated_at": "2014-08-08T14:50:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm, ok then so passing a single boolean is meaning-less (then default it to `None` and make it an error if its not-list like then).\n\nand make the doc-string clear (for both this and `infer_dst`)\n\nare you sure that its not better to simply make this one option?\n\ne.g.\n\n`infer_dst=True/False/boolean-list-like` ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51612785",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51612785",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51612785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjEyNzg1",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T14:56:17Z",
    "updated_at": "2014-08-08T14:56:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I do default to None and if the length is not the same as the passed values it errors.  \n\nI guess we could put it in infer, although one really isn't inferring at that point, but I don't know if it is worth the extra argument.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51613076",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51613076",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51613076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjEzMDc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T14:58:34Z",
    "updated_at": "2014-08-08T14:58:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "_really_ should change the arg to:\n\n`is_dst=None|boolean-like-list|'infer'` (and just drop `infer_dst`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51613781",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51613781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51613781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjEzNzgx",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T15:03:45Z",
    "updated_at": "2014-08-08T15:03:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "How do we handle that from a backwards-compatibility standpoint?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51614284",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51614284",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51614284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjE0Mjg0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T15:07:34Z",
    "updated_at": "2014-08-08T15:07:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "easy, deprecate `infer_dst` on the public methods (we are going to completely eliminate on the low-level stuff), see https://github.com/pydata/pandas/blob/master/pandas/core/frame.py#L2575.\n\nThen add the new kw. You could need to process the old keyword if it has a value passed and translate to the new kw. (do this at the very top-level of the functions). Then simply pass the new kw to the lower level stuff and do your thing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51614374",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51614374",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51614374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjE0Mzc0",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-08T15:08:12Z",
    "updated_at": "2014-08-08T15:08:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "K, I do like this better.  I will update.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51725495",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51725495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51725495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzI1NDk1",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-10T20:03:02Z",
    "updated_at": "2014-08-10T20:03:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Updated using the `ambiguous` argument.  I'll update the docs once the code looks good.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51727798",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51727798",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51727798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzI3Nzk4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-10T21:23:21Z",
    "updated_at": "2014-08-10T21:26:04Z",
    "author_association": "MEMBER",
    "body": "some remarks:\n- Is this API break necessary? As far as I understand, you want to add new functionality that does not really fit under the existing keyword `infer_dst`? But you could also add a second keyword to not break the API?\n- The way you implemented it now seems backwards incompatible (not just deprecating), as True/False (the previous options for `infer_dst`) are not valid options anymore? So it's not only changing the keyword name, but also the values. The values True/False should at least also be deprecated first, not just removed I think. \n- About the new keyword name `ambiguous`, this name seems a bit 'ambiguous' to me .. :-) Just joking, but to say that something like `infer_dst` and `is_dst` is much more explicit that it is about the handling of DST ambiguities, so I personally like something like that more.\n\nFurthermore, you said you still have to update the docs, but two ideas for that: I would provide some examples in the docstring to make the different options of the new kwarg more clear. And the DST handling can maybe also be promoted to it's own subsection within 'Time Zone Handling' in timeseries.rst.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51732049",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51732049",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51732049,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzMyMDQ5",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T00:12:25Z",
    "updated_at": "2014-08-11T00:12:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "-Two people both suggested the change and it seems to make sense.  The two keyword arguments refer to the same thing and are mutually exclusive so it makes sense to move it into one.\n-The old method of True/False still works, it's just not documented as it doesn't make sense under the new construct.  Nevertheless, all old code will work and it's explicitly tested for.\n-I think in the context of `tz_localize`, ambiguous makes sense.  Both `infer_dst` and `is_dst` are very specific to instances of how to treat ambiguous times.  I was originally going to go with `is_dst`, but @ischwabacher suggested the change and I went with it (see the issue for a more thorough description).  I like it for now and I spent enough time futzing with it already.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51735593",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51735593",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51735593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzM1NTkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T01:59:03Z",
    "updated_at": "2014-08-11T01:59:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rockg I agree \n\nI think this is a pretty speciality case but is useful for those who need it (and doesn't impact others)\n\nis th NaT argument a string? (I think it should be for consistency but 'nat' is clear I think)\n\n@ischwabacher ok with the args and concept?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51735979",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51735979",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51735979,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzM1OTc5",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T02:09:21Z",
    "updated_at": "2014-08-11T02:09:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, it's a string.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51806184",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51806184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51806184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODA2MTg0",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T16:42:58Z",
    "updated_at": "2014-08-11T16:42:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Other than the doc note above, LGTM.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51807970",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51807970",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51807970,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODA3OTcw",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T16:56:49Z",
    "updated_at": "2014-08-11T16:56:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is a change from how it works now.  True is translated into 'infer' (which I think is what you are intending by your comments).  Do we want that to be the default as it's a change as it currently raises an Exception?  I would almost rather leave it as an exception as users need to watch and understand how their data is being translated across transitions.  These nuances are easily missed and mishandled by users.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51808162",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51808162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51808162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODA4MTYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T16:58:29Z",
    "updated_at": "2014-08-11T16:58:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "the default should not change (if you want to propose that, that's a separate issue).\n\nso since `infer_dst=False` is currently the default, then `abmiguous=None` (or equivalent) should be the default. I agree that a user will have to explicity set this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51811706",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51811706",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51811706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODExNzA2",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T17:24:23Z",
    "updated_at": "2014-08-11T17:24:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm... I would expect with this API that `True` be broadcast to mean effectively `is_dst=True`.  So you could do this:\n\n``` python\n\nIn [1]: import pandas as pd\n\nIn [2]: pd.date_range('2013-11-3', periods=25, freq='H')\nOut[2]: \n<class 'pandas.tseries.index.DatetimeIndex'>\n[2013-11-03 00:00:00, ..., 2013-11-04 00:00:00]\nLength: 25, Freq: H, Timezone: None\n\nIn [3]: _.tz_localize('America/Chicago', ambiguous=True)\nOut[3]:\n<class 'pandas.tseries.index.DatetimeIndex'>\n[2013-11-03 00:00:00-05:00, ..., 2013-11-04 00:00:00-06:00]\nLength: 25, Freq: None, Timezone: America/Chicago\n\nIn [4]: _.hour\nOut[4]: \narray([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n       17, 18, 19, 20, 21, 22, 23,  0])\n\nIn [5]: np.diff(Out[3].values) / pd.offsets.Hour(1).nanos\nOut[5]: \narray([1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n       1], dtype='timedelta64[ns]')\n\n```\n\nWe should probably have a kwarg for handling nonexistent times, too, since there are multiple options for them; we could take the offset before the discontinuity and yield a time after the discontinuity, or vice versa, or we could just return the time at the boundary, or we could return `NaT`, or we could raise.  Or, come to that, we could return a non-normalized time so that `date_range` could agree with incrementally adding to a time, but that seems horrible.\n\nI didn't think about the fact that `raise` is the current default behavior; I agree that changing that is a separate decision.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51812521",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51812521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51812521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODEyNTIx",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T17:30:14Z",
    "updated_at": "2014-08-11T17:30:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Passing ambiguous in your example does nothing as there are no duplicate hours (you need to have duplicate 1:00, 1:00 for it to do anything).  True is just 'infer' (although it's merely there to support the old argument when 'infer_dst' was a bool).  Further, the bool-ndarray _only_ applies to the transition hours, not any times that tz_localize will handle appropriately otherwise.  The ambiguous logic only comes into effect when the times are ambiguous.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51814540",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51814540",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51814540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODE0NTQw",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T17:45:53Z",
    "updated_at": "2014-08-11T17:45:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "But the second time in the range _is_ ambiguous.  `'infer'` won't help because it's not duplicated (we don't _want_ it to be duplicated), but adding `ambiguous=True` does nothing for the other 24 times and only specifies that we should resolve the one ambiguous time to its first occurrence.  Then `t.hour` is constant between successive elements of `Out[3]`, which is an unintuitive behavior for most purposes but was the behavior I needed for the project that got me using pandas in the first place.  This is another reason why `is_dst` is misleading: most of the times aren't in DST, but we don't care because we don't want any _ambiguous_ times to resolve in standard time.\n\nIf we want `True` to mean `'infer'`, maybe we should just deprecate `infer_dst` rather than removing it, and have it set `ambiguous='infer'`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51815128",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51815128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51815128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODE1MTI4",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T17:50:16Z",
    "updated_at": "2014-08-11T17:50:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "`infer_dst` is deprecated and in the code `ambiguous=True` is set to 'infer' (check tslib.pyx) in my commit.  \n\n'infer' or True will not work in your example.  If you pass in the bool-array you will get the behavior you expect.  'infer' only works when there are two ambiguous times, but less or more than that you need to explicitly tell it through the array.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51825962",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51825962",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51825962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODI1OTYy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T19:09:43Z",
    "updated_at": "2014-08-11T19:10:09Z",
    "author_association": "MEMBER",
    "body": "@rockg What @ischwabacher means (I think), is to only deprecate `infer_dst` and not to _replace_ it by `ambiguous`. So for now keep both as seperate options, but deprecate `infer_dst` pointing users of `infer_dst=True` to `ambiguous='infer'`. \nThis way `True/False` can be used for other things (eg the behaviour @ischwabacher describes which is in line with the behaviour of `is_dst` I think?) because it does not have to be the same as `'infer'`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51827206",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51827206",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51827206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODI3MjA2",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T19:19:20Z",
    "updated_at": "2014-08-11T19:19:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I used the `deprecate_kwarg` decorate which replaces `infer_dst` with `ambiguous` behind the scenes.  So it's only deprecated.  I think we should be able to add a message to the deprecate_kwarg decorator to the effect of \"the meaning of True may change in future versions, change to `ambiguous='infer'`\".  I'm not in favor of adding infer_dst back to the function calls.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51828118",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51828118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51828118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODI4MTE4",
    "user": {
      "login": "ischwabacher",
      "id": 4306187,
      "node_id": "MDQ6VXNlcjQzMDYxODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4306187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ischwabacher",
      "html_url": "https://github.com/ischwabacher",
      "followers_url": "https://api.github.com/users/ischwabacher/followers",
      "following_url": "https://api.github.com/users/ischwabacher/following{/other_user}",
      "gists_url": "https://api.github.com/users/ischwabacher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ischwabacher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ischwabacher/subscriptions",
      "organizations_url": "https://api.github.com/users/ischwabacher/orgs",
      "repos_url": "https://api.github.com/users/ischwabacher/repos",
      "events_url": "https://api.github.com/users/ischwabacher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ischwabacher/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T19:26:21Z",
    "updated_at": "2014-08-11T19:26:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Exactly what @jorisvandenbossche said, only I missed that `infer_dst` is still there and deprecated.  Derf.  It might be nice for `deprecate_kwarg` to be able to transform its inputs-- I'll add a PR for that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51828140",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51828140",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51828140,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODI4MTQw",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T19:26:31Z",
    "updated_at": "2014-08-11T19:26:31Z",
    "author_association": "MEMBER",
    "body": "Yes, for the behaviour I described above, you cannot use `deprecate_kwarg`. As this only works for merely a renaming of a kwarg, not for changing behaviour.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51828609",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51828609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51828609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODI4NjA5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T19:30:20Z",
    "updated_at": "2014-08-11T19:30:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rockg you prob need to do a 'manual' deprecation here https://github.com/pydata/pandas/blob/master/pandas/core/frame.py#L1279 for an example to maybe have more control (ironically that is an older example which _could_ use the decorator)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51828874",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51828874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51828874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODI4ODc0",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T19:32:36Z",
    "updated_at": "2014-08-11T19:32:36Z",
    "author_association": "MEMBER",
    "body": "@rockg About adding back `infer_dst` to the function call (but still deprecated as it is now), the question is more about the API for `ambiguous`: _if_ we want to use `True/False` for something else than 'infer'/'raise', then we should just do that (that is the possibility we have now because we are changing the keyword) and don't let us stop from doing that because it is a little bit more code to deprecate `infer_dst`. \n(BTW, you can also work with `**kwarg` if you really don't want it to show up in the function call)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/51830038",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-51830038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 51830038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxODMwMDM4",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-11T19:42:27Z",
    "updated_at": "2014-08-11T19:42:27Z",
    "author_association": "MEMBER",
    "body": "@rockg and then some answers to the other points:\n- personally I think that having two mutually exclusive keywords is not really a problem (you can provide nice error message for that), certainly if it would lead to a cleaner API instead of one overloaded keyword. But for this case, I don't have a strong opinion, so it's OK, discussion over.\n- About (not) documenting the old True/False options: in case we keep it as it is now in the PR, I think we should choose to either deprecate those values (and thus provide a deprecation warning) or document it. As it is not a good idea to have some not described behaviour of a keyword I think.\n- About the name of the keyword argument (`ambiguous` vs `is_dst`/ `handle_dst` ...): let me explain why I said it: I think for the name of a kwarg, we should ask ourselves: _\"which question does it answer?\"_ And so I was thinking: the `True/False` in the bool array is the answer on \"Is this timestamp a DST?\" And not on \"Is this timestamp ambiguous\". And in this reasoning I did find `is_dst` much more logical.  \n  But I now understand that it is not as simple as that .. :-) (I have to admit, I am not really familiar with this, but I think in that way it is just a good exercise to see if the docs are understandable for somebody like me!)\n\nAnd +1 on renaming the default from None to the more explicit `'raise'`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52036773",
    "html_url": "https://github.com/pandas-dev/pandas/pull/7963#issuecomment-52036773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7963",
    "id": 52036773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDM2Nzcz",
    "user": {
      "login": "rockg",
      "id": 3195015,
      "node_id": "MDQ6VXNlcjMxOTUwMTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/3195015?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rockg",
      "html_url": "https://github.com/rockg",
      "followers_url": "https://api.github.com/users/rockg/followers",
      "following_url": "https://api.github.com/users/rockg/following{/other_user}",
      "gists_url": "https://api.github.com/users/rockg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rockg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rockg/subscriptions",
      "organizations_url": "https://api.github.com/users/rockg/orgs",
      "repos_url": "https://api.github.com/users/rockg/repos",
      "events_url": "https://api.github.com/users/rockg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rockg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-13T11:29:25Z",
    "updated_at": "2014-08-13T11:29:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think we are all set with the latest commit.  I added back `infer_dst` and added deprecation messages to the three places it could be used.  Docs/doc strings were updated and default argument is now 'raise'. \n\n1b60d14 has the merge conflict but I can't get rid of it.  I went to rebase but only 1b60d14 is there, c52204a is not (however it shows up in the rebase except below...not modifiable but saying rebasing that commit).  Any thoughts?\n\n```\npick 70a17da COMPAT: capture chain indexing even on single-dtyped\npick 4a23a84 ENH/CLN: add HistPlot class inheriting MPLPlot\npick 1b60d14 New \"ambiguous\" argument in tz_localize to enhance support for ways of resolving transition times ('infer', dot indicators, 'NaT', and 'raise')\n\n# Rebase fa63e76..c52204a onto fa63e76\n```\n\nAlso, another git question.  Usually I do git fetch upstream, git merge upstream/master, git reset --hard.  After the second step when running git status there are a bunch of \"Changes to be committed\", presumably all the changes that were committed on master since my last fetch.  Usually git reset --hard removes all of these can I can continue on.  However, when there's a merge conflict I need to resolve the conflict, add the file and then commit which would then commit all of these changes.  Is that okay or should I be doing this some other way?\n"
  }
]
