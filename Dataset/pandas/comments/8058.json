[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52522275",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8058#issuecomment-52522275",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8058",
    "id": 52522275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTIyMjc1",
    "user": {
      "login": "l736x",
      "id": 1564485,
      "node_id": "MDQ6VXNlcjE1NjQ0ODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1564485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l736x",
      "html_url": "https://github.com/l736x",
      "followers_url": "https://api.github.com/users/l736x/followers",
      "following_url": "https://api.github.com/users/l736x/following{/other_user}",
      "gists_url": "https://api.github.com/users/l736x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l736x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l736x/subscriptions",
      "organizations_url": "https://api.github.com/users/l736x/orgs",
      "repos_url": "https://api.github.com/users/l736x/repos",
      "events_url": "https://api.github.com/users/l736x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l736x/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-18T17:03:33Z",
    "updated_at": "2014-08-18T17:03:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Related to #4982 and #4983\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52523831",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8058#issuecomment-52523831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8058",
    "id": 52523831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTIzODMx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-18T17:15:03Z",
    "updated_at": "2014-08-18T17:15:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think should raise `TypeError`, as comparing a timestamp and an int is very ambiguous depending on the units.\n\nThat said I think its easy to put a try: except: around this comparison, catch the `TypeError` (and ignore it). \n\nmight also create a small function in core/common.py to make this more transparent (as it might be used elsewhere)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52548731",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8058#issuecomment-52548731",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8058",
    "id": 52548731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ4NzMx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-18T20:18:58Z",
    "updated_at": "2014-08-18T20:18:58Z",
    "author_association": "MEMBER",
    "body": "@jreback Actually, I think `__equals__` should return `False`. Well behaved Python objects (OK, `np.ndarray` excepted) should never raise a `TypeError` for equality checks.\n\ne.g., even on Python 3:\n\n```\nIn [1]: None < 23\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-1-d368f011d7a8> in <module>()\n----> 1 None < 23\n\nTypeError: unorderable types: NoneType() < int()\n\nIn [2]: None == 23\nOut[2]: False\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52564240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8058#issuecomment-52564240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8058",
    "id": 52564240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTY0MjQw",
    "user": {
      "login": "l736x",
      "id": 1564485,
      "node_id": "MDQ6VXNlcjE1NjQ0ODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1564485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l736x",
      "html_url": "https://github.com/l736x",
      "followers_url": "https://api.github.com/users/l736x/followers",
      "following_url": "https://api.github.com/users/l736x/following{/other_user}",
      "gists_url": "https://api.github.com/users/l736x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l736x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l736x/subscriptions",
      "organizations_url": "https://api.github.com/users/l736x/orgs",
      "repos_url": "https://api.github.com/users/l736x/repos",
      "events_url": "https://api.github.com/users/l736x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l736x/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-18T22:24:24Z",
    "updated_at": "2014-08-18T22:24:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @shoyer , I think in general it makes sense that `Timestamp == anything_else` returns just False.\nPlus, in this way you don't have to patch the _maybe_match_name() function, nor create an ad hoc function to mask the comparison. (my 2 cents)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52564490",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8058#issuecomment-52564490",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8058",
    "id": 52564490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTY0NDkw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-18T22:26:52Z",
    "updated_at": "2014-08-18T22:26:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@l736x well go ahead and put up a pr for that\nand see if anything breaks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52565414",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8058#issuecomment-52565414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8058",
    "id": 52565414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTY1NDE0",
    "user": {
      "login": "l736x",
      "id": 1564485,
      "node_id": "MDQ6VXNlcjE1NjQ0ODU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1564485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l736x",
      "html_url": "https://github.com/l736x",
      "followers_url": "https://api.github.com/users/l736x/followers",
      "following_url": "https://api.github.com/users/l736x/following{/other_user}",
      "gists_url": "https://api.github.com/users/l736x/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l736x/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l736x/subscriptions",
      "organizations_url": "https://api.github.com/users/l736x/orgs",
      "repos_url": "https://api.github.com/users/l736x/repos",
      "events_url": "https://api.github.com/users/l736x/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l736x/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-18T22:37:46Z",
    "updated_at": "2014-08-18T22:37:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm sorry but I'm a humble reporter of bugs.\nI totally lack the competence to touch that code, especially because, as I understand, it's in the Cython part, which I plainly do not know (I stop where pdb stops)\nI was just suggesting what seemed to me a simpler way to handle the problem.\n"
  }
]
