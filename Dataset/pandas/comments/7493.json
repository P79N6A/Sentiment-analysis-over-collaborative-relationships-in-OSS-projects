[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46424604",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-46424604",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 46424604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI0NjA0",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T11:39:38Z",
    "updated_at": "2014-06-18T11:39:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "One possible reason is that the assignment changes dtype: `np.random.rand` returns floats and you're assigning whole columns to integers which causes reallocations in dataframe storage.  All subsequent runs of `%time diag(cor, assets)` are back at millisecond level.  So, the real question here is whether pandas should coerce columns during whole-column assignments and if it should why it doesn't.\n\nAlso, vectorization will probably not help here, `diag_vec` as defined below runs in approximately the same time:\n\n``` python\ndef diag_vec(cor, assets):\n    cor.loc[:, [(a, a) for a in assets]] = 1\n```\n\nFor hardcore optimizations, you could probably use the fact that your dataframe is monotype to your advantage: in this case `cor.values` is a numpy view into the frame values and you can get away with smth like that:\n\n``` python\ndef diag_monotype(cor, assets):\n    assert (cor.dtypes[1:] == cor.dtypes[0]).all()\n    col_indices = cor.columns.get_indexer([(a,a) for a in assets])\n    cor.values[:, col_indices] = 1.\n```\n\nNumpy doesn't do implicit type conversions, so it'll work as expected and do it blazingly fast.  Beware though:\n- if `cor` contains different dtypes, then `cor.values` is a temporary rather than a view and such assignments will not propagate back into `cor`\n- date/time handling in pandas is far better than in numpy and working directly with numpy datetime/timedelta containers will require even more hacks on top of that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46424925",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-46424925",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 46424925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI0OTI1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T11:42:53Z",
    "updated_at": "2014-06-18T11:42:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Oh, and it may not be obvious from my answer that the immediate fix for your code would be to change the constant `1` which is of type `int` to `1.0` which is of type `float`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46424987",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-46424987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 46424987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI0OTg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T11:43:52Z",
    "updated_at": "2014-06-18T11:51:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I only see a very minor (6->12ms) degredation\nnot sure what you are timing\n\n```\nIn [41]: pd.__version__\nOut[41]: '0.14.0'\n\nIn [42]: %timeit diag(cor,assets)\n100 loops, best of 3: 17.9 ms per loop\n```\n\nHere's a better way\n\n```\nIn [43]: %timeit cor.ix[:,[ (asset,asset) for asset in assets ]] = 1\n100 loops, best of 3: 12 ms per loop\n```\n\nEdit:\n\nyes mine includes the amortized effect of the type conversion\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46427137",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-46427137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 46427137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI3MTM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T12:06:41Z",
    "updated_at": "2014-06-18T12:06:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is included in all timings\n\n```\nIn [88]: %timeit cor.copy()\n10 loops, best of 3: 65.6 ms per loop\n```\n\n```\nIn [78]: def f1(x):\n   ....:     cor = x.copy()\n   ....:     cor.ix[:,[ (asset,asset) for asset in assets ]] = 1\n   ....:     \n\nIn [79]: def f2(x):\n   ....:     cor = x.copy()\n   ....:     cor.ix[:,[ (asset,asset) for asset in assets ]] = 1.0\n   ....:     \n\nIn [80]: def f3(x):\n   ....:     cor = x.copy()\n   ....:     for asset in assets:\n   ....:         cor.ix[:,(asset,asset)] = 1\n   ....:         \n\nIn [81]: def f4(x):\n   ....:     cor = x.copy()\n   ....:     cor[[ (asset,asset) for asset in assets ]] = 1.0\n   ....:     \nIn [86]: def f5(x):\n   ....:     cor = x.copy()\n   ....:     cor[[ (asset,asset) for asset in assets ]] = 1\n   ....:     \n\n```\n\n```\nIn [82]: %timeit f1(cor)\n1 loops, best of 3: 2.42 s per loop\n\nIn [83]: %timeit f2(cor)\n10 loops, best of 3: 76.7 ms per loop\n\nIn [84]: %timeit f3(cor)\n1 loops, best of 3: 2.5 s per loop\n\nIn [85]: %timeit f4(cor)\n10 loops, best of 3: 76.7 ms per loop\n\nIn [87]: %timeit f5(cor)\n1 loops, best of 3: 2.45 s per loop\n\n```\n\nAssiging via `ix.[:,columns] =` is de-facto the same as `[columns] =`\nso dtypes are by definition coerced (this makes assignment consistent). Note that a partial assignment (`.ix[rows,columns]` ) will NOT result in coercion (even if its possible)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46427498",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-46427498",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 46427498,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI3NDk4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T12:11:51Z",
    "updated_at": "2014-06-18T12:11:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davaco so bottom line is as a user, you MUST pay attention to dtype coercion, and assignment, ESPECIALLY when using multi-indexes. \n\nIts not always obvious what the most performant path is. Almost always a straight loop is NOT the most efficient, especially with assignement. These are separate operations and pandas DOES NOT see them all at once. A list-like however, DOES result in pandas seeing them all at once, so oftentimes is it much more performant.\n\nI would encourage you to look at `%prun` if you find that performance is not what you would expect.\n\nPandas has many upgrades in features for new versions; it is possible that certain cases can lose performance (though we have an extensive performance test suite for exactly this reason). That said, their are MANY paths thru the indexing code so it is quite tricky.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46428865",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-46428865",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 46428865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI4ODY1",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T12:28:36Z",
    "updated_at": "2014-06-18T12:28:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "> A list-like however, DOES result in pandas seeing them all at once, so oftentimes is it much more performant.\n\nAs a sidenote: It appears that there's potential for improvement if I read the debugger trace right. `BlockManager.set(...)` is called once for each item even for list-like item assignment which causes N reallocations instead of just one if the types don't match and I'm pretty sure I was anticipating vectorized assignment, so the optimization may be rather simple. I'll add this to my backlog.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46429265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-46429265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 46429265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDI5MjY1",
    "user": {
      "login": "davaco",
      "id": 60383,
      "node_id": "MDQ6VXNlcjYwMzgz",
      "avatar_url": "https://avatars0.githubusercontent.com/u/60383?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davaco",
      "html_url": "https://github.com/davaco",
      "followers_url": "https://api.github.com/users/davaco/followers",
      "following_url": "https://api.github.com/users/davaco/following{/other_user}",
      "gists_url": "https://api.github.com/users/davaco/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davaco/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davaco/subscriptions",
      "organizations_url": "https://api.github.com/users/davaco/orgs",
      "repos_url": "https://api.github.com/users/davaco/repos",
      "events_url": "https://api.github.com/users/davaco/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davaco/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T12:33:42Z",
    "updated_at": "2014-06-18T12:33:42Z",
    "author_association": "NONE",
    "body": "Guys, thanks bigtime for your prompt feedback. Very useful input.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/46431647",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-46431647",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 46431647,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDMxNjQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-18T12:58:47Z",
    "updated_at": "2014-06-18T12:58:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr will mark as a perf issue then\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47658454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-47658454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 47658454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjU4NDU0",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-01T13:54:17Z",
    "updated_at": "2014-07-01T13:54:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, I had a look at it a while ago. It's doable, but not simple.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/141832714",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7493#issuecomment-141832714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7493",
    "id": 141832714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MTgzMjcxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-20T20:41:21Z",
    "updated_at": "2015-09-20T20:41:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as stale\n"
  }
]
