[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197290262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12639#issuecomment-197290262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12639",
    "id": 197290262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzI5MDI2Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T12:13:32Z",
    "updated_at": "2016-03-16T12:13:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you could already do this with the `color` parameter, if I understand your question correctly.\n\nThat said,  you're probably better off using seaborn. Most of it's plotting methods take a `hue` keyword, which would work for you.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197346586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12639#issuecomment-197346586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12639",
    "id": 197346586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzM0NjU4Ng==",
    "user": {
      "login": "GA-Goig",
      "id": 17823530,
      "node_id": "MDQ6VXNlcjE3ODIzNTMw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/17823530?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GA-Goig",
      "html_url": "https://github.com/GA-Goig",
      "followers_url": "https://api.github.com/users/GA-Goig/followers",
      "following_url": "https://api.github.com/users/GA-Goig/following{/other_user}",
      "gists_url": "https://api.github.com/users/GA-Goig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GA-Goig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GA-Goig/subscriptions",
      "organizations_url": "https://api.github.com/users/GA-Goig/orgs",
      "repos_url": "https://api.github.com/users/GA-Goig/repos",
      "events_url": "https://api.github.com/users/GA-Goig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GA-Goig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T14:05:38Z",
    "updated_at": "2016-03-16T14:05:38Z",
    "author_association": "NONE",
    "body": "Thanks a lot for your help! However I'm not sure I made it clear before.\n\nLet me show you a real example.\n\nI have a dataframe of fluorescence values from a chemical reaction measured over 45 time points for many different samples. Having a dataframe where columns are samples and rows are measures for each of the 45 time points, a simple plot looks like this:\n\ndf.plot()\n![figure_1](https://cloud.githubusercontent.com/assets/17823530/13814541/f3d232d0-eb86-11e5-98d4-4e4381efe4fe.png)\n\nHowever each sample belongs to one of three groups. So I build a dictionary with colors for each one:\n\ngcolors = {'Saliva': '#00B0F6', 'Blood': '#E58700', 'Feces': '#E76BF3'}\n\nAnd then plot like TomAugspurger points, with color parameter:\n\ndf.plot(color=[gcolors[group] for group in SampleGroups])\n#SampleGroups was a column with group for each sample (something like df.Group)\n\n![figure_2](https://cloud.githubusercontent.com/assets/17823530/13814757/d821adf8-eb87-11e5-9b91-f2f65cb05ff0.png)\n\nIt only remains to have a legend with just three labels \"Saliva\", \"Blood\", \"Feces\" with corresponding colors. (I don't know how to do this yet)\n\nAnyway, here the point is that, if I am not wrong, it would be a nice simple feature to include in pandas since I think this a pretty common way of grouping and representing data.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197350351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12639#issuecomment-197350351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12639",
    "id": 197350351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzM1MDM1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T14:15:17Z",
    "updated_at": "2016-03-16T14:15:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd say pass `legend=False` and then add a legend manually. The 1-column=1-line=1-legend element is pretty central to the basic `DataFrame.plot`. There should be answers on stackoverflow for creating a custom matplotlib legend.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/197355957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12639#issuecomment-197355957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12639",
    "id": 197355957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NzM1NTk1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-16T14:32:37Z",
    "updated_at": "2016-03-16T14:32:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is essentially implemented in https://github.com/pydata/pandas/pull/8018\n"
  }
]
