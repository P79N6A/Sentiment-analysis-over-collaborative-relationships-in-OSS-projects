[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111320568",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10334#issuecomment-111320568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10334",
    "id": 111320568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTMyMDU2OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T01:28:20Z",
    "updated_at": "2015-06-12T01:29:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "In python, iterating over the rows is going to be (a lot) slower than doing vectorized operations.\n\nThe types are being converted in your second method because that's how [numpy arrays](http://docs.scipy.org/doc/numpy/user/basics.types.html#array-types-and-conversions-between-types) (which is what `df.values` is) work. DataFrames are column based, so you can have a single DataFrame with multiple dtypes. Once you iterate though row-wise, everything has to be upcast to a more general type that holds everything. In your case the ints go to `float64`.\n\nIf you describe your problem with a minimal working example, we might be able to help you vectorize it. You may also have luck on StackOverflow with the pandas tag.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111621942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10334#issuecomment-111621942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10334",
    "id": 111621942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTYyMTk0Mg==",
    "user": {
      "login": "zer0n",
      "id": 3055719,
      "node_id": "MDQ6VXNlcjMwNTU3MTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zer0n",
      "html_url": "https://github.com/zer0n",
      "followers_url": "https://api.github.com/users/zer0n/followers",
      "following_url": "https://api.github.com/users/zer0n/following{/other_user}",
      "gists_url": "https://api.github.com/users/zer0n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zer0n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zer0n/subscriptions",
      "organizations_url": "https://api.github.com/users/zer0n/orgs",
      "repos_url": "https://api.github.com/users/zer0n/repos",
      "events_url": "https://api.github.com/users/zer0n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zer0n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T21:22:49Z",
    "updated_at": "2015-06-12T21:22:49Z",
    "author_association": "NONE",
    "body": "Basically, I want to do the following:\n\n```\nrow_handler = RowHandler(sample_df)  # learn how to handle row from sample data\ntransformed_data = []\nfor row in df.values:\n    transformed_data.append(row_handler.handle(row))\nreturn transformed_data\n```\n\nI don't own the `RowHandler` class and hence can only operate row by row.\n\nAnother similar example is in machine learning, where you may have a model that has predict API at row level only.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111639288",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10334#issuecomment-111639288",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10334",
    "id": 111639288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTYzOTI4OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T23:12:28Z",
    "updated_at": "2015-06-12T23:12:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Still a bit too vague to be helpful. But if `RowHandler` is really out of your control then you'll be out of luck. FWIW all of scikit-learn's APIs operate on arrays (so multiple rows).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111640260",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10334#issuecomment-111640260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10334",
    "id": 111640260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY0MDI2MA==",
    "user": {
      "login": "zer0n",
      "id": 3055719,
      "node_id": "MDQ6VXNlcjMwNTU3MTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zer0n",
      "html_url": "https://github.com/zer0n",
      "followers_url": "https://api.github.com/users/zer0n/followers",
      "following_url": "https://api.github.com/users/zer0n/following{/other_user}",
      "gists_url": "https://api.github.com/users/zer0n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zer0n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zer0n/subscriptions",
      "organizations_url": "https://api.github.com/users/zer0n/orgs",
      "repos_url": "https://api.github.com/users/zer0n/repos",
      "events_url": "https://api.github.com/users/zer0n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zer0n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-12T23:22:01Z",
    "updated_at": "2015-06-12T23:28:58Z",
    "author_association": "NONE",
    "body": "I don't see how it can be clearer. Yes, `RowHandler` is out of my control. What do you mean by out of luck? My question is for the most efficient way to iterate over rows while keeping the `dtype` of each element intact. Are you suggesting `df.iterrows()`, or something else?\n\n`sklearn` is an exception, not the norm, that operates natively on PD's `DataFrame`. Not many machine learning libraries have APIs that operate on `DataFrame`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111645425",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10334#issuecomment-111645425",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10334",
    "id": 111645425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY0NTQyNQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T00:13:48Z",
    "updated_at": "2015-06-13T00:13:48Z",
    "author_association": "MEMBER",
    "body": "I think `df.itertuples()` is what you're looking for -- it's way faster than iterrows:\n\n```\nIn [10]: x = pd.DataFrame({'x': range(10000)})\n\nIn [11]: %timeit list(x.iterrows())\n1 loops, best of 3: 383 ms per loop\n\nIn [12]: %timeit list(x.itertuples())\n1000 loops, best of 3: 1.39 ms per loop\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/111646795",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10334#issuecomment-111646795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10334",
    "id": 111646795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMTY0Njc5NQ==",
    "user": {
      "login": "zer0n",
      "id": 3055719,
      "node_id": "MDQ6VXNlcjMwNTU3MTk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/3055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zer0n",
      "html_url": "https://github.com/zer0n",
      "followers_url": "https://api.github.com/users/zer0n/followers",
      "following_url": "https://api.github.com/users/zer0n/following{/other_user}",
      "gists_url": "https://api.github.com/users/zer0n/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zer0n/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zer0n/subscriptions",
      "organizations_url": "https://api.github.com/users/zer0n/orgs",
      "repos_url": "https://api.github.com/users/zer0n/repos",
      "events_url": "https://api.github.com/users/zer0n/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zer0n/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-13T00:35:53Z",
    "updated_at": "2015-06-13T00:35:53Z",
    "author_association": "NONE",
    "body": "Thanks @shoyer! That's what I need.\n"
  }
]
