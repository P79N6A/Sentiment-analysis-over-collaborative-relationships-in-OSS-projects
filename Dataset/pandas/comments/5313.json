[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27027121",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27027121",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27027121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI3MTIx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-24T20:31:17Z",
    "updated_at": "2013-10-24T20:31:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1\n\n4) just have to be careful since this is done a lot that don't sacrifice performance here on the type inference (currently it's setup for most common types first and fast path skips this anyhow)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27027448",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27027448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27027448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI3NDQ4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-24T20:35:52Z",
    "updated_at": "2013-10-24T20:35:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Right - could even keep existing else and then iterate over additional\nfunctions if they are there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27027449",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27027449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27027449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI3NDQ5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-24T20:35:52Z",
    "updated_at": "2013-10-24T20:35:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "obviously related to #4551 which is essentially the common op mixin - I may work on this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27028377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27028377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27028377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI4Mzc3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-24T20:47:40Z",
    "updated_at": "2013-10-24T20:47:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, definitely similarities. I'm most interested in getting an efficient internal representation set up (and maybe changing MI to use the same setup of 2D int ndarray + list of indexes rather than list of int ndarray + list of indexes) and then building out. The nice thing is that, if you know that labelsare sorted, it's trivial to get min and max, plus value_counts are the same as for int block with a mini wrapper around result.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27028931",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27028931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27028931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDI4OTMx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-24T20:54:16Z",
    "updated_at": "2013-10-24T20:54:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jseabold - anything from the statsmodels side on this? Not sure if there's anything on statsmodels wishlist for Categorical that we should keep in mind (I think you're one of the right people to ask). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27034984",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27034984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27034984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDM0OTg0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-24T21:57:34Z",
    "updated_at": "2013-10-24T21:57:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Heck, MI's from_arrays already uses Categorical anyways, so there's already quite a bit of overlap.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27074034",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27074034",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27074034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDc0MDM0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T08:39:14Z",
    "updated_at": "2013-10-25T08:39:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "This will be a welcome feature for us. We'll work to make any changes we need to support it, though I don't suspect we'll need to do anything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27076014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27076014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27076014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDc2MDE0",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T09:15:09Z",
    "updated_at": "2013-10-25T09:15:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah I wouldn't expect anything.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/27076238",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-27076238",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 27076238,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MDc2MjM4",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-10-25T09:19:21Z",
    "updated_at": "2013-10-25T09:19:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "The status quo won't change, but we will be able to catch categoricals and handle them specially now. This is only available through formulas now and if we get a DataFrame we more or less do np.asarray(df). I'll file a ticket for this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34056192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-34056192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 34056192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDU2MTky",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-04T12:53:26Z",
    "updated_at": "2014-02-04T13:04:20Z",
    "author_association": "NONE",
    "body": "Closed #6219 in favor of this, just noting here the large memory hit associated\nwith not storing catagorical string columns as a factored data structure. \nJust one more reason for doing it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34056842",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-34056842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 34056842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MDU2ODQy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-04T13:01:11Z",
    "updated_at": "2014-03-31T21:28:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed #6242 in favor of this issue.\n\n#6242 has some \"what should work with categorials\" (in the form of pseudo test code): https://github.com/pydata/pandas/issues/6242#issuecomment-34003775 and https://github.com/pydata/pandas/issues/6242#issuecomment-34012011 \n\n\"[regarding `prind(df)` behaviour] I would think it look the same as if you would print out `Series(factor(...))`, only the dtypes and so would show that it is a factor.\"\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35052819",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-35052819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 35052819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDUyODE5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T03:36:33Z",
    "updated_at": "2014-02-14T03:36:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtratner going to be able to do this at some point?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35064251",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-35064251",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 35064251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDY0MjUx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T08:16:49Z",
    "updated_at": "2014-02-14T08:16:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd like to, I'm just not sure how much time I have. We're releasing a new\nversion Monday, so I'm hoping I can set aside some time for pandas next\nweek :)\n\nOn Thu, Feb 13, 2014 at 7:36 PM, jreback notifications@github.com wrote:\n\n> @jtratner https://github.com/jtratner going to be able to do this at\n> some point?\n> \n> ## \n> \n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/5313#issuecomment-35052819\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39144501",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-39144501",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 39144501,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTQ0NTAx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T21:29:15Z",
    "updated_at": "2014-03-31T21:29:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Any news on this? What is actually needed here? Is there any code I can have a look at and try to copy it?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/39144789",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-39144789",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 39144789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTQ0Nzg5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-31T21:32:01Z",
    "updated_at": "2014-03-31T21:32:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "well it's an internal enhancement to support categorical as a real data type\n\na but non trivial\n\nwelcome to have a stab at it\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43995476",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-43995476",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 43995476,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTk1NDc2",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T11:03:25Z",
    "updated_at": "2014-05-23T11:03:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tried to make sense of pandas.core.internals but this seems to be too much for my pandas knowledge. As far was I can make out, such support would be quite difficult because each value needs to hold both a representation (could be `int`) and needs access to metadata about all levels (`1`-> \"very supportive\" and so on).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44007292",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-44007292",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 44007292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDA3Mjky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T13:17:55Z",
    "updated_at": "2014-05-23T13:17:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "ha....see #7217, which I just pushed.\n\nThis block is built on the `Categorical` class, internally using it as needed for dispatching, but externally representing in the long-form, similar to the way was one for Sparse features.\n\nWhat could really use would be some example of uses...can you provide some?\ne.g. simple operations for testing and such\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44060759",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-44060759",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 44060759,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDYwNzU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-23T21:08:40Z",
    "updated_at": "2014-05-23T21:08:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz \n\nit seems to me that an op like `+` doesn't mean anything for categoricals? (as well as the rest of the numeric ops) (going to raise `TypeError` in case you try it).\n\nhowever things like `min/max` are ok\n\ncan you give me an example of some ops? thanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44085277",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5313#issuecomment-44085277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5313",
    "id": 44085277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg1Mjc3",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-24T12:04:51Z",
    "updated_at": "2014-05-24T13:09:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "As far as I understand Rs factors (https://www.stat.berkeley.edu/classes/s133/factors.html), all numeric operation should fail. If you want to do them, you first have to convert them to numeric:\n\n```\n> fert = c(10,20,20,50,10,20,10,50,20)\n> fert = factor(fert,levels=c(10,20,50),ordered=TRUE)\n> fert\n[1] 10 20 20 50 10 20 10 50 20\nLevels: 10 < 20 < 50\n\n# If we wished to calculate the mean of the original numeric values of the fert variable, we would have to convert the values using the levels function: \n> mean(fert)\n[1] NA\nWarning message:\nargument is not numeric or logical: \n      returning NA in: mean.default(fert)\n> mean(as.numeric(levels(fert)[fert]))\n[1] 23.33333\n```\n\nAlso, min/max are only defined when the factor is ordered:\n\n```\n> fert = c(10,20,20,50,10,20,10,50,20)\n> min(fert)\n[1] 10\n> fert = factor(fert,levels=c(10,20,50))\n> min(fert)\nError in Summary.factor(c(1L, 2L, 2L, 3L, 1L, 2L, 1L, 3L, 2L), na.rm = FALSE) : \n  min nicht sinnvoll für Faktoren\n> fert = factor(fert,levels=c(10,20,50),ordered=TRUE)\n> min(fert)\n[1] 10\nLevels: 10 < 20 < 50\n> fert = factor(fert,levels=c(50,20,10),ordered=TRUE)\n> min(fert)\n[1] 50\nLevels: 50 < 20 < 10\n> fert = factor(fert,levels=c(0,20,10),ordered=TRUE)\n> min(fert)\n[1] <NA>\nLevels: 0 < 20 < 10\n> max(fert)\n[1] <NA>\nLevels: 0 < 20 < 10\n> fert\n[1] 10   20   20   <NA> 10   20   10   <NA> 20  \nLevels: 0 < 20 < 10\n```\n\nif you specify labels, the original values are lost:\n\n```\n> fert = c(10,20,20,50,10,20,10,50,20)\n> fert = factor(fert,levels=c(10,20,50), labels=c(\"I\",\"II\",\"III\"),ordered=TRUE)\n> min(fert)\n[1] I\nLevels: I < II < III\n> as.numeric(levels(fert)[fert])\n[1] NA NA NA NA NA NA NA NA NA\nWarning message:\nNAs introduced by coercion \n```\n\nInterestingly, each entry keeps a reference to the levels:\n\n```\n> fert\n[1] I   II  II  III I   II  I   III II \nLevels: I < II < III\n> fert[4]\n[1] III\nLevels: I < II < III\n> levels(fert[4])\n[1] \"I\"   \"II\"  \"III\"\n```\n\nSo translating that to pandas \n\n```\ns = pd.Series([1,2,3,1])\nc = s.astype('category')\nc+1 # runtime error or Series([nan, nan, nan, nan]), R returns NAs and prints a warning\n# I would vote for error, as nans just hide the problem\nc.astype('int') == s # True\nc.min() # fails, not ordered\nc.max() # fails, not ordered\nco = pd.Categorical(s, levels=[1,2,3], ordered=True)\nco+1 # still fails\nco.min() == 1 # True\nco.max() == 3 # True\n# There should probably also a method to convert to a ordered factor:\ncr = s.to_ordered(levels=[3,2,1]) # reversed\nco.min() == 3 # True\nco.max() == 1 # True\ncnan = pd.Categorical(s, levels=[1,5,3], ordered=True) # 2 not a level\ncnan.values == [1,nan,3,1]\ncnan.levels == [1,5,3]\ncnan.min() == 1 # pandas ignores nan in min/max\ncroman = pd.Categorical(s, levels=[1,2,3], labels=[\"I\",\"II\",\"III\"]) \ncroman.astype(int) # fails or Series([nan, nan, nan, nan]); \n# R returns NAs and prints a coercion warning\ncroman[2] == \"III\"\n# not sure how a single value should behave: is it in this case a string or \n# does it have some reference to the levels?\n```\n\nNote that here `c.values` is a \"translated\" list of values, not the pointer list as it was in previously https://github.com/pydata/pandas/issues/6242#issuecomment-34012011 (changed that to `val_pointer`). as far as I understand pandas, series.values is the underlying data, so that should be the \"translated\" value: `c.values == [c.labels[x] for x in c.val_pointer]`\n"
  }
]
