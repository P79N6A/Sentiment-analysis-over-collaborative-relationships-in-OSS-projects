[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421152639",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22702#issuecomment-421152639",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22702",
    "id": 421152639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTE1MjYzOQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-13T21:04:14Z",
    "updated_at": "2018-09-13T21:06:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I haven't bisected on this to check exactly when it first started manifesting, but this issue is not present in version `0.20.3`, but it is present in version `0.21.0`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421349399",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22702#issuecomment-421349399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22702",
    "id": 421349399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM0OTM5OQ==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T12:54:39Z",
    "updated_at": "2018-09-14T12:54:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Turns out the first bad commit is [7818486859d1aba53ce359b93cfc772e688958e5](https://github.com/pandas-dev/pandas/commit/7818486859d1aba53ce359b93cfc772e688958e5)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421364087",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22702#issuecomment-421364087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22702",
    "id": 421364087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM2NDA4Nw==",
    "user": {
      "login": "pganssle",
      "id": 1377457,
      "node_id": "MDQ6VXNlcjEzNzc0NTc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1377457?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pganssle",
      "html_url": "https://github.com/pganssle",
      "followers_url": "https://api.github.com/users/pganssle/followers",
      "following_url": "https://api.github.com/users/pganssle/following{/other_user}",
      "gists_url": "https://api.github.com/users/pganssle/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pganssle/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pganssle/subscriptions",
      "organizations_url": "https://api.github.com/users/pganssle/orgs",
      "repos_url": "https://api.github.com/users/pganssle/repos",
      "events_url": "https://api.github.com/users/pganssle/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pganssle/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T13:48:22Z",
    "updated_at": "2018-09-14T13:49:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, so the problem is that in [this function](https://github.com/pandas-dev/pandas/blob/master/pandas/core/arrays/categorical.py#L2444), you have:\r\n\r\n```python\r\n    if not is_dtype_equal(values.dtype, categories.dtype):\r\n        values = ensure_object(values)\r\n        categories = ensure_object(categories)\r\n\r\n    (hash_klass, vec_klass), vals = _get_data_algo(values, _hashtables)\r\n    (_, _), cats = _get_data_algo(categories, _hashtables)\r\n```\r\n\r\nFor boolean categories, the category's dtype is already `object` I guess, so the `if not is_dtype_equal(values.dtype, categories.dtype)` check is `True` and the no coercion to object takes place, but inside `_get_data_algo`, there is a call to [`_ensure_data`](https://github.com/pandas-dev/pandas/blob/master/pandas/core/algorithms.py#L48), which detects that `categories` is all booleans and converts it to `uint64`, which invalidates the assumption that `values.dtype` and `categories.dtype` are the same.\r\n\r\nYou would think that this would be a problem for `pd.CategoricalIndex([], categories=[1, 2])` as well, since integers should *also* be coerced, but evidently `_ensure_data` treats `Index` and `ndarray` differently, and `_ensure_object` gives an `ndarray` while `categories` is an `Index`. PR incoming."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/421369921",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22702#issuecomment-421369921",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22702",
    "id": 421369921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMTM2OTkyMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-14T14:08:02Z",
    "updated_at": "2018-09-14T14:08:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry about that :/ Thanks for debugging.\n\nOn Fri, Sep 14, 2018 at 8:48 AM Paul Ganssle <notifications@github.com>\nwrote:\n\n> Ok, so the problem is that in this function\n> <https://github.com/pandas-dev/pandas/blob/master/pandas/core/arrays/categorical.py#L2444>,\n> you have:\n>\n>     if not is_dtype_equal(values.dtype, categories.dtype):\n>         values = ensure_object(values)\n>         categories = ensure_object(categories)\n>\n>     (hash_klass, vec_klass), vals = _get_data_algo(values, _hashtables)\n>     (_, _), cats = _get_data_algo(categories, _hashtables)\n>\n> For boolean categories, the category's dtype is already object I guess,\n> so the if not is_dtype_equal(values.dtype, categories.dtype) check is True\n> and the no coercion to object takes place, but inside _get_data_algo,\n> there is a call to _ensure_data\n> <https://github.com/pandas-dev/pandas/blob/master/pandas/core/algorithms.py#L48>,\n> which detects that categories is all booleans and converts it to uint64,\n> which invalidates the assumption that values.dtype and categories.dtype\n> are the same.\n>\n> You would think that this would be a problem for pd.CategoricalIndex([],\n> categories=[1, 2]) as well, since integers should *also* be coerced, but\n> evidently _ensure_data treats Index and ndarray differently. PR incoming.\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/22702#issuecomment-421364087>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIgHT5gpKqc1XbybhBA5x99Y5xZscks5ua7OugaJpZM4WoMaH>\n> .\n>\n"
  }
]
