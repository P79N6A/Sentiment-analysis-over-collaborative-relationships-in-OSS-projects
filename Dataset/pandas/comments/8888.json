[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64280622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8888#issuecomment-64280622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8888",
    "id": 64280622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MjgwNjIy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-24T22:55:42Z",
    "updated_at": "2014-11-24T22:55:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you show a pseudo-example of what you are contemplating?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64299367",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8888#issuecomment-64299367",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8888",
    "id": 64299367,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Mjk5MzY3",
    "user": {
      "login": "billletson",
      "id": 2702341,
      "node_id": "MDQ6VXNlcjI3MDIzNDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2702341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/billletson",
      "html_url": "https://github.com/billletson",
      "followers_url": "https://api.github.com/users/billletson/followers",
      "following_url": "https://api.github.com/users/billletson/following{/other_user}",
      "gists_url": "https://api.github.com/users/billletson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/billletson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/billletson/subscriptions",
      "organizations_url": "https://api.github.com/users/billletson/orgs",
      "repos_url": "https://api.github.com/users/billletson/repos",
      "events_url": "https://api.github.com/users/billletson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/billletson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-25T02:06:09Z",
    "updated_at": "2014-11-25T02:06:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure thing. Looks like the skeleton got added in https://github.com/pydata/pandas/pull/1621 but behavior was never specified (Docs show the info for `StringMethods.slice` due to a c&p error, I think.)\n\nBasic functionality is straightforward, remove the specified slice, replace with a specified string. A test:\n\n```\nvalues = Series(['short', 'a bit longer', 'evenlongerthanthat', '', NA])\nresult = values.str.slice_replace(2, 3, 'z')\nexp = Series(['shzrt', 'a zit longer', 'evznlongerthanthat', '', NA])\ntm.assert_series_equal(result, exp)\n```\n\nTricky cases are when the slice returns an empty string. I could see two ways of doing it: leave the string as is, or force the replacement string in there, depending on exactly why the slice returned nothing. I think leave alone is the right way to go, but maybe I'm wrong.\n1. Slice doesn't define a non-zero length range:\n   - Leave as is\n   \n   ```\n   >>>values.str.slice(2, 2, 'z')[0]\n   'short'\n   ```\n   - insert at start index\n   \n   ```\n   >>>values.str.slice(2, 2, 'z')[0]\n   'shzort'\n   ```\n2. Slice spans a non-zero range, but doesn't overlap with 0:len(string). An empty string would be a special case of this.\n   - Leave alone\n   \n   ```\n   >>>values.str.slice(6, 8, 'z')[0]\n   'short'\n   ```\n   - Add replacement string to end:\n   \n   ```\n   >>>values.str.slice(6, 8, 'z')[0]\n   'shortz'\n   ```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/64887702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8888#issuecomment-64887702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8888",
    "id": 64887702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODg3NzAy",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-11-28T12:11:18Z",
    "updated_at": "2014-11-28T12:11:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this should be a natural extension to `x.str` slicing. We already support `x.str[:5]` as a shortcut for applying `s[:5]` for all strings in a given container:\n\n``` python\nIn [6]: s = pd.Series(['foo', 'bar', 'baz']); s\nOut[6]: \n0    foo\n1    bar\n2    baz\ndtype: object\n\nIn [7]: s.str[:2]\nOut[7]: \n0    fo\n1    ba\n2    ba\ndtype: object\n```\n\nIt's quite natural to also support setting them all at once, e.g. `s.str[:2] = 'zz'` should replace first two characters on all elements.  If we do that with broadcasting/alignment of the value, we'll get a way to provide a replacement for each element for free: `s.str[:2] = ['aa', 'bb', 'cc']`.\n\nAnd this would allow us to deprecate and drop slice and slice_replace methods completely and use their pythonic counterparts.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/65299233",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8888#issuecomment-65299233",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8888",
    "id": 65299233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk5MjMz",
    "user": {
      "login": "billletson",
      "id": 2702341,
      "node_id": "MDQ6VXNlcjI3MDIzNDE=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2702341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/billletson",
      "html_url": "https://github.com/billletson",
      "followers_url": "https://api.github.com/users/billletson/followers",
      "following_url": "https://api.github.com/users/billletson/following{/other_user}",
      "gists_url": "https://api.github.com/users/billletson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/billletson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/billletson/subscriptions",
      "organizations_url": "https://api.github.com/users/billletson/orgs",
      "repos_url": "https://api.github.com/users/billletson/repos",
      "events_url": "https://api.github.com/users/billletson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/billletson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-02T20:32:36Z",
    "updated_at": "2014-12-02T20:32:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Well, strings being immutable there is no slice_replace-like behavior to replicate, but we can replicate the behavior with lists, which is the second option in each case (insert at start index or append to end). Implementing **setitem** is fairly easy as well.\n"
  }
]
