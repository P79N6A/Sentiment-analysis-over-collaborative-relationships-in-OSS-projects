[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404353013",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21858#issuecomment-404353013",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21858",
    "id": 404353013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDM1MzAxMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T00:37:11Z",
    "updated_at": "2018-07-12T00:37:18Z",
    "author_association": "MEMBER",
    "body": "I think that's a pretty reasonable suggestion.\r\n\r\ncc @jreback @TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404551033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21858#issuecomment-404551033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21858",
    "id": 404551033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDU1MTAzMw==",
    "user": {
      "login": "Liam3851",
      "id": 546210,
      "node_id": "MDQ6VXNlcjU0NjIxMA==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/546210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Liam3851",
      "html_url": "https://github.com/Liam3851",
      "followers_url": "https://api.github.com/users/Liam3851/followers",
      "following_url": "https://api.github.com/users/Liam3851/following{/other_user}",
      "gists_url": "https://api.github.com/users/Liam3851/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Liam3851/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Liam3851/subscriptions",
      "organizations_url": "https://api.github.com/users/Liam3851/orgs",
      "repos_url": "https://api.github.com/users/Liam3851/repos",
      "events_url": "https://api.github.com/users/Liam3851/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Liam3851/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T15:24:38Z",
    "updated_at": "2018-07-12T15:24:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe it's just me, but the name `update` to me connotes `inplace`-- you're updating the DataFrame. What are you updating if you don't do it inplace? Namewise perhaps the new functionality proposed in #21855 should live in a beefed-up/reworked `combine` method?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/404575241",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21858#issuecomment-404575241",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21858",
    "id": 404575241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNDU3NTI0MQ==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-12T16:42:08Z",
    "updated_at": "2018-07-12T16:42:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Liam3851 \r\nTo me, the essence is that `df1.update(df2)` yields the desired outcome, and whether this object is returned or updated in place is IMO just a semantic distinction.\r\n\r\nPython does a lot of inplace stuff (`dict.update`, `list.sort`, `random.shuffle(list)` etc.), and whenever I have to use one of these, I have to break my chain of operations and build around that None-returning function. Maybe that's personal taste, but in the case of `df.update`, it would be possible to enable both and still cater to the original spirit by having `inplace` default to `True`..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410605334",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21858#issuecomment-410605334",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21858",
    "id": 410605334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDYwNTMzNA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T06:46:08Z",
    "updated_at": "2018-08-06T06:46:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung said:\r\n> I think that's a pretty reasonable suggestion.\r\ncc @jreback @TomAugspurger\r\n\r\nRe-pinging @jreback @TomAugspurger"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410675641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21858#issuecomment-410675641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21858",
    "id": 410675641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDY3NTY0MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T11:19:50Z",
    "updated_at": "2018-08-06T11:19:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "DataFrame.update is modeled after dict.update. I don't think it should ever\nbe non-inplace.\n\nI don't have a strong opinion about a return value.\n\nOn Mon, Aug 6, 2018 at 1:46 AM h-vetinari <notifications@github.com> wrote:\n\n> @gfyoung <https://github.com/gfyoung> said:\n>\n> I think that's a pretty reasonable suggestion.\n> cc @jreback <https://github.com/jreback> @TomAugspurger\n> <https://github.com/TomAugspurger>\n>\n> Re-pinging @jreback <https://github.com/jreback> @TomAugspurger\n> <https://github.com/TomAugspurger>\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/21858#issuecomment-410605334>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIlizWp-XbJXZUOT3IQ5sTWvFZEzhks5uN-Y0gaJpZM4VLV0U>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410781446",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21858#issuecomment-410781446",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21858",
    "id": 410781446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDc4MTQ0Ng==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-06T17:13:09Z",
    "updated_at": "2018-08-06T17:13:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger \r\n\r\nSince you answered by email (and the quoted text does not contain the OP), may I ask: did you read the OP? I did discuss the relationship to `dict.update`.\r\n\r\nFurthermore, adding a kwarg does not necessarily change the default, just provide more options.\r\nFinally, if/once more joins get added to `df.update` (noted as TODO in the source code itself; see #21855), inplace-ops are even less obviously the best choice.\r\n\r\nAlternatively, if `update` is such a reserved name, one could think of having the required functionality (fusing two dataframes with given precedence and requirement for output dimensions) in a separate funtion called e.g. `df.coalesce`?"
  }
]
