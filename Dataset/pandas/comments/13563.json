[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230367010",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-230367010",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 230367010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDM2NzAxMA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-05T00:38:38Z",
    "updated_at": "2016-07-05T00:38:38Z",
    "author_association": "MEMBER",
    "body": "I'm +1 on moving to xarray, but GitHub search shows the deprecation is not easy... As long as I know about popular packages, pydata/data-reader and quantopian/zipline uses `Panel`.\n\nCC @davidastephens @ehebert \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/230446766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-230446766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 230446766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMDQ0Njc2Ng==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-05T10:48:30Z",
    "updated_at": "2016-07-05T10:48:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "No change this end - we are still using xarray heavily, and it's working beautifully. We've also improved the integration of xarray & pandas, so that should ease the path to deprecation.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/231907807",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-231907807",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 231907807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTkwNzgwNw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-12T00:47:58Z",
    "updated_at": "2016-07-12T00:48:59Z",
    "author_association": "MEMBER",
    "body": "I'm +1 on deprecating Panels; @jreback moved mountains to create a consistent internal object model from 1 to N dimensions, but there is still a feeling of second-class citizenry when it comes to working with data over 2 dimensions. I think we would be better served in the long run by really optimizing for the 1 and 2-dimensional use cases (similar to what the R community has done, though the API surface area of dplyr, data.table, and built-in data frames is quite a bit smaller than pandas -- primarily lacking in the level of indexing complexity).\n\nI maintain that we should plan for a pandas 0.X.Y long-term support LTS release branch that becomes bugfix only so that we can start investing in renovations. I'm interested in feedback from the other core devs how realistic you feel this is. \n\nI've long worried about the amount of baggage we are carrying forward -- there are many organizations with large codebases that have made their peace with pandas's rough edges (data type issues, view / copying semantics, etc.), and it doesn't make sense to abandon them. On the flip side, it would be a shame to be held back from undertaking a more aggressive cleanup and retool of the internals to introduce better performance, extensibility, missing data / data type issues, etc. I regret that 6 months have passed since I brought up this grand scheme and I haven't been able to carve out the time to make a dent, beyond demo'ing a proof-of-concept of integer NAs. Also, I would feel much better about working on this on a long-lived branch (similar to what happened with IPython) under some kind of feature freeze.\n\nAnyway, some of these comments are beyond the scope of this issue. I don't think we should deprecate Panel unless we're collectively on board to the idea of cleaning up pandas internals over the next 12-24 months (which is as much of a code organization problem as anything -- particularly quarantining unit tests that we are contemplating \"breaking\"). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341150765",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-341150765",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 341150765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTE1MDc2NQ==",
    "user": {
      "login": "denfromufa",
      "id": 7870949,
      "node_id": "MDQ6VXNlcjc4NzA5NDk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7870949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/denfromufa",
      "html_url": "https://github.com/denfromufa",
      "followers_url": "https://api.github.com/users/denfromufa/followers",
      "following_url": "https://api.github.com/users/denfromufa/following{/other_user}",
      "gists_url": "https://api.github.com/users/denfromufa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/denfromufa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/denfromufa/subscriptions",
      "organizations_url": "https://api.github.com/users/denfromufa/orgs",
      "repos_url": "https://api.github.com/users/denfromufa/repos",
      "events_url": "https://api.github.com/users/denfromufa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/denfromufa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-01T16:00:32Z",
    "updated_at": "2017-11-01T16:00:32Z",
    "author_association": "NONE",
    "body": "There are plenty of examples using panel in SO:\r\n\r\nhttps://stackoverflow.com/questions/tagged/panel+pandas\r\n\r\nOne particular one I'm not sure how to port and do not want to depend on xarray is this one:\r\n\r\nhttps://stackoverflow.com/a/23088780/2230844"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373110931",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-373110931",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 373110931,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzExMDkzMQ==",
    "user": {
      "login": "jaypeedevlin",
      "id": 17235807,
      "node_id": "MDQ6VXNlcjE3MjM1ODA3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17235807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaypeedevlin",
      "html_url": "https://github.com/jaypeedevlin",
      "followers_url": "https://api.github.com/users/jaypeedevlin/followers",
      "following_url": "https://api.github.com/users/jaypeedevlin/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaypeedevlin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaypeedevlin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaypeedevlin/subscriptions",
      "organizations_url": "https://api.github.com/users/jaypeedevlin/orgs",
      "repos_url": "https://api.github.com/users/jaypeedevlin/repos",
      "events_url": "https://api.github.com/users/jaypeedevlin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaypeedevlin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T17:38:33Z",
    "updated_at": "2018-03-14T17:45:34Z",
    "author_association": "NONE",
    "body": "I noticed today that none of the docs for the panel class/methods seem to have notification around the fact that it's deprecated.\r\n\r\nThere's the 'deprecate panel' in the 0.22.0 'what's new', but it seems likely that people may not see that if they're searching for panel or following direct links to the docs.\r\n\r\nI can see [this example](http://pandas.pydata.org/pandas-docs/version/0.18/generated/pandas.Series.order.html) of a deprecation note in a docstring, which subjectively doesn't seem to draw a lot of attention to itself.  Is there a convention for these that's a little bit more 'attention-grabbing'?   Once I know of the best way, I'm happy to submit a PR.\r\n\r\nEdit:  Actually, just found https://github.com/pandas-dev/pandas/commit/1d32264c62c8c43f0e728328c4abfc452d98609d which seems to indicate exactly what to do in this instance."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/373113940",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-373113940",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 373113940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MzExMzk0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-14T17:47:15Z",
    "updated_at": "2018-03-14T17:47:15Z",
    "author_association": "MEMBER",
    "body": "There is a deprecation in the user guide, and a warning when you actually use it, but you are certainly correct we could add a notice in all docstrings as well to give this more visibility.\r\n\r\nTypically a `.. deprecated::` sphinx directive is the way to go to add such deprecations.\r\n\r\nPR very welcome!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443467297",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-443467297",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 443467297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzQ2NzI5Nw==",
    "user": {
      "login": "joseortiz3",
      "id": 18585219,
      "node_id": "MDQ6VXNlcjE4NTg1MjE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18585219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joseortiz3",
      "html_url": "https://github.com/joseortiz3",
      "followers_url": "https://api.github.com/users/joseortiz3/followers",
      "following_url": "https://api.github.com/users/joseortiz3/following{/other_user}",
      "gists_url": "https://api.github.com/users/joseortiz3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joseortiz3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joseortiz3/subscriptions",
      "organizations_url": "https://api.github.com/users/joseortiz3/orgs",
      "repos_url": "https://api.github.com/users/joseortiz3/repos",
      "events_url": "https://api.github.com/users/joseortiz3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joseortiz3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-01T23:28:02Z",
    "updated_at": "2018-12-01T23:36:25Z",
    "author_association": "NONE",
    "body": "I'll be the first to protest deprecation of panels, specifically the need to rewrite legacy code. I have plenty of legacy code for finance for which conversion to multi-index is very painful, code which now spews panel warnings despite working flawlessly. Of course, I write any new code only using multi-index dataframes (which have a significantly higher learning curve, which I am happy that I overcame).\r\n\r\nNote about feeling that \"3 or more dimensions feels like second-class usage\", I would note that there is a deep asymmetry even between the dimensions of a 2D pandas object - columns and rows are explicitly treated  differently in pandas, with rows being second-class to columns in a highly non-intuitive way, disobeying the mathematical symmetries of matrices. Food for thought. Then again, often the dimensions of real-life data are inherently asymmetric, since time is a very special type of dimension."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443468118",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-443468118",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 443468118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzQ2ODExOA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-01T23:43:14Z",
    "updated_at": "2018-12-01T23:43:14Z",
    "author_association": "MEMBER",
    "body": "@joseortiz3 the problem has less to do whether there are users of the code and more about whether there is sufficient bandwidth to maintain the code. If there isn't a motivated developer base to support a component of an open source software project, it doesn't seem reasonable that maintainers of the rest of the project should be burdened by it. \r\n\r\nThe general thinking (and @jreback and others can comment) is that having > 2 dimensional data structures has made many parts of the codebase significantly more difficult to develop and maintain. This has a high long term cost. Given pandas's funding situation (or lack thereof) I don't see how it is tenable"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443519843",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-443519843",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 443519843,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzUxOTg0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T16:17:23Z",
    "updated_at": "2018-12-02T16:17:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The general thinking (and @jreback and others can comment) is that having > 2 dimensional data structures has made many parts of the codebase significantly more difficult to develop and maintain. This has a high long term cost. Given pandas's funding situation (or lack thereof) I don't see how it is tenable\r\n\r\nThis is exactly right. Furthermore, pandas has quite a number of pull requests coming daily and many open issues (2600+). We have a limited amount of core devs (12), so there is a natural limitation to how much the (already huge) scope of pandas can be. Panel is not nearly as mature as other aspects of pandas and would be better served by separate motivated maintainers. Note that there is already quite an overlap with the ``xarray`` package in use cases."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/443549629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13563#issuecomment-443549629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13563",
    "id": 443549629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzU0OTYyOQ==",
    "user": {
      "login": "joseortiz3",
      "id": 18585219,
      "node_id": "MDQ6VXNlcjE4NTg1MjE5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18585219?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joseortiz3",
      "html_url": "https://github.com/joseortiz3",
      "followers_url": "https://api.github.com/users/joseortiz3/followers",
      "following_url": "https://api.github.com/users/joseortiz3/following{/other_user}",
      "gists_url": "https://api.github.com/users/joseortiz3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joseortiz3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joseortiz3/subscriptions",
      "organizations_url": "https://api.github.com/users/joseortiz3/orgs",
      "repos_url": "https://api.github.com/users/joseortiz3/repos",
      "events_url": "https://api.github.com/users/joseortiz3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joseortiz3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-02T22:45:57Z",
    "updated_at": "2018-12-02T22:56:04Z",
    "author_association": "NONE",
    "body": "Totally reasonable, of course. Would it be so difficult to write a \"panel wrapper\" that has a panel-like interface to what is actually a multi-index dataframe? It wouldn't need to implement _all_ of the methods of panel, it would just allow the for 90% of legacy code to be rewritten via a simple `from ____ import PanelMultiIndex as Panel`. If I had time and/or money! Some day."
  }
]
