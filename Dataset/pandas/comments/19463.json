[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361606629",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19463#issuecomment-361606629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19463",
    "id": 361606629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTYwNjYyOQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T14:19:07Z",
    "updated_at": "2018-01-30T14:19:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "For reasons not entirely clear to me, our `xstrtod` implementation can't parse the maximum 64 bit float.  xref #17154, #19361\r\n\r\nA workaround is to use the 'high precision' float parser - some discussion in #17154 about making that the default.\r\n```python\r\ndata = StringIO(\"\"\"\r\na, b\r\n1, 1\r\n1.7976931348623157e+308, 1\r\n\"\"\")\r\npd.read_csv(data, dtype={'a': float, 'b': float}, engine='c', float_precision='high')\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361606892",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19463#issuecomment-361606892",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19463",
    "id": 361606892,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTYwNjg5Mg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T14:20:04Z",
    "updated_at": "2018-01-30T14:20:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also applies to `pd.to_numeric`  \r\n\r\n```python\r\npd.to_numeric(['1.7976931348623157e+308'])\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\npandas/_libs/src/inference.pyx in pandas._libs.lib.maybe_convert_numeric()\r\n\r\nValueError: Unable to parse string \"1.7976931348623157e+308\"\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-29-15b8074a875c> in <module>()\r\n----> 1 pd.to_numeric(['1.7976931348623157e+308'])\r\n\r\n~\\AppData\\Local\\Continuum\\Anaconda3\\envs\\py36\\lib\\site-packages\\pandas\\core\\tools\\numeric.py in to_numeric(arg, errors, downcast)\r\n    131             coerce_numeric = False if errors in ('ignore', 'raise') else True\r\n    132             values = lib.maybe_convert_numeric(values, set(),\r\n--> 133                                                coerce_numeric=coerce_numeric)\r\n    134 \r\n    135     except Exception:\r\n\r\npandas/_libs/src/inference.pyx in pandas._libs.lib.maybe_convert_numeric()\r\n\r\nValueError: Unable to parse string \"1.7976931348623157e+308\" at position 0\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361612616",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19463#issuecomment-361612616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19463",
    "id": 361612616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTYxMjYxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-30T14:38:47Z",
    "updated_at": "2018-01-30T14:38:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is not a bug, rather the exact reason for the high precision option. there is a similar issue IIRC. see if you can find it. cc @gfyoung "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361889605",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19463#issuecomment-361889605",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19463",
    "id": 361889605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTg4OTYwNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T10:26:43Z",
    "updated_at": "2018-01-31T10:26:50Z",
    "author_association": "MEMBER",
    "body": "@jreback : Agreed.  This is intended behavior.\r\n\r\n@chris-b1 : However, your example with `pd.to_numeric` strikes me as interesting...I feel like we would want to support conversion to numeric with high-precision (if specified)?  @jreback : Thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361895690",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19463#issuecomment-361895690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19463",
    "id": 361895690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTg5NTY5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T10:50:24Z",
    "updated_at": "2018-01-31T10:50:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "yeah i think to_numeric should use the high prevsion converters (though not sure if this goes thru the same path)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/361904203",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19463#issuecomment-361904203",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19463",
    "id": 361904203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MTkwNDIwMw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-31T11:25:48Z",
    "updated_at": "2018-01-31T11:25:48Z",
    "author_association": "MEMBER",
    "body": "> though not sure if this goes thru the same path\r\n\r\nAFAICT, the `xlstrtod` functionality is just for the `parsers.py` file.  Though if you want to integrate with it, you would probably have to add several more parameters to the `to_numeric` interface for it to provide similar functionality as in `read_csv` for example (e.g. `decimal` and `sci` as the floating point options used in `tokenizer.h`) OR perhaps we just hard-code values for those parameters."
  }
]
