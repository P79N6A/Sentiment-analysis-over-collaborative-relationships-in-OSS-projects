[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278508945",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278508945",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278508945,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUwODk0NQ==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T00:33:31Z",
    "updated_at": "2017-02-10T18:39:09Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15351?src=pr&el=h1) Report\n> Merging [#15351](https://codecov.io/gh/pandas-dev/pandas/pull/15351?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/e8840725447859531ddcc4b878266f2043fb6465?src=pr&el=desc) will **increase** coverage by `3.04%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##           master   #15351      +/-   ##\n==========================================\n+ Coverage    88.7%   91.75%   +3.04%     \n==========================================\n  Files         134      135       +1     \n  Lines       49489    49439      -50     \n==========================================\n+ Hits        43901    45364    +1463     \n+ Misses       5588     4075    -1513\n```\n\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/15351?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/reshape.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvcmVzaGFwZS5weQ==) | `99.25% <100%> (ø)` | :white_check_mark: |\n| [pandas/__init__.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL19faW5pdF9fLnB5) | `91.66% <ø> (-0.65%)` | :x: |\n| [pandas/tseries/index.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvaW5kZXgucHk=) | `95.32% <ø> (-0.1%)` | :x: |\n| [pandas/core/internals.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW50ZXJuYWxzLnB5) | `94.15% <ø> (-0.04%)` | :x: |\n| [pandas/util/nosetester.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvbm9zZXRlc3Rlci5weQ==) | | |\n| [pandas/conftest.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL2NvbmZ0ZXN0LnB5) | `75% <ø> (ø)` | |\n| [pandas/util/_tester.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvX3Rlc3Rlci5weQ==) | `35.29% <ø> (ø)` | |\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.39% <ø> (+0.05%)` | :white_check_mark: |\n| [pandas/formats/format.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL2Zvcm1hdHMvZm9ybWF0LnB5) | `95.38% <ø> (+0.06%)` | :white_check_mark: |\n| [pandas/io/excel.py](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...3038f646fb949b60073a73df3cf10e52c46905fc?src=pr&el=tree#diff-cGFuZGFzL2lvL2V4Y2VsLnB5) | `79.54% <ø> (+0.15%)` | :white_check_mark: |\n| ... and [16 more](https://codecov.io/gh/pandas-dev/pandas/pull/15351/changes?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15351?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/15351?src=pr&el=footer). Last update [e884072...a2f2510](https://codecov.io/gh/pandas-dev/pandas/compare/e8840725447859531ddcc4b878266f2043fb6465...a2f2510734b08c81018b320c46e3c777583713ea?el=footer&src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278509691",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278509691",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278509691,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUwOTY5MQ==",
    "user": {
      "login": "jbradt",
      "id": 4149299,
      "node_id": "MDQ6VXNlcjQxNDkyOTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4149299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbradt",
      "html_url": "https://github.com/jbradt",
      "followers_url": "https://api.github.com/users/jbradt/followers",
      "following_url": "https://api.github.com/users/jbradt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbradt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbradt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbradt/subscriptions",
      "organizations_url": "https://api.github.com/users/jbradt/orgs",
      "repos_url": "https://api.github.com/users/jbradt/repos",
      "events_url": "https://api.github.com/users/jbradt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbradt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T00:37:50Z",
    "updated_at": "2017-02-09T00:37:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've addressed your requests.\r\n\r\nOne comment: in `reshape.py`, the type check is now\r\n```python\r\nif not is_list_like(id_vars):\r\n    id_vars = [id_vars]\r\nelse:\r\n    id_vars = list(id_vars)\r\n```\r\n(and the same for `value_vars`). This seems a bit redundant to me since, unless I'm mistaken, `list` would work for both. But I thought I'd ask in case I'm missing something."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278511730",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278511730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278511730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUxMTczMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T00:49:28Z",
    "updated_at": "2017-02-09T00:49:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbradt no, this is quite common to do. We need a list result here even if a scalar is passed in, but you can't simply put ``list()`` around everything, e.g. things like datetimes or strings would be misinterpreted."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278512340",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278512340",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278512340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUxMjM0MA==",
    "user": {
      "login": "jbradt",
      "id": 4149299,
      "node_id": "MDQ6VXNlcjQxNDkyOTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4149299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbradt",
      "html_url": "https://github.com/jbradt",
      "followers_url": "https://api.github.com/users/jbradt/followers",
      "following_url": "https://api.github.com/users/jbradt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbradt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbradt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbradt/subscriptions",
      "organizations_url": "https://api.github.com/users/jbradt/orgs",
      "repos_url": "https://api.github.com/users/jbradt/repos",
      "events_url": "https://api.github.com/users/jbradt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbradt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T00:52:51Z",
    "updated_at": "2017-02-09T00:52:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Ah, got it. I hadn't thought of strings, etc. Thanks for clearing that up!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278516145",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278516145",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278516145,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUxNjE0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T01:13:48Z",
    "updated_at": "2017-02-09T01:13:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbradt np. that why we have this special ``is_list_like`` to get this kind of consistency w/o having to repeat things all over."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278516509",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278516509",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278516509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODUxNjUwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T01:15:48Z",
    "updated_at": "2017-02-09T01:15:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "just a couple of trvial edits. ping when green (might be a while as travis is doing lots of builds)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278588448",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278588448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278588448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODU4ODQ0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T09:21:24Z",
    "updated_at": "2017-02-09T09:21:24Z",
    "author_association": "MEMBER",
    "body": "Didn't look into the code, but: shouldn't tuples be reserved for specifying multi-indexed columns? \r\nNot sure if that's very useful in the case of melt, though, as you get tuples in the columns of the resulting frame."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278677132",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278677132",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278677132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODY3NzEzMg==",
    "user": {
      "login": "jbradt",
      "id": 4149299,
      "node_id": "MDQ6VXNlcjQxNDkyOTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4149299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbradt",
      "html_url": "https://github.com/jbradt",
      "followers_url": "https://api.github.com/users/jbradt/followers",
      "following_url": "https://api.github.com/users/jbradt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbradt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbradt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbradt/subscriptions",
      "organizations_url": "https://api.github.com/users/jbradt/orgs",
      "repos_url": "https://api.github.com/users/jbradt/repos",
      "events_url": "https://api.github.com/users/jbradt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbradt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T15:34:19Z",
    "updated_at": "2017-02-09T15:34:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Changes made. Everything's green."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278685809",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278685809",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278685809,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODY4NTgwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T16:02:08Z",
    "updated_at": "2017-02-09T16:02:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "So from the doc-string examples\r\n```\r\nIn [6]: df = pd.DataFrame({'A': {0: 'a', 1: 'b', 2: 'c'},\r\n   ...: ...                    'B': {0: 1, 1: 3, 2: 5},\r\n   ...: ...                    'C': {0: 2, 1: 4, 2: 6}})\r\n   ...: \r\n\r\nIn [7]: df\r\nOut[7]: \r\n   A  B  C\r\n0  a  1  2\r\n1  b  3  4\r\n2  c  5  6\r\n\r\nIn [9]: df.columns = [list('ABC'), list('DEF')]\r\n   ...: \r\n\r\nIn [10]: df\r\nOut[10]: \r\n   A  B  C\r\n   D  E  F\r\n0  a  1  2\r\n1  b  3  4\r\n2  c  5  6\r\n\r\nIn [11]: pd.melt?\r\n\r\nIn [12]: pd.melt(df, id_vars=[('A', 'D')], value_vars=[('B', 'E')])\r\nOut[12]: \r\n  (A, D) variable_0 variable_1  value\r\n0      a          B          E      1\r\n1      b          B          E      3\r\n2      c          B          E      5\r\n```\r\n\r\nSo I think this is fine, a tuple is a-list like and NOT a scalar that selects multiple columns.\r\n\r\nActually you get a terrible error message now. If you pass a tuple with a MI.\r\n```\r\nIn [13]: pd.melt(df, id_vars=[('A', 'D')], value_vars=('B', 'E'))\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-13-db2c189272b2> in <module>()\r\n----> 1 pd.melt(df, id_vars=[('A', 'D')], value_vars=('B', 'E'))\r\n\r\n/Users/jreback/pandas/pandas/core/reshape.py in melt(frame, id_vars, value_vars, var_name, value_name, col_level)\r\n    772         if not isinstance(value_vars, (tuple, list, np.ndarray)):\r\n    773             value_vars = [value_vars]\r\n--> 774         frame = frame.loc[:, id_vars + value_vars]\r\n    775     else:\r\n    776         frame = frame.copy()\r\n\r\nTypeError: can only concatenate list (not \"tuple\") to list\r\n```\r\n\r\n@jbradt can you add this example. I think we need a better message here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278739149",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278739149",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278739149,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODczOTE0OQ==",
    "user": {
      "login": "jbradt",
      "id": 4149299,
      "node_id": "MDQ6VXNlcjQxNDkyOTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4149299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbradt",
      "html_url": "https://github.com/jbradt",
      "followers_url": "https://api.github.com/users/jbradt/followers",
      "following_url": "https://api.github.com/users/jbradt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbradt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbradt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbradt/subscriptions",
      "organizations_url": "https://api.github.com/users/jbradt/orgs",
      "repos_url": "https://api.github.com/users/jbradt/repos",
      "events_url": "https://api.github.com/users/jbradt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbradt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T19:01:55Z",
    "updated_at": "2017-02-09T19:01:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Sure, but I'm not totally sure I understand what you mean. Do you want an example like you wrote above that says that you **must** pass a list of tuples if you have a `MultiIndex`? Or do you want me to check in `melt` if there's a `MultiIndex` and raise a better error message if so?\r\n\r\nIncidentally, the exception I get after my changes is much more heinous than what you showed:\r\n\r\n```pycon\r\nIn [8]: pd.melt(df, id_vars=[('A', 'D')], value_vars=('B', 'E'))\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-8-db2c189272b2> in <module>()\r\n----> 1 pd.melt(df, id_vars=[('A', 'D')], value_vars=('B', 'E'))\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/reshape.py in melt(frame, id_vars, value_vars, var_name, value_name, col_level)\r\n    774         else:\r\n    775             value_vars = list(value_vars)\r\n--> 776         frame = frame.loc[:, id_vars + value_vars]\r\n    777     else:\r\n    778         frame = frame.copy()\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/indexing.py in __getitem__(self, key)\r\n   1335             except (KeyError, IndexError):\r\n   1336                 pass\r\n-> 1337             return self._getitem_tuple(key)\r\n   1338         else:\r\n   1339             key = com._apply_if_callable(key, self.obj)\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/indexing.py in _getitem_tuple(self, tup)\r\n    803     def _getitem_tuple(self, tup):\r\n    804         try:\r\n--> 805             return self._getitem_lowerdim(tup)\r\n    806         except IndexingError:\r\n    807             pass\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/indexing.py in _getitem_lowerdim(self, tup)\r\n    915         # we may have a nested tuples indexer here\r\n    916         if self._is_nested_tuple_indexer(tup):\r\n--> 917             return self._getitem_nested_tuple(tup)\r\n    918\r\n    919         # we maybe be using a tuple to represent multiple dimensions here\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/indexing.py in _getitem_nested_tuple(self, tup)\r\n    990\r\n    991             current_ndim = obj.ndim\r\n--> 992             obj = getattr(obj, self.name)._getitem_axis(key, axis=axis)\r\n    993             axis += 1\r\n    994\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/indexing.py in _getitem_axis(self, key, axis)\r\n   1538                     raise ValueError('Cannot index with multidimensional key')\r\n   1539\r\n-> 1540                 return self._getitem_iterable(key, axis=axis)\r\n   1541\r\n   1542             # nested tuple slicing\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/indexing.py in _getitem_iterable(self, key, axis)\r\n   1084                 try:\r\n   1085                     result = self.obj.reindex_axis(keyarr, axis=axis,\r\n-> 1086                                                    level=level)\r\n   1087\r\n   1088                     # this is an error as we are trying to find\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/frame.py in reindex_axis(self, labels, axis, method, level, copy, limit, fill_value)\r\n   2796                      self).reindex_axis(labels=labels, axis=axis,\r\n   2797                                         method=method, level=level, copy=copy,\r\n-> 2798                                         limit=limit, fill_value=fill_value)\r\n   2799\r\n   2800     @Appender(_shared_docs['rename'] % _shared_doc_kwargs)\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/core/generic.py in reindex_axis(self, labels, axis, method, level, copy, limit, fill_value)\r\n   2413         method = missing.clean_reindex_fill_method(method)\r\n   2414         new_index, indexer = axis_values.reindex(labels, method, level,\r\n-> 2415                                                  limit=limit)\r\n   2416         return self._reindex_with_indexers({axis: [new_index, indexer]},\r\n   2417                                            fill_value=fill_value, copy=copy)\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/indexes/multi.py in reindex(self, target, method, level, limit, tolerance)\r\n   1563             else:\r\n   1564                 # hopefully?\r\n-> 1565                 target = MultiIndex.from_tuples(target)\r\n   1566\r\n   1567         if (preserve_names and target.nlevels == self.nlevels and\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/indexes/multi.py in from_tuples(cls, tuples, sortorder, names)\r\n   1012                 tuples = tuples._values\r\n   1013\r\n-> 1014             arrays = list(lib.tuples_to_object_array(tuples).T)\r\n   1015         elif isinstance(tuples, list):\r\n   1016             arrays = list(lib.to_object_array_tuples(tuples).T)\r\n\r\n/Users/josh/Documents/Code/pandas/pandas/src/inference.pyx in pandas.lib.tuples_to_object_array (pandas/lib.c:68717)()\r\n   1457     result = np.empty((n, k), dtype=object)\r\n   1458     for i in range(n):\r\n-> 1459         tup = tuples[i]\r\n   1460         for j in range(k):\r\n   1461             result[i, j] = tup[j]\r\n\r\nTypeError: Expected tuple, got str\r\n```\r\n\r\nThat also happens if `value_vars=(('A', 'B'))` since `list` flattens the tuple."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278747223",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278747223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278747223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODc0NzIyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-09T19:31:23Z",
    "updated_at": "2017-02-09T19:31:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbradt right, I think we should explicity check & raise an better message if a tuple is passed (when you have a MI). It should be a *list* of tuples, so this is an easy condition to catch (and give a better message)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278976392",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-278976392",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 278976392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODk3NjM5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T15:35:06Z",
    "updated_at": "2017-02-10T15:35:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm. ping on green."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279026590",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-279026590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 279026590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTAyNjU5MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T18:32:58Z",
    "updated_at": "2017-02-10T18:32:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbradt there is some noise here because of our switchover to pytest and numpy getting upgraded.\r\n\r\nhttps://travis-ci.org/pandas-dev/pandas/jobs/200158415\r\n\r\nbut I think you have some linting errors. and use ``tm.assertRaisesRegex``\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279029273",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-279029273",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 279029273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTAyOTI3Mw==",
    "user": {
      "login": "jbradt",
      "id": 4149299,
      "node_id": "MDQ6VXNlcjQxNDkyOTk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4149299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbradt",
      "html_url": "https://github.com/jbradt",
      "followers_url": "https://api.github.com/users/jbradt/followers",
      "following_url": "https://api.github.com/users/jbradt/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbradt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbradt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbradt/subscriptions",
      "organizations_url": "https://api.github.com/users/jbradt/orgs",
      "repos_url": "https://api.github.com/users/jbradt/repos",
      "events_url": "https://api.github.com/users/jbradt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbradt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T18:42:02Z",
    "updated_at": "2017-02-10T18:42:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I think that's an old build since I already fixed the linting error, but I just pushed a change to use `tm.assertRaisesRegexp`. Sometimes I forget about Python 2..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279031510",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-279031510",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 279031510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTAzMTUxMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T18:49:15Z",
    "updated_at": "2017-02-10T18:49:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbradt sure no problem."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/279048705",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15351#issuecomment-279048705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15351",
    "id": 279048705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3OTA0ODcwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T19:51:12Z",
    "updated_at": "2017-02-10T19:51:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks @jbradt "
  }
]
