[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56280410",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8334#issuecomment-56280410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8334",
    "id": 56280410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjgwNDEw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T21:07:29Z",
    "updated_at": "2014-09-20T21:07:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls show a complete copy/pastable example\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56280602",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8334#issuecomment-56280602",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8334",
    "id": 56280602,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjgwNjAy",
    "user": {
      "login": "calben",
      "id": 2454080,
      "node_id": "MDQ6VXNlcjI0NTQwODA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2454080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/calben",
      "html_url": "https://github.com/calben",
      "followers_url": "https://api.github.com/users/calben/followers",
      "following_url": "https://api.github.com/users/calben/following{/other_user}",
      "gists_url": "https://api.github.com/users/calben/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/calben/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/calben/subscriptions",
      "organizations_url": "https://api.github.com/users/calben/orgs",
      "repos_url": "https://api.github.com/users/calben/repos",
      "events_url": "https://api.github.com/users/calben/events{/privacy}",
      "received_events_url": "https://api.github.com/users/calben/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T21:15:03Z",
    "updated_at": "2014-09-20T21:15:03Z",
    "author_association": "NONE",
    "body": "oh boy! :smile: \n\nhere's an example with an list of objects that have an object id and a fumehood (needs object id to keep track of which fumehood is which easily)\n\n```\nfor obj in objs:\n  obj.df.columns = map(lambda x : x + \"--\" + obj.obj_id, obj.df.columns)\ndf = pd.concat([obj.df for obj in objs], axis=1, join='outer', join_axes=None, ignore_index=False, keys=None, levels=None, names=None, verify_integrity=False)\ndf = df.dropna(axis = 0)\nfor obj in laboratory.fumeobjs:\n  obj.df = pd.DataFrame()\n  for column in df.columns:\n    if column.endswith(obj.obj_id):\n      obj.df[column.replace(\"--\" + obj.obj_id, \"\")] = df[column]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56280879",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8334#issuecomment-56280879",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8334",
    "id": 56280879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjgwODc5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T21:26:28Z",
    "updated_at": "2014-09-20T21:26:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "hmm, you example is not easy to easy to duplicate, but I'll suggest you simply do this:\n\n```\nIn [41]: df1 = DataFrame(np.random.randn(7,2),columns=list('AB'),index=np.arange(1,8))\n\nIn [42]: df2 = DataFrame(np.random.randn(7,2),columns=list('AB'),index=np.arange(0,7))\n\nIn [43]: df2.iloc[3,1] = np.nan\n\nIn [44]: df1\nOut[44]: \n          A         B\n1 -0.491055 -0.315572\n2 -1.148262 -0.858421\n3  0.385575 -1.928111\n4 -0.080510 -0.260100\n5 -0.514241  0.025335\n6 -1.033024  0.249598\n7  0.805234  0.563599\n\nIn [45]: df2\nOut[45]: \n          A         B\n0 -1.940830  1.235409\n1 -0.699170  0.642751\n2  0.793785 -0.363574\n3 -0.504045       NaN\n4  0.735279 -0.846005\n5 -0.396064  0.935348\n6 -0.884569  0.903571\n\nIn [46]: p = Panel.from_dict({ 'df1' : df1, 'df2' : df2 },orient='items')\n\nIn [47]: p\nOut[47]: \n<class 'pandas.core.panel.Panel'>\nDimensions: 2 (items) x 8 (major_axis) x 2 (minor_axis)\nItems axis: df1 to df2\nMajor_axis axis: 0 to 7\nMinor_axis axis: A to B\n\nIn [48]: p.to_frame(False)\nOut[48]: \n                  df1       df2\nmajor minor                    \n0     A           NaN -1.940830\n      B           NaN  1.235409\n1     A     -0.491055 -0.699170\n      B     -0.315572  0.642751\n2     A     -1.148262  0.793785\n      B     -0.858421 -0.363574\n3     A      0.385575 -0.504045\n      B     -1.928111       NaN\n4     A     -0.080510  0.735279\n      B     -0.260100 -0.846005\n5     A     -0.514241 -0.396064\n      B      0.025335  0.935348\n6     A     -1.033024 -0.884569\n      B      0.249598  0.903571\n7     A      0.805234       NaN\n      B      0.563599       NaN\n```\n\nYou then have a multi-indexed frame that you can manipulate yet it retains the indvidual identities\n"
  }
]
