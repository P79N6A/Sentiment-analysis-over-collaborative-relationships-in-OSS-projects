[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59927805",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-59927805",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 59927805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTI3ODA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T13:35:50Z",
    "updated_at": "2014-10-21T13:35:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is going to be turned into a Categorical, so ordering will happen automatically. interested to do for 0.15.1?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59927888",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-59927888",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 59927888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTI3ODg4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T13:36:23Z",
    "updated_at": "2014-10-21T13:36:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fancychildren can you post a full example (that doesn't order correctly)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59928939",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-59928939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 59928939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTI4OTM5",
    "user": {
      "login": "fancychildren",
      "id": 6747597,
      "node_id": "MDQ6VXNlcjY3NDc1OTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6747597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fancychildren",
      "html_url": "https://github.com/fancychildren",
      "followers_url": "https://api.github.com/users/fancychildren/followers",
      "following_url": "https://api.github.com/users/fancychildren/following{/other_user}",
      "gists_url": "https://api.github.com/users/fancychildren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fancychildren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fancychildren/subscriptions",
      "organizations_url": "https://api.github.com/users/fancychildren/orgs",
      "repos_url": "https://api.github.com/users/fancychildren/repos",
      "events_url": "https://api.github.com/users/fancychildren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fancychildren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T13:43:49Z",
    "updated_at": "2014-10-21T13:43:49Z",
    "author_association": "NONE",
    "body": "here is the example. after i create the cuts and apply summary to the dataframe, the currLoanSize bucket is ordered as if it's a string, instead of a number of the lower boundary.\n\n![image](https://cloud.githubusercontent.com/assets/6747597/4719205/c5be7ab8-5927-11e4-8428-95b9028d5945.png)\n\nafter i tweak the code, it appears like this\n![image](https://cloud.githubusercontent.com/assets/6747597/4719257/21b5c3ee-5928-11e4-96f2-80824d4716ea.png)\n\nnot sure if i am not using it correctly. but i would be nice to be able to order by the value of lower boundary, while keeping the label.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59929158",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-59929158",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 59929158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTI5MTU4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T13:45:29Z",
    "updated_at": "2014-10-21T13:45:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you do a programatic example, e.g. `df = DataFrame.......` eventually we'll turn this into a test\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/59933408",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-59933408",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 59933408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU5OTMzNDA4",
    "user": {
      "login": "fancychildren",
      "id": 6747597,
      "node_id": "MDQ6VXNlcjY3NDc1OTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6747597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fancychildren",
      "html_url": "https://github.com/fancychildren",
      "followers_url": "https://api.github.com/users/fancychildren/followers",
      "following_url": "https://api.github.com/users/fancychildren/following{/other_user}",
      "gists_url": "https://api.github.com/users/fancychildren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fancychildren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fancychildren/subscriptions",
      "organizations_url": "https://api.github.com/users/fancychildren/orgs",
      "repos_url": "https://api.github.com/users/fancychildren/repos",
      "events_url": "https://api.github.com/users/fancychildren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fancychildren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-21T14:12:37Z",
    "updated_at": "2014-11-29T22:10:19Z",
    "author_association": "NONE",
    "body": "```\nimport StringIO\nfrom pandas import *\nimport numpy as np\n\n\ndata = StringIO.StringIO('''upb coupon\n0.00    3.00\n25000.00    3.00\n50000.00    3.00\n75000.00    3.00\n100000.00   3.00\n125000.00   3.00\n150000.00   3.00\n175000.00   3.00\n200000.00   3.00\n225000.00   3.00\n250000.00   3.00\n275000.00   3.00\n300000.00   3.00\n325000.00   3.00\n350000.00   3.00\n375000.00   3.00\n400000.00   3.00\n425000.00   3.00\n450000.00   3.00\n475000.00   3.00\n500000.00   3.00\n525000.00   3.00\n550000.00   3.00\n575000.00   3.00\n600000.00   3.00\n625000.00   3.00\n650000.00   3.00\n675000.00   3.00\n700000.00   3.00\n725000.00   3.00\n750000.00   3.00\n775000.00   3.00\n800000.00   3.00\n825000.00   3.00\n850000.00   3.00\n875000.00   3.00\n900000.00   3.00\n925000.00   3.00\n950000.00   3.00\n975000.00   3.00\n1000000.00  3.00\n''')\n\ndf = read_csv(data, sep='\\t')\n\ndf['currLoanSize'] = cut(df['upb'], bins=[0,50000,100000,200000,400000,9999999])\ndf['count_pct'] = 1.0/len(df['coupon'])\n\ndef f_summary(group):\n    return Series({'counts': len(group['coupon']),\n                   'count%': np.sum(group['count_pct']),\n                   },\n                  index = ['counts', 'count%']\n                  )\n\nprint df.groupby('currLoanSize').apply(f_summary)\n```\n\n![image](https://cloud.githubusercontent.com/assets/6747597/4719765/415f74a2-592c-11e4-8d67-163762312b5f.png)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158181514",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-158181514",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 158181514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE4MTUxNA==",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T20:05:39Z",
    "updated_at": "2015-11-19T20:10:30Z",
    "author_association": "NONE",
    "body": "I'd offer one potential direction to go with this.  I think it would be great to find a way to allow users to specify the formatting of the bin labels returned by `cut`.  As things stand now, I need to call `cut` twice to get the result I want.  First I call `cut` to find the bin edges.  Then I format the bin edges into appropriately formatted labels.  Then finally I call `cut` again specifying the `labels` parameter.\n\nOne approach would be to allow `labels` to take a function as its argument.  If it does, then it could be presumed to accept the list of bin edges and return a list of bin labels.  Or, alternatively, the function could expect the lower and upper limits of a bin and return the label for that bin.\n\nHere's the situation I've got in mind:\n\n``` python\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nnp.random.seed(0)\ndf = pd.DataFrame(np.random.randn(1000, 2) * 3, columns=list('xy'))\ndf['y'] = (df['x'] * 3) + 5 + np.random.randn(1000) * 2\ndf['x_bin'], edges = pd.cut(df['x'], bins=5, retbins=True)\nnice_names = ['{b:0.1f} : {t:0.1f}'.format(b=edges[i], t=edges[i+1]) for i in range(len(edges)-1)]\ndf['x_bin_better'] = pd.cut(df['x'], bins=5, labels=nice_names)\n\nfig, axes = plt.subplots(3, 1, figsize=(10, 10))\naxes[0].plot(df['x'], df['y'], linestyle='None', marker='o', mew=1, alpha=0.25)\nsns.violinplot('x_bin', 'y', data=df, ax=axes[1], scale='count', palette='Blues')\nsns.violinplot('x_bin_better', 'y', data=df, ax=axes[2], scale='count', palette='Reds')\nfig.tight_layout()\n```\n\n![image](https://cloud.githubusercontent.com/assets/4360170/11282876/a6c6ae76-8ecf-11e5-8b1f-8fe4bb749e12.png)\n\nTo be clear, I'm not suggesting the format implemented above is better (I think the default is quite reasonable).  Instead I'm suggesting we make it easier for users to override that format when appropriate.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158184788",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-158184788",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 158184788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE4NDc4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T20:16:09Z",
    "updated_at": "2015-11-19T20:16:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is pretty much solved by #7640 when `pd.cut` will return an `IntervalIndex` which can then be easily formatted. :pushpin: to @shoyer \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158186582",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-158186582",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 158186582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE4NjU4Mg==",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T20:23:33Z",
    "updated_at": "2015-11-19T20:23:33Z",
    "author_association": "NONE",
    "body": "Would you be open to accepting a pull request for adding the ability for `labels` to accept a function while we wait for `IntervalIndex` to be fleshed out?  If so, do you prefer the function operate on the list of endpoints or on a pair of endpoints?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158192834",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-158192834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 158192834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODE5MjgzNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-19T20:45:43Z",
    "updated_at": "2015-11-19T20:45:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure\n\nI would have a 2 arg callable returning a string\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158249607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-158249607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 158249607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODI0OTYwNw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T01:18:08Z",
    "updated_at": "2015-11-20T01:18:08Z",
    "author_association": "MEMBER",
    "body": "Yeah, I like the idea of accepting a function that acts on scalars for the left and right bounds. Eventually we could add this option as a method on IntervalIndex.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403160430",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8595#issuecomment-403160430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8595",
    "id": 403160430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE2MDQzMA==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:19:16Z",
    "updated_at": "2018-07-06T22:19:16Z",
    "author_association": "MEMBER",
    "body": "Now that `pd.cut` returns Categorical this can be resolved"
  }
]
