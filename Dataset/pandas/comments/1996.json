[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17898338",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1996#issuecomment-17898338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1996",
    "id": 17898338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODk4MzM4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-14T19:12:56Z",
    "updated_at": "2013-05-14T19:12:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wonder if this would be a useful feature to extend this notation to regular DataFrames... has it been discussed before? (I think it may have been.)\n\n_Someone was trying to [roll theIr own DSL for this on SO](http://stackoverflow.com/questions/16527491/python-perform-operation-in-string)..._\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17899063",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1996#issuecomment-17899063",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1996",
    "id": 17899063,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODk5MDYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-14T19:24:28Z",
    "updated_at": "2013-05-14T19:24:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "absolutely, hopefuly in #3202, #3393 going to implement `df.eval()` which will allow things like:\n\n`df['df>0 & df<5']` (which `.eval` will actually execute), also see the `expressions` module, some beginning of support for this as well\n\nThe theory is to accept a numpy-like DSL (but with frames/series/constants) that potentially need alignment and then pass the numpified to `numexpr` for evaluation\n\nWhich is also similar to the expressions in `HDFStore` queries (via `Terms`)\n\na bit non-trivial as to have to take the string expression, compile/parse it, walk the ast tree to find the aligning sections, then repackage to numexpr\n\n@hayd up for it????\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17910642",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1996#issuecomment-17910642",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1996",
    "id": 17910642,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTEwNjQy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-14T22:56:33Z",
    "updated_at": "2013-05-14T22:56:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you think going _via_ Terms is a good solution:\n\n```\ndf.select(where=[Term(...), Term(..)])  # just like HDFStore\n```\n\nand then the eval'd string would be parsed into that.\n\nThat way, we could first get select working with Terms (which shouldn't be too bad), and then write the parser for the DSL (we have to come to a consensus on the grammar...). ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17911267",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1996#issuecomment-17911267",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1996",
    "id": 17911267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTExMjY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-14T23:11:51Z",
    "updated_at": "2013-05-14T23:11:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "That is definitely a good start on it. The thoughts I had were:\n\n1) move `Term` to the `expressions` module and generalized it\n2) a list of `Terms`s is an `and`, so need an `or`, maybe something like:\n\n```\n\nimport expressions as e\n_or = e.OR\n_and = e.AND\n_not = e.NOT\n_t = e.Term\n\nexpr = e.Expression(_or(_and(_t('foo','=',2), _t('bar','=',1)), _t('foobar','>',5)))\nmask = expr.eval(df)\n```\n\nRoughty equivalent to:\n\n```\nmask = ((df['foo'] == 2) & (df['bar'] == 1)) | (df['foobar']>5)\n```\n\nwhich is an easy way to compose (not that user friendly though),\nessentially anything can be built up to`Expressions`\n\nThis then could replace the syntax in `HDFStore` for queries, and be used (until we do parsing)\nin pretty much any expression\n\nwant to give it a try?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17911616",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1996#issuecomment-17911616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1996",
    "id": 17911616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTExNjE2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-14T23:21:20Z",
    "updated_at": "2013-05-14T23:21:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hayd so we don't lose this thread....why don't we continue on #3393\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17911965",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1996#issuecomment-17911965",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1996",
    "id": 17911965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTExOTY1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-14T23:30:15Z",
    "updated_at": "2013-05-14T23:30:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Happy to give this a try. Will thrash this out to expressions later in the week, and ping back on the other thread. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17912103",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1996#issuecomment-17912103",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1996",
    "id": 17912103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTEyMTAz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-14T23:35:02Z",
    "updated_at": "2013-05-14T23:35:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "great!\n\nFYI the `numexpr` package does basically this (unfortunately we can't use it directly because we have to preprocess / align and such, you might get some inspiration from that (we in fact call this with `expressions.evaluate`)\n"
  }
]
