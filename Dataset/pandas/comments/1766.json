[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/8376043",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1766#issuecomment-8376043",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1766",
    "id": 8376043,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzNzYwNDM=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-07T19:27:45Z",
    "updated_at": "2012-09-07T19:27:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "What about putting this in df.ix[]? And when indexing a MultiIndex a tuple needs to be used. For each of the tuple values the same rules apply as for a single level index (including slicing and boolean indexing). When no tuple is used to index a MultiIndex it must be an int and its a position (always) or a boolean index.\n\nsuppose df is a frame:\n    - with a four level MultiIndex on both axis\n    - level2 of axis0 has five distinct values.\n\ndf.ix[('a', slice[None), [True, True, False, False, False]), slice(3, 7, 2)]\n    from axis0 select rows with:\n        - level value = 'a'\n        - all level 1 values\n        - only two first values of level 2\n        - all level 3 values\n    from axis 1 select positions 3 and 5\n\nNow one can already use a tuple but it is not enforced, without tuple indexing a Multiindex works, but not always (try indexing without tuple on more than two levels) Also when the first level is integer, and you want to select a single row one needs to specify all levels, which can be a lot of typing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24862424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1766#issuecomment-24862424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1766",
    "id": 24862424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODYyNDI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-21T13:28:37Z",
    "updated_at": "2013-09-21T13:28:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #2425\n"
  }
]
