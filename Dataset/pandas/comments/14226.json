[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321835687",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14226#issuecomment-321835687",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14226",
    "id": 321835687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTgzNTY4Nw==",
    "user": {
      "login": "8one6",
      "id": 4360170,
      "node_id": "MDQ6VXNlcjQzNjAxNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4360170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/8one6",
      "html_url": "https://github.com/8one6",
      "followers_url": "https://api.github.com/users/8one6/followers",
      "following_url": "https://api.github.com/users/8one6/following{/other_user}",
      "gists_url": "https://api.github.com/users/8one6/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/8one6/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/8one6/subscriptions",
      "organizations_url": "https://api.github.com/users/8one6/orgs",
      "repos_url": "https://api.github.com/users/8one6/repos",
      "events_url": "https://api.github.com/users/8one6/events{/privacy}",
      "received_events_url": "https://api.github.com/users/8one6/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T14:54:42Z",
    "updated_at": "2017-08-11T14:54:42Z",
    "author_association": "NONE",
    "body": "I think this would be a fantastic addition.\r\n\r\nI think either the `by_class` arg/kwarg in `apply()` and `applymap` approach or the new `apply_class()`/`applymap_class()` approach make good sense and seem very intuitive."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/321845166",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14226#issuecomment-321845166",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14226",
    "id": 321845166,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMTg0NTE2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-11T15:32:00Z",
    "updated_at": "2017-08-11T15:32:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "This should be terribly difficult to add, if anyone is interested in implementing it.\r\n\r\nI'd prefer the `apply_class` method, over adding arguments to `apply` / `applymap`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359957411",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14226#issuecomment-359957411",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14226",
    "id": 359957411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTk1NzQxMQ==",
    "user": {
      "login": "attack68",
      "id": 24256554,
      "node_id": "MDQ6VXNlcjI0MjU2NTU0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/24256554?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/attack68",
      "html_url": "https://github.com/attack68",
      "followers_url": "https://api.github.com/users/attack68/followers",
      "following_url": "https://api.github.com/users/attack68/following{/other_user}",
      "gists_url": "https://api.github.com/users/attack68/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/attack68/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/attack68/subscriptions",
      "organizations_url": "https://api.github.com/users/attack68/orgs",
      "repos_url": "https://api.github.com/users/attack68/repos",
      "events_url": "https://api.github.com/users/attack68/events{/privacy}",
      "received_events_url": "https://api.github.com/users/attack68/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-23T22:45:26Z",
    "updated_at": "2018-01-23T22:45:26Z",
    "author_association": "NONE",
    "body": "I agree with the above and think it would be very useful in general.\r\n\r\nI use styling quite extensibly to add formatting logic to user-dynamic tables, and that aspect works well, but it requires some quite extensive coding to get it working efficiently for large tables.\r\n\r\nOn thing that would be handy is a *set_column_styles()* method.\r\n\r\nI currently have this workaround\r\n\r\n    table_styles = # some existing setup styles\r\n    column_styles = get_column_styles(df, props, subset)\r\n    s.set_table_styles(table_styles.update(column_styles))\r\n\r\n    def set_column_styles(df, props, subset=None):\r\n        if subset is None:\r\n             subset = df.columns\r\n        styles = list()\r\n        for col in subset:\r\n            styles.append({'selector': '.col' + str(df.columns.get_loc(col)), 'props': props})\r\n         return styles\r\n\r\nI don't really have the ability yet to try and integrate this and do the github push, but it would be great if the above could be redefined as:\r\n\r\n    s.set_table_styles(table_styles)\r\n    s.set_column_styles(subset, props)\r\n\r\n\r\n\r\n"
  }
]
