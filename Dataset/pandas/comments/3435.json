[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16867570",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-16867570",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 16867570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODY3NTcw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-23T15:59:46Z",
    "updated_at": "2013-04-23T16:00:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "lists are not allowed (for the reasons you show), should raise on this (only scalar or dict are valid)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16870881",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-16870881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 16870881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODcwODgx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-23T16:50:42Z",
    "updated_at": "2013-04-23T16:50:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI keeping lists in a frame, while allowed, it not efficient at all, what excatly are you trying to accomplish?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16876566",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-16876566",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 16876566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc2NTY2",
    "user": {
      "login": "ijmcf",
      "id": 1173125,
      "node_id": "MDQ6VXNlcjExNzMxMjU=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1173125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ijmcf",
      "html_url": "https://github.com/ijmcf",
      "followers_url": "https://api.github.com/users/ijmcf/followers",
      "following_url": "https://api.github.com/users/ijmcf/following{/other_user}",
      "gists_url": "https://api.github.com/users/ijmcf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ijmcf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ijmcf/subscriptions",
      "organizations_url": "https://api.github.com/users/ijmcf/orgs",
      "repos_url": "https://api.github.com/users/ijmcf/repos",
      "events_url": "https://api.github.com/users/ijmcf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ijmcf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-23T18:20:09Z",
    "updated_at": "2013-04-23T18:20:09Z",
    "author_association": "NONE",
    "body": "Good question. I am creating a DataFrame containing a number of key elements of information on a daily process - some of those elements are singular (floats, integers, strings), but some are multiple - and the number of elements can vary day by day from 0 to n. I'm storing those elements currently as lists.  \n\nFor example, something like the dummy data frame I used in the notes on the Issue.\n\nIf you have any suggestions for alternative approaches, I'd be glad to hear them.\n\nThanks\nIain\n\nOn Tuesday, April 23, 2013 at 12:50 PM, jreback wrote:\n\n> FYI keeping lists in a frame, while allowed, it not efficient at all, what excatly are you trying to accomplish?\n> \n> â€”\n> Reply to this email directly or view it on GitHub (https://github.com/pydata/pandas/issues/3435#issuecomment-16870881).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16876860",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-16876860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 16876860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODc2ODYw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-23T18:25:02Z",
    "updated_at": "2013-04-23T18:25:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would use multiple df's in this case, maybe indexed by a common element\n(and then wrap a class around it to manage it)\n\nfor your singular elements it looks like a single df is good\nfor the multiple ones\n\nuse another frame that is indexed 0..n (could be along index or columns whatever makes sense)\n\nwhen you are mixing hierarchical and non-hierarchial (singular data) better 2 use different objects\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17846420",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-17846420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 17846420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODQ2NDIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-13T22:51:49Z",
    "updated_at": "2013-05-13T22:51:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #3585\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24190901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-24190901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 24190901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTkwOTAx",
    "user": {
      "login": "ariddell",
      "id": 19950,
      "node_id": "MDQ6VXNlcjE5OTUw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariddell",
      "html_url": "https://github.com/ariddell",
      "followers_url": "https://api.github.com/users/ariddell/followers",
      "following_url": "https://api.github.com/users/ariddell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariddell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariddell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariddell/subscriptions",
      "organizations_url": "https://api.github.com/users/ariddell/orgs",
      "repos_url": "https://api.github.com/users/ariddell/repos",
      "events_url": "https://api.github.com/users/ariddell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariddell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T20:17:57Z",
    "updated_at": "2013-09-10T20:17:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there any alternative here? I frequently see R dataframes that contain lists. Sometimes one needs a little unnormalized data to be associated with a record.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24191793",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-24191793",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 24191793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTkxNzkz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T20:29:38Z",
    "updated_at": "2013-09-10T20:29:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you give an example if input and output?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24193867",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-24193867",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 24193867,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTkzODY3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T20:56:48Z",
    "updated_at": "2013-09-10T20:56:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you use a tuple?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24198192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-24198192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 24198192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTk4MTky",
    "user": {
      "login": "ariddell",
      "id": 19950,
      "node_id": "MDQ6VXNlcjE5OTUw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariddell",
      "html_url": "https://github.com/ariddell",
      "followers_url": "https://api.github.com/users/ariddell/followers",
      "following_url": "https://api.github.com/users/ariddell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariddell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariddell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariddell/subscriptions",
      "organizations_url": "https://api.github.com/users/ariddell/orgs",
      "repos_url": "https://api.github.com/users/ariddell/repos",
      "events_url": "https://api.github.com/users/ariddell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariddell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T21:58:28Z",
    "updated_at": "2013-09-10T21:58:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just for the record, here's no less an authority than Trevor Hastie cramming\ndata structures inside a data frame in R.\n\n```\n> library(lars)\nLoaded lars 1.2\n\n> data(diabetes)\n> str(diabetes)\n'data.frame':   442 obs. of  3 variables:\n$ x : AsIs [1:442, 1:10] 0.038075.... -0.00188.... 0.085298.... -0.08906.... 0.005383.... ...\n..- attr(*, \"dimnames\")=List of 2\n.. ..$ : NULL\n.. ..$ : chr  \"age\" \"sex\" \"bmi\" \"map\" ...\n$ y : num  151 75 141 206 135 97 138 63 110 310 ...\n$ x2: AsIs [1:442, 1:64] 0.038075.... -0.00188.... 0.085298.... -0.08906.... 0.005383.... ...\n..- attr(*, \".Names\")= chr  \"age\" \"age\" \"age\" \"age\" ...\n..- attr(*, \"dimnames\")=List of 2\n.. ..$ : chr  \"1\" \"2\" \"3\" \"4\" ...\n.. ..$ : chr  \"age\" \"sex\" \"bmi\" \"map\" ...\n```\n\nHere's my more modest example:\n\n```\nIn [3]: df = pd.DataFrame.from_records([dict(id=10, languages=('en','de')), dict(id=11)])\n\nIn [4]: df\nOut[4]: \n   id languages\n0  10  (en, de)\n1  11       NaN\n\nIn [7]: # doesn't work\n\nIn [8]: df.fillna(tuple())\nOut[8]: \n   id languages\n0  10  (en, de)\n1  11       NaN\n\nIn [9]: # doesn't work either\n\nIn [10]: df.fillna([])\nOut[10]: \n   id languages\n0  10  (en, de)\n1  11       NaN\n\nIn [11]: # best I can do\n\nIn [12]: df.fillna(set())\nOut[12]: \n   id languages\n0  10  (en, de)\n1  11        ()\n```\n\nI'm using a release version of pandas -- but I gather the list and tuple will raise exceptions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24198561",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-24198561",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 24198561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTk4NTYx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T22:04:00Z",
    "updated_at": "2013-09-10T22:04:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "in an object column (eg strings) this is easy and natural\n\nmy hesitation is if u did this is a float column then it would convert to an object dtype\nthat's the real issue\n\nas from 'accidentally'' putting a list (when u don't mean it)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24198744",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-24198744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 24198744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTk4NzQ0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T22:07:07Z",
    "updated_at": "2013-09-10T22:07:07Z",
    "author_association": "MEMBER",
    "body": "That data set is a nice example of how _not_ to structure your data. Using `I()` to stuff things in a `data.frame` just seems like a terrible idea.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24201407",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-24201407",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 24201407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjAxNDA3",
    "user": {
      "login": "ariddell",
      "id": 19950,
      "node_id": "MDQ6VXNlcjE5OTUw",
      "avatar_url": "https://avatars2.githubusercontent.com/u/19950?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariddell",
      "html_url": "https://github.com/ariddell",
      "followers_url": "https://api.github.com/users/ariddell/followers",
      "following_url": "https://api.github.com/users/ariddell/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariddell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariddell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariddell/subscriptions",
      "organizations_url": "https://api.github.com/users/ariddell/orgs",
      "repos_url": "https://api.github.com/users/ariddell/repos",
      "events_url": "https://api.github.com/users/ariddell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariddell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-10T22:57:35Z",
    "updated_at": "2013-09-10T22:57:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like my example of putting lists or tuples. They are perfectly valid NumPy object arrays. A string with comma delimiters just isn't a general option  -- what if the underlying strings contain commas?\n\nNow that I think about it -- what is the workaround? I can't do this:\n\n```\nIn [10]: df = pd.DataFrame.from_records([dict(id=10, languages=('en','de')), dict(id=11)])\n\nIn [11]: df.languages[pd.isnull(df.languages)] = tuple()\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n```\n\nI suppose json.dumps() and json.loads() is probably the way to go?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41482454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-41482454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 41482454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDgyNDU0",
    "user": {
      "login": "BrenBarn",
      "id": 1439047,
      "node_id": "MDQ6VXNlcjE0MzkwNDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1439047?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BrenBarn",
      "html_url": "https://github.com/BrenBarn",
      "followers_url": "https://api.github.com/users/BrenBarn/followers",
      "following_url": "https://api.github.com/users/BrenBarn/following{/other_user}",
      "gists_url": "https://api.github.com/users/BrenBarn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BrenBarn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BrenBarn/subscriptions",
      "organizations_url": "https://api.github.com/users/BrenBarn/orgs",
      "repos_url": "https://api.github.com/users/BrenBarn/repos",
      "events_url": "https://api.github.com/users/BrenBarn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BrenBarn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-26T22:08:45Z",
    "updated_at": "2014-04-26T22:08:45Z",
    "author_association": "NONE",
    "body": "Is there an actual solution to this?  What are you supposed to do if you actually want a DataFrame/Series whose values are lists, and you want to replace NaN values with an empty list?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41497211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3435#issuecomment-41497211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3435",
    "id": 41497211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk3MjEx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T13:56:33Z",
    "updated_at": "2014-04-27T13:56:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@BrenBarn you are welcome to open an issue to support this, would be ok. But as you know supporting lists in a frame is problematic at best (eg. setting is pretty much impossible), so this have very limited uses, and would never recommend using it.\n"
  }
]
