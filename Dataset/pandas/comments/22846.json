[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424880091",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-424880091",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 424880091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDg4MDA5MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-26T21:44:17Z",
    "updated_at": "2018-09-27T07:23:02Z",
    "author_association": "MEMBER",
    "body": "So a similar random thought as I mentioned in https://github.com/pandas-dev/pandas/pull/22511/#issuecomment-424794876 , one possible alternative:\r\n\r\n```\r\n<pandas.IntegerArray>\r\n[1, 2, 3, nan, ..., 1, 2, 3]\r\nLength: 400, dtype: Int64\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425075467",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-425075467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 425075467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTA3NTQ2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T12:41:01Z",
    "updated_at": "2018-09-27T12:41:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "That seems fine.\r\n\r\nWould we update Categorical to include `<pandas.Catgegorical>`, or are we happy with its current repo? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/425252469",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-425252469",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 425252469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTI1MjQ2OQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-27T21:42:48Z",
    "updated_at": "2018-09-27T21:42:48Z",
    "author_association": "MEMBER",
    "body": "This and some other common-but-not-necessary methods could go in a mixin in something like `core.arrays.common` and get mixed in to all of the pandas-internal EA subclasses."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433417972",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-433417972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 433417972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQxNzk3Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T14:01:11Z",
    "updated_at": "2018-10-26T14:01:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "PeriodArray is using a repr like \r\nhttps://github.com/pandas-dev/pandas/issues/22846#issuecomment-424880091.\r\n\r\n```\r\nIn [19]: arr = pd.core.arrays.period_array(['2000', '2001'], freq='A')\r\n\r\nIn [20]: arr\r\nOut[20]:\r\n<PeriodArray>\r\n['2000', '2001']\r\nLength: 2, dtype: period[A-DEC]\r\n```\r\n\r\nI'd be happy with something similar for IntegerArray.\r\n\r\nSparseArray can't share it, because it needs to indicate the sparse points. But I think it can be a bit more uniform, something like\r\n\r\n```python\r\n>>> pd.SparseArray([1, 0, 0, 4])\r\n<pandas.SparseArray>\r\n[1, 0, 0, 4]\r\nIndicies: array([0, 3]), dtype: Sparse[int64, 0]\r\n```\r\n\r\nCategorical could maybe be updated, but not a big deal."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433419444",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-433419444",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 433419444,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQxOTQ0NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T14:05:53Z",
    "updated_at": "2018-10-26T14:05:53Z",
    "author_association": "MEMBER",
    "body": "I personally like the fact that we have 'pandas' in the repr, like I did in the IntegerArray example above, or how you did the SparsArray (what PeriodArray doesn't have), to make it clear from it's repr it is a *pandas* array, without needing to check `type(..)`. \r\nBuf of course, if we don't add them to the top level API (which still needs to be discussed), then `<pandas.IntegerArray>` is a bit confusing."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/433426351",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-433426351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 433426351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzQyNjM1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-26T14:27:06Z",
    "updated_at": "2018-10-26T14:27:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Buf of course, if we don't add them to the top level API (which still needs to be discussed), then <pandas.IntegerArray> is a bit confusing.\r\n\r\nThat's why I left it out of PeriodArray. I don't have a strong opinion there though. It's clearly not code since it's in brackets. We could even have `<pandas PeriodArray>` maybe."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437899607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-437899607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 437899607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzg5OTYwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T14:25:26Z",
    "updated_at": "2018-11-12T14:25:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am puzzled why you are arbitrarily changing formats here from what we already have longstanding for all Index types. The repr for Index looks much nicer, doesn't have angle brackets, fits on a single line if its short, and properly separates commas. \r\n\r\nCreating a new format is non-trivial, which is ok to do generally, but only if we change everything. This is a huge, undesired breaking change. So big -1 on doing this. This impacts #23601 and is blocking for me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437913455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-437913455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 437913455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzkxMzQ1NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T15:03:41Z",
    "updated_at": "2018-11-12T15:03:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> already have longstanding for all Index types\n\nThis is for arrays, not index. It's similar to Categorical.\n\n>  doesn't have angle brackets\n\nWe don't know if the repr is code, so angle brackets are appropriate.\n\n> properly separates commas\n\nDo you have an example of https://github.com/pandas-dev/pandas/pull/23617\nwhere commas aren't handled correctly?\n\n> This is a huge, undesired breaking change\n\nhttps://github.com/pandas-dev/pandas/pull/23617 is backwards compatible.\n\nOn Mon, Nov 12, 2018 at 8:25 AM Jeff Reback <notifications@github.com>\nwrote:\n\n> I am puzzled why you are arbitrarily changing formats here from what we\n> already have longstanding for all Index types. The repr for Index looks\n> much nicer, doesn't have angle brackets, fits on a single line if its\n> short, and properly separates commas.\n>\n> Creating a new format is non-trivial, which is ok to do generally, but\n> only if we change everything. This is a huge, undesired breaking change. So\n> big -1 on doing this. This impacts #23601\n> <https://github.com/pandas-dev/pandas/pull/23601> and is blocking for me.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/22846#issuecomment-437899607>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHInrCa3XWPN4zXpdwPPdR0iwJsA0Dks5uuYTdgaJpZM4W7ipV>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/437914054",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-437914054",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 437914054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzNzkxNDA1NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-12T15:05:27Z",
    "updated_at": "2018-11-12T15:05:27Z",
    "author_association": "MEMBER",
    "body": "> This is a huge, undesired breaking change.\r\n\r\nYou may not like the proposed format, but it is not \"breaking\". Nothing will be broken as this only affects new API (the internal EAs), not the reprs of Index or Series.\r\n\r\n> I am puzzled why you are arbitrarily changing formats here from what we already have longstanding for all Index types.\r\n\r\nIt is not arbitrarily. There are reasons to do this, mentioned somewhat in the original issue. \r\nYou are correct this is deviating from the typical format we have been using for the Index reprs. And therefore, we indeed need to have good reasons to do things differently.\r\n\r\nTrying to put the original reasoning a bit clearer:\r\n\r\n- Index and Array are different objects. I don't think it is a problem that they have a visually distinct repr.\r\n- The current Index repr also has some disadvantages (which we don't necessarily have to carry over to the Array repr): \r\n  - It tries to \"look\" like actual code, and is that in many cases, but not in all (eg when there are missing values, when it is truncated, ..). But specifically for EAs, those cases are much more common (see points below).\r\n  - Minor other  points: when truncated, it has a `length=..., ` inside the repr, which I find looking odd in a repr that mimics a constructor.\r\n- Specifically for EAs, we don't recommend to use the actual class constructors (as opposed to the different Index subclasses). I think therefore having a repr that does not look like a class constructor is more important for Array than Index.\r\n- Specifically for EAs, we decided to keep the class constructor simple. This means that eg a repr of a DatetimeIndex like `DatetimeIndex(['2012-01-01'], dtype='datetime64[ns]', freq=None)` is actually a valid constructor for DatetimeIndex, but a similar repr for DatetimeArray would not be a valid constructor for DatetimeArray. So IMO the repr of mimicking python code as we do for Index, is much less fitting for Array.\r\n\r\nSince the Array class is a new API, we have the opportunity to discuss more freely what repr we would like to have. So let's discuss that (that's the reason I originally opened this issue).\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439035775",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439035775",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439035775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTAzNTc3NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T13:14:08Z",
    "updated_at": "2018-11-15T13:25:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Index and Array are different objects. I don't think it is a problem that they have a visually distinct repr.\r\n\r\nThe more things are different the more inconsistencies across the code base in code, testing, and user experience. This is such a jaring huge change you now done't know what the relationship between Index and Array is. This is a bad thing.\r\n\r\n> The current Index repr also has some disadvantages (which we don't necessarily have to carry over to the Array repr):\r\nIt tries to \"look\" like actual code, and is that in many cases, but not in all (eg when there are missing values, when it is truncated, ..). But specifically for EAs, those cases are much more common (see points below).\r\n\r\nSure, this is the case, but it is not a reason to deviate.\r\n\r\n\r\n> Minor other points: when truncated, it has a length=..., inside the repr, which I find looking odd in a repr that mimics a constructor.\r\nSpecifically for EAs, we don't recommend to use the actual class constructors (as opposed to the different Index subclasses). I think therefore having a repr that does not look like a class constructor is more important for Array than Index.\r\n\r\nThis is a problem for MultiIndex as well. Again I am all for changing *everything*, just not a part.\r\n\r\n> Specifically for EAs, we decided to keep the class constructor simple. This means that eg a repr of a DatetimeIndex like DatetimeIndex(['2012-01-01'], dtype='datetime64[ns]', freq=None) is actually a valid constructor for DatetimeIndex, but a similar repr for DatetimeArray would not be a valid constructor for DatetimeArray. So IMO the repr of mimicking python code as we do for Index, is much less fitting for Array.\r\n\r\nThis is also not true for Index generally, e.g. Period, not sure why this is an issue here.\r\n\r\nI thinking breaking this change (and adding associated hacky things like removing commas), is just bad code smell. I would be ok with adding the repr the *same* as Index. Then if you want to change the repr generally that is ok, but half and half does not fly.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439036984",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439036984",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439036984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTAzNjk4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T13:18:41Z",
    "updated_at": "2018-11-15T13:18:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "I might be more accepting if the repr is not multi-lined by default, I think this is also the cause of the 'need to remove the commas'."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439038440",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439038440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439038440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTAzODQ0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T13:23:52Z",
    "updated_at": "2018-11-15T13:23:52Z",
    "author_association": "MEMBER",
    "body": "@jreback can you try to explain why you don't like the fact it is multi-line? Once you have a bit longer index, our current index repr is also multi-line (IntervalIndex is even multi-line by default, but that one is a bit inconsistent with the others)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439045040",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439045040",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439045040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA0NTA0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T13:46:45Z",
    "updated_at": "2018-11-15T13:46:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @jreback can you try to explain why you don't like the fact it is multi-line? Once you have a bit longer index, our current index repr is also multi-line (IntervalIndex is even multi-line by default, but that one is a bit inconsistent with the others)\r\n\r\nfor a short repr this is very awkward. Sure when its get longer it is multi-line. The point is the separation of the class from the data. I personally think the Index repr is just fine. \r\n\r\nYou need a much stronger argument to arbitrarily change it. and that is what you are proposing. Consistency is the king here. You are simply breaking this. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439049667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439049667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439049667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA0OTY2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T14:01:57Z",
    "updated_at": "2018-11-15T14:01:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "So\r\n\r\n```python\r\nIn [2]: pd.core.arrays.period_array(['2000', '2001'], 'D')\r\nOut[2]: <PeriodArray>['2000-01-01', '2001-01-01'], Length: 2, dtype: period[D]\r\n```\r\n\r\nrather than\r\n\r\n```python\r\nIn [2]: pd.core.arrays.period_array(['2000', '2001'], 'D')\r\nOut[2]:\r\n<PeriodArray>\r\n['2000-01-01', '2001-01-01']\r\nLength: 2, dtype: period[D]\r\n```\r\n\r\nwould move you to a +1 on \r\nhttps://github.com/pandas-dev/pandas/pull/23601?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439052724",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439052724",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439052724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA1MjcyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T14:11:15Z",
    "updated_at": "2018-11-15T14:11:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Currently\r\n\r\n```\r\nIn [1]: pd.core.arrays.period_array(['2000', '2001'], 'D')\r\nOut[1]: \r\n<PeriodArray>\r\n['2000-01-01', '2001-01-01']\r\nLength: 2, dtype: period[D]\r\n\r\nIn [2]: pd.Index(pd.core.arrays.period_array(['2000', '2001'], 'D'))\r\nOut[2]: PeriodIndex(['2000-01-01', '2001-01-01'], dtype='period[D]', freq='D')\r\n\r\n```\r\n\r\nso i see some departures here which just don't make sense. quoting on the dtype, the length (in the current EA); this only shows up if its too long for the display normally. its 1 line, and I just don't like the angle brackets."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439055695",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439055695",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439055695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA1NTY5NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T14:20:19Z",
    "updated_at": "2018-11-15T14:20:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> and I just don't like the angle brackets.\r\n\r\nOne thing at a time. Do we agree that angle brackets are appropriate for the base repr, since we don't know if the repr is code?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439089294",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439089294",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439089294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA4OTI5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T15:54:28Z",
    "updated_at": "2018-11-15T15:54:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> One thing at a time. Do we agree that angle brackets are appropriate for the base repr, since we don't know if the repr is code?\r\n\r\nagain no i don't agree, we have not done that elsewhere and therefore this is a completely breaking change. from a user perspective"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439089702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439089702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439089702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA4OTcwMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T15:55:28Z",
    "updated_at": "2018-11-15T15:55:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "We haven't defined a repr for objects with arbitrary constructors though. This *is* different."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439092044",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439092044",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439092044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA5MjA0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T16:01:50Z",
    "updated_at": "2018-11-15T16:01:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure we already have this repr for example, so i would assert this is NOT different.\r\n```\r\nIn [1]: pd.Categorical(list('abc'))\r\nOut[1]: \r\n[a, b, c]\r\nCategories (3, object): [a, b, c]\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/439092652",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22846#issuecomment-439092652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22846",
    "id": 439092652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTA5MjY1Mg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-15T16:03:32Z",
    "updated_at": "2018-11-15T16:03:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "We defined `Categorical.__init__` though. We don't define `ExtensionArray.__init__`, so we can't know whether the repr is valid code. Remember, I'm talking about the base repr here."
  }
]
