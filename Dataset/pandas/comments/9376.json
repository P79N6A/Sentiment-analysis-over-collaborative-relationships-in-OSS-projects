[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72175151",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9376#issuecomment-72175151",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9376",
    "id": 72175151,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTc1MTUx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T09:28:46Z",
    "updated_at": "2015-01-30T09:28:46Z",
    "author_association": "MEMBER",
    "body": "The reason the date parser is called both on the whole column as on the individual rows, is because it first tries the provided function as a vectorized function (on the whole column at once), and if that fails (which is the case with your function), it will try to apply it on each row. So in this way the user can provide both a vectorized or scalar function.\n\nIt could indeed possibly be better performance wise to call the date parser once on the whole array, but in that case you have to provide a function that is able to do that yourself. \nFor example, in your function, `int(year)` will only work on scalar values, not on the whole array.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72175957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9376#issuecomment-72175957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9376",
    "id": 72175957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTc1OTU3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T09:36:18Z",
    "updated_at": "2015-01-30T09:36:18Z",
    "author_association": "MEMBER",
    "body": "BTW, the reason your function fails for vectorized input is that the addition of the different parts (`return year + doy + hour + minute`) fails with a TypeError (adding datetimes is not allowed (is also meaningless)). Just try it out with some data in numpy. \nYou can make `timedelta64` of them (apart from the year) and then add them to the year, that would work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72176393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9376#issuecomment-72176393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9376",
    "id": 72176393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTc2Mzkz",
    "user": {
      "login": "cmeeren",
      "id": 7766733,
      "node_id": "MDQ6VXNlcjc3NjY3MzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7766733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmeeren",
      "html_url": "https://github.com/cmeeren",
      "followers_url": "https://api.github.com/users/cmeeren/followers",
      "following_url": "https://api.github.com/users/cmeeren/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmeeren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmeeren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmeeren/subscriptions",
      "organizations_url": "https://api.github.com/users/cmeeren/orgs",
      "repos_url": "https://api.github.com/users/cmeeren/repos",
      "events_url": "https://api.github.com/users/cmeeren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmeeren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T09:40:29Z",
    "updated_at": "2015-01-30T09:40:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thank you, I understand the problem now and I think pandas could have handled this better (by informing me of the error). I never knew something went wrong, because pandas caught this error silently. If this small fact could be added to the docs (to read_csv and any other similar functions), that would help immensely. Or even better, pandas could warn me (though I see the problem with implementing that giving the current usage).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72178237",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9376#issuecomment-72178237",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9376",
    "id": 72178237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTc4MjM3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T09:57:27Z",
    "updated_at": "2015-01-30T10:04:07Z",
    "author_association": "MEMBER",
    "body": "@cmeeren In this case, I don't think it is fully pandas its fault, as you yourself silenced the warning by adding the bare except, and then going to the string version of your function. So anyway, the numpy TypeError you would never have seen (coincidently, I just read a blog post about that yesterday :-) https://realpython.com/blog/python/the-most-diabolical-python-antipattern/, but I agree, we still use it too much in pandas as well)\n\nEg if you limit your function to only the first part like\n\n```\ndef parse_date(year, doy, hour, minute):\n    print(year, type(year))\n    year = year.astype('datetime64[Y]')\n    doy = doy.astype('datetime64[D]')\n    hour = hour.astype('datetime64[h]')\n    minute = minute.astype('datetime64[m]')\n    return year + doy + hour + minute  # return None also gives the same final DataFrame\n```\n\nyou would already get a more informative error (\"AttributeError: 'str' object has no attribute 'astype'\"), but I agree, you don't see the error from the vectorized try (the error is for the scalar case).\n\nThe easiest way, if you have an error, is to just try the `parse_date` function on some arrays, and then you will get the correct error. \nBecause of the fact that pandas tries first vectorized, and then scalar, the error on vectorized is indeed silenced. So this is the disadvantage of trying to be smart.\n\nBut certainly welcome to add a clarification to the docs of vectorized/scalar.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72186771",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9376#issuecomment-72186771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9376",
    "id": 72186771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTg2Nzcx",
    "user": {
      "login": "cmeeren",
      "id": 7766733,
      "node_id": "MDQ6VXNlcjc3NjY3MzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7766733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmeeren",
      "html_url": "https://github.com/cmeeren",
      "followers_url": "https://api.github.com/users/cmeeren/followers",
      "following_url": "https://api.github.com/users/cmeeren/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmeeren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmeeren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmeeren/subscriptions",
      "organizations_url": "https://api.github.com/users/cmeeren/orgs",
      "repos_url": "https://api.github.com/users/cmeeren/repos",
      "events_url": "https://api.github.com/users/cmeeren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmeeren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T11:16:10Z",
    "updated_at": "2015-01-30T11:16:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche My original function did indeed look like what you suggest. However, I did not think it would be fruitful to try the function on some arrays manually since I had no idea how pandas called the function and this was not mentioned in the docs. I have now submitted a pull request (#9377).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72187009",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9376#issuecomment-72187009",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9376",
    "id": 72187009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTg3MDA5",
    "user": {
      "login": "cmeeren",
      "id": 7766733,
      "node_id": "MDQ6VXNlcjc3NjY3MzM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/7766733?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cmeeren",
      "html_url": "https://github.com/cmeeren",
      "followers_url": "https://api.github.com/users/cmeeren/followers",
      "following_url": "https://api.github.com/users/cmeeren/following{/other_user}",
      "gists_url": "https://api.github.com/users/cmeeren/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cmeeren/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cmeeren/subscriptions",
      "organizations_url": "https://api.github.com/users/cmeeren/orgs",
      "repos_url": "https://api.github.com/users/cmeeren/repos",
      "events_url": "https://api.github.com/users/cmeeren/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cmeeren/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T11:18:31Z",
    "updated_at": "2015-01-30T11:18:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Small GitHub-related question: If this PR is merged, can I safely delete my fork?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/72213377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9376#issuecomment-72213377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9376",
    "id": 72213377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjEzMzc3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-30T14:59:24Z",
    "updated_at": "2015-01-30T14:59:24Z",
    "author_association": "MEMBER",
    "body": "Indeed, once it is merged, you can delete it (there will be even a button on github to do that on your remote origin)\n"
  }
]
