[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234848108",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13703#issuecomment-234848108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13703",
    "id": 234848108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDg0ODEwOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T06:08:27Z",
    "updated_at": "2016-07-25T06:08:27Z",
    "author_association": "MEMBER",
    "body": "1) For the expected output section, put what you're actually expecting to see, not what you actually saw.  Underneath that, you should then put what you saw.\n\n2) Can you try your code sample again with the `master` branch?\n\n3) While I cannot reproduce this (either with `0.18.1` or `master`) on Linux (sorry, no access to Mac ATM), the fact that it's crashing with `string` and `object` dtype bares resemblance to an earlier segfault we were seeing in a different part of the code.\n\nIf the issue persists on `master`, in <a href=\"https://github.com/pydata/pandas/blob/master/pandas/parser.pyx\">parser.pyx</a>, you can find the `string_convert` function <a href=\"https://github.com/pydata/pandas/blob/master/pandas/parser.pyx#L1197\">here</a>.  Judging from your versions output, I suspect the segfault is occurring in this function <a href=\"https://github.com/pydata/pandas/blob/master/pandas/parser.pyx#L1221\">here</a> in fact.  If my suspicion is correct, can you further specify which method call is causing the crash?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234975500",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13703#issuecomment-234975500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13703",
    "id": 234975500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDk3NTUwMA==",
    "user": {
      "login": "ivannz",
      "id": 2227377,
      "node_id": "MDQ6VXNlcjIyMjczNzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2227377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivannz",
      "html_url": "https://github.com/ivannz",
      "followers_url": "https://api.github.com/users/ivannz/followers",
      "following_url": "https://api.github.com/users/ivannz/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivannz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivannz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivannz/subscriptions",
      "organizations_url": "https://api.github.com/users/ivannz/orgs",
      "repos_url": "https://api.github.com/users/ivannz/repos",
      "events_url": "https://api.github.com/users/ivannz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivannz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T14:49:06Z",
    "updated_at": "2016-07-25T16:41:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello,  @gfyoung !\n\nI cloned the master branch, but still the problem persisted.\n\nI've managed to trace the source to a read access beyond the allocated large memory block in either **kh_get_str** or **kh_get_strbox** (defined in **src/klib/khash.h**) in **_string_box_factorize** (from **parser.pyx**) called from the [very last branch](https://github.com/pydata/pandas/blob/master/pandas/parser.pyx#L1221) in **_string_convert** for the remaining 5 lines of the text input. The particular function depends on the **na_filter** setting.\n\nI `debug-patched` **COLITER_NEXT** in **tokenizer.h** with:\n\n``` C\n#define COLITER_NEXT(iter, word) do { \\\n    const int i = *iter.line_start++ + iter.col; \\\n    word = i < *iter.line_start ? iter.words[i]: \"\"; \\\n    printf(\"%d, %p\\n\", i, (const void*) iter.words[i]); \\\n    } while(0)\n```\n\n-- to print out the last address just before the crash. It printed `0` and the address at which the `EXC_BAD_ACCESS` happens. Any attempt to print the **word** returned by **COLITER_NEXT** results in **segfault**. Note that the **word** is later fed into both  **kh_&ast;** functions.\n\nI also added this to **tokenizer.c**:\n\n``` C\nvoid _dump(const void *addr, size_t len) \n{\n    size_t i;\n    unsigned char buff[17];\n    unsigned char *pc = (unsigned char*)addr;\n\n    printf(\"%p:\\n\", addr);\n    for (i = 0; i < len; i++) {\n        if ((i % 16) == 0) {\n            if (i != 0)\n                printf(\"  %s\\n\", buff);\n            printf(\"  %04x \", i);\n        }\n        printf(\" %02x\", pc[i]);\n        if ((pc[i] < 0x20) || (pc[i] > 0x7e)) {\n            buff[i % 16] = '.';\n        } else {\n            buff[i % 16] = pc[i];\n        }\n        buff[(i % 16) + 1] = '\\0';\n    }\n    while ((i % 16) != 0) {\n        printf(\"   \");\n        i++;\n    }\n    printf(\"  %s\\n\", buff);\n}\n```\n\nI borrowed it with simplifications from [this gist](https://gist.github.com/domnikl/af00cc154e3da1c5d965) to dump memory contents of **parser->words** and **parser->stream** in a call to **_string_box_factorize**. It turns out that just before the crash the pointers in **parser->words** point to a memory region starting with the address that causes the crash.\n\nI strongly suspect that this problem is specific to OS X memory allocation.\n\nPS: It seems that [**end_field**](https://github.com/pydata/pandas/blob/master/pandas/src/parser/tokenizer.c#L411) records the pointers to words in a memory region into **parser->word_starts**, which later becomes unaccessible.\n\nPPS: I suspect [**parser_trim_buffers**](https://github.com/pydata/pandas/blob/master/pandas/src/parser/tokenizer.c#L1217) changes allocated memory but does not re-initialize **parser->word_starts**.\n\nPPPS: Here is a snippet which does not use the `dataset.csv` file, and instead uses StringIO, but still crashes with **segfault**.\n\n``` python\nimport pandas as pd\nfrom cStringIO import StringIO\nrecord_ = \"\"\"9999-9,99:99,,,,ZZ,ZZ,,,ZZZ-ZZZZ,.Z-ZZZZ,-9.99,,,9.99,ZZZZZ,,-99,9,ZZZ-ZZZZ,ZZ-ZZZZ,,9.99,ZZZ-ZZZZZ,ZZZ-ZZZZZ,ZZZ-ZZZZ,ZZZ-ZZZZ,ZZZ-ZZZZ,ZZZ-ZZZZ,ZZZ-ZZZZ,ZZZ-ZZZZ,999,ZZZ-ZZZZ,,ZZ-ZZZZ,,,,,ZZZZ,ZZZ-ZZZZZ,ZZZ-ZZZZ,,,9,9,9,9,99,99,999,999,ZZZZZ,ZZZ-ZZZZZ,ZZZ-ZZZZ,9,ZZ-ZZZZ,9.99,ZZ-ZZZZ,ZZ-ZZZZ,,,,ZZZZ,,,ZZ,ZZ,,,,,,,,,,,,,9,,,999.99,999.99,,,ZZZZZ,,,Z9,,,,,,,ZZZ,ZZZ,,,,,,,,,,,ZZZZZ,ZZZZZ,ZZZ-ZZZZZZ,ZZZ-ZZZZZZ,ZZ-ZZZZ,ZZ-ZZZZ,ZZ-ZZZZ,ZZ-ZZZZ,,,999999,999999,ZZZ,ZZZ,,,ZZZ,ZZZ,999.99,999.99,,,,ZZZ-ZZZ,ZZZ-ZZZ,-9.99,-9.99,9,9,,99,,9.99,9.99,9,9,9.99,9.99,,,,9.99,9.99,,99,,99,9.99,9.99,,,ZZZ,ZZZ,,999.99,,999.99,ZZZ,ZZZ-ZZZZ,ZZZ-ZZZZ,,,ZZZZZ,ZZZZZ,ZZZ,ZZZ,9,9,,,,,,ZZZ-ZZZZ,ZZZ999Z,,,999.99,,999.99,ZZZ-ZZZZ,,,9.999,9.999,9.999,9.999,-9.999,-9.999,-9.999,-9.999,9.999,9.999,9.999,9.999,9.999,9.999,9.999,9.999,99999,ZZZ-ZZZZ,,9.99,ZZZ,,,,,,,,ZZZ,,,,,9,,,,9,,,,,,,,,,ZZZ-ZZZZ,ZZZ-ZZZZ,,ZZZZZ,ZZZZZ,ZZZZZ,ZZZZZ,,,9.99,,ZZ-ZZZZ,ZZ-ZZZZ,ZZ,999,,,,ZZ-ZZZZ,ZZZ,ZZZ,ZZZ-ZZZZ,ZZZ-ZZZZ,,,99.99,99.99,,,9.99,9.99,9.99,9.99,ZZZ-ZZZZ,,,ZZZ-ZZZZZ,,,,,-9.99,-9.99,-9.99,-9.99,,,,,,,,,ZZZ-ZZZZ,,9,9.99,9.99,99ZZ,,-9.99,-9.99,ZZZ-ZZZZ,,,,,,,ZZZ-ZZZZ,9.99,9.99,9999,,,,,,,,,,-9.9,Z/Z-ZZZZ,999.99,9.99,,999.99,ZZ-ZZZZ,ZZ-ZZZZ,9.99,9.99,9.99,9.99,9.99,9.99,,ZZZ-ZZZZZ,ZZZ-ZZZZZ,ZZZ-ZZZZZ,ZZZ-ZZZZZ,ZZZ-ZZZZZ,ZZZ,ZZZ,ZZZ,ZZZ,9.99,,,-9.99,ZZ-ZZZZ,-999.99,,-9999,,999.99,,,,999.99,99.99,,,ZZ-ZZZZZZZZ,ZZ-ZZZZ-ZZZZZZZ,,,,ZZ-ZZ-ZZZZZZZZ,ZZZZZZZZ,ZZZ-ZZZZ,9999,999.99,ZZZ-ZZZZ,-9.99,-9.99,ZZZ-ZZZZ,99:99:99,,99,99,,9.99,,-99.99,,,,,,9.99,ZZZ-ZZZZ,-9.99,-9.99,9.99,9.99,,ZZZ,,,,,,,ZZZ,ZZZ,,,,,\"\"\"\ncsv_data = \"\\n\".join([record_]*173) + \"\\n\"\n\nfor _ in range(2):\n    iterator_ = pd.read_csv(StringIO(csv_data), header=None, engine=\"c\",\n                            dtype=object, chunksize=84, na_filter=True)\n    for chunk_ in iterator_:\n        print chunk_.iloc[0, 0], chunk_.iloc[-1, 0]\n    print \">>>NEXT\"\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235012987",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13703#issuecomment-235012987",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13703",
    "id": 235012987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTAxMjk4Nw==",
    "user": {
      "login": "ivannz",
      "id": 2227377,
      "node_id": "MDQ6VXNlcjIyMjczNzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2227377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivannz",
      "html_url": "https://github.com/ivannz",
      "followers_url": "https://api.github.com/users/ivannz/followers",
      "following_url": "https://api.github.com/users/ivannz/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivannz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivannz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivannz/subscriptions",
      "organizations_url": "https://api.github.com/users/ivannz/orgs",
      "repos_url": "https://api.github.com/users/ivannz/repos",
      "events_url": "https://api.github.com/users/ivannz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivannz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T16:53:06Z",
    "updated_at": "2016-07-25T17:53:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "The problems seems to be in the [**parser_trim_buffers**](https://github.com/pydata/pandas/blob/master/pandas/src/parser/tokenizer.c#L1217) as it appears not to move word pointers.\n\nIf I swap blocks **L1224 -- L1237** (**/&ast; trim stream &ast;/**) and **L1239 -- L1256**(**/&ast; trim words, word_starts &ast;/**) and then copy the initialization of **parser->words** from [**make_stream_space**](https://github.com/pydata/pandas/blob/master/pandas/src/parser/tokenizer.c#L289) to the **trim stream** block (as shown in the snippet below), the problem goes away.\n\nHere is a new version of **parser_trim_buffers**\n\n``` C\n\nint parser_trim_buffers(parser_t *self) {\n    /*\n      Free memory\n     */\n    size_t new_cap;\n    void *newptr;\n\n    int i;\n\n    /* trim words, word_starts */\n    new_cap = _next_pow2(self->words_len) + 1;\n    if (new_cap < self->words_cap) {\n        TRACE((\"parser_trim_buffers: new_cap < self->words_cap\\n\"));\n        newptr = safe_realloc((void*) self->words, new_cap * sizeof(char*));\n        if (newptr == NULL) {\n            return PARSER_OUT_OF_MEMORY;\n        } else {\n            self->words = (char**) newptr;\n        }\n        newptr = safe_realloc((void*) self->word_starts, new_cap * sizeof(int));\n        if (newptr == NULL) {\n            return PARSER_OUT_OF_MEMORY;\n        } else {\n            self->word_starts = (int*) newptr;\n            self->words_cap = new_cap;\n        }\n    }\n\n    /* trim stream */\n    new_cap = _next_pow2(self->stream_len) + 1;\n    TRACE((\"parser_trim_buffers: new_cap = %zu, stream_cap = %zu, lines_cap = %zu\\n\",\n           new_cap, self->stream_cap, self->lines_cap));\n    if (new_cap < self->stream_cap) {\n        TRACE((\"parser_trim_buffers: new_cap < self->stream_cap, calling safe_realloc\\n\"));\n        newptr = safe_realloc((void*) self->stream, new_cap);\n        if (newptr == NULL) {\n            return PARSER_OUT_OF_MEMORY;\n        } else {\n            // realloc sets errno when moving buffer?\n            if (self->stream != newptr) {\n                // uff\n                /* TRACE((\"Moving word pointers\\n\")) */\n\n                self->pword_start = newptr + self->word_start;\n\n                for (i = 0; i < self->words_len; ++i)\n                {\n                    self->words[i] = newptr + self->word_starts[i];\n                }\n            }\n\n            self->stream = newptr;\n            self->stream_cap = new_cap;\n\n        }\n    }\n\n...\n\n    return 0;\n}\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235024029",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13703#issuecomment-235024029",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13703",
    "id": 235024029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTAyNDAyOQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T17:32:21Z",
    "updated_at": "2016-07-25T17:32:21Z",
    "author_association": "MEMBER",
    "body": "Awesome that you were able to fix your segfault!  Here's what I would do now:\n\n1) run all of the unit tests to see if your changes break any existing functionality\n\n2) if they don't, then submit this as a PR so that all of us can have a look!\n\n3) if they do cause failures, then I'll leave it up to you whether you want to investigate the failure causes. Feel free to provide a patch that we can clone and figure out.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235025180",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13703#issuecomment-235025180",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13703",
    "id": 235025180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTAyNTE4MA==",
    "user": {
      "login": "ivannz",
      "id": 2227377,
      "node_id": "MDQ6VXNlcjIyMjczNzc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2227377?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivannz",
      "html_url": "https://github.com/ivannz",
      "followers_url": "https://api.github.com/users/ivannz/followers",
      "following_url": "https://api.github.com/users/ivannz/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivannz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivannz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivannz/subscriptions",
      "organizations_url": "https://api.github.com/users/ivannz/orgs",
      "repos_url": "https://api.github.com/users/ivannz/repos",
      "events_url": "https://api.github.com/users/ivannz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivannz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T17:36:13Z",
    "updated_at": "2016-07-25T17:36:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I issued a pull request (#13788), however there was one failed test and several _deprecation warnings_:\n\n```\nFAIL: test_round_trip_frame_sep (pandas.io.tests.test_clipboard.TestClipboard)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235094189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13703#issuecomment-235094189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13703",
    "id": 235094189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTA5NDE4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T21:39:58Z",
    "updated_at": "2016-07-25T21:39:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "that test is ok, its not currently engaged on travis and fails on linux/macosx (and already has an outstanding issue).\n\ndeprecation warnings are ok (though I do try to eliminate them periodically).\n"
  }
]
