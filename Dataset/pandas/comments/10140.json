[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102197142",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-102197142",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 102197142,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjE5NzE0Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T23:18:13Z",
    "updated_at": "2015-05-14T23:18:13Z",
    "author_association": "MEMBER",
    "body": "I agree, I think a groupby/aggregate operation should probably just use the categories from a categorical group (which would be an `Int64Index`, in this case), instead of creating a new `CategoricalIndex`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102384319",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-102384319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 102384319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjM4NDMxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T12:15:44Z",
    "updated_at": "2015-05-15T12:15:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is correct. I think you are confused because you relabel the bin edges to integers and expect them to be a `Int64Index`.\n\nA result of the split-apply will give you an index of the same type as the input index. This is expected.\n\nAll that said, there are no explict tests one way or the other on this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102432096",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-102432096",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 102432096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjQzMjA5Ng==",
    "user": {
      "login": "therriault",
      "id": 4842513,
      "node_id": "MDQ6VXNlcjQ4NDI1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4842513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therriault",
      "html_url": "https://github.com/therriault",
      "followers_url": "https://api.github.com/users/therriault/followers",
      "following_url": "https://api.github.com/users/therriault/following{/other_user}",
      "gists_url": "https://api.github.com/users/therriault/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therriault/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therriault/subscriptions",
      "organizations_url": "https://api.github.com/users/therriault/orgs",
      "repos_url": "https://api.github.com/users/therriault/repos",
      "events_url": "https://api.github.com/users/therriault/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therriault/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T15:26:08Z",
    "updated_at": "2015-05-15T15:26:08Z",
    "author_association": "NONE",
    "body": "I'm mainly confused about why this worked in previous versions but not now. It doesn't seem a change that serves a purpose, and there's a clear downside, so I think an explicit test would make sense here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102433350",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-102433350",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 102433350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjQzMzM1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T15:32:14Z",
    "updated_at": "2015-05-15T15:32:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@therriault it 'worked' becuase the index that was the resultant of `pd.cut` was relabed to an integer index (and thus it propogated).\n\nSo I think that the propogation in the groupby is correct, but what you are expecting is that 'relabling' the bins gives a different index type. (which is not unreasonable). We just need to clarify that (with some explicit tests). My point above is that I think the 'issue' is on what `pd.cut` does with the `binlabels` and not `.groupby` (which is the accidental side effect here).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102454085",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-102454085",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 102454085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjQ1NDA4NQ==",
    "user": {
      "login": "therriault",
      "id": 4842513,
      "node_id": "MDQ6VXNlcjQ4NDI1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4842513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therriault",
      "html_url": "https://github.com/therriault",
      "followers_url": "https://api.github.com/users/therriault/followers",
      "following_url": "https://api.github.com/users/therriault/following{/other_user}",
      "gists_url": "https://api.github.com/users/therriault/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therriault/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therriault/subscriptions",
      "organizations_url": "https://api.github.com/users/therriault/orgs",
      "repos_url": "https://api.github.com/users/therriault/repos",
      "events_url": "https://api.github.com/users/therriault/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therriault/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T16:32:51Z",
    "updated_at": "2015-05-15T16:32:51Z",
    "author_association": "NONE",
    "body": "That makes sense. It would be ideal, though, if `pd.cut` either chose the index type based upon the type of the labels, or provided an option to explicitly specify that the index type it outputs. For the time being, adding the line `z.index = binlabels` after the groupby in the code above works, but it doesn't solve the second issue of creating numbered bins in the `pd.cut` command by itself. \n\n(Use case: I calculate percentile ranks from 1 to 100 from some output, then use `pd.cut(percentile_rank, bins=np.arange(0,110,10), labels=np.arange(1,11,1), right=True)` to create decile ranks. That no longer works. I can work around it by calculating going back to the original rankings or by doing something like `np.ceil(0.1*percentile_rank)`, but it's just more elegant to have explicitly defined bins.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102454995",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-102454995",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 102454995,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjQ1NDk5NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T16:37:51Z",
    "updated_at": "2015-05-15T16:37:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@therriault as I said, you are doing an 'implict' conversion in the index of `pd.cut` (which is a categorical), and turning into something else.\n\nfyi, you should simply use `qcut` if you want quantiles\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102646628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-102646628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 102646628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0NjYyOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T16:17:17Z",
    "updated_at": "2015-05-16T16:17:17Z",
    "author_association": "MEMBER",
    "body": "Is the issue here also not that the plotting of a CategoricalIndex is not well implemented? \nIf our plotting machinery just sees it as integer values, then the problem would also be solved? (at least the original reason you reported this?)\n\nFurterh, @therriault, about your update:\n\n```\ndf['bin'] = pd.cut(df.x, bins=binedges, labels=binlabels)\n```\n\nThis works for me. What is not working for you here? (you say you get an empty column?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103670084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-103670084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 103670084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzY3MDA4NA==",
    "user": {
      "login": "therriault",
      "id": 4842513,
      "node_id": "MDQ6VXNlcjQ4NDI1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4842513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therriault",
      "html_url": "https://github.com/therriault",
      "followers_url": "https://api.github.com/users/therriault/followers",
      "following_url": "https://api.github.com/users/therriault/following{/other_user}",
      "gists_url": "https://api.github.com/users/therriault/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therriault/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therriault/subscriptions",
      "organizations_url": "https://api.github.com/users/therriault/orgs",
      "repos_url": "https://api.github.com/users/therriault/repos",
      "events_url": "https://api.github.com/users/therriault/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therriault/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-19T21:20:52Z",
    "updated_at": "2015-05-19T21:20:52Z",
    "author_association": "NONE",
    "body": "It's not an empty column---it's there, it's just a categorical, so though it looks like a number I can't operate on it like one (and it looks empty when I try to operate on it, which is why I thought it was empty at first). It's basically the same issue as I have with plotting: things that used to work fine don't work anymore, in a way that makes older code break after updating.\n\nGoing back to your first question, that change to the plotting framework would definitely solve the immediate issue of graphing, but the other issue still remains. The latest update took a process (`pd.cut`) that used to determine index type based on the values passed to it, and changed it to a process where everything gets a categorical index. Was there a reason for that change that I'm missing? Don't get me wrong, I like having the categorical index option, I just don't want to have it all the time to the exclusion of other options!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/103856950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-103856950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 103856950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzg1Njk1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-20T11:52:50Z",
    "updated_at": "2015-05-20T11:52:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@therriault want to take a crack at changing the index handling code when `binlabels` are passed. Relevant code is [here](https://github.com/pydata/pandas/blob/master/pandas/tools/tile.py#L212)\n\nThere are exactly 2 tests which hit this branch. Neither of which have integer binlabels. So open to thoughts of what is reasonable here.\n\ne.g. once reasonable soln is to make the user pass in an index if they actually want one, e.g.\n`z = df.groupby(pd.cut(df.x,bins=binedges ,labels=Index(binlabels) )).y.mean()`\n\nThis is trivial to implement and will preserve back-compat.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/105688289",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-105688289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 105688289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTY4ODI4OQ==",
    "user": {
      "login": "therriault",
      "id": 4842513,
      "node_id": "MDQ6VXNlcjQ4NDI1MTM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4842513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/therriault",
      "html_url": "https://github.com/therriault",
      "followers_url": "https://api.github.com/users/therriault/followers",
      "following_url": "https://api.github.com/users/therriault/following{/other_user}",
      "gists_url": "https://api.github.com/users/therriault/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/therriault/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/therriault/subscriptions",
      "organizations_url": "https://api.github.com/users/therriault/orgs",
      "repos_url": "https://api.github.com/users/therriault/repos",
      "events_url": "https://api.github.com/users/therriault/events{/privacy}",
      "received_events_url": "https://api.github.com/users/therriault/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-26T22:30:57Z",
    "updated_at": "2015-05-26T22:30:57Z",
    "author_association": "NONE",
    "body": "Looking at the code and trying to figure out how to do it, though I'm not quite sure enough in my solution to submit a PR yet (apologies---I'm much more of a user than a developer). But basically, what I was thinking is to take this (lines 218-220):\n\n``` python\n        levels = np.asarray(levels, dtype=object)\n        np.putmask(ids, na_mask, 0)\n        fac = Categorical(ids - 1, levels, ordered=True, name=name, fastpath=True)\n```\n\nand change it to this:\n\n``` python\n        if levels.dtype == 'int':\n            levels = Series(levels,index=ids)\n            fac = ids.map(levels)\n        else:\n            levels = np.asarray(levels, dtype=object)\n            np.putmask(ids, na_mask, 0)\n            fac = Categorical(ids - 1, levels, ordered=True, name=name, fastpath=True)\n```\n\nThat seems like the simplest solution---it just adds the case where if integers are passed as labels, the outputs are integers, but otherwise they're still categoricals. That seems a pretty self-contained solution. As far as what you suggested (explicitly passing an index to `cut`), I think the issue is that the index is created in `groupby`, not `cut`, so it's the creation of a categorical that's the issue. (The introduction of `CategoricalIndex` is what started this whole thing in the first place, because `groupby` started taking the categoricals that `cut` was passing and creating categorical indices rather than inferring the type from the actual content of the index.)\n\nThoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/105883388",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-105883388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 105883388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTg4MzM4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-27T11:52:46Z",
    "updated_at": "2015-05-27T11:52:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@therriault adding a very specific case is a non-starter. The general soln is to allow a passed `Index` as the binlabels as I described above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/113759833",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10140#issuecomment-113759833",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10140",
    "id": 113759833,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzc1OTgzMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-20T12:48:08Z",
    "updated_at": "2015-06-20T12:48:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as soln is to use plot Categoricals (see #10254); the generated index type is correct.\n"
  }
]
