[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/77246445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-77246445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 77246445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc3MjQ2NDQ1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-04T21:01:51Z",
    "updated_at": "2015-03-04T21:02:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "so you are basically emulating a column store with a 'convention'. see #4454 \n\nI think we would definitly support this format, e.g. `format='column'` or whatever directly in HDFStore. \nAlternateively this is what `bcolz` does in effect. BUT I think having it accesible via `HDFStore` would be great!.\n\nWould welcome a PR with tests for this! (and some perf figures).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78488157",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-78488157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 78488157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NDg4MTU3",
    "user": {
      "login": "Chris7",
      "id": 963909,
      "node_id": "MDQ6VXNlcjk2MzkwOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/963909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Chris7",
      "html_url": "https://github.com/Chris7",
      "followers_url": "https://api.github.com/users/Chris7/followers",
      "following_url": "https://api.github.com/users/Chris7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Chris7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Chris7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Chris7/subscriptions",
      "organizations_url": "https://api.github.com/users/Chris7/orgs",
      "repos_url": "https://api.github.com/users/Chris7/repos",
      "events_url": "https://api.github.com/users/Chris7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Chris7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T14:21:08Z",
    "updated_at": "2015-03-12T14:21:08Z",
    "author_association": "NONE",
    "body": "I'll have a PR up with some tests in a week or so. I'm using it locally for a bit on my data to see if any more bugs crop up.\n\nAdvice on the following would be appreciated if possible:\nThe natural attribute access (table names with a . in them) -- does this need to be supported in pandas? A work around is to have a table_name.replace('.', '_') or something of that sort. But if panda's doesn't use attribute access anyways I'd rather not change the name and let the warning propagate to the user.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/78622702",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-78622702",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 78622702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4NjIyNzAy",
    "user": {
      "login": "Chris7",
      "id": 963909,
      "node_id": "MDQ6VXNlcjk2MzkwOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/963909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Chris7",
      "html_url": "https://github.com/Chris7",
      "followers_url": "https://api.github.com/users/Chris7/followers",
      "following_url": "https://api.github.com/users/Chris7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Chris7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Chris7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Chris7/subscriptions",
      "organizations_url": "https://api.github.com/users/Chris7/orgs",
      "repos_url": "https://api.github.com/users/Chris7/repos",
      "events_url": "https://api.github.com/users/Chris7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Chris7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-12T21:19:39Z",
    "updated_at": "2015-03-12T21:21:17Z",
    "author_association": "NONE",
    "body": "Initial test of this can be found here:\n\nhttps://github.com/Chris7/pandas/commit/f4fac30679d53c6092843d374fa66ae48b666f85\n\nI'd appreciate any feedback on my approach.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/79007763",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-79007763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 79007763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MDA3NzYz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-13T14:49:29Z",
    "updated_at": "2015-03-13T14:50:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@chrisjbillington \n\nThis is a nice idea. But needs to conform a bit more to the current structure. You need to subclass `AppendableFrameTable` and overwrite `read/write` methods. \n- you need to subclass `AppendableFrameTable` to support this format generically\n- all of the data needs to exist under the current node, not in the root of the file (so you could potentially have different / multiple of 'column'/'table' stores)\n- repr needs to be tested for column stores\n- need to see if `data_columns` is necessary for this type (e.g. you are effectively storing collections of columns), but they could in theory be stored exactly like tables\n- need tests for multi dtypes\n- need tests for add / delete columns, adding duplicate columns\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/89638839",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-89638839",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 89638839,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5NjM4ODM5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-04T18:50:11Z",
    "updated_at": "2015-04-04T18:50:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "hows this coming?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/89831893",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-89831893",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 89831893,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODMxODkz",
    "user": {
      "login": "Chris7",
      "id": 963909,
      "node_id": "MDQ6VXNlcjk2MzkwOQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/963909?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Chris7",
      "html_url": "https://github.com/Chris7",
      "followers_url": "https://api.github.com/users/Chris7/followers",
      "following_url": "https://api.github.com/users/Chris7/following{/other_user}",
      "gists_url": "https://api.github.com/users/Chris7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Chris7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Chris7/subscriptions",
      "organizations_url": "https://api.github.com/users/Chris7/orgs",
      "repos_url": "https://api.github.com/users/Chris7/repos",
      "events_url": "https://api.github.com/users/Chris7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Chris7/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-05T18:54:51Z",
    "updated_at": "2015-04-05T18:54:51Z",
    "author_association": "NONE",
    "body": "Hey,\n\nWork got a bit crazy for the past few weeks -- and I ended up circumventing the need for this structure using an alternative approach. Though I'm still interesting in tackling this issue since pandas really scratches a lot of itches I have quite nicely.\n\nThanks for the feedback, I'm going to implement it with your guidelines when I get some more of that elusive free time. I should have a new PR with a more generic design pattern this week.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/89832897",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-89832897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 89832897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg5ODMyODk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-05T19:13:11Z",
    "updated_at": "2015-04-05T19:13:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "awesome! lmk\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102565948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-102565948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 102565948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjU2NTk0OA==",
    "user": {
      "login": "chrismit",
      "id": 2047629,
      "node_id": "MDQ6VXNlcjIwNDc2Mjk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2047629?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrismit",
      "html_url": "https://github.com/chrismit",
      "followers_url": "https://api.github.com/users/chrismit/followers",
      "following_url": "https://api.github.com/users/chrismit/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrismit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrismit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrismit/subscriptions",
      "organizations_url": "https://api.github.com/users/chrismit/orgs",
      "repos_url": "https://api.github.com/users/chrismit/repos",
      "events_url": "https://api.github.com/users/chrismit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrismit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T02:35:12Z",
    "updated_at": "2015-05-16T02:35:12Z",
    "author_association": "NONE",
    "body": "Just a heads up, I'm trying to finish my dissertation at the moment but I still am interested in finishing this bit after that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239006656",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-239006656",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 239006656,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAwNjY1Ng==",
    "user": {
      "login": "hnykda",
      "id": 2741256,
      "node_id": "MDQ6VXNlcjI3NDEyNTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2741256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hnykda",
      "html_url": "https://github.com/hnykda",
      "followers_url": "https://api.github.com/users/hnykda/followers",
      "following_url": "https://api.github.com/users/hnykda/following{/other_user}",
      "gists_url": "https://api.github.com/users/hnykda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hnykda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hnykda/subscriptions",
      "organizations_url": "https://api.github.com/users/hnykda/orgs",
      "repos_url": "https://api.github.com/users/hnykda/repos",
      "events_url": "https://api.github.com/users/hnykda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hnykda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T21:14:31Z",
    "updated_at": "2016-08-10T21:16:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "This looks great! Thank you for this. Will this work with `table` format or only `fixed`?\n\nCould we also possibly enhance the current error when trying to save wide tables? This is what you get for:\n\n``` python\nimport pandas as pd\ndf = pd.DataFrame(columns=['Some Teribly Long String With Many Characters' + str(i) for i in range(10000)])\ndf.loc[0] = 3\ndf.to_hdf('test.hdf', 'main', format='table')\n```\n\n## Error\n\n``` python\n---------------------------------------------------------------------------\nHDF5ExtError                              Traceback (most recent call last)\n<ipython-input-7-f85f8d86c365> in <module>()\n----> 1 df.to_hdf('test.hdf', 'main', format='table')\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/pandas/core/generic.py in to_hdf(self, path_or_buf, key, **kwargs)\n   1094 \n   1095         from pandas.io import pytables\n-> 1096         return pytables.to_hdf(path_or_buf, key, self, **kwargs)\n   1097 \n   1098     def to_msgpack(self, path_or_buf=None, encoding='utf-8', **kwargs):\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/pandas/io/pytables.py in to_hdf(path_or_buf, key, value, mode, complevel, complib, append, **kwargs)\n    258         with HDFStore(path_or_buf, mode=mode, complevel=complevel,\n    259                       complib=complib) as store:\n--> 260             f(store)\n    261     else:\n    262         f(path_or_buf)\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/pandas/io/pytables.py in <lambda>(store)\n    253         f = lambda store: store.append(key, value, **kwargs)\n    254     else:\n--> 255         f = lambda store: store.put(key, value, **kwargs)\n    256 \n    257     if isinstance(path_or_buf, string_types):\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/pandas/io/pytables.py in put(self, key, value, format, append, **kwargs)\n    824             format = get_option(\"io.hdf.default_format\") or 'fixed'\n    825         kwargs = self._validate_format(format, kwargs)\n--> 826         self._write_to_group(key, value, append=append, **kwargs)\n    827 \n    828     def remove(self, key, where=None, start=None, stop=None):\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/pandas/io/pytables.py in _write_to_group(self, key, value, format, index, append, complib, encoding, **kwargs)\n   1262 \n   1263         # write the object\n-> 1264         s.write(obj=value, append=append, complib=complib, **kwargs)\n   1265 \n   1266         if s.is_table and index:\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/pandas/io/pytables.py in write(self, obj, axes, append, complib, complevel, fletcher32, min_itemsize, chunksize, expectedrows, dropna, **kwargs)\n   3799 \n   3800             # set the table attributes\n-> 3801             self.set_attrs()\n   3802 \n   3803             # create the table\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/pandas/io/pytables.py in set_attrs(self)\n   3050         self.attrs.index_cols = self.index_cols()\n   3051         self.attrs.values_cols = self.values_cols()\n-> 3052         self.attrs.non_index_axes = self.non_index_axes\n   3053         self.attrs.data_columns = self.data_columns\n   3054         self.attrs.nan_rep = self.nan_rep\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/tables/attributeset.py in __setattr__(self, name, value)\n    459 \n    460         # Set the attribute.\n--> 461         self._g__setattr(name, value)\n    462 \n    463         # Log new attribute addition.\n\n/home/dan/.local/opt/miniconda3/envs/mathbs/lib/python3.5/site-packages/tables/attributeset.py in _g__setattr(self, name, value)\n    401             value = stvalue[()]\n    402 \n--> 403         self._g_setattr(self._v_node, name, stvalue)\n    404 \n    405         # New attribute or value. Introduce it into the local\n\ntables/hdf5extension.pyx in tables.hdf5extension.AttributeSet._g_setattr (tables/hdf5extension.c:7824)()\n\nHDF5ExtError: HDF5 error back trace\n\n  File \"H5A.c\", line 259, in H5Acreate2\n    unable to create attribute\n  File \"H5Aint.c\", line 275, in H5A_create\n    unable to create attribute in object header\n  File \"H5Oattribute.c\", line 347, in H5O_attr_create\n    unable to create new attribute in header\n  File \"H5Omessage.c\", line 224, in H5O_msg_append_real\n    unable to create new message\n  File \"H5Omessage.c\", line 1945, in H5O_msg_alloc\n    unable to allocate space for message\n  File \"H5Oalloc.c\", line 1142, in H5O_alloc\n    object header message is too large\n\nEnd of HDF5 error back trace\n\nCan't set attribute 'non_index_axes' in node:\n /main (Group) ''.\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239024901",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-239024901",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 239024901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAyNDkwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T22:30:58Z",
    "updated_at": "2016-08-10T22:30:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hnykda this is just a proposal. would take a pull-request to complete this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239026451",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-239026451",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 239026451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTAyNjQ1MQ==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-10T22:38:56Z",
    "updated_at": "2016-08-10T22:38:56Z",
    "author_association": "MEMBER",
    "body": "FWIW, very wide dataframes is usually is a sign that you're slightly abusing the dataframe data model -- you'll be happier if you can stick to [tidy data](http://vita.had.co.nz/papers/tidy-data.pdf). If your data is intrinsically multi-dimensional, you might be happier trying [xarray](http://xarray.pydata.org/), which inter-operates with pandas and can efficiently write multi-dimensional data to netCDF/HDF5.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/239125207",
    "html_url": "https://github.com/pandas-dev/pandas/issues/9590#issuecomment-239125207",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9590",
    "id": 239125207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTEyNTIwNw==",
    "user": {
      "login": "hnykda",
      "id": 2741256,
      "node_id": "MDQ6VXNlcjI3NDEyNTY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2741256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hnykda",
      "html_url": "https://github.com/hnykda",
      "followers_url": "https://api.github.com/users/hnykda/followers",
      "following_url": "https://api.github.com/users/hnykda/following{/other_user}",
      "gists_url": "https://api.github.com/users/hnykda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hnykda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hnykda/subscriptions",
      "organizations_url": "https://api.github.com/users/hnykda/orgs",
      "repos_url": "https://api.github.com/users/hnykda/repos",
      "events_url": "https://api.github.com/users/hnykda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hnykda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-11T10:29:55Z",
    "updated_at": "2016-08-11T10:29:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer: We use pandas in our data processing pipeline. My data are about suveys, which mostly have binary answers (yes or no). Furthermore, because some companies we cooperate with demands to have data fully one-hot-encoded. Because of this (and legacy reasons, e.g. loading it to platform, which needs all the columns), we have to store datasets usually about 50k rows and up to 10k columns. I don't know how anything from _tidy data_  can help me here, unfortunately. And data are strictly flat, so `xarray` won't help much either. \n"
  }
]
