[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6149363",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1414#issuecomment-6149363",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1414",
    "id": 6149363,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDkzNjM=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-06T12:33:19Z",
    "updated_at": "2012-06-06T12:33:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would you prefer that once dtype is object it stays object?\nIt is by design that the ouput of apply func is evaluated to determine the dtype of return series.\n\n``` python\nIn [46]: s\nOut[46]:\n0    1\n1    2\n2    3\n3    4\n4    5\n\nIn [47]: def divby3(x):\n   ....:     return x/3.0\n   ....:\n\nIn [48]: s.dtype\nOut[48]: dtype('int64')\n\nIn [49]: s.apply(divby3).dtype\nOut[49]: dtype('float64')\n\nIn [50]: s.apply(divby3)\nOut[50]:\n0    0.333333\n1    0.666667\n2    1.000000\n3    1.333333\n4    1.666667\n\nIn [51]: s.apply(str).dtype\nOut[51]: dtype('object')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6149482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1414#issuecomment-6149482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1414",
    "id": 6149482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk0ODI=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-06T12:38:59Z",
    "updated_at": "2012-06-06T12:38:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "In data mercoledÃ¬ 6 giugno 2012 05:33:20, hai scritto:\n\n> Would you prefer that once dtype is object it stays object?\n\nPersonally yes, because otherwise to achieve the same result as the function \nposted in the bug report:\n1. I have to create a temporary list\n2. I have to add all the items from the Series to the new list doing the work \n   the function does\n3. I have to create a Series with the desired dtype at the end, constructed \n   with the list and the index of the original one.\n\nOf course if there are technical reasons for this I'll just keep this hack \naround.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6149673",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1414#issuecomment-6149673",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1414",
    "id": 6149673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk2NzM=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-06T12:49:20Z",
    "updated_at": "2012-06-06T12:49:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that you can use astype:\n\n``` python\nIn [15]: original.apply(convert)\nOut[15]:\n0     1\n1     2\n2     3\n3   NaN\n\nIn [16]: original.apply(convert).astype('object')\nOut[16]:\n0      1\n1      2\n2      3\n3    NaN\n\nIn [17]: original.apply(convert).astype('object').dtype\nOut[17]: dtype('object')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6149882",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1414#issuecomment-6149882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1414",
    "id": 6149882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk4ODI=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-06T12:59:30Z",
    "updated_at": "2012-06-06T12:59:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "It doesn't however keep the elements as ints, but instead as floats (so all \".0\" etc). So \"convert\" doesn't do actually anything.\n\n``` python\n\nIn [191]: type(original.apply(convert).astype(\"object\")[0])\nOut[191]: float\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6150266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1414#issuecomment-6150266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1414",
    "id": 6150266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTAyNjY=",
    "user": {
      "login": "lodagro",
      "id": 1094464,
      "node_id": "MDQ6VXNlcjEwOTQ0NjQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1094464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lodagro",
      "html_url": "https://github.com/lodagro",
      "followers_url": "https://api.github.com/users/lodagro/followers",
      "following_url": "https://api.github.com/users/lodagro/following{/other_user}",
      "gists_url": "https://api.github.com/users/lodagro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lodagro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lodagro/subscriptions",
      "organizations_url": "https://api.github.com/users/lodagro/orgs",
      "repos_url": "https://api.github.com/users/lodagro/repos",
      "events_url": "https://api.github.com/users/lodagro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lodagro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-06T13:17:19Z",
    "updated_at": "2012-06-06T13:17:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "[int and na](http://pandas.pydata.org/pandas-docs/dev/gotchas.html#support-for-integer-na) don`t match and the proposed workaround to use object has its limits also, or is it astype that does not do a proper job?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6150318",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1414#issuecomment-6150318",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1414",
    "id": 6150318,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNTAzMTg=",
    "user": {
      "login": "lbeltrame",
      "id": 25192,
      "node_id": "MDQ6VXNlcjI1MTky",
      "avatar_url": "https://avatars0.githubusercontent.com/u/25192?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lbeltrame",
      "html_url": "https://github.com/lbeltrame",
      "followers_url": "https://api.github.com/users/lbeltrame/followers",
      "following_url": "https://api.github.com/users/lbeltrame/following{/other_user}",
      "gists_url": "https://api.github.com/users/lbeltrame/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lbeltrame/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lbeltrame/subscriptions",
      "organizations_url": "https://api.github.com/users/lbeltrame/orgs",
      "repos_url": "https://api.github.com/users/lbeltrame/repos",
      "events_url": "https://api.github.com/users/lbeltrame/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lbeltrame/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-06T13:19:28Z",
    "updated_at": "2012-06-06T13:19:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think it's astype. I think this is a side effect of int being promoted to float.  For now I guess I'll keep a temporary list hack, even though this is pretty inefficient for large Series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6178494",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1414#issuecomment-6178494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1414",
    "id": 6178494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNzg0OTQ=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-07T15:14:41Z",
    "updated_at": "2012-06-07T15:14:41Z",
    "author_association": "MEMBER",
    "body": "This is by design. I will see about adding an option to leave the result as `dtype=object` (the type inference helps much more than it hurts)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6252065",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1414#issuecomment-6252065",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1414",
    "id": 6252065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTIwNjU=",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-11T18:28:11Z",
    "updated_at": "2012-06-11T18:28:11Z",
    "author_association": "MEMBER",
    "body": "Added a `convert_dtype` option so you can pass `convert_dtype=False` to leave it as `object`\n"
  }
]
