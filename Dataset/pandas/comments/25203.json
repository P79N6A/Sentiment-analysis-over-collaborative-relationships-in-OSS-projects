[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465272650",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25203#issuecomment-465272650",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25203",
    "id": 465272650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTI3MjY1MA==",
    "user": {
      "login": "TrigonaMinima",
      "id": 2520893,
      "node_id": "MDQ6VXNlcjI1MjA4OTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2520893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TrigonaMinima",
      "html_url": "https://github.com/TrigonaMinima",
      "followers_url": "https://api.github.com/users/TrigonaMinima/followers",
      "following_url": "https://api.github.com/users/TrigonaMinima/following{/other_user}",
      "gists_url": "https://api.github.com/users/TrigonaMinima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TrigonaMinima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TrigonaMinima/subscriptions",
      "organizations_url": "https://api.github.com/users/TrigonaMinima/orgs",
      "repos_url": "https://api.github.com/users/TrigonaMinima/repos",
      "events_url": "https://api.github.com/users/TrigonaMinima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TrigonaMinima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T19:19:21Z",
    "updated_at": "2019-02-19T19:19:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel I'd like to work on this, but I don't understand what you mean by making them more coherent.\r\n\r\nJust to clarify, by upstream you mean there are no more package (`pandas`) imports in the upstream modules and other downstream modules import from these top level (upstream) modules?\r\n\r\nA few questions from each of the points you mentioned-\r\n\r\n- Where should the ```compat.pickle_compat``` go?\r\n- Making `util._validators` self contained meaning moving them to `compat.numpy` and then using them directly in `compat.numpy.function`?\r\n- Create 2 directories like `code.dtypes.core` and `code.dtypes.non_core` for the lack of better directory names\r\n- Where would the `config` move to when made upstream? How to decide the important parts of `io`\r\n- I don't understand what to do with `_decorators` and `testing` here.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465281343",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25203#issuecomment-465281343",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25203",
    "id": 465281343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTI4MTM0Mw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T19:43:29Z",
    "updated_at": "2019-02-19T19:43:29Z",
    "author_association": "MEMBER",
    "body": "@TrigonaMinima this topic needs discussion before being implemented.  The most helpful thing to do here is offer a thoughtful opinion on whether this is a good or bad idea (e.g. how users or developers of other projects might be affected).\r\n\r\n> Just to clarify, by upstream you mean there are no more package (`pandas`) imports in the upstream modules and other downstream modules import from these top level (upstream) modules?\r\n\r\nRight.  `pandas.foo` is upstream from `pandas.bar` if `bar` imports from `foo` and `foo` does _not_ import from `bar`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/465303719",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25203#issuecomment-465303719",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25203",
    "id": 465303719,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NTMwMzcxOQ==",
    "user": {
      "login": "TrigonaMinima",
      "id": 2520893,
      "node_id": "MDQ6VXNlcjI1MjA4OTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2520893?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TrigonaMinima",
      "html_url": "https://github.com/TrigonaMinima",
      "followers_url": "https://api.github.com/users/TrigonaMinima/followers",
      "following_url": "https://api.github.com/users/TrigonaMinima/following{/other_user}",
      "gists_url": "https://api.github.com/users/TrigonaMinima/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TrigonaMinima/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TrigonaMinima/subscriptions",
      "organizations_url": "https://api.github.com/users/TrigonaMinima/orgs",
      "repos_url": "https://api.github.com/users/TrigonaMinima/repos",
      "events_url": "https://api.github.com/users/TrigonaMinima/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TrigonaMinima/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-19T20:48:45Z",
    "updated_at": "2019-02-19T20:48:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have only been a user of pandas till now - mostly with jupyter notebooks. I am not familiar with the pandas code base and how it's being used by other project devs. From my very naive point of view, I think, we should divide it into 2 parts-\r\n\r\n1. Parts which are completely internal and can be refactored. By internal I mean the files which will not be used directly by the users. For example `_decorators` looks like an internal file.\r\n2. Parts where we have to think about not breaking things for the users.\r\n\r\n1st part we can work upon now, meanwhile 2nd part can be discussed further.\r\n\r\nBut I think to me the bigger question is, why to even do this activity? Is spending time on this important? Forgive me if this is something obvious. Is it to simplify the pandas code base so that it's more intuitive?"
  }
]
