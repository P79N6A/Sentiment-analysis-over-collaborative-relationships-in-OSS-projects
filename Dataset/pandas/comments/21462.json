[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397023862",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397023862",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397023862,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAyMzg2Mg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T17:40:13Z",
    "updated_at": "2018-06-13T17:40:13Z",
    "author_association": "MEMBER",
    "body": "Can you add a test for the referenced issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397027717",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397027717",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397027717,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAyNzcxNw==",
    "user": {
      "login": "uds5501",
      "id": 21087061,
      "node_id": "MDQ6VXNlcjIxMDg3MDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21087061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uds5501",
      "html_url": "https://github.com/uds5501",
      "followers_url": "https://api.github.com/users/uds5501/followers",
      "following_url": "https://api.github.com/users/uds5501/following{/other_user}",
      "gists_url": "https://api.github.com/users/uds5501/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uds5501/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uds5501/subscriptions",
      "organizations_url": "https://api.github.com/users/uds5501/orgs",
      "repos_url": "https://api.github.com/users/uds5501/repos",
      "events_url": "https://api.github.com/users/uds5501/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uds5501/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T17:52:29Z",
    "updated_at": "2018-06-13T17:52:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd Actually, I would appreciate a little help here. My build failed with the following error report after running `pd.test()`\r\n\r\n```python\r\n\r\n_____________ TestCParserHighMemory.test_usecols_with_parse_dates ______________\r\n\r\nself = <pandas.tests.io.parser.test_parsers.TestCParserHighMemory object at 0x7f04da490be0>\r\n\r\n    def test_usecols_with_parse_dates(self):\r\n        # See gh-9755\r\n        s = \"\"\"a,b,c,d,e\r\n            0,1,20140101,0900,4\r\n            0,1,20140102,1000,4\"\"\"\r\n        parse_dates = [[1, 2]]\r\n    \r\n        cols = {\r\n            'a': [0, 0],\r\n            'c_d': [\r\n                Timestamp('2014-01-01 09:00:00'),\r\n                Timestamp('2014-01-02 10:00:00')\r\n            ]\r\n        }\r\n        expected = DataFrame(cols, columns=['c_d', 'a'])\r\n    \r\n        df = self.read_csv(StringIO(s), usecols=[0, 2, 3],\r\n                           parse_dates=parse_dates)\r\n        tm.assert_frame_equal(df, expected)\r\n    \r\n        df = self.read_csv(StringIO(s), usecols=[3, 0, 2],\r\n                           parse_dates=parse_dates)\r\n        tm.assert_frame_equal(df, expected)\r\n    \r\n        # See gh-13604\r\n        s = \"\"\"2008-02-07 09:40,1032.43\r\n            2008-02-07 09:50,1042.54\r\n            2008-02-07 10:00,1051.65\r\n            \"\"\"\r\n        parse_dates = [0]\r\n        names = ['date', 'values']\r\n        usecols = names[:]\r\n    \r\n        index = Index([Timestamp('2008-02-07 09:40'),\r\n                       Timestamp('2008-02-07 09:50'),\r\n                       Timestamp('2008-02-07 10:00')],\r\n                      name='date')\r\n        cols = {'values': [1032.43, 1042.54, 1051.65]}\r\n        expected = DataFrame(cols, index=index)\r\n    \r\n        df = self.read_csv(StringIO(s), parse_dates=parse_dates, index_col=0,\r\n                           usecols=usecols, header=None, names=names)\r\n        tm.assert_frame_equal(df, expected)\r\n    \r\n        # See gh-14792\r\n        s = \"\"\"a,b,c,d,e,f,g,h,i,j\r\n            2016/09/21,1,1,2,3,4,5,6,7,8\"\"\"\r\n        parse_dates = [0]\r\n        usecols = list('abcdefghij')\r\n        cols = {'a': Timestamp('2016-09-21'),\r\n                'b': [1], 'c': [1], 'd': [2],\r\n                'e': [3], 'f': [4], 'g': [5],\r\n                'h': [6], 'i': [7], 'j': [8]}\r\n        expected = DataFrame(cols, columns=usecols)\r\n        df = self.read_csv(StringIO(s), usecols=usecols,\r\n                           parse_dates=parse_dates)\r\n        tm.assert_frame_equal(df, expected)\r\n    \r\n        s = \"\"\"a,b,c,d,e,f,g,h,i,j\\n2016/09/21,1,1,2,3,4,5,6,7,8\"\"\"\r\n        parse_dates = [[0, 1]]\r\n        usecols = list('abcdefghij')\r\n        cols = {'a_b': '2016/09/21 1',\r\n                'c': [1], 'd': [2], 'e': [3], 'f': [4],\r\n                'g': [5], 'h': [6], 'i': [7], 'j': [8]}\r\n        expected = DataFrame(cols, columns=['a_b'] + list('cdefghij'))\r\n        df = self.read_csv(StringIO(s), usecols=usecols,\r\n                           parse_dates=parse_dates)\r\n>       tm.assert_frame_equal(df, expected)\r\n\r\npandas/tests/io/parser/usecols.py:261: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npandas/util/testing.py:1353: in assert_frame_equal\r\n    obj='DataFrame.iloc[:, {idx}]'.format(idx=i))\r\npandas/util/testing.py:1198: in assert_series_equal\r\n    assert_attr_equal('dtype', left, right)\r\npandas/util/testing.py:929: in assert_attr_equal\r\n    raise_assert_detail(obj, msg, left_attr, right_attr)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nobj = 'Attributes', message = 'Attribute \"dtype\" are different'\r\nleft = dtype('<M8[ns]'), right = dtype('O'), diff = None\r\n\r\n    def raise_assert_detail(obj, message, left, right, diff=None):\r\n        if isinstance(left, np.ndarray):\r\n            left = pprint_thing(left)\r\n        elif is_categorical_dtype(left):\r\n            left = repr(left)\r\n    \r\n        if PY2 and isinstance(left, string_types):\r\n            # left needs to be printable in native text type in python2\r\n            left = left.encode('utf-8')\r\n    \r\n        if isinstance(right, np.ndarray):\r\n            right = pprint_thing(right)\r\n        elif is_categorical_dtype(right):\r\n            right = repr(right)\r\n    \r\n        if PY2 and isinstance(right, string_types):\r\n            # right needs to be printable in native text type in python2\r\n            right = right.encode('utf-8')\r\n    \r\n        msg = \"\"\"{obj} are different\r\n    \r\n    {message}\r\n    [left]:  {left}\r\n    [right]: {right}\"\"\".format(obj=obj, message=message, left=left, right=right)\r\n    \r\n        if diff is not None:\r\n            msg += \"\\n[diff]: {diff}\".format(diff=diff)\r\n    \r\n>       raise AssertionError(msg)\r\nE       AssertionError: Attributes are different\r\nE       \r\nE       Attribute \"dtype\" are different\r\nE       [left]:  datetime64[ns]\r\nE       [right]: object\r\n\r\npandas/util/testing.py:1023: AssertionError\r\n```\r\nDo correct me if I am wrong, but this test is supposed to mean that `df`' and `expected` have different attribute dtypes here, right? So I tried recreating the test using the given utilities and checked `df.info()` and `expected.info()` to get the following output:\r\n\r\n```python\r\n<class 'pandas.core.frame.DataFrame'>\r\nRangeIndex: 1 entries, 0 to 0\r\nData columns (total 9 columns):\r\na_b    1 non-null object\r\nc      1 non-null int64\r\nd      1 non-null int64\r\ne      1 non-null int64\r\nf      1 non-null int64\r\ng      1 non-null int64\r\nh      1 non-null int64\r\ni      1 non-null int64\r\nj      1 non-null int64\r\ndtypes: int64(8), object(1)\r\nmemory usage: 152.0+ bytes\r\nNone\r\n            a_b  c  d  e  f  g  h  i  j\r\n0  2016/09/21 1  1  2  3  4  5  6  7  8\r\n<class 'pandas.core.frame.DataFrame'>\r\nRangeIndex: 1 entries, 0 to 0\r\nData columns (total 9 columns):\r\na_b    1 non-null object\r\nc      1 non-null int64\r\nd      1 non-null int64\r\ne      1 non-null int64\r\nf      1 non-null int64\r\ng      1 non-null int64\r\nh      1 non-null int64\r\ni      1 non-null int64\r\nj      1 non-null int64\r\ndtypes: int64(8), object(1)\r\nmemory usage: 152.0+ bytes\r\nNone\r\n            a_b  c  d  e  f  g  h  i  j\r\n0  2016/09/21 1  1  2  3  4  5  6  7  8\r\n\r\n# Ran without throwing any error \r\n```\r\nBut here I cannot see any `datetime64[ns]` object , so what exactly is this build error trying to show me?\r\n**NOTE** : this is only one of the errors which I tried to investigate , the testing summary was as follows: \r\n\r\n` 5 failed, 24042 passed, 2296 skipped, 80 xfailed, 31 xpassed, 14 warnings in 471.57 seconds `"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397029025",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397029025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397029025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAyOTAyNQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T17:56:39Z",
    "updated_at": "2018-06-13T17:56:39Z",
    "author_association": "MEMBER",
    "body": "Oh OK - just to clarify that's not a \"build error\" (which would come while doing `python setup.py build_ext --inplace`) but rather a test error occurred after making the change. \r\n\r\nDoes that test work when you perform a clean build on master and subsequently fail when you re-build after making the change you've pushed? If so that's indicative that your change as is wouldn't work as it's breaking existing test cases so something would need to change"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397039527",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397039527",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397039527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzAzOTUyNw==",
    "user": {
      "login": "uds5501",
      "id": 21087061,
      "node_id": "MDQ6VXNlcjIxMDg3MDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21087061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uds5501",
      "html_url": "https://github.com/uds5501",
      "followers_url": "https://api.github.com/users/uds5501/followers",
      "following_url": "https://api.github.com/users/uds5501/following{/other_user}",
      "gists_url": "https://api.github.com/users/uds5501/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uds5501/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uds5501/subscriptions",
      "organizations_url": "https://api.github.com/users/uds5501/orgs",
      "repos_url": "https://api.github.com/users/uds5501/repos",
      "events_url": "https://api.github.com/users/uds5501/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uds5501/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T18:29:15Z",
    "updated_at": "2018-06-13T18:29:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd Thank you for that!\r\nWell yes, the tests pass on the master build. I guess I got to tweak the code a little"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397040760",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397040760",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397040760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA0MDc2MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T18:33:10Z",
    "updated_at": "2018-06-13T18:33:10Z",
    "author_association": "MEMBER",
    "body": "You are correct in that the error message is telling you that the dtypes of the various columns are not aligned. Can you inspect a little further to see the difference though? Just glancing over it I'm assuming `expected` contains the object dtype but maybe it shouldn't? \r\n\r\nSometimes tests are wrong so try to debug and let me know if you can find any insights"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397044126",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397044126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397044126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzA0NDEyNg==",
    "user": {
      "login": "uds5501",
      "id": 21087061,
      "node_id": "MDQ6VXNlcjIxMDg3MDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21087061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uds5501",
      "html_url": "https://github.com/uds5501",
      "followers_url": "https://api.github.com/users/uds5501/followers",
      "following_url": "https://api.github.com/users/uds5501/following{/other_user}",
      "gists_url": "https://api.github.com/users/uds5501/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uds5501/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uds5501/subscriptions",
      "organizations_url": "https://api.github.com/users/uds5501/orgs",
      "repos_url": "https://api.github.com/users/uds5501/repos",
      "events_url": "https://api.github.com/users/uds5501/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uds5501/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-13T18:43:28Z",
    "updated_at": "2018-06-13T18:43:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd Okay, sure. I will work on it\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397171645",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397171645",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397171645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzE3MTY0NQ==",
    "user": {
      "login": "uds5501",
      "id": 21087061,
      "node_id": "MDQ6VXNlcjIxMDg3MDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21087061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uds5501",
      "html_url": "https://github.com/uds5501",
      "followers_url": "https://api.github.com/users/uds5501/followers",
      "following_url": "https://api.github.com/users/uds5501/following{/other_user}",
      "gists_url": "https://api.github.com/users/uds5501/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uds5501/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uds5501/subscriptions",
      "organizations_url": "https://api.github.com/users/uds5501/orgs",
      "repos_url": "https://api.github.com/users/uds5501/repos",
      "events_url": "https://api.github.com/users/uds5501/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uds5501/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T05:05:09Z",
    "updated_at": "2018-06-14T05:05:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd I wanted to know something about the dataframe reading syntaxes in classes.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/b5fc76954963e30b7d7dd4c30ed7363568fd01ee/pandas/tests/io/parser/usecols.py#L210\r\n\r\nI want to know what is the difference between `self.read_csv` and `pd.read_csv` . Also, it would be great to know how does this `self.read_csv` works given the fact that there is no method as such defined within the class"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397174795",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397174795",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397174795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzE3NDc5NQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T05:24:12Z",
    "updated_at": "2018-06-14T05:24:12Z",
    "author_association": "MEMBER",
    "body": "It could be clearer but the `self` in those instances are subclasses of the `UsecolsTest` class in the module. If you look in `test_parsers` you should see how the subclasses actually implement that"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397354108",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397354108",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397354108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzM1NDEwOA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T16:19:57Z",
    "updated_at": "2018-06-14T16:19:57Z",
    "author_association": "MEMBER",
    "body": "Just to make sure I understand the issue this PR is trying to address: ATM `pd.to_datetime(\"2016.05.06 01\")` returns `pd.Timestamp(\"2016-05-06 01:00:00\")` but `pd.to_datetime(\"2016.05.06 1\")` raises `ValueError`.  And the point of the PR is to make the latter return the same as the former?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/397368590",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-397368590",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 397368590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzM2ODU5MA==",
    "user": {
      "login": "uds5501",
      "id": 21087061,
      "node_id": "MDQ6VXNlcjIxMDg3MDYx",
      "avatar_url": "https://avatars3.githubusercontent.com/u/21087061?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/uds5501",
      "html_url": "https://github.com/uds5501",
      "followers_url": "https://api.github.com/users/uds5501/followers",
      "following_url": "https://api.github.com/users/uds5501/following{/other_user}",
      "gists_url": "https://api.github.com/users/uds5501/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/uds5501/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/uds5501/subscriptions",
      "organizations_url": "https://api.github.com/users/uds5501/orgs",
      "repos_url": "https://api.github.com/users/uds5501/repos",
      "events_url": "https://api.github.com/users/uds5501/events{/privacy}",
      "received_events_url": "https://api.github.com/users/uds5501/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-14T17:06:08Z",
    "updated_at": "2018-06-14T17:06:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jbrockmendel Yes, that is correct"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/424412050",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-424412050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 424412050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNDQxMjA1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-25T16:27:48Z",
    "updated_at": "2018-09-25T16:27:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you rebase"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441149680",
    "html_url": "https://github.com/pandas-dev/pandas/pull/21462#issuecomment-441149680",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21462",
    "id": 441149680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE0OTY4MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T03:26:42Z",
    "updated_at": "2018-11-23T03:26:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as stale."
  }
]
