[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34932046",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6328#issuecomment-34932046",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6328",
    "id": 34932046,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTMyMDQ2",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-12T23:36:40Z",
    "updated_at": "2014-02-12T23:36:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here are some starting thoughts:\n- Each fastpath wrapper should convert its wrappee (is this a real word?) to the closest variant accepted by `numpy` (with an exception, see below). Luckily, `numpy` containers allow few indexing options (basic, boolean, integer)\n- Inferring block type from `ndarray` is complicated and very slow due to timestamp impedance mismatch with `numpy` and I don't intend to tackle it atm. This means that actual slicing should happen at `Block` or `BlockManager` level to avoid losing type information. Which leads to the following.\n- Due to `BlockManager` structure, all containers but `Series` have one axis (`items`/`columns`) that can only be integer-indexed and should be handled accordingly. Basically, there should be two steps: one that selects subset (or all) items from `BlockManager` and the other that slices `Block`s as necessary.\n- It would be great to implement (or to actually find it if it's already there) a single entry point to `BlockManager` API that, given all the `ndim` slices in `numpy`-acceptable formats (with `items` restricted to integer indexer only), would return the resulting BlockManager or scalar. The implementation seems to be reasonably simple and this would also restrict fastpath wrappers' responsibilities to operating with axes and converting slices/indices as necessary.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34932818",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6328#issuecomment-34932818",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6328",
    "id": 34932818,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTMyODE4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-12T23:47:47Z",
    "updated_at": "2014-02-12T23:47:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@immerrr \n\nTheir needs to be a couple of benchmark cases here, e.g. usecases that are too slow using a straight indexer, so need a fast one.\n\ncan you post some of these cases, with the current benchmark; then a 'hacked' version (use whatever tricks to fast-path that case).\n\nThis will help narrow down which cases matter, and what needs to be tackled.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34934410",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6328#issuecomment-34934410",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6328",
    "id": 34934410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTM0NDEw",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T00:10:22Z",
    "updated_at": "2014-02-13T00:30:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a quick proof-of-concept hack _(UPD: disregard the dataframe example because on bigger datasets full slicing `[:, mask]` is actually slower than `take(mask.nonzero()[0], axis=1)`_:\n\n```\nbenchmarking series\ns.floc[bool_slice[mask]]\n10000 loops, best of 3: 46.8 µs per loop\ns[mask]\n10000 loops, best of 3: 64.5 µs per loop\ns.loc[mask]\n10000 loops, best of 3: 85.9 µs per loop\ns.iloc[mask]\n10000 loops, best of 3: 86.4 µs per loop\nbenchmarking dataframe\ndf.floc[bool_slice[mask]]\n10000 loops, best of 3: 83.3 µs per loop\ndf.loc[mask]\n1000 loops, best of 3: 227 µs per loop\ndf.iloc[mask]\n1000 loops, best of 3: 219 µs per loop\n```\n\nHere's the benchmark code:\n\n``` python\nimport numpy as np\nimport pandas as pd\n\nfrom pandas.core.generic import NDFrame\nfrom pandas.core.indexing import _NDFrameIndexer\n\nclass _FastpathSlice(object):\n    def __init__(self, arg=None):\n        self.arg = arg\n\n    def __repr__(self):\n        return \"%s(arg=%r)\" % (self.__class__.__name__, self.arg)\n\n    def __getitem__(self, arg):\n        return type(self)(arg)\n\n    def _fastpath_dispatch(self, obj):\n        raise NotImplementedError\n\n\nclass _FastpathBoolSlice(_FastpathSlice):\n    def __init__(self, arg=None):\n        if not isinstance(arg, np.ndarray):\n            arg = np.array(arg, dtype=np.bool_)\n        def dispatch(obj):\n            return (obj._constructor(obj._data.get_slice(arg))\n                    .__finalize__(obj))\n\n        self.arg = arg\n        self._fastpath_dispatch = dispatch\n\nclass _FastpathIndexer(_NDFrameIndexer):\n    def __getitem__(self, key):\n        try:\n            return key._fastpath_dispatch(self.obj)\n        except Exception:\n            raise TypeError(\"Something's not right\")\n\ndef floc(self): return _FastpathIndexer(self, 'floc')\nNDFrame.floc = property(floc)\n\nbool_slice = _FastpathBoolSlice()\n\nmask = np.random.rand(100) > 0.5\n\nprint(\"benchmarking series\")\ns = pd.Series(np.arange(100), index=['a%s' % s for s in np.arange(100)])\nprint(\"s.floc[bool_slice[mask]]\")\n%timeit s.floc[bool_slice[mask]]\nprint(\"s[mask]\")\n%timeit s[mask]\nprint(\"s.loc[mask]\")\n%timeit s.loc[mask]\nprint(\"s.iloc[mask]\")\n%timeit s.iloc[mask]\n\n\nprint(\"benchmarking dataframe\")\nmask = mask[:20] # axis=0 for df is columns, not index\ndf = pd.DataFrame(np.random.rand(100, 20),\n                  index=['a%s' % s for s in np.arange(100)],\n                  columns=['c%s' % s for s in np.arange(20)])\n\nprint(\"df.floc[bool_slice[mask]]\")\n%timeit df.floc[bool_slice[mask]]\nprint(\"df.loc[:,mask]\")\n%timeit df.loc[:,mask]\nprint(\"df.iloc[:,mask]\")\n%timeit df.iloc[:,mask]\n\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34935974",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6328#issuecomment-34935974",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6328",
    "id": 34935974,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTM1OTc0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-13T00:33:47Z",
    "updated_at": "2014-02-13T00:33:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "can you you make the bencmarks for a larger number. Saving `us` is very hard to measure in practice its often the difference of a couple of function calls; not real meaningful. And if you ARE doing this in a loop, well that's a problem in and of itself. \n\nThe benchmark should be a semi-realistic, that is a non-trivial time (>1m < 1000ms) for the current case.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35198713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6328#issuecomment-35198713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6328",
    "id": 35198713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTk4NzEz",
    "user": {
      "login": "immerrr",
      "id": 579798,
      "node_id": "MDQ6VXNlcjU3OTc5OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/579798?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/immerrr",
      "html_url": "https://github.com/immerrr",
      "followers_url": "https://api.github.com/users/immerrr/followers",
      "following_url": "https://api.github.com/users/immerrr/following{/other_user}",
      "gists_url": "https://api.github.com/users/immerrr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/immerrr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/immerrr/subscriptions",
      "organizations_url": "https://api.github.com/users/immerrr/orgs",
      "repos_url": "https://api.github.com/users/immerrr/repos",
      "events_url": "https://api.github.com/users/immerrr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/immerrr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T14:59:52Z",
    "updated_at": "2014-02-16T18:21:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "FTR: here's a bit of benchmark I've made: https://gist.github.com/immerrr/310a60850721e4ae6e84\n\nHackish, but works (uncovered #6370 issue for example).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35200373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6328#issuecomment-35200373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6328",
    "id": 35200373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjAwMzcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T16:07:39Z",
    "updated_at": "2014-02-16T16:07:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "would be nice to create a other vbench for all of these indexers\nyou could use your script and generate say indexers.py in then vbench format\nthen easy to compare improvements\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/149721082",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6328#issuecomment-149721082",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6328",
    "id": 149721082,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcyMTA4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T22:29:13Z",
    "updated_at": "2015-10-20T22:29:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as stale. pls reopen if still an issue.\n"
  }
]
