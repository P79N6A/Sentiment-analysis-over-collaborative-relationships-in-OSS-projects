[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142771414",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11181#issuecomment-142771414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11181",
    "id": 142771414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjc3MTQxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T00:56:54Z",
    "updated_at": "2015-09-24T00:56:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "You could do this, but you would have to then deal with potentially multiple names here (for a single column), and should raise in that case. This is unambiguous with a recarray, but you are passing a list of records-likes here. FYI this is the same for `DataFrame(records)`. Further you would have to be careful about perf here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142771455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11181#issuecomment-142771455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11181",
    "id": 142771455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjc3MTQ1NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T00:57:16Z",
    "updated_at": "2015-09-24T00:57:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "any reason you are not simply using `pd.read_sql` which already does this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142778633",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11181#issuecomment-142778633",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11181",
    "id": 142778633,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjc3ODYzMw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T01:33:40Z",
    "updated_at": "2015-09-24T01:33:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback - we're using SQLAlchemy as an ORM, so we have a [SQLAlchemy Query object](http://docs.sqlalchemy.org/en/rel_1_0/orm/tutorial.html#querying), which encapsulates joins & filtering. \n\nMy understanding is that those methods take a `SELECT` string - are we missing something, and they'll work with the ORM? We're using this fairly prevalently so I'm keen to know if we're doing something inefficient.\n\nThanks \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142779586",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11181#issuecomment-142779586",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11181",
    "id": 142779586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjc3OTU4Ng==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T01:38:42Z",
    "updated_at": "2015-09-24T01:38:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I hear you re performance, if you have to check every item. \n\nI had thought that if the first item a `tuple` with `._fields`, it would be a reasonable default to set the appropriate axis index to those fields. The alternative is integers, so there's not a lot of competition, and the user is free to supply `columns` / `index` as ever.\n\nWithout that convenience, it does seem like a lot of lifting for pandas vs the benefit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142779729",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11181#issuecomment-142779729",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11181",
    "id": 142779729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjc3OTcyOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T01:40:17Z",
    "updated_at": "2015-09-24T01:40:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is prob not that crazy to add\nwe obviously already support lists of ndarrays and such\nso it's just another path\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142780315",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11181#issuecomment-142780315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11181",
    "id": 142780315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjc4MDMxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T01:46:16Z",
    "updated_at": "2015-09-24T01:46:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "side issue: https://github.com/pydata/pandas/issues/4916\n\nlove to remove from_records entirely (and just have it figured out in the constructor)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142915059",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11181#issuecomment-142915059",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11181",
    "id": 142915059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MjkxNTA1OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T12:32:30Z",
    "updated_at": "2015-09-24T12:32:30Z",
    "author_association": "MEMBER",
    "body": "@maximilianr regarding the sqlalchemy Query object. At the moment this will indeed not work with `read_sql_query`, but would that be useful to add this functionality? \nI think you can try it out by providing the `selectable` attribute (http://docs.sqlalchemy.org/en/rel_1_0/orm/query.html#sqlalchemy.orm.query.Query.selectable), something like: `pd.read_sql_query(Query().selectable, engine)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/142940195",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11181#issuecomment-142940195",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11181",
    "id": 142940195,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0Mjk0MDE5NQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-24T14:06:55Z",
    "updated_at": "2015-09-24T14:06:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Yes, that works, thanks!\n\nI asked a Q to SQLAlchemy, to see if those guys had any guidance. I could imagine a few options - leave it as-is,  allow `read_sql` to take a Query object as a very simple wrapper, or something more coupled with SQLAlchemy if there are optimizations\nhttps://bitbucket.org/zzzeek/sqlalchemy/issues/3542/design-for-pandas-access-to-query\n"
  }
]
