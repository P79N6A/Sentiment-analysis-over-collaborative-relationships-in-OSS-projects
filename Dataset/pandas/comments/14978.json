[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/269086616",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14978#issuecomment-269086616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14978",
    "id": 269086616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA4NjYxNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T14:31:48Z",
    "updated_at": "2016-12-24T14:31:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "well, since you haven't provide a reproducible example I'll will speak generally.\r\n\r\n``NaN`` IS the missing value integer for float/string columns, while ``NaT`` for datetimelikes.\r\n\r\nYou are fighting pandas by trying to manipulate the options; this will for the most part just work.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/269086787",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14978#issuecomment-269086787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14978",
    "id": 269086787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA4Njc4Nw==",
    "user": {
      "login": "rampeer",
      "id": 5772571,
      "node_id": "MDQ6VXNlcjU3NzI1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5772571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rampeer",
      "html_url": "https://github.com/rampeer",
      "followers_url": "https://api.github.com/users/rampeer/followers",
      "following_url": "https://api.github.com/users/rampeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/rampeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rampeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rampeer/subscriptions",
      "organizations_url": "https://api.github.com/users/rampeer/orgs",
      "repos_url": "https://api.github.com/users/rampeer/repos",
      "events_url": "https://api.github.com/users/rampeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rampeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T14:35:53Z",
    "updated_at": "2016-12-24T14:41:40Z",
    "author_association": "NONE",
    "body": "@jreback I have provided a reproducible example: code that loads a file, and file itself (moved file link to the top to make it more visible).\r\n\r\nCurrently, I either have to enjoy mixed-type column and loss of data (both empty strings and \"NaN\" get converted into float NaNs), or have to parse float column by myself.\r\n\r\nWould you kindly review the code?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/269087938",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14978#issuecomment-269087938",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14978",
    "id": 269087938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA4NzkzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T15:07:23Z",
    "updated_at": "2016-12-24T15:07:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "you have odd data with empty string AND NaN incoming. and you want to preserve the ''. This is quite atypical. So not really sure what you are asking."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/269089246",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14978#issuecomment-269089246",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14978",
    "id": 269089246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA4OTI0Ng==",
    "user": {
      "login": "rampeer",
      "id": 5772571,
      "node_id": "MDQ6VXNlcjU3NzI1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5772571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rampeer",
      "html_url": "https://github.com/rampeer",
      "followers_url": "https://api.github.com/users/rampeer/followers",
      "following_url": "https://api.github.com/users/rampeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/rampeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rampeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rampeer/subscriptions",
      "organizations_url": "https://api.github.com/users/rampeer/orgs",
      "repos_url": "https://api.github.com/users/rampeer/repos",
      "events_url": "https://api.github.com/users/rampeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rampeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T15:45:07Z",
    "updated_at": "2016-12-24T15:45:07Z",
    "author_association": "NONE",
    "body": "When possible NA values in float column interfere with values in string column, string column values get automatically converted to float \"NaN\"s.\r\n\r\nA less complicated example:\r\n```python\r\nimport pandas as pd\r\nfrom numpy import NaN\r\ndesired_table = pd.DataFrame({\"a\": [\"Sample\", \"\"], \"b\": [0, NaN]})\r\ndesired_table.to_csv(\"sample.txt\", index=False, na_rep=\"\")\r\nread_table = pd.read_csv(\"sample.txt\")\r\nprint(read_table)\r\n```\r\n```\r\n        a    b\r\n0  Sample  0.0\r\n1     NaN  NaN\r\n```\r\nNote the NaN in column \"a\". I expect empty string to be here.\r\n\r\nIs there any way to ensure column type consistency in this particular situation, other than manually fixing NaN's in string column? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/269089684",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14978#issuecomment-269089684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14978",
    "id": 269089684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA4OTY4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T15:55:17Z",
    "updated_at": "2016-12-24T15:56:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rampeer you are missing the point\r\n\r\n``NaN`` IS the indicator for missing values in a string column. Pandas excepts this.\r\n\r\nyou can ``.fillna('')`` if you really don't want that. You are talking about export, so that's up to you.\r\n\r\nexporting is as expected\r\n```\r\nIn [5]: result_table.to_csv()\r\nOut[5]: ',a,b\\n0,Sample,0.0\\n1,,\\n'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/269090740",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14978#issuecomment-269090740",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14978",
    "id": 269090740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2OTA5MDc0MA==",
    "user": {
      "login": "rampeer",
      "id": 5772571,
      "node_id": "MDQ6VXNlcjU3NzI1NzE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5772571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rampeer",
      "html_url": "https://github.com/rampeer",
      "followers_url": "https://api.github.com/users/rampeer/followers",
      "following_url": "https://api.github.com/users/rampeer/following{/other_user}",
      "gists_url": "https://api.github.com/users/rampeer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rampeer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rampeer/subscriptions",
      "organizations_url": "https://api.github.com/users/rampeer/orgs",
      "repos_url": "https://api.github.com/users/rampeer/repos",
      "events_url": "https://api.github.com/users/rampeer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rampeer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-24T16:25:45Z",
    "updated_at": "2016-12-25T13:29:55Z",
    "author_association": "NONE",
    "body": "Thanks!\r\n\r\nI was hoping there is a better way to do this. At least, that preserves original string.\r\n\r\nBy the way, simple warning message \"Columns have mixed types, NaNs found in string column\" would have saved hour of debugging."
  }
]
