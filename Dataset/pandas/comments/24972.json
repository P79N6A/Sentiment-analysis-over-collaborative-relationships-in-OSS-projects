[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458020507",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24972#issuecomment-458020507",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24972",
    "id": 458020507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODAyMDUwNw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T07:13:35Z",
    "updated_at": "2019-01-28T07:13:35Z",
    "author_association": "MEMBER",
    "body": "Note that the operation is equivalent to `df.resample('D')...`:\r\n\r\nThis patch fixes it for me. We have some internal inconsistency since `'D'` mean \"calendar day\" for the user but can internally operate as 24H:\r\n```\r\n--- a/pandas/core/resample.py\r\n+++ b/pandas/core/resample.py\r\n@@ -1613,20 +1613,20 @@ def _get_timestamp_range_edges(first, last, offset, closed='left', base=0):\r\n     A tuple of length 2, containing the adjusted pd.Timestamp objects.\r\n     \"\"\"\r\n     if isinstance(offset, Tick):\r\n-        is_day = isinstance(offset, Day)\r\n-        day_nanos = delta_to_nanoseconds(timedelta(1))\r\n-\r\n-        # #1165 and #24127\r\n-        if (is_day and not offset.nanos % day_nanos) or not is_day:\r\n-            first, last = _adjust_dates_anchored(first, last, offset,\r\n-                                                 closed=closed, base=base)\r\n-            if is_day and first.tz is not None:\r\n-                # _adjust_dates_anchored assumes 'D' means 24H, but first/last\r\n-                # might contain a DST transition (23H, 24H, or 25H).\r\n-                # Ensure first/last snap to midnight.\r\n-                first = first.normalize()\r\n-                last = last.normalize()\r\n-            return first, last\r\n+        if isinstance(offset, Day):\r\n+            # _adjust_dates_anchored assumes 'D' means 24H, but first/last\r\n+            # might contain a DST transition (23H, 24H, or 25H).\r\n+            # So \"pretend\" the dates are naive when adjusting the endpoints\r\n+            tz = first.tz\r\n+            first = first.tz_localize(None)\r\n+            last = last.tz_localize(None)\r\n+\r\n+        first, last = _adjust_dates_anchored(first, last, offset,\r\n+                                             closed=closed, base=base)\r\n+        if isinstance(offset, Day):\r\n+            first = first.tz_localize(tz)\r\n+            last = last.tz_localize(tz)\r\n+        return first, last\r\n\r\n     else:\r\n         first = first.normalize()\r\n```\r\n\r\n```\r\nIn [3]: df.resample('D').sum()\r\nOut[3]:\r\n                           0\r\n2016-11-02 00:00:00-05:00  1\r\n2016-11-03 00:00:00-05:00  0\r\n2016-11-04 00:00:00-05:00  0\r\n2016-11-05 00:00:00-05:00  0\r\n2016-11-06 00:00:00-05:00  0\r\n2016-11-07 00:00:00-06:00  0\r\n2016-11-08 00:00:00-06:00  0\r\n2016-11-09 00:00:00-06:00  0\r\n2016-11-10 00:00:00-06:00  0\r\n2016-11-11 00:00:00-06:00  0\r\n2016-11-12 00:00:00-06:00  0\r\n2016-11-13 00:00:00-06:00  0\r\n2016-11-14 00:00:00-06:00  0\r\n2016-11-15 00:00:00-06:00  0\r\n2016-11-16 00:00:00-06:00  0\r\n2016-11-17 00:00:00-06:00  0\r\n2016-11-18 00:00:00-06:00  0\r\n2016-11-19 00:00:00-06:00  0\r\n2016-11-20 00:00:00-06:00  0\r\n2016-11-21 00:00:00-06:00  0\r\n2016-11-22 00:00:00-06:00  0\r\n2016-11-23 00:00:00-06:00  0\r\n2016-11-24 00:00:00-06:00  2\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458025483",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24972#issuecomment-458025483",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24972",
    "id": 458025483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODAyNTQ4Mw==",
    "user": {
      "login": "ahcub",
      "id": 4904947,
      "node_id": "MDQ6VXNlcjQ5MDQ5NDc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4904947?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ahcub",
      "html_url": "https://github.com/ahcub",
      "followers_url": "https://api.github.com/users/ahcub/followers",
      "following_url": "https://api.github.com/users/ahcub/following{/other_user}",
      "gists_url": "https://api.github.com/users/ahcub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ahcub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ahcub/subscriptions",
      "organizations_url": "https://api.github.com/users/ahcub/orgs",
      "repos_url": "https://api.github.com/users/ahcub/repos",
      "events_url": "https://api.github.com/users/ahcub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ahcub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-28T07:37:50Z",
    "updated_at": "2019-01-28T07:37:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that your patch looks better, let's give it a try.\r\nI need to say though that when I try it on latest release of pandas it produced an extra bin on grouping for me, maybe something changed since the release so it doesn't for you\r\n \r\n````DatetimeIndex(['2016-11-02 00:35:00.001000-05:00', '2016-11-24 19:25:18.776792-06:00'], dtype='datetime64[ns, America/Chicago]', freq=None)\r\n                             0\r\n2016-11-02 00:00:00-05:00  1.0\r\n2016-11-03 00:00:00-05:00  NaN\r\n2016-11-04 00:00:00-05:00  NaN\r\n2016-11-05 00:00:00-05:00  NaN\r\n2016-11-06 00:00:00-05:00  NaN\r\n2016-11-07 00:00:00-06:00  NaN\r\n2016-11-08 00:00:00-06:00  NaN\r\n2016-11-09 00:00:00-06:00  NaN\r\n2016-11-10 00:00:00-06:00  NaN\r\n2016-11-11 00:00:00-06:00  NaN\r\n2016-11-12 00:00:00-06:00  NaN\r\n2016-11-13 00:00:00-06:00  NaN\r\n2016-11-14 00:00:00-06:00  NaN\r\n2016-11-15 00:00:00-06:00  NaN\r\n2016-11-16 00:00:00-06:00  NaN\r\n2016-11-17 00:00:00-06:00  NaN\r\n2016-11-18 00:00:00-06:00  NaN\r\n2016-11-19 00:00:00-06:00  NaN\r\n2016-11-20 00:00:00-06:00  NaN\r\n2016-11-21 00:00:00-06:00  NaN\r\n2016-11-22 00:00:00-06:00  NaN\r\n2016-11-23 00:00:00-06:00  NaN\r\n2016-11-24 00:00:00-06:00  2.0\r\n2016-11-25 00:00:00-06:00  NaN\r\n```"
  }
]
