[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19867415",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19867415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19867415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY3NDE1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T01:07:59Z",
    "updated_at": "2013-06-23T01:09:59Z",
    "author_association": "MEMBER",
    "body": "found this using my exception finding tool :) there's now a `--validate` option that let's you check for invalid format strings. invalid meaning those strings that have an unequal number of unique format string args to `str.format` args\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19867422",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19867422",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19867422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY3NDIy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T01:09:07Z",
    "updated_at": "2013-06-23T01:09:07Z",
    "author_association": "CONTRIBUTOR",
    "body": ":+1: \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19867455",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19867455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19867455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY3NDU1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T01:14:41Z",
    "updated_at": "2013-06-23T01:14:41Z",
    "author_association": "MEMBER",
    "body": "i'm going to convert many of these to IOError\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19867472",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19867472",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19867472,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY3NDcy",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T01:17:15Z",
    "updated_at": "2013-06-23T01:17:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "That makes sense...it's slightly hard to test for these because of the intricacies with network errors. I somewhat wish we could run these functions on pre-existing data (i.e., download them once and not need network connection for all tests), maybe have one test (potentially) that checks for elegant network handling and then that would be it. (maybe mock out the urllib library?)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19867495",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19867495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19867495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY3NDk1",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T01:19:20Z",
    "updated_at": "2013-06-23T01:19:20Z",
    "author_association": "MEMBER",
    "body": "probably also good to get rid of idioms like this\n\n``` python\ntry:\n    gnarly_function\nexcept ValueError:\n    raise\n```\n\nany reason to keep those? will just bubble up anyway...unless i'm missing something about exception semantics\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19867511",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19867511",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19867511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY3NTEx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T01:20:54Z",
    "updated_at": "2013-06-23T01:20:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes, that's silly..._unless_ there's a second except statement later, then\nit matters...i.e.\n\ntry:\n\n```\nsome func\n```\n\nexcept ValueError:\n    raise\nexcept Exception as e:\n    handle_other_exception(e)\n\nOn Sat, Jun 22, 2013 at 9:19 PM, Phillip Cloud notifications@github.comwrote:\n\n> probably also good to get rid of idioms like this\n> \n> try:\n>     gnarly_functionexcept ValueError:\n>     raise\n> \n> any reason to keep those? will just bubble up anyway...unless i'm missing\n> something about exception semantics\n> \n> —\n> Reply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/pull/4000#issuecomment-19867495\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19867530",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19867530",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19867530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY3NTMw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T01:23:05Z",
    "updated_at": "2013-06-23T01:23:36Z",
    "author_association": "MEMBER",
    "body": "yep that would be why it's hard to spot those in my exception-finding script in a general way otherwise i would do it...i suppose you could say \"if reraise is in an exception block and there are no other blocks then mark as invalid\". i will see how difficult that is\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19868361",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19868361",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19868361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY4MzYx",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T03:14:48Z",
    "updated_at": "2013-06-23T03:14:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Depending on how you're parsing the python, you can notice the except clause can only follow a try clause, and the next time something is at same level, then you're our of try clause.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19868562",
    "html_url": "https://github.com/pandas-dev/pandas/pull/4000#issuecomment-19868562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/4000",
    "id": 19868562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODY4NTYy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T03:42:41Z",
    "updated_at": "2013-06-23T03:42:41Z",
    "author_association": "MEMBER",
    "body": "i'll probably do this:\n\n```\nIn [4]: ast.parse('try:\\n    print \"sdf\"\\nexcept ValueError:\\n    print \"yo momma\"\\nexcept Exception:\\n    raise')\nOut[4]: <_ast.Module at 0x679f450>\n\nIn [5]: mod = ast.parse('try:\\n    print \"sdf\"\\nexcept ValueError:\\n    print \"yo momma\"\\nexcept Exception:\\n    raise')\n\nIn [6]: mod.body\nOut[6]: [<_ast.TryExcept at 0x679f810>]\n\nIn [7]: mod.body[0]\nOut[7]: <_ast.TryExcept at 0x679f810>\n\nIn [8]: t = mod.body[0]\n\nIn [9]: t\nOut[9]: <_ast.TryExcept at 0x679f810>\n\nIn [10]: t.\nt._attributes       t.col_offset        t.__doc__           t.__getattribute__  t.__init__          t.__new__           t.__reduce_ex__     t.__sizeof__        t.__weakref__\nt.body              t.__delattr__       t._fields           t.handlers          t.lineno            t.orelse            t.__repr__          t.__str__\nt.__class__         t.__dict__          t.__format__        t.__hash__          t.__module__        t.__reduce__        t.__setattr__       t.__subclasshook__\n\nIn [10]: t.body\nOut[10]: [<_ast.Print at 0x679f850>]\n\nIn [11]: t.handlers\nOut[11]: [<_ast.ExceptHandler at 0x679f890>, <_ast.ExceptHandler at 0x679fa10>]\n```\n\nand use `len(t.handlers)` to detect it\n"
  }
]
