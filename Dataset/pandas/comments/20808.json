[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/383921182",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20808#issuecomment-383921182",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20808",
    "id": 383921182,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MzkyMTE4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T13:00:00Z",
    "updated_at": "2018-04-24T13:00:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose if freq is NOT specified then you could accept all three and give a linspace repr. What breaks if you do that?\r\n\r\nIf freq is specified then this should for sure raise. The idea of the error is simply to be helpful in telling you that you may have overspecified the args."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384070574",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20808#issuecomment-384070574",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20808",
    "id": 384070574,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA3MDU3NA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T20:33:54Z",
    "updated_at": "2018-04-24T20:33:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Your workaround from SO is a pretty reasonable solution, not sure we should support this.  I definitely would not want to change the default behavior, but suppose could with with something like `freq=None` or `freq='interpolate'`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384528626",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20808#issuecomment-384528626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20808",
    "id": 384528626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDUyODYyNg==",
    "user": {
      "login": "onnoeberhard",
      "id": 21868012,
      "node_id": "MDQ6VXNlcjIxODY4MDEy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/21868012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onnoeberhard",
      "html_url": "https://github.com/onnoeberhard",
      "followers_url": "https://api.github.com/users/onnoeberhard/followers",
      "following_url": "https://api.github.com/users/onnoeberhard/following{/other_user}",
      "gists_url": "https://api.github.com/users/onnoeberhard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onnoeberhard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onnoeberhard/subscriptions",
      "organizations_url": "https://api.github.com/users/onnoeberhard/orgs",
      "repos_url": "https://api.github.com/users/onnoeberhard/repos",
      "events_url": "https://api.github.com/users/onnoeberhard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onnoeberhard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T06:31:33Z",
    "updated_at": "2018-04-26T06:33:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree to definetely don't change the default behaviour. As I see, the default `freq` is 'D', so this:\r\n```python\r\npd.date_range(start, end, periods=1000)\r\n```\r\nwould not work, because it is the same as\r\n```python\r\npd.date_range(start, end, periods=1000, freq='D')\r\n```\r\nwhich really should not work. However, if the user explicitly sets `freq=None`,  the linspace behaviour would be practical:\r\n```python\r\npd.date_range(start, end, periods=1000, freq=None)\r\n```\r\n\r\n I suggest a simple change in the `date_range` function like so:\r\n```python\r\ndef date_range(start=None, end=None, periods=None, freq='D', tz=None,\r\n               normalize=False, name=None, closed=None, **kwargs):\r\n    \"\"\"\r\n    ...\r\n    \"\"\"\r\n    # Return a linearly spaced DatetimeIndex if `freq` is not set, but `start`, `end`, and `periods` are\r\n    if start and end and periods and not freq:\r\n        di = tools.to_datetime(np.linspace(start, end, periods), **kwargs)\r\n        if name:\r\n            di.name = name\r\n        return di\r\n\r\n    return DatetimeIndex(start=start, end=end, periods=periods,\r\n                         freq=freq, tz=tz, normalize=normalize, name=name,\r\n                         closed=closed, **kwargs)\r\n```\r\ntogether with appropriate changes in the docstring and test functions. This would provide the desired behaviour, while not changing anything else.\r\n\r\nI am not yet a contributor, so I cannot implement this myself (unless I am made one :upside_down_face:)\r\n\r\nBecause the change is really just a convenience feature of the `date_range` function, I don't think it would be wise to implement this directly in the DatetimeIndex constructor, or in another function, like `bdate_range`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384851104",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20808#issuecomment-384851104",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20808",
    "id": 384851104,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDg1MTEwNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T03:11:33Z",
    "updated_at": "2018-04-27T03:11:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "FWI, we could change the default `freq` to `None`, and document that it's `'D'` when only two of star, end, and freq are specified. That way `pd.date_range(start, end, periods=100)` will work.\r\n\r\n> I am not yet a contributor, so I cannot implement this myself (unless I am made one ðŸ™ƒ)\r\n\r\nAnyone can make a pull request: http://pandas-docs.github.io/pandas-docs-travis/contributing.html"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/384952820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20808#issuecomment-384952820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20808",
    "id": 384952820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDk1MjgyMA==",
    "user": {
      "login": "onnoeberhard",
      "id": 21868012,
      "node_id": "MDQ6VXNlcjIxODY4MDEy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/21868012?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/onnoeberhard",
      "html_url": "https://github.com/onnoeberhard",
      "followers_url": "https://api.github.com/users/onnoeberhard/followers",
      "following_url": "https://api.github.com/users/onnoeberhard/following{/other_user}",
      "gists_url": "https://api.github.com/users/onnoeberhard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/onnoeberhard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/onnoeberhard/subscriptions",
      "organizations_url": "https://api.github.com/users/onnoeberhard/orgs",
      "repos_url": "https://api.github.com/users/onnoeberhard/repos",
      "events_url": "https://api.github.com/users/onnoeberhard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/onnoeberhard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-27T12:15:59Z",
    "updated_at": "2018-04-27T12:15:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's a good idea, I like it much better.\r\n> Anyone can make a pull request\r\n\r\nOh okay I didn't know that (never done this before), then I am going to try to implement it :)"
  }
]
