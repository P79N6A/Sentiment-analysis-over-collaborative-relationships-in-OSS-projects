[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/113149393",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10373#issuecomment-113149393",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10373",
    "id": 113149393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzE0OTM5Mw==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-18T13:04:42Z",
    "updated_at": "2015-06-18T13:04:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Maybe just list differences?\n\n```\n# AssertionError: Index are not equal\n# Differences found:\n# Index:\n# [names]: 'x' != 'y' \n```\n\nso that if there are multiple issues,  one might see\n\n```\n# AssertionError: Index are not equal\n# Differences found:\n# Index:\n# [index names]: 'x' != 'y' \n# [index values] ['a', 'b'] != ['a', 'c']\n# Values:\n# [[1 3] [2 4]] != [[1 3] [2 5]]\n```\n\nso that an assertion could do a full DataFrame comparison before deciding to assert, rather than asserting on the first diff found (which can mean many iterations when there are multiple problems)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/113647483",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10373#issuecomment-113647483",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10373",
    "id": 113647483,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExMzY0NzQ4Mw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-19T21:17:08Z",
    "updated_at": "2015-06-19T21:17:38Z",
    "author_association": "MEMBER",
    "body": "I think there are 2 approaches, and now I feel option 2 is preferable.\n\n##### 1. Use current assertion function internally, and output detail when it fails.\n\nThis should not increase testing time so much.\n\n```\n# renaming current ``assert_frame_equal`` to ``_assert_frame_equal``\ndef assert_frame_equal(...):\n    try:\n        _assert_frame_equal(...)\n    except AssertionError:\n        output_detailed_differences()\n```\n\n##### 2. Output more understandable errors in each assertion steps (not output whole differences)\n\nThis is like what numpy does. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114350900",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10373#issuecomment-114350900",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10373",
    "id": 114350900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDM1MDkwMA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-23T04:27:54Z",
    "updated_at": "2015-06-23T04:27:54Z",
    "author_association": "MEMBER",
    "body": "Agreed that option 2 is better. Option 1 is a path to madness. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114516577",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10373#issuecomment-114516577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10373",
    "id": 114516577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDUxNjU3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-23T14:01:45Z",
    "updated_at": "2015-06-23T14:01:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "agreed, a slightly more informative `assert_*_equal` would be good\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/114851494",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10373#issuecomment-114851494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10373",
    "id": 114851494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNDg1MTQ5NA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-24T12:36:50Z",
    "updated_at": "2015-06-24T12:50:20Z",
    "author_association": "MEMBER",
    "body": "Let me summarize the idea based on option 2 comparing to the `numpy` behavior. \n\n```\nimport numpy as np\nimport pandas as pd\nimport pandas.util.testing as pdt\nimport numpy.testing.utils as npt\n```\n\n## Index\n\nCurrently, pandas always shows the same assertion like below:\n\n```\npdt.assert_index_equal(pd.Index([1, 2, 3]), pd.Index([1, 2, 3, 4]))\n# AssertionError: [index] left [int64 Int64Index([1, 2, 3], dtype='int64')], right [Int64Index([1, 2, 3, 4], dtype='int64') int64]\n```\n\nChanging assertion message to indicate what the difference is based on following 3 points like `numpy` does.\n- Shape (size)\n- Values\n- Metadata (name, freq etc. `pandas` unique)\n\n```\n# numpy\n\n# values\nnpt.assert_array_equal(np.array([1, 2, 3]), np.array([1, 2, 3, 4]))\n# AssertionError: \n# Arrays are not equal\n# \n# (shapes (3L,), (4L,) mismatch)\n#  x: array([1, 2, 3])\n#  y: array([1, 2, 3, 4])\n\n# size\nnpt.assert_array_equal(np.array([1, 3, 2]), np.array([1, 2, 3]))\n# AssertionError: \n# Arrays are not equal\n# \n# (mismatch 66.6666666667%)\n#  x: array([1, 3, 2])\n#  y: array([1, 2, 3])\n```\n\n## Series\n\nMessages are different based on the category as below, but it is not enough clear.\n- Shape (size): `AssertionError: Length of two iterators not the same: 3 != 4`. \n- Index (same as above)\n- Values: `AssertionError: expected 4.00000 but got 3.00000, with decimal 5`. \n- Metadata (name): `AssertionError: attr is not equal [name]: None != 'x'`\n\n## DataFrame\n\nMessages are different based on the category as below, but it is not enough clear.\n- Shape (size): `AssertionError: Length of two iterators not the same: 3 != 4`. \n- Index (same as above)\n- Column (same as above)\n- Values: `AssertionError: expected 4.00000 but got 3.00000, with decimal 5`. \n\n### Preferable message format\n- Short description what part is different\n- [left] and [right] comparison based on the subcategory\n\nfor example:\n\n```\nassert_index_equal(Index([1, 3, 2]), Index([1, 2, 3]))\n# AssertionError: \n# Index values are not equal\n# \n# (mismatch 66.6666666667%)\n#  [left]: Index([1, 3, 2])\n#  [right]: Index([1, 2, 3])\n\nassert_index_equal(Index([1, 2, 3], name='x'), Index([1, 2, 3]))\n# AssertionError: \n# Index metadata are not equal\n# \n# metadata \"name\" are not equal\n#  [left]: 'x'\n#  [right]: None\n```\n"
  }
]
