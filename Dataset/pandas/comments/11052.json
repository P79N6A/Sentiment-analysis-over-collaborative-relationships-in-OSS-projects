[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139263966",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-139263966",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 139263966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTI2Mzk2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T14:32:13Z",
    "updated_at": "2015-09-10T14:32:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is there a widely agreed upon format for markdown tables? It's not in Gruber's original version, and IIRC CommonMark even punted on them.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139267834",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-139267834",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 139267834,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTI2NzgzNA==",
    "user": {
      "login": "petebachant",
      "id": 4604869,
      "node_id": "MDQ6VXNlcjQ2MDQ4Njk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4604869?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petebachant",
      "html_url": "https://github.com/petebachant",
      "followers_url": "https://api.github.com/users/petebachant/followers",
      "following_url": "https://api.github.com/users/petebachant/following{/other_user}",
      "gists_url": "https://api.github.com/users/petebachant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petebachant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petebachant/subscriptions",
      "organizations_url": "https://api.github.com/users/petebachant/orgs",
      "repos_url": "https://api.github.com/users/petebachant/repos",
      "events_url": "https://api.github.com/users/petebachant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petebachant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T14:43:03Z",
    "updated_at": "2015-09-10T14:43:03Z",
    "author_association": "NONE",
    "body": "Good point. I'm not sure. Maybe the method could specify a flavor, e.g., GitHub or Pandoc?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139270114",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-139270114",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 139270114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTI3MDExNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T14:50:27Z",
    "updated_at": "2015-09-10T14:51:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect that anything too complicated won't find much support here (maintaining stuff is no fun). Especially now that we have `pipe`. `df.pipe(to_markdown)` isn't much worse than `df.to_markdown`.\n\nIs your usecase here to present / read the mardown, or convert it to something else? Since markdown is a superset of HTML, you may be able to get away with `to_html` before converting.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139277953",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-139277953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 139277953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTI3Nzk1Mw==",
    "user": {
      "login": "petebachant",
      "id": 4604869,
      "node_id": "MDQ6VXNlcjQ2MDQ4Njk=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/4604869?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petebachant",
      "html_url": "https://github.com/petebachant",
      "followers_url": "https://api.github.com/users/petebachant/followers",
      "following_url": "https://api.github.com/users/petebachant/following{/other_user}",
      "gists_url": "https://api.github.com/users/petebachant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petebachant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petebachant/subscriptions",
      "organizations_url": "https://api.github.com/users/petebachant/orgs",
      "repos_url": "https://api.github.com/users/petebachant/repos",
      "events_url": "https://api.github.com/users/petebachant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petebachant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-10T15:21:51Z",
    "updated_at": "2015-09-10T15:21:51Z",
    "author_association": "NONE",
    "body": "My specific use case would be to create a DataFrame, copy/paste to GitHub flavored Markdown document (or GitHub issues, PRs, wikis, etc.), but still be able to read/edit it later without the HTML mess.\n\nAs an example, below is a table I copied from a Jupyter Qt console. First I printed the DataFrame to the terminal, copied/pasted here, then entered the dashes and pipes manually for the GH Markdown. Then I generated HTML with the `to_html` method, which doesn't render quite right here. \n\n## GitHub Markdown\n\n### Source\n\n``` markdown\n    | speed | Re_tip | Re_root | Re_ave | Re_D\n---|--------|-------|--------|--------|--------\n0 | 4.0e-01 | 5.0e+04 | 8.3e+04 | 6.6e+04 | 4.3e+05\n1 | 6.0e-01 | 7.4e+04 |  1.2e+05 | 9.9e+04 | 6.4e+05\n2 | 8.0e-01 | 9.9e+04 | 1.7e+05 | 1.3e+05 | 8.6e+05\n3 | 1.0e+00 | 1.2e+05 |  2.1e+05 | 1.7e+05 | 1.1e+06\n4 | 1.2e+00 | 1.5e+05 |  2.5e+05 | 2.0e+05 | 1.3e+0\n```\n\n### Results\n\n|  | speed | Re_tip | Re_root | Re_ave | Re_D |\n| --- | --- | --- | --- | --- | --- |\n| 0 | 4.0e-01 | 5.0e+04 | 8.3e+04 | 6.6e+04 | 4.3e+05 |\n| 1 | 6.0e-01 | 7.4e+04 | 1.2e+05 | 9.9e+04 | 6.4e+05 |\n| 2 | 8.0e-01 | 9.9e+04 | 1.7e+05 | 1.3e+05 | 8.6e+05 |\n| 3 | 1.0e+00 | 1.2e+05 | 2.1e+05 | 1.7e+05 | 1.1e+06 |\n| 4 | 1.2e+00 | 1.5e+05 | 2.5e+05 | 2.0e+05 | 1.3e+0 |\n\n## Pandas HTML\n\n### Source\n\n``` html\n<table border=\"1\" class=\"dataframe\">\\n  <thead>\\n    <tr style=\"text-align: right;\">\\n      <th></th>\\n      <th>speed</th>\\n      <th>Re_tip</th>\\n      <th>Re_root</th>\\n      <th>Re_ave</th>\\n      <th>Re_D</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>4.0e-01</td>\\n      <td>5.0e+04</td>\\n      <td>8.3e+04</td>\\n      <td>6.6e+04</td>\\n      <td>4.3e+05</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>6.0e-01</td>\\n      <td>7.4e+04</td>\\n      <td>1.2e+05</td>\\n      <td>9.9e+04</td>\\n      <td>6.4e+05</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>8.0e-01</td>\\n      <td>9.9e+04</td>\\n      <td>1.7e+05</td>\\n      <td>1.3e+05</td>\\n      <td>8.6e+05</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>1.0e+00</td>\\n      <td>1.2e+05</td>\\n      <td>2.1e+05</td>\\n      <td>1.7e+05</td>\\n      <td>1.1e+06</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>1.2e+00</td>\\n      <td>1.5e+05</td>\\n      <td>2.5e+05</td>\\n      <td>2.0e+05</td>\\n      <td>1.3e+06</td>\\n    </tr>\\n  </tbody>\\n</table\n```\n\n### Results\n\n<table border=\"1\" class=\"dataframe\">\\n  <thead>\\n    <tr style=\"text-align: right;\">\\n      <th></th>\\n      <th>speed</th>\\n      <th>Re_tip</th>\\n      <th>Re_root</th>\\n      <th>Re_ave</th>\\n      <th>Re_D</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>4.0e-01</td>\\n      <td>5.0e+04</td>\\n      <td>8.3e+04</td>\\n      <td>6.6e+04</td>\\n      <td>4.3e+05</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>6.0e-01</td>\\n      <td>7.4e+04</td>\\n      <td>1.2e+05</td>\\n      <td>9.9e+04</td>\\n      <td>6.4e+05</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>8.0e-01</td>\\n      <td>9.9e+04</td>\\n      <td>1.7e+05</td>\\n      <td>1.3e+05</td>\\n      <td>8.6e+05</td>\\n    </tr>\\n    <tr>\\n      <th>3</th>\\n      <td>1.0e+00</td>\\n      <td>1.2e+05</td>\\n      <td>2.1e+05</td>\\n      <td>1.7e+05</td>\\n      <td>1.1e+06</td>\\n    </tr>\\n    <tr>\\n      <th>4</th>\\n      <td>1.2e+00</td>\\n      <td>1.5e+05</td>\\n      <td>2.5e+05</td>\\n      <td>2.0e+05</td>\\n      <td>1.3e+06</td>\\n    </tr>\\n  </tbody>\\n</table\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/139604094",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-139604094",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 139604094,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzOTYwNDA5NA==",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-11T17:13:08Z",
    "updated_at": "2015-09-11T17:13:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "One issue is what should the row headers be for MI columns/index. It seems that GH registers only the first (unless there is some syntactical trick).\n\nFor _most_ flavors you can include html.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155796599",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-155796599",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 155796599,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTc5NjU5OQ==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T14:26:15Z",
    "updated_at": "2015-11-11T14:29:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "As the new styler uses jinja (https://github.com/pydata/pandas/pull/10250), this shouldn't be too hard? I would also love this feature for knitpy, which is a markdown based format which is converted into all kind of formats (docx...pdf...html). \n\nUp to now (and as workarounds...), I recommended [tabulate](https://pypi.python.org/pypi/tabulate) to convert a DataFrame to markdown. There is also pandoc (e.g. via pypandoc), which can take the output of `df.to_html()` and convert that to markdown.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155798239",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-155798239",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 155798239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTc5ODIzOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T14:33:36Z",
    "updated_at": "2015-11-11T14:33:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JanSchulz yes, I could see `.to_markdown()` method in `Styler` (as better API than to put it directly in `DataFrame` (though could have that as well).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155843057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-155843057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 155843057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTg0MzA1Nw==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T16:50:21Z",
    "updated_at": "2015-11-11T16:50:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMO, on `.styler` it doesn't make sense, markdown unfortunately do not provide styles :-( I only mentioned `.styler` as it already (soft) requires jinja and that should make it easy to build a markdown representation... \n\nIMO it should be `DataFrame.to_markdown()` and `DataFrame._repr_markdown_()`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160144763",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-160144763",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 160144763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDE0NDc2Mw==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-27T13:55:00Z",
    "updated_at": "2015-11-27T13:55:00Z",
    "author_association": "NONE",
    "body": "I'd love DataFrame.to_markdown() too. I was surprised when it didn't work already.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335960248",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-335960248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 335960248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk2MDI0OA==",
    "user": {
      "login": "pstjohn",
      "id": 2576846,
      "node_id": "MDQ6VXNlcjI1NzY4NDY=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2576846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstjohn",
      "html_url": "https://github.com/pstjohn",
      "followers_url": "https://api.github.com/users/pstjohn/followers",
      "following_url": "https://api.github.com/users/pstjohn/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstjohn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstjohn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstjohn/subscriptions",
      "organizations_url": "https://api.github.com/users/pstjohn/orgs",
      "repos_url": "https://api.github.com/users/pstjohn/repos",
      "events_url": "https://api.github.com/users/pstjohn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstjohn/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T21:53:52Z",
    "updated_at": "2017-10-11T21:55:06Z",
    "author_association": "NONE",
    "body": "Would pandas be open to adding a dependency? [`tabulate`](https://pypi.python.org/pypi/tabulate) does exactly this and is pip installable.\r\n\r\n```python\r\nfrom tabulate import tabulate\r\nprint(tabulate(df, headers='keys', tablefmt='pipe'))\r\n```\r\n\r\n```\r\n|    |   test1 | test2   |   test3 |   test4 |    test5 |\r\n|---:|--------:|:--------|--------:|--------:|---------:|\r\n|  0 |     385 | apple   |     288 |     745 |  64.9352 |\r\n|  1 |     627 | banana  |       3 |     792 | 226.955  |\r\n|  2 |     486 | pear    |     446 |     503 | 110.454  |\r\n|  3 |     368 | orange  |     887 |     808 | 297.62   |\r\n|  4 |     550 | grape   |     235 |      96 | 240.324  |\r\n|  5 |     749 | peach   |      22 |     598 | 240.642  |\r\n```\r\n\r\n|    |   test1 | test2   |   test3 |   test4 |    test5 |\r\n|---:|--------:|:--------|--------:|--------:|---------:|\r\n|  0 |     385 | apple   |     288 |     745 |  64.9352 |\r\n|  1 |     627 | banana  |       3 |     792 | 226.955  |\r\n|  2 |     486 | pear    |     446 |     503 | 110.454  |\r\n|  3 |     368 | orange  |     887 |     808 | 297.62   |\r\n|  4 |     550 | grape   |     235 |      96 | 240.324  |\r\n|  5 |     749 | peach   |      22 |     598 | 240.642  |"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335961170",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-335961170",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 335961170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk2MTE3MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T21:57:58Z",
    "updated_at": "2017-10-11T21:57:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm +0 to adding it as an optional dependency, and adding a to_markdown\nmethod.\n\nIn the meantime, `df.pipe(tabulate, header='keys', tablefmt='pipe')` is a\nworkaround. I suppose it would be nice to avoid typing those keyword\narguments every time :)\n\nOn Wed, Oct 11, 2017 at 4:53 PM, Peter St. John <notifications@github.com>\nwrote:\n\n> Would pandas be open to adding a dependency? tabulate\n> <https://pypi.python.org/pypi/tabulate> does exactly this and is pip\n> installable.\n>\n> from tabulate import tabulateprint(tabulate(df, headers='keys', tablefmt='pipe'))\n>\n>       test1  test2      test3    test4    test5\n> --  -------  -------  -------  -------  -------\n>  0      356  apple        876      510      904\n>  1       90  banana       590       24      988\n>  2      150  pear         652      731      792\n>  3      399  orange       603       76      420\n>  4      864  grape        322      703      324\n>  5      281  peach        731      192      192\n>\n> test1 test2 test3 test4 test5\n> 0 356 apple 876 510 904\n> 1 90 banana 590 24 988\n> 2 150 pear 652 731 792\n> 3 399 orange 603 76 420\n> 4 864 grape 322 703 324\n> 5 281 peach 731 192 192\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/11052#issuecomment-335960248>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHItGeXDBlVw5VfDZ7zWNRVEVwnHEdks5srTj1gaJpZM4F7BTx>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/335972666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-335972666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 335972666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTk3MjY2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-11T23:00:13Z",
    "updated_at": "2017-10-11T23:00:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "i think adding a to_markdown method which calls tabulate as a dependency would be ok\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/342488690",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-342488690",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 342488690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MjQ4ODY5MA==",
    "user": {
      "login": "aflaxman",
      "id": 51236,
      "node_id": "MDQ6VXNlcjUxMjM2",
      "avatar_url": "https://avatars0.githubusercontent.com/u/51236?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aflaxman",
      "html_url": "https://github.com/aflaxman",
      "followers_url": "https://api.github.com/users/aflaxman/followers",
      "following_url": "https://api.github.com/users/aflaxman/following{/other_user}",
      "gists_url": "https://api.github.com/users/aflaxman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aflaxman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aflaxman/subscriptions",
      "organizations_url": "https://api.github.com/users/aflaxman/orgs",
      "repos_url": "https://api.github.com/users/aflaxman/repos",
      "events_url": "https://api.github.com/users/aflaxman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aflaxman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-07T13:54:15Z",
    "updated_at": "2017-11-07T13:54:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "`print(tabulate(df, headers='keys', tablefmt='pipe'))` is not as pretty as pandas for multi-index, would be cool if whatever pandas lands on is.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/447636983",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11052#issuecomment-447636983",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11052",
    "id": 447636983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NzYzNjk4Mw==",
    "user": {
      "login": "kangwonlee",
      "id": 17876446,
      "node_id": "MDQ6VXNlcjE3ODc2NDQ2",
      "avatar_url": "https://avatars3.githubusercontent.com/u/17876446?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kangwonlee",
      "html_url": "https://github.com/kangwonlee",
      "followers_url": "https://api.github.com/users/kangwonlee/followers",
      "following_url": "https://api.github.com/users/kangwonlee/following{/other_user}",
      "gists_url": "https://api.github.com/users/kangwonlee/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kangwonlee/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kangwonlee/subscriptions",
      "organizations_url": "https://api.github.com/users/kangwonlee/orgs",
      "repos_url": "https://api.github.com/users/kangwonlee/repos",
      "events_url": "https://api.github.com/users/kangwonlee/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kangwonlee/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-16T11:52:53Z",
    "updated_at": "2018-12-16T11:52:53Z",
    "author_association": "NONE",
    "body": "FYI : Google found this discussion for me: https://stackoverflow.com/questions/33181846/programmatically-convert-pandas-dataframe-to-markdown-table"
  }
]
