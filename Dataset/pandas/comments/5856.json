[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31597820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31597820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31597820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk3ODIw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T06:35:23Z",
    "updated_at": "2014-01-05T06:35:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "This would be helped by understanding what code actually needs this on the\n_user_ side. @jseabold ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31597899",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31597899",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31597899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk3ODk5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T06:41:56Z",
    "updated_at": "2014-01-05T06:42:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just played around with this and I don't understand the original logic - numpy doesn't raise on sorting a view and pandas doesn't either (in fact you get into some weird behavior)...\n\n``` python\nIn [9]: ser = pd.Series(range(10)[::-1]); ser\nOut[9]:\n9    9\n8    8\n7    7\n6    6\n5    5\n4    4\n3    3\n2    2\n1    1\n0    0\ndtype: int64\n\nIn [11]: view = ser.view()\n\nIn [12]: view.sort()\n\nIn [13]: view\nOut[13]:\n0    0\n1    1\n2    2\n3    3\n4    4\n5    5\n6    6\n7    7\n8    8\n9    9\ndtype: int64\n\nIn [14]: ser\nOut[14]:\n9    0\n8    1\n7    2\n6    3\n5    4\n4    5\n3    6\n2    7\n1    8\n0    9\ndtype: int64\n\nIn [15]: vals = ser.values.copy()\n\nIn [16]: vals\nOut[16]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\nIn [17]: vals = vals[::-1]\n\nIn [18]: np_view = vals.view()\n\nIn [19]: np_view.sort()\n\nIn [20]: np_view\nOut[20]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\nIn [21]: vals\nOut[21]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31598266",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31598266",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31598266,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk4MjY2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T07:16:55Z",
    "updated_at": "2014-01-05T07:18:13Z",
    "author_association": "NONE",
    "body": "numpy `sort` returns a copy, `series.sort` sorts in place, hence the hazard.\n\n``` python\nIn [53]: df=mkdf(10,4,data_gen_f=lambda r,c:np.random.random())\n    ...: ss= df.iloc[:,0]\n    ...: ss.sort()\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-53-27670adc5cb8> in <module>()\n      1 s=mkdf(10,4,data_gen_f=lambda r,c:np.random.random())\n      2 ss= s.iloc[:,0]\n----> 3 ss.sort()\n\n/home/user1/src/pandas/pandas/core/series.py in sort(self, axis, kind, order, ascending)\n   1674         if (true_base is not None and\n   1675                 (true_base.ndim != 1 or true_base.shape != self.shape)):\n-> 1676             raise TypeError('This Series is a view of some other array, to '\n   1677                             'sort in-place you must create a copy')\n   1678 \n\nTypeError: This Series is a view of some other array, to sort in-place you must create a copy\n```\n\nss.base/ss.values.base points at the underlying ndarray held by `df`'s block manager if I understand correctly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31598380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31598380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31598380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk4Mzgw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T07:26:10Z",
    "updated_at": "2014-01-05T07:26:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Except `Series.view()` creates an object that _doesn't_ have `is_view() == True`... (or at least that's what I think I found on my computer).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31598612",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31598612",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31598612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTk4NjEy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T07:48:48Z",
    "updated_at": "2014-01-05T07:48:48Z",
    "author_association": "NONE",
    "body": "If the method was more accurately called `is_shared`, would you still object? I admit I still don't understand the objections.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31612445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31612445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31612445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyNDQ1",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T19:10:53Z",
    "updated_at": "2014-01-05T19:10:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure I understand the objections either. This doesn't actually change anything. I just exposed existing code in the sort method to avoid having to blindly copy Series. So any objections I think are to the status quo.\n\nI wanted to avoid having to call `.sort()` to find out that I should do `.copy()` then `.sort()` since `sort` on a Series will sometimes raise an error. Without having this method exposed, to write a function that takes and sorts a Series (knowingly in place) I'd have to always copy even when it might not strictly be necessary. But now I can do `if is_view; copy; sort`.\n\nI'm not going to go to bat for whether or not this actually works, but I thought it would be nice to have exposed (even if in a private method).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31612747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31612747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31612747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyNzQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T19:21:46Z",
    "updated_at": "2014-01-05T19:27:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #5859\n\nyou can do\n\n`s._is_cacher` if you really want to\n\nwhy wouldn't you just always do\n\n`s.order()` in any event? which always gives u back a new series\n\nsort is really\n\n`s.order(inplace=True)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31612942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31612942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31612942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyOTQy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T19:28:45Z",
    "updated_at": "2014-01-05T19:28:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "the API will change in #5190 (still somewhat to be determined), to unify sort/order/sort_index across objects in any event.\n\n(but will prob be deprecated in 0.14 at the earlierst; not actually changed till later)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31612954",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31612954",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31612954,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEyOTU0",
    "user": {
      "login": "jseabold",
      "id": 296164,
      "node_id": "MDQ6VXNlcjI5NjE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/296164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jseabold",
      "html_url": "https://github.com/jseabold",
      "followers_url": "https://api.github.com/users/jseabold/followers",
      "following_url": "https://api.github.com/users/jseabold/following{/other_user}",
      "gists_url": "https://api.github.com/users/jseabold/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jseabold/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jseabold/subscriptions",
      "organizations_url": "https://api.github.com/users/jseabold/orgs",
      "repos_url": "https://api.github.com/users/jseabold/repos",
      "events_url": "https://api.github.com/users/jseabold/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jseabold/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T19:29:14Z",
    "updated_at": "2014-01-05T19:29:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Because I didn't know about that? `order` is non-obvious to me. I also didn't want to copy unless I am forced to. I expected to find a sort(copy=True) but didn't find it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/31613258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/5856#issuecomment-31613258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/5856",
    "id": 31613258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjEzMjU4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-01-05T19:40:42Z",
    "updated_at": "2014-01-05T19:40:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "IIRC order has been around quite a long time (I think this is the R name for sorting); was the original name. Not sure where/how sort came about.\n\nI agree should prob just be `sort` (but then the complication of `sort_index`; as sort/order operate on the values).\n\ncould add a `copy` kw, but no current logic to figure out if its sorted already (its not hard, but doesn't exist). You always need to copy unless its already sorted (as the actual algos are inplace).\n\npls add that as a request to #5190\n"
  }
]
