[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17615328",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-17615328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 17615328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NjE1MzI4",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-08T15:59:24Z",
    "updated_at": "2013-05-08T15:59:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "related: http://stackoverflow.com/questions/16444797/which-is-the-most-efficient-way-of-loading-a-json-dataset-into-pandas-dataframes\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19289202",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19289202",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19289202,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Mjg5MjAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-11T20:16:01Z",
    "updated_at": "2013-06-11T20:16:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is invalid JSON (according to jsonlint), but generalized inference is IMHO too complicated, but #3804 should be able to do some of this. close this issue?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19290077",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19290077",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19290077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MjkwMDc3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-11T20:30:48Z",
    "updated_at": "2013-06-11T20:30:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is it feasible to grab the user section, (actually [this example from the other thread](https://github.com/pydata/pandas/pull/3804#issuecomment-19170850) is better):\n\nConvert the `(data, posts)` section to DataFrame\n\n```\ns = r'''{\n    \"status\": \"success\",\n    \"data\": {\n        \"posts\": [\n            {\n                \"id\": 1,\n                \"title\": \"A blog post\",\n                \"body\": \"Some useful content\"\n            },\n            {\n                \"id\": 2,\n                \"title\": \"Another blog post\",\n                \"body\": \"More content\"\n            }\n        ]\n    }\n}'''\n\nread_json(s, grab_nest=(data, posts)) # some better argument name\n                  body  id              title\n0  Some useful content   1        A blog post\n1         More content   2  Another blog post\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19330883",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19330883",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19330883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzMwODgz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T14:51:28Z",
    "updated_at": "2013-06-12T14:51:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is probably getting too cute.....\n\n```\nIn [52]: def extract(df, l):\n   ....:     for e in l:\n   ....:         df = df[e]\n   ....:     return df\n   ....: \n\nIn [54]: DataFrame.extract = extract\n\nIn [56]: DataFrame(pd.read_json(s).extract(['data','posts']))\nOut[56]: \n                  body  id              title\n0  Some useful content   1        A blog post\n1         More content   2  Another blog post\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19346025",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19346025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19346025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzQ2MDI1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T18:41:12Z",
    "updated_at": "2013-06-12T18:41:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ha! Perhaps less overhead to do `pd.DataFrame(extract(pd.io.json.loads(s), ('data', 'posts')))`, but in either case we would lose the datetime parsing atm.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19350445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19350445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19350445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzUwNDQ1",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T19:43:46Z",
    "updated_at": "2013-06-12T19:43:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "This could be a reasonably ok solution... tricky with orient (?), then parse_dates or whatever?\n\n...other choice is just to loads/dumps/parse? :s\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19356499",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19356499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19356499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzU2NDk5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-12T21:22:47Z",
    "updated_at": "2013-06-12T21:22:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "here's a bigish nested json: https://github.com/hayd/sf-city-lots-json ~200mb\n\nI think I'd want to extract `['features']`.\n\nI'm on an incredibly old macbook air, hence slow timings:\n\n```\nIn [9]: %time with open('citylots.json', 'r') as f: pd.read_json(pd.io.json.dumps(extract(pd.io.json.loads(f.read()), ['features'])))\nCPU times: user 29.13 s, sys: 28.27 s, total: 57.40 s\nWall time: 304.71 s\n\nIn [10]: %time with open('citylots.json', 'r') as f: pd.DataFrame(extract(pd.io.json.loads(f.read()), ['features']))\nCPU times: user 11.96 s, sys: 11.79 s, total: 23.75 s\nWall time: 136.50 s\n\nIn [11]: %time with open('citylots.json', 'r') as f: pd.read_json(f.read())CPU times: user 13.47 s, sys: 10.41 s, total: 23.88 s\nWall time: 77.47 s\n```\n\nWhat is an extreme for reading in json?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19367567",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19367567",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19367567,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzY3NTY3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-13T02:01:07Z",
    "updated_at": "2013-06-13T02:01:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "After I figured out all I needed to do was clone the repository!\n (these also include full dtype conversions) FYI\n\n```\nIn [3]: %time with open('citylots.json', 'r') as f: pd.read_json(pd.io.json.dumps(extract(pd.io.json.loads(f.read()), ['features'])))\nCPU times: user 13.03 s, sys: 0.50 s, total: 13.53 s\nWall time: 15.12 s\n\nIn [6]: %time with open('citylots.json', 'r') as f: pd.DataFrame(extract(pd.io.json.loads(f.read()), ['features']))\nCPU times: user 6.03 s, sys: 0.08 s, total: 6.11 s\nWall time: 6.13 s\n\nIn [7]: %time with open('citylots.json', 'r') as f: pd.read_json(f.read())\nCPU times: user 6.27 s, sys: 0.16 s, total: 6.44 s\nWall time: 6.45 s\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19369405",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19369405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19369405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzY5NDA1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-13T02:54:38Z",
    "updated_at": "2013-06-13T02:54:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #3876\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19380189",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19380189",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19380189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzgwMTg5",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-13T09:07:11Z",
    "updated_at": "2013-06-13T09:07:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Wow, I should never do any data analysis on that laptop... (sorry I forgot that you had to clone it).\n\nBut what I mean is, you'd lose the control from the read_json arguments. Will be interesting to see if this use case comes up a lot \"in the wild\".\n\n... _really_ this really this kind of stuff should be done the other end, e.g. with http://www.elasticsearch.org/guide/reference/api/get/ (getting the _source directly).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19391607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19391607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19391607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzkxNjA3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-13T13:30:26Z",
    "updated_at": "2013-06-13T13:30:26Z",
    "author_association": "MEMBER",
    "body": "I have a JSON normalization function I can clean up and make a PR before before anyone goes crazy writing one to save you some time. It would be nice to have a higher performance one at some point though\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19646452",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19646452",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19646452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQ2NDUy",
    "user": {
      "login": "nehalecky",
      "id": 1455590,
      "node_id": "MDQ6VXNlcjE0NTU1OTA=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1455590?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nehalecky",
      "html_url": "https://github.com/nehalecky",
      "followers_url": "https://api.github.com/users/nehalecky/followers",
      "following_url": "https://api.github.com/users/nehalecky/following{/other_user}",
      "gists_url": "https://api.github.com/users/nehalecky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nehalecky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nehalecky/subscriptions",
      "organizations_url": "https://api.github.com/users/nehalecky/orgs",
      "repos_url": "https://api.github.com/users/nehalecky/repos",
      "events_url": "https://api.github.com/users/nehalecky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nehalecky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-18T22:14:34Z",
    "updated_at": "2013-06-18T22:14:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @wesm and @hayd! I've been keeping my eye on this thread for a few days now—really impressive all the work that built up to this, thank you. Anyways, I though you might know that I _could_ go crazy writing some JSON normalization soon. Perhaps I should wait? :) \n\nThanks for all.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19871471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-19871471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 19871471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5ODcxNDcx",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-23T09:48:29Z",
    "updated_at": "2013-06-23T09:48:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Related: https://groups.google.com/forum/#!topic/pydata/XkiWtZKT698 (json is a list of nested dictionaries...)\n\nHey @nehalecky , I think @wesm says he has something in the works already, so perhaps if you can hold off til he's pushed, then you could hack that? :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/472505767",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1067#issuecomment-472505767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1067",
    "id": 472505767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MjUwNTc2Nw==",
    "user": {
      "login": "ImNick23",
      "id": 45431547,
      "node_id": "MDQ6VXNlcjQ1NDMxNTQ3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/45431547?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ImNick23",
      "html_url": "https://github.com/ImNick23",
      "followers_url": "https://api.github.com/users/ImNick23/followers",
      "following_url": "https://api.github.com/users/ImNick23/following{/other_user}",
      "gists_url": "https://api.github.com/users/ImNick23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ImNick23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ImNick23/subscriptions",
      "organizations_url": "https://api.github.com/users/ImNick23/orgs",
      "repos_url": "https://api.github.com/users/ImNick23/repos",
      "events_url": "https://api.github.com/users/ImNick23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ImNick23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-13T16:43:02Z",
    "updated_at": "2019-03-13T16:43:02Z",
    "author_association": "NONE",
    "body": "> ```\r\n> Is there a simple way of grabbing nested keys when constructing a Pandas Dataframe from JSON. Using the example JSON from below, how would I build a Dataframe that uses this column_header = ['id_str', 'text', 'user.screen_name'], (i.e. how do I get the 'screen_name' from the 'user' key without flattening the JSON).\r\n> \r\n> Thanks,\r\n> \r\n> Vishal\r\n> \r\n> {   u'_id': ObjectId('4f8b95e8a504d022e2000000'),\r\n>     u'contributors': None,\r\n>     u'coordinates': None,\r\n>     u'created_at': u'Mon Apr 16 03:45:44 +0000 2012',\r\n>     u'entities': {   u'hashtags': [],\r\n>                      u'urls': [   {   u'display_url': u'stks.co/3M4X',\r\n>                                       u'expanded_url': u'http://stks.co/3M4X',\r\n>                                       u'indices': [72, 92],\r\n>                                       u'url': u'http://t.co/mGdTYusF'}],\r\n>                      u'user_mentions': []},\r\n>     u'favorited': False,\r\n>     u'geo': None,\r\n>     u'id': 191734090783916032L,\r\n>     u'id_str': u'191734090783916032',\r\n>     u'in_reply_to_screen_name': None,\r\n>     u'in_reply_to_status_id': None,\r\n>     u'in_reply_to_status_id_str': None,\r\n>     u'in_reply_to_user_id': None,\r\n>     u'in_reply_to_user_id_str': None,\r\n>     u'place': None,\r\n>     u'possibly_sensitive': False,\r\n>     u'possibly_sensitive_editable': True,\r\n>     u'processed_metadata': {   u'created_date': datetime.datetime(2012, 4, 16, 3, 45, 44, tzinfo=<bson.tz_util.FixedOffset object at 0x104d63790>),\r\n>                                u'search_queries': [   u'$AAPL',\r\n>                                                       u'$MSFT',\r\n>                                                       u'$GOOG'],\r\n>                                u'source': u'Twitter Streaming API'},\r\n>     u'retweet_count': 0,\r\n>     u'retweeted': False,\r\n>     u'source': u'<a href=\"http://stocktwits.com\" rel=\"nofollow\">StockTwits Web</a>',\r\n>     u'text': u'Interesting infographic on the internet and evolution of social media \\u2794 http://t.co/mGdTYusF $FB $GOOG $TWIT $LNKD $AOL',\r\n>     u'truncated': False,\r\n>     u'user': {   u'_id': u'speculatethemkt',\r\n>                  u'contributors_enabled': False,\r\n>                  u'created_at': u'Tue Nov 30 02:28:20 +0000 2010',\r\n>                  u'default_profile': False,\r\n>                  u'default_profile_image': False,\r\n>                  u'description': u\"I'm a 22-year old full-time forex trader living the location independent lifestyle. Author of The Trading Elite \\u2794 http://amzn.to/I0nacY\",\r\n>                  u'favourites_count': 1,\r\n>                  u'follow_request_sent': None,\r\n>                  u'followers_count': 19658,\r\n>                  u'following': None,\r\n>                  u'friends_count': 596,\r\n>                  u'geo_enabled': False,\r\n>                  u'id': 221226895,\r\n>                  u'id_str': u'221226895',\r\n>                  u'is_translator': False,\r\n>                  u'lang': u'en',\r\n>                  u'listed_count': 6,\r\n>                  u'location': u'Portland, OR',\r\n>                  u'name': u'Jared M.',\r\n>                  u'notifications': None,\r\n>                  u'processed_metadata': {   u'created_date': datetime.datetime(2012, 4, 16, 3, 45, 44, tzinfo=<bson.tz_util.FixedOffset object at 0x104d63790>),\r\n>                                             u'search_queries': [   u'$AAPL',\r\n>                                                                    u'$MSFT',\r\n>                                                                    u'$GOOG'],\r\n>                                             u'source': u'Twitter Streaming API'},\r\n>                  u'profile_background_color': u'4f4f4f',\r\n>                  u'profile_background_image_url': u'http://a0.twimg.com/profile_background_images/438353849/TWITTER-BG.jpg',\r\n>                  u'profile_background_image_url_https': u'https://si0.twimg.com/profile_background_images/438353849/TWITTER-BG.jpg',\r\n>                  u'profile_background_tile': False,\r\n>                  u'profile_image_url': u'http://a0.twimg.com/profile_images/2039368182/twitpic1_normal.png',\r\n>                  u'profile_image_url_https': u'https://si0.twimg.com/profile_images/2039368182/twitpic1_normal.png',\r\n>                  u'profile_link_color': u'bd0000',\r\n>                  u'profile_sidebar_border_color': u'eeeeee',\r\n>                  u'profile_sidebar_fill_color': u'efefef',\r\n>                  u'profile_text_color': u'333333',\r\n>                  u'profile_use_background_image': True,\r\n>                  u'protected': False,\r\n>                  u'screen_name': u'speculatethemkt',\r\n>                  u'show_all_inline_media': True,\r\n>                  u'statuses_count': 492,\r\n>                  u'time_zone': u'Pacific Time (US & Canada)',\r\n>                  u'url': u'http://www.speculatethemarkets.com',\r\n>                  u'utc_offset': -28800,\r\n>                  u'verified': False}}\r\n> ```\r\n\r\nI am trying convert this kind of 3/4 levels of nested json into python dataframe with every attribute present in it. I am able to extract up to 2 levels. How can i do for rest?"
  }
]
