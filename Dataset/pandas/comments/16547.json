[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305159021",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16547#issuecomment-305159021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16547",
    "id": 305159021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE1OTAyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T11:08:50Z",
    "updated_at": "2017-05-31T11:08:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls show an explict example with code of your input and output. not really sure what you are after."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305164128",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16547#issuecomment-305164128",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16547",
    "id": 305164128,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE2NDEyOA==",
    "user": {
      "login": "BLMeltdown",
      "id": 20567696,
      "node_id": "MDQ6VXNlcjIwNTY3Njk2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20567696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BLMeltdown",
      "html_url": "https://github.com/BLMeltdown",
      "followers_url": "https://api.github.com/users/BLMeltdown/followers",
      "following_url": "https://api.github.com/users/BLMeltdown/following{/other_user}",
      "gists_url": "https://api.github.com/users/BLMeltdown/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BLMeltdown/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BLMeltdown/subscriptions",
      "organizations_url": "https://api.github.com/users/BLMeltdown/orgs",
      "repos_url": "https://api.github.com/users/BLMeltdown/repos",
      "events_url": "https://api.github.com/users/BLMeltdown/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BLMeltdown/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T11:34:43Z",
    "updated_at": "2017-05-31T11:37:02Z",
    "author_association": "NONE",
    "body": "Well that's a part of a longer question in two parts. \r\n\r\nLet's say my df is:\r\n\r\nindex    \"A\"    \"B\"\r\n0           A1    \"B1,B2,B3\"\r\n1           A2    \"B2,B4,B3\"\r\n2           A3    \"B2,B3,B5\"\r\n\r\nand I want to do magical_function(df)\r\n>\r\nindex    \"B'\"    \"A''\"\r\n0           B1    \"A1\"\r\n1           B2    \"A1,A2,A3\"\r\n2           B3    \"A1,A2,A3\"\r\n3           B4    \"A2\"\r\n4           B5    \"A3\"\r\n\r\nSo I used an exploding strategy\r\ni thus dropna  first to avoid mistakes, then I make a Series with the column to split, I explode it and stack it, and then the join magic with the same index duplicate the \"A\" columns values where needed\r\ndcolumn=\"A\"\r\ncol=\"B\"\r\ncurrent_wdf=df[[idcolumn,col]].dropna()\r\ncurrent_col=current_wdf.loc[:,col]\r\nexploded_df=current_col.str.split('\\,').apply(pd.Series,1).stack()#much slower but keep the index. I could used substitution with enumerate after dropping level\r\nexploded_df.index=exploded_df.index.droplevel(-1)\r\nexploded_df.name=col\r\nagg_df=pd.DataFrame(current_wdf.loc[:,idcolumn]).join(exploded_df)\r\ngrouped=agg_df.groupby([col])\r\n\r\n\r\nAfter what I have:\r\nindex    \"B'\"    \"A''\"\r\n0           B1    \"A1\"\r\n1           B2    \"A1\"\r\n1           B2    \"A2\"\r\n1           B2    \"A3\"\r\n2           B3    \"A1\"\r\n2           B3    \"A2\"\r\n2           B3    \"A3\"\r\n3           B4    \"A2\"\r\n4           B5    \"A3\"\r\n\r\n    0   1\r\n0  B1  A1\r\n1  B2  A1\r\n1  B2  A2\r\n1  B2  A3\r\n2  B3  A1\r\n2  B3  A2\r\n2  B3  A3\r\n3  B4  A2\r\n4  B5  A3\r\n\r\n\r\nThen I do\r\ngrouped=agg_df.groupby([col])\r\ngives\r\na dict \r\n{'B1': Int64Index([0], dtype='int64'),\r\n 'B2': Int64Index([1, 1, 1], dtype='int64'),\r\n 'B3': Int64Index([2, 2, 2], dtype='int64'),\r\n 'B4': Int64Index([3], dtype='int64'),\r\n 'B5': Int64Index([4], dtype='int64')}\r\n\r\nTo have the dataframe I desire, I need to get past the \"groups\" limitation of only displaying the indexes and doing this\r\ngroups_dict= {k: list(grouped.get_group(v).loc[:,idcolumn]) for k, v in grouped.groups.items()}\r\n\r\nAnd I finally have the dataframe.\r\n\r\nBut that was less than trivial, and I am dubious about the last part.\r\nIt works, but it is slow, and could easily break.\r\n\r\nAre there no operation for such matching reversal process?\r\nAnd, for groups content retrieval such as I exposed, are there any way to grab the contents instead of the indexes without have to perform repeatedly get_group?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305166822",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16547#issuecomment-305166822",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16547",
    "id": 305166822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE2NjgyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T11:48:36Z",
    "updated_at": "2017-05-31T11:49:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "better to ask this on Stack Overflow.\r\n\r\nThat should be your first stop for usage type questions. If its deemed a bug/enhancement then certainly open an issue here."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/305169371",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16547#issuecomment-305169371",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16547",
    "id": 305169371,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTE2OTM3MQ==",
    "user": {
      "login": "BLMeltdown",
      "id": 20567696,
      "node_id": "MDQ6VXNlcjIwNTY3Njk2",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20567696?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BLMeltdown",
      "html_url": "https://github.com/BLMeltdown",
      "followers_url": "https://api.github.com/users/BLMeltdown/followers",
      "following_url": "https://api.github.com/users/BLMeltdown/following{/other_user}",
      "gists_url": "https://api.github.com/users/BLMeltdown/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BLMeltdown/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BLMeltdown/subscriptions",
      "organizations_url": "https://api.github.com/users/BLMeltdown/orgs",
      "repos_url": "https://api.github.com/users/BLMeltdown/repos",
      "events_url": "https://api.github.com/users/BLMeltdown/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BLMeltdown/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-31T12:00:53Z",
    "updated_at": "2017-05-31T12:00:53Z",
    "author_association": "NONE",
    "body": "Ok, sorry\r\n"
  }
]
