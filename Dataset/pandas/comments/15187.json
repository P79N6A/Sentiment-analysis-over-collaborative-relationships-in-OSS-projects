[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/274338245",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-274338245",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 274338245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDMzODI0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-22T15:40:36Z",
    "updated_at": "2017-01-22T15:40:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @gfyoung "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275997756",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-275997756",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 275997756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk5Nzc1Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T07:47:05Z",
    "updated_at": "2017-01-30T07:47:13Z",
    "author_association": "MEMBER",
    "body": "For references, here are the same inputs with `Series` :\r\n~~~python\r\n>>> Series([np.nan],dtype='int64')  # NO MATCH\r\n...\r\nValueError: cannot convert float NaN to integer\r\n>>>\r\n>>> Series([np.nan],dtype='uint64')  # NO MATCH\r\n...\r\nValueError: cannot convert float NaN to integer\r\n>>>\r\n>>> Series([np.iinfo(np.int64).max-1],dtype='int64')  # MATCH\r\n0    9223372036854775806\r\ndtype: int64\r\n>>>\r\n>>> Series([np.iinfo(np.int64).max-1],dtype='int64')  # MATCH\r\n0    9223372036854775806\r\ndtype: uint64\r\n>>>\r\n>>> Series([np.iinfo(np.uint64).max-1],dtype='int64')  # MATCH\r\n...\r\nOverflowError: Python int too large to convert to C long\r\n>>>\r\n>>> Series([-1], dtype='int64')  # MATCH\r\n0   -1\r\ndtype: int64\r\n>>>\r\n>>> Series([-1], dtype='uint64')  # MATCH\r\n0    18446744073709551615\r\ndtype: uint64\r\n>>>\r\n>>> Series([np.iinfo(np.int32).max+1], dtype='int64')  # MATCH\r\n0    2147483648\r\ndtype: int64\r\n~~~\r\n\r\nIf we are going to resolve this, the behavior should be consistent across the board.  Also, I'm not entirely sure now if I want to change the behavior when we pass in negative numbers and specify `uint64` (or any `uint`) for that matter.  On the one hand, the value is destroyed, but on the other hand, it is the correct value modulo `np.iinfo(np.uint64).max`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276012760",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276012760",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276012760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjAxMjc2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T09:17:01Z",
    "updated_at": "2017-01-30T09:17:01Z",
    "author_association": "MEMBER",
    "body": "On the NaN case: I would be in favor of raising an error when passing `np.nan` to integer dtype (so for `pd.Index([np.nan], dtype='int64')`), so it is consistent with Series and with numpy as well. \r\nIn general, I think if you pass a specific dtype and the data cannot be converted to that dtype, we should raise.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276014519",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276014519",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276014519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjAxNDUxOQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T09:26:00Z",
    "updated_at": "2017-01-30T09:26:45Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : What do you mean by \"converted\" ?  Casting modulo the maximum value of the integer data-type could be argued to be a conversion.  Or are you saying that we just go with `numpy` conventions?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276021609",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276021609",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276021609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjAyMTYwOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T09:59:27Z",
    "updated_at": "2017-01-30T09:59:27Z",
    "author_association": "MEMBER",
    "body": "Yes, I know, the exact interpretation of that is the debatable part. \r\nFor NaNs I think this is quite clear, for integers outside of its 'natural' range not so. Personally I would find it more informative if eg `pd.Series([-1], dtype='uint64`) would raise (as this feels like a user error), but can also see the argument for 'converting' it and not raising (which would indeed be consistent with numpy)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276024399",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276024399",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276024399,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjAyNDM5OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T10:13:10Z",
    "updated_at": "2017-01-30T10:13:10Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche : Yes, I agree with you regarding `NaN`.  That is also consistent with `numpy`, hence my last question in my previous comment <a href=\"https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276014519\">above</a>."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276190684",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276190684",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276190684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjE5MDY4NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T21:07:19Z",
    "updated_at": "2017-01-30T21:07:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the general philosophy is to raise when presented with a dtype that is incompat with the input, essentially this is going to do an ``.astype``. so in favor of having ``Index`` agree with ``Series`` (for ``np.nan`` with int/uint dtype specified).\r\n\r\n``pd.Series([-1], dtype='uint64)`` should also raise (informative message).\r\n\r\n```\r\n>>> Series([np.iinfo(np.uint64).max-1],dtype='int64')  # MATCH\r\n...\r\nOverflowError: Python int too large to convert to C long\r\n```\r\n\r\nI also find this error message not very informative (we are passing thru the numpy message). ``OverflowError`` is fine, but its not useful to a user. So would be in favor of cleaning that up both for Index and Series."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276302998",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276302998",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276302998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjMwMjk5OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T08:26:39Z",
    "updated_at": "2017-01-31T08:26:39Z",
    "author_association": "MEMBER",
    "body": "Yes, we can agree on raising when `NaN` is present and an integer `dtype` is specified.  Regarding cleaning up the error message for `int64` overflow, that is perfectly reasonable.\r\n\r\nAgain, I'm not too sure right now about raising on negative integers specified with an unsigned integer `dtype`.  Maybe I'm just being lazy, but consistency with `numpy` might be preferable. 😂 "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276306534",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276306534",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276306534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjMwNjUzNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T08:45:56Z",
    "updated_at": "2017-01-31T08:45:56Z",
    "author_association": "MEMBER",
    "body": ">     >>> Series([np.iinfo(np.uint64).max-1],dtype='int64')  # MATCH\r\n>     ...\r\n>     OverflowError: Python int too large to convert to C long\r\n\r\nIt's true that the above raises, but this is not very consistent:\r\n\r\n```\r\nIn [174]: pd.Series(np.array([np.iinfo(np.int64).max+1]), dtype='int64')   # array will already have a dtype, uint64\r\nOut[174]: \r\n0   -9223372036854775808\r\ndtype: int64\r\n\r\nIn [169]: pd.Series([np.iinfo(np.int32).max+1], dtype='int32')\r\nOut[169]: \r\n0   -2147483648\r\ndtype: int32\r\n```\r\n\r\nAt least, we could make `Series([..], dtype='..')` consistent with `Series([..]).astype('..')`, and that means raising for NaN casted to integer (indeed, we can agree on that one)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276307276",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276307276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276307276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjMwNzI3Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T08:49:55Z",
    "updated_at": "2017-01-31T08:49:55Z",
    "author_association": "MEMBER",
    "body": "Maybe we can start with a PR to raise with `NaN` and integer `dtype` specified?  It seems we haven't fully reached consensus on the other cases."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276387192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276387192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276387192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjM4NzE5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T15:03:23Z",
    "updated_at": "2017-01-31T15:03:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung sure partially closing this would be great."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276387470",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276387470",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276387470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjM4NzQ3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T15:04:23Z",
    "updated_at": "2017-01-31T15:04:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Maybe I'm just being lazy, but consistency with numpy might be preferable. 😂\r\n\r\nsure when numpy makes sense. Given a wrap-around with negative numbers for ``uint`` is quite suprising. These should be treated exactly like ``NaN`` with ``unint`` (when a dtype is specified), raising an error."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276431769",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276431769",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276431769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjQzMTc2OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T17:27:10Z",
    "updated_at": "2017-01-31T17:27:18Z",
    "author_association": "MEMBER",
    "body": "@jreback : That wouldn't be the only case you would have to consider of \"wrap-around\" BTW.  Look at all of the examples @jorisvandenbossche provided <a href=\"https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276306534\">above</a>.\r\n\r\nEssentially casting to `ndarray` would be a forbidden thing without explicit checks all over the place for overflow and underflow.  Perhaps \"wrapping\" the `np.array` method would be the only way to go if we go with raising on such instances and **enforcing** it across the code base."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/276434982",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-276434982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 276434982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NjQzNDk4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-31T17:38:23Z",
    "updated_at": "2017-01-31T17:38:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung I don't think this is very complicated.. This is *only* when the dtype is actually specified. You check for negative values then cast to ``uint64`` (which catches the nans). I don't think this is a big deal.\r\n\r\nThis is the point of having a ``UInt64`` block which can do these validations will catch anything else, e.g. try to fillna with an invalid value (which actually works, but you cast it first), and things like setitem.\r\n\r\nEverything is already divorced but numpy and wrapped in the blocks which have convenient API for values (and casting). We do exactly these types of things for example in trying to set nan with an integer block.\r\n\r\nThe only part of this which is not wrapped up are some construction validation routines (which happen way before block creation). We do lots of inference to figure out what the user is passing, see https://github.com/pandas-dev/pandas/blob/master/pandas/core/series.py#L2843"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277577070",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-277577070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 277577070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzU3NzA3MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T03:08:01Z",
    "updated_at": "2017-02-06T03:08:01Z",
    "author_association": "MEMBER",
    "body": "~~~\r\ndiff --git a/pandas/indexes/base.py b/pandas/indexes/base.py\r\nindex dcd565e..4cccd96 100644\r\n--- a/pandas/indexes/base.py\r\n+++ b/pandas/indexes/base.py\r\n@@ -200,6 +200,9 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):\r\n                         if inferred == 'integer':\r\n                             data = np.array(data, copy=copy, dtype=dtype)\r\n                         elif inferred in ['floating', 'mixed-integer-float']:\r\n+                            if isnull(data).any():\r\n+                                raise ValueError('cannot convert float '\r\n+                                                 'NaN to integer')\r\n \r\n                             # If we are actually all equal to integers,\r\n                             # then coerce to integer.\r\n@@ -227,8 +230,10 @@ class Index(IndexOpsMixin, StringAccessorMixin, PandasObject):\r\n                     else:\r\n                         data = np.array(data, dtype=dtype, copy=copy)\r\n \r\n-                except (TypeError, ValueError):\r\n-                    pass\r\n+                except (TypeError, ValueError) as e:\r\n+                    msg = str(e)\r\n+                    if 'cannot convert float' in msg:\r\n+                        raise\r\n \r\n             # maybe coerce to a sub-class\r\n             from pandas.tseries.period import (PeriodIndex,\r\n~~~\r\nHere's a possible way to patch the `NaN` with integer `dtype` specified.  Unfortunately, that causes tests to break (with the error I added) as follows:\r\n\r\n1) `indexes/common.py` for `Int64Index` and `RangeIndex`\r\n2) `test_count` in `test_analytics.py`\r\n\r\nAll of these tests incorporate `NaN` somehow into the test setup.  The first failures are rather trivial to patch, but I'm not so sure about the second.  Thoughts?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277713944",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-277713944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 277713944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzcxMzk0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T15:20:10Z",
    "updated_at": "2017-02-06T15:20:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you need to do the 2nd part first. IOW, if the floats == integers when casted it is ok, but then need to raise on the ValueError (rather than converting to a float index)\r\n\r\n```\r\n+                            if isnull(data).any():\r\n+                                raise ValueError('cannot convert float '\r\n+                                                 'NaN to integer')\r\n \r\n                             # If we are actually all equal to integers,\r\n                             # then coerce to integer.\r\n```\r\n\r\ncan you show the test that is problematic? IOW an example of it."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277715899",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-277715899",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 277715899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzcxNTg5OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T15:26:30Z",
    "updated_at": "2017-02-06T15:26:30Z",
    "author_association": "MEMBER",
    "body": "I'm not sure I 100% followed what you said there.  Also, all the tests I mentioned that failed fail with my `ValueError` being raised."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277717014",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-277717014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 277717014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzcxNzAxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T15:30:08Z",
    "updated_at": "2017-02-06T15:30:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "I said that your change is actually not necessary, rather, https://github.com/pandas-dev/pandas/blob/master/pandas/indexes/base.py#L260\r\n\r\nI think all you need to do is remove the ``try/except`` and let the ``ValueError`` raise (rather than use coercing to ``Index`` of ``object`` dtype)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/277899026",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-277899026",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 277899026,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzg5OTAyNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T04:32:30Z",
    "updated_at": "2017-02-07T04:32:30Z",
    "author_association": "MEMBER",
    "body": "No, that's definitely the wrong place.  Note that `dtype` is `None` in that `if` block, so the user didn't specify that they wanted an integer `dtype`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/278979817",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-278979817",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 278979817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3ODk3OTgxNw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-10T15:47:53Z",
    "updated_at": "2017-02-10T15:47:53Z",
    "author_association": "MEMBER",
    "body": "This is getting more difficult to change, as I realized that `.where` for indices just breaks period with this change of mine:\r\n~~~python\r\n>>> from pandas import Index\r\n>>> Index([1, 2, 3]).where([False, True, True])\r\n...\r\nValueError: cannot convert float NaN to integer\r\n~~~"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285685550",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-285685550",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 285685550,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY4NTU1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:41:46Z",
    "updated_at": "2017-03-10T14:41:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks!\r\n\r\nwe can make a checklist in the issue if that helps? (pls put it up and ill copy to the top if you can)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285685825",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-285685825",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 285685825,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY4NTgyNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:42:55Z",
    "updated_at": "2017-03-10T14:42:55Z",
    "author_association": "MEMBER",
    "body": "@jreback : Can you edit the original issue to add this PR to the checklist?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285688366",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-285688366",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 285688366,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY4ODM2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T14:52:45Z",
    "updated_at": "2017-03-10T14:52:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "yes can u enumerate the open issues (as i see them) and will make checkboxes (even better is for you to post below and i'll update the top)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285693746",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-285693746",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 285693746,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTY5Mzc0Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T15:13:07Z",
    "updated_at": "2017-03-10T15:13:07Z",
    "author_association": "MEMBER",
    "body": "@jreback : Fair enough.  Which issues would we pull in though besides my PR?  The only I can think of is #15145 as you mentioned already."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285717908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-285717908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 285717908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTcxNzkwOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T16:38:10Z",
    "updated_at": "2017-03-10T16:38:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "so I think that fixed [10] and [11], but [12] and [15] remain"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285746001",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-285746001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 285746001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTc0NjAwMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T18:24:38Z",
    "updated_at": "2017-03-10T18:24:38Z",
    "author_association": "MEMBER",
    "body": "@jreback : So the behavior of `Index` matches that of `Series` now (I think you meant [8] and [9] are patched).  Thus, any questions regarding conversions are now beyond the scope of `Index`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/285815468",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-285815468",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 285815468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTgxNTQ2OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-10T23:41:49Z",
    "updated_at": "2017-03-10T23:41:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung yes you are correct. Ok then. I will close this one. Let's however open a new one for Index/Series fixes for [12], [15] (with checkboxes)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289949927",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-289949927",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 289949927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTk0OTkyNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T00:57:19Z",
    "updated_at": "2017-03-29T00:57:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gfyoung can you open an issue as above:\r\n\r\n> @gfyoung yes you are correct. Ok then. I will close this one. Let's however open a new one for Index/Series fixes for [12], [15] (with checkboxes)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289979255",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15187#issuecomment-289979255",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15187",
    "id": 289979255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTk3OTI1NQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-29T04:31:00Z",
    "updated_at": "2017-03-29T04:31:00Z",
    "author_association": "MEMBER",
    "body": "Yep, done: #15832"
  }
]
