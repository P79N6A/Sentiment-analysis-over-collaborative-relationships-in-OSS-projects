[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/262075948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14704#issuecomment-262075948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14704",
    "id": 262075948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjA3NTk0OA==",
    "user": {
      "login": "wilsoc5",
      "id": 11683051,
      "node_id": "MDQ6VXNlcjExNjgzMDUx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11683051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilsoc5",
      "html_url": "https://github.com/wilsoc5",
      "followers_url": "https://api.github.com/users/wilsoc5/followers",
      "following_url": "https://api.github.com/users/wilsoc5/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilsoc5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilsoc5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilsoc5/subscriptions",
      "organizations_url": "https://api.github.com/users/wilsoc5/orgs",
      "repos_url": "https://api.github.com/users/wilsoc5/repos",
      "events_url": "https://api.github.com/users/wilsoc5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilsoc5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-21T21:41:23Z",
    "updated_at": "2016-11-21T21:41:23Z",
    "author_association": "NONE",
    "body": "I realize this is related to Issue #8908, but extends it in a more general way. Alternatively, ```mangle_dup_cols``` could be converted from boolean to an actual string, though the case of a desired empty string would be harder to handle.  Thus, I think the introduction of ```mangle_dupe_cols_str``` is a cleaner implementation. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/262115663",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14704#issuecomment-262115663",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14704",
    "id": 262115663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjExNTY2Mw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T00:55:38Z",
    "updated_at": "2016-11-22T00:55:38Z",
    "author_association": "MEMBER",
    "body": "I think using ``names`` is simple in such complex cases.\r\n\r\nI'm slightly -1 to add further less-frequently used options to ``read_csv``. One idea is to additionally allow ``mangle_dupe_cols`` to accept ``str`` (mangled using specified ``str``).\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/262127588",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14704#issuecomment-262127588",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14704",
    "id": 262127588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjEyNzU4OA==",
    "user": {
      "login": "wilsoc5",
      "id": 11683051,
      "node_id": "MDQ6VXNlcjExNjgzMDUx",
      "avatar_url": "https://avatars0.githubusercontent.com/u/11683051?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wilsoc5",
      "html_url": "https://github.com/wilsoc5",
      "followers_url": "https://api.github.com/users/wilsoc5/followers",
      "following_url": "https://api.github.com/users/wilsoc5/following{/other_user}",
      "gists_url": "https://api.github.com/users/wilsoc5/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wilsoc5/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wilsoc5/subscriptions",
      "organizations_url": "https://api.github.com/users/wilsoc5/orgs",
      "repos_url": "https://api.github.com/users/wilsoc5/repos",
      "events_url": "https://api.github.com/users/wilsoc5/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wilsoc5/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T02:10:34Z",
    "updated_at": "2016-11-22T02:10:34Z",
    "author_association": "NONE",
    "body": "I would agree if I had such a simple dataset that didn't have row and column headers that changed frequently.  In one particular dataset, I have over 400 columns and 500+ rows. ```names``` becomes unwieldy in those cases and really should be populated from the dataset. I'm all for using ```mangle_dup_cols``` as a strong. The one question the community (or developers) should answer if you go that route is if it should also support the empty string for concatenation (which evaluates ```False```). "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/262212977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14704#issuecomment-262212977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14704",
    "id": 262212977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjIxMjk3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T11:09:22Z",
    "updated_at": "2016-11-22T11:09:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am also -1 on expanding duplicate handling at all. Generally if you have duplicates it is more sensible to skip the header row and set the values later. I suppose allowing a string arg to ``mangle_dup_cols`` is ok, but would require a community based PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/262295952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14704#issuecomment-262295952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14704",
    "id": 262295952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjI5NTk1Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T16:49:44Z",
    "updated_at": "2016-11-22T16:49:44Z",
    "author_association": "MEMBER",
    "body": "I think there are two different things here to discuss:\r\n\r\n- the fact that our \"unduplicating column names\" mangling introduces a new duplicate column name is something that can be solved (and I would regard this as a bug). The code should check if a new column name that it creates does not yet already exist, and otherwise move to a next number (so eg `0.2` instead of `0.1`)\r\n- whether we want to provide the functionality to be able to specify the string used to mangle or not. If we want this, I agree that reusing the existing `mangle_dupe_cols` seems better, in order to not introduce yet another keyword. But if this does not create new columns (previous point), question is if this is really needed."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/262296764",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14704#issuecomment-262296764",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14704",
    "id": 262296764,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjI5Njc2NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T16:52:32Z",
    "updated_at": "2016-11-22T16:52:32Z",
    "author_association": "MEMBER",
    "body": "Actually, my first point seems already partly solved in latest master and 0.19.1:\r\n\r\n```\r\nIn [2]: data = '0,-0.1,0,0.1\\n10.0,123,456,789\\n20.0,012,345,678'\r\n\r\nIn [3]: pd.read_csv(StringIO(data),index_col=0)\r\nOut[3]: \r\n      -0.1  0.1  0.1.1\r\n0                     \r\n10.0   123  456    789\r\n20.0    12  345    678\r\n\r\nIn [4]: pd.__version__\r\nOut[4]: '0.19.1'\r\n```\r\n\r\nSo the actual data in the resulting frame is now correct. It is maybe only a bit surprising that the mangling rename `0` -> `0.1`, and then `0.1` to `0.1.1`, where you could argue that only the `0` should have been mangled as `0.1` was not a duplicate column (eg to `0.2`)."
  }
]
