[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/66874279",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-66874279",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 66874279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODc0Mjc5",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-13T12:02:48Z",
    "updated_at": "2014-12-13T18:29:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "As long as the tests are not implemented, you can quickly get into the action as follows:\n\n``` python\nimport pandas as pd\npd.read_excel('pandas/io/tests/data/test.ods')\npd.read_excel('pandas/io/tests/data/test2.ods')\npd.read_excel('pandas/io/tests/data/test3.ods')\npd.read_excel('pandas/io/tests/data/test_converters.ods')\npd.read_excel('pandas/io/tests/data/test_types.ods')\npd.read_excel('pandas/io/tests/data/test_types2.ods')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/67126512",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-67126512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 67126512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTI2NTEy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-16T08:24:50Z",
    "updated_at": "2014-12-16T08:24:50Z",
    "author_association": "MEMBER",
    "body": "@davidovitch Is there a good reason why you need this functionality in `pd.read_excel`? To me, the natural choice would be a new function  `pd.read_ods`. If it's just about duplicated code/docstrings, we have ways to work around that.\n\n`pandas.io.spreadsheet` is certainly an option, but we'll need a shim to preserve the `pandas.io.excel` namespace for backwards compatibility. It would probably be easier to make a separate `pandas.io.ods` module and import any shared logic (ods/excel) another file.\n\nFor similar but not quite identical tests, my usual approach is to use multiple inheritance:  http://stackoverflow.com/a/1323554/809705\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/67145928",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-67145928",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 67145928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MTQ1OTI4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-16T11:27:20Z",
    "updated_at": "2014-12-16T11:27:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davidovitch well, this is using a lot of duplicated code.\n\nYou can refactor to have the `engine` parameter decide how to open the file as well (rather than just using `ExcelFile`).\n\nI don't think adding to the namespace is useful (e.g. `read_spreadsheet/ods`. This should work like `pd.read_excel(......, engine='ods')`.  Even better would be if those formats have a specific extension / format which can be determined at run-time? which could then just automatically set the engine\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68061458",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-68061458",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 68061458,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDYxNDU4",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-24T16:16:46Z",
    "updated_at": "2014-12-24T16:16:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback, I've refactored it as suggested: the `engine` parameter can now also be set to `ezodf` when using ods files. Everything is now under `ExcelFile`, which has 3 additional private methods to deal with ods files (`_parse_ods`, `_parse_datetime`, `_print_ods_cellinfo`).\n\nThe entire logic to derive at run-time the file type is extended and lives in `ExcelFile.__init__`. I don't think what I have done here is a very elegant approach though, but at least it should work in the same way for MS Excel files. If another spreadsheet file reader has to be added (gnumeric for example), the current approach probably has to be reconsidered. Maybe the `ExcelWriter` approach could work for the reader as well. But that will require more work from my part, and maybe the current approach would suffice for now?\n\nOnly the last reader test fails at this stage, and I have some work left in figuring out why it goes wrong.\n\nThe test that currently still fails also revealed a small typo in `pandas/io/parser.py`: davidovitch/pandas@49245c43ce38df18b2f3a00feced14654d9c0def\n\nThe ods writer is still on the todo list.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68063372",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-68063372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 68063372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4MDYzMzcy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-12-24T16:49:55Z",
    "updated_at": "2014-12-24T16:49:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "also need to add ezodf to the build process. This is not available on conda. But can pip install it. I can fix that so this will tests correctly.\n\nAlso would need an update to the install.rst docs (as this is now an alternative to xlrd).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70415786",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-70415786",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 70415786,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDE1Nzg2",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-18T16:58:31Z",
    "updated_at": "2015-01-18T16:58:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, after a long pause I am trying to get this going again. I just did a rebase with upstream and pushed my latest changes to my remote clone here. However, I think I did something not entirely correct because now I can see some other commits appearing in this pull request... \n\n@jreback, i have made an attempt to make it less messy, but I have to admit I wasn't completely sure I understood your suggestions correctly. I guess you'll let me know if this is not exactly right :-)\n\nThere is now another test failing, so this is not over yet. Anyway, thanks for reviewing this. It has been an interesting and learnfull ride so far.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70426124",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-70426124",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 70426124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDI2MTI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-18T21:11:01Z",
    "updated_at": "2015-01-18T21:11:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davidovitch ok, first order of biz is to rebase this. Then can see what the changes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/70428322",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-70428322",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 70428322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNDI4MzIy",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-18T21:59:55Z",
    "updated_at": "2015-01-18T21:59:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback, I think git history is fixed now. All but the most recent commit were doubled previously. I have removed those commits with a rebase, followed by a push origin master -f to here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/81177338",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-81177338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 81177338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgxMTc3MzM4",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-15T17:53:29Z",
    "updated_at": "2015-04-15T16:34:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback, is this looking better? Regarding the tests for the readers (ExcelReaderTests), I added a method to determine which readers are installed, and only test for those. This is different then before where a test would skip if only one out of 3 readers was not installed. I think it looks less compact in the code, but should result in better test coverage when not all the spreadsheet readers are installed.\nEDIT: On second thought, I think this helps maintainability, and it should be easier to add another reader and create tests for it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93477813",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-93477813",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 93477813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNDc3ODEz",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-15T16:32:19Z",
    "updated_at": "2015-04-15T16:32:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer, @jreback I would like to bring this PR back to life. Is any one of you interested in another round of reviews?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/93485423",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-93485423",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 93485423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzNDg1NDIz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-15T16:54:02Z",
    "updated_at": "2015-04-15T16:54:02Z",
    "author_association": "MEMBER",
    "body": "Sure, let us know when you're ready\n\nOn Wed, Apr 15, 2015 at 9:32 AM, David Verelst notifications@github.com\nwrote:\n\n> ## @shoyer, @jreback I would like to bring this PR back to life. Is any one of you interested in another round of reviews?\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/pydata/pandas/pull/9070#issuecomment-93477813\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/97724817",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-97724817",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 97724817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk3NzI0ODE3",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-30T09:53:09Z",
    "updated_at": "2015-04-30T10:12:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer, @jreback: I've cleaned it up a bit more. Personally, I believe this PR has come along way, but it is far from being perfect:\n- No writer capabilities yet, and I think that should be another PR\n- No tests yet with reading an ods file from a URL\n- Not all file type determination logic is out of the `ExcelFile.__init__()` class. I think it would be more elegant if BaseFile and its subclasses (`EZODFFile` and `XLRDFile`) should contain the file format/library dependent logic.\n- `ExcelFIle` still contains `ezodf` and `xlrd` dependent methods: `_parse_ods`, `_parse_datetime()`, and `_print_ods_cellinfo()` for `ezodf` and `_parse_excel()` for `xlrd`. I would assume it to be more elegant if those somehow could live in the respective `BaseFile` subclasses `EZODFile` and `XLRDFile`\n- A few days ago I bumped into [pyexcel](https://github.com/chfw/pyexcel): a library with a single API to read all the different spreadsheet formats. It depends on the same libraries pandas is using for reading/writing of the different formats, and I am wondering if the work I am doing here makes any sense if, instead of implementing this for all the different readers/writers out there, we could focus on supporting one library that handles all the format dependent logic/interpretation for us. I also mention this in issue #2311. Any thoughts on this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100540441",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-100540441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 100540441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDU0MDQ0MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-09T20:15:05Z",
    "updated_at": "2015-05-09T20:15:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davidovitch seems that `pyexcel` uses lots of different libraries (well plugins), and thus to add `ods` support you would need: `pyexcel, pyexcel-io, texttable, pyexcel-ods, pyexcel-ods3` is that accurate? if that is the case then too many deps.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100616890",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-100616890",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 100616890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDYxNjg5MA==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-10T10:13:47Z",
    "updated_at": "2015-05-10T10:13:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback you are right: `pyexcel` uses a plugin infrastructure. The plugins itself are very small (the actual `pyexcel-ods` code doing stuff is only 250 lines approximately). Since `pyexcel` uses a new BSD license (I am not a lawyer, but new BSD and BSD seem to be compatible), it seems we could also just incorporate `pyexcel` + plugins into `pandas` instead.\n\nAn alternative strategy could be to see if the `pyexcel` maintainer is open for maintaining/supporting a version that includes all the plugins, but one that fails graciously when the required readers are not installed (as is done now in `pandas`).\n\nEither way, I don't have any strong feelings regarding the current approach or something different like `pyexcel`. After all, the code that is specific to a certain reader is limited, and writing it specifically with `pandas` in mind might be more suitable for certain edge cases. \n\nDifficult to say, but migrating to `pyexcel` might be more work compared to implementing the missing features into `pandas`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/100616917",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-100616917",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 100616917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMDYxNjkxNw==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-10T10:15:06Z",
    "updated_at": "2015-05-10T10:15:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have rebased my work again, and squashed a lot of intermediate steps into the `ENH` commit. I hope this will help the review process.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102638039",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102638039",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102638039,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjYzODAzOQ==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T15:25:04Z",
    "updated_at": "2015-05-16T15:25:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I re-factored the tests so the structure is consistent with how the Excel writer tests are implemented. If I got it right this should be address @jreback comments. Previously, not all tests where executed for all the 3 different Excel formats (because not all files where available in all 3 formats. Now all test spreadsheets are available in the 3 formats (`xls`, `xlsx`, `xlsm`)\n\nAlthough I agree with  @shoyer that using `None` instead of `type(None)` for `io_class` seems more elegant at first sight, `None` will fail when using `isinstance(object, None)`. Since at some places I need to test if a certain object is possibly something else then None, I kind of assume it is nicer to have:\n\n``` python\nif isinstance(object, a_type_that_can_be_NoneType):\n    blah\n```\n\nover \n\n``` python\nif object is not None and isinstance(object, a_type_that_cannot_be_NoneType):\n    blah\n```\n\nI will squash and rebase in a few days, but I will retain the re-factoring of the reader tests in a separate commit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102639888",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102639888",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102639888,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjYzOTg4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T15:36:19Z",
    "updated_at": "2015-05-16T15:36:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "using type(None) is not idiomatic at all\npls change this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102642585",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102642585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102642585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0MjU4NQ==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T15:52:31Z",
    "updated_at": "2015-05-16T15:52:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sure.\n\nIs there any way of avoiding something like this instead?\n\n``` Python\nif self.io_class is None:\n    return False\nelif isinstance(io, self.io_class):\n    return True\nelse:\n    return False\n```\n\nI can see how `type(None)` violate Python idioms; I was trying to be consistent on the data type of io_class: It can be either `None`, or a type (`xlrd.Book` or `ezodf.document.PackagedDocument`). But maybe that doesn't matter at all :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102642670",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102642670",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102642670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0MjY3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T15:54:23Z",
    "updated_at": "2015-05-16T15:54:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "return isinstance(io, self.io_class)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102642738",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102642738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102642738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0MjczOA==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T15:56:09Z",
    "updated_at": "2015-05-16T15:56:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "but that will fail if `self.io_class` is `None`... or am I seeing ghosts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102643771",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102643771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102643771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0Mzc3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T16:03:08Z",
    "updated_at": "2015-05-16T16:03:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "nope\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102643882",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102643882",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102643882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0Mzg4Mg==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T16:05:45Z",
    "updated_at": "2015-05-16T16:05:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "That's weird, what I get is:\n\n```\n>>> isinstance(True, True)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: isinstance() arg 2 must be a type or tuple of types\n>>> isinstance(True, type(True))\nTrue\n>>> \n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102644389",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102644389",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102644389,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0NDM4OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T16:08:10Z",
    "updated_at": "2015-05-16T16:08:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "why would io_class be None\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102644592",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102644592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102644592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0NDU5Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T16:08:56Z",
    "updated_at": "2015-05-16T16:08:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "or just do\n\nreturn io is None or isinstnace(io, io_class)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/102645025",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-102645025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 102645025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY0NTAyNQ==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T16:11:45Z",
    "updated_at": "2015-05-16T16:11:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Because if the specific reader is not installed, it can be None. \nYeah, that's way more compact :-) but the same principle still applies.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/107042419",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-107042419",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 107042419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNzA0MjQxOQ==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-30T13:37:16Z",
    "updated_at": "2015-05-30T13:37:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback @shoyer: thanks again for your comments! Let me know if you prefer a fresh squash/rebase before having another look at this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/124967579",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-124967579",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 124967579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDk2NzU3OQ==",
    "user": {
      "login": "davidovitch",
      "id": 2007257,
      "node_id": "MDQ6VXNlcjIwMDcyNTc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2007257?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidovitch",
      "html_url": "https://github.com/davidovitch",
      "followers_url": "https://api.github.com/users/davidovitch/followers",
      "following_url": "https://api.github.com/users/davidovitch/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidovitch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidovitch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidovitch/subscriptions",
      "organizations_url": "https://api.github.com/users/davidovitch/orgs",
      "repos_url": "https://api.github.com/users/davidovitch/repos",
      "events_url": "https://api.github.com/users/davidovitch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidovitch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-26T10:33:00Z",
    "updated_at": "2015-07-26T10:48:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer @jreback and once more thanks for reviewing (hope this PR is not too boring for you guys...). I have tried to address all you comments.\n\nI am not sure I see how to get around @jreback last suggestion: \n\n> why don't you make supported_readers a cached property which returns this list. This should return readers which don't raise import errors.\n> this can be encapsulated in a method for each reader, e.g. in the xlrd, ezodf sub-classes, e.g. something like then the loop becomes\n> \n> ``` python\n> for reader in self.supported_readers:\n>     try:\n>           return reader.create_engine(io, engine=engine):\n>     except (NotImplementedError):\n>          pass\n> raise ValueError(\"no supported readers for this input\")\n> ```\n\nThis approach would require another mechanism to throw and `ImportError` when the reader corresponding the input is supported but not installed. So I am not sure I fully understand how to get the last suggestion implemented properly.\n\nDon't get me wrong, I am getting a lot out of your comments and suggestions, and I don't want to give up just yet (I would love to see pandas read my ods spreadsheets), but I would like to ask your opinion on how this is going as this is my first \"significant\" PR (I am not educated as a coder). Do you think the PR is going in the right direction? Are the \"improvements\" I am making getting the PR to an acceptable level? If I am not able to clear the quality bar, I would rather have someone more capable and experienced take this over instead. It would be a shame if am just wasting your time over a PR that is not going anywhere.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/124969533",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-124969533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 124969533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDk2OTUzMw==",
    "user": {
      "login": "andresmrm",
      "id": 937689,
      "node_id": "MDQ6VXNlcjkzNzY4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/937689?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andresmrm",
      "html_url": "https://github.com/andresmrm",
      "followers_url": "https://api.github.com/users/andresmrm/followers",
      "following_url": "https://api.github.com/users/andresmrm/following{/other_user}",
      "gists_url": "https://api.github.com/users/andresmrm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andresmrm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andresmrm/subscriptions",
      "organizations_url": "https://api.github.com/users/andresmrm/orgs",
      "repos_url": "https://api.github.com/users/andresmrm/repos",
      "events_url": "https://api.github.com/users/andresmrm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andresmrm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-26T10:47:40Z",
    "updated_at": "2015-07-26T10:47:40Z",
    "author_association": "NONE",
    "body": "Just to let you know, I'm watching this thread and waiting eagerly for this feature. =)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125046052",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-125046052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 125046052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTA0NjA1Mg==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-26T22:39:46Z",
    "updated_at": "2015-07-26T22:39:46Z",
    "author_association": "MEMBER",
    "body": "I'm on my phone now, but if I recall correctly the code here was indeed on the right track. The key thing is that it's well tested -- clean code can come later.\n\nOn Sun, Jul 26, 2015 at 3:33 AM, David Verelst notifications@github.com\nwrote:\n\n> @shoyer @jreback and once more thanks for reviewing (hope this PR is not too boring for you guys...). I have tried to address all you comments.\n> I am not sure I see how to get around @jreback last suggestion: \n> \n> > why don't you make supported_readers a cached property which returns this list. This should return readers which don't raise import errors.\n> > this can be encapsulated in a method for each reader, e.g. in the xlrd, ezodf sub-classes, e.g. something like then the loop becomes\n> > \n> > ``` python\n> > for reader in self.supported_readers:\n> >     try:\n> >           return reader.create_engine(io, engine=engine):\n> >     except (NotImplementedError):\n> >          pass\n> > raise ValueError(\"no supported readers for this input\")\n> > ```\n> > \n> > This approach would require another mechanism to throw and `ImportError` when the reader corresponding the input is supported but not installed. So I am not sure I fully understand how to get the last suggestion implemented properly.\n> > \n> > ## Don't get me wrong, I am getting a lot out of your comments and suggestions, and I don't want to give up just yet (I would love to see pandas read my ods spreadsheets), but I would like to ask your opinion on how this is going as this is my first \"significant\" PR (I am not educated as a coder). Do you think the PR is going in the right direction? Are the \"improvements\" I am making getting the PR to an acceptable level? If I am not able to clear the quality bar, I would rather have someone more capable and experienced take this over instead. It would be a shame if am just wasting your time over a PR that is not going anywhere.\n> > \n> > Reply to this email directly or view it on GitHub:\n> > https://github.com/pydata/pandas/pull/9070#issuecomment-124967579\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/125051098",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9070#issuecomment-125051098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9070",
    "id": 125051098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNTA1MTA5OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-27T00:13:57Z",
    "updated_at": "2015-07-27T00:13:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@davidovitch I'll have a look tomorrow\nbut the point is tests are key - and the code should be pretty idiomatic\nI have found that it is best to put in pretty tight code on the first pass - yes things can and do get revised afterwards - but that is harder esp if the original authors are not around (which can be frequent) and we already have enough to do w/o auditing all parts of the code\n"
  }
]
