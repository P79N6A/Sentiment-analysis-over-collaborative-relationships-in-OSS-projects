[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58635948",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58635948",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58635948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjM1OTQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T10:02:10Z",
    "updated_at": "2014-10-10T10:02:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "can u show df.info() right after the read from stata\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58636002",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58636002",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58636002,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjM2MDAy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T10:02:47Z",
    "updated_at": "2014-10-10T10:02:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "pd.show_versions() as well\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58636908",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58636908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58636908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjM2OTA4",
    "user": {
      "login": "djrobust",
      "id": 8261687,
      "node_id": "MDQ6VXNlcjgyNjE2ODc=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8261687?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/djrobust",
      "html_url": "https://github.com/djrobust",
      "followers_url": "https://api.github.com/users/djrobust/followers",
      "following_url": "https://api.github.com/users/djrobust/following{/other_user}",
      "gists_url": "https://api.github.com/users/djrobust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/djrobust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/djrobust/subscriptions",
      "organizations_url": "https://api.github.com/users/djrobust/orgs",
      "repos_url": "https://api.github.com/users/djrobust/repos",
      "events_url": "https://api.github.com/users/djrobust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/djrobust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T10:12:23Z",
    "updated_at": "2014-10-10T10:12:23Z",
    "author_association": "NONE",
    "body": "``` Python\ndf = pd.read_stata(file)\ndf.info()\npd.show_versions()\ndf['w_age_educ'] = df['w_age'] * df['weduc']\nprint(df[['w_age', 'weduc', 'w_age_educ']].dtypes)\nprint(df[['w_age', 'weduc', 'w_age_educ']][:3])\n```\n\nyields\n\n``` Python\n<class 'pandas.core.frame.DataFrame'>\nInt64Index: 4066 entries, 0 to 4065\nData columns (total 62 columns):\nstate                4066 non-null int8\nhhnum                4066 non-null int32\ncbsa_size            4066 non-null int8\nfamnum               4066 non-null int8\nhimm                 4066 non-null int8\nhgen2                4066 non-null int8\nheduc                4066 non-null int8\nhtwage               3789 non-null float32\nhannhrs              4066 non-null int16\nhfamearn             4066 non-null int32\nh_age                4066 non-null int8\nhrace                4066 non-null int8\nhwagesal             4066 non-null int32\nhwage_ogr            3281 non-null float32\nhselfinc             4066 non-null int32\nhfarminc             4066 non-null int32\nhclassly             4066 non-null int8\nhhealth              4066 non-null int8\nhweeksly             4066 non-null int8\nhhrswkly             4066 non-null int8\nhogrflag             4066 non-null int8\nhrgroup              4066 non-null int8\nownkidsu6            4066 non-null int8\nownkidsu18           4066 non-null int8\nwimm                 4066 non-null int8\nwgen2                4066 non-null int8\nweduc                4066 non-null int8\nwtwage               3265 non-null float32\nwannhrs              4066 non-null int16\nwfamearn             4066 non-null int32\nw_age                4066 non-null int8\nwrace                4066 non-null int8\nwwagesal             4066 non-null int32\nwwage_ogr            2906 non-null float32\nwselfinc             4066 non-null int32\nwfarminc             4066 non-null int32\nwclassly             4066 non-null int8\nwweeksly             4066 non-null int8\nwhrswkly             4066 non-null int8\nwhealth              4066 non-null int8\nwogrflag             4066 non-null int8\nwrgroup              4066 non-null int8\nmergestat            4066 non-null object\nwifework             4066 non-null int8\nhusbandwork          4066 non-null int8\nage_gap              4066 non-null int8\nwagesalgap           4066 non-null int32\neducgap              4066 non-null int8\nhlogwage             3789 non-null float32\nwlogwage             3265 non-null float32\nhexp                 4066 non-null int8\nhexp2                4066 non-null float32\nhexp3                4066 non-null float32\nhblack               4066 non-null int8\nwblack               4066 non-null int8\nhhispanic            4066 non-null int8\nwhispanic            4066 non-null int8\nwife_wage_ogr        4066 non-null int8\nhusband_wage_ogr     4066 non-null int8\nmissing_wwage_ogr    4066 non-null int8\nwlogwage_ogr         2906 non-null float32\nany_under6           4066 non-null int8\ndtypes: float32(9), int16(2), int32(10), int8(40), object(1)\nINSTALLED VERSIONS\n------------------\ncommit: None\npython: 3.3.2.final.0\npython-bits: 32\nOS: Linux\nOS-release: 3.16.3-200.fc20.i686\nmachine: i686\nprocessor: i686\nbyteorder: little\nLC_ALL: None\nLANG: en_US.utf8\n\npandas: 0.14.1\nnose: 1.3.4\nCython: 0.20.2\nnumpy: 1.9.0\nscipy: 0.12.1\nstatsmodels: 0.5.0\nIPython: 2.3.0\nsphinx: 1.2.3\npatsy: 0.3.0\nscikits.timeseries: None\ndateutil: 2.2\npytz: 2014.7\nbottleneck: None\ntables: None\nnumexpr: None\nmatplotlib: 1.3.1\nopenpyxl: None\nxlrd: None\nxlwt: None\nxlsxwriter: None\nlxml: None\nbs4: None\nhtml5lib: None\nhttplib2: None\napiclient: None\nrpy2: 2.4.4\nsqlalchemy: None\npymysql: None\npsycopg2: None\nw_age         int8\nweduc         int8\nw_age_educ    int8\ndtype: object\n   w_age  weduc  w_age_educ\n0     44     14         104\n1     34     13         -70\n2     33     18          82\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58637559",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58637559",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58637559,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjM3NTU5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T10:19:52Z",
    "updated_at": "2014-10-10T10:19:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @bashtage\n\ndo u explicitly coerce stata types ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58638824",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58638824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58638824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjM4ODI0",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T10:34:11Z",
    "updated_at": "2014-10-10T10:34:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, it attempts to preserve Stata data types for two reasons.  First if a Stats data set is large, blowing up int8 to int64 is expensive.   Second, preserving types helps ensure data fidelity under round trips (except under some conditions, e.g. no missing values)\n\nOn Oct 10, 2014 6:20 AM, jreback notifications@github.com wrote:\n\ncc @bashtagehttps://github.com/bashtage\n\ndo u explicitly coerce stata types ?\n\n—\nReply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/8527#issuecomment-58637559.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58639033",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58639033",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58639033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjM5MDMz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T10:36:31Z",
    "updated_at": "2014-10-10T10:36:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bashtage thanks - I do recall that from the docs\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58639424",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58639424",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58639424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjM5NDI0",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T10:41:02Z",
    "updated_at": "2014-10-10T10:41:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "For clarity there is no coercion since the raw data is directly read into a structured array with the Stata data types.  The old version would first create Int64 and then convert to smaller types, which meant that the memory requirement could be temporarily high.  This is no longer the case.\n\nOn Oct 10, 2014 6:36 AM, jreback notifications@github.com wrote:\n\n@bashtagehttps://github.com/bashtage thanks - I do recall that from the docs\n\n—\nReply to this email directly or view it on GitHubhttps://github.com/pydata/pandas/issues/8527#issuecomment-58639033.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58643373",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58643373",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58643373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjQzMzcz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T11:28:07Z",
    "updated_at": "2014-10-10T11:28:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "unfortunately this is fundamental a numpy issue (and no fidling with `np.seterr` could make this raise overflow).\n\n```\nIn [3]: np.array([1,2,3],dtype='int8')*100\nOut[3]: array([100, -56,  44], dtype=int8)\n\nIn [4]: np.array([1,2,3],dtype='int16')*100\nOut[4]: array([100, 200, 300], dtype=int16)\n```\n\nso couple of options:\n- easy workaround is to simply coerce to pandas standard float64/int64:\n\n```\nIn [22]:  df = DataFrame({'A' : np.array([1,2,3],dtype='int8'), 'B' : np.array([1,2,3],dtype='float32'), 'C' : 'foo'})\n\nIn [23]: df\nOut[23]: \n   A  B    C\n0  1  1  foo\n1  2  2  foo\n2  3  3  foo\n\nIn [24]: df.dtypes\nOut[24]: \nA       int8\nB    float32\nC     object\ndtype: object\n\nIn [26]: columns = df.select_dtypes(['integer']).columns\n\nIn [27]: df[columns] = df[columns].astype('int64')\n\nIn [28]: columns = df.select_dtypes(['floating']).columns\n\nIn [30]: df[columns] = df[columns].astype('float64')\n\nIn [31]: df.dtypes\nOut[31]: \nA      int64\nB    float64\nC     object\ndtype: object\n```\n- maybe add something like this to `.astype('upcast')` or something which does the above more automatically\n- add an option to `read_stata` to `convert_dtypes` (and I would make this True by default I think)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58652722",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58652722",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58652722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjUyNzIy",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T13:08:50Z",
    "updated_at": "2014-10-10T13:08:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Calling it a numpy issue is a little unfair to numpy.  It is a hardware issue since int addition doesn't check for overflow, -- to do so would be a real performance killer.\n\nYour second comment indicates that there is nothing like `pd.to_safest_dtypes` which will upcast all ints to `int64` and all floats to `float64`?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58653654",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58653654",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58653654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjUzNjU0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T13:16:38Z",
    "updated_at": "2014-10-10T13:16:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok not numpy's fault per-se. agreed overflow is an issue (but I thought I could get it check somehow). In any event.\n\nNormally it is not necessary to coerce to 'safe' types as things are simply created that way. That said, I get why you are passing the stata types thru. Thus it is passed to the user.\n\nI think if we allow `.astype('safe')` or `.astype('upcast')` makes the most sense.\n\nFYI their is another issue out theri to add dict support to `.astype({ column_a : 'float64', column_b : 'int64' })` so this would work with that as well.\n\n@djrobust @bashtage either of you interested in doing this?\n\nI think its only `integer/floating` types that need this kind of conversion.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58654448",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58654448",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58654448,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjU0NDQ4",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T13:23:04Z",
    "updated_at": "2014-10-10T13:24:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "What do other io tools do that read binary data with a standard type?  For example, `read_sql`?  \n\nThe one I know is `read_hdf` which preserves fidelity (i.e. `int8` out is `int8` in).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58654807",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58654807",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58654807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NjU0ODA3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-10T13:25:50Z",
    "updated_at": "2014-10-10T13:25:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Agreed `read_hdf` does preserver fidelity. `read_sql` does to the extent that the underlying db support it (which I don't think they really do). `read_csv` needs user interaction.\n\nI think `read_stata` is fine, maybe just a more stringent warningin the docs.\n\nAnd usually `read_hdf` is used by people storing/retriving using pandas, so the dtypes start at full-precision (unless explicity changed by the user).\n\nstata a bit different as its an imported file.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/58822027",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8527#issuecomment-58822027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8527",
    "id": 58822027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODIyMDI3",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-12T20:52:26Z",
    "updated_at": "2014-10-12T20:58:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "An attempt to add this feature.  I've enabled it by default, using a justification that when importing foreign data the pandas' preferred data types are `float64` and `int64`\n\nI went with `preserve_dtypes` do I could set it to false.  Would have been more consistent if I used `convert_dtypes` which would have to be True by default.  Not really sure which is better.\n"
  }
]
