[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341577826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18079#issuecomment-341577826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18079",
    "id": 341577826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTU3NzgyNg==",
    "user": {
      "login": "bobhaffner",
      "id": 8531623,
      "node_id": "MDQ6VXNlcjg1MzE2MjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8531623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobhaffner",
      "html_url": "https://github.com/bobhaffner",
      "followers_url": "https://api.github.com/users/bobhaffner/followers",
      "following_url": "https://api.github.com/users/bobhaffner/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobhaffner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobhaffner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobhaffner/subscriptions",
      "organizations_url": "https://api.github.com/users/bobhaffner/orgs",
      "repos_url": "https://api.github.com/users/bobhaffner/repos",
      "events_url": "https://api.github.com/users/bobhaffner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobhaffner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-02T22:32:51Z",
    "updated_at": "2017-11-02T22:35:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @sinanonur, your example works in the newly released 0.21.0.  Please upgrade when you can\r\n\r\n```\r\nimport pandas as pd\r\nimport numpy as np\r\ndf = pd.DataFrame(np.random.randn(100, 3), columns=list('ABC'))\r\ngrouped_df = df.groupby(['A', 'B'], as_index=False).aggregate(tuple)\r\nprint(pd.__version__)\r\nprint(grouped_df.head())\r\n\r\n0.21.0\r\n          A         B                      C\r\n0 -2.159796 -1.233800  (1.0704251018658486,)\r\n1 -1.947438  2.082122  (0.5849118717358551,)\r\n2 -1.738639  0.653051  (1.1259850203053805,)\r\n3 -1.638240 -0.799216  (0.3626490086583796,)\r\n4 -1.562435 -0.232689  (-1.120885109955278,)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341630871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18079#issuecomment-341630871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18079",
    "id": 341630871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTYzMDg3MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-03T06:37:33Z",
    "updated_at": "2017-11-03T06:37:33Z",
    "author_association": "MEMBER",
    "body": "@bobhaffner : Cool!  Mind adding that test so that we can close this issue?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341710580",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18079#issuecomment-341710580",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18079",
    "id": 341710580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTcxMDU4MA==",
    "user": {
      "login": "bobhaffner",
      "id": 8531623,
      "node_id": "MDQ6VXNlcjg1MzE2MjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8531623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobhaffner",
      "html_url": "https://github.com/bobhaffner",
      "followers_url": "https://api.github.com/users/bobhaffner/followers",
      "following_url": "https://api.github.com/users/bobhaffner/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobhaffner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobhaffner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobhaffner/subscriptions",
      "organizations_url": "https://api.github.com/users/bobhaffner/orgs",
      "repos_url": "https://api.github.com/users/bobhaffner/repos",
      "events_url": "https://api.github.com/users/bobhaffner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobhaffner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-03T13:58:39Z",
    "updated_at": "2017-11-03T13:58:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @gfyoung Yes, sure thing.  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341822585",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18079#issuecomment-341822585",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18079",
    "id": 341822585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTgyMjU4NQ==",
    "user": {
      "login": "bobhaffner",
      "id": 8531623,
      "node_id": "MDQ6VXNlcjg1MzE2MjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8531623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobhaffner",
      "html_url": "https://github.com/bobhaffner",
      "followers_url": "https://api.github.com/users/bobhaffner/followers",
      "following_url": "https://api.github.com/users/bobhaffner/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobhaffner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobhaffner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobhaffner/subscriptions",
      "organizations_url": "https://api.github.com/users/bobhaffner/orgs",
      "repos_url": "https://api.github.com/users/bobhaffner/repos",
      "events_url": "https://api.github.com/users/bobhaffner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobhaffner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-03T20:46:32Z",
    "updated_at": "2017-11-03T20:46:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "So this is interesting.  I was building a test for this and everything started as expected\r\n\r\n```\r\nimport pandas as pd\r\nprint(pd.__version__)\r\n0.21.0\r\n```\r\n\r\n```\r\ndf = pd.DataFrame({'A' : [1, 1, 3], 'B' :  [1, 1, 4], 'C' :  [1, 3, 4]})\r\nresult = df.groupby(['A', 'B']).aggregate(tuple)\r\nprint(result)\r\n               C\r\nA   B        \r\n1   1         (1, 3)\r\n3   4         (4,)\r\n```\r\n\r\nBut then I tried this\r\n```\r\ndf = pd.DataFrame({'A' : [1, 1, 3], 'B' :  [1, 2, 4]})\r\nresult = df.groupby('A').aggregate(tuple)\r\n```\r\nand got this `ValueError: Shape of passed values is (2, 2), indices imply (2, 1)`\r\n\r\nAm I missing something obvious?    I'll try to dig into this more later on.\r\n\r\n<details>\r\n  <summary>Click to see full traceback</summary>\r\n  ---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/groupby.py in aggregate(self, arg, *args, **kwargs)\r\n   3636                     result = self._aggregate_multiple_funcs(\r\n-> 3637                         [arg], _level=_level, _axis=self.axis)\r\n   3638                     result.columns = Index(\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/base.py in _aggregate_multiple_funcs(self, arg, _level, _axis)\r\n    595         if not len(results):\r\n--> 596             raise ValueError(\"no results\")\r\n    597 \r\n\r\nValueError: no results\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/internals.py in create_block_manager_from_arrays(arrays, names, axes)\r\n   4632         blocks = form_blocks(arrays, names, axes)\r\n-> 4633         mgr = BlockManager(blocks, axes)\r\n   4634         mgr._consolidate_inplace()\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/internals.py in __init__(self, blocks, axes, do_integrity_check, fastpath)\r\n   3027         if do_integrity_check:\r\n-> 3028             self._verify_integrity()\r\n   3029 \r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/internals.py in _verify_integrity(self)\r\n   3238             if block._verify_integrity and block.shape[1:] != mgr_shape[1:]:\r\n-> 3239                 construction_error(tot_items, block.shape[1:], self.axes)\r\n   3240         if len(self.items) != tot_items:\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/internals.py in construction_error(tot_items, block_shape, axes, e)\r\n   4602     raise ValueError(\"Shape of passed values is {0}, indices imply {1}\".format(\r\n-> 4603         passed, implied))\r\n   4604 \r\n\r\nValueError: Shape of passed values is (2, 2), indices imply (2, 1)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-15-4f0abc660a30> in <module>()\r\n      1 df = pd.DataFrame({'A' : [1, 1, 3], 'B' :  [1, 2, 4]})\r\n----> 2 result = df.groupby('A').aggregate(tuple)\r\n      3 result\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/groupby.py in aggregate(self, arg, *args, **kwargs)\r\n   4187         versionadded=''))\r\n   4188     def aggregate(self, arg, *args, **kwargs):\r\n-> 4189         return super(DataFrameGroupBy, self).aggregate(arg, *args, **kwargs)\r\n   4190 \r\n   4191     agg = aggregate\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/groupby.py in aggregate(self, arg, *args, **kwargs)\r\n   3640                         name=self._selected_obj.columns.name)\r\n   3641                 except:\r\n-> 3642                     result = self._aggregate_generic(arg, *args, **kwargs)\r\n   3643 \r\n   3644         if not self.as_index:\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/groupby.py in _aggregate_generic(self, func, *args, **kwargs)\r\n   3675                     result[name] = data.apply(wrapper, axis=axis)\r\n   3676 \r\n-> 3677         return self._wrap_generic_output(result, obj)\r\n   3678 \r\n   3679     def _wrap_aggregated_output(self, output, names=None):\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/groupby.py in _wrap_generic_output(self, result, obj)\r\n   4225         if self.axis == 0:\r\n   4226             return DataFrame(result, index=obj.columns,\r\n-> 4227                              columns=result_index).T\r\n   4228         else:\r\n   4229             return DataFrame(result, index=obj.index,\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/frame.py in __init__(self, data, index, columns, dtype, copy)\r\n    328                                  dtype=dtype, copy=copy)\r\n    329         elif isinstance(data, dict):\r\n--> 330             mgr = self._init_dict(data, index, columns, dtype=dtype)\r\n    331         elif isinstance(data, ma.MaskedArray):\r\n    332             import numpy.ma.mrecords as mrecords\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/frame.py in _init_dict(self, data, index, columns, dtype)\r\n    459             arrays = [data[k] for k in keys]\r\n    460 \r\n--> 461         return _arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\r\n    462 \r\n    463     def _init_ndarray(self, values, index, columns, dtype=None, copy=False):\r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/frame.py in _arrays_to_mgr(arrays, arr_names, index, columns, dtype)\r\n   6138     axes = [_ensure_index(columns), _ensure_index(index)]\r\n   6139 \r\n-> 6140     return create_block_manager_from_arrays(arrays, arr_names, axes)\r\n   6141 \r\n   6142 \r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/internals.py in create_block_manager_from_arrays(arrays, names, axes)\r\n   4635         return mgr\r\n   4636     except ValueError as e:\r\n-> 4637         construction_error(len(arrays), arrays[0].shape, axes, e)\r\n   4638 \r\n   4639 \r\n\r\n~/miniconda3/envs/dev35/lib/python3.5/site-packages/pandas/core/internals.py in construction_error(tot_items, block_shape, axes, e)\r\n   4601         raise ValueError(\"Empty data passed with indices specified.\")\r\n   4602     raise ValueError(\"Shape of passed values is {0}, indices imply {1}\".format(\r\n-> 4603         passed, implied))\r\n   4604 \r\n   4605 \r\n\r\nValueError: Shape of passed values is (2, 2), indices imply (2, 1)\r\n\r\n\r\n</details>\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341827001",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18079#issuecomment-341827001",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18079",
    "id": 341827001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTgyNzAwMQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-03T21:05:49Z",
    "updated_at": "2017-11-03T21:05:49Z",
    "author_association": "MEMBER",
    "body": "That's odd, as if we define the following function:\r\n\r\n~~~python\r\ndef f(x):\r\n   return tuple(x)\r\n~~~\r\n\r\nThe code works.  Have a look to see what's going on there."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341920360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18079#issuecomment-341920360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18079",
    "id": 341920360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkyMDM2MA==",
    "user": {
      "login": "bobhaffner",
      "id": 8531623,
      "node_id": "MDQ6VXNlcjg1MzE2MjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8531623?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bobhaffner",
      "html_url": "https://github.com/bobhaffner",
      "followers_url": "https://api.github.com/users/bobhaffner/followers",
      "following_url": "https://api.github.com/users/bobhaffner/following{/other_user}",
      "gists_url": "https://api.github.com/users/bobhaffner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bobhaffner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bobhaffner/subscriptions",
      "organizations_url": "https://api.github.com/users/bobhaffner/orgs",
      "repos_url": "https://api.github.com/users/bobhaffner/repos",
      "events_url": "https://api.github.com/users/bobhaffner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bobhaffner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T18:42:16Z",
    "updated_at": "2017-11-04T18:42:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Back on this again, but not having much luck figuring out the root cause.  \r\n\r\nBelow is an excerpt from the `aggregate` method of [NDFrameGroupBy](https://github.com/pandas-dev/pandas/blob/bc88240d9cfc35675a01267cde33442adc290b7e/pandas/core/groupby.py#L3489)\r\n\r\nWhen I do `df.groupby(['A', 'B']).aggregate(tuple)` it predictably follows the **if**\r\n\r\nWhen I do `df.groupby('A').aggregate(tuple)` it follows the **else**\r\n\r\n@gfyoung's successful tuple func also follows the **else**\r\n\r\nNot sure why the **if** is needed in the first place?\r\n\r\nAlso, this [issue](https://github.com/pandas-dev/pandas/issues/14078) warns about using agg with classes\r\n\r\nAny guidance is appreciated.  \r\n\r\n```\r\nif self.grouper.nkeys > 1:\r\n    return self._python_agg_general(arg, *args, **kwargs)\r\nelse:\r\n\r\n    # try to treat as if we are passing a list\r\n    try:\r\n         assert not args and not kwargs\r\n         result = self._aggregate_multiple_funcs([arg], _level=_level, _axis=self.axis)\r\n         result.columns = Index(result.columns.levels[0],\r\n         name=self._selected_obj.columns.name)\r\n     except Exception:\r\n         result = self._aggregate_generic(arg, *args, **kwargs)\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341920916",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18079#issuecomment-341920916",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18079",
    "id": 341920916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTkyMDkxNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-04T18:49:43Z",
    "updated_at": "2017-11-04T18:49:43Z",
    "author_association": "MEMBER",
    "body": "> Not sure why the if is needed in the first place?\r\n\r\nTry removing and see what happens.  When there's a bug in our code, all bets are (almost) off 😄 "
  }
]
