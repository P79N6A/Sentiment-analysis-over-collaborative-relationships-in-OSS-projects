[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34548666",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-34548666",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 34548666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ4NjY2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-08T16:45:32Z",
    "updated_at": "2014-02-08T16:49:57Z",
    "author_association": "MEMBER",
    "body": "You can do this easily with record arrays and `numpy.fromfile`. For example, let's say you have a file that's made up of an array of C `struct`s that look like this\n\n``` c\ntypedef struct Data\n{\n    int8_t *name;\n    int32_t data1;\n    double data2;\n} Data;\n```\n\n(Your file is essentially an `fwrite` of something that looks like `Data struct_array[20];`, for example)\n\n``` python\nfrom numpy import fromfile, dtype\nfrom pandas import DataFrame\ndt = dtype([('name', 'S'), ('data1', 'int32'), ('data2', 'float64')])\nrecords = fromfile('the_binary_file.dat', dt)\ndf = DataFrame(records)\n```\n\nThis is darn fast, and there's no need to use the `struct` module here.\n\nThe implementation would probably look something like this\n\n``` python\ndef read_bin(filename, rec_dtype):\n    return DataFrame(fromfile(filename, rec_dtype))\n```\n\nIMHO there's no point in supporting this if you can already do it in a single concise line of code.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34549551",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-34549551",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 34549551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTQ5NTUx",
    "user": {
      "login": "halleygithub",
      "id": 1404757,
      "node_id": "MDQ6VXNlcjE0MDQ3NTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1404757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/halleygithub",
      "html_url": "https://github.com/halleygithub",
      "followers_url": "https://api.github.com/users/halleygithub/followers",
      "following_url": "https://api.github.com/users/halleygithub/following{/other_user}",
      "gists_url": "https://api.github.com/users/halleygithub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/halleygithub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/halleygithub/subscriptions",
      "organizations_url": "https://api.github.com/users/halleygithub/orgs",
      "repos_url": "https://api.github.com/users/halleygithub/repos",
      "events_url": "https://api.github.com/users/halleygithub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/halleygithub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-08T17:18:37Z",
    "updated_at": "2014-02-09T02:57:09Z",
    "author_association": "NONE",
    "body": "Thanks for the tip. Even though it is a simple function, but including the read_bin() in Pandas will unify the data reading format, make- up the I/O capability to talk with binary format file which Pandas lacks before.That will be a good handy function than using numpy fromfile and create a user function.\n\nSince Pandas has read_csv, read_Excel.., it is nature to expect read_bin exist there.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35217641",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-35217641",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 35217641,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE3NjQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T22:10:10Z",
    "updated_at": "2014-02-16T22:10:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@halleygithub how about a cookbook entry?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35218542",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-35218542",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 35218542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjE4NTQy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-16T22:34:28Z",
    "updated_at": "2014-02-16T22:34:28Z",
    "author_association": "MEMBER",
    "body": "Just to clarify one thing: For whatever reason (probably my own stupidity), I can't get this to work using any 32bit type (float or int32_t), but 64 bit types work ... i would guess this is because of padding \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35224975",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-35224975",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 35224975,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjI0OTc1",
    "user": {
      "login": "halleygithub",
      "id": 1404757,
      "node_id": "MDQ6VXNlcjE0MDQ3NTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1404757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/halleygithub",
      "html_url": "https://github.com/halleygithub",
      "followers_url": "https://api.github.com/users/halleygithub/followers",
      "following_url": "https://api.github.com/users/halleygithub/following{/other_user}",
      "gists_url": "https://api.github.com/users/halleygithub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/halleygithub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/halleygithub/subscriptions",
      "organizations_url": "https://api.github.com/users/halleygithub/orgs",
      "repos_url": "https://api.github.com/users/halleygithub/repos",
      "events_url": "https://api.github.com/users/halleygithub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/halleygithub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T02:45:50Z",
    "updated_at": "2014-02-17T02:45:50Z",
    "author_association": "NONE",
    "body": "@jreback, when an amateur programmer like me want to read data from bin-file, normally they will expect Pandas to provide read_bin() already, just like read_csv() or read_stata() etc. If not, they will resort to numpy.fromfile or struct.unpack sooner or later, but that will cause them some efforts to search or learn. IMHO, not seeing read_bin there besides read_csv, read_excel always makes me feel pandas miss something.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35225876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-35225876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 35225876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjI1ODc2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T03:14:08Z",
    "updated_at": "2014-02-17T03:14:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@halleygithub \n\nit is one thing to simple write the frames values to a file as possibly a record array\nbut quite another to properly support this - meaning to provide a round trippable serialization format\n\nI think u would be better off IMHO using HDFStore or msgpack.  (available in 0.13)\n\nproper serialization to a binary format is hard when done in a portable reproducible way\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35226003",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-35226003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 35226003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjI2MDAz",
    "user": {
      "login": "halleygithub",
      "id": 1404757,
      "node_id": "MDQ6VXNlcjE0MDQ3NTc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1404757?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/halleygithub",
      "html_url": "https://github.com/halleygithub",
      "followers_url": "https://api.github.com/users/halleygithub/followers",
      "following_url": "https://api.github.com/users/halleygithub/following{/other_user}",
      "gists_url": "https://api.github.com/users/halleygithub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/halleygithub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/halleygithub/subscriptions",
      "organizations_url": "https://api.github.com/users/halleygithub/orgs",
      "repos_url": "https://api.github.com/users/halleygithub/repos",
      "events_url": "https://api.github.com/users/halleygithub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/halleygithub/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T03:18:09Z",
    "updated_at": "2014-02-17T03:18:09Z",
    "author_association": "NONE",
    "body": "Understood. Thanks for your information.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35226487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-35226487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 35226487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjI2NDg3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T03:32:27Z",
    "updated_at": "2014-02-17T03:32:27Z",
    "author_association": "MEMBER",
    "body": "I'll add an example to the cookbook\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35332517",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-35332517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 35332517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzMyNTE3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T23:23:25Z",
    "updated_at": "2014-02-17T23:23:25Z",
    "author_association": "MEMBER",
    "body": "Turns out that the 32 bit type issue was padding after all.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353332484",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6305#issuecomment-353332484",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6305",
    "id": 353332484,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzMzMjQ4NA==",
    "user": {
      "login": "rspadim",
      "id": 2468782,
      "node_id": "MDQ6VXNlcjI0Njg3ODI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2468782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rspadim",
      "html_url": "https://github.com/rspadim",
      "followers_url": "https://api.github.com/users/rspadim/followers",
      "following_url": "https://api.github.com/users/rspadim/following{/other_user}",
      "gists_url": "https://api.github.com/users/rspadim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rspadim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rspadim/subscriptions",
      "organizations_url": "https://api.github.com/users/rspadim/orgs",
      "repos_url": "https://api.github.com/users/rspadim/repos",
      "events_url": "https://api.github.com/users/rspadim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rspadim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T11:52:13Z",
    "updated_at": "2017-12-21T12:24:59Z",
    "author_association": "NONE",
    "body": "that's not a good solution, maybe we could improve this, i'm using cython...\r\n\r\n        dadosnp=np.fromfile(FileName, dtype=dt)\r\n\r\n95.3 µs ± 3.07 µs per loop (mean ± std. dev. of 7 runs, 10000 loops each)\r\nIn [11]:\r\n\r\n        dadospd=pd.DataFrame(np.fromfile(FileName, dtype=dt))\r\n\r\n5.17 ms ± 197 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\r\nIn [ ]:\r\n\r\n\r\nnumpy magic is here: https://github.com/numpy/numpy/blob/5f01e54b20e38d483e8bab31bf5f953a860fe8d3/numpy/core/records.py#L786"
  }
]
