[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3985768",
    "html_url": "https://github.com/pandas-dev/pandas/issues/780#issuecomment-3985768",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/780",
    "id": 3985768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODU3Njg=",
    "user": {
      "login": "xdong",
      "id": 963910,
      "node_id": "MDQ6VXNlcjk2MzkxMA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/963910?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xdong",
      "html_url": "https://github.com/xdong",
      "followers_url": "https://api.github.com/users/xdong/followers",
      "following_url": "https://api.github.com/users/xdong/following{/other_user}",
      "gists_url": "https://api.github.com/users/xdong/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xdong/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xdong/subscriptions",
      "organizations_url": "https://api.github.com/users/xdong/orgs",
      "repos_url": "https://api.github.com/users/xdong/repos",
      "events_url": "https://api.github.com/users/xdong/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xdong/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-15T18:19:38Z",
    "updated_at": "2012-02-15T18:19:38Z",
    "author_association": "NONE",
    "body": "Thanks for the quick fix. I was going to comment on another issue on float based slicing, but I saw that you had it fixed in commit bc1932f.\n\nNow the float based slicing works as expected when the floats are whole numbers. For example, df.ix[2.0:5.0] is considered label-based as promised in the documentation. However, if I mix integer and float then:\n\ndf.ix[2:5.0] is interpretated as interger-based;\ndf.ix[2:5.1] is interpretated as label-based.\n\nI am worried that it may introduce subtle bugs (admittedly, it's bad practice to mix integer and float.)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/3986544",
    "html_url": "https://github.com/pandas-dev/pandas/issues/780#issuecomment-3986544",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/780",
    "id": 3986544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODY1NDQ=",
    "user": {
      "login": "adamklein",
      "id": 869232,
      "node_id": "MDQ6VXNlcjg2OTIzMg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/869232?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamklein",
      "html_url": "https://github.com/adamklein",
      "followers_url": "https://api.github.com/users/adamklein/followers",
      "following_url": "https://api.github.com/users/adamklein/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamklein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamklein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamklein/subscriptions",
      "organizations_url": "https://api.github.com/users/adamklein/orgs",
      "repos_url": "https://api.github.com/users/adamklein/repos",
      "events_url": "https://api.github.com/users/adamklein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamklein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-02-15T18:57:58Z",
    "updated_at": "2012-02-15T19:00:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is definitely still some weirdness in slicing. It's been a game of whack-a-mole. \n\nPart of the complexity is that slicing is context-dependent on what's in the index.\n\nI believe the slicing you point out will be consistent as long as the index type doesn't change ... what I mean is:\n\n```\nIn [76]: x = Index([1.5, 2, 3, 4, 5])\n\nIn [77]: df = DataFrame(rand(5,5), index=x)\n\nIn [78]: df.ix[1.5:4]\nOut[78]: \n     0        1        2         3       4     \n1.5  0.06102  0.25070  0.009453  0.6829  0.6631\n2    0.81916  0.95604  0.397659  0.7903  0.3951\n3    0.30179  0.64651  0.701975  0.3746  0.6955\n4    0.13221  0.04839  0.788082  0.3093  0.1095\n\nIn [79]: df.ix[4:5]\nOut[79]: \n   0       1       2        3       4      \n5  0.5301  0.8182  0.05318  0.8247  0.01699\n\nIn [80]: df.ix[1.5:4].index\nOut[80]: Index([1.5, 2, 3, 4], dtype=object)\n\nIn [81]: df.ix[4:5].index\nOut[81]: Int64Index([5])\n```\n\nThis is a bit surprising, that depending on where in the index you slice, you get integer or label based. \n\nI think that maybe the index shouldn't change types when it is subsetted (ie, if it's not an Int64Index, should never become one when sliced).\n\nFurthermore, from the docs: \"Therefore, advanced indexing with .ix will always attempt label-based indexing, before falling back on integer-based indexing.\"\n\nThis doesn't seem to be true per the last output, may need fixing here.\n"
  }
]
