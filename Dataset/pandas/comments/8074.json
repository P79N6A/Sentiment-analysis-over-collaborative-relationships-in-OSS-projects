[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52714017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52714017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52714017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE0MDE3",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-19T23:19:29Z",
    "updated_at": "2014-08-19T23:19:29Z",
    "author_association": "NONE",
    "body": "These all seem like compelling points to me.\nOn 20 Aug 2014 00:13, \"Joris Van den Bossche\" notifications@github.com\nwrote:\n\n> I finally had some time to read up on the discussions and to look at the\n> implementation of the Categoricals integration, and have still some\n> questions and comments. I am sorry that this is rather late to the party,\n> but I still think this is important to discuss (and I certainly don't want\n> to disregard the really great work @JanSchultz\n> https://github.com/JanSchultz and @jreback https://github.com/jreback\n> put in this! Thanks a lot for that!).\n> It is mainly about the public interface, and not about the internals.\n> \n> So below I summed some remarks. And to be clear, just some personal ideas\n> to discuss!\n> 1. The Categorical object vs the 'category' Series\n> \n> Previously, there was already the Categorical class:\n> \n> In [1]: pd.Categorical([\"a\",\"b\",\"c\",\"a\"])\n> Out[1]:\n>  a\n>  b\n>  c\n>  a\n> Levels (3, object): [a < b < c]\n> \n> Now, you can also put this in a Series:\n> \n> In [2]: pd.Series(pd.Categorical([\"a\",\"b\",\"c\",\"a\"]))\n> Out[2]:\n> 0    a\n> 1    b\n> 2    c\n> 3    a\n> dtype: category\n> Levels (3, object): [a < b < c]\n> \n> To create this Series, you can either put an existing Categorical inside\n> a Series (as above, or by assigning it to a column of DataFrame, like df['cat']\n> = pd.Categorical([\"a\",\"b\",\"c\",\"a\"])), or you can convert an existing\n> Series to the 'category' dtype:\n> \n> pd.Series([\"a\",\"b\",\"c\",\"a\"]).astype('category')\n> \n> So basically, there are now two different main objects to deal with\n> categorical values (the Categorical object and the Series of 'category'\n> dtype), which are also used both and mixed in the docs.\n> This raises the question if this is needed? (also touced lightly here: ).\n> Some remarks:\n> - The constructor pd.Series(pd.Categorical(...)) is a bit cumbersome I\n>   think\n> - In the documentation both Categorical and category Series are used.\n>   But what is the difference between both? (in user facing interaction) What\n>   is the advantage of one above the other, and in what circumstances? Why\n>   should I use a Categorical and not a category Series?\n> - Going further, are both possibilities needed (in user facing API,\n>   docs, etc)? Why not just using always a Series with category dtype?\n> \n> I'v also found in the discusion the following by @JanSchultz\n> https://github.com/JanSchultz (sorry if I misquote you guys :-)) (#8007\n> (comment)\n> https://github.com/pydata/pandas/pull/8007#issuecomment-51985421):\n> \n> I've not found a usecase which would need to touch categoricals instead of\n> Series(Categorical(...)))\n> \n> and response of @njsmith https://github.com/njsmith to that:\n> \n> I don't really care what the data type for holding categorical data is,\n> but I can certainly see the advantage of having just one data type. And if\n> so then Series seems like a good choice for that.\n> \n> So _proposal_: just use Series with 'category' dtype in all user facing\n> API/functions and documentation.\n> 2. Naming issues (levels, labels, codes, categories, ..)\n> \n> The concepts of a categorical:\n> - codes: numerical representation (previously called labels)\n> - levels: descriptive names\n> \n> For codes, I think this is indeed much better, as labels was very\n> confusing (and more logical the labels would be the different values inside\n> levels ..), and it has the advantage of the same name as in R.\n> \n> But, the name levels is somewhat more problematic IMHO.\n> level has already another and established meaning in pandas, namely the\n> different levels of a hierarchical MultiIndex. In many methods, you have a\n> level=.. keyword, and there are a lot of index methods to handle levels\n> like reorder_levels, droplevel.\n> \n> In [14]: pd.MultiIndex.from_product([['a', 'b'],[1,2]], names=['A', 'B'])\n> Out[14]:\n> MultiIndex(levels=[[u'a', u'b'], [1, 2]],\n>            labels=[[0, 0, 1, 1], [0, 1, 0, 1]],\n>            names=[u'A', u'B'])\n> \n> Here, there are two levels, a \"first\" and a \"second level\". While in a\n> categorical context, the \"first level\" from above would consist of two\n> levels, namely 'a' and 'b' ...\n> \n> _Possible outcomes_\n> What are the 'things' we call now 'levels'. It are the different classes,\n> or the different categories that are possible within the Categorical\n> series. So maybe 'classes' or 'categories' would be an alternative name? So\n> in that regard I like the proposal of @immerrr\n> https://github.com/immerrr (#7217 (comment)\n> https://github.com/pydata/pandas/pull/7217#issuecomment-47496897):\n> \n> As for naming, I like the name \"codes\" for the numerical representation\n> and would like to propose \"categories\" for the descriptive names.\n> \n> @JanSchulz https://github.com/JanSchulz responded:\n> \n> I wouldn't change the name levels to keep that aspect of R's factors.\n> \n> A good argument, but I personally think the possible confusion between\n> df.index.reorder_levels and df.cat.reorder_levels is important enough to\n> reconsider this. Certainly when we would have eg a CategoricalIndex in the\n> future, then reorder_levels will become totally dubious ...\n> \n> So, at least I would go with categorical_levels to make the distinction\n> (as mentioned by @JanSchulz https://github.com/JanSchulz here: #7217\n> (comment)\n> https://github.com/pydata/pandas/pull/7217#issuecomment-45412477), or\n> go with another name like categories.\n> Return type of Series.values\n> \n> At the moment, when you have a Series with 'category' dtype, Series.values\n> will return the Categorical object, and not a numpy array:\n> - This seems not very consistent with the other dtypes.\n> - The documentation of Series.values is also very clear on that :\n>   \"returns Series as numpy.ndarray\" (and this is also how it is printed in my\n>   head)\n> - What is a good reason to deviate from this rule? (certainly if you\n>   can have eg the s.cat attribute to return it)\n> \n> Of course, if we would want to return a numpy array, it would have to be\n> decided what it should return (eg what is returned now from np.asarray()).\n> You loose information with this (the levels), and I suppose this is the\n> reason to return a Categorical?. But I personally find the consistency more\n> important here, certainly if you can do everything with the Series what you\n> can do with the categorical (discussion above).\n> \n> @JanSchultz https://github.com/JanSchultz @jreback\n> https://github.com/jreback @jseabold https://github.com/jseabold\n> @njsmith https://github.com/njsmith @immerrr\n> https://github.com/immerrr @cpcloud https://github.com/cpcloud @hayd\n> https://github.com/hayd\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/8074.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52714078",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52714078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52714078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE0MDc4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-19T23:20:14Z",
    "updated_at": "2014-08-19T23:26:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche \n\non your 3rd point: Return type of `Series.values`.\n\nThis is an implementation. The categorical type need additional information / methods etc to act propertly. Note that is is also the case with Sparse. The `Series.values` is a `SparseArray`. We don't want to be in the business of sub-classing ndarrays. numpy arrays are simply not the right implementation for either of these two classes.\n\nFor the most part the user DOES NOT need to concern themselves with the `.values` attribute AT ALL. That said, prob best just to change the docs.\n\nThink of `Series.values` as something that is similar, _but not exactly_ the same as `Series.__array__` (which is VERY specific). Meaning, give me the implementation of the Series as I need to perform operations.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52714406",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52714406",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52714406,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE0NDA2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-19T23:24:07Z",
    "updated_at": "2014-08-19T23:24:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the 1st point. It is possible to 'deprecate' the user of a bare `Categorical` entirely, and just use `Series(..dtype='category')` (and in fact this is another way to deal with the constructor (cc @JanSchulz, we should implement this).\n\nHowever, I think that was _too_ much of a change. That said, the docs could be codified / changed around a bit to primarily use the `Series`. However, their ARE uses for some of these types, mainly `cut` which by definition returns a `Categorical`, as returning a Series I suppose is possible, doesn't make as much sense.\n\nSo like `SparseArray` these underlying objects need to exist, but aren't user facing very much (though still technically part of the API).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52718362",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52718362",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52718362,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzE4MzYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T00:15:03Z",
    "updated_at": "2014-08-20T00:15:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "see #8075 for easy construction method via the dtype in Series constructor.\n\nOne addtional reason you need `Categorical`. If you want to specify the codes AND levels (and possibly ordered), you need this type of constructor. Otherwise it simply gets too messy in the Series constructor.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52735533",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52735533",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52735533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzM1NTMz",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T05:30:02Z",
    "updated_at": "2014-08-20T05:30:02Z",
    "author_association": "MEMBER",
    "body": "I think @jreback makes a strong case for having `Categorical` as a separate object.\n\nI also like `categories` more than `levels`. `categorical_levels` is too long for my taste (and rather redundant).\n\nI am a bit torn about `Series.values`. While it's great (in theory) to return a `numpy.ndarray` object, numpy's support for the non-numeric dtypes pandas needs is not great. I have actually advocated for going the other direction, and having `Series.values` return `DatetimeArray` objects for datetime dtype. But I agree that this requires some documentation work and retraining users.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52737290",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52737290",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52737290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzM3Mjkw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T06:04:14Z",
    "updated_at": "2014-08-20T06:04:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche without the \"t before z\" @janschulz :-)\n\nRe constructor without `Categorical`: not sure if that is possible, as it would also need to deal with the arguments of the Categorical constructor (levels, ordered). Not sure if it makes sense to add these to the Series constructor as well. \n\nRe \"categories\" vs \"levels\": I like \"categories\".\n\nRe return type: I think in this case the Doc on Series.values should change to `returns a object which can be used as a numpy array`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52741797",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52741797",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52741797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzQxNzk3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T07:17:31Z",
    "updated_at": "2014-08-20T07:17:31Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz Entschuldigungen :-), but you pronounce it like there is a 't' no?\n\nSome responses on the first point (Categorical vs Series). \nCases where you would need a bare Categorical:\n- `pd.cut` -> I think it makes rather _much_ sense that this _would_ return a Series, now this is possible (at least when the input is a Series. If the input is an array it is a bit more questionnable). Because now, if you convert a Series into a categorical with `cut`, you loose the index information.\n\nThe main problem is with the construction of a categorical Series:\n- Indeed, the `pd.Series(..)` should not be overloaded, and I think `pd.Series(['a', 'b', 'c', 'a'], dtype='category')` should be restricted to that like it is (so just deducing the levels from the values you provided). \n- \"to specify the codes AND levels (and possibly ordered), you need this type of constructor\" -> OK, for this you just can have a special constructor, like you already have `from_codes`\n\nSome possible routes to go in the direction of just having a Series with `category` dtype for construction of it (just brainstorming):\n- `pd.Categorical([\"a\",\"b\",\"c\",\"a\"])` could just return a Series?\n  - in this way the needed functionality to specify `levels` and `ordered` is there\n  - for backwards compatibility, I don't think this is much of a problem (but maybe I am overlooking some things), as we should only provide (possibly temporary to deprecate) the 4 existing methods/attributes of Categorical in Series (describe, equals, from_array, levels)\n- Provide some kind of 'CategoricalDType' to use in the Series construction:\n  - For simple case you could still do  `pd.Series([\"a\",\"b\",\"c\",\"a\"], dtype='category')` \n  - To specify more use a dtype object `pd.Series([\"a\",\"b\",\"c\",\"a\"], dtype=pd.Category(levels=[...], ordered=False))`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52743211",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52743211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52743211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzQzMjEx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T07:36:18Z",
    "updated_at": "2014-08-20T07:41:07Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche The problem with `pd.Categorical` returning a Series is that it implies an index, which has unfortunate consequences when you put it in a DataFrame.\n\nFor example, compare:\n\n```\n>>> pd.DataFrame({'x': [1, 2, 3]}, index=pd.date_range('20000101', periods=3))\n            x\n2000-01-01  1\n2000-01-02  2\n2000-01-03  3\n>>> pd.DataFrame({'x': pd.Series([1, 2, 3])}, index=pd.date_range('20000101', periods=3))\n             x\n2000-01-01 NaN\n2000-01-02 NaN\n2000-01-03 NaN\n```\n\n(Actually, right now you get an exception if you try to pass in an actual Categorical series and specify the index. See #8076.)\n\nThe idea of a `CategoricalDType` does seem pretty elegant, but I think you'll still need `pd.Categorical` for the `DataFrame` constructor.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52744192",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52744192",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52744192,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzQ0MTky",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T07:48:23Z",
    "updated_at": "2014-08-20T07:48:23Z",
    "author_association": "MEMBER",
    "body": "@shoyer good point! :-)\n\nAnd I made a seperate issue for `cut`: #8077\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52769475",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52769475",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52769475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzY5NDc1",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T12:26:16Z",
    "updated_at": "2014-08-20T13:18:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I think, usually, Schultz and Schulz are both pronounced without a t, so I usually have to spell it when I'm asked for my last name :-) There is also a \"Schul(t)ze\" variant :-)\n\nRe 'constructing a cat with explicit `ordered` and `levels`': I don't think a `Series.to_categorical()` or `Series.as_categorical()` and also not a `Series.from_categorical()` is the right name. IMO if we want to have this we should add a `**kwargs` parameter to `Series.__init__()` and pop that for the right kwargs if a categorical dtype is asked for.\n\nThe other alternative is to put the `ordered` and `levels` information into `com.CategoricalDType` (which is an implementation option, seeing what the other dtypes can take as additionl information) but I think this is even more ugly than using either additional `**kwargs` in the Series constructor or an explicit `Series(Categorical(..., levels=...))`. Instead of knowing `pd.Categorical(...)` you now need to know `pd.CategoricalDType()`.\n\nSo if `pd.Categorical` should vanish as API, I would vote for adding additional `**kwargs` to `Series(...)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52778675",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52778675",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52778675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNzc4Njc1",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-20T13:37:55Z",
    "updated_at": "2014-08-20T13:38:26Z",
    "author_association": "MEMBER",
    "body": "OK, I can see now why having the seperate `Categorical` object is needed, and I also now understand why those extra array-like methods were added. \nSo you need the `Categorical` when you only need the categorical values (with metadata, ie levels, codes, ordered) but without an index, so to have an 'array-like'. Eg for input in a dataframe (example of @shoyer above).\n\nSome things on that:\n- I think we should make the docs more clear about this:\n  - mainly use `Series` objects with category dtype\n  - clearly say in which circumstances it is needed to use Categorical directly (to specify more levels/codes/ordered, to input in a DataFrame when no index is needed)\n  - advise to not work with the `Categorical` directly, unless for construction/input ?\n  - Should we say something about \"not guaranteeing that all methods of `Categorical` will stay/keep working as is\"? (update -> this is what is more or less already in the docs: http://pandas-docs.github.io/pandas-docs-travis/categorical.html#future-compatibility)\n- A name like `CategoricalArray` would maybe have been more explicit (but maybe too late and too much of a trouble to change (and also rather long ..))\n- Proposal: change the repr of Categorical to something less Series-like and more array-like?\n\nRepr now of Series and Categorical:\n\n```\nIn [81]: s\nOut[81]:\n0    a\n1    b\n2    c\n3    a\ndtype: category\nLevels (3, object): [a < b < c]\n\nIn [82]: s.values  # the Categorical\nOut[82]:\n a\n b\n c\n a\nLevels (3, object): [a < b < c]\n```\n\nSomething more array-like:\n\n```\n['a' 'b' 'c' 'a']\nLevels (3, object): [a < b < c]\n```\n\nor without the `'` around the values. Or:\n\n```\nCategorical(['a', 'b', 'c', 'a'], levels=['a', 'b', 'c'], ordered=True)\n```\n\nIf we also want to provide a way to directy construct a Series with more specification on levels/ordered (with eg `CategoricalDType`, or with extra keywords to `Series(..)`, is then maybe a slightly orthogonal discussion. But I personally would not overload the `Series` constructor with extra keywords. And I agree that the `Series([...], dtype=pd.CategoricalDType(...))` is also a bit ugly. \nBut I think in most cases, you will be satisfied with `dtype='category'`, and for the other cases you also have to possibility to add or reorder the levels after construction.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52971302",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52971302",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52971302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTcxMzAy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T19:40:18Z",
    "updated_at": "2014-08-31T15:10:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re docs and API stability: This has already changed from the `series.cat` beeing the `Categorical` to a accessor. So I think `Series.cat` can be declared stable API, but `Categorical` itself should no be API but then `.codes` is also not API, which is I think wanted for things like statsmodels.\n\nI like the **repr**() change.\n\nBefore going further a decision about how to construct a categorical series with ordered/levels has to be done. My vote goes to \n1. add kwargs to series (what's the problem apart from bigger docs?)\n2. keep the `Series(Categorical(...))` usage\n3. use a `dtype(...)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52972347",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52972347",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52972347,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTcyMzQ3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T19:48:10Z",
    "updated_at": "2014-08-21T19:48:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "we already support the default use case of `Series(....,dtype='category')` with #8075.\n\nI am big -1 on adding more kwargs to Series constructor and/or making it more complicated. It is a nice abstraction. It takes a numpy-like object and constructs a Series. full-stop. We don't have anything that 'passes' on arguments to a sub-constructor. Not a good idea.\n\n`Categorical` is their (as is `SparseArray` for those who want). I don't think that's a big deal.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52973391",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52973391",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52973391,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTczMzkx",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T19:56:40Z",
    "updated_at": "2014-08-21T19:56:40Z",
    "author_association": "MEMBER",
    "body": "I'm not even convinced `dtype` should be an argument in the `Series` constructor.\n\nI am also a fan of the `__repr__` change, which will help for my secret plot (#8012) to make `Categorical` work for N-dimensional data.\n\nRemind me why `codes` didn't make it into the `cat` accessor? I think it is probably safe to make that part of the stable API.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52973392",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52973392",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52973392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTczMzky",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T19:56:41Z",
    "updated_at": "2014-08-21T19:57:21Z",
    "author_association": "MEMBER",
    "body": "- For `Categorical` API stability, I think we can just say: we guarantee the construction of a categorical (the way it is used in the docs now), but not it's methods/attributes (maybe apart from `from_codes`). As the public methods/properties should be accessed through `Series.cat`?\n  - The only problem is a bit the api docs, because we want to add Categorical to the docs, but maybe not all its methods (and this is done automatically at this moment).\n- I am also -1 for adding extra kwargs to Series. If we start doing it for this every dtype, then it becomes much too bloated. It should stay general I think. \n  I think for now, since we have `Series(..., dtype='category')` for the general case, we can use the `Series(Categorical())` for more advanced cases. We can always see later if we provide another way if we think of something better\n- Why is `codes` not public? I thought this was discussed before, and there were good arguments to have it public? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52973781",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52973781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52973781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTczNzgx",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T19:59:29Z",
    "updated_at": "2014-08-21T19:59:29Z",
    "author_association": "MEMBER",
    "body": "Further, for the `level` -> `categories` name change: any further votes?\n\n@JanSchulz OK that I add the todo items that emerge from this discussion in the list of #8078?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52973846",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52973846",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52973846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTczODQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T19:59:58Z",
    "updated_at": "2014-08-21T19:59:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer `dtype` is in the constructor because its in `np.array` constructor. I think it however was (ab)used by some to provide coercion on construction (which is prob not a good idea, esp in the case of a `DataFrame`).\n\nalmost all things are inferred now-a-days (I think in the past some of the datetimelike needed the dtype).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52973910",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52973910",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52973910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTczOTEw",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:00:25Z",
    "updated_at": "2014-08-21T20:00:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche Yes, please add. I will hopefully have some time during the weekend to work on these\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52973914",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52973914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52973914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTczOTE0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:00:27Z",
    "updated_at": "2014-08-21T20:00:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "`levels` -> `cats` any takers?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52974022",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52974022",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52974022,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTc0MDIy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:01:26Z",
    "updated_at": "2014-08-21T20:01:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm in the `levels`  ->  `categories` team :-)  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52974257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52974257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52974257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTc0MjU3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:03:20Z",
    "updated_at": "2014-08-21T20:03:20Z",
    "author_association": "MEMBER",
    "body": "Hmm, I don't know, I think `categories` is more clear, and not that long :smirk_cat: \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52974348",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52974348",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52974348,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTc0MzQ4",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:03:55Z",
    "updated_at": "2014-08-21T20:03:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche re `codes` not in `Series.cat`: https://github.com/pydata/pandas/pull/8007#issuecomment-52200507 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52980057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52980057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52980057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTgwMDU3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:33:52Z",
    "updated_at": "2014-08-21T20:33:52Z",
    "author_association": "MEMBER",
    "body": "@JanSchulz re codes: https://github.com/pydata/pandas/pull/7217#issuecomment-47544110 and the following discussion. I think there are good arguments made the case for it being public (and public does not mean that you can manipulate it, it can be just a not-settable attribute) by multiple people. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52980597",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52980597",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52980597,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTgwNTk3",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:37:38Z",
    "updated_at": "2014-08-21T20:40:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "right now they are vailable as `Series.values.codes`, it's just internal...\n\n`Categorical.codes` was API before this discussion\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52980646",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52980646",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52980646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTgwNjQ2",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:37:59Z",
    "updated_at": "2014-08-21T20:37:59Z",
    "author_association": "MEMBER",
    "body": "In case of renaming, we should also decide on `levels` (as the `Categorical` kwarg and property): just keep it as is for now as legacy, or actively deprecate it? Maybe it is not necessary to really deprecate, but do it with 'documented deprecation'\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52981607",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52981607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52981607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTgxNjA3",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:44:42Z",
    "updated_at": "2014-08-21T20:44:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is already a \"documented only deprecation\": the old style constructor useage (which produces different results before and after this changes).\n\nRe levels: I would suggest adding a deprecation warning if `levels` instead of the new name is used in the constructor. Same for property access.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/52982162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-52982162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 52982162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyOTgyMTYy",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-21T20:48:36Z",
    "updated_at": "2014-08-21T20:49:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "Re 'what is API': there is also `Categorical.from_codes()`, which is IMO on the same level as `Categorical.codes`. What I'm not sure about is what the status of `Series.values` is: Is that API? If so, I think `Series.values.codes` is enough (with some docs to say that you can access the `Categorical` as `Series.values`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53990751",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-53990751",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 53990751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTkwNzUx",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-31T15:12:33Z",
    "updated_at": "2014-08-31T15:12:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "So, whats the outcome of this discussion?\n- Add Series.cat.codes or not? If that's added I'm for wrapping that in a `Series(...)` (\"if it comes out of a Series and is the same length as the original Series, it should also be a Series). Right now I would say that `Series.values` is enough (@jreback: is series.values API?)\n- What is the \"API-way\" of adding a categorical with specific `categories`/`ordered`? Up to now I perceive the discussion above as \"use `Categorical(...)` directly\" and document that this is the only time you should use Categorical directly and also document/point to how to change it in the Series afterwards.\n\nThe rest is IMO clear and already added to https://github.com/pydata/pandas/issues/8078\n\nDid I miss something?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53992337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-53992337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 53992337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTkyMzM3",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-31T16:03:09Z",
    "updated_at": "2014-08-31T16:04:40Z",
    "author_association": "MEMBER",
    "body": "Yes the other items (renaming, repr) are already in the todo list, and further it is mainly clarifying of docs I think. \n- On `Series.cat.codes`: I actually don't see a reason not to add it. I know it is available as `Series.values.codes`, but I think we just _don't_ want to encourage the use of the `Categorical` object directly (other than for having an array-like that can hold a categorical). So I think if we decide that `codes` could be accessed, it should be thorugh the `cat` property.  \n  And if we add it -> Series return type seems good.\n- On construction with `categories/ordered` specified: Yep, I think that was indeed the outcome: that is a reason to use `Categorical` directly.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/53992404",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8074#issuecomment-53992404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8074",
    "id": 53992404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTkyNDA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-08-31T16:05:26Z",
    "updated_at": "2014-08-31T16:05:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "joris summary is good\n\ndoesn't hurt to include codes in the API for cat\n"
  }
]
