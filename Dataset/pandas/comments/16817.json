[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312647543",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16817#issuecomment-312647543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16817",
    "id": 312647543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjY0NzU0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-03T13:36:40Z",
    "updated_at": "2017-07-03T13:36:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is an internal method, do you actually need it for something?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312880694",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16817#issuecomment-312880694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16817",
    "id": 312880694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjg4MDY5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-04T13:38:32Z",
    "updated_at": "2017-07-04T13:38:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "- We have *no* tests for these routines (either ``_get_dtype`` or ``_get_dtype_type``). rather we have bunches of integration tests via all of the ``is_*`` routines. Would be nice to nail down what this actually takes / returns.\r\n- We should actually make ``_get_dtype_type`` just *call* ``_get_dtype`` (and have logic live there)\r\n- We should be much more consistent about calling ``_get_dtype_type`` rather than the more specific ``_get_dtype``, IOW, all of the ``is_*`` routines *should* call ``_get_dtype_type`` (most of them do, but *some* just call ``_get_dtype``).\r\n\r\nSo if we can nail down these issues, then can address what else / what should ``_get_dtype`` actually take. I think It should actually be quite a bit more strict. We are a bit loose in the calling code for this. Maybe just need to add some assertions. These are core routines which are called implicity a lot."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/312880871",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16817#issuecomment-312880871",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16817",
    "id": 312880871,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjg4MDg3MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-04T13:39:22Z",
    "updated_at": "2017-07-04T13:39:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@topper-123 love to have some help here with this :>"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313241258",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16817#issuecomment-313241258",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16817",
    "id": 313241258,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzI0MTI1OA==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-05T22:11:37Z",
    "updated_at": "2017-07-05T22:11:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi,\r\n\r\nI think that could be relatively easy, and could give it a shot. Some issues, though:\r\n\r\n* I can't get ``pandas.test()`` to run without breaking. Likewise, I've tried ``py.test pandas/tests/dtypes/test_common.py`` after downloading the source code from github, but it fails. That makes me feel a bit apprehensive.\r\n* I don't know C or Cython and can't prioritoze learning ATM, are those required?\r\n* Some issue in ``_get_dtype`` are strange and I'm not sure the function always returns a correct result. E.g. \r\n  ```python\r\n   >>> pd.core.dtypes.common._get_dtype(pd.Categorical([1,2,3]))\r\n   TypeError: data type not understood\r\n   >>> pd.core.dtypes.common._get_dtype(pd.Categorical([1,2,3]).dtype)\r\n   category\r\n   ```\r\n   That is, the first one fail, while the second one succeeds, which IMO doesn't make sense (but maybe there is an aspect that I don't understand?). And because I can't get the tests to run, I can't poke around the issue so easily.\r\n\r\nIn short, if I can get some help on how to get the tests to run cleanly, and C/Cython knowledge isn't required, I'll give this a go. I'm on Windows 10 and use the Anaconda distribution.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313243328",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16817#issuecomment-313243328",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16817",
    "id": 313243328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzI0MzMyOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-05T22:22:53Z",
    "updated_at": "2017-07-05T22:22:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "have a look here: http://pandas.pydata.org/pandas-docs/stable/contributing.html\r\n\r\npretty complete instructions on how to run a dev environment on windows. its pretty straightforward, but if you need help pls ping."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313252212",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16817#issuecomment-313252212",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16817",
    "id": 313252212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzI1MjIxMg==",
    "user": {
      "login": "topper-123",
      "id": 26364415,
      "node_id": "MDQ6VXNlcjI2MzY0NDE1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26364415?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/topper-123",
      "html_url": "https://github.com/topper-123",
      "followers_url": "https://api.github.com/users/topper-123/followers",
      "following_url": "https://api.github.com/users/topper-123/following{/other_user}",
      "gists_url": "https://api.github.com/users/topper-123/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/topper-123/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/topper-123/subscriptions",
      "organizations_url": "https://api.github.com/users/topper-123/orgs",
      "repos_url": "https://api.github.com/users/topper-123/repos",
      "events_url": "https://api.github.com/users/topper-123/events{/privacy}",
      "received_events_url": "https://api.github.com/users/topper-123/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-05T23:16:14Z",
    "updated_at": "2017-07-05T23:16:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "And the fact that ``_get_dtype`` fails on categoricals, isn't that a bug (or a insufficient implementation)? It seems unfortunate that calling ``_get_dtype`` with a Pandas categorical should fail.\r\n\r\nThat is, should it be marked in the tests as ok or a failure that _get_dtype raises when given a categorical? "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/313355102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16817#issuecomment-313355102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16817",
    "id": 313355102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzM1NTEwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-06T10:10:35Z",
    "updated_at": "2017-07-06T10:10:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "its reasonable to accept a ``Categorical`` instance I think.\r\nWe want the consitency for ndarrays, e.g. we can accept an ndarray, or its dtype. Scalars raise.\r\n\r\n```\r\nIn [8]: from pandas.core.dtypes.common import _get_dtype\r\n\r\nIn [9]: _get_dtype(1)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-9-d4be99dce80c> in <module>()\r\n----> 1 _get_dtype(1)\r\n\r\n/Users/jreback/pandas/pandas/core/dtypes/common.py in _get_dtype(arr_or_dtype)\r\n   1725     if hasattr(arr_or_dtype, 'dtype'):\r\n   1726         arr_or_dtype = arr_or_dtype.dtype\r\n-> 1727     return np.dtype(arr_or_dtype)\r\n   1728 \r\n   1729 \r\n\r\nTypeError: data type not understood\r\n\r\nIn [10]: _get_dtype(np.array([1]))\r\nOut[10]: dtype('int64')\r\n\r\nIn [11]: _get_dtype(np.array([1]).dtype)\r\nOut[11]: dtype('int64')\r\n\r\nIn [12]: _get_dtype(Series(np.array([1])))\r\nOut[12]: dtype('int64')\r\n```"
  }
]
