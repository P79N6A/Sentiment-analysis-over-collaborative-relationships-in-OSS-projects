[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341850575",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-341850575",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 341850575,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTg1MDU3NQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-03T23:22:23Z",
    "updated_at": "2017-11-03T23:22:23Z",
    "author_association": "MEMBER",
    "body": "One thing I've noticed is that this seems to lead to an inconsistency between `DataFrame(data).astype('category')` and `DataFrame(data, dtype='category')`.\r\n\r\nSpecifically, per the issue specifications, using `astype` sets all unique labels across all columns as categories, even if they don't appear in a given column:\r\n\r\n```python\r\nIn [2]: df1 = pd.DataFrame({'A': ['a', 'b', 'c'], 'B': ['c', 'd', 'e']}).astype('category')\r\n\r\nIn [3]: df1['A'].dtype\r\nOut[3]: CategoricalDtype(categories=['a', 'b', 'c', 'd', 'e'], ordered=False)\r\n```\r\n\r\nWhereas instantiating with `dtype='category'` does things column by column:\r\n```python\r\nIn [4]: df2 = pd.DataFrame({'A': ['a', 'b', 'c'], 'B': ['c', 'd', 'e']}, dtype='category')\r\n\r\nIn [5]: df2['A'].dtype\r\nOut[5]: CategoricalDtype(categories=['a', 'b', 'c'], ordered=False)\r\n```\r\n\r\nIs this type of inconsistency acceptable?  Or should one method be modified to match the other?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341866060",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-341866060",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 341866060,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTg2NjA2MA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-04T02:37:42Z",
    "updated_at": "2017-11-04T02:37:42Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=h1) Report\n> Merging [#18099](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/86e9dcc164760c5197438968151b2b852647de84?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18099/graphs/tree.svg?src=pr&token=eZ4WkYLtcO&width=650&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18099      +/-   ##\n==========================================\n- Coverage   91.25%   91.23%   -0.02%     \n==========================================\n  Files         163      163              \n  Lines       50120    50129       +9     \n==========================================\n  Hits        45737    45737              \n- Misses       4383     4392       +9\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.05% <100%> (ø)` | :arrow_up: |\n| #single | `40.31% <9.09%> (-0.07%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `92.45% <100%> (+0.03%)` | :arrow_up: |\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.75% <0%> (-0.1%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=footer). Last update [86e9dcc...081d533](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341866072",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-341866072",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 341866072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTg2NjA3Mg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-04T02:37:58Z",
    "updated_at": "2018-03-01T01:07:41Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=h1) Report\n> Merging [#18099](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/dfe9d4a7837705ce297186115bd035c3e57a47ec?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18099/graphs/tree.svg?width=650&height=150&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18099      +/-   ##\n==========================================\n+ Coverage   91.68%   91.69%   +<.01%     \n==========================================\n  Files         150      150              \n  Lines       48976    48978       +2     \n==========================================\n+ Hits        44906    44910       +4     \n+ Misses       4070     4068       -2\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.07% <100%> (ø)` | :arrow_up: |\n| #single | `41.86% <25%> (ø)` | :arrow_up: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/18099/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `95.89% <100%> (ø)` | :arrow_up: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/18099/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `83.85% <0%> (+0.2%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=footer). Last update [dfe9d4a...293dee5](https://codecov.io/gh/pandas-dev/pandas/pull/18099?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341968433",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-341968433",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 341968433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTk2ODQzMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T12:09:32Z",
    "updated_at": "2017-11-05T12:09:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "\"More useful\" as in more difficult for a user to accomplish, or more people\nexpect / want?\n\nI agree that table-wise factorization is more difficult for a user. I'm not\nsure about whether it's expected.\n\nOn Sat, Nov 4, 2017 at 12:05 PM, Jeff Reback <notifications@github.com>\nwrote:\n\n> *@jreback* commented on this pull request.\n> ------------------------------\n>\n> In doc/source/categorical.rst\n> <https://github.com/pandas-dev/pandas/pull/18099#discussion_r148935998>:\n>\n> > @@ -143,6 +150,55 @@ constructor to save the factorize step during normal constructor mode:\n>      splitter = np.random.choice([0,1], 5, p=[0.5,0.5])\n>      s = pd.Series(pd.Categorical.from_codes(splitter, categories=[\"train\", \"test\"]))\n>\n> +.. _categorical.objectcreation.frame:\n> +\n> +Creating categories from a ``DataFrame``\n> +^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n> +\n> +.. versionadded:: 0.22.0\n> +\n> +:meth:`DataFrame.astype` supports simultaneously setting multiple columns as categorical. When setting multiple\n>\n> column-wise is trivial, uniques across all values then factorize this is\n> the more useful factorization (e.g. this one)\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/18099#discussion_r148935998>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIv48rOKgvjNkmUgSFVmTNLK5WgbIks5szJlIgaJpZM4QRyEf>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341969188",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-341969188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 341969188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTk2OTE4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T12:23:10Z",
    "updated_at": "2017-11-05T12:23:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> \"More useful\" as in more difficult for a user to accomplish, or more people\r\nexpect / want?\r\n\r\nmore useful in that this is generally what you want (e.g. conceptually similar to get_dummies). and non-trivial to do. per-column is so easy, e.g. ``df.apply(lambda x: x.astype('category'))`` that having this as the default doesn't make sense. But the most important issues here is that ALL other dtypes coerce when passed to the contructor AND with astype. Diverging here would be a huge problem.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/341969219",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-341969219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 341969219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTk2OTIxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-05T12:23:46Z",
    "updated_at": "2017-11-05T12:23:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jschendel pls change the constructor to do essentially this (you will want to move the actual coercing routine to pandas.core.categorical as I mentioned above)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343393152",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-343393152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 343393152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzM5MzE1Mg==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T07:15:39Z",
    "updated_at": "2017-11-10T07:15:39Z",
    "author_association": "MEMBER",
    "body": "Updated to address the comments:\r\n - Modified the `DataFrame` constructor to be consistent with `DataFrame.astype`\r\n    - Modified `categorical.rst` to reflect this\r\n    - Added this to the breaking API changes section of the whatsnew\r\n - Moved logic to the `_get_categorical_dtype_2d` helper function in `categorical.py`\r\n - Created `unique2d` and `_ensure_arraylike2d` functions in `algorithms.py`\r\n - Added tests for the three items above\r\n\r\n<br />\r\n\r\nRegarding  `_ensure_arraylike2d`, the reason I created this was because I was running into an issue with `_ensure_arraylike` where a list of lists gets returned as a numpy array of lists instead of a 2d numpy array:\r\n\r\n```python\r\nIn [22]: values = [['a', 'b', 'c', 'a'], ['b', np.nan, 'd', 'd']]\r\n\r\nIn [23]: _ensure_arraylike(values)\r\nOut[23]: array([list(['a', 'b', 'c', 'a']), list(['b', nan, 'd', 'd'])], dtype=object)\r\n```\r\n\r\nwhereas I'd like to get output along the lines of:\r\n```python\r\nIn [24]: np.array([_ensure_arraylike(x) for x in values])\r\nOut[24]:\r\narray([['a', 'b', 'c', 'a'],\r\n       ['b', nan, 'd', 'd']], dtype=object)\r\n```\r\nShould I just try patching `_ensure_arraylike` instead of creating `_ensure_arraylike2d`?  Or is what I did fine?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343418500",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-343418500",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 343418500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQxODUwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T09:11:33Z",
    "updated_at": "2017-11-10T09:11:33Z",
    "author_association": "MEMBER",
    "body": "I am -1 on having `df.astype('category')` work on the full dataframe values instead of column-wise. Yes, working column-wise is also trivial with `apply` (it the the frame-wise which is more difficult out of the box) but IMO that's not a good reason to choose a different default. \r\nDoing it column-wise a) feels more consistent and b) is IMO what users would expect it to do as the default if they see such a line of code. \r\nIMO frame-wise is also not 'generally what users want', I think this very much depends on the use case.\r\n\r\nTo facilitate the more difficult frame-wise case, I would just make sure that we add a clear example on how to achieve this. \r\nI suppose it is something like:\r\n\r\n```\r\ndf.astype(pd.api.types.CategoricalDType(categories=np.unique(df.values.ravel())))\r\n```\r\n\r\nI would say that is exactly a nice use case for which we made CategoricalDtype publicly available."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343482783",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-343482783",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 343482783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQ4Mjc4Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T14:09:25Z",
    "updated_at": "2017-11-10T14:09:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Doing it column-wise a) feels more consistent and b) is IMO what users would expect it to do as the default if they see such a line of code\r\n\r\na) is only true because of the existing behavior.\r\nb) not sure that is the case.\r\n\r\nThe point here its not clear *what* a user expects. In a 2-d case maybe we should just refuse to guess, IOW raise if ``dtype='category'`` is passed in both construction of a DataFrame and in .astype (meaning ``categories=None`` is passed), rather than picking a default that is unclear.\r\n\r\nOf course both examples would be useful in the docs (and even in the error message).\r\n\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343491607",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-343491607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 343491607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQ5MTYwNw==",
    "user": {
      "login": "jcrist",
      "id": 2783717,
      "node_id": "MDQ6VXNlcjI3ODM3MTc=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/2783717?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcrist",
      "html_url": "https://github.com/jcrist",
      "followers_url": "https://api.github.com/users/jcrist/followers",
      "following_url": "https://api.github.com/users/jcrist/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcrist/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcrist/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcrist/subscriptions",
      "organizations_url": "https://api.github.com/users/jcrist/orgs",
      "repos_url": "https://api.github.com/users/jcrist/repos",
      "events_url": "https://api.github.com/users/jcrist/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcrist/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T14:45:15Z",
    "updated_at": "2017-11-10T14:45:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @jorisvandenbossche and @TomAugspurger here. In my mind, `df.astype` is semantically the same as `df.apply(lambda x: x.astype(...))`, even if in implementation the conversion is done as one operation by the block manager. As a user I find the unification of categories here surprising and non-intuitive. I also did a brief office survey and others found this equally surprising and non-intuitive (cc @mcg1969).\r\n\r\nIf it's not an easy one-liner I'd prefer a separate function for doing the category unification and conversion instead of using `astype`. Or perhaps a keyword argument to `astype`, with unification as the non-default option."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343494874",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-343494874",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 343494874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzQ5NDg3NA==",
    "user": {
      "login": "mcg1969",
      "id": 2797735,
      "node_id": "MDQ6VXNlcjI3OTc3MzU=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/2797735?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcg1969",
      "html_url": "https://github.com/mcg1969",
      "followers_url": "https://api.github.com/users/mcg1969/followers",
      "following_url": "https://api.github.com/users/mcg1969/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcg1969/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcg1969/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcg1969/subscriptions",
      "organizations_url": "https://api.github.com/users/mcg1969/orgs",
      "repos_url": "https://api.github.com/users/mcg1969/repos",
      "events_url": "https://api.github.com/users/mcg1969/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcg1969/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T14:57:36Z",
    "updated_at": "2017-11-10T14:57:47Z",
    "author_association": "NONE",
    "body": "I appreciate the cc: here. I'm with @jcrist et al regarding what the default behavior should be. The one addition I offered, that I don't think Jim agreed with, was the idea of offering the full-dataframe conversion as a kwarg option."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343522440",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-343522440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 343522440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzUyMjQ0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-10T16:37:16Z",
    "updated_at": "2017-11-10T16:37:16Z",
    "author_association": "MEMBER",
    "body": "The \"one-liner\" currently is \r\n\r\n```\r\ndf.astype(pd.api.types.CategoricalDType(categories=np.unique(df.values.ravel())))\r\n```\r\n\r\nwhich is of course not that easy. \r\nI was thinking we could add a constructor for CategoricalDtype from just values (and categories get inferred), but that is also not much shorter:\r\n\r\n```\r\ndf.astype(pd.api.types.CategoricalDtype.from_values(df.values.ravel()))\r\n```\r\n\r\n(although we could implement it so that the `.ravel()` is not needed to be done by the user)\r\n\r\nA keyword argument to `astype` feels a bit strange to me as this seems to be specific for categoricals. Or are there other dtypes were this would give a different result?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/343826248",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-343826248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 343826248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MzgyNjI0OA==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T06:30:35Z",
    "updated_at": "2017-11-13T06:30:35Z",
    "author_association": "MEMBER",
    "body": "I don't have a particularly strong opinion either way; did this PR more out of finding it interesting than an actual want/need for the feature.  Have been in situations where it'd be the behavior I'd want, though not necessarily sure it's what I'd expect.\r\n\r\nI can't think of any other dtypes where a keyword argument would yield different results, but if we still want to use one it seems like `axis` could work with behavior similar to how `ndarray.sum` works in numpy, i.e.:\r\n - `axis=None`: over all elements, i.e. what this PR currently does\r\n - `axis=0`: column-wise\r\n - `axis=1`: ??? Not really sure.  Seems like it could just raise a `NotImplementedError` equivalent to what 2d structures currently do, e.g. `pd.Categorical(np.random.random((3,3)))`\r\n\r\nStill seems kind of strange to have a keyword argument that's only applicable to categoricals, but at least `axis` seems somewhat logically consistent, since it seems like `axis` would conceptually give the same result regardless of what value is passed for other dtypes, so could minimize any confusion.\r\n\r\nHappy to modify the PR however is deemed fit, once a clear path has been established."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345806271",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-345806271",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 345806271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTgwNjI3MQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-20T19:40:02Z",
    "updated_at": "2018-02-28T08:13:14Z",
    "author_association": "NONE",
    "body": "Hello @jschendel! Thanks for updating the PR.\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on February 28, 2018 at 08:13 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/359268581",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-359268581",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 359268581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1OTI2ODU4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-21T18:19:51Z",
    "updated_at": "2018-01-21T18:19:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok I will reverse my earlier stance on this, and support this working column-wise, assuring that ``DataFrame.astype('category')`` and ``DataFrame(data, dtype='category')`` work the same. Should add a small section in docs to do whole dataframe coding as an example.\r\n\r\n@jschendel if you want to update (and move notes to 0.23.0) could get this in ."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368180057",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-368180057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 368180057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODE4MDA1Nw==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-24T00:44:29Z",
    "updated_at": "2018-02-24T00:46:57Z",
    "author_association": "MEMBER",
    "body": "Updated to perform columnwise conversion:\r\n\r\n- Changed the issue number to reference this PR instead of the original issue\r\n   - Wanted to avoid confusion since the original issue is in regards to tablewise conversion\r\n- Added this behavior to `categorical.rst`\r\n   - Shuffled some examples and remarks around to make things more coherent\r\n   - Nothing should have be removed, just moved to a slightly different location\r\n- Added a small example to the whatsnew"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/368398523",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-368398523",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 368398523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2ODM5ODUyMw==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-26T05:58:47Z",
    "updated_at": "2018-02-26T05:58:47Z",
    "author_association": "MEMBER",
    "body": "Made the requested doc changes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369136319",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-369136319",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 369136319,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTEzNjMxOQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-28T06:33:15Z",
    "updated_at": "2018-02-28T06:33:15Z",
    "author_association": "MEMBER",
    "body": "Made the doc updates.  Will fix the related issue in a follow-up PR."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/369439577",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18099#issuecomment-369439577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18099",
    "id": 369439577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTQzOTU3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T01:07:37Z",
    "updated_at": "2018-03-01T01:07:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "very nice @jschendel pls the .astype concat issues in a followup."
  }
]
