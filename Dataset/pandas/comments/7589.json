[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47366792",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7589#issuecomment-47366792",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7589",
    "id": 47366792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzY2Nzky",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T16:01:44Z",
    "updated_at": "2014-06-27T16:01:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "see here about the change in `set_index`: http://pandas-docs.github.io/pandas-docs-travis/whatsnew.html#whatsnew-0140-api\n\nI don't think this is a bug, using `tuples` (or tuple-like) as a name of a column is just asking trouble as these represent multi-indexes.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47367213",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7589#issuecomment-47367213",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7589",
    "id": 47367213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MzY3MjEz",
    "user": {
      "login": "JackKelly",
      "id": 460756,
      "node_id": "MDQ6VXNlcjQ2MDc1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/460756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JackKelly",
      "html_url": "https://github.com/JackKelly",
      "followers_url": "https://api.github.com/users/JackKelly/followers",
      "following_url": "https://api.github.com/users/JackKelly/following{/other_user}",
      "gists_url": "https://api.github.com/users/JackKelly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JackKelly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JackKelly/subscriptions",
      "organizations_url": "https://api.github.com/users/JackKelly/orgs",
      "repos_url": "https://api.github.com/users/JackKelly/repos",
      "events_url": "https://api.github.com/users/JackKelly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JackKelly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-27T16:05:08Z",
    "updated_at": "2014-06-27T16:06:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, thanks loads for your help!  I guess we'll move to using hierarchical indexes and, on each level, we'll just use strings.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47628733",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7589#issuecomment-47628733",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7589",
    "id": 47628733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjI4NzMz",
    "user": {
      "login": "JackKelly",
      "id": 460756,
      "node_id": "MDQ6VXNlcjQ2MDc1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/460756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JackKelly",
      "html_url": "https://github.com/JackKelly",
      "followers_url": "https://api.github.com/users/JackKelly/followers",
      "following_url": "https://api.github.com/users/JackKelly/following{/other_user}",
      "gists_url": "https://api.github.com/users/JackKelly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JackKelly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JackKelly/subscriptions",
      "organizations_url": "https://api.github.com/users/JackKelly/orgs",
      "repos_url": "https://api.github.com/users/JackKelly/repos",
      "events_url": "https://api.github.com/users/JackKelly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JackKelly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-01T08:13:23Z",
    "updated_at": "2014-07-01T08:13:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "For our own project, we are now using MultiIndex for our columns (e.g. `[('power', 'active'), ('power', 'reactive'), ('energy', 'apparent'), ('voltage', '')]`).\n\nBut I am a bit confused about whether or not it's OK to use tuples as column names in Pandas DataFrames.  [The Pandas docs](http://pandas.pydata.org/pandas-docs/stable/indexing.html#creating-a-multiindex-hierarchical-index-object) say:\n\n> It’s worth keeping in mind that there’s nothing preventing\n> you from using tuples as atomic labels on an axis:\n\n``` python\nIn [326]: Series(randn(8), index=tuples)\nOut[326]: \n(bar, one)   -0.557549\n(bar, two)    0.126204\n(baz, one)    1.643615\n(baz, two)   -0.067716\n(foo, one)    0.127064\n(foo, two)    0.396144\n(qux, one)    1.043289\n(qux, two)   -0.229627\ndtype: float64\n```\n\nAnd, in my testing, vanilla tuples do seem fine as column names (in both v0.13.1 and v0.14).  And `namedtuples` worked in Pandas 0.13.1\n\nOn the other hand, you said that \"_using tuples (or tuple-like) as a name of a column is just asking trouble as these represent multi-indexes._\" and `namedtuples` don't work in 0.14.\n\nIt sounds like tuples _can_ work but they're unsafe and they might become totally unusable as column names in the future of Pandas.  Is that the correct conclusion?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47638730",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7589#issuecomment-47638730",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7589",
    "id": 47638730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjM4NzMw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-01T10:07:32Z",
    "updated_at": "2014-07-01T10:07:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nothing wrong from you using tuples. They just IMHO don't offer any benefit over multi-indexes. If they work for you, then great. I don't mean to imply they are unsafe, that's my 2c in that selection is just VERY confusing in written code\n\ne.g. `df.loc[:,('foo',1)]` looks to a code reader like its a multi-index as that is what you would do. This WILL work with a tuple column name, just its confusing IMHO.\n\nI don't think the usage will change in the future. I'll mark this issue as a bug. Pls feel free to submit a pull-request to fix!.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47645061",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7589#issuecomment-47645061",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7589",
    "id": 47645061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjQ1MDYx",
    "user": {
      "login": "armaganthis3",
      "id": 7407093,
      "node_id": "MDQ6VXNlcjc0MDcwOTM=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/7407093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/armaganthis3",
      "html_url": "https://github.com/armaganthis3",
      "followers_url": "https://api.github.com/users/armaganthis3/followers",
      "following_url": "https://api.github.com/users/armaganthis3/following{/other_user}",
      "gists_url": "https://api.github.com/users/armaganthis3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/armaganthis3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/armaganthis3/subscriptions",
      "organizations_url": "https://api.github.com/users/armaganthis3/orgs",
      "repos_url": "https://api.github.com/users/armaganthis3/repos",
      "events_url": "https://api.github.com/users/armaganthis3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/armaganthis3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-01T11:30:28Z",
    "updated_at": "2014-07-01T11:30:53Z",
    "author_association": "NONE",
    "body": "This was a breaking change in 0.14. See discussion in #3323. \ntuple labels do clash with the new multiindex slicing syntax\nas @jreback notes, but that's a bit of a dodge since that change\nwas made several months earlier and was unrelated to the new syntax.\n\nas for _\"these... just asking trouble as these represent multi-indexes.\"_ -\nnot true either for pandas up to 0.14. tuples did not \"represente\" \nmultiindexes before that, your formerly working code and the documentation \nyou mention are clear enough on that point.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/47675143",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7589#issuecomment-47675143",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7589",
    "id": 47675143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3Njc1MTQz",
    "user": {
      "login": "JackKelly",
      "id": 460756,
      "node_id": "MDQ6VXNlcjQ2MDc1Ng==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/460756?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JackKelly",
      "html_url": "https://github.com/JackKelly",
      "followers_url": "https://api.github.com/users/JackKelly/followers",
      "following_url": "https://api.github.com/users/JackKelly/following{/other_user}",
      "gists_url": "https://api.github.com/users/JackKelly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JackKelly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JackKelly/subscriptions",
      "organizations_url": "https://api.github.com/users/JackKelly/orgs",
      "repos_url": "https://api.github.com/users/JackKelly/repos",
      "events_url": "https://api.github.com/users/JackKelly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JackKelly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-07-01T16:02:28Z",
    "updated_at": "2014-07-01T16:02:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks loads for the replies, @jreback  and @armaganthis3 .  For our own project, I think we will stick with using MultiIndex instead of namedtuples.  It is, quite probably, a better solution than using namedtuples anyway (as @jreback points out).  So I'm afraid I'm unlikely to find time to hack away at Pandas to try to explore this bug with namedtuples, I'm sorry.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/403163881",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7589#issuecomment-403163881",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7589",
    "id": 403163881,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwMzE2Mzg4MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-06T22:42:01Z",
    "updated_at": "2018-07-06T22:42:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "this looks working in master: \r\n\r\n```\r\nIn [15]: pd.__version__\r\nOut[15]: '0.24.0.dev0+243.g30eb48cc4'\r\n```\r\n\r\nfor both versions, so can close with a test"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406259619",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7589#issuecomment-406259619",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7589",
    "id": 406259619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjI1OTYxOQ==",
    "user": {
      "login": "dahlbaek",
      "id": 30782351,
      "node_id": "MDQ6VXNlcjMwNzgyMzUx",
      "avatar_url": "https://avatars2.githubusercontent.com/u/30782351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dahlbaek",
      "html_url": "https://github.com/dahlbaek",
      "followers_url": "https://api.github.com/users/dahlbaek/followers",
      "following_url": "https://api.github.com/users/dahlbaek/following{/other_user}",
      "gists_url": "https://api.github.com/users/dahlbaek/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dahlbaek/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dahlbaek/subscriptions",
      "organizations_url": "https://api.github.com/users/dahlbaek/orgs",
      "repos_url": "https://api.github.com/users/dahlbaek/repos",
      "events_url": "https://api.github.com/users/dahlbaek/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dahlbaek/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T12:30:28Z",
    "updated_at": "2018-07-19T12:36:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback: Just to be clear, you would like tests to ensure that both tuples and namedtuples give rise to multiindices, right? So something like\r\n\r\n```python\r\nfrom collections import namedtuple\r\nfrom io import StringIO\r\n\r\nimport pandas.util.testing as tm\r\nfrom pandas import DataFrame, MultiIndex, read_csv\r\n\r\n\r\nTestTuple = namedtuple('columns', ['first', 'second'])\r\nCSV = \"\"\"foo,bar\r\nbaz,baz\r\n1,2\r\n3,4\"\"\"\r\n\r\nexpected_columns = MultiIndex(\r\n    levels=[['foo', 'bar'], ['baz']],\r\n    labels=[[0, 1], [0, 0]]\r\n)\r\nexpected_df = DataFrame(data=[[1, 2], [3, 4]], columns=expected_columns)\r\n\r\nmulti_df = read_csv(StringIO(CSV), header=[0, 1])\r\ntm.assert_frame_equal(expected_df, multi_df, check_column_type=True)\r\n\r\ntuple_df = read_csv(\r\n    StringIO(CSV),\r\n    header=None,\r\n    skiprows=2,\r\n    names=[('foo', 'baz'), ('bar', 'baz')]\r\n)\r\ntm.assert_frame_equal(expected_df, tuple_df, check_column_type=True)\r\n\r\nnamedtuple_df = read_csv(\r\n    StringIO(CSV),\r\n    header=None,\r\n    skiprows=2,\r\n    names=[TestTuple('foo', 'baz'), TestTuple('bar', 'baz')]\r\n)\r\ntm.assert_frame_equal(expected_df, namedtuple_df, check_column_type=True)\r\n```\r\n\r\nwould work?"
  }
]
