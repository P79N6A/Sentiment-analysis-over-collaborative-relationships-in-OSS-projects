[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233942401",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-233942401",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 233942401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzk0MjQwMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T13:03:42Z",
    "updated_at": "2016-07-20T13:03:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [1]: pd.DataFrame(np.empty_like(np.array([1,2])))\nOut[1]:\n     0\n0  109\n1    0\n\nIn [2]: pd.DataFrame(np.empty_like(np.array(['a', 'b'])))\nOut[2]:\n  0\n0\n1\n\n# setfault\nIn [3]: pd.DataFrame(np.empty_like(Index(['a', 'b'])))\nOut[3]:\n```\n\nnot really sure what `np.empty_like` actually does under the hood. \n\ncc @charris\ncc @gfyoung \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233985449",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-233985449",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 233985449,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzk4NTQ0OQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T15:28:24Z",
    "updated_at": "2016-07-20T15:39:18Z",
    "author_association": "MEMBER",
    "body": "I suspect it is a case of memory corruption on the `numpy` end when creating a `None` for the `object` dtype, as evidenced below:\n\n``` python\n>>> import numpy as np\n>>> import pandas as pd\n>>> arr = np.empty_like(pd.Index(['a', 'b']))\n>>> arr\narray([None, None], dtype=object)\n>>> arr2 = np.array([None, None], dtype=object)\n>>> arr == arr2\nTrue\n>>> arr.data.tobytes()    # segfault\nb'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n>>> arr2.data.tobytes()   # no segfault\nb'0\\x91\\xad\\x8b\\xd8\\x7f\\x00\\x000\\x91\\xad\\x8b\\xd8\\x7f\\x00\\x00'\n```\n\nYou can see here that the data is not corrupted when you have integers:\n\n``` python\n>>> import numpy as np\n>>> import pandas as pd\n>>> arr = np.empty_like(pd.Index([1, 2]))\n>>> arr\narray([140568033367712, 140568033367744], dtype=int64)\n>>> arr2 = np.array([140568033367712, 140568033367744], dtype=np.int64)\n>>> arr == arr2\nTrue\n>>> arr.data.tobytes()    # no segfault\nb'\\xa0\\x16\\xb2\\x8b\\xd8\\x7f\\x00\\x00\\xc0\\x16\\xb2\\x8b\\xd8\\x7f\\x00\\x00'\n>>> arr2.data.tobytes()   # no segfault\nb'\\xa0\\x16\\xb2\\x8b\\xd8\\x7f\\x00\\x00\\xc0\\x16\\xb2\\x8b\\xd8\\x7f\\x00\\x00'\n```\n\nAlso, you don't need an `Index` to trigger the segfault:\n\n``` python\n>>> import numpy as np\n>>> import pandas as pd\n>>> pd.DataFrame(np.empty_like([None]))\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234033158",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234033158",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234033158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDAzMzE1OA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T18:11:34Z",
    "updated_at": "2016-07-20T18:11:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can do more wierd tricks with this:\n\n``` python\nnp.empty_like(np.array([None, None], dtype=object)).data.tobytes()\nOut[41]: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nnp.empty_like(np.array([None, None], dtype=object)).astype(np.int64).data.tobytes()\nOut[42]: b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\nnp.empty_like(np.array([None, None], dtype=object)).astype(np.int64).astype(np.object).data.tobytes()\nOut[43]: b'\\xd0\\x01\\x9ac\\x00\\x00\\x00\\x00\\xd0\\x01\\x9ac\\x00\\x00\\x00\\x00'\n```\n\nThis looks like a NumPy bug.\n\nI suspect that an object array initialized using `None` should contain the value of `id(None)` if correct.  0-filled \"Nones\" don't make any sense, and seem to an incorrect treatment of NumPy.\n\n``` python\n>>> np.array([None]).data.tobytes()[::-1].hex()\n'0000000063979420'\n\n>>> hex(id(None))\n'0x63979420'\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234079549",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234079549",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234079549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDA3OTU0OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-20T20:54:02Z",
    "updated_at": "2016-07-20T20:54:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "agree with @bashtage here - some memory aliasing going on\n\nwant to open a numpy side issue?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234175377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234175377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234175377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDE3NTM3Nw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T07:14:00Z",
    "updated_at": "2016-07-21T07:14:00Z",
    "author_association": "MEMBER",
    "body": "@jreback : I opened a PR now in `numpy` that should fix the issue.  However, even if it doesn't get merged, technically, this issue could be closed since the bug is on the `numpy` side.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234234859",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234234859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234234859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzNDg1OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T12:08:26Z",
    "updated_at": "2016-07-21T12:08:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "running this in the debugger actually works. I think there is a reference issue to the Nones; an element-wise copy would fix it I suppose (from pandas perspective). but yes this is a numpy-bug.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234235305",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234235305",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234235305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDIzNTMwNQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T12:10:55Z",
    "updated_at": "2016-07-21T12:10:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "It is probably, technically, a Pandas bug.  NumPy is returns an empty array filled with NULL. Pandas doesn't seems to know what to do when an object array contains NULLs.  This said, it would be better if NumPy addressed this by never returning object arrays containing NULLs, and in instead returned the address of `None`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234304866",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234304866",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234304866,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDMwNDg2Ng==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T16:16:43Z",
    "updated_at": "2016-07-21T16:17:21Z",
    "author_association": "MEMBER",
    "body": "@bashtage : True, but the annoying part on the `pandas` end about this issue is that it's hard to step through and catch where exactly the segfault is occurring.  I tried throwing Exceptions in the middle of the `__init__` for `DataFrame` and `NDFrame` without any success.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234362343",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234362343",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234362343,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM2MjM0Mw==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T19:44:45Z",
    "updated_at": "2016-07-21T19:44:45Z",
    "author_association": "NONE",
    "body": "This should probably be treated as a pandas bug, and definitely not as a bug in empty_like specifically.\n\nNumpy's semantics for interpreting the bytes in object arrays are, consistently:\n- Zero field values represent `None`, but without holding a refcount\n- All other fields values represent a concrete `PyObject*`, and hold a refcount.\n\nIf pandas wants to implement its own logic for reading objects out of object arrays, then it kinda has to implement the same semantics that numpy uses.\n\nPotentially numpy could get rid of the special case for null pointers. I'm not actually sure if this would be a good idea or not, since there is a bit of an optimization there (the special case means we can allocate a large array of None objects, as in `np.empty` or `np.zeroes`, in O(1) time instead of the O(n) it would take to initialize all those fields and issue all those calls to `Py_INCREF` -- but OTOH maybe the win here is trivial and not with the complexity, I dunno).\n\nGetting rid of this special case is more involved than just patching `empty_like`, though: this logic is implemented consistently in all numpy code dealing with object arrays, and potentially depended on by third party libraries.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234373783",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234373783",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234373783,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDM3Mzc4Mw==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-21T20:28:17Z",
    "updated_at": "2016-07-22T02:36:32Z",
    "author_association": "MEMBER",
    "body": "@njsmith: So you have semantically aliased the zero field value to `Py_None` if I understand properly?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234430255",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234430255",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234430255,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDQzMDI1NQ==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-22T01:19:33Z",
    "updated_at": "2016-07-22T01:19:33Z",
    "author_association": "NONE",
    "body": "Well not me personally :-). But yes, that's my understanding.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234702494",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234702494",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234702494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDcwMjQ5NA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T06:27:10Z",
    "updated_at": "2016-07-23T06:33:57Z",
    "author_association": "MEMBER",
    "body": "Okay, given the push-back I'm seeing from the `numpy` maintainers, digging a bit deeper on the `pandas` end, the issue is with printing of the `DataFrame` and the formatting behind the scenes.  The segfault can be triggered in a much simpler fashion:\n\n``` python\n>>> import pandas.lib as lib\n>>> import numpy as np\n>>> lib.isnullobj(np.empty_like([None]))\n```\n\nThis drew my attention when I realised the segfault wasn't occurring with just the mere creation of the `DataFrame`, but rather when I called `str(...)`.  `pdb` indicated that there was a segfault being signalled in `lib.c`, which is the Cythonized version of `lib.pyx`.\n\nSo it does seem like `pandas` does not handle these zero-value `Py_None` values, but I didn't realise it would be coming from printing!  Definitely on the right track, so will continue digging...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234704316",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234704316",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234704316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDcwNDMxNg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T07:18:24Z",
    "updated_at": "2016-07-23T07:34:04Z",
    "author_association": "MEMBER",
    "body": "Okay, so the issue is a memory access violation occurring right <a href=\"https://github.com/pydata/pandas/blob/master/pandas/lib.pyx#L353\">here</a> (if you follow my example).  This definitely looks like a `numpy` issue to me, as we do nothing to the `object` array beforehand.\n\nI should also point out that if I define the following function in `numpy` (e.g. `mtrand.pyx`):\n\n``` python\ndef getfirstelt(ndarray[object] arr):\n    return arr[0]\n```\n\nand then do this:\n\n``` python\n>>> from numpy.random import getfirstelt\n>>> import numpy as np\n>>> np.getfirstelt(np.empty_like([None]))\n```\n\nthis also segfaults.\n\n@njsmith : what are your thoughts about this?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234717110",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234717110",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234717110,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDcxNzExMA==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T13:02:34Z",
    "updated_at": "2016-07-23T13:02:34Z",
    "author_association": "NONE",
    "body": "@gfyoung: I think that your code there is triggering cython to generate some C code that directly pokes around inside the ndarray's memory. Possibly cython is generating buggy C code?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234732281",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234732281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234732281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDczMjI4MQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T18:15:07Z",
    "updated_at": "2016-07-23T18:16:19Z",
    "author_association": "MEMBER",
    "body": "@njsmith : Perhaps, though FWIW, this will work (i.e. not segfault):\n\n``` python\ndef getfirstelt(ndarray arr):\n    return arr[0]\n```\n\nIt could be a Cython bug, and the reason why it hasn't surfaced in `numpy` is because `__getitem__` IINM is implemented in C by you guys already, so there is no Cython layer to compile for that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234733168",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234733168",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234733168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDczMzE2OA==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T18:33:46Z",
    "updated_at": "2016-07-23T18:33:46Z",
    "author_association": "NONE",
    "body": "So look at the C code cython generates for those two snippets and see what the difference is :-)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234736015",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234736015",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234736015,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDczNjAxNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-23T19:35:57Z",
    "updated_at": "2016-07-23T19:35:57Z",
    "author_association": "MEMBER",
    "body": "@njsmith : maybe when I have A LOT of time on my hands :).  FYI, I think we can also close the related `numpy` issue since we figured out what to do here.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234779019",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13717#issuecomment-234779019",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13717",
    "id": 234779019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc3OTAxOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-24T14:01:53Z",
    "updated_at": "2016-07-24T14:01:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "closed by #13764 \n"
  }
]
