[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34806465",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6322#issuecomment-34806465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6322",
    "id": 34806465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODA2NDY1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-11T21:02:46Z",
    "updated_at": "2014-02-11T21:02:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "can U give an example of your use case\nan all nan level in a multi index is really really hard to support properly \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34870681",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6322#issuecomment-34870681",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6322",
    "id": 34870681,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcwNjgx",
    "user": {
      "login": "wangshun98",
      "id": 6585675,
      "node_id": "MDQ6VXNlcjY1ODU2NzU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/6585675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wangshun98",
      "html_url": "https://github.com/wangshun98",
      "followers_url": "https://api.github.com/users/wangshun98/followers",
      "following_url": "https://api.github.com/users/wangshun98/following{/other_user}",
      "gists_url": "https://api.github.com/users/wangshun98/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wangshun98/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wangshun98/subscriptions",
      "organizations_url": "https://api.github.com/users/wangshun98/orgs",
      "repos_url": "https://api.github.com/users/wangshun98/repos",
      "events_url": "https://api.github.com/users/wangshun98/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wangshun98/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-12T13:58:51Z",
    "updated_at": "2014-02-12T13:58:51Z",
    "author_association": "NONE",
    "body": "This comes out of a database query of mixed fields of dates and values. And I want to use the combination of dates as index so I can easily join the values from multiple queries. however, sometimes all dates in one column are all null.  \n\nNaN in MultiIndex is already supported. That 3 lines I suggested would make it work with a level with all NaN.  We can test case other functionalities. But after I made that change in my local copy, I haven't experienced other issues with all NaN MultiIndex yet.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34871504",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6322#issuecomment-34871504",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6322",
    "id": 34871504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcxNTA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-12T14:08:54Z",
    "updated_at": "2014-02-12T14:08:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "go ahead and do a PR (with a test case) and i'll take a look\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41601428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6322#issuecomment-41601428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6322",
    "id": 41601428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjAxNDI4",
    "user": {
      "login": "boombard",
      "id": 3853814,
      "node_id": "MDQ6VXNlcjM4NTM4MTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3853814?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/boombard",
      "html_url": "https://github.com/boombard",
      "followers_url": "https://api.github.com/users/boombard/followers",
      "following_url": "https://api.github.com/users/boombard/following{/other_user}",
      "gists_url": "https://api.github.com/users/boombard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/boombard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/boombard/subscriptions",
      "organizations_url": "https://api.github.com/users/boombard/orgs",
      "repos_url": "https://api.github.com/users/boombard/repos",
      "events_url": "https://api.github.com/users/boombard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/boombard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-28T19:21:05Z",
    "updated_at": "2014-04-28T19:21:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I can confirm I am also experiencing precisely this issue with an all-NaN level in my multi-index. Looks to me like those three lines should work if included.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/258953592",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6322#issuecomment-258953592",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6322",
    "id": 258953592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1ODk1MzU5Mg==",
    "user": {
      "login": "gryBox",
      "id": 16763201,
      "node_id": "MDQ6VXNlcjE2NzYzMjAx",
      "avatar_url": "https://avatars1.githubusercontent.com/u/16763201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gryBox",
      "html_url": "https://github.com/gryBox",
      "followers_url": "https://api.github.com/users/gryBox/followers",
      "following_url": "https://api.github.com/users/gryBox/following{/other_user}",
      "gists_url": "https://api.github.com/users/gryBox/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gryBox/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gryBox/subscriptions",
      "organizations_url": "https://api.github.com/users/gryBox/orgs",
      "repos_url": "https://api.github.com/users/gryBox/repos",
      "events_url": "https://api.github.com/users/gryBox/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gryBox/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-07T20:31:33Z",
    "updated_at": "2016-11-07T20:32:02Z",
    "author_association": "NONE",
    "body": "@jreback\n\nThe code below returns the error: `IndexError: cannot do a non-empty take from an empty axes.`\n\n```\nimport pandas as pd\nimport numpy as np\nimport random\nimport string\n\n\n\n# Create 12 random strings 3 char long \nrndm_strgs = [''.join(random.SystemRandom().choice(string.ascii_uppercase + string.digits) for _ in range(3)) for i in range(12)]            \nrndm_strgs[0] = None\nrndm_strgs[5] = None\n\n# Make Dataframe\ndf = pd.DataFrame({'A' : list('pandasisgood'),\n                   'B' : np.nan,\n                   'C' : rndm_strgs,\n                   'D' : np.random.rand(12)})\n\n# Set an Index -> Columns have Nans\ndf_w_idx = df.set_index(['A','B','C'])\n\n# This is where it fails\ndf_w_idx.reset_index()\n```\n\nThis is the desired result:\n\n```\nfor clmNm in df_w_idx.index.names:\n    print(clmNm)\n\n    print(clmNm)\n\n    df_w_idx[clmNm] = df_w_idx.index.get_level_values(clmNm)\n\n\ndf_w_idx = df_w_idx.reset_index(drop=True).copy()\ndf_w_idx\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/281182380",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6322#issuecomment-281182380",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6322",
    "id": 281182380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTE4MjM4MA==",
    "user": {
      "login": "tzinckgraf",
      "id": 842982,
      "node_id": "MDQ6VXNlcjg0Mjk4Mg==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/842982?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tzinckgraf",
      "html_url": "https://github.com/tzinckgraf",
      "followers_url": "https://api.github.com/users/tzinckgraf/followers",
      "following_url": "https://api.github.com/users/tzinckgraf/following{/other_user}",
      "gists_url": "https://api.github.com/users/tzinckgraf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tzinckgraf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tzinckgraf/subscriptions",
      "organizations_url": "https://api.github.com/users/tzinckgraf/orgs",
      "repos_url": "https://api.github.com/users/tzinckgraf/repos",
      "events_url": "https://api.github.com/users/tzinckgraf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tzinckgraf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-20T21:12:25Z",
    "updated_at": "2017-02-20T21:12:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback I have the same issue and was playing around with a solution.\r\n\r\nThe `reset_index` function in `frame.py` function has the following code\r\n```\r\n            # if we have the labels, extract the values with a mask\r\n            if labels is not None:\r\n                mask = labels == -1\r\n                values = values.take(labels)\r\n```\r\nsee [here](https://github.com/pandas-dev/pandas/blob/5710947759e13f54a5bf896768fb7f9c214f245d/pandas/core/frame.py#L2938).\r\n\r\nThe mask variable is all `True` only if all the labels are -1. Assuming this means all the values were `np.nan`, one solution I was playing with is as follows\r\n```\r\n            # if we have the labels, extract the values with a mask\r\n            if labels is not None:\r\n                mask = labels == -1\r\n                if mask.all():\r\n                    values = (np.nan * mask).values()\r\n                else:\r\n                    values = values.take(labels)\r\n```\r\n\r\nPlease advise. More than happy to create a pull request and create all appropriate test cases.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/281182930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6322#issuecomment-281182930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6322",
    "id": 281182930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTE4MjkzMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-20T21:15:32Z",
    "updated_at": "2017-02-20T21:15:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@tzinckgraf you can just do the take if ``len(values)``; ``.take()`` is picky :>\r\n\r\nsure why don't you put up a PR with a test (you can use the above example)."
  }
]
