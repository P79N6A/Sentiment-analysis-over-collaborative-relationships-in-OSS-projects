[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/345116531",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-345116531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 345116531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NTExNjUzMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-17T01:22:43Z",
    "updated_at": "2017-11-17T01:22:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm. merge when ready @cpcloud "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346224562",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-346224562",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 346224562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjIyNDU2Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T02:29:02Z",
    "updated_at": "2017-11-22T02:29:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346273217",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-346273217",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 346273217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjI3MzIxNw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-22T08:07:41Z",
    "updated_at": "2017-12-07T20:26:08Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18201?src=pr&el=h1) Report\n> Merging [#18201](https://codecov.io/gh/pandas-dev/pandas/pull/18201?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/9629fef912dbeca5154e9cf58970bad3e02657f4?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18201/graphs/tree.svg?width=650&height=150&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/18201?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18201      +/-   ##\n==========================================\n- Coverage   91.59%   91.55%   -0.04%     \n==========================================\n  Files         153      153              \n  Lines       51257    51257              \n==========================================\n- Hits        46949    46929      -20     \n- Misses       4308     4328      +20\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.41% <ø> (-0.03%)` | :arrow_down: |\n| #single | `40.68% <ø> (-0.11%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18201?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/io/gbq.py](https://codecov.io/gh/pandas-dev/pandas/pull/18201/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2dicS5weQ==) | `25% <0%> (-58.34%)` | :arrow_down: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18201/diff?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `64.78% <0%> (-1.74%)` | :arrow_down: |\n| [pandas/core/frame.py](https://codecov.io/gh/pandas-dev/pandas/pull/18201/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZnJhbWUucHk=) | `97.81% <0%> (-0.1%)` | :arrow_down: |\n| [pandas/core/indexes/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/18201/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9kYXRldGltZXMucHk=) | `95.59% <0%> (-0.1%)` | :arrow_down: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/18201/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `82.01% <0%> (+0.19%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18201?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18201?src=pr&el=footer). Last update [9629fef...fd7ff76](https://codecov.io/gh/pandas-dev/pandas/pull/18201?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348707270",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-348707270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 348707270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODcwNzI3MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T17:38:30Z",
    "updated_at": "2017-12-02T17:38:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud good to go?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/348968035",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-348968035",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 348968035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODk2ODAzNQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T13:53:12Z",
    "updated_at": "2017-12-04T13:53:12Z",
    "author_association": "MEMBER",
    "body": "I think the example at then end also should be updated: https://github.com/cpcloud/pandas/blame/6183078033adc62c1ccf043dac15d5b4f121fdac/doc/source/developer.rst#L157 (it still uses `'__index_level_0__'` in the `columns` part of the metadata, where the actual name (`None` in this case) should be included."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349359616",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349359616",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349359616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTM1OTYxNg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T16:30:31Z",
    "updated_at": "2017-12-05T16:30:31Z",
    "author_association": "MEMBER",
    "body": "Having dived a little bit in the pyarrow side of the code in https://github.com/apache/arrow/pull/1386, I have two design-level comments or questions related to the index names:\r\n\r\n- Currently there is no strict mapping possible (or at least harder than it should be) between the pandas metadata and the actual field names in the schema: because index column names in the `pandas_metadata['columns']` entry don't match the field name, and because the order / number of entries in the `pandas_metadata` is not always the same as the fields when subsetting data (so you can't just enumerate both together). \r\n\r\n  Therefore I was wondering whether it would be worth adding a `'field_name'` entry to a `pandas_metadata['columns']` entry (next to the `'name'` entry). `'field_name'` would then strictly match the names of the schema, making lookups much easier.\r\n\r\n- The choice was made to always encode index columns in the schema with `__index_level_n__`-like names, even if the index (or index level) of the pandas DataFrame has a name that is not None. The actual name is still preserved in `pandas_metadata['columns'][..]['name']`, so it is not a problem for roundtripping. \r\n  But for usability of pyarrow itself, I would much prefer having a field with the actual name and not `__index_level_n__`. Also in pandas we are trying in some places to reduce the difference between index levels and columns (seeing the index as a special column), eg in groupby, merging, sorting you can now mix references of columns and index levels by name. \r\n  This change was done IIRC to accomodate index level names that were the same as column names, but I would personally just regard that the same as duplicate column names (thus: not supported).\r\n\r\nI *think* those changes are not yet in a released version of pyarrow? (and the last one is also not yet implemented in fastparquet I think to align with pyarrow)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349432377",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349432377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349432377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQzMjM3Nw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T20:33:41Z",
    "updated_at": "2017-12-05T20:33:41Z",
    "author_association": "MEMBER",
    "body": "Well, we are running out of time to make any more such changes for Arrow 0.8.0. What about using the disambiguated names only when there is a naming conflict?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349432453",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349432453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349432453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQzMjQ1Mw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T20:33:54Z",
    "updated_at": "2017-12-05T20:33:54Z",
    "author_association": "MEMBER",
    "body": "cc @cpcloud "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349442509",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349442509",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349442509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQ0MjUwOQ==",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T21:10:49Z",
    "updated_at": "2017-12-05T21:10:58Z",
    "author_association": "MEMBER",
    "body": "> This change was done IIRC to accomodate index level names that were the same as column names, but I would personally just regard that the same as duplicate column names (thus: not supported).\r\n\r\nWe introduced this to accommodate that use case specifically. See [ARROW-1754](https://issues.apache.org/jira/browse/ARROW-1754)\r\n\r\n> Currently there is no strict mapping possible (or at least harder than it should be) between the pandas metadata and the actual field names in the schema\r\n\r\nI don't understand this comment. Can you give an example of what isn't possible or is cumbersome here?\r\n\r\n> because the order / number of entries in the pandas_metadata is not always the same as the fields when subsetting data\r\n\r\nThat's also true for some cases independent of how we deal with index names. For example `pq.read_parquet(..., columns=['b', 'a'])` if the order of b and a in the schema is `['a', 'b']`.\r\n\r\n@jorisvandenbossche Can you give some examples to illustrate your points?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349451560",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349451560",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349451560,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTQ1MTU2MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-05T21:44:17Z",
    "updated_at": "2017-12-05T21:44:17Z",
    "author_association": "MEMBER",
    "body": "> > This change was done IIRC to accomodate index level names that were the same as column names, but I would personally just regard that the same as duplicate column names (thus: not supported).\r\n\r\n> We introduced this to accommodate that use case specifically. See ARROW-1754\r\n\r\nYes, I know, that's why I mentioned it. But I would say to that issue: \"pitty, won't fix, this is not supported\" (or of course: raise an informative error message. The solution for the user can simply be to specify `preserve_index=False` in `Table.from_pandas`). For me this is very similar to writing dataframes with duplicate column names to parquet which is *also* not supported.\r\n\r\n> > Currently there is no strict mapping possible (or at least harder than it should be) between the pandas metadata and the actual field names in the schema\r\n\r\n> I don't understand this comment. Can you give an example of what isn't possible or is cumbersome here?\r\n\r\nIn https://github.com/apache/arrow/pull/1386, I needed to do the following to get the field name corresponding to a specific pandas metadata column entry:\r\n\r\n```\r\nindex_columns = pandas_metadata['index_columns']\r\nn_index_levels = len(index_columns)\r\nn_columns = len(pandas_metadata['columns']) - n_index_levels\r\n\r\nfor i, col_meta in enumerate(pandas_metadata['columns']):\r\n\r\n    raw_name = col_meta['name']\r\n    if i >= n_columns:\r\n        # index columns\r\n        raw_name = index_columns[i - n_columns]\r\n    if raw_name is None:\r\n        raw_name = 'None'\r\n        \r\n    idx = schema.get_field_index(raw_name)\r\n```\r\n\r\nIt might be that I am missing something and the above is overly complicated. But if you would have a `field_name` entry in the pandas metadata column entries, the above code could be simplified to:\r\n\r\n```\r\nfor i, col_meta in enumerate(pandas_metadata['columns']):\r\n\r\n    raw_name = col_meta['field_name']\r\n    idx = schema.get_field_index(raw_name)\r\n```\r\n\r\nI would think such an operation (getting the field name corresponding to a pandas column name) is something rather common (it is also something that they will need in fastparquet), and it is of course not \"impossible\" (that was a bit strong stated), but just rather hard. \r\nOn the other hand, in `pyarrow` itself you can easily make this into a helper function if you would need it in multiple places, so of course also not that much of a problem. But as somebody starting to play with pyarrow Tables from pandas dataframes, figuring this out (the relationship between the pandas names and field names, and coming up with the above code snippet) was not that straightforward from the beginning.\r\n\r\nThis is indeed not fully related to the index names discussion, because even if we would revert the \"always using `__index_level_n__` pattern\", you would need the above code anyhow. So it are two separate issues."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349630953",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349630953",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349630953,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTYzMDk1Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T12:52:51Z",
    "updated_at": "2017-12-06T12:52:51Z",
    "author_association": "MEMBER",
    "body": "@cpcloud Another illustration of the possible difficulties with the mapping between the pandas metadata and the actual field names in the schema: currently this mapping is possible in `pyarrow` because it assumes that the index columns are the *last ones* inside the schema. \r\nHowever, this assumption breaks eg with files written by `fastparquet`, because they do not put index levels at the end, but in the beginning:\r\n\r\n```\r\nIn [79]: df = pd.DataFrame({'a': [1, 2, 3], 'b': [.1, .2, .3], 'c':pd.date_range(\"2017-01-01\", periods=3, tz='Europe/Brussels')}, index=pd.Index(['A', 'B', 'C'], name='index'))\r\n\r\nIn [80]: df\r\nOut[80]: \r\n       a    b                         c\r\nindex                                  \r\nA      1  0.1 2017-01-01 00:00:00+01:00\r\nB      2  0.2 2017-01-02 00:00:00+01:00\r\nC      3  0.3 2017-01-03 00:00:00+01:00\r\n\r\nIn [81]: fastparquet.write(\"__test_index_fastparquet-dev.parquet\", df)\r\n/home/joris/miniconda3/envs/pyarrow-dev/lib/python3.6/site-packages/fastparquet/writer.py:136: UserWarning: Coercing datetimes to UTC\r\n  warnings.warn('Coercing datetimes to UTC')\r\n\r\nIn [82]: pq.read_table(\"__test_fastparquet-dev.parquet\")\r\nOut[82]: \r\npyarrow.Table\r\nindex: string\r\na: int64\r\nb: double\r\nc: timestamp[us]\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"columns\": [{\"metadata\": null, \"name\": \"index\", \"numpy_type\": \"'\r\n            b'object\", \"pandas_type\": \"unicode\"}, {\"metadata\": null, \"name\": \"'\r\n            b'a\", \"numpy_type\": \"int64\", \"pandas_type\": \"int64\"}, {\"metadata\":'\r\n            b' null, \"name\": \"b\", \"numpy_type\": \"float64\", \"pandas_type\": \"flo'\r\n            b'at64\"}, {\"metadata\": {\"timezone\": \"Europe/Brussels\"}, \"name\": \"c'\r\n            b'\", \"numpy_type\": \"datetime64[ns, Europe/Brussels]\", \"pandas_type'\r\n            b'\": \"datetimetz\"}], \"index_columns\": [\"index\"], \"pandas_version\":'\r\n            b' \"0.22.0.dev0+260.g5da3759\"}'}\r\n\r\nIn [83]: pq.read_table(\"__test_fastparquet-dev.parquet\").to_pandas()\r\n...\r\nArrowNotImplementedError: No cast implemented from string to timestamp[ns, tz=Europe/Brussels]\r\n```\r\n\r\nOf course, this could (and maybe should) be fixed in `fastparquet` (they still have to update with regards to the index name change as well: https://github.com/dask/fastparquet/issues/251). And aonce fixed, this again will not be an impossible problem. However, this assumption was up to now not written in the pandas metadata specifications (what you are updating now), so they are not to blame. And to me it shows a bit the brittleness of this assumption."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349638137",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349638137",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349638137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTYzODEzNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T13:23:30Z",
    "updated_at": "2017-12-06T13:23:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm looking into this on the fastparquet / dask side.\r\n\r\n> But if you would have a field_name entry in the pandas metadata column entries\r\n\r\nJoris' suggestion seems sensible to me."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349668669",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349668669",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349668669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTY2ODY2OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T15:12:12Z",
    "updated_at": "2017-12-06T15:12:12Z",
    "author_association": "MEMBER",
    "body": "Whatever the decision for this discussion, this PR should close https://github.com/pandas-dev/pandas/issues/16391 (where Wes proposes an additional name entry for the index to disambiguate with column names)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349754480",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349754480",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349754480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc1NDQ4MA==",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T19:49:59Z",
    "updated_at": "2017-12-06T19:49:59Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche @TomAugspurger Thanks for commenting. I agree adding `'field_name'` will be helpful and will allow writing index metadata that fastparquet can read as well. PR is in the works for arrow. I'll also update this PR with the changes."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349759471",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349759471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349759471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc1OTQ3MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T20:08:53Z",
    "updated_at": "2017-12-06T20:08:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks.\n\nThanks. Once ARROW-1895 is ready I'll update fastparquet's metadata writer\nto be compliant.\n\nOn Wed, Dec 6, 2017 at 1:50 PM, Phillip Cloud <notifications@github.com>\nwrote:\n\n> @jorisvandenbossche <https://github.com/jorisvandenbossche> @TomAugspurger\n> <https://github.com/tomaugspurger> Thanks for commenting. I agree adding\n> 'field_name' will be helpful and will allow writing index metadata that\n> fastparquet can read as well. PR is in the works for arrow. I'll also\n> update this PR with the changes.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349754480>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIloCpiOVkaff3vA-Q9JLE_2Cs5_wks5s9u_vgaJpZM4QYi4Q>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349775622",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349775622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349775622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc3NTYyMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T21:10:23Z",
    "updated_at": "2017-12-06T21:10:23Z",
    "author_association": "MEMBER",
    "body": "Thanks! Happy to review when there is a PR.\r\n\r\nRegarding my other point (the second bullet point here: https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349359616) about always using `__index_level_n__` as the index column name in the schema. \r\nI was thinking a bit more about it, and there is maybe an alternative that does not bring back the bug fixed in [ARROW-1754](https://issues.apache.org/jira/browse/ARROW-1754), which is to use the  `__index_level_n__` only if the index name is None *or* already exists in the column names (both conditions should be easy to check). \r\n\r\nThe reason that I argue for this is the following: as long as one uses `to_parquet`/`read_parquet` to roundtrip pandas dataframes, it does not really matter how the index columns are stored in the parquet file. But if one also wants to use those files in other systems, I can imagine that names like `__index_level_n__` can be rather annoying, certainly if your actual dataframe had a sensible index name. \r\nAnd we will by default write index columns in `to_parquet` (see in progress PR https://github.com/pandas-dev/pandas/pull/18629, until now only supported default integer range indexes), so this will become more common.\r\n\r\nI understand that the 0.8.0 release is close, so that you might not want to reconsider this at this point. But I can certainly do a PR with the change to help out (I think it should be a relatively straightforward patch, just as https://github.com/apache/arrow/pull/1271 was also not that a big patch)\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349776223",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349776223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349776223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTc3NjIyMw==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-06T21:12:39Z",
    "updated_at": "2017-12-06T21:12:39Z",
    "author_association": "MEMBER",
    "body": "Here's the PR https://github.com/apache/arrow/pull/1397"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349845315",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349845315",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349845315,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTg0NTMxNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T02:43:00Z",
    "updated_at": "2017-12-07T02:43:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is unrelated to the changes here, but I noticed pyarrow uses \"string\" for the \"pandas_type\":\r\n\r\n```python\r\n>>> df = pd.DataFrame({\"A\": [1, 2]})\r\n>>> sink = io.BytesIO()\r\n>>> pq.write_metadata(pa.Table.from_pandas(df).schema, sink)\r\n>>> json.loads(pq.read_metadata(sink).metadata[b'pandas'].decode('utf-8'))['column_indexes']\r\n[{'metadata': None,\r\n  'name': None,\r\n  'numpy_type': 'object',\r\n  'pandas_type': 'string'}]\r\n```\r\n\r\nThough the spec says just `'unicode'` or `'bytes'` for String type. Could we add `'string'` as an alias for unicode?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349983152",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349983152",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349983152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk4MzE1Mg==",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T14:30:02Z",
    "updated_at": "2017-12-07T14:30:02Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger That only appears in the `'column_indexes'` metadata, because that doesn't go through arrow schemas, so that's a bug. This was added in between 0.7.1 and upcoming 0.8.0 so we can change this without any backward compatibility consequences."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/349985705",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-349985705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 349985705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0OTk4NTcwNQ==",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T14:38:50Z",
    "updated_at": "2017-12-07T14:38:50Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche @TomAugspurger Thanks for ironing this stuff out, it's very helpful to have a third and fourth pair of eyes on this code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350017517",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350017517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350017517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDAxNzUxNw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T16:19:27Z",
    "updated_at": "2017-12-07T16:19:27Z",
    "author_association": "MEMBER",
    "body": "cc @martindurant"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350085430",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350085430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350085430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDA4NTQzMA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T20:31:11Z",
    "updated_at": "2017-12-07T20:31:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I'm working on updating dask for this, I think allowing duplicates between the index names and columns as in https://issues.apache.org/jira/browse/ARROW-1754 necessitates some kind of ordering on `columns` in the pandas metadata.\r\n\r\nConsider this (unlikely) dataframe\r\n\r\n```python\r\ndf4 = pd.DataFrame({\"__index_level_0__\": [1, 2]},\r\n                   index=pd.Index([0, 1], name='__index_level_0__'))\r\n```\r\n\r\nOn https://github.com/apache/arrow/pull/1397 that produces this metadata:\r\n\r\n```python\r\n{'column_indexes': [{'field_name': None,\r\n   'metadata': {'encoding': 'UTF-8'},\r\n   'name': None,\r\n   'numpy_type': 'object',\r\n   'pandas_type': 'unicode'}],\r\n 'columns': [{'field_name': '__index_level_0__',\r\n   'metadata': None,\r\n   'name': '__index_level_0__',\r\n   'numpy_type': 'int64',\r\n   'pandas_type': 'int64'},\r\n  {'field_name': '__index_level_0__',\r\n   'metadata': None,\r\n   'name': '__index_level_0__',\r\n   'numpy_type': 'int64',\r\n   'pandas_type': 'int64'}],\r\n 'index_columns': ['__index_level_0__'],\r\n 'pandas_version': '0.21.0'}\r\n```\r\n\r\nSo the two items in `columns` are identical, and it's impossible to disambiguate between the column and the index. This is admittedly a contrived example, but it'd be nice to have this be unambiguous.\r\n\r\nI think we can either\r\n\r\n1. Update the spec to require field ordering for the indexes\r\n2. Update the spec for columns to include an optional flag like \"is_index\" (False by default)\r\n\r\nI don't have a preference. Option 1 is less work for pyarrow, and gives me another motivation to update fastparquet to write the same metadata.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350111209",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350111209",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350111209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDExMTIwOQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T22:15:37Z",
    "updated_at": "2017-12-07T22:15:37Z",
    "author_association": "MEMBER",
    "body": "Other options are: 3) don't allow duplicates 4) make sure the field names are unique (and then the actual column names / index level names don't need to) eg by taking the first `__index_level_n__` one that does not yet exist in the column field names as index field name.\r\n\r\nI actually don't mind for option 3 (seeing index levels as a special type of column, for me it is fine to extend the uniqueness constraint to index names as well). But if we want to allow it, I think I find option 4 the easiest."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350257354",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350257354",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350257354,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDI1NzM1NA==",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T12:59:30Z",
    "updated_at": "2017-12-08T12:59:30Z",
    "author_association": "MEMBER",
    "body": "@jorisvandenbossche can you give an example implementation of option 4? It seems like you're saying we should make the index field name generation depend on the names of the non index columns. If so, that seems far more complex than requiring index columns be last or adding an index flag. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350257781",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350257781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350257781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDI1Nzc4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T13:01:48Z",
    "updated_at": "2017-12-08T13:01:48Z",
    "author_association": "MEMBER",
    "body": "Will do, but just a quick check: does parquet allow columns with the same name? Or arrow Tables ?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350259248",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350259248",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350259248,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDI1OTI0OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T13:09:51Z",
    "updated_at": "2017-12-08T13:09:51Z",
    "author_association": "MEMBER",
    "body": "So the example of @TomAugspurger above currenlty gives:\r\n\r\n```\r\nIn [6]: df4 = pd.DataFrame({\"__index_level_0__\": [1, 2]},\r\n   ...:                    index=pd.Index([0, 1], name='__index_level_0__'))\r\n   ...:                    \r\n\r\nIn [7]: pa.Table.from_pandas(df4)\r\nOut[7]: \r\npyarrow.Table\r\n__index_level_0__: int64\r\n__index_level_0__: int64\r\nmetadata\r\n--------\r\n{b'pandas': b'{\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"na'\r\n            b'me\": null, \"pandas_type\": \"string\", \"numpy_type\": \"object\", \"met'\r\n            b'adata\": null}], \"columns\": [{\"name\": \"__index_level_0__\", \"field'\r\n            b'_name\": \"__index_level_0__\", \"pandas_type\": \"int64\", \"numpy_type'\r\n            b'\": \"int64\", \"metadata\": null}, {\"name\": \"__index_level_0__\", \"fi'\r\n            b'eld_name\": \"__index_level_0__\", \"pandas_type\": \"int64\", \"numpy_t'\r\n            b'ype\": \"int64\", \"metadata\": null}], \"pandas_version\": \"0.22.0.dev'\r\n            b'0+260.g5da3759\"}'}\r\n```\r\n\r\nso that results in a parquet file / arrow table with duplicate field names. Do we actually want to allow this being created?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350277100",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350277100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350277100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDI3NzEwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-08T14:32:38Z",
    "updated_at": "2017-12-08T14:32:38Z",
    "author_association": "MEMBER",
    "body": "> If so, that seems far more complex than requiring index columns be last or adding an index flag.\r\n\r\nIn my opinion, this is not more complex from a spec point of view. It is simply adding a requirement in the spec that the \"field_names\" should be unique. \r\nOf course it will add a bit complexity in the pyarrow code (see snippet below, but that is then the spec implementer's responsability), but the other options will also add complexity (eg if we use the guarantee of 'last items' in \"columns\" list, then fastparquet will need to update and keep the other format working for back compatibility)\r\n\r\nFor example, with current arrow master, and due to the assumption that index columns come last, `pyarrow` will read in a parquet file written by `fastparquet` wrongly (the resulting index names are wrong, the values are OK).\r\n\r\nThat said, I am not sure how important this specific corner case is that Tom raised. I don't know what arrow's view is on duplicate column names (see question above, it in any case seems allowed to create a Table with duplicate field names)\r\n\r\n---\r\n\r\nHere is a small snippet that would ensure unique index level field names. Of course it is more complex than the current `index_level_name = '__index_level_{:d}__'.format`; `list(map(index_level_name, range(len(index_levels))`, but I don't think it is overly complex:\r\n\r\n```\r\nIn [52]: def get_index_column_names(n_index_levels, column_names):\r\n    ...:     index_column_names = []\r\n    ...:     i = 0\r\n    ...:     for _ in range(n_index_levels):\r\n    ...:         while True:\r\n    ...:             index_level_name = '__index_level_{:d}__'.format(i)\r\n    ...:             i += 1\r\n    ...:             if index_level_name not in column_names:\r\n    ...:                 index_column_names.append(index_level_name)\r\n    ...:                 break\r\n    ...:     return index_column_names\r\n\r\nIn [53]: get_index_column_names(2, ['col'])\r\nOut[53]: ['__index_level_0__', '__index_level_1__']\r\n\r\nIn [54]: get_index_column_names(2, ['col', '__index_level_1__'])\r\nOut[54]: ['__index_level_0__', '__index_level_2__']\r\n\r\n```\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350479576",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350479576",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350479576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ3OTU3Ng==",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-09T15:49:37Z",
    "updated_at": "2017-12-09T15:49:37Z",
    "author_association": "MEMBER",
    "body": "Hm it does seem strange to me that pyarrow allows duplicate column names."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350479583",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350479583",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350479583,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ3OTU4Mw==",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-09T15:49:43Z",
    "updated_at": "2017-12-09T15:49:43Z",
    "author_association": "MEMBER",
    "body": "Let me investigate"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/350491938",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18201#issuecomment-350491938",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18201",
    "id": 350491938,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDQ5MTkzOA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-09T17:28:48Z",
    "updated_at": "2017-12-09T17:28:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "One more thing on ordering, fastparquet and pyarrow are both implicitly assuming that the order in `columns` is the order of the columns in the final DataFrame. We should make that explicit in the metadata spec.\r\n\r\nThat's another reason I would prefer to do away with the `index_columns` array in favor of an `is_index` field in each item in `columns`. Then we can say\r\n\r\n1. The (multi)index is all the items in `columns` where `is_index` is true. The order from implies outer- to inner-most level. A single item with `is_index` being true means a non-multiindex, and single-level multi-indexes are not allowed.\r\n2. The columns are from all the items in `columns` where `is_index` is false, ordered left to right.\r\n\r\nSorry to be pedantic about this. In real-world use-cases, no one (probably) will name their columns `__index_level_0__`, and probably won't even have duplicates. But I figure that getting this right is possible to do, so we may as well."
  }
]
