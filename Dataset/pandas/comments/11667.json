[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159334257",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-159334257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 159334257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTMzNDI1Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-24T16:49:25Z",
    "updated_at": "2015-11-24T16:49:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for putting this up.\n\nA bit busy ATM, but I'll try to review in the next couple weeks. Sorry for the wait!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/159536396",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-159536396",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 159536396,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1OTUzNjM5Ng==",
    "user": {
      "login": "mattilyra",
      "id": 1055719,
      "node_id": "MDQ6VXNlcjEwNTU3MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattilyra",
      "html_url": "https://github.com/mattilyra",
      "followers_url": "https://api.github.com/users/mattilyra/followers",
      "following_url": "https://api.github.com/users/mattilyra/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattilyra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattilyra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattilyra/subscriptions",
      "organizations_url": "https://api.github.com/users/mattilyra/orgs",
      "repos_url": "https://api.github.com/users/mattilyra/repos",
      "events_url": "https://api.github.com/users/mattilyra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattilyra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-25T08:47:24Z",
    "updated_at": "2015-11-25T08:47:24Z",
    "author_association": "NONE",
    "body": "No worries I've been quite busy as well. There's a related issue from yesterday https://github.com/pydata/pandas/issues/11692 - the bottom line all the builtin styles, not just `.set_precision` should allow defining the column display format.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/160441622",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-160441622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 160441622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDQ0MTYyMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-29T18:10:30Z",
    "updated_at": "2015-11-29T18:10:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "pls add some tests / whatsnew note enhancements / change the html-styling.ipynb to show the features as well.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162202749",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162202749",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162202749,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIwMjc0OQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T14:50:50Z",
    "updated_at": "2015-12-05T15:16:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattilyra going to throw out some partially-formed thoughts here, let me know what you think.\n\nIn light of https://github.com/pydata/pandas/issues/11692 (Styler not able to take formatters) I think we need a more general solution than what you've got here (but this will be part of that). I think we should determine the _display_ value in the `.translate` step, and have none (or very minimal) logic in the Template itself. The default display value would be the raw value itself. Instead of\n\n``` jinja\n{% for c in r %}  {# for each column in the row #}\n<{{c.type}} id=\"T_{{uuid}}{{c.id}}\" class=\"{{c.class}}\">\n    {% if c.value is number %}\n        {{c.value|round(precision)}}\n   {# more elifs for each type of formatting? This will get ugly #}\n    {% else %}\n        {{c.value}}\n    {% endif %}\n{% endfor %}\n```\n\nWe'd have\n\n``` jinja\n{% for c in r %}\n<{{c.type}} id=\"T_{{uuid}}{{c.id}}\" class=\"{{c.class}}\">\n        {{c.display_value}}  {# <-------- The change is here #}\n{% endfor %}\n```\n\nWe'd still need to define a nice API for users to map values to display values. Something like what you've got here would be good. And keeping shortcuts like `.set_precision` will still be useful, as you say.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162211296",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162211296",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162211296,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIxMTI5Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T15:12:29Z",
    "updated_at": "2015-12-05T15:12:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Separating the `display_value` from the `value` value would also help with wrapping the content in arbitrary tags (links and images for example)\n\n![screen shot 2015-12-05 at 9 10 55 am](https://cloud.githubusercontent.com/assets/1312546/11608479/37975fa6-9b30-11e5-9c3c-d7297fe0592b.png)\n\n(I modify the translated context directly here; users would have a method to do the wrapping)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162230787",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162230787",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162230787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIzMDc4Nw==",
    "user": {
      "login": "mattilyra",
      "id": 1055719,
      "node_id": "MDQ6VXNlcjEwNTU3MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattilyra",
      "html_url": "https://github.com/mattilyra",
      "followers_url": "https://api.github.com/users/mattilyra/followers",
      "following_url": "https://api.github.com/users/mattilyra/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattilyra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattilyra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattilyra/subscriptions",
      "organizations_url": "https://api.github.com/users/mattilyra/orgs",
      "repos_url": "https://api.github.com/users/mattilyra/repos",
      "events_url": "https://api.github.com/users/mattilyra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattilyra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T17:53:58Z",
    "updated_at": "2015-12-05T17:53:58Z",
    "author_association": "NONE",
    "body": "@TomAugspurger I agree that separating the display value makes sense. I don't quite get the point of having `.set_precision` if the formatting functionality goes into `.format`. Doesn't `.set_precision` become redundant in that case?\n\nI think you're second example should already be possible with the changes here, as you can pass arbitrary format strings as the format for each column. The logic is a little unclear in the template and should probably be moved to `._translate`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162231047",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162231047",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162231047,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIzMTA0Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T17:58:16Z",
    "updated_at": "2015-12-05T17:58:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "See my PR at https://github.com/pydata/pandas/pull/11768\n\nRoughly what I envision is that PR will define an API for people to apply custom formatters on a column / subset basis.\n\n> I don't quite get the point of having .set_precision if the formatting functionality goes into .format\n\n`.set_precision` might still be useful as a shorter way of getting the same way. Instead of `.set_format(x if not com.is_float(x) else \"{:2f}\".format(x))`, you type `.set_precision(2)`. I'm still not sure how `.format` / `.set_format` will work, how multiple formatters will be combined if at all.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162231767",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162231767",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162231767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIzMTc2Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T18:09:13Z",
    "updated_at": "2015-12-05T18:09:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> as you can pass arbitrary format strings as the format for each column\n\nI didn't notice that when I first looked through.\n\nAgain, this hasn't fully formed in my mind yet, but do you think that `.set_precision` can be rewritten in terms of https://github.com/pydata/pandas/pull/11768? So `set_precision` will have a nice API for setting different precision levels per column, etc. And the implementation will be modifying the internal dict (I called it `_display_funcs`) tracking how to format each cell. It doesn't need to know anything about the template or the `._translate` step.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162237986",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162237986",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162237986,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjIzNzk4Ng==",
    "user": {
      "login": "mattilyra",
      "id": 1055719,
      "node_id": "MDQ6VXNlcjEwNTU3MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattilyra",
      "html_url": "https://github.com/mattilyra",
      "followers_url": "https://api.github.com/users/mattilyra/followers",
      "following_url": "https://api.github.com/users/mattilyra/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattilyra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattilyra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattilyra/subscriptions",
      "organizations_url": "https://api.github.com/users/mattilyra/orgs",
      "repos_url": "https://api.github.com/users/mattilyra/repos",
      "events_url": "https://api.github.com/users/mattilyra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattilyra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T19:12:12Z",
    "updated_at": "2015-12-05T19:12:12Z",
    "author_association": "NONE",
    "body": "> I'm still not sure how .format / .set_format will work, how multiple formatters will be combined if at all.\n\nWhat do you mean multiple formatters?\n\n> but do you think that .set_precision can be rewritten in terms of #11768?\n\nYeah should be possible. Currently `.set_precision` takes a `dict` (`subset`) mapping column names to formats those columns should be displayed as. The format can be either an `int` (specifying the number of decimal points) or a python format string. This is then handled in the template (to be moved to `._translate`).\n\nI hadn't thought that you would call `.set_format` as `.set_format(x if not com.is_float(x) else \"{:2f}\".format(x))` but as `.set_format(a='{:.2f}')` (where `a` is a column name), or perhaps explicitly passing in a `dict` of column names to format values, as `.set_precision` currently does (in this PR) for `subset`. How you would add the formatting for one specific cell I'm not sure, could we use the `IndexSlice` to allow specifying which column/cell the user wants to specify the format for. That would at least be fairly general. Currently it would be difficult to handle that in the `template` but moving the `display_value` logic away from the template would also make that easier.\n\nIf we can nail down how this whole thing should roughly work I'm happy to push up a proposal implementation for this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162246177",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162246177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162246177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjI0NjE3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T21:06:00Z",
    "updated_at": "2015-12-05T21:06:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > I'm still not sure how .format / .set_format will work, how multiple formatters will be combined if at all.\n> \n> What do you mean multiple formatters?\n\nNevermind about that, probably a bad idea.\n\n> but as `.set_format(a='{:.2f}')`\n\nYes, I think you're right. Sorry about that this is all still coming together. The way I see `.format` working now is it takes a `formatter` which is either a single value to be applied to all items or a `dict` of `column names: formatter`. An individual formatter can be\n- a string `s` in which case `s.format(x)` is the display value (`x` is an individual cell)\n\n``` python\ndf.style.format('{:2f}')  # equivalent to `.set_precision(2)`\n```\n- a callable, in which case `c(x)` is the display value (is this even necessary)\n\nI hate to make the work you've done here obsolete :/  but it looks like a more general `.format` / `.set_format` option is the way to go. Interested in doing that? I have a sketch in https://github.com/pydata/pandas/pull/11768/files for how the `translate` step will work if you want to implement `.format` on top of that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162320914",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162320914",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162320914,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjMyMDkxNA==",
    "user": {
      "login": "mattilyra",
      "id": 1055719,
      "node_id": "MDQ6VXNlcjEwNTU3MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattilyra",
      "html_url": "https://github.com/mattilyra",
      "followers_url": "https://api.github.com/users/mattilyra/followers",
      "following_url": "https://api.github.com/users/mattilyra/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattilyra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattilyra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattilyra/subscriptions",
      "organizations_url": "https://api.github.com/users/mattilyra/orgs",
      "repos_url": "https://api.github.com/users/mattilyra/repos",
      "events_url": "https://api.github.com/users/mattilyra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattilyra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-06T14:26:37Z",
    "updated_at": "2015-12-06T14:26:37Z",
    "author_association": "NONE",
    "body": "Well it isn't really extra work as that's more or less how `.set_precision` works in this PR. I just need to transfer the logic of parsing the format value to `.translate` from the template and write examples. \n\nI think having the option os passing a callable as the formatter is also a good idea, it allows for a lot of flexibility. I think format callable could in that case take also the `row` and `column` indices not just the cell values - I can think of use cases where knowing for instance the row value of a `MultiIndex` becomes quite useful. \n\nI'm happy to keep working on this.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162321351",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162321351",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162321351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjMyMTM1MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-06T14:37:47Z",
    "updated_at": "2015-12-06T14:37:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I just need to transfer the logic of parsing the format value to .translate from the template and write examples.\n\nFeel free to repurpose this PR to take over `.format`. Are you comfortable enough with git to merge in my [branch](https://github.com/tomaugspurger/pandas/tree/style-display-format)? Or you can just copy-paste the changes. I've got a probably bad, certainly broken implementation of `.format` there that you can take pieces from.\n\nFor `.format` I think the signature should be\n\n```\ndef format(self, formatter, subset=None):\n```\n\nWhere `formatter` can be either 1. a scalar to be applied to the entire frame (or a subset with `subset!=None`) 2. a dict of `column: formatter`.\n\n> I think format callable could in that case take also the row and column\n\nThe trouble with this is that all styler functions written by users have to accept those as well, even if they don't use them, which could be ok.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/162324629",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-162324629",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 162324629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjMyNDYyOQ==",
    "user": {
      "login": "mattilyra",
      "id": 1055719,
      "node_id": "MDQ6VXNlcjEwNTU3MTk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1055719?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattilyra",
      "html_url": "https://github.com/mattilyra",
      "followers_url": "https://api.github.com/users/mattilyra/followers",
      "following_url": "https://api.github.com/users/mattilyra/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattilyra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattilyra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattilyra/subscriptions",
      "organizations_url": "https://api.github.com/users/mattilyra/orgs",
      "repos_url": "https://api.github.com/users/mattilyra/repos",
      "events_url": "https://api.github.com/users/mattilyra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattilyra/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-06T15:49:00Z",
    "updated_at": "2015-12-06T15:49:00Z",
    "author_association": "NONE",
    "body": "Well the user style functions can always take a `**kwargs` if they don't need the row/column index, it's easier to ignore them when you don't need them than it is to dig them up if they're not given to you.\n\nI think I'll manage with git, merging your branch into this one. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/167408921",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-167408921",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 167408921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzQwODkyMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-27T13:14:01Z",
    "updated_at": "2015-12-27T13:14:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattilyra Have you had a chance to work on this any more? Any unforeseen obstacles coming up?\n\nI'm going to try and knock out sparse MultiIndices and truncated reprs in the next week or two, and will base it off the changes to the template. Just post here if you see any significant changes that are needed, or if you want to split that template change off into a separate pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170552697",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-170552697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 170552697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDU1MjY5Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-11T13:45:56Z",
    "updated_at": "2016-01-11T13:45:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger status of this\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/195779744",
    "html_url": "https://github.com/pandas-dev/pandas/pull/11667#issuecomment-195779744",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11667",
    "id": 195779744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTc3OTc0NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-12T17:47:24Z",
    "updated_at": "2016-03-12T17:47:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing, but pls reopen if you'd like to update\n"
  }
]
