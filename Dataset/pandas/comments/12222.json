[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/179324097",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12222#issuecomment-179324097",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12222",
    "id": 179324097,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTMyNDA5Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-03T16:27:18Z",
    "updated_at": "2016-02-03T16:28:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is probably working as intended. `.iterrows` returns a Series which must have a single dtype. Pandas will try to cast the items in a row to as precise a dtype as it can so all the Falsey things get cast as `NaT`s. If you want to preserve the items try `DataFrame.itertuples()` which will return namedtuples.\n\nJust one thing though, I don't see\n\n> Having less than two None's following the datetime\n\nnot causing it to cast to datetimes:\n\n``` python\nIn [39]: next(df[['a', 'b']].iterrows())\nOut[39]:\n(0, a   2015-01-01\n b          NaT\n Name: 0, dtype: datetime64[ns])\n```\n\nCan you check on that?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/179430886",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12222#issuecomment-179430886",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12222",
    "id": 179430886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3OTQzMDg4Ng==",
    "user": {
      "login": "jim22k",
      "id": 2807270,
      "node_id": "MDQ6VXNlcjI4MDcyNzA=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2807270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jim22k",
      "html_url": "https://github.com/jim22k",
      "followers_url": "https://api.github.com/users/jim22k/followers",
      "following_url": "https://api.github.com/users/jim22k/following{/other_user}",
      "gists_url": "https://api.github.com/users/jim22k/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jim22k/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jim22k/subscriptions",
      "organizations_url": "https://api.github.com/users/jim22k/orgs",
      "repos_url": "https://api.github.com/users/jim22k/repos",
      "events_url": "https://api.github.com/users/jim22k/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jim22k/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-03T19:55:00Z",
    "updated_at": "2016-02-03T19:55:00Z",
    "author_association": "NONE",
    "body": "This shows the behavior I was noting:\n\n```\nIn [39]: df[['a', 'e']].iterrows().next()\nOut[39]: \n(0, a    2015-01-01 00:00:00\n e                     []\n Name: 0, dtype: object)\n\nIn [40]: df[['a', 'b', 'e']].iterrows().next()\nOut[40]: \n(0, a    2015-01-01 00:00:00\n b                   None\n e                     []\n Name: 0, dtype: object)\n\nIn [41]: df[['a', 'b', 'c', 'e']].iterrows().next()\nOut[41]: \n(0, a   2015-01-01\n b          NaT\n c          NaT\n e          NaT\n Name: 0, dtype: datetime64[ns])\n```\n\nHaving only `None`s and empty strings always gives `NaT`s.\n\n```\nIn [43]: df[['a', 'b', 'd', 'c', 'c', 'd', 'b']].iterrows().next()\nOut[43]: \n(0, a   2015-01-01\n b          NaT\n d          NaT\n c          NaT\n c          NaT\n d          NaT\n b          NaT\n Name: 0, dtype: datetime64[ns])\n```\n\nBut including a single `False` or zero in the row avoids the `NaT` conversion, even though those should also be considered \"falsy\".\n\n```\nIn [45]: df['h'] = [False]\n\nIn [46]: df.iterrows().next()\nOut[46]: \n(0, a    2015-01-01 00:00:00\n b                   None\n c                   None\n d                       \n e                     []\n f                     {}\n g                     {}\n h                  False\n Name: 0, dtype: object)\n\nIn [47]: df['h'] = [0]\n\nIn [48]: df.iterrows().next()\nOut[48]: \n(0, a    2015-01-01 00:00:00\n b                   None\n c                   None\n d                       \n e                     []\n f                     {}\n g                     {}\n h                      0\n Name: 0, dtype: object)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/183450214",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12222#issuecomment-183450214",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12222",
    "id": 183450214,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MzQ1MDIxNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-12T18:56:47Z",
    "updated_at": "2016-02-12T18:56:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "so the series inferer is a bit aggressive here.\n\n```\nIn [18]: v\nOut[18]: array([Timestamp('2015-01-01 00:00:00'), None, None, []], dtype=object)\n\nIn [19]: Series(v)\nOut[19]: \n0   2015-01-01\n1          NaT\n2          NaT\n3          NaT\ndtype: datetime64[ns]\n```\n\nThis is called and should not treat as a datetimeliek if this is the case.\n\n```\nIn [21]: pd.lib.infer_dtype(v)\nOut[21]: 'mixed'\n```\n\npull-requests welcome\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/479542806",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12222#issuecomment-479542806",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12222",
    "id": 479542806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3OTU0MjgwNg==",
    "user": {
      "login": "simonjayhawkins",
      "id": 13159005,
      "node_id": "MDQ6VXNlcjEzMTU5MDA1",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13159005?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonjayhawkins",
      "html_url": "https://github.com/simonjayhawkins",
      "followers_url": "https://api.github.com/users/simonjayhawkins/followers",
      "following_url": "https://api.github.com/users/simonjayhawkins/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonjayhawkins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonjayhawkins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonjayhawkins/subscriptions",
      "organizations_url": "https://api.github.com/users/simonjayhawkins/orgs",
      "repos_url": "https://api.github.com/users/simonjayhawkins/repos",
      "events_url": "https://api.github.com/users/simonjayhawkins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonjayhawkins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-03T15:37:13Z",
    "updated_at": "2019-04-03T15:37:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is fixed in master. now only needs a test to close issue.\r\n\r\n```\r\n>>> import pandas as pd\r\n>>> pd.__version__\r\n'0.25.0.dev0+355.g4814a2875'\r\n>>> import datetime\r\n>>> df = pd.DataFrame({'a': [datetime.datetime(2015,1,1)], 'b': [None], 'c': [None], 'd': [''], 'e': [[]],\r\n 'f': [set()], 'g': [{}]})\r\n>>> next(df.iterrows())\r\n(0, a    2015-01-01 00:00:00\r\nb                   None\r\nc                   None\r\nd\r\ne                     []\r\nf                     {}\r\ng                     {}\r\nName: 0, dtype: object)\r\n>>> df.values[0]\r\narray([Timestamp('2015-01-01 00:00:00'), None, None, '', list([]), set(),\r\n       {}], dtype=object)\r\n>>> pd.Series(df.values[0])\r\n0    2015-01-01 00:00:00\r\n1                   None\r\n2                   None\r\n3\r\n4                     []\r\n5                     {}\r\n6                     {}\r\ndtype: object\r\n>>>\r\n```"
  }
]
