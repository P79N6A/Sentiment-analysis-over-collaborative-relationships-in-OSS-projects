[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234751859",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-234751859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 234751859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc1MTg1OQ==",
    "user": {
      "login": "codecov-io",
      "id": 8655789,
      "node_id": "MDQ6VXNlcjg2NTU3ODk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8655789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov-io",
      "html_url": "https://github.com/codecov-io",
      "followers_url": "https://api.github.com/users/codecov-io/followers",
      "following_url": "https://api.github.com/users/codecov-io/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov-io/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov-io/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov-io/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov-io/orgs",
      "repos_url": "https://api.github.com/users/codecov-io/repos",
      "events_url": "https://api.github.com/users/codecov-io/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov-io/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-24T01:54:06Z",
    "updated_at": "2016-09-07T01:43:05Z",
    "author_association": "NONE",
    "body": "## [Current coverage](https://codecov.io/gh/pydata/pandas/pull/13767?src=pr) is 85.25% (diff: 100%)\n\n> Merging [#13767](https://codecov.io/gh/pydata/pandas/pull/13767?src=pr) into [master](https://codecov.io/gh/pydata/pandas/branch/master?src=pr) will decrease coverage by **<.01%**\n\n``` diff\n@@             master     #13767   diff @@\n==========================================\n  Files           139        139          \n  Lines         50496      50491     -5   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n- Hits          43049      43044     -5   \n  Misses         7447       7447          \n  Partials          0          0          \n```\n\n> Powered by [Codecov](https://codecov.io?src=pr). Last update [8023029...96a372e](https://codecov.io/gh/pydata/pandas/compare/80230292e19e377f5b11409e112500b6a180e18a...96a372e09005c29eba935b9d1778537cbfae50c9?src=pr)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/234782696",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-234782696",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 234782696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNDc4MjY5Ng==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-24T15:15:41Z",
    "updated_at": "2016-07-24T15:35:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "What is the actual \"problem\" or use case here?\n\nI'm opposed to this PR: IMO `concat()` should not change the categories. In my thinking `(pd.Series([1, 2], dtype='category'), pd.Series([3, 4], dtype='category')` is as (un)similar as `([1,2], [\"A\", \"B\"])`. The latter might cast to a type which can take both (`object`) but not to a new `int_or_string` type...\n\nSo, I find the master variant more in line with that thinking. What I'm not sure is whether it should raise or (as it does now) convert to object. Other cat handling of two different cats (apart from the special `union_categoricals`) raises but pandas in general casts to object. As cat handling deviates in other cases from normal pandas casting rules, IMO it should error here, too.\n\nI can see a logic for \"categorical + iterable of the same values as in the categories = new categorical with the same categories as the first one\" as that can be thought similar as `cat[x] = value`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235107705",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-235107705",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 235107705,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTEwNzcwNQ==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-25T22:37:24Z",
    "updated_at": "2016-07-26T07:09:37Z",
    "author_association": "MEMBER",
    "body": "@janschulz thx for sharing your opinion. Can you illustrate your intention covering all possible patterns? (I copied mine from #13524).\n- concat 2 categories -> use the rule of `union_categorical`\n- concat category and other dtype (which values are all in the category, including empty) -> category\n  - this rule is applied regardless of order (if there is at least one category in concatenating values)\n  - the property like `ordered` should be preserved.\n- concat category and other dtype (which values are not in the category) -> not category (dtype is infered)  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235321781",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-235321781",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 235321781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTMyMTc4MQ==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T16:19:58Z",
    "updated_at": "2016-07-26T16:23:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I come from using catagoricals as things like lickert scales: \"Fully agree ... full disagree\" and such things. From that standpoint, I usually read data in, convert to cat and replace the categories with the full set.  In that case the categories have a specific meaning (e.g the lickert scale or in other cases the 50 US states or such things which are fixed). \n\nFrom that comes the rule that you shouldn't be able to set a value in the cat column to something not in categories (adding \"Germany\" to a cat encoding the 50 US states makes no sense). And from that the \"error if combining two _different_ categories\" rule. So I'm fully happy that there isn't any \"default\" (i.e. anything in the `cat` accessor or in the default \"non-categorical-specific\" API like `concat` and similar functions) way to combine two **different** categories and trying to do it would error.\n\nI see `union_categorical` as a way to use a categorical as a memory saving string type and as in the other issues where such additions/changes were proposed, I would love to see such a type instead of changing categorical to fit that needs.\n\nThe second usecase is  as an internal helper for someone using it with reading in csv files _before_ letting the user do some \"meaningful\" replacements.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235434908",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-235434908",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 235434908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTQzNDkwOA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-26T23:15:44Z",
    "updated_at": "2016-07-26T23:15:44Z",
    "author_association": "MEMBER",
    "body": "Thanks for sharing the usecase. Based on this, what the \"rules\" on your mind are? can u list up possible rules like: `category + category (same category) = category` covering possible patterns to discuss the expected behavior.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/235698478",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-235698478",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 235698478,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTY5ODQ3OA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T19:46:54Z",
    "updated_at": "2016-07-27T20:17:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "IMO these are the rules:\n- category + setting with values in the categories = fine\n- category + setting with values not in the categories = error (not converting to object/common \"normal\" type)\n- category + same category configuration (\"order\" +  categories OR \"unordered\" + same categories (the unordered case could actually be less strict and only test if the set of categories is the same)) = fine\n- category + different category = error\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236150694",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-236150694",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 236150694,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE1MDY5NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T10:45:49Z",
    "updated_at": "2016-07-29T10:45:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @janschulz rules, except where `error` -> just coerce to the base type (of the categorical) if there is one, if multiple categoricals and different base types then must upcast (potentially to object).\n\nThe idea is that `concat/append` would always work, whether you add new categoricals or not, but the dtype will be preserved in a strict way. \n\nI suppose that we could further add an argument to `concat` itself that just calls `union_categoricals`, IOW allows a non-strict interpretation. maybe `union_categoricals=False` as the default\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236156897",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-236156897",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 236156897,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE1Njg5Nw==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T11:24:09Z",
    "updated_at": "2016-07-29T11:29:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback \n\n> > category + setting with values not in the categories = error (not converting to object/common \"normal\" type)\n> \n> except where error -> just coerce to the base type (of the categorical) if there is one, if multiple categoricals and different base types then must upcast (potentially to object).\n\nIf you also want to change setting as well, then this is a whole different thing... IMO the above rules are what currently applies.\n\nI'm still not convinced:  So what happens if I have a Categorical which is encoded as `complete agree ... completely disagree` (5 step lickert scale) and now I concat a column which is encoded as a categorical which encode the 50 US States. It will now work (both are string dtypes), but the meaning is completely screwed. Or imagine things like two categoricals which have one category in common (50 US states + 50 states capitals -> washington is in both...): will that mean that the final categorical have `x+y-1` categories? In my opinion, each categorical configuration is it's own dtype (is_dtype_equal in Categorical actually tests just that: https://github.com/pydata/pandas/blob/master/pandas/core/categorical.py#L1791-L1809), so upcasting to a combined one is the same as removing all meaning from the categorical configuration = upcasting to object.\n\nWhat is the actual usecase here: internal csv parsing of different files to a single dataframe? If so, then in my eyes this looks (again :-)) like the \"pd-String\" usecase: you encode it directly to save memory and then you are have the problem to concat two dfs because you don't know the strings (=you have no beforehand knowledge about the expected categories). \n\nIf so, then there are multiple different ways to solve this:\n- add a `pd.String` dtype :-)\n- add a convenience method like `pd.concat_nonstrict()` which would basically do a `union_categorical` on the category columns.\n- add a `nonstrict_category_checks=False` to `concat/append` which would basically switch to `pd.concat_nonstrict()` behaviour above.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236159863",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-236159863",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 236159863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjE1OTg2Mw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-29T11:43:02Z",
    "updated_at": "2016-07-29T11:49:32Z",
    "author_association": "MEMBER",
    "body": "I agree that `concat` shouldn't fail, as users understand what they're doing. Considering all dtypes (not only category), coercing to the object dtype should be a basic rule (such as `DatetimeTZ` with different tz).\n\nBased on this, I've organized the rules as below table.\n\n| left | right | result |\n| --- | --- | --- |\n| category | category (identical categories and ordered) | category |\n| category | category (different categories or ordered) | object (dtype is inferred) |\n| category | not category | object (dtype is inferred) |\n\nAlso, adding following options to `concat` should cover all cases:\n- `union_categorical` (default `False`): work as @jreback suggested. Apply `union_categorical` rule to concat `Categorical`. \n- `strict` (default `False`): raise when different dtype / different categories are being concatenated.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/236573226",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-236573226",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 236573226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjU3MzIyNg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T12:58:11Z",
    "updated_at": "2016-08-01T12:58:11Z",
    "author_association": "MEMBER",
    "body": "once updated based on the discussion. Note that following fixed are not included:\n- `union_categoricals` with `Index.append` (being included in #13660) \n- `strict` option (should be after #13660)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237519165",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-237519165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 237519165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzUxOTE2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-04T10:47:26Z",
    "updated_at": "2016-08-04T10:47:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @janschulz \ncc @chris-b1\n\ncan you have a look.\n\n@wesm ? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237717349",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-237717349",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 237717349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzcxNzM0OQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-04T23:36:07Z",
    "updated_at": "2016-08-04T23:36:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "This pair of results was unexpected - it seems like either both should be `Categorical`, or both the category's dtype?  Although I'm not sure which.\n\n``` python\nIn [6]: pd.__version__\nOut[6]: '0.18.1+314.gc82629c'\n\nIn [4]: pd.concat([pd.Series([1,2], dtype='category'),\n   ...:            pd.Series([2,1])], union_categoricals=True)\nOut[4]: \n0    1\n1    2\n0    2\n1    1\ndtype: category\nCategories (2, int64): [1, 2]\n\nIn [5]: pd.concat([pd.Series([1,2], dtype='category'),\n   ...:            pd.Series([2,1, 3])], union_categoricals=True)\nOut[5]: \n0    1\n1    2\n0    2\n1    1\n2    3\ndtype: int64\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237806603",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-237806603",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 237806603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzgwNjYwMw==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T09:33:56Z",
    "updated_at": "2016-08-05T09:33:56Z",
    "author_association": "MEMBER",
    "body": "@chris-b1 Agreed the above is confusing. The first example keeps category dtype as 2nd values are all in 1st categories.\n\nMaybe the following rule is simpler? (category + non-category always results in non-category, regardless of `union_categoricals`)\n\n| left | right | result | `union_categoricals=True` |\n| --- | --- | --- | --- |\n| category | category (identical categories) | category | category |\n| category | category (different categories, both not ordered) | object (dtype is inferred) | category |\n| category | category (different categories, either one is ordered) | object (dtype is inferred) | object (dtype is inferred) |\n| category | not category | object (dtype is inferred) | object (dtype is inferred) |\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237820923",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-237820923",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 237820923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzgyMDkyMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T10:48:22Z",
    "updated_at": "2016-08-05T10:48:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sinhrks I like that table better.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/237833322",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-237833322",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 237833322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzgzMzMyMg==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T12:02:34Z",
    "updated_at": "2016-08-05T12:02:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, that makes sense to me. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238011236",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-238011236",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 238011236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAxMTIzNg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T07:44:07Z",
    "updated_at": "2016-08-06T07:44:07Z",
    "author_association": "MEMBER",
    "body": "Thanks for the feedback. Updated the impl based on the above table.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238030521",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-238030521",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 238030521,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODAzMDUyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T16:01:36Z",
    "updated_at": "2016-08-06T16:01:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @mrocklin\n\n```\nIn [7]: s1 = Series(pd.Categorical(list('baca'),categories=list('abc')))\n\nIn [8]: s2 = Series(pd.Categorical(list('baca'),categories=list('bac')))\n\nIn [9]: s1\nOut[9]: \n0    b\n1    a\n2    c\n3    a\ndtype: category\nCategories (3, object): [a, b, c]\n\nIn [10]: s2\nOut[10]: \n0    b\n1    a\n2    c\n3    a\ndtype: category\nCategories (3, object): [b, a, c]\n\nIn [11]: s1.cat.codes\nOut[11]: \n0    1\n1    0\n2    2\n3    0\ndtype: int8\n\nIn [12]: s2.cat.codes\nOut[12]: \n0    0\n1    1\n2    2\n3    1\ndtype: int8\n\nIn [13]: pd.concat([s1,s2],union_categoricals=True)\nOut[13]: \n0    b\n1    a\n2    c\n3    a\n0    b\n1    a\n2    c\n3    a\ndtype: category\nCategories (3, object): [a, b, c]\n\nIn [14]: pd.concat([s1,s2],union_categoricals=True).cat.codes\nOut[14]: \n0    1\n1    0\n2    2\n3    0\n0    1\n1    0\n2    2\n3    0\ndtype: int8\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238046130",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-238046130",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 238046130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODA0NjEzMA==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T20:03:08Z",
    "updated_at": "2016-08-06T20:03:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cool.  I'm very glad to see this.  Dask.dataframe can definitely make use\nof this feature.\n\nOn Sat, Aug 6, 2016 at 12:01 PM, Jeff Reback notifications@github.com\nwrote:\n\n> cc @mrocklin https://github.com/mrocklin\n> \n> In [7]: s1 = Series(pd.Categorical(list('baca'),categories=list('abc')))\n> \n> In [8]: s2 = Series(pd.Categorical(list('baca'),categories=list('bac')))\n> \n> In [9]: s1\n> Out[9]:\n> 0    b\n> 1    a\n> 2    c\n> 3    a\n> dtype: category\n> Categories (3, object): [a, b, c]\n> \n> In [10]: s2\n> Out[10]:\n> 0    b\n> 1    a\n> 2    c\n> 3    a\n> dtype: category\n> Categories (3, object): [b, a, c]\n> \n> In [11]: s1.cat.codes\n> Out[11]:\n> 0    1\n> 1    0\n> 2    2\n> 3    0\n> dtype: int8\n> \n> In [12]: s2.cat.codes\n> Out[12]:\n> 0    0\n> 1    1\n> 2    2\n> 3    1\n> dtype: int8\n> \n> In [13]: pd.concat([s1,s2],union_categoricals=True)\n> Out[13]:\n> 0    b\n> 1    a\n> 2    c\n> 3    a\n> 0    b\n> 1    a\n> 2    c\n> 3    a\n> dtype: category\n> Categories (3, object): [a, b, c]\n> \n> In [14]: pd.concat([s1,s2],union_categoricals=True).cat.codes\n> Out[14]:\n> 0    1\n> 1    0\n> 2    2\n> 3    0\n> 0    1\n> 1    0\n> 2    2\n> 3    0\n> dtype: int8\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/pydata/pandas/pull/13767#issuecomment-238030521, or mute\n> the thread\n> https://github.com/notifications/unsubscribe-auth/AASszIoHtnmUQ3HtH5vpWATcLOeo52HKks5qdK_xgaJpZM4JTey6\n> .\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238053003",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-238053003",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 238053003,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODA1MzAwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-06T22:46:53Z",
    "updated_at": "2016-08-06T22:46:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "lgtm. @jorisvandenbossche @TomAugspurger @shoyer comments?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238110960",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-238110960",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 238110960,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODExMDk2MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-07T21:53:32Z",
    "updated_at": "2016-08-07T21:53:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "👍 to the last table.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240881902",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-240881902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 240881902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg4MTkwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-18T22:58:06Z",
    "updated_at": "2016-08-18T22:58:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "anyone want to summarize where we are on this PR and what if any issues remain for discussion?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/240893290",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-240893290",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 240893290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDg5MzI5MA==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T00:05:17Z",
    "updated_at": "2016-08-19T00:05:17Z",
    "author_association": "MEMBER",
    "body": "Remaining discussion is only one (pls allow me if i missed something)\n- What the `concat` keyword name should be (`union_categoricals`, or descriptive name like `less_strict_categorical_checks`)\n\nNow I feel `less_strict...` may not be enough clear for users, as it doesn't say what the result be (less strictly keep category or coerces to object). But leave decision as I'm not a native:)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241128275",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-241128275",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 241128275,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTEyODI3NQ==",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-19T20:36:23Z",
    "updated_at": "2016-08-19T20:36:44Z",
    "author_association": "MEMBER",
    "body": "This seems okay to me. As an aside, having a type-specific argument in `pd.concat` isn't ideal, but I'm not sure what's better. You could be more explicit / general with something like\n\n``` python\noptions = {\n    'types': {\n        'category': {\n            'union': True\n        }\n    }\n}\npd.concat(chunks, options=options)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241201119",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-241201119",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 241201119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTIwMTExOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T13:48:18Z",
    "updated_at": "2016-08-20T13:48:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok with the option specification as proposed by @wesm . We should create an issue to make this a bit more general, maybe using: [attrdict](https://github.com/bcj/AttrDict).\n\nBut can change to using this for now (as in reality its used only internally ATM).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241201526",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-241201526",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 241201526,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTIwMTUyNg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T13:56:28Z",
    "updated_at": "2016-08-20T13:56:54Z",
    "author_association": "MEMBER",
    "body": "or remove `union_categoricals` arg ATM. It gets less important because we've decided concatenating different categories coerces to object (users can re-categorize the object if they want).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241201591",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-241201591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 241201591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTIwMTU5MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T13:57:43Z",
    "updated_at": "2016-08-20T13:57:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "you need for read_csv\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/241201762",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-241201762",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 241201762,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTIwMTc2Mg==",
    "user": {
      "login": "sinhrks",
      "id": 1696302,
      "node_id": "MDQ6VXNlcjE2OTYzMDI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1696302?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sinhrks",
      "html_url": "https://github.com/sinhrks",
      "followers_url": "https://api.github.com/users/sinhrks/followers",
      "following_url": "https://api.github.com/users/sinhrks/following{/other_user}",
      "gists_url": "https://api.github.com/users/sinhrks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sinhrks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sinhrks/subscriptions",
      "organizations_url": "https://api.github.com/users/sinhrks/orgs",
      "repos_url": "https://api.github.com/users/sinhrks/repos",
      "events_url": "https://api.github.com/users/sinhrks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sinhrks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-20T14:01:31Z",
    "updated_at": "2016-08-20T14:01:31Z",
    "author_association": "MEMBER",
    "body": "ah, i meant `union categoricals` option in `concat`. the function itself is useful.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/243752240",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-243752240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 243752240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzc1MjI0MA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T12:45:18Z",
    "updated_at": "2016-08-31T12:45:18Z",
    "author_association": "MEMBER",
    "body": "OK, we have to take a decision here if we want to include this one for 0.19. I tried to summarise below, but it has gotten a bit long :-) \nBut **maybe the conclusion is just that this can be merged as is?** (or at least part 1)\n\n---\n\n### **1. dtype of return value of `concat` (in the default case, without specifying kwargs)**\n\nI think most people agreed with the table above: https://github.com/pydata/pandas/pull/13767#issuecomment-237806603? \nThis comes down to returning object dtype where you now got \"ValueError: incompatible categories in categorical concat\"\n\nAdditionally:\n- concatting a categorical Series with a plain Series that only has values included in the categories no longer returns a Categorical Series. Eg with current PR:\n  \n  ```\n  In [20]: s1 = pd.Series(['a', 'b'], dtype='category')\n  \n  In [21]: pd.concat([s1, s1]).dtype\n  Out[21]: category\n  \n  In [22]: pd.concat([s1, s1.astype(object)]).dtype\n  Out[22]: dtype('O')\n  ```\n  \n  On current master this gives two times `'category'`. \n  @sinhrks If we keep this, this should actually be mentioned in the whatsnew docs I think.\n- you do not get the clear error any more when concatting categoricals with different categories, but a silent downcast to object dtype (or the dtype of the categories). This can possibly give surprises further down the road when users wonder why they have no longer a category dtype. \n\nAs @sinhrks said, we can also already include this part, and leave part 2 (below) for a later PR\n\n### **2. addition of new keyword to `concat` to union categoricals with different categories**\n\nCurrent PR proposes to add a `union_categoricals` keyword to `concat`, which lets you concatenate categoricals with different categories (like the `union_categoricals` function does). Default would be False.\n\nThere was some discussion about the name to use. @wesm suggested to use a dict to pass type specific options. But that is maybe something we should first explore further to see if there are other use cases for such a construct?\n\nAs I understand, this part of the PR is less pressing, as users can also use the `union_categoricals` function directly (although IMO it would be nice to not have to expose this function, but let people use `concat`)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/243761465",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-243761465",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 243761465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0Mzc2MTQ2NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-31T13:21:07Z",
    "updated_at": "2016-08-31T13:21:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "1) +1\n2) I think we _do_ need to do something, but ok to wait and add this later. \n\nRight now `union_categoricals` is a good soln, it is a semi-private API, but likely to be exposed to a developer API at some point. Since we are adding API, can just push this back a bit.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244550869",
    "html_url": "https://github.com/pandas-dev/pandas/pull/13767#issuecomment-244550869",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13767",
    "id": 244550869,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU1MDg2OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-03T14:54:29Z",
    "updated_at": "2016-09-03T14:54:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, let's take out `union_categoricals` arg to `concat` for now and put it in a separate PR, @sinhrks ?\n"
  }
]
