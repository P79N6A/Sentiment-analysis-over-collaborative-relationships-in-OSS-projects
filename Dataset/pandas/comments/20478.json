[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375928626",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20478#issuecomment-375928626",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20478",
    "id": 375928626,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTkyODYyNg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-24T22:12:26Z",
    "updated_at": "2018-03-24T22:12:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "it wouldn't make any sense to actually convert this as you are creating a new ``Series``, which holds only first class ``Timestamps``. you could store ``datetime``, but you would have to be quite explicit about it.\r\n\r\nyou could do this\r\n\r\n```\r\nIn [16]: pd.Series([v.to_pydatetime() for v in ts_df.ts], dtype=object)\r\nOut[16]: \r\n0    1970-01-01 00:00:00+00:00\r\n1    1970-01-01 01:00:00+00:00\r\n2    1970-01-01 02:00:00+00:00\r\n3    1970-01-01 03:00:00+00:00\r\ndtype: object\r\n```\r\n\r\nthough there is no good reason as this is non-idiomatic, and competely non-performant. pandas is highly optimized to hold datetimes (with and w/o tz) already. "
  }
]
