[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413065227",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413065227",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413065227,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzA2NTIyNw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-08-15T01:18:29Z",
    "updated_at": "2018-08-16T10:47:41Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22344?src=pr&el=h1) Report\n> Merging [#22344](https://codecov.io/gh/pandas-dev/pandas/pull/22344?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/cf70d11a25ec59a5b630921d86759c7fa49884db?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22344/graphs/tree.svg?height=150&width=650&src=pr&token=eZ4WkYLtcO)](https://codecov.io/gh/pandas-dev/pandas/pull/22344?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master   #22344   +/-   ##\n=======================================\n  Coverage   92.05%   92.05%           \n=======================================\n  Files         169      169           \n  Lines       50709    50709           \n=======================================\n  Hits        46679    46679           \n  Misses       4030     4030\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.46% <ø> (ø)` | :arrow_up: |\n| #single | `42.25% <ø> (ø)` | :arrow_up: |\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22344?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22344?src=pr&el=footer). Last update [cf70d11...29972ea](https://codecov.io/gh/pandas-dev/pandas/pull/22344?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413339785",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413339785",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413339785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzMzOTc4NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T21:16:09Z",
    "updated_at": "2018-08-15T21:16:09Z",
    "author_association": "MEMBER",
    "body": "Do you know if there is any benefit in using `get_value_1d`? (what was the original reason for using it?)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413342439",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413342439",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413342439,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzM0MjQzOQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T21:25:19Z",
    "updated_at": "2018-08-15T21:25:19Z",
    "author_association": "MEMBER",
    "body": "> Do you know if there is any benefit in using get_value_1d? (what was the original reason for using it?)\r\n\r\nThis and #22329 were both spun off of a branch that was seeing if that could be made unnecessary.   \r\nFor the most part, we can replace `get_value_1d(arr, i)` with `arr[i]` just fine.  The one place in the tests where that doesn't work is a code both that goes through `SparseArray.__getitem__`, because that leads to a `RecursionError`.  IIUC several other pandas objects used to subclass `np.ndarray`, so may have needed the same workaround to effectively call `ndarray.__getitem__(arr, i)`.\r\n\r\nAfter this and #22329 I'll be ready to make a PR to get rid of numpy_helper altogether, since `get_value_1d` and `set_value_1d` can be made unnecessary."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413344524",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413344524",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413344524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzM0NDUyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-15T21:32:21Z",
    "updated_at": "2018-08-15T21:32:21Z",
    "author_association": "MEMBER",
    "body": "OK. It seems to have been introduced to make sure Series getitem would return numpy scalars: https://github.com/pandas-dev/pandas/commit/96375da37cde2072caaf2e46f16174725aa0e492. But I suppose that is now covered by the tests."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413410831",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413410831",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413410831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQxMDgzMQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T03:11:25Z",
    "updated_at": "2018-08-16T03:11:25Z",
    "author_association": "MEMBER",
    "body": "> pls perf check this\r\n\r\n`lib.infer_dtype` with mixed-dtype should go through one of the affected paths:\r\n\r\n```\r\nIn [3]: arr = np.array(range(10000), dtype='O')\r\n\r\nIn [4]: arr[100] = 'foo'\r\n```\r\n\r\nmaster:\r\n```\r\nIn [10]: %timeit pd.lib.infer_dtype(arr)\r\n10000 loops, best of 3: 21.5 µs per loop\r\n\r\nIn [11]: %timeit pd.lib.infer_dtype(arr)\r\n10000 loops, best of 3: 25.6 µs per loop\r\n\r\nIn [12]: %timeit pd.lib.infer_dtype(arr)\r\n10000 loops, best of 3: 19.9 µs per loop\r\n```\r\n\r\nPR:\r\n```\r\nIn [7]: %timeit pd.lib.infer_dtype(arr)\r\n10000 loops, best of 3: 20.1 µs per loop\r\n\r\nIn [8]: %timeit pd.lib.infer_dtype(arr)\r\n10000 loops, best of 3: 24.3 µs per loop\r\n\r\nIn [9]: %timeit pd.lib.infer_dtype(arr)\r\n10000 loops, best of 3: 19.9 µs per loop\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413450618",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413450618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413450618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzQ1MDYxOA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T07:20:45Z",
    "updated_at": "2018-08-16T07:20:45Z",
    "author_association": "MEMBER",
    "body": "Timings look good."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413503632",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413503632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413503632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzUwMzYzMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T10:47:32Z",
    "updated_at": "2018-08-16T10:47:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks. can you do a PR with those as asv's? (if not already there)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413548482",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413548482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413548482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU0ODQ4Mg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T13:38:40Z",
    "updated_at": "2018-08-16T13:38:40Z",
    "author_association": "MEMBER",
    "body": ">  can you do a PR with those as asv's?\r\n\r\nSure.  I think for low-level cython stuff we may need an extra layer (in cython) to call these tiny functions in a loop."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413549300",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413549300",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413549300,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU0OTMwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T13:40:52Z",
    "updated_at": "2018-08-16T13:40:52Z",
    "author_association": "MEMBER",
    "body": "> Sure. I think for low-level cython stuff we may need an extra layer (in cython) to call these tiny functions in a loop.\r\n\r\nThat should not be needed for `infer_dtype` (and also for the others I would try to check what the actual \"higher level\" usage is)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413554281",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413554281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413554281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU1NDI4MQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T13:56:23Z",
    "updated_at": "2018-08-16T13:56:23Z",
    "author_association": "MEMBER",
    "body": "> That should not be needed for infer_dtype\r\n\r\nYou're right about infer_dtype, but I'm suggesting we directly benchmark the affected code."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413555856",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413555856",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413555856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzU1NTg1Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T14:01:10Z",
    "updated_at": "2018-08-16T14:01:10Z",
    "author_association": "MEMBER",
    "body": "IMO we should always try to test higher level code / (semi) public APIs (to the extent possible of course). So if possible (if there is a reasonable higher level code, such as `infer_dtypes` already is) I would not directly benchmark the affected code. Otherwise that makes the benchmarks very internals-specific (making it more difficult to change internals, or to compare to alternative implementations)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/413601025",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22344#issuecomment-413601025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22344",
    "id": 413601025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMzYwMTAyNQ==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-16T16:14:43Z",
    "updated_at": "2018-08-16T16:14:43Z",
    "author_association": "MEMBER",
    "body": "> So if possible (if there is a reasonable higher level code, such as infer_dtypes already is) I would not directly benchmark the affected code.\r\n\r\nMy issue with this is that the code affected by this PR constitutes a tiny fraction of the runtime of `infer_dtypes`.  asv results are mostly noise anyway; more focused benchmarks can chip away at that problem.\r\n\r\n > Otherwise that makes the benchmarks very internals-specific (making it more difficult to change internals, or to compare to alternative implementations)\r\n\r\nPart of the motivation I have in mind comes from a change I was looking at to implement pure-cython implementations of `np.zeros(n, dtype=np.float64)`.  The benchmark I wrote for that (unfortunately now-deleted) branch looked something like:\r\n\r\n```\r\ndef time_zeros(size=10000, loops=1000, version=0):\r\n     if version == 0:\r\n          for n in range(loops):\r\n              out = np.zeros(size, dtype=np.float64)\r\n    else:\r\n        for n in range(loops):\r\n            out = zeros1d(size)\r\n    return out\r\n```\r\n\r\nWith comments documenting the runtime measurements for each version.  The idea being to measure+document the alternative implementations."
  }
]
