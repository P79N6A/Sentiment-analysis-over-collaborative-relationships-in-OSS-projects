[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/463916276",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25318#issuecomment-463916276",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25318",
    "id": 463916276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MzkxNjI3Ng==",
    "user": {
      "login": "yichen8",
      "id": 43142019,
      "node_id": "MDQ6VXNlcjQzMTQyMDE5",
      "avatar_url": "https://avatars1.githubusercontent.com/u/43142019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yichen8",
      "html_url": "https://github.com/yichen8",
      "followers_url": "https://api.github.com/users/yichen8/followers",
      "following_url": "https://api.github.com/users/yichen8/following{/other_user}",
      "gists_url": "https://api.github.com/users/yichen8/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yichen8/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yichen8/subscriptions",
      "organizations_url": "https://api.github.com/users/yichen8/orgs",
      "repos_url": "https://api.github.com/users/yichen8/repos",
      "events_url": "https://api.github.com/users/yichen8/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yichen8/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T05:50:50Z",
    "updated_at": "2019-02-15T05:50:50Z",
    "author_association": "NONE",
    "body": "In `pandas.__version__ == '0.23.4'`, you can get what you excepted output. \r\n\r\nOf course, this version gets:\r\n```python\r\n>>> pd.concat([pd.DataFrame.from_dict({'A': c2}), pd.DataFrame.from_dict({'A': c2})], axis=0)\r\n     A\r\n0  NaN\r\n1    B\r\n2    B\r\n3    C\r\n0  NaN\r\n1    B\r\n2    B\r\n3    C\r\n```\r\nPython works well. \r\n\r\nAnd then I use `pandas==0.24.1`  and run these codes\r\n```python\r\nc2 = pd.Categorical(pd.Series(c1), categories=c1.categories[1:])\r\n```\r\nyes, my Python died.  But we can check `c2.codes`, output:\r\n`array([0, 1, 1, 2])`\r\n\r\nThat may be the error lies. In fact we want:\r\n```python\r\n>>> c2.codes\r\narray([-1, 0, 0, 1])\r\n```\r\nand `pd.Categorical` 's help doc says:\r\n`If categories are given, values not in categories will be replaced with NaN.`\r\n and the `NaN` is the code `-1` if everything is OK,  but \r\n```python\r\nc2 = pd.Categorical(pd.Series(c1), categories=c1.categories[1:])\r\n```\r\ndoes not work well. \r\n\r\nWe check the source code `pandas.core.arrays.categorical.py` in `pandas==0.24.1` and we find in class `Categrical`  it runs:\r\n```python\r\n# at about 326 lines\r\nif is_categorical(values): # this situation is True\r\n            # GH23814, for perf, if values._values already an instance of\r\n            # Categorical, set values to codes, and run fastpath\r\n            if (isinstance(values, (ABCSeries, ABCIndexClass)) and\r\n               isinstance(values._values, type(self))):\r\n                values = values._values.codes.copy()\r\n                fastpath = True\r\n```\r\nWe find it sets `values` to codes, then call function `coerce_indexer_dtype` and get the `codes`. But in `pandas == 0.23.4` it runs:\r\n```python\r\n# at about 363 lines\r\nelif is_categorical_dtype(values):\r\n            old_codes = (values.cat.codes if isinstance(values, ABCSeries)\r\n                         else values.codes)\r\n            codes = _recode_for_categories(old_codes, values.dtype.categories,\r\n                                           dtype.categories)\r\n```\r\nHowever, I don't know why the latter version has this changes. So if you want to get excepted output temporarily, try to use `pandas == 0.23.4` or know these changes and tell me..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464065293",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25318#issuecomment-464065293",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25318",
    "id": 464065293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDA2NTI5Mw==",
    "user": {
      "login": "batterseapower",
      "id": 18488,
      "node_id": "MDQ6VXNlcjE4NDg4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/18488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/batterseapower",
      "html_url": "https://github.com/batterseapower",
      "followers_url": "https://api.github.com/users/batterseapower/followers",
      "following_url": "https://api.github.com/users/batterseapower/following{/other_user}",
      "gists_url": "https://api.github.com/users/batterseapower/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/batterseapower/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/batterseapower/subscriptions",
      "organizations_url": "https://api.github.com/users/batterseapower/orgs",
      "repos_url": "https://api.github.com/users/batterseapower/repos",
      "events_url": "https://api.github.com/users/batterseapower/events{/privacy}",
      "received_events_url": "https://api.github.com/users/batterseapower/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T14:17:30Z",
    "updated_at": "2019-02-15T14:17:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, it does work with `0.23.x`: I had a bunch of code relying on this, it started mysteriously segfaulting when I upgraded.\r\n\r\nThe comments in that code refer to #23814 and thence to #23888 by @eoveson (https://github.com/pandas-dev/pandas/pull/23888/files#diff-f3b2ea15ba728b55cab4a1acd97d996dR353). So this looks like a well-intentioned performance improvement gone a bit wrong?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/464178524",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25318#issuecomment-464178524",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25318",
    "id": 464178524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2NDE3ODUyNA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-15T19:54:03Z",
    "updated_at": "2019-02-15T19:54:03Z",
    "author_association": "MEMBER",
    "body": "@batterseapower Thanks for the report! \r\n\r\nThis is indeed a regression, let's try to fix it for 0.24.2. @batterseapower or @yichen8 a PR is very welcome. We should indeed keep a call to `_recode_for_categories` (or at least in certain cases)"
  }
]
