[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41490098",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6973#issuecomment-41490098",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6973",
    "id": 41490098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDkwMDk4",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T07:17:07Z",
    "updated_at": "2014-04-27T07:17:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the the 'or' example, couldn't you do fancy indexing?:\n\n``` python\nout = a.copy() \nfalsey_a = ~~a\nout[falsey_a] = b[falsey_a]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41490817",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6973#issuecomment-41490817",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6973",
    "id": 41490817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDkwODE3",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T08:10:38Z",
    "updated_at": "2014-04-27T08:10:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "In addition, can you explain how/why this would be useful? How would `idxmin` and `idxmax` work? would they accept multiple NDFrames and give the max index amongst all of them?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41493176",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6973#issuecomment-41493176",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6973",
    "id": 41493176,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDkzMTc2",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T10:32:14Z",
    "updated_at": "2014-04-27T10:32:14Z",
    "author_association": "MEMBER",
    "body": "@jtratner : your suggestion above raises a `ValueError` unless the Series are all 0 or 1 (the case in which `a | b` already works). Compare with\n\n```\nDataFrame({'a' : a, 'b' : b}).apply(lambda r: r[0] or r[1], axis=1)\n```\n\nwhich (inefficiently) does what I would like.\n\nI admit that I see less use for `idxmin` and `idxmax` - I mentioned them mostly for consistency with `max` and `min`. Still, if they were present, I would expect\n\n```\npandas.idxmax((a, b), axis=i)\n```\n\nto be equivalent to\n\n```\npandas.DataFrame({'a' : a, 'b' : b}).idxmax(axis=i)\n```\n\nthat is, return a Series which values are 'a' and 'b'. I would not call the generalization (of those, and of `max`, `min`, `sum`) to arbitrary NDFrames \"trivial\"... but neither, to my eyes, conceptually different from the general definition of \"**+**\".\n\nConcerning \"how/why this would be useful\", I now have this code:\n\n```\nmax_contr = pandas.DataFrame({'field_m' : df_n_ind.loc[df_n_ind.mese == 12, 'field_m'],\n                              'field'   : df_ind.loc[df_ind.cod == 6013, 'field']}).max(axis=1)\ndf_n_ind.loc[df_n_ind.mese == 12, 'field_m'] = max_contr\n```\n\nwhich I would like to become\n\n```\ndf_n_ind.loc[df_n_ind.mese == 12, 'field_m'] = max((df_n_ind.loc[df_n_ind.mese == 12, 'field_m'],\n                                                    df_ind.loc[df_ind.cod == 6013, 'field']), axis=1)\n```\n\nThat is, I would like my life to be (almost) as simple as if I had to take the sum - rather than the max - of two Series.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41496291",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6973#issuecomment-41496291",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6973",
    "id": 41496291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk2Mjkx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T13:18:11Z",
    "updated_at": "2014-04-27T13:18:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "pandas very limited top-level functions and the only reason ones such as `rolling_*` exists IIRC is that they were meant to work on arrays directly as well. \n\nI believe adding top-level functions will only confusion things. Their should be 1 preferred way to do things.\n\nYour options work, but this seems quite simple and straightfoward.\n\n```\nIn [1]: a = Series(range(5),name='a')\n\nIn [2]: b = Series(range(5),name='b')+1\n\nIn [3]: pd.concat([a,b],axis=1).max()\nOut[3]: \na    4\nb    5\ndtype: int64\n\nIn [4]: pd.concat([a,b],axis=1).max(1)\nOut[4]: \n0    1\n1    2\n2    3\n3    4\n4    5\ndtype: int64\n```\n\nHaving specific functions for this (and you would prob want to keep adding ad-infinitum functions as soon as we add `max/min`). just seem to pollute the namespace.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41497198",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6973#issuecomment-41497198",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6973",
    "id": 41497198,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk3MTk4",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T13:56:06Z",
    "updated_at": "2014-04-27T13:56:06Z",
    "author_association": "MEMBER",
    "body": "OK, I understand the design choice.\n\n(and thanks for the `concat` suggestion)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/41497231",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6973#issuecomment-41497231",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6973",
    "id": 41497231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNDk3MjMx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-04-27T13:57:16Z",
    "updated_at": "2014-04-27T13:57:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "@toobaz always appreciate the suggestions though!\n"
  }
]
