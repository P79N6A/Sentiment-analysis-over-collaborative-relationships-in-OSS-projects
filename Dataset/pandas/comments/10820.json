[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131113100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10820#issuecomment-131113100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10820",
    "id": 131113100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTExMzEwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T13:56:56Z",
    "updated_at": "2015-08-14T13:56:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "sure that's a clever way of doing this. `nunique` is just a dispatched method back to the object. Essentially a loop over each of the sub-dataframes. So you could simply implement this as a method on a `NDFrameGroubpBy` or maybe just a `SeriesGroupby` object. Alternatively this is an easy cython method.\n\nNote that their is a passed `dropna=True` method which should be implemented as well (as it exists on `.nunique` now), but that's easy.\n\ncan you submit a pull-request?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131990838",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10820#issuecomment-131990838",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10820",
    "id": 131990838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTk5MDgzOA==",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T23:24:15Z",
    "updated_at": "2015-08-17T23:24:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback Sure, could give it a try. Would appreciate if you could give some pointers as to where this sort of thing should go -- I'm only vaguely familiar with pandas codebase.\n\nAs in, there's `NDFrameGroupBy`, `DataFrameGroupBy`, `PanelGroupBy`, `SeriesGroupBy`, should it become an instance method on one of these? The only special methods I see on `NDFrameGroupBy` are  `transform`, `aggregate`and `filter`  which seem pretty generic.\n\nAlso, if this is to be supported in `NDFrameGroupBy`, there would have to be an `axis` keyword argument, I think?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131992021",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10820#issuecomment-131992021",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10820",
    "id": 131992021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTk5MjAyMQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-17T23:29:40Z",
    "updated_at": "2015-08-17T23:29:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "This just becomes a method on `SeriesGroupBy`.  (which is what you get when you do `df.groubpy('a').b` for exmple. Methods to this are then dispatched to the actual generated series unless their is a method defined for it (e.g. things like `.min/max/mean` etc, IOW, the cython methods.\n\ncurrently this is defined on the whitelist (e.g. just search for `nunique`). so would take it out of there and define it as a function.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132000379",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10820#issuecomment-132000379",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10820",
    "id": 132000379,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjAwMDM3OQ==",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T00:09:18Z",
    "updated_at": "2015-08-18T00:09:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok thanks!. By the way, would it make sense for `df.groupby('a').nunique()` to returns a dataframe with unique counts per column? (it won't work with `value_counts` due to mismatching return value shapes but here it could).\n\nAnother somewhat related note -- the whole whitelist thing in `GroupBy` seems extremely hacky, why not use metaclasses to generate methods rather than exec strings? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132003205",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10820#issuecomment-132003205",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10820",
    "id": 132003205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjAwMzIwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T00:20:53Z",
    "updated_at": "2015-08-18T00:20:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.nunique` is very similar in concept to the following. In factor you could simply write some cython code that emulates count (which is just the number of non-nulls per group).\n\n```\nIn [4]: df = DataFrame({'A' : ['foo','bar','bar'], 'B' : [1,2,3], 'C' : [1,1,1]})\n\nIn [5]: df\nOut[5]: \n     A  B  C\n0  foo  1  1\n1  bar  2  1\n2  bar  3  1\n\nIn [6]: df.groupby('A').count()\nOut[6]: \n     B  C\nA        \nbar  2  2\nfoo  1  1\n```\n\nIf you wanted to try to change using the whitelist that would be ok. You could use a MetaClass, not sure if that would be much less magical, but maybe.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132013027",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10820#issuecomment-132013027",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10820",
    "id": 132013027,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjAxMzAyNw==",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T01:06:05Z",
    "updated_at": "2015-08-18T01:06:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm not really though, since in your example counts for column C are [2, 1] whereas unique counts are [1, 1]. It's more like you have to groupby/reindex by `['A', 'B']` and get counts for the second level of the index for each value of the first level, and then do the same for `['A', 'C']`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132013600",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10820#issuecomment-132013600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10820",
    "id": 132013600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjAxMzYwMA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T01:07:23Z",
    "updated_at": "2015-08-18T01:07:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I didn't say the result was the same just the idea\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132016224",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10820#issuecomment-132016224",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10820",
    "id": 132016224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjAxNjIyNA==",
    "user": {
      "login": "aldanor",
      "id": 2418513,
      "node_id": "MDQ6VXNlcjI0MTg1MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2418513?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aldanor",
      "html_url": "https://github.com/aldanor",
      "followers_url": "https://api.github.com/users/aldanor/followers",
      "following_url": "https://api.github.com/users/aldanor/following{/other_user}",
      "gists_url": "https://api.github.com/users/aldanor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aldanor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aldanor/subscriptions",
      "organizations_url": "https://api.github.com/users/aldanor/orgs",
      "repos_url": "https://api.github.com/users/aldanor/repos",
      "events_url": "https://api.github.com/users/aldanor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aldanor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-18T01:13:41Z",
    "updated_at": "2015-08-18T01:13:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks like in the most naive impl this would require to construct a groupby object to from another instantiated groupby object but also grouped by one additional key, wonder if there's any builtin functionality for that?\n"
  }
]
