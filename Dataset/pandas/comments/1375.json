[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6062302",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1375#issuecomment-6062302",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1375",
    "id": 6062302,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjIzMDI=",
    "user": {
      "login": "grsr",
      "id": 1210462,
      "node_id": "MDQ6VXNlcjEyMTA0NjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1210462?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grsr",
      "html_url": "https://github.com/grsr",
      "followers_url": "https://api.github.com/users/grsr/followers",
      "following_url": "https://api.github.com/users/grsr/following{/other_user}",
      "gists_url": "https://api.github.com/users/grsr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grsr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grsr/subscriptions",
      "organizations_url": "https://api.github.com/users/grsr/orgs",
      "repos_url": "https://api.github.com/users/grsr/repos",
      "events_url": "https://api.github.com/users/grsr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grsr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-01T14:55:16Z",
    "updated_at": "2012-06-01T14:55:16Z",
    "author_association": "NONE",
    "body": "I have looked quickly at the python code implementing this and it appears that in both SparseArray.mean and SparseArray.sum the nsparse variable is counting the number of non-sparse entries rather than the number of sparse entries, and this is the cause of the incorrect values returned from these methods. I think that setting nsparse = self.sp_index.length - self.sp_index.npoints in both methods should fix this issue, but I don't understand the code well enough to be sure that this is correct.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/6064017",
    "html_url": "https://github.com/pandas-dev/pandas/issues/1375#issuecomment-6064017",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/1375",
    "id": 6064017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjQwMTc=",
    "user": {
      "login": "changhiskhan",
      "id": 759245,
      "node_id": "MDQ6VXNlcjc1OTI0NQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/759245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/changhiskhan",
      "html_url": "https://github.com/changhiskhan",
      "followers_url": "https://api.github.com/users/changhiskhan/followers",
      "following_url": "https://api.github.com/users/changhiskhan/following{/other_user}",
      "gists_url": "https://api.github.com/users/changhiskhan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/changhiskhan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/changhiskhan/subscriptions",
      "organizations_url": "https://api.github.com/users/changhiskhan/orgs",
      "repos_url": "https://api.github.com/users/changhiskhan/repos",
      "events_url": "https://api.github.com/users/changhiskhan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/changhiskhan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-06-01T16:03:49Z",
    "updated_at": "2012-06-01T16:03:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@grsr that's pretty much what I did. Thanks for the input. \nIf you're looking for ways to get involved without digging too deep into the codebase, we'll soon start providing \"Community\" labels issues that we think are more discrete and require less staring at too much of pandas internals.\n"
  }
]
