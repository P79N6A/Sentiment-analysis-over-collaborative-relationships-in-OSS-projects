[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/68896272",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-68896272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 68896272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODk2Mjcy",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-06T17:13:23Z",
    "updated_at": "2015-01-06T17:13:23Z",
    "author_association": "NONE",
    "body": "Ok, here's the revised model. From the commit:\n\nRename `view` to `interact` to be consistent on each object.\n\nImplement a generic `pandas.interact` method which handles the conversion to a simpler list of lists. In turn, `interact` calls the internal `interact_list`, which currently uses tabview as the main backend.\n\nThis allows a replacement viewer to hook to the desired level without reimplementing boilerplate code. The current interact() tries to do a better job at detecting if the data has a builtin index and/or column names.\n\nI also added some initial documentation. The master branch of https://github.com/wavexx/tabview also supports python 2.7 now, and should eventually get integrated.\n\nNone of the viewer parameters (start, fixed_header, etc) are currently supported by tabview. I'm going to add that later.\n\n@jreback: comments on the API design?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69056430",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69056430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69056430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDU2NDMw",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-07T17:20:55Z",
    "updated_at": "2015-01-07T17:21:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello,\n\nwhy naming method `interact` and not `view` as previously defined or maybe `display` ?\n`view`or `display` is more understandable in my mind.\nand maybe `edit`.\n\nKind regards\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69057102",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69057102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69057102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDU3MTAy",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-07T17:25:03Z",
    "updated_at": "2015-01-07T17:25:03Z",
    "author_association": "NONE",
    "body": "On 01/07/2015 06:21 PM, scls19fr wrote:\n\n> Hello,\n> \n> why naming method `interact` and not `view` as previously defined or maybe `display` ?\n> \n> Kind regards\n\nview() might be confused in the \"table subset\" sense.\nPlus, Series (if I'm not mistaken) had already a view() method.\nI wanted something consistent everywhere.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69057673",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69057673",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69057673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MDU3Njcz",
    "user": {
      "login": "scls19fr",
      "id": 109167,
      "node_id": "MDQ6VXNlcjEwOTE2Nw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/109167?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scls19fr",
      "html_url": "https://github.com/scls19fr",
      "followers_url": "https://api.github.com/users/scls19fr/followers",
      "following_url": "https://api.github.com/users/scls19fr/following{/other_user}",
      "gists_url": "https://api.github.com/users/scls19fr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scls19fr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scls19fr/subscriptions",
      "organizations_url": "https://api.github.com/users/scls19fr/orgs",
      "repos_url": "https://api.github.com/users/scls19fr/repos",
      "events_url": "https://api.github.com/users/scls19fr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scls19fr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-07T17:28:20Z",
    "updated_at": "2015-01-07T17:53:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok. maybe `.display()` ? or `.disp()` was a better name as it's read only\n@jreback your opinion ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69187388",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69187388",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69187388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MTg3Mzg4",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-08T14:40:32Z",
    "updated_at": "2015-01-08T14:40:32Z",
    "author_association": "NONE",
    "body": "On 01/07/2015 06:28 PM, scls19fr wrote:\n\n> Ok. maybe `display` ? or `disp` was a better name as it's read only\n\nI can foresee the viewer being able to manipulate the data in the future\nand just return the updated dataset. For instance, you can already sort\nthe data with tabview, but adding stuff like regular expression filters\nand simple numerical operations would be quite convenient to add in the\nfuture.\n\nAlso, interact() is pretty familiar to those that used the\n\"code.interact\" modules.\n\nIt's a bit long to type though.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69204437",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69204437",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69204437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjA0NDM3",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-08T16:25:11Z",
    "updated_at": "2015-01-08T16:25:11Z",
    "author_association": "NONE",
    "body": "As a proof of concept, I wanted to implement a graphical viewer instead.\nHere's a quick test:\n\nhttps://github.com/wavexx/gtabview\n\nIt can be used with the framework as proposed in this pull request.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69375632",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69375632",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69375632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mzc1NjMy",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T18:23:19Z",
    "updated_at": "2015-01-09T18:23:19Z",
    "author_association": "MEMBER",
    "body": "This is very cool, but I have a few thoughts/concerns:\n1. This implementation converts the entire dataframe into Python native lists. This is OK for small data, but will be needlessly slow (and use lots of extra memory) for medium to big data. It would be a much better idea to directly reuse the numpy arrays which pandas uses to store information (`.values`)\n2. Does the `interact` logic really belong in pandas? I can imagine different interactive backends using different logic for displaying the values from a dataframe depending on the needs of the backend. (For example, some backends would probably use my suggestion of using `.values` directly.)\n3. Does this functionality even belong in pandas proper? For an example of an alternative approach, see [qgrid](http://nbviewer.ipython.org/github/quantopian/qgrid/blob/master/qgrid_demo.ipynb).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69378752",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69378752",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69378752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5Mzc4NzUy",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T18:44:16Z",
    "updated_at": "2015-01-09T18:44:16Z",
    "author_association": "NONE",
    "body": "On 01/09/2015 07:23 PM, Stephan Hoyer wrote:\n\n> This is very cool, but I have a few thoughts/concerns:\n> 1. This implementation converts the entire dataframe into Python\n>    native lists. This is OK for small data, but will be needlessly slow\n>    (and use lots of extra memory) for medium to big data. It would be a\n>    much better idea to directly reuse the numpy arrays which pandas uses\n>    to store information (`.values`)\n\nIt's a known limitation. A viewer replacing the topmost call\n(pd.interact()) could avoid the conversion if capable enough.\n\n> 1. Does the `interact` logic really belong in pandas? I can imagine\n>    different interactive backends using different logic for displaying\n>    the values from a dataframe depending on the needs of the backend.\n>    (For example, some backends would probably use my suggestion of using\n>    `.values` directly.)\n\n2 and 3 are legitimate questions.\n\nThe notebook interface (or qgrid - for example) could register itself as\nthe default handler of the interact() method by just replacing it.\n\nThe user would just know that interact() is expected to bring up an\ninteractive display according to his environment.\n\nI'm also not sure if that constitutes an improvement over calling\nanother package explicitly.\n\nThe trouble right now is that there is no unique package that would\nprovide such a function on every environment, but something in the likes\nof this PR could help bring us those faster, in an uniform way.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69381819",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69381819",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69381819,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzgxODE5",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T19:03:57Z",
    "updated_at": "2015-01-09T19:03:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "`view` is a confusing choice for naming, since it has a completely different meaning in pandas/numpy land (shallow copy of an array that's a different Python object but references the same underlying data).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69393499",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69393499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69393499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MzkzNDk5",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-09T20:25:42Z",
    "updated_at": "2015-01-09T20:25:42Z",
    "author_association": "NONE",
    "body": "@jtratner: note that in the last revision, it was changed to \"interact\" for this purpose.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69443780",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69443780",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69443780,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDQzNzgw",
    "user": {
      "login": "jtratner",
      "id": 1598379,
      "node_id": "MDQ6VXNlcjE1OTgzNzk=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1598379?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtratner",
      "html_url": "https://github.com/jtratner",
      "followers_url": "https://api.github.com/users/jtratner/followers",
      "following_url": "https://api.github.com/users/jtratner/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtratner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtratner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtratner/subscriptions",
      "organizations_url": "https://api.github.com/users/jtratner/orgs",
      "repos_url": "https://api.github.com/users/jtratner/repos",
      "events_url": "https://api.github.com/users/jtratner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtratner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-10T05:38:04Z",
    "updated_at": "2015-01-10T05:38:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@wavexx in response to your question on the ML about how a registration system might work:\n\nIf you're looking for an example of how a registration system _could_ work, pandas' Excel handling manages to do registration and allow swapping of parts transparently to the user (check out pandas/io/excel.py to see the majority of it in action).\n\nPotentially the easiest way to integrate this with a setting could be to have a top level function (e.g., `interact`) that pulls from pandas options to determine how to interactively display the NDFrame.  The option could be a fully-qualified name of a function,  e.g. `pd.set_option(\"interact.pager\", \"tabview.view\")` and then `pd.interact` could pull out the function from the string and then call it, all without the need for interaction from the user.\n\n---\n\nThat said, I still don't understand what the benefit of this method is for pandas. What's the utility of defining a protocol when the user is going to have to set which environment they're in regardless? saving a `from tabview import view as interact` at the toplevel?\n\nMaybe you could make this work elegantly with the rich HTML repr that NDFrames already have (I think it's called `__repr_html__` or something - which gets used by IPython QTConsole and IPython notebook.)? Then, you could just add something like `pd.set_option('rich_repr', True)` at the top of your IPython notebook and it'd automatically show an interactive pager when you show the repr of an NDFrame.  It might add a little more complexity under the hood, but it feels like it could be a better path forward.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/69456053",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-69456053",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 69456053,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDU2MDUz",
    "user": {
      "login": "wavexx",
      "id": 1017726,
      "node_id": "MDQ6VXNlcjEwMTc3MjY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1017726?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wavexx",
      "html_url": "https://github.com/wavexx",
      "followers_url": "https://api.github.com/users/wavexx/followers",
      "following_url": "https://api.github.com/users/wavexx/following{/other_user}",
      "gists_url": "https://api.github.com/users/wavexx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wavexx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wavexx/subscriptions",
      "organizations_url": "https://api.github.com/users/wavexx/orgs",
      "repos_url": "https://api.github.com/users/wavexx/repos",
      "events_url": "https://api.github.com/users/wavexx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wavexx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-01-10T13:40:17Z",
    "updated_at": "2015-01-10T13:40:17Z",
    "author_association": "NONE",
    "body": "Jeff, that was valuable advice. Since I never used the notebook\ninterfaces (just inefficient IMO) I have no idea of what was already\ndone in that regard.\n\nI'll have a look.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/87445771",
    "html_url": "https://github.com/pandas-dev/pandas/pull/9191#issuecomment-87445771",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/9191",
    "id": 87445771,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3NDQ1Nzcx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-03-29T17:15:11Z",
    "updated_at": "2015-03-29T17:15:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing as #9179 now closed\n"
  }
]
