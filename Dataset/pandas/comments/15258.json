[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275968950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15258#issuecomment-275968950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15258",
    "id": 275968950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk2ODk1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T02:37:35Z",
    "updated_at": "2017-01-30T02:37:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> At a bare minimum, we should probably add some tests to pandas to ensure that a basic subclass works.\r\n\r\nthere are already quite a few subclasses of Indexes (internally). The API is not publicly exposed. I think it would take a bit of work to make it 'simpler'.\r\n\r\n You have to define a fair bit of machinery (lots of methods) to make it work properly. Including construction, inference, equality, testing, and various indexing routines. \r\n\r\nIt is thus straightforward, but not trivial to sub-class. (remember IntervalIndex!)\r\n\r\n> Is there any fundamental reason why a custom pandas.Index subclass won't work on a Series or DataFrame?\r\n\r\nIt will work. though there may be some API leakage (IOW some methods are 'internal', others are 'public form the main pandas API).\r\n\r\n> Does this seem like a reasonable thing to do, or we are setting ourselves up for suffering in the future? I'll update this issue when we have a concrete PR to look at.\r\n\r\nwhy do you think you need a custom Index?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275969720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15258#issuecomment-275969720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15258",
    "id": 275969720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk2OTcyMA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T02:45:58Z",
    "updated_at": "2017-01-30T02:45:58Z",
    "author_association": "MEMBER",
    "body": "> It is thus straightforward, but not trivial to sub-class. (remember IntervalIndex!)\r\n\r\nIndeed, I do :)\r\n\r\n> why do you think you need a custom Index?\r\n\r\nThe climate science community wants the convenient indexing of `DatetimeIndex`, but `datetime64[ns]` will suffice for them. Not only do they need to handle dates outside the range representable with ns resolution (prior to 1672), but they also use [all sorts of funny calendar conventions](http://cfconventions.org/cf-conventions/v1.6.0/cf-conventions.html#calendar), e.g., pretending leap years never exist, or that every month has exactly 30 days."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/275970757",
    "html_url": "https://github.com/pandas-dev/pandas/issues/15258#issuecomment-275970757",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15258",
    "id": 275970757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NTk3MDc1Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-30T02:57:17Z",
    "updated_at": "2017-01-30T02:58:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer ok in that case I would directly subclass ``DatetimeIndex`` or ``PeriodIndex``. If you do this you get all kinds of things for free (e.g. resample, NaT, accessors, partial string indexing, etc). So would be much simpler.\r\n\r\nAs I said above, you might have some API leakage (IOW, we have a notion of pandas functions calling Index methods which are not 'public' per se). But nothing insurmountable.\r\n\r\nSo comes down do you need: points-in-time, or spans.\r\n\r\n"
  }
]
