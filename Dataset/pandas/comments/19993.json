[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/371468977",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19993#issuecomment-371468977",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19993",
    "id": 371468977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTQ2ODk3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T12:07:48Z",
    "updated_at": "2018-03-08T12:07:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "``datetime.date`` are not a first class type and you end up with edge cases. If you look at the transposed version these are converted to a ``DatetimeIndex``. \r\n\r\nThis code path in ``.from_dict`` does not have much coverage and is likely not handling the conversion keys as much as the 'regular' path. You are welcome to have a look. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375855667",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19993#issuecomment-375855667",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19993",
    "id": 375855667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTg1NTY2Nw==",
    "user": {
      "login": "williamkhshea",
      "id": 4775489,
      "node_id": "MDQ6VXNlcjQ3NzU0ODk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4775489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamkhshea",
      "html_url": "https://github.com/williamkhshea",
      "followers_url": "https://api.github.com/users/williamkhshea/followers",
      "following_url": "https://api.github.com/users/williamkhshea/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamkhshea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamkhshea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamkhshea/subscriptions",
      "organizations_url": "https://api.github.com/users/williamkhshea/orgs",
      "repos_url": "https://api.github.com/users/williamkhshea/repos",
      "events_url": "https://api.github.com/users/williamkhshea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamkhshea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-24T08:22:39Z",
    "updated_at": "2018-03-24T14:04:57Z",
    "author_association": "NONE",
    "body": "@jreback The issue is that when `arrays` is passed into `_arrays_to_mgr` the `datetime.date` in index is not evaluated, while `extract_index` returns a MultiIndex in which the `datetime.date` got parsed into `Timestamp` and is eventually used to match against the `arrays`, therefore the array cannot be matched based on the index extracted.\r\n\r\n![screen shot 2018-03-24 at 4 17 41 pm](https://user-images.githubusercontent.com/4775489/37861908-f33d9010-2f7e-11e8-88d4-9727150ac641.png)\r\n\r\nOne way to solve the issue is to parse the keys in `arrays` into Timestamp first in `_arrays_to_mgr` before any further operations, but I am not sure whether it is the best way to do it. Any opinions?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375911854",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19993#issuecomment-375911854",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19993",
    "id": 375911854,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTkxMTg1NA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-24T17:50:31Z",
    "updated_at": "2018-03-24T17:50:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "not sure of the beat place; see how the from_dict path is handled - this should be similar"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375917441",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19993#issuecomment-375917441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19993",
    "id": 375917441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTkxNzQ0MQ==",
    "user": {
      "login": "williamkhshea",
      "id": 4775489,
      "node_id": "MDQ6VXNlcjQ3NzU0ODk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4775489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamkhshea",
      "html_url": "https://github.com/williamkhshea",
      "followers_url": "https://api.github.com/users/williamkhshea/followers",
      "following_url": "https://api.github.com/users/williamkhshea/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamkhshea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamkhshea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamkhshea/subscriptions",
      "organizations_url": "https://api.github.com/users/williamkhshea/orgs",
      "repos_url": "https://api.github.com/users/williamkhshea/repos",
      "events_url": "https://api.github.com/users/williamkhshea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamkhshea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-24T19:11:35Z",
    "updated_at": "2018-03-25T22:10:27Z",
    "author_association": "NONE",
    "body": "@jreback Wend down the `from_dict` path rabbit hold and discovered that when `MultiIndex` is constructed, it convert any `datetimelike` values, while `Index` construction doesn't do that. Not sure why the difference in behaviour.\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/85817a72897be808fb6d311f65fc6031e0216603/pandas/core/arrays/categorical.py#L316\r\n\r\nSetting `convert_dates = False` fixed this particular issue, though I am not sure if there are any implications in other area."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/375992578",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19993#issuecomment-375992578",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19993",
    "id": 375992578,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTk5MjU3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-25T18:33:59Z",
    "updated_at": "2018-03-25T18:33:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@williamkhshea you can't change that as this will break a number of existing behavior. The point is that ``datetime.date`` are not treated as first class and converted almost immediately. I think a more straightfroward way to to do this is *like* ``.from_dict`` convert the keys."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/376008821",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19993#issuecomment-376008821",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19993",
    "id": 376008821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjAwODgyMQ==",
    "user": {
      "login": "williamkhshea",
      "id": 4775489,
      "node_id": "MDQ6VXNlcjQ3NzU0ODk=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/4775489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamkhshea",
      "html_url": "https://github.com/williamkhshea",
      "followers_url": "https://api.github.com/users/williamkhshea/followers",
      "following_url": "https://api.github.com/users/williamkhshea/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamkhshea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamkhshea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamkhshea/subscriptions",
      "organizations_url": "https://api.github.com/users/williamkhshea/orgs",
      "repos_url": "https://api.github.com/users/williamkhshea/repos",
      "events_url": "https://api.github.com/users/williamkhshea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamkhshea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-25T22:27:28Z",
    "updated_at": "2018-03-25T22:27:28Z",
    "author_association": "NONE",
    "body": "@jreback You can't simply convert the keys in `.from_dict` as single level dict is still using `datetime` to match.\r\n\r\n`Index` in single level dict \r\n![screen shot 2018-03-26 at 6 15 09 am](https://user-images.githubusercontent.com/4775489/37880579-7b902024-30bd-11e8-9ef6-43c2bcdb4cdb.png)\r\n\r\n`MultiIndex` in multilevel dict\r\n![screen shot 2018-03-26 at 6 15 55 am](https://user-images.githubusercontent.com/4775489/37880585-9bef5254-30bd-11e8-8fd5-e0ba031b13be.png)\r\n\r\nIf `datetime.date` is not treated as first class I think the way to go is to convert the `datetime.date` in single level dict when it is constructed and convert the `datetime.date` keys in `.from_dict`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/428641678",
    "html_url": "https://github.com/pandas-dev/pandas/issues/19993#issuecomment-428641678",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19993",
    "id": 428641678,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyODY0MTY3OA==",
    "user": {
      "login": "carlosdeoncedos",
      "id": 38123528,
      "node_id": "MDQ6VXNlcjM4MTIzNTI4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/38123528?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlosdeoncedos",
      "html_url": "https://github.com/carlosdeoncedos",
      "followers_url": "https://api.github.com/users/carlosdeoncedos/followers",
      "following_url": "https://api.github.com/users/carlosdeoncedos/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlosdeoncedos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlosdeoncedos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlosdeoncedos/subscriptions",
      "organizations_url": "https://api.github.com/users/carlosdeoncedos/orgs",
      "repos_url": "https://api.github.com/users/carlosdeoncedos/repos",
      "events_url": "https://api.github.com/users/carlosdeoncedos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlosdeoncedos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-10T16:33:58Z",
    "updated_at": "2018-10-10T16:37:08Z",
    "author_association": "NONE",
    "body": "I have a similar issue, using Jupyter Notebook.  It's seems to be related to @hodossy post.\r\n\r\n```python\r\n\r\nimport pandas as pd\r\nimport datetime\r\n\r\nconcept_list = ['a', 'b', 'c']\r\ndate_list = [datetime.date(2018, 10, 8), datetime.date(2018, 10, 9), \r\n             datetime.date(2018, 10, 10)]\r\n\r\ndictionary = {'John': {'a': {datetime.date(2018, 10, 8): 1, datetime.date(2018, 10, 9): 1,\r\n                         datetime.date(2018, 10, 10): 1}, \r\n                 'b': {datetime.date(2018, 10, 8): 2,datetime.date(2018, 10, 9): 2, \r\n                         datetime.date(2018, 10, 10): 2}, \r\n                 'c': {datetime.date(2018, 10, 8): 3, datetime.date(2018, 10, 9): 3,\r\n                         datetime.date(2018, 10, 10): 3}},\r\n        'Alice': {'a': {datetime.date(2018, 10, 8): 1, datetime.date(2018, 10, 9): 1,\r\n                         datetime.date(2018, 10, 10): 1}, \r\n                 'b': {datetime.date(2018, 10, 8): 2, datetime.date(2018, 10, 9): 2, \r\n                         datetime.date(2018, 10, 10): 2}, \r\n                 'c':{datetime.date(2018, 10, 8): 3, datetime.date(2018, 10, 9): 3,\r\n                         datetime.date(2018, 10, 10): 3}},\r\n        'Rupert': {'a': {datetime.date(2018, 10, 8): 1, datetime.date(2018, 10, 9): 1,\r\n                         datetime.date(2018, 10, 10): 1}, \r\n                  'b': {datetime.date(2018, 10, 8): 2, datetime.date(2018, 10, 9): 2, \r\n                         datetime.date(2018, 10, 10): 2}, \r\n                  'c':{datetime.date(2018, 10, 8): 3, datetime.date(2018, 10, 9): 3,\r\n                         datetime.date(2018, 10, 10): 3}}}\r\n\r\nindex_list = [concept_list, date_list]\r\nindex = pd.MultiIndex.from_product(index_list, names = ['Concept', 'Date'])\r\n\r\ndf = pd.DataFrame(dictonary, index = index)\r\ndf\r\n```\r\n\r\nThe output:\r\n\r\n```\r\n                          John    Alice    Rupert\r\nConcept  Date\r\na        2018-10-08        NaN     NaN      NaN\r\n         2018-10-09        NaN     NaN      NaN\r\n         2018-10-10        NaN     NaN      NaN\r\n\r\nb        2018-10-08        NaN     NaN      NaN\r\n         2018-10-09        NaN     NaN      NaN\r\n         2018-10-10        NaN     NaN      NaN\r\n\r\nc        2018-10-08        NaN     NaN      NaN\r\n         2018-10-09        NaN     NaN      NaN\r\n         2018-10-10        NaN     NaN      NaN\r\n```\r\n\r\n\r\n\r\nExpected output:\r\n\r\n```\r\n                         John  Alice  Rupert\r\nConcept  Date\r\na        2018-10-08        1     1      1\r\n         2018-10-09        2     2      2\r\n         2018-10-10        3     3      3\r\n\r\nb        2018-10-08        1     1      1\r\n         2018-10-09        2     2      2\r\n         2018-10-10        3     3      3\r\n\r\nc        2018-10-08        1     1      1\r\n         2018-10-09        2     2      2\r\n         2018-10-10        3     3      3\r\n```\r\n"
  }
]
