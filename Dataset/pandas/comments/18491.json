[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346979271",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18491#issuecomment-346979271",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18491",
    "id": 346979271,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk3OTI3MQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-26T02:21:01Z",
    "updated_at": "2017-11-26T02:21:01Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`master@38f41e6`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18491/graphs/tree.svg?token=eZ4WkYLtcO&src=pr&height=150&width=650)](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff            @@\n##             master   #18491   +/-   ##\n=========================================\n  Coverage          ?   91.32%           \n=========================================\n  Files             ?      163           \n  Lines             ?    49791           \n  Branches          ?        0           \n=========================================\n  Hits              ?    45473           \n  Misses            ?     4318           \n  Partials          ?        0\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.12% <100%> (?)` | |\n| #single | `40.71% <0%> (?)` | |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.42% <100%> (ø)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=footer). Last update [38f41e6...9447d2a](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/346979277",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18491#issuecomment-346979277",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18491",
    "id": 346979277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0Njk3OTI3Nw==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2017-11-26T02:21:06Z",
    "updated_at": "2017-11-26T15:17:06Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=h1) Report\n> Merging [#18491](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/38f41e64f4b8a0479f8835022af5e7343ccf8498?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/18491/graphs/tree.svg?token=eZ4WkYLtcO&width=650&src=pr&height=150)](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #18491      +/-   ##\n==========================================\n+ Coverage    91.3%   91.32%   +0.02%     \n==========================================\n  Files         163      163              \n  Lines       49781    49791      +10     \n==========================================\n+ Hits        45451    45473      +22     \n+ Misses       4330     4318      -12\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `89.12% <100%> (+0.02%)` | :arrow_up: |\n| #single | `40.71% <0%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/indexes/base.py](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvaW5kZXhlcy9iYXNlLnB5) | `96.42% <100%> (+0.01%)` | :arrow_up: |\n| [pandas/plotting/\\_converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=tree#diff-cGFuZGFzL3Bsb3R0aW5nL19jb252ZXJ0ZXIucHk=) | `65.25% <0%> (+1.81%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=footer). Last update [38f41e6...9447d2a](https://codecov.io/gh/pandas-dev/pandas/pull/18491?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347050600",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18491#issuecomment-347050600",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18491",
    "id": 347050600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA1MDYwMA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T00:12:02Z",
    "updated_at": "2017-11-27T00:12:02Z",
    "author_association": "MEMBER",
    "body": "I am not sure I find this special casing a good idea. I would rather keep `.map` 'dummy' and simply create a new index from the newly created values, without trying to infer anything more than `pd.Index(..)` already does. \r\nAlso if we do this, we should do it consistently and always try to use the original dtype (eg also in Series.map)\r\n\r\n```\r\nIn [12]: pd.date_range(\"2012-01-01\", periods=3).map({})\r\nOut[12]: DatetimeIndex(['NaT', 'NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\r\n\r\nIn [13]: pd.Series(pd.date_range(\"2012-01-01\", periods=3)).map({})\r\nOut[13]: \r\n0   NaN\r\n1   NaN\r\n2   NaN\r\ndtype: float64\r\n```\r\n\r\nDo you have a specific use case for this? (for wanting to be smart?) \r\nI think the user can always change the dtype after doing the map if it wants something specific or to preserve the index.\r\n\r\n(also please try to keep PRs with substantial changes open for a bit longer)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347051260",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18491#issuecomment-347051260",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18491",
    "id": 347051260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA1MTI2MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T00:22:32Z",
    "updated_at": "2017-11-27T00:22:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche this is not special casing at all, rather the reverse. We DO try to infer based on the return values. However nan by-definition a case that needs handling. It defaults to all float which is kind of arbitrary. Having this retain the character of the original is pretty reasonable here.\r\n\r\n[13] is a bug I think."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/347057515",
    "html_url": "https://github.com/pandas-dev/pandas/pull/18491#issuecomment-347057515",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18491",
    "id": 347057515,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NzA1NzUxNQ==",
    "user": {
      "login": "jschendel",
      "id": 5332445,
      "node_id": "MDQ6VXNlcjUzMzI0NDU=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5332445?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jschendel",
      "html_url": "https://github.com/jschendel",
      "followers_url": "https://api.github.com/users/jschendel/followers",
      "following_url": "https://api.github.com/users/jschendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jschendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jschendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jschendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jschendel/orgs",
      "repos_url": "https://api.github.com/users/jschendel/repos",
      "events_url": "https://api.github.com/users/jschendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jschendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-27T01:39:00Z",
    "updated_at": "2017-11-27T01:39:00Z",
    "author_association": "MEMBER",
    "body": "Unless I'm misunderstanding, it doesn't look like this fully hits all of the different types of index.  Each index that can hold NA should return the same index class with all NA values, right?\r\n\r\nOn master:\r\n```python\r\nIn [2]: pd.__version__\r\nOut[2]: '0.22.0.dev0+241.gf745e52'\r\n\r\nIn [3]: pd.date_range('20170101', periods=4).map({})\r\nOut[3]: DatetimeIndex(['NaT', 'NaT', 'NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\r\n```\r\n\r\n`IntervalIndex`, `CategoricalIndex`, and `Index` with `object` dtype get coerced to `Float64Index`:\r\n\r\n```python\r\nIn [4]: pd.interval_range(0, 5).map({})\r\nOut[4]: Float64Index([nan, nan, nan, nan, nan], dtype='float64')\r\n\r\nIn [5]: pd.CategoricalIndex(list('abca')).map({})\r\nOut[5]: Float64Index([nan, nan, nan, nan], dtype='float64')\r\n\r\nIn [6]: pd.Index(list('abca')).map({})\r\nOut[6]: Float64Index([nan, nan, nan, nan], dtype='float64')\r\n```\r\n\r\n`PeriodIndex` and `TimedeltaIndex` get coerced `DatetimeIndex`:\r\n```python\r\nIn [7]: pd.period_range('2017Q1', periods=4, freq='Q').map({})\r\nOut[7]: DatetimeIndex(['NaT', 'NaT', 'NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\r\n\r\nIn [8]: pd.timedelta_range(1, periods=4).map({})\r\nOut[8]: DatetimeIndex(['NaT', 'NaT', 'NaT', 'NaT'], dtype='datetime64[ns]', freq=None)\r\n```"
  }
]
