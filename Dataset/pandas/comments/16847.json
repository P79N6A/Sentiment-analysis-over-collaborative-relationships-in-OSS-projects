[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/315282628",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16847#issuecomment-315282628",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16847",
    "id": 315282628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTI4MjYyOA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T06:34:29Z",
    "updated_at": "2017-07-14T06:34:29Z",
    "author_association": "MEMBER",
    "body": "cc @TomAugspurger "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/326727455",
    "html_url": "https://github.com/pandas-dev/pandas/issues/16847#issuecomment-326727455",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/16847",
    "id": 326727455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjcyNzQ1NQ==",
    "user": {
      "login": "RobinFiveWords",
      "id": 13019694,
      "node_id": "MDQ6VXNlcjEzMDE5Njk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/13019694?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RobinFiveWords",
      "html_url": "https://github.com/RobinFiveWords",
      "followers_url": "https://api.github.com/users/RobinFiveWords/followers",
      "following_url": "https://api.github.com/users/RobinFiveWords/following{/other_user}",
      "gists_url": "https://api.github.com/users/RobinFiveWords/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RobinFiveWords/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RobinFiveWords/subscriptions",
      "organizations_url": "https://api.github.com/users/RobinFiveWords/orgs",
      "repos_url": "https://api.github.com/users/RobinFiveWords/repos",
      "events_url": "https://api.github.com/users/RobinFiveWords/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RobinFiveWords/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T07:10:48Z",
    "updated_at": "2017-09-02T07:10:48Z",
    "author_association": "NONE",
    "body": "I think I understand what's happening here. A \"date\" in a DatetimeIndex with an annual frequency is not really that date but the whole period covered by the frequency. The datapoint is plotted at the start of that period. Implementing it any other way seems impractical. So pandas is behaving as desired.\r\n\r\nIn the process of assembling the dataframe from the multiple series, all series are upsampled. When I do that manually, by chaining `.resample('D').asfreq()` when assigning `rs` and `af`, the resulting plots are the same (and what is desired/expected) even when plotted by series. And this same upscaling occurs implicitly when passing the index directly to matplotlib, because matplotlib doesn't deal with pandas objects and will interpret the values from the index as dates rather than periods.\r\n\r\nLesson: convert multiple Series to the same DatetimeIndex frequency before plotting on the same axis. Or put them all in a DataFrame and it will be done for you."
  }
]
