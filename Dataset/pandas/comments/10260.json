[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108524240",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10260#issuecomment-108524240",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10260",
    "id": 108524240,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODUyNDI0MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T17:00:34Z",
    "updated_at": "2015-06-03T17:00:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "You should just do this.\n\n```\nIn [9]: df.quantile([.10,.20,.30,.40,.50,.75,1])\nOut[9]: \n         a     b\n0.10   1.0   3.0\n0.20   2.0   6.0\n0.30   3.0   9.0\n0.40   4.0  12.0\n0.50   5.0  15.0\n0.75   7.5  22.5\n1.00  10.0  30.0\n```\n\nYou suggestion for apply is not inline with how pandas works.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108617877",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10260#issuecomment-108617877",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10260",
    "id": 108617877,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODYxNzg3Nw==",
    "user": {
      "login": "naught101",
      "id": 167164,
      "node_id": "MDQ6VXNlcjE2NzE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/167164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naught101",
      "html_url": "https://github.com/naught101",
      "followers_url": "https://api.github.com/users/naught101/followers",
      "following_url": "https://api.github.com/users/naught101/following{/other_user}",
      "gists_url": "https://api.github.com/users/naught101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naught101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naught101/subscriptions",
      "organizations_url": "https://api.github.com/users/naught101/orgs",
      "repos_url": "https://api.github.com/users/naught101/repos",
      "events_url": "https://api.github.com/users/naught101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naught101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T21:14:58Z",
    "updated_at": "2015-06-03T21:14:58Z",
    "author_association": "NONE",
    "body": "Thanks, but that's just one example - what about for an arbitrary function that returns a 1D vector/list/iterable?\n\nI don't really understand the last comment - is that because apply returns an index/column that is either the original values, or the groups (for aggregation)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108636009",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10260#issuecomment-108636009",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10260",
    "id": 108636009,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODYzNjAwOQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-03T22:52:05Z",
    "updated_at": "2015-06-03T22:52:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@naught101 \n\nyou are suggesting that pandas should somehow magically infer the result of this? how would it go about doing that?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108737961",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10260#issuecomment-108737961",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10260",
    "id": 108737961,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODczNzk2MQ==",
    "user": {
      "login": "naught101",
      "id": 167164,
      "node_id": "MDQ6VXNlcjE2NzE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/167164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naught101",
      "html_url": "https://github.com/naught101",
      "followers_url": "https://api.github.com/users/naught101/followers",
      "following_url": "https://api.github.com/users/naught101/following{/other_user}",
      "gists_url": "https://api.github.com/users/naught101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naught101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naught101/subscriptions",
      "organizations_url": "https://api.github.com/users/naught101/orgs",
      "repos_url": "https://api.github.com/users/naught101/repos",
      "events_url": "https://api.github.com/users/naught101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naught101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T05:55:15Z",
    "updated_at": "2015-06-04T05:55:15Z",
    "author_association": "NONE",
    "body": "Since you clearly know more about pandas than me, it's probably not worth your while asking me questions about it :P \n\nApply receives the results from the func= function before it re-combines them, doesn't it? I guess the problem is that list items aren't all of one type? Couldn't you still do something like\n\n```\ntry:\n    result = pd.Series(result)\n```\n\nAnd just pass the error if that fails? (Sorry, on my phone)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108832682",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10260#issuecomment-108832682",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10260",
    "id": 108832682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODgzMjY4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T10:31:14Z",
    "updated_at": "2015-06-04T10:31:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@naught101 this might be ok in the sense that having pandas auto-wrapping a list-like with a Series. But it goes against the philosphy at bit here. You lose ALL meta data (e.g. the name of the Series and the index). So i think better to simply wrap the function call with a `Series` explicity by the user.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/108875577",
    "html_url": "https://github.com/pandas-dev/pandas/issues/10260#issuecomment-108875577",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/10260",
    "id": 108875577,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwODg3NTU3Nw==",
    "user": {
      "login": "naught101",
      "id": 167164,
      "node_id": "MDQ6VXNlcjE2NzE2NA==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/167164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/naught101",
      "html_url": "https://github.com/naught101",
      "followers_url": "https://api.github.com/users/naught101/followers",
      "following_url": "https://api.github.com/users/naught101/following{/other_user}",
      "gists_url": "https://api.github.com/users/naught101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/naught101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/naught101/subscriptions",
      "organizations_url": "https://api.github.com/users/naught101/orgs",
      "repos_url": "https://api.github.com/users/naught101/repos",
      "events_url": "https://api.github.com/users/naught101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/naught101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-04T12:39:01Z",
    "updated_at": "2015-06-04T12:39:01Z",
    "author_association": "NONE",
    "body": "Fair enough. Thanks for the response :)\n"
  }
]
