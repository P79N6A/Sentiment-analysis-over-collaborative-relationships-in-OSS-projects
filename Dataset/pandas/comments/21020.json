[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/388628778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21020#issuecomment-388628778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21020",
    "id": 388628778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4ODYyODc3OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-13T13:58:11Z",
    "updated_at": "2018-05-13T13:58:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "median is like min/max it can only work on an ordered categorical\r\n\r\nDataframe is prob coercing to object?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/393867270",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21020#issuecomment-393867270",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21020",
    "id": 393867270,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzg2NzI3MA==",
    "user": {
      "login": "JarnoRFB",
      "id": 8550270,
      "node_id": "MDQ6VXNlcjg1NTAyNzA=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/8550270?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JarnoRFB",
      "html_url": "https://github.com/JarnoRFB",
      "followers_url": "https://api.github.com/users/JarnoRFB/followers",
      "following_url": "https://api.github.com/users/JarnoRFB/following{/other_user}",
      "gists_url": "https://api.github.com/users/JarnoRFB/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JarnoRFB/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JarnoRFB/subscriptions",
      "organizations_url": "https://api.github.com/users/JarnoRFB/orgs",
      "repos_url": "https://api.github.com/users/JarnoRFB/repos",
      "events_url": "https://api.github.com/users/JarnoRFB/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JarnoRFB/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-01T12:36:51Z",
    "updated_at": "2018-06-01T12:36:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Apparently there is some coercion going on. If I do the same with `object` categories `df.median()` just returns an empty series.\r\n\r\n```\r\ncat_ordered_series = pd.Series(\r\n    pd.Categorical(['a', 'b', 'c', 'a'], categories=['b', 'c', 'a'],\r\n                         ordered=True)\r\n)\r\n# cat_ordered_series.median() # raises TypeError\r\ndf = pd.DataFrame({'a': cat_ordered_series})\r\ndf.median()\r\n\r\nOut: Series([], dtype: float64)\r\n```\r\n\r\nThis really seems to be a little inconsistent. I think median calculations on unordered categories should always be omitted (when in DataFrames) or raise TypeError (when in Series). For ordered categories I am actually not sure, as the median can be computed, but is often not very meaningful. However, I think it is a bit confusing if categories are coerced to numbers."
  }
]
