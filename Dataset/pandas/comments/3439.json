[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16929482",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-16929482",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 16929482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTI5NDgy",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T13:49:04Z",
    "updated_at": "2013-04-24T13:49:04Z",
    "author_association": "NONE",
    "body": "Those are code examples utilizing the familiar \">>>\", not doctests per se.\nPractically all those methods are covered by the test suite, which is where testing\nis done in pandas.\n\nThanks, closing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16943779",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-16943779",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 16943779,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTQzNzc5",
    "user": {
      "login": "bmu",
      "id": 1622906,
      "node_id": "MDQ6VXNlcjE2MjI5MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1622906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmu",
      "html_url": "https://github.com/bmu",
      "followers_url": "https://api.github.com/users/bmu/followers",
      "following_url": "https://api.github.com/users/bmu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmu/subscriptions",
      "organizations_url": "https://api.github.com/users/bmu/orgs",
      "repos_url": "https://api.github.com/users/bmu/repos",
      "events_url": "https://api.github.com/users/bmu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T16:03:47Z",
    "updated_at": "2013-04-24T16:03:47Z",
    "author_association": "NONE",
    "body": "@y-p I'm not really happy with closing this ticket. \n\nI think if there are examples, they should work. I think it is useful to have examples in the docstrings especially in ipython, where you can copy and paste them into the console and try some things with the objects created from pasting the examples. \n\nAn example is numpy, where examples are given in the same way, but they work (they are using \">>>\" to and I think this is no problem, it's even given in the documentation of the [doctest module](http://docs.python.org/2/library/doctest.html) as an example, you can paste in the examples with the prompt into ipython and its ignoring the prompt). Numpy and matplotlib also use the \"default\" import names (numpy as np, matplotlib.pyplot as plt) which makes the users familiar with these shortcuts.\n\nsure it is right, that the testing in pandas is done by the unittests, but if there are examples in the docstrings I think they should be tested to and they should work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16945087",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-16945087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 16945087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTQ1MDg3",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T16:20:51Z",
    "updated_at": "2013-04-24T16:20:51Z",
    "author_association": "MEMBER",
    "body": "Not sure how this would be possible with pandas the the repr for objects cannot be used typically to reconstruct the object for comparison. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16945488",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-16945488",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 16945488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTQ1NDg4",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T16:26:49Z",
    "updated_at": "2013-04-24T16:28:09Z",
    "author_association": "NONE",
    "body": "Looking at the actual docstrings, these are examples of invocation/signature not full blown doctests \n(they use nonexistent variables for example, and there's no expected result).\n\nalso note that numpydoc docstrings use >>> to annotate something for syntax highlighting,\nnot necessarily as doctest.\n\nSince they weren't written as doctests, `nose --with-doctest` failing isn't really a \"failing test\",\nbut PRs are welcome naturally.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16952529",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-16952529",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 16952529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTUyNTI5",
    "user": {
      "login": "bmu",
      "id": 1622906,
      "node_id": "MDQ6VXNlcjE2MjI5MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1622906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmu",
      "html_url": "https://github.com/bmu",
      "followers_url": "https://api.github.com/users/bmu/followers",
      "following_url": "https://api.github.com/users/bmu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmu/subscriptions",
      "organizations_url": "https://api.github.com/users/bmu/orgs",
      "repos_url": "https://api.github.com/users/bmu/repos",
      "events_url": "https://api.github.com/users/bmu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T17:47:39Z",
    "updated_at": "2013-04-24T17:49:39Z",
    "author_association": "NONE",
    "body": "@wesm I don't mean the repr but the object itself created by the example code.\n\nAs an example, in the docs of the `DataFrame` class definition there are the lines \n\n``` python\n>>> df3 = DataFrame(np.random.randn(10, 5),                                                               \n...                 columns=['a', 'b', 'c', 'd', 'e'])            \n```\n\nIf I paste them into ipython I have a DataFrame with named columns, which maybe useful for a beginner as he can further inspect the dataframe (attribute access of the cols, ...) and you don't have to write this code yourself. It's not a big thing, but I did this with numpy and especially with matplotlib where you have more complicated objects with man attributes/methods. Maybe others do this too.\n\n@y-p ok, so perhaps the title of this ticket is wrong: most examples are not working as they are. It wasn't really meant to report \"failing tests\", but failing examples (and doctest is a method to test examples in this way).  \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/16953086",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-16953086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 16953086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2OTUzMDg2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-24T17:55:54Z",
    "updated_at": "2013-04-24T18:12:59Z",
    "author_association": "NONE",
    "body": "as I said, PRs welcome. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19154330",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-19154330",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 19154330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTU0MzMw",
    "user": {
      "login": "bmu",
      "id": 1622906,
      "node_id": "MDQ6VXNlcjE2MjI5MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1622906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmu",
      "html_url": "https://github.com/bmu",
      "followers_url": "https://api.github.com/users/bmu/followers",
      "following_url": "https://api.github.com/users/bmu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmu/subscriptions",
      "organizations_url": "https://api.github.com/users/bmu/orgs",
      "repos_url": "https://api.github.com/users/bmu/repos",
      "events_url": "https://api.github.com/users/bmu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-08T19:45:53Z",
    "updated_at": "2013-06-08T19:45:53Z",
    "author_association": "NONE",
    "body": "Just found an for a \"failing doctest\" on on [SO](http://stackoverflow.com/questions/17003034/missing-data-in-pandas-crosstab).\n\nThe asker is expecting the output of the docstring, however he gets a different result.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19164252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-19164252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 19164252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTY0MjUy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-09T10:56:28Z",
    "updated_at": "2013-06-09T10:56:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bmu It's slightly different (he's tweaked the input arrays), basically OP wants the MultiIndex to include empty columns. The example in the docstring has no empty columns.\n\n_I think that's a feature request (#3820) rather than a docstring bug?_\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19168005",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-19168005",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 19168005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTY4MDA1",
    "user": {
      "login": "bmu",
      "id": 1622906,
      "node_id": "MDQ6VXNlcjE2MjI5MDY=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1622906?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bmu",
      "html_url": "https://github.com/bmu",
      "followers_url": "https://api.github.com/users/bmu/followers",
      "following_url": "https://api.github.com/users/bmu/following{/other_user}",
      "gists_url": "https://api.github.com/users/bmu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bmu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bmu/subscriptions",
      "organizations_url": "https://api.github.com/users/bmu/orgs",
      "repos_url": "https://api.github.com/users/bmu/repos",
      "events_url": "https://api.github.com/users/bmu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bmu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-09T15:34:22Z",
    "updated_at": "2013-06-09T15:34:22Z",
    "author_association": "NONE",
    "body": "@hayd I see, you are rigth. However in the example section of the `crosstab` docstring a multi index is returned, while the output you get, if you execute the statement is different.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303175355",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-303175355",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 303175355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE3NTM1NQ==",
    "user": {
      "login": "ProsperousHeart",
      "id": 20706498,
      "node_id": "MDQ6VXNlcjIwNzA2NDk4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20706498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ProsperousHeart",
      "html_url": "https://github.com/ProsperousHeart",
      "followers_url": "https://api.github.com/users/ProsperousHeart/followers",
      "following_url": "https://api.github.com/users/ProsperousHeart/following{/other_user}",
      "gists_url": "https://api.github.com/users/ProsperousHeart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ProsperousHeart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ProsperousHeart/subscriptions",
      "organizations_url": "https://api.github.com/users/ProsperousHeart/orgs",
      "repos_url": "https://api.github.com/users/ProsperousHeart/repos",
      "events_url": "https://api.github.com/users/ProsperousHeart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ProsperousHeart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T18:01:51Z",
    "updated_at": "2017-05-22T18:01:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm working on this now. :)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303186495",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-303186495",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 303186495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE4NjQ5NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T18:45:33Z",
    "updated_at": "2017-05-22T18:45:33Z",
    "author_association": "MEMBER",
    "body": "BTW, running doctests using pytest can be done like:\r\n\r\n```\r\npytest --doctests-module pandas/core/series.py\r\n```\r\n\r\nAnd example PR for the adjustments that are needed to get the doctests running: https://github.com/pandas-dev/pandas/pull/15625"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/303195141",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-303195141",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 303195141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzE5NTE0MQ==",
    "user": {
      "login": "ProsperousHeart",
      "id": 20706498,
      "node_id": "MDQ6VXNlcjIwNzA2NDk4",
      "avatar_url": "https://avatars3.githubusercontent.com/u/20706498?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ProsperousHeart",
      "html_url": "https://github.com/ProsperousHeart",
      "followers_url": "https://api.github.com/users/ProsperousHeart/followers",
      "following_url": "https://api.github.com/users/ProsperousHeart/following{/other_user}",
      "gists_url": "https://api.github.com/users/ProsperousHeart/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ProsperousHeart/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ProsperousHeart/subscriptions",
      "organizations_url": "https://api.github.com/users/ProsperousHeart/orgs",
      "repos_url": "https://api.github.com/users/ProsperousHeart/repos",
      "events_url": "https://api.github.com/users/ProsperousHeart/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ProsperousHeart/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T19:21:18Z",
    "updated_at": "2017-05-22T19:22:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche - that won't work if you're in the pandas folder already. Would need to be:\r\n\r\n`pytest --doctests-module core/series.py`\r\n\r\n@TomAugspurger helped me with that (I'm on Windows) - though I may be misspeaking on my understanding of the issue I was having..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365091384",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3439#issuecomment-365091384",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3439",
    "id": 365091384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTA5MTM4NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-12T22:54:28Z",
    "updated_at": "2018-02-12T22:54:28Z",
    "author_association": "MEMBER",
    "body": "Was just looking how you can run doctests for a single method, and you can do this as follows:\r\n\r\n```\r\npytest --doctest-modules pandas/core/frame.py -k sort_values\r\n```\r\n\r\nin case you want to test `DataFrame.sort_values`. \r\n(for series method, you need to specify pandas/core/series.py)\r\n\r\ncc @datapythonista "
  }
]
