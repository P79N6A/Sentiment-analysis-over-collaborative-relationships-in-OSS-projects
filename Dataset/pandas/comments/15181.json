[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/274073773",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15181#issuecomment-274073773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15181",
    "id": 274073773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDA3Mzc3Mw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T13:38:21Z",
    "updated_at": "2017-01-20T13:38:21Z",
    "author_association": "MEMBER",
    "body": "I think we had the same problem before (I seem to remember this from #14479), but decorating exceptions does not seem to work in practice:\r\n\r\n```\r\nIn [1]: from pandas.core.common import UnsortedIndexError\r\n\r\nIn [2]: try:\r\n   ...:     raise pd.api.exceptions.UnsortedIndexError()\r\n   ...: except UnsortedIndexError:\r\n   ...:     print('catched')\r\n   ...:     \r\n---------------------------------------------------------------------------\r\nUnsortedIndexError                        Traceback (most recent call last)\r\n<ipython-input-2-c3dad543bd57> in <module>()\r\n      1 try:\r\n----> 2     raise pd.api.exceptions.UnsortedIndexError()\r\n      3 except UnsortedIndexError:\r\n\r\nUnsortedIndexError: \r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-2-c3dad543bd57> in <module>()\r\n      1 try:\r\n      2     raise pd.api.exceptions.UnsortedIndexError()\r\n----> 3 except UnsortedIndexError:\r\n      4     print('gevangen')\r\n      5 \r\n\r\nTypeError: catching classes that do not inherit from BaseException is not allowed\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/274076085",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15181#issuecomment-274076085",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15181",
    "id": 274076085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDA3NjA4NQ==",
    "user": {
      "login": "m-charlton",
      "id": 7031487,
      "node_id": "MDQ6VXNlcjcwMzE0ODc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7031487?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/m-charlton",
      "html_url": "https://github.com/m-charlton",
      "followers_url": "https://api.github.com/users/m-charlton/followers",
      "following_url": "https://api.github.com/users/m-charlton/following{/other_user}",
      "gists_url": "https://api.github.com/users/m-charlton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/m-charlton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/m-charlton/subscriptions",
      "organizations_url": "https://api.github.com/users/m-charlton/orgs",
      "repos_url": "https://api.github.com/users/m-charlton/repos",
      "events_url": "https://api.github.com/users/m-charlton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/m-charlton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T13:49:54Z",
    "updated_at": "2017-01-20T13:49:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "O.K. Will wait further instructions."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/274181288",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15181#issuecomment-274181288",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15181",
    "id": 274181288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDE4MTI4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-20T21:13:05Z",
    "updated_at": "2017-01-20T21:13:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "so I think what you have to do here, is add an option to ``_DeprecatedModule`` to allow it to function as an entire proxy module, but not to show the deprecation warning, except on the removals.\r\n\r\nIOW, we want to proxy ``pandas.core.common``, and if its a ``_removals``, then show the deprecation message.\r\n\r\nSo if you add an option (default it to True), to show the ``DeprecationWarning`` for the module itself (but when you call it here, you will pass False). add the ``_removals`` for the exceptions, this could work.\r\n\r\nthe ``_add_proxy`` is wrapping a function around the exception which doesn't work (and I don't think we are actually using this anywhere)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/287659618",
    "html_url": "https://github.com/pandas-dev/pandas/pull/15181#issuecomment-287659618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/15181",
    "id": 287659618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NzY1OTYxOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-20T00:13:01Z",
    "updated_at": "2017-03-20T00:13:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #15541 "
  }
]
