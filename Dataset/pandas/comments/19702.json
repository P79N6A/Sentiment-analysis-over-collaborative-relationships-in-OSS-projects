[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365816404",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365816404",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365816404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTgxNjQwNA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T03:30:57Z",
    "updated_at": "2018-02-15T03:30:57Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger : Not sure what your intention with this PR is, but we could just have more `allow fail` builds with one against `matplotlib` master."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365819738",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365819738",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365819738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTgxOTczOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T04:03:03Z",
    "updated_at": "2018-02-15T04:03:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "NO\r\n\r\nFYI the point of the marked allow_fail builds is not to actually allow them to fail\r\nrather to have a successful build show green quicker \r\n\r\nall builds must succeed - if they r unstable or unexplained that is a problem"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365820332",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365820332",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365820332,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTgyMDMzMg==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T04:09:04Z",
    "updated_at": "2018-02-15T04:09:04Z",
    "author_association": "MEMBER",
    "body": "@jreback : I do understand the point of the `allow_fail` for `pandas`, but my point is that it would allow us to catch problems with project dependencies earlier without necessarily blocking PR's.  That being said, I'm still not sure what @TomAugspurger was trying to do with this PR, so it might be moot."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365855281",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365855281",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365855281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTg1NTI4MQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T08:21:56Z",
    "updated_at": "2018-02-15T08:21:56Z",
    "author_association": "MEMBER",
    "body": "> That being said, I'm still not sure what @TomAugspurger was trying to do with this PR, so it might be moot.\r\n\r\nI think Tom is just doing what the title says: try out the rc of matplotlib. To see whether things are breaking, to know if we need to take action to fix things in pandas or report issues upstream."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365856279",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365856279",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365856279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTg1NjI3OQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T08:26:43Z",
    "updated_at": "2018-02-15T08:26:43Z",
    "author_association": "MEMBER",
    "body": "And so there are 3 failures:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n________________ TestTSPlot.test_format_timedelta_ticks_narrow _________________\r\n[gw1] linux -- Python 3.6.4 /home/travis/miniconda3/envs/pandas/bin/python\r\nself = <pandas.tests.plotting.test_datetimelike.TestTSPlot object at 0x7fdb10497160>\r\n    def test_format_timedelta_ticks_narrow(self):\r\n        if is_platform_mac():\r\n            pytest.skip(\"skip on mac for precision display issue on older mpl\")\r\n    \r\n        if self.mpl_ge_2_0_0:\r\n            expected_labels = [''] + [\r\n                '00:00:00.00000000{:d}'.format(2 * i)\r\n                for i in range(5)] + ['']\r\n        else:\r\n            expected_labels = [\r\n                '00:00:00.00000000{:d}'.format(i)\r\n                for i in range(10)]\r\n    \r\n        rng = timedelta_range('0', periods=10, freq='ns')\r\n        df = DataFrame(np.random.randn(len(rng), 3), rng)\r\n        fig, ax = self.plt.subplots()\r\n        df.plot(fontsize=2, ax=ax)\r\n        fig.canvas.draw()\r\n        labels = ax.get_xticklabels()\r\n        assert len(labels) == len(expected_labels)\r\n        for l, l_expected in zip(labels, expected_labels):\r\n>           assert l.get_text() == l_expected\r\nE           AssertionError: assert '-1 days 23:59:59.999999998' == ''\r\nE             - -1 days 23:59:59.999999998\r\npandas/tests/plotting/test_datetimelike.py:1363: AssertionError\r\n_________________ TestTSPlot.test_format_timedelta_ticks_wide __________________\r\n[gw1] linux -- Python 3.6.4 /home/travis/miniconda3/envs/pandas/bin/python\r\nself = <pandas.tests.plotting.test_datetimelike.TestTSPlot object at 0x7fdb0fa10208>\r\n    def test_format_timedelta_ticks_wide(self):\r\n        if is_platform_mac():\r\n            pytest.skip(\"skip on mac for precision display issue on older mpl\")\r\n    \r\n        if self.mpl_ge_2_0_0:\r\n            expected_labels = [\r\n                '',\r\n                '00:00:00',\r\n                '1 days 03:46:40',\r\n                '2 days 07:33:20',\r\n                '3 days 11:20:00',\r\n                '4 days 15:06:40',\r\n                '5 days 18:53:20',\r\n                '6 days 22:40:00',\r\n                '8 days 02:26:40',\r\n                '9 days 06:13:20',\r\n                ''\r\n            ]\r\n        else:\r\n            expected_labels = [\r\n                '00:00:00',\r\n                '1 days 03:46:40',\r\n                '2 days 07:33:20',\r\n                '3 days 11:20:00',\r\n                '4 days 15:06:40',\r\n                '5 days 18:53:20',\r\n                '6 days 22:40:00',\r\n                '8 days 02:26:40',\r\n                ''\r\n            ]\r\n    \r\n        rng = timedelta_range('0', periods=10, freq='1 d')\r\n        df = DataFrame(np.random.randn(len(rng), 3), rng)\r\n        fig, ax = self.plt.subplots()\r\n        ax = df.plot(fontsize=2, ax=ax)\r\n        fig.canvas.draw()\r\n        labels = ax.get_xticklabels()\r\n        assert len(labels) == len(expected_labels)\r\n        for l, l_expected in zip(labels, expected_labels):\r\n>           assert l.get_text() == l_expected\r\nE           AssertionError: assert '-2 days 20:13:20' == ''\r\nE             - -2 days 20:13:20\r\npandas/tests/plotting/test_datetimelike.py:1404: AssertionError\r\n______________________ TestDataFramePlots.test_plain_axes ______________________\r\n[gw1] linux -- Python 3.6.4 /home/travis/miniconda3/envs/pandas/bin/python\r\nself = <pandas.tests.plotting.test_frame.TestDataFramePlots object at 0x7fdb08abcc18>\r\n    def test_plain_axes(self):\r\n    \r\n        # supplied ax itself is a SubplotAxes, but figure contains also\r\n        # a plain Axes object (GH11556)\r\n        fig, ax = self.plt.subplots()\r\n        fig.add_axes([0.2, 0.2, 0.2, 0.2])\r\n        Series(rand(10)).plot(ax=ax)\r\n    \r\n        # suppliad ax itself is a plain Axes, but because the cmap keyword\r\n        # a new ax is created for the colorbar -> also multiples axes (GH11520)\r\n        df = DataFrame({'a': randn(8), 'b': randn(8)})\r\n        fig = self.plt.figure()\r\n        ax = fig.add_axes((0, 0, 1, 1))\r\n>       df.plot(kind='scatter', ax=ax, x='a', y='b', c='a', cmap='hsv')\r\npandas/tests/plotting/test_frame.py:2846: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\npandas/plotting/_core.py:2693: in __call__\r\n    sort_columns=sort_columns, **kwds)\r\npandas/plotting/_core.py:1909: in plot_frame\r\n    **kwds)\r\npandas/plotting/_core.py:1736: in _plot\r\n    plot_obj.generate()\r\npandas/plotting/_core.py:252: in generate\r\n    self._make_plot()\r\npandas/plotting/_core.py:877: in _make_plot\r\n    self.fig.colorbar(img, **kws)\r\n../../../miniconda3/envs/pandas/lib/python3.6/site-packages/matplotlib/figure.py:2062: in colorbar\r\n    cax, kw = cbar.make_axes(ax, **kw)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\nparents = array([<matplotlib.axes._axes.Axes object at 0x7fdb0efd2908>],\r\n      dtype=object)\r\nlocation = 'right', orientation = None, fraction = 0.15, shrink = 1.0\r\naspect = 20\r\nkw = {'label': 'a', 'orientation': 'vertical', 'ticklocation': 'right'}\r\nlocations = ['left', 'right', 'top', 'bottom']\r\ndefault_location_settings = {'bottom': {'anchor': (0.5, 1.0), 'orientation': 'horizontal', 'pad': 0.15, 'panchor': (0.5, 0.0)}, 'left': {'anchor':...'panchor': (1.0, 0.5)}, 'top': {'anchor': (0.5, 0.0), 'orientation': 'horizontal', 'pad': 0.05, 'panchor': (0.5, 1.0)}}\r\nloc_settings = {'anchor': (0.0, 0.5), 'orientation': 'vertical', 'pad': 0.05, 'panchor': (1.0, 0.5)}\r\nanchor = (0.0, 0.5), parent_anchor = (1.0, 0.5)\r\n    @docstring.Substitution(make_axes_kw_doc)\r\n    def make_axes(parents, location=None, orientation=None, fraction=0.15,\r\n                  shrink=1.0, aspect=20, **kw):\r\n        '''\r\n        Resize and reposition parent axes, and return a child\r\n        axes suitable for a colorbar.\r\n    \r\n        Keyword arguments may include the following (with defaults):\r\n    \r\n            location : [None|'left'|'right'|'top'|'bottom']\r\n                The position, relative to **parents**, where the colorbar axes\r\n                should be created. If None, the value will either come from the\r\n                given ``orientation``, else it will default to 'right'.\r\n    \r\n            orientation :  [None|'vertical'|'horizontal']\r\n                The orientation of the colorbar. Typically, this keyword shouldn't\r\n                be used, as it can be derived from the ``location`` keyword.\r\n    \r\n        %s\r\n    \r\n        Returns (cax, kw), the child axes and the reduced kw dictionary to be\r\n        passed when creating the colorbar instance.\r\n        '''\r\n        locations = [\"left\", \"right\", \"top\", \"bottom\"]\r\n        if orientation is not None and location is not None:\r\n            raise TypeError('position and orientation are mutually exclusive. '\r\n                            'Consider setting the position to any of {}'\r\n                            .format(', '.join(locations)))\r\n    \r\n        # provide a default location\r\n        if location is None and orientation is None:\r\n            location = 'right'\r\n    \r\n        # allow the user to not specify the location by specifying the\r\n        # orientation instead\r\n        if location is None:\r\n            location = 'right' if orientation == 'vertical' else 'bottom'\r\n    \r\n        if location not in locations:\r\n            raise ValueError('Invalid colorbar location. Must be one '\r\n                             'of %s' % ', '.join(locations))\r\n    \r\n        default_location_settings = {'left':   {'anchor': (1.0, 0.5),\r\n                                                'panchor': (0.0, 0.5),\r\n                                                'pad': 0.10,\r\n                                                'orientation': 'vertical'},\r\n                                     'right':  {'anchor': (0.0, 0.5),\r\n                                                'panchor': (1.0, 0.5),\r\n                                                'pad': 0.05,\r\n                                                'orientation': 'vertical'},\r\n                                     'top':    {'anchor': (0.5, 0.0),\r\n                                                'panchor': (0.5, 1.0),\r\n                                                'pad': 0.05,\r\n                                                'orientation': 'horizontal'},\r\n                                     'bottom': {'anchor': (0.5, 1.0),\r\n                                                'panchor': (0.5, 0.0),\r\n                                                'pad': 0.15,  # backwards compat\r\n                                                'orientation': 'horizontal'},\r\n                                     }\r\n    \r\n        loc_settings = default_location_settings[location]\r\n    \r\n        # put appropriate values into the kw dict for passing back to\r\n        # the Colorbar class\r\n        kw['orientation'] = loc_settings['orientation']\r\n        kw['ticklocation'] = location\r\n    \r\n        anchor = kw.pop('anchor', loc_settings['anchor'])\r\n        parent_anchor = kw.pop('panchor', loc_settings['panchor'])\r\n    \r\n        # turn parents into a list if it is not already. We do this w/ np\r\n        # because `plt.subplots` can return an ndarray and is natural to\r\n        # pass to `colorbar`.\r\n        parents = np.atleast_1d(parents).ravel()\r\n    \r\n        # check if using constrained_layout:\r\n>       gs = parents[0].get_subplotspec().get_gridspec()\r\nE       AttributeError: 'Axes' object has no attribute 'get_subplotspec'\r\n../../../miniconda3/envs/pandas/lib/python3.6/site-packages/matplotlib/colorbar.py:1135: AttributeError\r\n```\r\n\r\n@TomAugspurger The `SLOW=true` ones don't have seemed to pick up the rc version of matplotlib though"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365857868",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365857868",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365857868,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTg1Nzg2OA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T08:34:14Z",
    "updated_at": "2018-02-15T08:34:14Z",
    "author_association": "MEMBER",
    "body": "> I think Tom is just doing what the title says: try out the rc of matplotlib. To see whether things are breaking, to know if we need to take action to fix things in pandas or report issues upstream.\r\n\r\nSure, but I was slightly confused by the execution, hence why I had suggested that we could add a build that runs against `matplotlib` master."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365908211",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365908211",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365908211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTkwODIxMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T12:06:55Z",
    "updated_at": "2018-02-15T12:06:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think the occasional failures from churn on MPL master would be worth it. Testing against RCs seems fine.\r\n\r\n> The SLOW=true ones don't have seemed to pick up the rc version of matplotlib though\r\n\r\nSaw that, not sure why yet. Will repush, and see if I can try it out locally.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365909841",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365909841",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365909841,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTkwOTg0MQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T12:14:32Z",
    "updated_at": "2018-02-15T12:14:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Lazy ping to @tacaswell, I haven't read the release notes yet. Do any of the failures in https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365856279 concern you?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/365910756",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-365910756",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 365910756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTkxMDc1Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-15T12:18:52Z",
    "updated_at": "2018-02-15T12:18:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also lots of warnings, some from us, some from matplotlib\r\n\r\n<details>\r\n\r\n```\r\npandas/tests/plotting/test_frame.py::TestDataFramePlots::()::test_subplots_multiple_axes\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/plotting/_tools.py:204: UserWarning: When passing multiple axes, layout keyword is ignored\r\n    \"ignored\", UserWarning)\r\n\r\npandas/tests/plotting/test_frame.py::TestDataFramePlots::()::test_hist_df\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/axes/_axes.py:6444: UserWarning: The 'normed' kwarg is deprecated, and has been replaced by the 'density' kwarg.\r\n    warnings.warn(\"The 'normed' kwarg is deprecated, and has been \"\r\n\r\npandas/tests/plotting/test_frame.py::TestDataFramePlots::()::test_line_colors\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/plotting/_core.py:186: UserWarning: 'colors' is being deprecated. Please use 'color'instead of 'colors'\r\n    warnings.warn((\"'colors' is being deprecated. Please use 'color'\"\r\n\r\npandas/tests/plotting/test_frame.py::TestDataFramePlots::()::test_errorbar_plot\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/plotting/_core.py:1736: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\r\n    plot_obj.generate()\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/plotting/_core.py:1736: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\r\n    plot_obj.generate()\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/plotting/_core.py:1736: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\r\n    plot_obj.generate()\r\n\r\npandas/tests/plotting/test_frame.py::TestDataFramePlots::()::test_errorbar_timeseries\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/plotting/_core.py:1736: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\r\n    plot_obj.generate()\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/plotting/_core.py:1736: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\r\n    plot_obj.generate()\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/plotting/_core.py:1736: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\r\n    plot_obj.generate()\r\n\r\npandas/tests/plotting/test_hist_method.py::TestSeriesPlots::()::test_hist_legacy\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n\r\npandas/tests/plotting/test_hist_method.py::TestDataFramePlots::()::test_hist_df_legacy\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/axes/_axes.py:6444: UserWarning: The 'normed' kwarg is deprecated, and has been replaced by the 'density' kwarg.\r\n    warnings.warn(\"The 'normed' kwarg is deprecated, and has been \"\r\n\r\npandas/tests/plotting/test_hist_method.py::TestDataFramePlots::()::test_tight_layout\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/pandas/pandas/tests/plotting/test_hist_method.py:248: UserWarning: To output multiple subplots, the figure containing the passed axes is being cleared\r\n    _check_plot_works(df.hist)\r\n\r\npandas/tests/plotting/test_hist_method.py::TestDataFrameGroupByPlots::()::test_grouped_hist_legacy\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/axes/_axes.py:6444: UserWarning: The 'normed' kwarg is deprecated, and has been replaced by the 'density' kwarg.\r\n    warnings.warn(\"The 'normed' kwarg is deprecated, and has been \"\r\n\r\npandas/tests/plotting/test_misc.py::TestSeriesPlots::()::test_autocorrelation_plot\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n\r\npandas/tests/plotting/test_misc.py::TestDataFramePlots::()::test_andrews_curves\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n\r\npandas/tests/plotting/test_misc.py::TestDataFramePlots::()::test_parallel_coordinates_with_sorted_labels\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/axes/_base.py:3121: UserWarning: Attempting to set identical left==right results\r\n  in singular transformations; automatically expanding.\r\n  left=0, right=0\r\n    'left=%s, right=%s') % (left, right))\r\n\r\npandas/tests/plotting/test_misc.py::TestDataFramePlots::()::test_radviz\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/pyplot.py:984: UserWarning: Requested projection is different from current axis projection, creating new axis with requested projection.\r\n    return gcf().gca(**kwargs)\r\n\r\npandas/tests/plotting/test_series.py::TestSeriesPlots::()::test_hist_legacy\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n  /Users/taugspurger/Envs/pandas-dev/lib/python3.6/site-packages/matplotlib/cbook/deprecation.py:107: MatplotlibDeprecationWarning: Adding an axes using the same arguments as a previous axes currently reuses the earlier instance.  In a future version, a new instance will always be created and returned.  Meanwhile, this warning can be suppressed, and the future behavior ensured, by passing a unique label to each axes instance.\r\n    warnings.warn(message, mplDeprecation, stacklevel=1)\r\n```\r\n\r\n</details>"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/371516607",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-371516607",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 371516607,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUxNjYwNw==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:13:43Z",
    "updated_at": "2018-03-08T15:13:43Z",
    "author_association": "CONTRIBUTOR",
    "body": " - TestTSPlot.test_format_timedelta_ticks_narrow and TestTSPlot.test_format_timedelta_ticks_narrow do not, I suspect that we are doing a better job of trimming un-shown ticks\r\n - TestDataFramePlots.test_plain_axes this one does and may be our fault (attn @jklymak )\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/371529844",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-371529844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 371529844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUyOTg0NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:54:10Z",
    "updated_at": "2018-03-08T15:54:10Z",
    "author_association": "CONTRIBUTOR",
    "body": ">  I suspect that we are doing a better job of trimming un-shown ticks\r\n\r\nI was looking into those this morning, and it looks like MPL is doing everything correctly now. It matches the behavior of un-shown ticks for regular integer ticks / tick labels."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/371530958",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-371530958",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 371530958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MTUzMDk1OA==",
    "user": {
      "login": "jklymak",
      "id": 1562854,
      "node_id": "MDQ6VXNlcjE1NjI4NTQ=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1562854?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jklymak",
      "html_url": "https://github.com/jklymak",
      "followers_url": "https://api.github.com/users/jklymak/followers",
      "following_url": "https://api.github.com/users/jklymak/following{/other_user}",
      "gists_url": "https://api.github.com/users/jklymak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jklymak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jklymak/subscriptions",
      "organizations_url": "https://api.github.com/users/jklymak/orgs",
      "repos_url": "https://api.github.com/users/jklymak/repos",
      "events_url": "https://api.github.com/users/jklymak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jklymak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-08T15:57:38Z",
    "updated_at": "2018-03-08T16:02:35Z",
    "author_association": "NONE",
    "body": "https://github.com/matplotlib/matplotlib/pull/10594 covered the last colorbar issue and is in 2.2  Pandas uses `pyplot`?  "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/372444066",
    "html_url": "https://github.com/pandas-dev/pandas/pull/19702#issuecomment-372444066",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/19702",
    "id": 372444066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjQ0NDA2Ng==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-12T20:02:40Z",
    "updated_at": "2018-03-12T20:02:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing in favor of https://github.com/pandas-dev/pandas/pull/20079"
  }
]
