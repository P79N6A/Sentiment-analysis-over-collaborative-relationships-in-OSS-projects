[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145033282",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145033282",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145033282,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTAzMzI4Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T14:16:21Z",
    "updated_at": "2015-10-02T14:16:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @bashtage\n@jorisvandenbossche @shoyer @TomAugspurger @sinhrks \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145034129",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145034129",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145034129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTAzNDEyOQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T14:18:47Z",
    "updated_at": "2015-10-02T14:18:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is already _convert which could be promoted.\n\nOn Fri, Oct 2, 2015, 10:16 AM Jeff Reback notifications@github.com wrote:\n\n> cc @bashtage https://github.com/bashtage\n> @jorisvandenbossche https://github.com/jorisvandenbossche @shoyer\n> https://github.com/shoyer @TomAugspurger\n> https://github.com/TomAugspurger @sinhrks https://github.com/sinhrks\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/pydata/pandas/issues/11221#issuecomment-145033282.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145065188",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145065188",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145065188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA2NTE4OA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T15:34:13Z",
    "updated_at": "2015-10-02T15:34:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "The advantage of a well designed `convert` is that it works on DataFrames. All of `to_*` are only for 1-d types.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145065903",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145065903",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145065903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA2NTkwMw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T15:36:50Z",
    "updated_at": "2015-10-02T15:36:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bashtage oh I agree.\n\nThe problem is with `coerce`, you have to basically not auto-coerce things partially and so leave ambiguous things up to the user (via a 1-d use of the `pd.to_*`). But assuming we do that then yes, you could make it work.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145067323",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145067323",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145067323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA2NzMyMw==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T15:42:32Z",
    "updated_at": "2015-10-02T15:42:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "I was just thinking of the case where I imported data that should be numeric into a DF, but it has some mixed characters, and I want just numbers or NaNs.  This type of conversion is what I ultimately wanted when I started looking at `convert_objects` when I was surprised that asking to `coerce` of all strings didn't coerce it to NaN.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145068288",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145068288",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145068288,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA2ODI4OA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T15:47:14Z",
    "updated_at": "2015-10-02T15:47:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "but the problem is that of a mixed boolean/nan one is ambiguous (so maybe just need to 'handle' that)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145072165",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145072165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145072165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA3MjE2NQ==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T16:04:03Z",
    "updated_at": "2015-10-02T16:05:49Z",
    "author_association": "MEMBER",
    "body": "Some comments/observations:\n- I actually like `convert_objects` more than `convert`, because it more clearly says what it does: try to convert objects dtyped columns to a builtin dtype (convert is rather general).\n- If we decide that we something like current the convert objects _functionality_, I don't really see a reason to deprecate `convert_objects` for a new `converts`. I think it should be technically possible to deprecate the old _keywords_ (and not the function) in favor of new keywords. (actually the original approach in the reverted PR).\n- I think the functionality of `convert_objects` is useful (as already is stated above: that you can do something like `to_datetime/to_numeric/..` on dataframes). Using the `to_..` functions on each series separate will always be the preferable solution for robust code, but as long as `convert_objects` is very clearly defined (now there are some strange inconsistencies), I think it is useful to have this. It would be very nice if this could just be implemented in terms of the `to_..` methods. \n  A bit simplified in pseudo code:\n  \n  ```\n  def convert_objects(self, numeric=False, datetime=False, timedelta=False, coerce=False):\n      for each column:\n          if numeric:\n              pd.to_numeric(self, coerce=coerce)\n          elif datetime:\n              pd.to_datetime(self, coerce=coerce)\n          elif timedelta:\n              pd.to_timedelta(self, coerce=coerce)\n  ```\n- But, the main problem with this is: the **reason** `convert_objects` is useful now, is precisely because it has an extra 'rule' that the `to_..` methods don't have: _only convert the column if there is at least one value that can be converted_. \n  This is the reason that something like this works:\n  \n  ```\n  In [2]: df = pd.DataFrame({'int_str':['1', '2'], 'real_str':['a', 'b']})\n  \n  In [3]: df.convert_objects(convert_numeric=True)\n  Out[3]:\n     int_str real_str\n  0        1        a\n  1        2        b\n  \n  In [4]: df.convert_objects(convert_numeric=True).dtypes\n  Out[4]:\n  int_str      int64\n  real_str    object\n  dtype: object\n  ```\n  \n  and does not give:\n  \n  ```\n  Out[3]:\n     int_str   real_str\n  0        1        NaN\n  1        2        NaN\n  ```\n  \n  which would not be really useful (although maybe more predictable). The fact that is not always coerced to NaNs was considered as a bug, for which @bashtage did a PR (and for `to_numeric`, it is also logical that it returns NaNs). But this made `convert_objects` also less useful (so it was reverted in the end).  \n  So I think that in this case, we will have to deviate from the `to_..` behaviour\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145073084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145073084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145073084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA3MzA4NA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T16:08:14Z",
    "updated_at": "2015-10-02T16:08:14Z",
    "author_association": "MEMBER",
    "body": "Maybe this could be an extra parameter to `convert/convert_objects`: whether to coerce non-convertible-columns to NaN or not (meaning: columns for which there is at least not one element convertible and would lead to a full NaN column). @bashtage then you could have the behaviour you want, but the method can still be used for dataframes were not all columns should be considered as numeric. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145090102",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145090102",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145090102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA5MDEwMg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T17:17:41Z",
    "updated_at": "2015-10-02T17:17:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok so the question is should we u deprecate convert_objects thrn?\n\nI actually think convert is s much better name snd we certainly could add the options u describe to make it more useful \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/145149741",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-145149741",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 145149741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE0OTc0MQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T20:39:56Z",
    "updated_at": "2015-10-02T20:39:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "`convert_objects` just seems like a bad API feature since it has this path dependence where it\n\ntries to convert to type a\ntries to convert to type b if a fails, but not if a succeeds\ntries to convert to type c is a and b fail, but not if either succeed\n\nA better design would only convert a single type which removes any ambiguity if some data is ever convertible to more than one type. to `to_*` sort of get there, with the caveat that they operate column by column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158296272",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-158296272",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 158296272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODI5NjI3Mg==",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T06:43:34Z",
    "updated_at": "2015-11-20T06:43:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Long live convert_objects!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/158422052",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-158422052",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 158422052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODQyMjA1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T14:50:26Z",
    "updated_at": "2015-11-20T14:50:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "maybe what we need in the docs are some examples showing:\n\n`df.apply(pd.to_numeric)` and such (which effectively / more safely) replaces `.convert_objects`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232598462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-232598462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 232598462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjU5ODQ2Mg==",
    "user": {
      "login": "usagliaschi",
      "id": 12033774,
      "node_id": "MDQ6VXNlcjEyMDMzNzc0",
      "avatar_url": "https://avatars2.githubusercontent.com/u/12033774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/usagliaschi",
      "html_url": "https://github.com/usagliaschi",
      "followers_url": "https://api.github.com/users/usagliaschi/followers",
      "following_url": "https://api.github.com/users/usagliaschi/following{/other_user}",
      "gists_url": "https://api.github.com/users/usagliaschi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/usagliaschi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/usagliaschi/subscriptions",
      "organizations_url": "https://api.github.com/users/usagliaschi/orgs",
      "repos_url": "https://api.github.com/users/usagliaschi/repos",
      "events_url": "https://api.github.com/users/usagliaschi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/usagliaschi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T08:23:47Z",
    "updated_at": "2016-07-14T08:23:47Z",
    "author_association": "NONE",
    "body": "Hi all,\n\nI currently use convert_objects in many of my codes and I think this functionality is very useful when importing datasets that may differ every day in terms of columns composition. Is it really necessary to deprecate it or there's a chance to keep it alive?\n\nMany thanks,\nUmberto\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232621377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-232621377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 232621377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjYyMTM3Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T09:59:28Z",
    "updated_at": "2016-07-14T09:59:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "`.convert_objects` was inherently ambiguous and this was deprecate multiple versions ago. see the docs [here](http://pandas-docs.github.io/pandas-docs-travis/basics.html#object-conversion) for how to explicity do object conversion. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/232725249",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-232725249",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 232725249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjcyNTI0OQ==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-14T16:54:31Z",
    "updated_at": "2016-07-14T16:54:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree with @jreback  - `convert_objects` was full of magic and had difficult to guess behavior that was inconsistent across different conversion targets (e.g. numbers were not forces if all were not numbers even if told to coerce). \n\nA well designed guesser with clear, simple rule and no option to coerce could be useful, but it isn't hard to write your own with your favorite set of rules.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/246120793",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-246120793",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 246120793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NjEyMDc5Mw==",
    "user": {
      "login": "BKJackson",
      "id": 1946913,
      "node_id": "MDQ6VXNlcjE5NDY5MTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1946913?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BKJackson",
      "html_url": "https://github.com/BKJackson",
      "followers_url": "https://api.github.com/users/BKJackson/followers",
      "following_url": "https://api.github.com/users/BKJackson/following{/other_user}",
      "gists_url": "https://api.github.com/users/BKJackson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BKJackson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BKJackson/subscriptions",
      "organizations_url": "https://api.github.com/users/BKJackson/orgs",
      "repos_url": "https://api.github.com/users/BKJackson/repos",
      "events_url": "https://api.github.com/users/BKJackson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BKJackson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-10T16:21:58Z",
    "updated_at": "2016-09-10T16:25:22Z",
    "author_association": "NONE",
    "body": "FYI, the convert all (errors='coerce') and ignore (errors='ignore') options in .to_numeric is a problem in data files containing columns of strings that you want to keep and columns of strings that are actually numbers expressed in scientific notation (e.g, 6.2e+15) which require 'coerce' to convert from strings to float64.  \n\nThe (deprecated) convert.py file has a handy soft convert function that checks if a forced conversion produces all NaNs (such as a string that you want to keep) and then declines to convert the whole column.  \n\nA fourth error option, such as 'soft-coerce,' would catch scientific notation numbers while not forcing all strings to NaNs.\n\nAt the moment, my work around is:\n\n```\n    for col in df.columns:   \n        converted = pd.to_numeric(df[col],errors='coerce')  \n        df[col] = converted if not pd.isnull(converted).all() else df[col]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249656462",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-249656462",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 249656462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTY1NjQ2Mg==",
    "user": {
      "login": "abalter",
      "id": 5349876,
      "node_id": "MDQ6VXNlcjUzNDk4NzY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/5349876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abalter",
      "html_url": "https://github.com/abalter",
      "followers_url": "https://api.github.com/users/abalter/followers",
      "following_url": "https://api.github.com/users/abalter/following{/other_user}",
      "gists_url": "https://api.github.com/users/abalter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abalter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abalter/subscriptions",
      "organizations_url": "https://api.github.com/users/abalter/orgs",
      "repos_url": "https://api.github.com/users/abalter/repos",
      "events_url": "https://api.github.com/users/abalter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abalter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T18:32:11Z",
    "updated_at": "2016-09-26T18:32:11Z",
    "author_association": "NONE",
    "body": "The great thing about `convert_objects` over the various `to_*` methods is that you don't need to know the datatypes in advance. As @usagliaschi said, you may have heterogeneous data coming in and want a single function to handle it. This is exactly my current situation.\n\nIs there any replacement for a function that will match this functionality, in particular infer dates/datetimes?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288095139",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-288095139",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 288095139,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODA5NTEzOQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T14:27:50Z",
    "updated_at": "2017-03-21T14:28:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref https://github.com/pandas-dev/pandas/pull/15757#issuecomment-288090118\r\n\r\nI think it would be worth exposing whatever the new soft convert api is 0.20 (I haven't looked at it in detail), referencing it in the convert_objects depr message, then deferring convert_objects to the next version, if possible.\r\n\r\nI say this because I know there are people (for example, me) who have ignored the convert_objects depr message in a couple cases, in particular working with data where you don't necessarily know the columns. Real instance:\r\n\r\n```python\r\ndf = pd.read_html(source)[0]  # poorly formatted table, everything inferred to object\r\n                              # exact columns can vary\r\n\r\ndf.columns = df.loc[0, :]\r\ndf = df.drop(0).dropna()\r\n\r\ndf = df.convert_objects()\r\n```\r\n\r\nLooking at this again, I realize `df.apply(lambda x: pd.to_numeric(x, errors='ignore'))` would also work fine in this case, but that wasn't immediately obvious, and I'm not sure we've done enough handholding (for lack of a better term) to help people transition.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/288136261",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-288136261",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 288136261,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODEzNjI2MQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T16:30:10Z",
    "updated_at": "2017-03-21T16:30:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "IF we decide to expose a 'soft convert objects', would we want this called ``.covert_objects()``? or different name, maybe ``.convert()``? (e.g. instead of removing the deprecation, we simply changed it - which is probably more in breaking back-compat)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289503815",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289503815",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289503815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTUwMzgxNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-27T16:15:34Z",
    "updated_at": "2017-03-27T16:15:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "xref #15550 \r\n\r\nso I think a resolution to this could be:\r\n- adding ``.to_*`` to ``Series`` (#15550)\r\n- adding ``.to_*`` to ``DataFrame``\r\n- adding a ``soft`` option\r\n\r\nthen easy enough to do:\r\n\r\n``df.to_numeric(errors='soft')``\r\n\r\nif you *really* *really* want to actually convert things ala the original ``.convert_object()``. \r\n\r\n``df.to_datetime(errors='soft').to_timedelta(errors='soft').to_numeric(errors='soft')``\r\n\r\nAnd I suppose could offer a convenience feature for this:\r\n\r\n- ``df.to_converted()``\r\n- ``df.convert()`` (maybe too generic)\r\n- ``df.convert_objects()`` (resurrect)\r\n- ``df.to_just_figure_this_out()``\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289602024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289602024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289602024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTYwMjAyNA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-27T22:13:15Z",
    "updated_at": "2017-03-27T22:13:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the most useful soft conversion function would have either the ability to order the `to_*` rules, e.g. numeric-date-time or time-date-numeric since there are occasionally data that could be interpreted as multiple types. At least this was the case in `convert_objects`. Alternatively, one could only select a subset of the filters, such as only consider numeric-date. \r\n\r\nI agree extending the `to_*` to correctly operate on DataFrames would be useful."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289877038",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289877038",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289877038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTg3NzAzOA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T19:22:31Z",
    "updated_at": "2017-03-28T19:22:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @jreback - I like adding `to_...` to the `DataFrame` api, although maybe it's worth splitting out use cases.  Consider this ill-formed frame:\r\n\r\n```python\r\ndf = pd.DataFrame({'num_objects': [1, 2, 3], 'num_str': ['1', '2', '3']}, dtype=object)\r\n\r\ndf\r\nOut[2]: \r\n  num_objects num_str\r\n0           1       1\r\n1           2       2\r\n2           3       3\r\n\r\ndf.dtypes\r\nOut[3]: \r\nnum_objects    object\r\nnum_str        object\r\ndtype: object\r\n```\r\n\r\nThe default behavior of `convert_objects` is to only reinterpret the python ints into a proper int dtype, not cast the strings.  This is the behavior that I'd really miss killing `convert_objects`, and suspect others might too.\r\n```python\r\ndf.convert_objects().dtypes\r\nOut[4]: \r\nnum_objects     int64\r\nnum_str        object\r\ndtype: object\r\n\r\nIn [5]: df.apply(pd.to_numeric).dtypes\r\nOut[5]: \r\nnum_objects    int64\r\nnum_str        int64\r\ndtype: object\r\n```\r\n\r\nSo is it worth adding a `convert_pyobjects` (...not in love with that name) for just this case?  \r\n  `infer_python_types`\r\n  `convert_python_types`\r\n  ??\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289881138",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289881138",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289881138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTg4MTEzOA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T19:38:42Z",
    "updated_at": "2017-03-28T19:38:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think its easy enough to add a ``soft`` option to ``errors`` to do exactly this."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289881920",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289881920",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289881920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTg4MTkyMA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T19:41:57Z",
    "updated_at": "2017-03-28T19:41:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Would `pd.Series(['1', '2', '3']).to_numeric(errors='soft')` cast?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289883485",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289883485",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289883485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTg4MzQ4NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T19:48:12Z",
    "updated_at": "2017-03-28T19:48:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "``soft`` would just return [3] (as would ``coerce``\r\n\r\nThe difference is [4] (the Series in it). I think ``soft`` would return [5] and ``coerce`` would return [4]\r\n\r\n```\r\nIn [3]: pd.to_numeric(pd.Series(['1', '2', '3']), errors='coerce')\r\nOut[3]: \r\n0    1\r\n1    2\r\n2    3\r\ndtype: int64\r\n\r\nIn [4]: pd.to_numeric(pd.Series(['1', '2', 'foo']), errors='coerce')\r\nOut[4]: \r\n0    1.0\r\n1    2.0\r\n2    NaN\r\ndtype: float64\r\n\r\nIn [5]: pd.to_numeric(pd.Series(['1', '2', 'foo']), errors='ignore')\r\nOut[5]: \r\n0      1\r\n1      2\r\n2    foo\r\ndtype: object\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289886186",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289886186",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289886186,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTg4NjE4Ng==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T19:58:20Z",
    "updated_at": "2017-03-28T19:58:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the examples.  \r\n\r\nI still think \"only losslessly convert python objects into proper dtypes\" might be a better as separate operation from `to_numeric`?  There wouldn't be any way to produce `Out[4]` from my example above?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289888568",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289888568",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289888568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTg4ODU2OA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T20:07:24Z",
    "updated_at": "2017-03-28T20:07:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't think that it is possibly to losslessly convert python objects into proper dtypes is generally well defined.  There are certainly come objects that don't have a lossless native representation (e.g. str->float).\r\n\r\nThis ambiguity that was just described is precisely the challenge in writing a useful, correct and precise converter. \r\n\r\nShould the set of conversion options and the rules that will be used be described prior to implementing them?  I think they should or the code will default to be the reference set of rules (which was one of the problems with `convert_objects`)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289901803",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289901803",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289901803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTkwMTgwMw==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T20:55:33Z",
    "updated_at": "2017-03-28T20:55:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "To be clear, what I mean by losslessly converting is doing exactly what `pd.Series([<python objects]>)`  would do - converting to a numpy dtype if possible, otherwise leaving as object."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289906713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289906713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289906713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTkwNjcxMw==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T21:13:35Z",
    "updated_at": "2017-03-28T21:13:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I *think* the point of `convert_objects` and any successor is to strictly go beyond what that io tools will automatically do.  IOW, *some coercion* of *some objects* *some of the time* is essential.  The old `convert_objects` would, for example, coerce mixed strings and numbers to numbers and nulls. Tools like `read_csv` intentionally don't do this since this is fairly arbitrary. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/289907720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11221#issuecomment-289907720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11221",
    "id": 289907720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTkwNzcyMA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T21:17:46Z",
    "updated_at": "2017-03-28T21:17:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "The `to_*` are pretty precise and do what you tell them, even to non-objects.  For examples:\r\n\r\n```\r\nimport pandas as pd\r\nimport datetime as dt\r\nt = pd.Series([dt.datetime.now(), dt.datetime.now()])\r\n\r\npd.to_numeric(t)\r\nOut[7]: \r\n0    1490739351272159000\r\n1    1490739351272159000\r\ndtype: int64\r\n```\r\n\r\nI would assume that a successor to `convert_objects` would **only** convert `object` `dtype` and would not behave like this."
  }
]
