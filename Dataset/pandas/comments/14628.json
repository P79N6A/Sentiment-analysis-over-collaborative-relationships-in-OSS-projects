[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259573429",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14628#issuecomment-259573429",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14628",
    "id": 259573429,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTU3MzQyOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T01:04:50Z",
    "updated_at": "2016-11-10T01:04:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is tkinter necessary to reproduce the problem? Could you maybe simplify the example?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259594714",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14628#issuecomment-259594714",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14628",
    "id": 259594714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTU5NDcxNA==",
    "user": {
      "login": "Void2258",
      "id": 6126362,
      "node_id": "MDQ6VXNlcjYxMjYzNjI=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6126362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Void2258",
      "html_url": "https://github.com/Void2258",
      "followers_url": "https://api.github.com/users/Void2258/followers",
      "following_url": "https://api.github.com/users/Void2258/following{/other_user}",
      "gists_url": "https://api.github.com/users/Void2258/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Void2258/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Void2258/subscriptions",
      "organizations_url": "https://api.github.com/users/Void2258/orgs",
      "repos_url": "https://api.github.com/users/Void2258/repos",
      "events_url": "https://api.github.com/users/Void2258/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Void2258/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T03:43:28Z",
    "updated_at": "2016-11-10T03:48:44Z",
    "author_association": "NONE",
    "body": "OK, I just tried hardcoding the paths and removing all tkinter. Now, it writes the data perfectly BUT it no longer shows the variable `mode` behavior; it repeatedly overwrites the single line of data, but it writes the last set successfully. The example below includes a modified for loop to account for this.  \n\n``` python\nimport pandas as pd\nimport numpy as np\n\ninfilename = 'C:\\\\Users\\\\...infile.csv'\ndata = pd.read_csv(infilename, header=None)\noutfilename = 'C:\\\\Users\\\\...test.txt'\n\nsize=50 #number of items per line\ncol=0\nindexes = np.arange(0,len(data),size)#have to use numpy since range is now an immutable type in python 3\nindexes = np.append(indexes,[len(data)]) #add the uneven final index\nfor i in range(len(indexes)-1):\n    holder = pd.DataFrame(data.iloc[indexes[i]:indexes[i+1],col]).T\n    if i ==0:\n        holder.to_csv(outfilename, index=False, header=False)\n    else:\n        holder.to_csv(outfilename, index=False, header=False, mode='a')\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/259718109",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14628#issuecomment-259718109",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14628",
    "id": 259718109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTcxODEwOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-10T15:23:59Z",
    "updated_at": "2016-11-10T15:23:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Void2258 we still can run that example since we don't have a `'C:\\\\Users\\\\...infile.csv'` file on our computers. It doesn't look like `read_csv` is needed at all here. You could make the dataframe using `pd.DataFrame()`.\n\nEither way, I suspect the problem is with your looping logic, and not `to_csv`. I've tested that out and the appending works as expected. Maybe try stack overflow if you have a question about getting the loop logic worked out.\n"
  }
]
