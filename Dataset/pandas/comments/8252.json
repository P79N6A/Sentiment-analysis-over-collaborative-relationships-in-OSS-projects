[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/55393100",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8252#issuecomment-55393100",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8252",
    "id": 55393100,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1MzkzMTAw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-12T11:58:11Z",
    "updated_at": "2014-09-12T11:58:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "You can try separately creating Series (with each of the columns first), then putting them into a dict and creating the frame. However you might be having a problem finding contiguous memory.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56271952",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8252#issuecomment-56271952",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8252",
    "id": 56271952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MjcxOTUy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-20T16:03:48Z",
    "updated_at": "2014-09-21T17:53:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattdowle \n\nfinally had time to look at this. I think their was an extra copy going on in certain cases.\n\nso try this out using master (once I merge this change). This seems to scale much better.\n\nand the following slightly modified code:\n\n```\n# your original routines were using lots of extra memory as they were creating many python objects\ndef randChar(f, num_group, N):\n    things = np.array([f%x for x in range(num_group)])\n    return things.take(np.random.choice(num_group,N)).astype('object')\n\ndef randFloat(num_group, N):\n    things = (np.random.randn(num_group)*100).round(4)\n    return things.take(np.random.choice(num_group,N))\n\ndef f4(K, N):\n    objects = pd.DataFrame({'id1' : randChar(\"id%03d\", K, N),      # large groups (char)\n                            'id2' : randChar(\"id%03d\", K, N),      # large groups (char)\n                            'id3' : randChar(\"id%010d\", N//K, N)   # small groups (char)\n                            })\n    ints = pd.DataFrame({ 'id4' : np.random.choice(K, N),         # large groups (int)\n                          'id5' : np.random.choice(K, N),         # large groups (int)\n                          'id6' : np.random.choice(N//K, N),      # small groups (int)\n                          'v1' : np.random.choice(5, N),         # int in range [1,5]\n                          'v2' : np.random.choice(5, N)          # int in range [1,5]\n                          })\n    floats = pd.DataFrame({ 'v3' : randFloat(100,N) })               # numeric e.g. 23.5749\n\n    return pd.concat([objects,ints,floats],axis=1,copy=False)\n\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/56306723",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8252#issuecomment-56306723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8252",
    "id": 56306723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MzA2NzIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-21T17:54:54Z",
    "updated_at": "2014-09-21T17:54:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mattdowle I updated the example to give a pretty simplied version, that give pretty good memory performance (e.g is just a bit over 1X final data size) by not trying to create everything at once.\n"
  }
]
