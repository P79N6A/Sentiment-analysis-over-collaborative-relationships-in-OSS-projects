[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/34160569",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6124#issuecomment-34160569",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6124",
    "id": 34160569,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0MTYwNTY5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-05T12:16:04Z",
    "updated_at": "2014-02-05T12:16:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bburan-galenea pls confirm if #6265 is indeed a dupe (looks like it 2 me). pls add that example as a test if its substantially different (I didn't look).\n\nthanks\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36737125",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6124#issuecomment-36737125",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6124",
    "id": 36737125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM3MTI1",
    "user": {
      "login": "bburan-galenea",
      "id": 3977643,
      "node_id": "MDQ6VXNlcjM5Nzc2NDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3977643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bburan-galenea",
      "html_url": "https://github.com/bburan-galenea",
      "followers_url": "https://api.github.com/users/bburan-galenea/followers",
      "following_url": "https://api.github.com/users/bburan-galenea/following{/other_user}",
      "gists_url": "https://api.github.com/users/bburan-galenea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bburan-galenea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bburan-galenea/subscriptions",
      "organizations_url": "https://api.github.com/users/bburan-galenea/orgs",
      "repos_url": "https://api.github.com/users/bburan-galenea/repos",
      "events_url": "https://api.github.com/users/bburan-galenea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bburan-galenea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T12:26:00Z",
    "updated_at": "2014-03-05T12:26:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "When `GroupBy.apply` is provided a callable that returns a series, the proposed solution is to check the first series to see if it has a name attribute set.  If the name attribute is set, use that as the name for the resulting series.  However, this will break some of the unit tests in pandas.  Specifically, if we have the following:\n\n```\nimport pandas\ndf = pandas.DataFrame(\n        {'a':  [0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2],\n         'b':  [0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1],\n         'c':  [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],\n         'd':  [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1],\n         })\n\ndef count_values(df):\n    return df.iloc[1]\n\nresult = df.groupby('a').apply(count_values)\n```\n\nThere will be three groups and the Series returned for each group will be named with the index of the slice it was derived from (which will be 1, 5 and 9).  Since the series names are not consistent, the proposed solution in the PR (#6068) will fail since it checks to see if the series names are consistent before merging the series into a data frame.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36737677",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6124#issuecomment-36737677",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6124",
    "id": 36737677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM3Njc3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T12:34:06Z",
    "updated_at": "2014-03-05T12:34:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bburan-galenea ok...I think you can disambiguate that. Unfortunately groupy handles a lot of cases!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36737943",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6124#issuecomment-36737943",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6124",
    "id": 36737943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM3OTQz",
    "user": {
      "login": "bburan-galenea",
      "id": 3977643,
      "node_id": "MDQ6VXNlcjM5Nzc2NDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3977643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bburan-galenea",
      "html_url": "https://github.com/bburan-galenea",
      "followers_url": "https://api.github.com/users/bburan-galenea/followers",
      "following_url": "https://api.github.com/users/bburan-galenea/following{/other_user}",
      "gists_url": "https://api.github.com/users/bburan-galenea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bburan-galenea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bburan-galenea/subscriptions",
      "organizations_url": "https://api.github.com/users/bburan-galenea/orgs",
      "repos_url": "https://api.github.com/users/bburan-galenea/repos",
      "events_url": "https://api.github.com/users/bburan-galenea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bburan-galenea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T12:38:03Z",
    "updated_at": "2014-03-05T12:38:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure what you mean by disambiguating that.  There are several approaches:\n- If the series names are not consistent, raise an Exception (the proposed solution in a comment on the PR).  This seems like it may break existing code.\n- Don't name the series if the series names are inconsistent.\n- Scrap this approach and add a new keyword argument to `GroupBy.apply` called `name` that will be used to indicate the name of the resulting series.  For example, `result = df.groupby('a').apply(count_values, name='metrics')`\n\nOnce there's agreement on which approach is best, I can implement it.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36738148",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6124#issuecomment-36738148",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6124",
    "id": 36738148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM4MTQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T12:40:46Z",
    "updated_at": "2014-03-05T12:40:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "go with 2 (don't name) and see what effects this has.\n\ndon't want 1 as will break compat (or does it?)\n\n3 - too many keywords already.. :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/36738591",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6124#issuecomment-36738591",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6124",
    "id": 36738591,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzM4NTkx",
    "user": {
      "login": "bburan-galenea",
      "id": 3977643,
      "node_id": "MDQ6VXNlcjM5Nzc2NDM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/3977643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bburan-galenea",
      "html_url": "https://github.com/bburan-galenea",
      "followers_url": "https://api.github.com/users/bburan-galenea/followers",
      "following_url": "https://api.github.com/users/bburan-galenea/following{/other_user}",
      "gists_url": "https://api.github.com/users/bburan-galenea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bburan-galenea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bburan-galenea/subscriptions",
      "organizations_url": "https://api.github.com/users/bburan-galenea/orgs",
      "repos_url": "https://api.github.com/users/bburan-galenea/repos",
      "events_url": "https://api.github.com/users/bburan-galenea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bburan-galenea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-05T12:47:04Z",
    "updated_at": "2014-03-05T12:47:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks!  1 will probably break compatibility in someone's code (I can think of a few cases in some old analyses I've done where I might have done something similar with group/apply/iloc).  So, I will go with 2.\n"
  }
]
