[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249167466",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14286#issuecomment-249167466",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14286",
    "id": 249167466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTE2NzQ2Ng==",
    "user": {
      "login": "languitar",
      "id": 1336287,
      "node_id": "MDQ6VXNlcjEzMzYyODc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1336287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/languitar",
      "html_url": "https://github.com/languitar",
      "followers_url": "https://api.github.com/users/languitar/followers",
      "following_url": "https://api.github.com/users/languitar/following{/other_user}",
      "gists_url": "https://api.github.com/users/languitar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/languitar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/languitar/subscriptions",
      "organizations_url": "https://api.github.com/users/languitar/orgs",
      "repos_url": "https://api.github.com/users/languitar/repos",
      "events_url": "https://api.github.com/users/languitar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/languitar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T11:25:32Z",
    "updated_at": "2016-09-23T11:25:32Z",
    "author_association": "NONE",
    "body": "Oh, I forgot to activate the correct environment, The stacktrace and versions are quite old, but the same thing also happens with a more recent pandas version:\n\n```\nINSTALLED VERSIONS\n------------------\ncommit: None\npython: 2.7.12.final.0\npython-bits: 64\nOS: Linux\nOS-release: 3.18.1-tf1-ll\nmachine: x86_64\nprocessor: x86_64\nbyteorder: little\nLC_ALL: None\nLANG: en_US.UTF-8\n\npandas: 0.18.1\nnose: 1.3.7\npip: 7.1.2\nsetuptools: 18.7\nCython: None\nnumpy: 1.11.1\nscipy: 0.18.0\nstatsmodels: 0.6.1\nxarray: None\nIPython: 5.1.0\nsphinx: None\npatsy: 0.4.1\ndateutil: 2.5.3\npytz: 2016.6.1\nblosc: None\nbottleneck: None\ntables: 3.2.3.1\nnumexpr: 2.6.1\nmatplotlib: 1.5.1\nopenpyxl: None\nxlrd: None\nxlwt: None\nxlsxwriter: None\nlxml: None\nbs4: None\nhtml5lib: None\nhttplib2: None\napiclient: None\nsqlalchemy: None\npymysql: None\npsycopg2: None\njinja2: 2.8\nboto: None\npandas_datareader: None\n```\n\n```\n/media/local_data/jwienke/miniconda2/envs/monitoring/lib/python2.7/site-packages/pandas/core/base.pyc in __repr__(self)\n     65         Yields Bytestring in Py2, Unicode String in py3.\n     66         \"\"\"\n---> 67         return str(self)\n     68 \n     69 \n\n/media/local_data/jwienke/miniconda2/envs/monitoring/lib/python2.7/site-packages/pandas/core/base.pyc in __str__(self)\n     45         if compat.PY3:\n     46             return self.__unicode__()\n---> 47         return self.__bytes__()\n     48 \n     49     def __bytes__(self):\n\n/media/local_data/jwienke/miniconda2/envs/monitoring/lib/python2.7/site-packages/pandas/core/base.pyc in __bytes__(self)\n     57 \n     58         encoding = get_option(\"display.encoding\")\n---> 59         return self.__unicode__().encode(encoding, 'replace')\n     60 \n     61     def __repr__(self):\n\n/media/local_data/jwienke/miniconda2/envs/monitoring/lib/python2.7/site-packages/pandas/core/frame.pyc in __unicode__(self)\n    533             width = None\n    534         self.to_string(buf=buf, max_rows=max_rows, max_cols=max_cols,\n--> 535                        line_width=width, show_dimensions=show_dimensions)\n    536 \n    537         return buf.getvalue()\n\n/media/local_data/jwienke/miniconda2/envs/monitoring/lib/python2.7/site-packages/pandas/core/frame.pyc in to_string(self, buf, columns, col_space, header, index, na_rep, formatters, float_format, sparsify, index_names, justify, line_width, max_rows, max_cols, show_dimensions)\n   1486                                            max_cols=max_cols,\n   1487                                            show_dimensions=show_dimensions)\n-> 1488         formatter.to_string()\n   1489 \n   1490         if buf is None:\n\n/media/local_data/jwienke/miniconda2/envs/monitoring/lib/python2.7/site-packages/pandas/formats/format.pyc in to_string(self)\n    547             text = info_line\n    548         else:\n--> 549             strcols = self._to_str_columns()\n    550             if self.line_width is None:  # no need to wrap around just print\n    551                 # the whole frame\n\n/media/local_data/jwienke/miniconda2/envs/monitoring/lib/python2.7/site-packages/pandas/formats/format.pyc in _to_str_columns(self)\n    465         # may include levels names also\n    466 \n--> 467         str_index = self._get_formatted_index(frame)\n    468         str_columns = self._get_formatted_column_labels(frame)\n    469 \n\n/media/local_data/jwienke/miniconda2/envs/monitoring/lib/python2.7/site-packages/pandas/formats/format.pyc in _get_formatted_index(self, frame)\n    753         # empty space for columns\n    754         if show_col_names:\n--> 755             col_header = ['%s' % x for x in self._get_column_name_list()]\n    756         else:\n    757             col_header = [''] * columns.nlevels\n\nTypeError: not all arguments converted during string formatting\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249177305",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14286#issuecomment-249177305",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14286",
    "id": 249177305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTE3NzMwNQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T12:20:17Z",
    "updated_at": "2016-09-23T12:20:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "You are doing something very strange here. Your grouping is actually on the levels of the Index, though maybe you think its on the columns. This is a very hard to detect condition. So the resulting groupby 'works' but doesn't make much sense. It then embeds a tuple as the name of an `Index`, which I guess technically is allowed (but not useful in any way).\n\n```\nIn [22]: frame\nOut[22]: \n   and test   yet\n  more   it again\n0   44   42    43\n\nIn [23]: frame.groupby([('and', 'more'), ('test', 'it')]).mean()\nOut[23]: \n                         yet\n                       again\n(and, more) (test, it)      \n44          42            43\n\nIn [24]: frame.groupby([('and', 'more'), ('test', 'it')]).mean().index\nOut[24]: \nMultiIndex(levels=[[44], [42]],\n           labels=[[0], [0]],\n           names=[(u'and', u'more'), (u'test', u'it')])\n\nIn [25]: frame.groupby([('and', 'more'), ('test', 'it')]).mean().index.levels[0]\nOut[25]: Int64Index([44], dtype='int64', name=(u'and', u'more'))\n```\n\nSo I suppose we could error on creating a named index that is not string-like enough\nIOW, we have an implict API that say `Index` names must be convertible by old-style formatting (which breaks tuples)\n\n```\nIn [5]: '%s' % Index(['foo'], name=('bar', 'bah')).name\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n<ipython-input-5-c1d94176ab39> in <module>()\n----> 1 '%s' % Index(['foo'], name=('bar', 'bah')).name\n\nTypeError: not all arguments converted during string formatting\n```\n\nI think changing the formatter to this will make this work.\n\n```\nIn [6]: '{}'.format(Index(['foo'], name=('bar', 'bah')).name)\nOut[6]: \"('bar', 'bah')\"\n```\n\nbut re-examine what you think this is doing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/249221875",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14286#issuecomment-249221875",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14286",
    "id": 249221875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTIyMTg3NQ==",
    "user": {
      "login": "languitar",
      "id": 1336287,
      "node_id": "MDQ6VXNlcjEzMzYyODc=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1336287?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/languitar",
      "html_url": "https://github.com/languitar",
      "followers_url": "https://api.github.com/users/languitar/followers",
      "following_url": "https://api.github.com/users/languitar/following{/other_user}",
      "gists_url": "https://api.github.com/users/languitar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/languitar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/languitar/subscriptions",
      "organizations_url": "https://api.github.com/users/languitar/orgs",
      "repos_url": "https://api.github.com/users/languitar/repos",
      "events_url": "https://api.github.com/users/languitar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/languitar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-23T15:21:40Z",
    "updated_at": "2016-09-23T15:21:40Z",
    "author_association": "NONE",
    "body": "I'd be happy to find a different solution to how I receive the same result. But how?\n"
  }
]
