[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386600084",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20949#issuecomment-386600084",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20949",
    "id": 386600084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjYwMDA4NA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T13:24:00Z",
    "updated_at": "2018-05-04T13:24:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the bug report."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386672197",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20949#issuecomment-386672197",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20949",
    "id": 386672197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY3MjE5Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T17:31:27Z",
    "updated_at": "2018-05-04T17:31:27Z",
    "author_association": "MEMBER",
    "body": "Hmm interesting. FWIW when I remove numexpr I can't get this to run at all, regardless of whether or not I run another agg function first. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386686430",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20949#issuecomment-386686430",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20949",
    "id": 386686430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjY4NjQzMA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T18:03:00Z",
    "updated_at": "2018-05-04T18:03:15Z",
    "author_association": "MEMBER",
    "body": "Numexpr may be a red herring. From what I can tell the problem occurs at the following line of code:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/ef019faa06f762c8c203985a11108731384b2dae/pandas/core/groupby/groupby.py#L5063\r\n\r\n`sdata` when run without another agg function first includes the Grouping as part of the data and throws here, causing it to go down another path. `sdata` comes from `_selected_obj`. \r\n\r\nFor agg functions like `sum`, `mean`, etc... they have a call to `_set_group_selection` which takes care of setting the appropriately cached value for `_selected_obj`. I suppose a quick fix is to add a call to that at the beginning of `apply`, though I can't tell from the code alone why that isn't done across the board\r\n\r\ncc @jreback for any insight"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386725859",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20949#issuecomment-386725859",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20949",
    "id": 386725859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjcyNTg1OQ==",
    "user": {
      "login": "Dr-Irv",
      "id": 15113894,
      "node_id": "MDQ6VXNlcjE1MTEzODk0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/15113894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dr-Irv",
      "html_url": "https://github.com/Dr-Irv",
      "followers_url": "https://api.github.com/users/Dr-Irv/followers",
      "following_url": "https://api.github.com/users/Dr-Irv/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dr-Irv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dr-Irv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dr-Irv/subscriptions",
      "organizations_url": "https://api.github.com/users/Dr-Irv/orgs",
      "repos_url": "https://api.github.com/users/Dr-Irv/repos",
      "events_url": "https://api.github.com/users/Dr-Irv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dr-Irv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T20:28:47Z",
    "updated_at": "2018-05-04T20:28:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's another example that fails with 0.23rc2 (and in 0.22.0 as well), based on code from `pandas\\core\\indexes\\datetimes.py` in `test_agg_timezone_round_trip`:\r\n```\r\nIn [1]: import pandas as pd\r\n\r\nIn [2]: pd.__version__\r\nOut[2]: '0.23.0rc2'\r\n\r\nIn [3]: dates = [pd.Timestamp(\"2016-01-0%d 12:00:00\" % i, tz='US/Pacific')\r\n   ...:          for i in range(1, 5)]\r\n   ...: df = pd.DataFrame({'A': ['a', 'b'] * 2, 'B': dates})\r\n   ...: grouped = df.groupby('A')\r\n   ...:\r\n\r\nIn [4]: df\r\nOut[4]:\r\n   A                         B\r\n0  a 2016-01-01 12:00:00-08:00\r\n1  b 2016-01-02 12:00:00-08:00\r\n2  a 2016-01-03 12:00:00-08:00\r\n3  b 2016-01-04 12:00:00-08:00\r\n\r\nIn [5]: grouped.apply(lambda x: x.iloc[0])[0]\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\indexes\\base.py in get_loc(self, key, method, tolerance)\r\n   3062             try:\r\n-> 3063                 return self._engine.get_loc(key)\r\n   3064             except KeyError:\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc (pandas\\_libs\\index.c:5720)()\r\n    138\r\n--> 139     cpdef get_loc(self, object val):\r\n    140         if is_definitely_invalid_key(val):\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc (pandas\\_libs\\index.c:5566)()\r\n    160         try:\r\n--> 161             return self.mapping.get_item(val)\r\n    162         except (TypeError, ValueError):\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item (pandas\\_libs\\hashtable.c:22442)()\r\n   1491\r\n-> 1492     cpdef get_item(self, object val):\r\n   1493         cdef khiter_t k\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item (pandas\\_libs\\hashtable.c:22396)()\r\n   1499         else:\r\n-> 1500             raise KeyError(val)\r\n   1501\r\n\r\nKeyError: 0\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-5-2b16555d6e05> in <module>()\r\n----> 1 grouped.apply(lambda x: x.iloc[0])[0]\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\frame.py in __getitem__(self, key)\r\n   2685             return self._getitem_multilevel(key)\r\n   2686         else:\r\n-> 2687             return self._getitem_column(key)\r\n   2688\r\n   2689     def _getitem_column(self, key):\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\frame.py in _getitem_column(self, key)\r\n   2692         # get column\r\n   2693         if self.columns.is_unique:\r\n-> 2694             return self._get_item_cache(key)\r\n   2695\r\n   2696         # duplicate columns & possible reduce dimensionality\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\generic.py in _get_item_cache(self, item)\r\n   2485         res = cache.get(item)\r\n   2486         if res is None:\r\n-> 2487             values = self._data.get(item)\r\n   2488             res = self._box_item_values(item, values)\r\n   2489             cache[item] = res\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\internals.py in get(self, item, fastpath)\r\n   4113\r\n   4114             if not isna(item):\r\n-> 4115                 loc = self.items.get_loc(item)\r\n   4116             else:\r\n   4117                 indexer = np.arange(len(self.items))[isna(self.items)]\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\core\\indexes\\base.py in get_loc(self, key, method, tolerance)\r\n   3063                 return self._engine.get_loc(key)\r\n   3064             except KeyError:\r\n-> 3065                 return self._engine.get_loc(self._maybe_cast_indexer(key))\r\n   3066\r\n   3067         indexer = self.get_indexer([key], method=method, tolerance=tolerance)\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc (pandas\\_libs\\index.c:5720)()\r\n    137             util.set_value_at(arr, loc, value)\r\n    138\r\n--> 139     cpdef get_loc(self, object val):\r\n    140         if is_definitely_invalid_key(val):\r\n    141             raise TypeError(\"'{val}' is an invalid key\".format(val=val))\r\n\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\_libs\\index.pyx in pandas._libs.index.IndexEngine.get_loc (pandas\\_libs\\index.c:5566)()\r\n    159\r\n    160         try:\r\n--> 161             return self.mapping.get_item(val)\r\n    162         except (TypeError, ValueError):\r\n    163             raise KeyError(val)\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item (pandas\\_libs\\hashtable.c:22442)()\r\n   1490                                        sizeof(uint32_t)) # flags\r\n   1491\r\n-> 1492     cpdef get_item(self, object val):\r\n   1493         cdef khiter_t k\r\n   1494         if val != val or val is None:\r\n\r\nC:\\EclipseWorkspaces\\LiClipseWorkspace\\pandas-dev\\pandas36\\pandas\\_libs\\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item (pandas\\_libs\\hashtable.c:22396)()\r\n   1498             return self.table.vals[k]\r\n   1499         else:\r\n-> 1500             raise KeyError(val)\r\n   1501\r\n   1502     cpdef set_item(self, object key, Py_ssize_t val):\r\n\r\nKeyError: 0\r\n```\r\n\r\nHowever, if you do the following, it works:\r\n```\r\nIn [6]: grouped.nth(0)['B'].iloc[0]\r\nOut[6]: Timestamp('2016-01-01 12:00:00-0800', tz='US/Pacific')\r\n\r\nIn [7]: grouped.apply(lambda x: x.iloc[0])[0]\r\nOut[7]: Timestamp('2016-01-01 12:00:00-0800', tz='US/Pacific')\r\n```\r\n\r\nSo doing one operation (in this case `nth`) prior to the `apply` then makes the `apply` work.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386756969",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20949#issuecomment-386756969",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20949",
    "id": 386756969,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4Njc1Njk2OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-04T23:09:20Z",
    "updated_at": "2018-05-04T23:09:20Z",
    "author_association": "MEMBER",
    "body": "@Dr-Irv seems related. Some code below illustrating what I think is going on:\r\n\r\n```python\r\n>>> grouped.apply(lambda x: x.iloc[0])[0]  # KeyError as indicator\r\nKeyError\r\n\r\n>>> grouped._set_group_selection()\r\n>>> grouped.apply(lambda x: x.iloc[0])[0]  # Works now, as 'A' was not part of data\r\nTimestamp('2016-01-01 12:00:00-0800', tz='US/Pacific')\r\n\r\n>>> grouped._reset_group_selection()  # Clear out the group selection\r\n>>> grouped.apply(lambda x: x.iloc[0])[0]  # Back to failing\r\nKeyError\r\n```\r\n\r\nUnfortunately just adding this call before `_python_apply_general` broke other tests where the grouping was supposed to be part of the returned object (at least according to the tests). Reviewing in more detail hope to have a PR soon"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386804942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20949#issuecomment-386804942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20949",
    "id": 386804942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjgwNDk0Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T13:14:42Z",
    "updated_at": "2018-05-05T13:14:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "this didn't work even in 0.20.3. not sure how we don't have a test for it though."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/386805024",
    "html_url": "https://github.com/pandas-dev/pandas/issues/20949#issuecomment-386805024",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/20949",
    "id": 386805024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NjgwNTAyNA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-05T13:15:49Z",
    "updated_at": "2018-05-05T13:15:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Dr-Irv your example is a separate issue. pls make a new report for that one."
  }
]
