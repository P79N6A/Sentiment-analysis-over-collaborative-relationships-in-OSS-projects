[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35306725",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6379#issuecomment-35306725",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6379",
    "id": 35306725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzA2NzI1",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T17:45:57Z",
    "updated_at": "2014-02-17T17:45:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "passing `columns` is really only post-processing (a reindex), you are actually reading in the entire store.. You have to read the entire store in; it is a row-oriented store.\n\nIt IS possible to only select a single column; use `select_column`. So if  you are relly after only a small number of columns and have a wide-table; you could iterate and select by column then concat. \n\nThis is really a data alignment issue; You know you data best and how you are accessing it. It _may_ make sense to store it in multiple tables (see `append_as_multiple`). possibly store it transposes), or use a higher dim container.\n\nIt is possible to do an enhancement to select a smaller number of columns more efficienty (by the method I described above), but I think it would have to be user initiated, as its pretty hard to 'guess' a-prior which method is faster (e.g. suppose you are doing a query which actually only returns a small number of rows, then it is clearly more efficient to do the query once and just select all the columns out and reindex afterwards). - this is essentially what the store is optimized for now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35317000",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6379#issuecomment-35317000",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6379",
    "id": 35317000,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE3MDAw",
    "user": {
      "login": "CarstVaartjes",
      "id": 2722815,
      "node_id": "MDQ6VXNlcjI3MjI4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarstVaartjes",
      "html_url": "https://github.com/CarstVaartjes",
      "followers_url": "https://api.github.com/users/CarstVaartjes/followers",
      "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions",
      "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs",
      "repos_url": "https://api.github.com/users/CarstVaartjes/repos",
      "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T19:51:55Z",
    "updated_at": "2014-02-17T19:52:19Z",
    "author_association": "NONE",
    "body": "Hi, thanks Jeff; that explains the first part really well (3gb->1gb)! \nHowever, I do not understand the second part where we have a 1gB DataFrame that only uses 100mB if I remake it by extracting the .values and making a new DataFrame from it. \n\nSomewhere a DataFrame generated from HDF5 ends up with 90% overhead that disappears when I extract the numpy arrays, delete the DataFrame and make a new one using the arrays. (see from \"a = test_df['a'].values\")... \n\nAny idea what might cause that? Because it doesn't seem to be temporary memory usage, waiting to be picked up by the GC (at least not in my own tests)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35318420",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6379#issuecomment-35318420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6379",
    "id": 35318420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE4NDIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T20:09:12Z",
    "updated_at": "2014-02-17T20:09:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "that's not how python memory works; its really tricky to figure out how much memory something actually takes. Yes the actual memory usage may be calculated using nbytpes but that has nothng to do with the memory you are actually using (well not nothing...)\n\nIts really the peak memory usage that python grabs from the os...but doesn't release it until the process exists.\n\nHow do you 'know' that you are actually using more overhead? (FYI\nwhen I read in a store its 2x the actual usage plus some constant) - so I think that you are just seeing the peak (which even though is garbage collected (maybe) make sure that you are releasing references) - but will never be released back to the os.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35319876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6379#issuecomment-35319876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6379",
    "id": 35319876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE5ODc2",
    "user": {
      "login": "CarstVaartjes",
      "id": 2722815,
      "node_id": "MDQ6VXNlcjI3MjI4MTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/2722815?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CarstVaartjes",
      "html_url": "https://github.com/CarstVaartjes",
      "followers_url": "https://api.github.com/users/CarstVaartjes/followers",
      "following_url": "https://api.github.com/users/CarstVaartjes/following{/other_user}",
      "gists_url": "https://api.github.com/users/CarstVaartjes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CarstVaartjes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CarstVaartjes/subscriptions",
      "organizations_url": "https://api.github.com/users/CarstVaartjes/orgs",
      "repos_url": "https://api.github.com/users/CarstVaartjes/repos",
      "events_url": "https://api.github.com/users/CarstVaartjes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CarstVaartjes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T20:29:13Z",
    "updated_at": "2014-02-17T20:29:13Z",
    "author_association": "NONE",
    "body": "Thanks! The GC does not make me very happy :) (It creates memory issues running it as separate processes in uwsgi and it mostly has to do with the peak here...)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35320262",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6379#issuecomment-35320262",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6379",
    "id": 35320262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzIwMjYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T20:33:50Z",
    "updated_at": "2014-02-17T20:33:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "yep.....a way to somewhat minimize this is to use separate / smaller tables, or chunk read\notherwise get more memory!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35320289",
    "html_url": "https://github.com/pandas-dev/pandas/issues/6379#issuecomment-35320289",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/6379",
    "id": 35320289,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzIwMjg5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T20:34:08Z",
    "updated_at": "2014-02-17T20:34:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "lmk if you have other questions...but closing for now\n"
  }
]
