[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155587387",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11568#issuecomment-155587387",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11568",
    "id": 155587387,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTU4NzM4Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T22:25:10Z",
    "updated_at": "2015-11-10T22:27:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think you want `test.fillna('-1', downcast=False)`. `.fillna` (and a bunch of other pandas operations) will try to downcast from object -> float -> integer when they can. This is useful if you have a column of ints, but a `NaN` forces it to be floats. When you `.fillna(integer)` it's often useful to automatically downcast.\n\nEDIT: a quick search for this didn't turn up anything in the prose documentation (it is in the [API docs](http://pandas.pydata.org/pandas-docs/version/0.17.0/generated/pandas.DataFrame.fillna.html?highlight=downcast)). Interested in submitting a pull request to update the explaining this behavior?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155591651",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11568#issuecomment-155591651",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11568",
    "id": 155591651,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTU5MTY1MQ==",
    "user": {
      "login": "alichaudry",
      "id": 15057353,
      "node_id": "MDQ6VXNlcjE1MDU3MzUz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15057353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alichaudry",
      "html_url": "https://github.com/alichaudry",
      "followers_url": "https://api.github.com/users/alichaudry/followers",
      "following_url": "https://api.github.com/users/alichaudry/following{/other_user}",
      "gists_url": "https://api.github.com/users/alichaudry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alichaudry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alichaudry/subscriptions",
      "organizations_url": "https://api.github.com/users/alichaudry/orgs",
      "repos_url": "https://api.github.com/users/alichaudry/repos",
      "events_url": "https://api.github.com/users/alichaudry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alichaudry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T22:44:14Z",
    "updated_at": "2015-11-10T22:44:14Z",
    "author_association": "NONE",
    "body": "Ah, that makes sense. I was looking at the API docs and saw the downcast attribute, but for some reason I read that as _downcast=False_ as opposed to _downcast=None_. This led me to believe that the downcasting operation is off instead of 'None' by default.\n\nWhat still bothers me is that for the items that started out as floats (via np.random.randn), even after they converted to objects, they were downcast back to floats after the fillna() - as per the _downcast=None_ attribute. But why wasn't fillna() able to convert my object zero ('0') to a float or int?\n\nAnd yes, I'll work on the PR for the docs. It's important to know that _downcast=None_ defaults to an implicit object -> float -> integer.\n\nThanks!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155592640",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11568#issuecomment-155592640",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11568",
    "id": 155592640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTU5MjY0MA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T22:48:33Z",
    "updated_at": "2015-11-10T22:49:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "We'l want to check with @jreback that my understanding of downcast is correct :)\n\nOh and I misread the bit about columns `j`. That's because `.astype(object)` is not the same as `.astype(str)`. Strings are stored as object dtype, but you can also store an int/float as object dtype (it will just be slower so you typically don't want to). If you had `test.astype(str).fillna('-1')` you'll see that they're all still object (with strings). That might actually have been what you're looking for, not `downcast`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155601264",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11568#issuecomment-155601264",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11568",
    "id": 155601264,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTYwMTI2NA==",
    "user": {
      "login": "alichaudry",
      "id": 15057353,
      "node_id": "MDQ6VXNlcjE1MDU3MzUz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15057353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alichaudry",
      "html_url": "https://github.com/alichaudry",
      "followers_url": "https://api.github.com/users/alichaudry/followers",
      "following_url": "https://api.github.com/users/alichaudry/following{/other_user}",
      "gists_url": "https://api.github.com/users/alichaudry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alichaudry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alichaudry/subscriptions",
      "organizations_url": "https://api.github.com/users/alichaudry/orgs",
      "repos_url": "https://api.github.com/users/alichaudry/repos",
      "events_url": "https://api.github.com/users/alichaudry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alichaudry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T23:29:10Z",
    "updated_at": "2015-11-10T23:29:10Z",
    "author_association": "NONE",
    "body": "Ah, okay. I was treating objects and strings interchangeably because of some (likely deprecated) solution on Stack Overflow. I'll try _astype('str')_ instead of _astype('object')_. But _downcast=False_ works for my purposes too.\n\nI'll wait for input from @jreback.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155611135",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11568#issuecomment-155611135",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11568",
    "id": 155611135,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTYxMTEzNQ==",
    "user": {
      "login": "alichaudry",
      "id": 15057353,
      "node_id": "MDQ6VXNlcjE1MDU3MzUz",
      "avatar_url": "https://avatars1.githubusercontent.com/u/15057353?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alichaudry",
      "html_url": "https://github.com/alichaudry",
      "followers_url": "https://api.github.com/users/alichaudry/followers",
      "following_url": "https://api.github.com/users/alichaudry/following{/other_user}",
      "gists_url": "https://api.github.com/users/alichaudry/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alichaudry/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alichaudry/subscriptions",
      "organizations_url": "https://api.github.com/users/alichaudry/orgs",
      "repos_url": "https://api.github.com/users/alichaudry/repos",
      "events_url": "https://api.github.com/users/alichaudry/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alichaudry/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T00:23:31Z",
    "updated_at": "2015-11-11T00:23:31Z",
    "author_association": "NONE",
    "body": "@TomAugspurger Another thing - and I don't know if this is implicit in the functionality of pandas - _pd.DataFrame.apply_ is putting my dataframe back together, but some of the columns don't have the right format. That is, I have a column with dtype of 'object', but after _apply_ returns, the dtype has changed to int64. I don't see a downcast attribute for apply, and I don't know if this is a bug or feature.\n\nIf needed, I can throw an example in this comment. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/155627199",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11568#issuecomment-155627199",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11568",
    "id": 155627199,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTYyNzE5OQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T01:38:50Z",
    "updated_at": "2015-11-11T01:38:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@alichaudry this is all correct. you **never** ever want to keep things as `object` if you have an alternative. pandas is all about inferring to the correct dtype eagerly. So this is all as expected.\n"
  }
]
