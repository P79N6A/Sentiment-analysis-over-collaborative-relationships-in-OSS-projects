[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17203370",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-17203370",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 17203370,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjAzMzcw",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T00:32:36Z",
    "updated_at": "2013-04-30T00:34:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "To illustrate my point, this is what the condition where all `MaskedArray` stuff is handled together looks like:\n\n``` python\n        elif isinstance(data, ma.MaskedArray):\n            def unmask(arr):\n                mask = ma.getmaskarray(data)\n                if mask.any():\n                    data, fill_value = _maybe_upcast(data, copy=True)\n                    data[mask] = fill_value\n                    return data\n                return data.copy()\n\n            if data.dtype.names:\n                data_columns, data = _rec_to_dict(data)\n                data = dict((k, unmask(v)) for k, v in data.iteritems())\n                if columns is None:\n                    columns = data_columns\n                mgr = self._init_dict(data, index, columns, dtype=dtype)\n            else:\n                mgr = self._init_ndarray(unmask(data), index, columns, dtype=dtype,\n                                         copy=copy)\n```\n\nDoesn't that second half look stupendously like the `if isinstance(..., ndarray)` case?? With an unnecessary dict creation thrown in for fun?\n\nI still contend this is a case where code quality should not be sacrificed for marginal efficiency.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17203896",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-17203896",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 17203896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjAzODk2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T00:51:13Z",
    "updated_at": "2013-04-30T00:51:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "You could easily make a function to combine best of both worlds here (also would put `unmask` outside of Frame in any event). certainly try if you would like. Still need tests though. There are lots of cases and need to avoid breaking anything\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17204712",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-17204712",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 17204712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjA0NzEy",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T01:19:01Z",
    "updated_at": "2013-04-30T01:19:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "The point is: you _couldn't_ easily factor out the is/isn't rec-array case, because in unmasking already requires a non-rec array. You can easily factor out the unmasking, which is what I did.\n\nOf course it requires testing (or alternatively, test smaller units like `_unmask` and `_rec_to_dict` and you can get away with fewer tests for the same coverage). But I don't have the time to put to that.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17204820",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-17204820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 17204820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjA0ODIw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T01:22:42Z",
    "updated_at": "2013-04-30T01:22:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "what is your use case for masked record arrays? why u creating them in the first place (rather than directly in pandas)? existing code?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/17205487",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-17205487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 17205487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MjA1NDg3",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-04-30T01:45:05Z",
    "updated_at": "2013-04-30T01:45:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "I am not sure the use-case is relevant, seeing as it would be natural for pandas to support them, being the equivalent numpy data structure to what pandas works with, and given that pandas already supports both numpy masking and numpy records / structured arrays. But I am considering mrecarray output from a model selection procedure in scikit-learn: to handle some cases (where the set of parameters set in each iteration is not constant) masking or equivalent is required; leaving it in a numpy structure avoids binding users to pandas and avoids the project including a pandas dependency.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/19177491",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-19177491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 19177491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTc3NDkx",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-06-10T01:14:11Z",
    "updated_at": "2013-06-10T01:14:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Okay. Here is a test that ensures input with mrecarray is identical to equivalent input with dicts.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24426536",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-24426536",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 24426536,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDI2NTM2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-13T21:39:53Z",
    "updated_at": "2013-09-13T21:40:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "closing in favor of #4836\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24461447",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-24461447",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 24461447,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYxNDQ3",
    "user": {
      "login": "jnothman",
      "id": 78827,
      "node_id": "MDQ6VXNlcjc4ODI3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/78827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnothman",
      "html_url": "https://github.com/jnothman",
      "followers_url": "https://api.github.com/users/jnothman/followers",
      "following_url": "https://api.github.com/users/jnothman/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnothman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnothman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnothman/subscriptions",
      "organizations_url": "https://api.github.com/users/jnothman/orgs",
      "repos_url": "https://api.github.com/users/jnothman/repos",
      "events_url": "https://api.github.com/users/jnothman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnothman/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T23:48:38Z",
    "updated_at": "2013-09-14T23:48:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "I don't get why you prefer more specialisation rather than code reuse, but I'm glad the feature is now supported.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/24461499",
    "html_url": "https://github.com/pandas-dev/pandas/pull/3479#issuecomment-24461499",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3479",
    "id": 24461499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDYxNDk5",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-09-14T23:52:10Z",
    "updated_at": "2013-09-14T23:52:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "your solution forced unmasking on evey ndarray which is not good\n\nalso the style was different than the rest\n\nyour tests were gr8!\n"
  }
]
