[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/222324190",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13302#issuecomment-222324190",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13302",
    "id": 222324190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMjMyNDE5MA==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-28T18:56:16Z",
    "updated_at": "2016-06-02T21:47:59Z",
    "author_association": "MEMBER",
    "body": "I have to say that decision to `continue` after applying a converter in the C-engine is really bugged.  It causes a lot of other post-processing to be skipped.  Another example (adapted from the parser tests):\n\n``` python\n>>> \"\"\"A B\n-999 1.200\n2 -999.000\n3 4.500\"\"\"\n>>> f = lambda x: x\n>>> read_csv(StringIO(data), sep=' ', header=0,\n             na_values=[-999.0, -999], converters={'B':f})\n     A         B\n0  NaN     1.200\n1  2.0  -999.000\n2  3.0     4.500\n```\n\nPer the original test, that `-999.000` should become a `NaN`, but it doesn't because that post-processing is completely skipped because of this innocuous converter.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/274707415",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13302#issuecomment-274707415",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13302",
    "id": 274707415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDcwNzQxNQ==",
    "user": {
      "login": "gfyoung",
      "id": 9273653,
      "node_id": "MDQ6VXNlcjkyNzM2NTM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/9273653?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfyoung",
      "html_url": "https://github.com/gfyoung",
      "followers_url": "https://api.github.com/users/gfyoung/followers",
      "following_url": "https://api.github.com/users/gfyoung/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfyoung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfyoung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfyoung/subscriptions",
      "organizations_url": "https://api.github.com/users/gfyoung/orgs",
      "repos_url": "https://api.github.com/users/gfyoung/repos",
      "events_url": "https://api.github.com/users/gfyoung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfyoung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-24T04:33:42Z",
    "updated_at": "2017-01-24T04:33:42Z",
    "author_association": "MEMBER",
    "body": "xref #15144 (closed):\r\n~~~python\r\n>>> data = 'A,B,C\\n10,-1,10\\n10,10,10'\r\n>>> read_fwf(StringIO(data), converters={'B': lambda x: x / 10.}, na_values={'B': [-1]})\r\n A    B  C\r\n10 -0.1 10\r\n10    1 10\r\n~~~\r\nExpected:\r\n~~~python\r\n A    B  C\r\n10  NaN 10\r\n10    1 10\r\n~~~\r\nThe current behavior is due to the fact that converters are applied *BEFORE* `na_values` are, but consensus appears to be that we should apply `na_values` first."
  }
]
