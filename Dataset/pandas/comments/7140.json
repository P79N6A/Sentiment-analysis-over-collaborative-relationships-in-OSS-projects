[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/43358942",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7140#issuecomment-43358942",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7140",
    "id": 43358942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzMzU4OTQy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-16T17:40:28Z",
    "updated_at": "2014-05-16T17:40:28Z",
    "author_association": "MEMBER",
    "body": "seems to be replacing \"truthy\" values ... again the dtype issues arise :)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44617982",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7140#issuecomment-44617982",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7140",
    "id": 44617982,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjE3OTgy",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-30T06:05:00Z",
    "updated_at": "2014-05-30T06:05:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "The docs on replace suggest that, if it's a list, it should be a list of _strings_... so I'm not sure this is a bug per se. wow, [replace](http://pandas.pydata.org/pandas-docs/version/0.13.1/generated/pandas.Series.replace.html) really does do a **lot**!\n\nI would definitely consider using one of these instead:\n\n```\ndf.where(~df.isin([np.inf, -np.inf]))\ndf.where(np.isfinite(df.values))\n```\n\n_Note: These work with both series and dataframes._\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44624127",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7140#issuecomment-44624127",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7140",
    "id": 44624127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjI0MTI3",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-30T07:53:59Z",
    "updated_at": "2014-05-30T07:53:59Z",
    "author_association": "MEMBER",
    "body": "@hayd : I interpret \"list of str, regex, or numeric\" as \"list of str, list of regex, or list of numeric\"... after all,\n\n```\ndf['b'] = range(2)\ndf.replace([-1, 0], np.nan)\n```\n\nworks as expected (and there is no theoretical reason why it shouldn't).\n\nMoreover, \"where\" does work on dataframes... but I don't see what I am supposed to do with its result, in order to get the result of \"replace\" (but this may be me temporarily blind).\n\nI do understand that a \"replace\" on a Series of bools may want to filter based on the truthy value, but I'm pretty sure that I want a quick way to replace any numeric value in a DataFrame, without touching booleans. So maybe one possible solution would be to clarify the problem in the docs, and add an argument \"subset\" as for dropna. Although a cleaner solution would be to add an argument \"dtype\" which determines the dtype to use for the comparison (i.e. convert booleans to float, not vice versa), and which would have the default value of the series' dtype for a Series, and of the item to be replaced's dtype for a DataFrame with non-homogeneous dtypes.\n\nNotice the same problem arises with\n\n```\ndf['c'] = False\ndf.replace([None], np.nan)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44686773",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7140#issuecomment-44686773",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7140",
    "id": 44686773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Njg2Nzcz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-05-30T18:56:20Z",
    "updated_at": "2014-05-30T18:56:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Good point, that seems like a reasonable interpretation!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44788471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7140#issuecomment-44788471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7140",
    "id": 44788471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg4NDcx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-01T20:34:54Z",
    "updated_at": "2014-06-01T20:34:54Z",
    "author_association": "MEMBER",
    "body": "@toobaz while adding those things (kwarg, subset) might make this use case a bit more clear, replace already tries to do too much. In fact we're considering deprecating the replace method (over at least a couple of releases since it's fairly old) into a namespace like we do with `str` for vectorized string methods. See https://github.com/pydata/pandas/issues/5541#issuecomment-39671216 and that issue (#5541). \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44788480",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7140#issuecomment-44788480",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7140",
    "id": 44788480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg4NDgw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-01T20:35:24Z",
    "updated_at": "2014-06-01T20:35:24Z",
    "author_association": "MEMBER",
    "body": "@toobaz all that said, this IS a bug which will be fixed by the next minor release (0.14.1)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44788921",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7140#issuecomment-44788921",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7140",
    "id": 44788921,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg4OTIx",
    "user": {
      "login": "toobaz",
      "id": 1224492,
      "node_id": "MDQ6VXNlcjEyMjQ0OTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1224492?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toobaz",
      "html_url": "https://github.com/toobaz",
      "followers_url": "https://api.github.com/users/toobaz/followers",
      "following_url": "https://api.github.com/users/toobaz/following{/other_user}",
      "gists_url": "https://api.github.com/users/toobaz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toobaz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toobaz/subscriptions",
      "organizations_url": "https://api.github.com/users/toobaz/orgs",
      "repos_url": "https://api.github.com/users/toobaz/repos",
      "events_url": "https://api.github.com/users/toobaz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toobaz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-01T20:51:43Z",
    "updated_at": "2014-06-01T20:51:43Z",
    "author_association": "MEMBER",
    "body": "@cpcloud  Great!\n(in particular considered that the API change proposed in #5541 would per se only transfer the problem from \"replace\" to \"replace_list\")\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/44789121",
    "html_url": "https://github.com/pandas-dev/pandas/issues/7140#issuecomment-44789121",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/7140",
    "id": 44789121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Nzg5MTIx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-06-01T20:59:01Z",
    "updated_at": "2014-06-01T21:00:00Z",
    "author_association": "MEMBER",
    "body": "yep that's the idea, though. i've spent many hours debugging `replace` (most likely because of my own misunderstanding or breakage of something) and one thing that makes this process annoying is that it's enormously overloaded with different types (and dtypes). Every time I need to step through the code, I can't put a breakpoint in the top of the function (well I could but then I have to keep hitting `n` until i get to the code that actually matters), i have to actually find where the branch on the types of `value` and `to_replace` occur and put it there. This is trivial to do a couple of times, but to do it every time there's an problem is _extremely_ annoying. Plus, user code will be much more clear IMO because it'll let the reader know that \"hey i'm doing a `(list|scalar|dict)` replace\" rather than having to go up the call stack and look at the types.\n"
  }
]
