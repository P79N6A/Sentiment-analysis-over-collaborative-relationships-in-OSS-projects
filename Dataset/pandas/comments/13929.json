[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/238226066",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13929#issuecomment-238226066",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13929",
    "id": 238226066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODIyNjA2Ng==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-08T12:52:22Z",
    "updated_at": "2016-08-08T12:52:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is because we rely on `dateutil` for some of the resolution checking e.g.\n\nSo these are equal but of a different intended resolution\n\n```\nIn [5]: pd.Timestamp('20160101 10:17:00').value\nOut[5]: 1451643420000000000\n\nIn [6]: pd.Timestamp('20160101 10:17:00.000').value\nOut[6]: 1451643420000000000\n```\n\ne.g. [3] should be 'millisecond'\n\n```\nIn [1]: from pandas.tseries.tools import parse_time_string\n\nIn [2]: parse_time_string('20160101 10:17:00')\nOut[2]: \n(datetime.datetime(2016, 1, 1, 10, 17),\n datetime.datetime(2016, 1, 1, 10, 17),\n 'second')\n\nIn [3]: parse_time_string('20160101 10:17:00.000')\nOut[3]: \n(datetime.datetime(2016, 1, 1, 10, 17),\n datetime.datetime(2016, 1, 1, 10, 17),\n 'second')\n\nIn [4]: parse_time_string('20160101 10:17:00.001')\nOut[4]: \n(datetime.datetime(2016, 1, 1, 10, 17, 0, 1000),\n datetime.datetime(2016, 1, 1, 10, 17, 0, 1000),\n 'millisecond')\n```\n\nThe reason this matters is on the rhs of the slice bound we take all values <= reso (IOW if its second, then we get everything thru 1 second, while if its millisecond, then its thru 1 millisecond).\n\nSo I think we could simply fix the resolution parsing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/295326414",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13929#issuecomment-295326414",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13929",
    "id": 295326414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTMyNjQxNA==",
    "user": {
      "login": "cpaulik",
      "id": 380927,
      "node_id": "MDQ6VXNlcjM4MDkyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/380927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpaulik",
      "html_url": "https://github.com/cpaulik",
      "followers_url": "https://api.github.com/users/cpaulik/followers",
      "following_url": "https://api.github.com/users/cpaulik/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpaulik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpaulik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpaulik/subscriptions",
      "organizations_url": "https://api.github.com/users/cpaulik/orgs",
      "repos_url": "https://api.github.com/users/cpaulik/repos",
      "events_url": "https://api.github.com/users/cpaulik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpaulik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-19T16:09:37Z",
    "updated_at": "2017-04-19T16:15:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is this the same problem I'm seeing here?\r\n\r\n```python\r\nimport pandas as pd\r\np\r\nIn [2]: pd.__version__\r\nOut[2]: u'0.19.2'\r\n\r\nIn [3]: df = pd.DataFrame(columns=['1'], index=pd.date_range('2016-10-01T00:00:00', '2016-10-02T00:00:00'))\r\n\r\nIn [4]: df\r\nOut[4]: \r\n              1\r\n2016-10-01  NaN\r\n2016-10-02  NaN\r\n\r\nIn [5]: df.loc['2016-10-01T00:00:00':]\r\nOut[5]: \r\n              1\r\n2016-10-01  NaN\r\n2016-10-02  NaN\r\n\r\nIn [6]: df = pd.DataFrame(columns=['1'], index=pd.date_range('2016-10-01T00:00:00', '2016-10-01T23:59:59'))\r\n\r\nIn [7]: df\r\nOut[7]: \r\n              1\r\n2016-10-01  NaN\r\n\r\nIn [8]: df.loc['2016-10-01T00:00:00':]\r\nOut[8]: \r\nEmpty DataFrame\r\nColumns: [1]\r\nIndex: []\r\n\r\nIn [9]: df.loc[datetime(2016,10,1):]\r\nOut[9]: \r\n              1\r\n2016-10-01  NaN\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/295678050",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13929#issuecomment-295678050",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13929",
    "id": 295678050,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTY3ODA1MA==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T10:44:50Z",
    "updated_at": "2017-04-20T10:44:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpaulik looks similiar. These are both fencepost issues and could be addressed by a similar fix. pull-requests welcome if you can dig in."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/295761880",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13929#issuecomment-295761880",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13929",
    "id": 295761880,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTc2MTg4MA==",
    "user": {
      "login": "cpaulik",
      "id": 380927,
      "node_id": "MDQ6VXNlcjM4MDkyNw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/380927?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpaulik",
      "html_url": "https://github.com/cpaulik",
      "followers_url": "https://api.github.com/users/cpaulik/followers",
      "following_url": "https://api.github.com/users/cpaulik/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpaulik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpaulik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpaulik/subscriptions",
      "organizations_url": "https://api.github.com/users/cpaulik/orgs",
      "repos_url": "https://api.github.com/users/cpaulik/repos",
      "events_url": "https://api.github.com/users/cpaulik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpaulik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T14:40:15Z",
    "updated_at": "2017-04-20T14:40:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "After looking into it it seems that those are slightly different problems. I'll open an issue and a PR for my problem.\r\n\r\nFor this problem:\r\n\r\nDateutil returns the same object (with microsecond set to 0) regardless of the input string resolution.\r\nSo the code at https://github.com/pandas-dev/pandas/blob/master/pandas/_libs/tslib.pyx#L2135-L2137 sets the resolution to seconds. \r\n\r\nWe could use the `freq` information if it is not `None` to actually enforce the rule given in the comments [here](https://github.com/pandas-dev/pandas/blob/master/pandas/core/indexes/datetimes.py#L1470)\r\n\r\nIs there an easy way to convert a freq into a timedelta?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395449919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13929#issuecomment-395449919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13929",
    "id": 395449919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTQ0OTkxOQ==",
    "user": {
      "login": "Sup3rGeo",
      "id": 20566367,
      "node_id": "MDQ6VXNlcjIwNTY2MzY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20566367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sup3rGeo",
      "html_url": "https://github.com/Sup3rGeo",
      "followers_url": "https://api.github.com/users/Sup3rGeo/followers",
      "following_url": "https://api.github.com/users/Sup3rGeo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sup3rGeo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sup3rGeo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sup3rGeo/subscriptions",
      "organizations_url": "https://api.github.com/users/Sup3rGeo/orgs",
      "repos_url": "https://api.github.com/users/Sup3rGeo/repos",
      "events_url": "https://api.github.com/users/Sup3rGeo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sup3rGeo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T14:52:56Z",
    "updated_at": "2018-06-07T14:52:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess this is the same problem I am having, with this very simple example:\r\n\r\n```python\r\n>>> import pandas\r\n>>> values = [1,2,3,4,5,6,7,8]\r\n>>> index = [1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5]\r\n>>> serie = pandas.Series(values, index=pandas.to_timedelta(index, unit='s'))\r\n\r\n>>> # WORKS JUST FINE\r\n>>> sliced = serie[pandas.Timedelta('1s'):pandas.Timedelta('2s')]\r\n>>> print(sliced)\r\n00:00:01           1\r\n00:00:01.500000    2\r\n00:00:02           3\r\ndtype: int64\r\n>>> assert sliced.index[-1] == pandas.Timedelta('2s')\r\n\r\n>>> # NOT GOOD\r\n>>> sliced2 = serie['1s':'2s']\r\n>>> print(sliced2)\r\n00:00:01           1\r\n00:00:01.500000    2\r\n00:00:02           3\r\n00:00:02.500000    4\r\ndtype: int64\r\n>>> assert sliced2.index[-1] == pandas.Timedelta('2s')\r\nTraceback (most recent call last):\r\n  File \"C:\\Python36\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 2910, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-11-0ade2aa6bd8d>\", line 1, in <module>\r\n    assert sliced2.index[-1] == pandas.Timedelta('2s')\r\nAssertionError\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395484070",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13929#issuecomment-395484070",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13929",
    "id": 395484070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTQ4NDA3MA==",
    "user": {
      "login": "Sup3rGeo",
      "id": 20566367,
      "node_id": "MDQ6VXNlcjIwNTY2MzY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20566367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sup3rGeo",
      "html_url": "https://github.com/Sup3rGeo",
      "followers_url": "https://api.github.com/users/Sup3rGeo/followers",
      "following_url": "https://api.github.com/users/Sup3rGeo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sup3rGeo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sup3rGeo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sup3rGeo/subscriptions",
      "organizations_url": "https://api.github.com/users/Sup3rGeo/orgs",
      "repos_url": "https://api.github.com/users/Sup3rGeo/repos",
      "events_url": "https://api.github.com/users/Sup3rGeo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sup3rGeo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T16:30:40Z",
    "updated_at": "2018-06-07T16:44:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looking at this code:\r\n\r\nhttps://github.com/pandas-dev/pandas/blob/ab6aaf73a848a8725a23bb880be5221dd5ef5b3d/pandas/core/indexes/timedeltas.py#L825-L827\r\n\r\nCould someone shed a little light on why do we have to sum the precision for the right boundary of the slice, instead of just returning the `lbound` variable?\r\n\r\nI believe this is the reason why it is returning a full second (minus 1ns) after the slicing limit of my example above.\r\nEDIT: In fact monkey patching the function to just return `lboung` yields the correct behavior in this case."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/395498229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13929#issuecomment-395498229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13929",
    "id": 395498229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTQ5ODIyOQ==",
    "user": {
      "login": "Sup3rGeo",
      "id": 20566367,
      "node_id": "MDQ6VXNlcjIwNTY2MzY3",
      "avatar_url": "https://avatars2.githubusercontent.com/u/20566367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sup3rGeo",
      "html_url": "https://github.com/Sup3rGeo",
      "followers_url": "https://api.github.com/users/Sup3rGeo/followers",
      "following_url": "https://api.github.com/users/Sup3rGeo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sup3rGeo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sup3rGeo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sup3rGeo/subscriptions",
      "organizations_url": "https://api.github.com/users/Sup3rGeo/orgs",
      "repos_url": "https://api.github.com/users/Sup3rGeo/repos",
      "events_url": "https://api.github.com/users/Sup3rGeo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sup3rGeo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T17:17:01Z",
    "updated_at": "2018-06-07T17:17:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also @jreback I don't believe the slicing should return different values depending on whether we use `20160101 10:17:00` or `20160101 10:17:00.000` or `20160101 10:17:00.000000`, after all in any of this cases we are saying the same thing. Therefore this should not be a resolution matter."
  }
]
