[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15007622",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3066#issuecomment-15007622",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3066",
    "id": 15007622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA3NjIy",
    "user": {
      "login": "wesm",
      "id": 329591,
      "node_id": "MDQ6VXNlcjMyOTU5MQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/329591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wesm",
      "html_url": "https://github.com/wesm",
      "followers_url": "https://api.github.com/users/wesm/followers",
      "following_url": "https://api.github.com/users/wesm/following{/other_user}",
      "gists_url": "https://api.github.com/users/wesm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wesm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wesm/subscriptions",
      "organizations_url": "https://api.github.com/users/wesm/orgs",
      "repos_url": "https://api.github.com/users/wesm/repos",
      "events_url": "https://api.github.com/users/wesm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wesm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-16T16:31:01Z",
    "updated_at": "2013-03-16T16:31:01Z",
    "author_association": "MEMBER",
    "body": "Maybe this merits a new API? Essentially \"split with predicate function\". so we'd do:\n\n`df.split(lambda x: x == 'B', axis=0)`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15009048",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3066#issuecomment-15009048",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3066",
    "id": 15009048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA5MDQ4",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-16T17:49:50Z",
    "updated_at": "2013-03-16T17:50:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think more of a scalar or list of values for that axis, \nto allow multiple pieces\nbut then how do u control where the split value goes\n\nmaybe interval=open/closed? and don't return empty groups (eg if I select the last column)\n\nif cols are list('abcdefg')\ndf.split(['a','c'])\n\ngroups of\na\nbc\ndefg\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15013689",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3066#issuecomment-15013689",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3066",
    "id": 15013689,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDEzNjg5",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-16T22:52:18Z",
    "updated_at": "2013-03-17T17:54:37Z",
    "author_association": "NONE",
    "body": "Another addition would be to introspect the lambda for it's argcount\nand provide a moving window of values:\n\n``` python\ndf.groupby(lambda prev,curr: curr != prev).\n```\n\nand add a `win_offset` arg to specify nvals before, nvals ahead.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15024930",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3066#issuecomment-15024930",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3066",
    "id": 15024930,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDI0OTMw",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-17T15:51:26Z",
    "updated_at": "2013-03-17T15:51:26Z",
    "author_association": "NONE",
    "body": "implementing that would also answer  #414 \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15026342",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3066#issuecomment-15026342",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3066",
    "id": 15026342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDI2MzQy",
    "user": {
      "login": "dalejung",
      "id": 610115,
      "node_id": "MDQ6VXNlcjYxMDExNQ==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/610115?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dalejung",
      "html_url": "https://github.com/dalejung",
      "followers_url": "https://api.github.com/users/dalejung/followers",
      "following_url": "https://api.github.com/users/dalejung/following{/other_user}",
      "gists_url": "https://api.github.com/users/dalejung/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dalejung/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dalejung/subscriptions",
      "organizations_url": "https://api.github.com/users/dalejung/orgs",
      "repos_url": "https://api.github.com/users/dalejung/repos",
      "events_url": "https://api.github.com/users/dalejung/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dalejung/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-17T17:05:29Z",
    "updated_at": "2013-03-17T17:05:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "I wonder if a general edge binner would be useful here. \n\n``` python\ndef edge_groupby(df, edges):\n    edges[0] = True\n    edges.iloc[-1] = True\n\n    trues = edges[edges].index.values\n    trues[-1] = trues[-1] + 1 # make sure we include last value\n\n    bins = lib.generate_bins_dt64(edges.index, trues, closed='left')\n    binlabels = [0] + list(bins[:-1]) # label=left\n    grouper = BinGrouper(bins, binlabels)\n    return df.groupby(grouper)\n\ngrouped = edge_groupby(df, df.a == 'B')\n```\n\nThat would take in a bool series where the True values are the edges. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/15026896",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3066#issuecomment-15026896",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3066",
    "id": 15026896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDI2ODk2",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-03-17T17:36:12Z",
    "updated_at": "2013-03-17T17:40:31Z",
    "author_association": "NONE",
    "body": "Maybe a sliding window with a `reduce` style operation?\n\n``` python\ndf.groupby_reduce(lambda acc,prev,curr: acc + (prev and prev == 'B'))\n```\n\nor\n\n``` python\ndf.groupby_reduce(lambda acc,*vs: acc + (vs[0] and vs[0] == 'B'),2,'right')\n```\n\nwith `acc=0` on init.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/29061467",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3066#issuecomment-29061467",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3066",
    "id": 29061467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDYxNDY3",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars3.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-11-22T10:01:18Z",
    "updated_at": "2013-11-22T10:01:18Z",
    "author_association": "NONE",
    "body": "closing this in favor of cleaner implementation for https://github.com/pydata/pandas/issues/4059\n"
  }
]
