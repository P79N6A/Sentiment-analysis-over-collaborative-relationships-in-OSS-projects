[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344087713",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18272#issuecomment-344087713",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18272",
    "id": 344087713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDA4NzcxMw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-13T22:57:24Z",
    "updated_at": "2017-11-13T22:57:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you show an example of this? You want to find the smallest dtype that can contain each column's values?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/344267543",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18272#issuecomment-344267543",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18272",
    "id": 344267543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NDI2NzU0Mw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-14T14:00:51Z",
    "updated_at": "2017-11-14T14:00:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "you can do this.\r\n```\r\nIn [5]: df = pd.DataFrame({'A': 1, 'B': np.iinfo(np.int32).max-1, 'C': np.iinfo(np.int32).max+1}, index=[0])\r\n   ...: \r\n\r\nIn [6]: df\r\nOut[6]: \r\n   A           B           C\r\n0  1  2147483646  2147483648\r\n\r\nIn [7]: df.dtypes\r\nOut[7]: \r\nA    int64\r\nB    int64\r\nC    int64\r\ndtype: object\r\n\r\nIn [8]: df.apply(lambda x: pd.to_numeric(x, downcast='integer')).dtypes\r\nOut[8]: \r\nA     int8\r\nB    int32\r\nC    int64\r\ndtype: object\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/353371479",
    "html_url": "https://github.com/pandas-dev/pandas/issues/18272#issuecomment-353371479",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/18272",
    "id": 353371479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzM3MTQ3OQ==",
    "user": {
      "login": "rspadim",
      "id": 2468782,
      "node_id": "MDQ6VXNlcjI0Njg3ODI=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2468782?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rspadim",
      "html_url": "https://github.com/rspadim",
      "followers_url": "https://api.github.com/users/rspadim/followers",
      "following_url": "https://api.github.com/users/rspadim/following{/other_user}",
      "gists_url": "https://api.github.com/users/rspadim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rspadim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rspadim/subscriptions",
      "organizations_url": "https://api.github.com/users/rspadim/orgs",
      "repos_url": "https://api.github.com/users/rspadim/repos",
      "events_url": "https://api.github.com/users/rspadim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rspadim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T14:58:02Z",
    "updated_at": "2017-12-21T14:58:02Z",
    "author_association": "NONE",
    "body": "from this example of mysql:\r\nhttps://dev.mysql.com/doc/refman/5.7/en/procedure-analyse.html\r\n\r\nit's a CHAR(1) field\r\nmysql> select * from charac;\r\n+--------+\r\n| charac |\r\n+--------+\r\n| A      |\r\n| B      |\r\n| C      |\r\n| D      |\r\n| E      |\r\n+--------+\r\n\r\n\r\nbut when you execute procedure analyse it report that you can use ENUM() to optimize searchs and data structure\r\n\r\nmysql> select * from charac procedure analyse()\\G\r\n*************************** 1. row ***************************\r\nField_name: world.charac.charac\r\nMin_value: A\r\nMax_value: E\r\nMin_length: 1\r\nMax_length: 1\r\nEmpties_or_zeros: 0\r\nNulls: 0\r\nAvg_value_or_avg_length: 1.0000\r\nStd: NULL\r\nOptimal_fieldtype: ENUM('A','B','C','D','E') NOT NULL **<------------------------**\r\n1 row in set (0.00 sec)\r\n\r\nobvious procedure() have options when it should change a string to a enum  (string -> categorical)\r\n\r\nmysql> select * from charac procedure analyse(5,24)\\G\r\n*************************** 1. row ***************************\r\nField_name: world.charac.charac\r\nMin_value: A\r\nMax_value: E\r\nMin_length: 1\r\nMax_length: 1\r\nEmpties_or_zeros: 0\r\nNulls: 0\r\nAvg_value_or_avg_length: 1.0000\r\nStd: NULL\r\nOptimal_fieldtype: CHAR(1) NOT NULL   **<------ now optimal fieldtype is char(1)**"
  }
]
