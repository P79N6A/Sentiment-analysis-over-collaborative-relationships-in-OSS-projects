[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18178338",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-18178338",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 18178338,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTc4MzM4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-20T22:36:47Z",
    "updated_at": "2013-05-20T22:36:47Z",
    "author_association": "MEMBER",
    "body": "is `df1.join(df2, how='outer')` not what ur looking for?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18179257",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-18179257",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 18179257,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTc5MjU3",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-20T22:59:54Z",
    "updated_at": "2013-05-20T22:59:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "No, I don't think so...\n\n```\nIn [13]: df1.join(df2, how='outer')\nOut[13]:\n                            1         3\n-3.987006 -0.534963       NaN -0.521078\n-1.808632 -0.227492       NaN -0.880865\n-1.188311 -1.808632 -1.018368       NaN\n-0.985607 -0.151162  0.815265       NaN\n-0.528617  1.369224 -0.642621       NaN\n-0.151162 -0.462676       NaN  0.388309\n-0.115006 -3.987006  0.548307       NaN\n 0.066250  0.590389  0.275410       NaN\n 0.590389 -0.926148       NaN -0.999415\n 0.763442  0.618186       NaN  1.212661\n 0.930736 -0.856200       NaN -0.861088\n 0.975342  1.824005 -0.162082       NaN\n 1.006033  0.340764       NaN -1.809402\n 1.169599  1.006033 -2.006705       NaN\n 1.189407  0.930736  0.645642       NaN\n 1.243792  0.763442 -0.972110       NaN\n 1.369224  0.547792       NaN  1.515713\n 1.375035  2.192195       NaN -0.728762\n 1.824005 -1.364679       NaN -0.231887\n 2.151640  1.375035 -0.656242       NaN\n```\n\nHoped for:\n\n```\nIn [21]: df3 = pd.DataFrame({1: df[1], 3: df[3]})\n\nIn [22]: df3.index = df[2]\n\nIn [23]: df3\nOut[23]:\n                  1         3\n2\n 0.930736  0.645642 -0.861088\n 0.590389  0.275410 -0.999415\n 1.375035 -0.656242 -0.728762\n 0.763442 -0.972110  1.212661\n 1.824005 -0.162082 -0.231887\n 1.369224 -0.642621  1.515713\n-0.151162  0.815265  0.388309\n 1.006033 -2.006705 -1.809402\n-3.987006  0.548307 -0.521078\n-1.808632 -1.018368 -0.880865\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18179450",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-18179450",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 18179450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTc5NDUw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-20T23:05:04Z",
    "updated_at": "2013-05-20T23:05:04Z",
    "author_association": "MEMBER",
    "body": "yes this would most def be useful IMHO\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18410778",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-18410778",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 18410778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDEwNzc4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T15:11:05Z",
    "updated_at": "2013-05-24T15:15:12Z",
    "author_association": "MEMBER",
    "body": "@hayd I think that \n\n``` python\ndf1.join(df2, how='inner')\n```\n\nactually should do what you want. Right now it _doesn't_ do this and in fact `join` doesn't do what it claims to do in this regard, that is, with `how='inner'` return the intersection of the indices. The intersection of the indices of `df1` and `df2` is not the empty set, yet the empty `DataFrame` is returned, so this might be considered a bug...\n\nOT: should the empty ndframe be a singleton? i haven't really checked, but these objects return a different id every time they are instantiated...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18413906",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-18413906",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 18413906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4NDEzOTA2",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-24T16:00:53Z",
    "updated_at": "2013-05-24T16:00:53Z",
    "author_association": "MEMBER",
    "body": "Down in the guts of this there's a function called `_join_level` defined on `Index`. Currently it throws an error saying that joining 2 multiindex objects on a level is ambiguous, why? If I have two `MultiIndex`s with two levels with the same name shouldn't I be able to compute the intersection of those indices? It should only be empty if they have no elements in common (by definition).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35080950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35080950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35080950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDgwOTUw",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T12:58:01Z",
    "updated_at": "2014-02-14T12:58:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "from some comments on the mailing list: https://groups.google.com/forum/#!topic/pydata/LBSFq6of8ao\n\nWhat would help move this along would be:\n\n1) some self-contained test cases, esp corner / cases where this would fail\n2) the 'quick' and dirty soln can prob be implemented pretty easily (reset indexes and merge, reset the indexes). This may actually be a pretty good soln as their is not a lot of cost (in memory or speed) for resetting / setting indexes - and if memory is an issue that's a whole other problem (http://stackoverflow.com/questions/14614512/merging-two-tables-with-millions-of-rows-in-python/14617925#14617925)\n3) an acutal indexing merge (where right now it raises in core/index.py : again test cases are the most important here.\n\nwould love for someone to attempt 2) as then can have a speed/memory benchmark and see even if 3) is worthwhile (I don't know how much gain this would really have - so not sure how much effort it needs).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35087165",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35087165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35087165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg3MTY1",
    "user": {
      "login": "hmgaudecker",
      "id": 158456,
      "node_id": "MDQ6VXNlcjE1ODQ1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/158456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmgaudecker",
      "html_url": "https://github.com/hmgaudecker",
      "followers_url": "https://api.github.com/users/hmgaudecker/followers",
      "following_url": "https://api.github.com/users/hmgaudecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmgaudecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmgaudecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmgaudecker/subscriptions",
      "organizations_url": "https://api.github.com/users/hmgaudecker/orgs",
      "repos_url": "https://api.github.com/users/hmgaudecker/repos",
      "events_url": "https://api.github.com/users/hmgaudecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmgaudecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T14:22:38Z",
    "updated_at": "2014-02-14T14:22:38Z",
    "author_association": "NONE",
    "body": "I'm not quite sure I understand the difference between 2) and 3) - is this just the underlying implementation or do you mean something else by \"an actual indexing merge)? \n\nAs for 2), are you saying that all that needs to be done would be to hide the SO solution from the user and allow specifying the index?\n\nTestcases: In principle this should amount to re-using test cases for joins with regular columns, no? I had a very brief look into that but couldn't find much -- any pointers?\n\nLooking at the expected behavior above, I am not sure I'd quite agree (at least for outer joins, which seem to be the more natural use case to me) -- I would expect a MultiIndex on the resulting dataframe with the index being the union of all index constituents of the two original tables.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35087697",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35087697",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35087697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDg3Njk3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T14:29:30Z",
    "updated_at": "2014-02-14T14:29:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "2) is like the SO question, but exactly, hiding from the user.\n3) is potentially much faster / better user of memory as its done internal in the index module (e.g. right where the raise happens now)\n\nMaybe give me a small example of what you want to do, e.g. input and output (e.g. the normal use case)\n\nHere's a number of issues relating to this (and why we need specific test cases):\n- normal case is number of levels match up and names on those levels match\n- what happens if the right can only match up on certain level, (e.g. right has 1 level and left has 2; match on which level?\n  - the name matches then its clear (I think this is handled now)\n  - what do do if their are NO matching levels\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35090652",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35090652",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35090652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDkwNjUy",
    "user": {
      "login": "hmgaudecker",
      "id": 158456,
      "node_id": "MDQ6VXNlcjE1ODQ1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/158456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmgaudecker",
      "html_url": "https://github.com/hmgaudecker",
      "followers_url": "https://api.github.com/users/hmgaudecker/followers",
      "following_url": "https://api.github.com/users/hmgaudecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmgaudecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmgaudecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmgaudecker/subscriptions",
      "organizations_url": "https://api.github.com/users/hmgaudecker/orgs",
      "repos_url": "https://api.github.com/users/hmgaudecker/repos",
      "events_url": "https://api.github.com/users/hmgaudecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmgaudecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T15:01:12Z",
    "updated_at": "2014-02-14T15:01:12Z",
    "author_association": "NONE",
    "body": "Here comes an example, see [these slides](http://www.wiwi.uni-bonn.de/gaudecker/teaching/prog_econ/2011/15_data_management.pdf) for some context (p. 19+).\n\n```\nIn [49]: import io\nIn [50]: household = pd.read_table(\n    io.StringIO(\n\"\"\"household_id,male,wealth\n1,0,196087.3\n2,1,316478.7\n3,0,294750\n\"\"\"\n    ), \n    sep=',', index_col='household_id'\n)\n\nIn [51]: household\nOut[51]: \n              male    wealth\nhousehold_id                \n1                0  196087.3\n2                1  316478.7\n3                0  294750.0\n\n[3 rows x 2 columns]\n\nIn [52]: portfolio = pd.read_table(\n    io.StringIO(\n        \"\"\"\"household_id\",\"asset_id\",\"name\",\"share\"\n\"1\",\"nl0000301109\",\"ABN Amro\",\"1.0\"\n\"2\",\"nl0000289783\",\"Robeco\",\"0.4\"\n\"2\",\"gb00b03mlx29\",\"Royal Dutch Shell\",\"0.6\"\n\"3\",\"gb00b03mlx29\",\"Royal Dutch Shell\",\"0.15\"\n\"3\",\"lu0197800237\",\"AAB Eastern Europe Equity Fund\",\"0.6\"\n\"3\",\"nl0000289965\",\"Postbank BioTech Fonds\",\"0.25\"\n\"4\",,,\"1.0\"\n\"\"\"\n    ),\n    sep=',', index_col=['household_id', 'asset_id']\n)\n\nIn [53]: portfolio\nOut[53]: \n                                                     name  share\nhousehold_id asset_id                                           \n1            nl0000301109                        ABN Amro   1.00\n2            nl0000289783                          Robeco   0.40\n             gb00b03mlx29               Royal Dutch Shell   0.60\n3            gb00b03mlx29               Royal Dutch Shell   0.15\n             lu0197800237  AAB Eastern Europe Equity Fund   0.60\n             nl0000289965          Postbank BioTech Fonds   0.25\n4            NaN                                      NaN   1.00\n\n[7 rows x 2 columns]\n\nIn [54]: household.join(portfolio, how='inner')\nOut[54]: \nEmpty DataFrame\nColumns: [male, wealth, name, share]\nIndex: []\n\n[0 rows x 4 columns]\n```\n\n(So I would argue this is not handled)\n\nI would expect:\n\n```\n                             male    wealth                            name  share\nhousehold_id asset_id                                                           \n1            nl0000301109       0  196087.3                        ABN Amro   1.00\n2            nl0000289783       1  316478.7                          Robeco   0.40\n             gb00b03mlx29       1  316478.7               Royal Dutch Shell   0.60\n3            gb00b03mlx29       0  294750.0               Royal Dutch Shell   0.15\n             lu0197800237       0  294750.0  AAB Eastern Europe Equity Fund   0.60\n             nl0000289965       0  294750.0          Postbank BioTech Fonds   0.25\n```\n\n> What do do if their are NO matching levels?\n\nI would be fine requiring the user to name the levels consistently. Else you can always fall back on the existing solution based on regular columns.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35100824",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35100824",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35100824,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTAwODI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T16:44:19Z",
    "updated_at": "2014-02-14T16:44:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hmgaudecker give a try with #6356 \n\nI need some more test cases for example, joining on non-level 0\n\nI also need to see if its necessary (as I think its pretty complicated) to join 2 multi-indexes.\n\nThis joins a single to a multi on an inferred level.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35100994",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35100994",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35100994,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTAwOTk0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T16:45:59Z",
    "updated_at": "2014-02-14T16:45:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suppose the `on` keyword could be hijacked to provide a specific level if their are multiple matches\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35106761",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35106761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35106761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTA2NzYx",
    "user": {
      "login": "hmgaudecker",
      "id": 158456,
      "node_id": "MDQ6VXNlcjE1ODQ1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/158456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmgaudecker",
      "html_url": "https://github.com/hmgaudecker",
      "followers_url": "https://api.github.com/users/hmgaudecker/followers",
      "following_url": "https://api.github.com/users/hmgaudecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmgaudecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmgaudecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmgaudecker/subscriptions",
      "organizations_url": "https://api.github.com/users/hmgaudecker/orgs",
      "repos_url": "https://api.github.com/users/hmgaudecker/repos",
      "events_url": "https://api.github.com/users/hmgaudecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmgaudecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-14T17:45:11Z",
    "updated_at": "2014-02-14T17:45:11Z",
    "author_association": "NONE",
    "body": "Sweet! Exactly what I was expecting.\n\n> I need some more test cases for example, joining on non-level 0\n\nI don't quite get what you mean here.\n\n> I also need to see if its necessary (as I think its pretty complicated) to join 2 multi-indexes.\n\nI would think so. Testcase below. \n\n[Sorry, gotta run now.]\n\n```\nIn [3]: portfolio = read_table(\n   ...:     StringIO(\n   ...: \"\"\"\"household_id\",\"asset_id\",\"share\"\n   ...: \"1\",\"nl0000301109\",\"1.0\"\n   ...: \"2\",\"nl0000289783\",\"0.4\"\n   ...: \"2\",\"gb00b03mlx29\",\"0.6\"\n   ...: \"3\",\"gb00b03mlx29\",\"0.15\"\n   ...: \"3\",\"lu0197800237\",\"0.6\"\n   ...: \"3\",\"nl0000289965\",\"0.25\"\n   ...: \"4\",,\"1.0\"\n   ...: \"\"\"\n   ...:     ),\n   ...:     sep=\",\", index_col=[\"household_id\", \"asset_id\"]\n   ...: )\n\nIn [4]: log_return = DataFrame(dict(\n   ...:         asset_id = [\"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"lu0197800237\", \"lu0197800237\"],\n   ...:         t = [233, 234, 235, 180, 181],\n   ...:         log_return = [.09604978, -.06524096, .03532373, .03025441, .036997]\n   ...: )).set_index([\"asset_id\",\"t\"])\n\nIn [5]: portfolio.join(log_return, how='inner')\nOut[5]: ValueError: cannot join between multiple multi-indexes\n\nIn [6]: inner_expected = DataFrame(dict(\n   ...:         household_id = [2, 2, 2, 3, 3, 3, 3, 3],\n   ...:         asset_id = [\"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"lu0197800237\", \"lu0197800237\"],\n   ...:         t = [233, 234, 235, 233, 234, 235, 180, 181],\n   ...:         share = [0.6, 0.6, 0.6, 0.15, 0.15, 0.15, 0.6, 0.6],\n   ...:         log_return = [.09604978, -.06524096, .03532373, .09604978, -.06524096, .03532373, .03025441, .036997]\n   ...: )).set_index([\"household_id\", \"asset_id\", \"t\"])\n\n\nIn [6]: inner_expected\nOut[6]: \n                               log_return  share\nhousehold_id asset_id     t                     \n2            gb00b03mlx29 233    0.096050   0.60\n                          234   -0.065241   0.60\n                          235    0.035324   0.60\n3            gb00b03mlx29 233    0.096050   0.15\n                          234   -0.065241   0.15\n                          235    0.035324   0.15\n             lu0197800237 180    0.030254   0.60\n                          181    0.036997   0.60\n\n[8 rows x 2 columns]\n\n\nIn [7]: portfolio.join(log_return, how='outer')\nOut[7]: ValueError: cannot join between multiple multi-indexes\n\nIn [8]: outer_expected = DataFrame(dict(\n   ...:         household_id = [1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4],\n   ...:         asset_id = [\"nl0000301109\", \"nl0000289783\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"gb00b03mlx29\", \"lu0197800237\", \"lu0197800237\", \"nl0000289965\", None],\n   ...:         t = [None, None, 233, 234, 235, 233, 234, 235, 180, 181, None, None],\n   ...:         share = [1.0, 0.4, 0.6, 0.6, 0.6, 0.15, 0.15, 0.15, 0.6, 0.6, 0.25, 1.0],\n   ...:         log_return = [None, None, .09604978, -.06524096, .03532373, .09604978, -.06524096, .03532373, .03025441, .036997, None, None]\n   ...: )).set_index([\"household_id\", \"asset_id\", \"t\"])\n\nIn [9]: outer_expected\nOut[9]: \n                               log_return  share\nhousehold_id asset_id     t                     \n1            nl0000301109 NaN         NaN   1.00\n2            nl0000289783 NaN         NaN   0.40\n             gb00b03mlx29 233    0.096050   0.60\n                          234   -0.065241   0.60\n                          235    0.035324   0.60\n3            gb00b03mlx29 233    0.096050   0.15\n                          234   -0.065241   0.15\n                          235    0.035324   0.15\n             lu0197800237 180    0.030254   0.60\n                          181    0.036997   0.60\n             nl0000289965 NaN         NaN   0.25\n4            NaN          NaN         NaN   1.00\n\n[12 rows x 2 columns]\n```\n\nright and left would become meaningful testcases here as well, but I don't have time to set this up right now.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35169587",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35169587",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35169587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY5NTg3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T22:10:19Z",
    "updated_at": "2014-02-15T22:10:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hmgaudecker so I merged in the single join, see #6363; along with some docs on how to do a multi-multi join. THat's fairly complicated to actually implement. and IMHO not worth the effort as it really doesn't change the memory usage/speed that much at all.\n\nThat said I created #6360 to track that use case. Feel free to submit a PR if you'd like.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35169724",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35169724",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35169724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTY5NzI0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T22:15:35Z",
    "updated_at": "2014-02-15T22:16:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's a partial implementation: https://github.com/jreback/pandas/commit/0c382154cc428039acb7018f4eb08f2a4aebec95\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35172057",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35172057",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35172057,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTcyMDU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-15T23:59:38Z",
    "updated_at": "2014-02-15T23:59:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "docs are up now: http://pandas-docs.github.io/pandas-docs-travis/merging.html#merging-join-on-mi\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/35238832",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-35238832",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 35238832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MjM4ODMy",
    "user": {
      "login": "hmgaudecker",
      "id": 158456,
      "node_id": "MDQ6VXNlcjE1ODQ1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/158456?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hmgaudecker",
      "html_url": "https://github.com/hmgaudecker",
      "followers_url": "https://api.github.com/users/hmgaudecker/followers",
      "following_url": "https://api.github.com/users/hmgaudecker/following{/other_user}",
      "gists_url": "https://api.github.com/users/hmgaudecker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hmgaudecker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hmgaudecker/subscriptions",
      "organizations_url": "https://api.github.com/users/hmgaudecker/orgs",
      "repos_url": "https://api.github.com/users/hmgaudecker/repos",
      "events_url": "https://api.github.com/users/hmgaudecker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hmgaudecker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-02-17T09:00:30Z",
    "updated_at": "2014-02-17T09:00:30Z",
    "author_association": "NONE",
    "body": "Beautiful, thanks! @PKEuS, could you have a look into #6360?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37481420",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-37481420",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 37481420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDgxNDIw",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T23:20:01Z",
    "updated_at": "2014-03-12T23:20:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback The motivating / original example doesn't work atm (am I missing something?):\n\n```\nIn [11]: df = pd.DataFrame(np.random.randn(10,5))\n    ...: df1 = df[range(0, 3)].set_index([0, 2])\n    ...: df2 = df[range(2, 5)].set_index([2, 4])\n    ...: res = df1.join(df2, how='inner')  # empty. Do I need to specify something here?\n    ...: exp = pd.DataFrame({1: df[1], 3: df[3]})\n    ...: exp.index = df[2]\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37482157",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-37482157",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 37482157,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDgyMTU3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T23:30:08Z",
    "updated_at": "2014-03-12T23:30:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "that got 'moved' to #6360 (maybe put that at the top), as was using @hmgaudecker examples\n\nmaybe add in that example there as well\n\nyou can 'do' that with the doc example though (just not directly) ATM\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37483913",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-37483913",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 37483913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDgzOTEz",
    "user": {
      "login": "hayd",
      "id": 1931852,
      "node_id": "MDQ6VXNlcjE5MzE4NTI=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1931852?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hayd",
      "html_url": "https://github.com/hayd",
      "followers_url": "https://api.github.com/users/hayd/followers",
      "following_url": "https://api.github.com/users/hayd/following{/other_user}",
      "gists_url": "https://api.github.com/users/hayd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hayd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hayd/subscriptions",
      "organizations_url": "https://api.github.com/users/hayd/orgs",
      "repos_url": "https://api.github.com/users/hayd/repos",
      "events_url": "https://api.github.com/users/hayd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hayd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T23:56:35Z",
    "updated_at": "2014-03-12T23:56:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "ah, sorry I thought that one was closed. Edited into top.\n\nHow do you do it atm (indirectly)?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/37483946",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3662#issuecomment-37483946",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3662",
    "id": 37483946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NDgzOTQ2",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-03-12T23:57:10Z",
    "updated_at": "2014-03-12T23:57:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "see the docs link above\n"
  }
]
