[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244404265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14137#issuecomment-244404265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14137",
    "id": 244404265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQwNDI2NQ==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T15:16:28Z",
    "updated_at": "2016-09-02T15:16:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that `numpy` also raises for anything but a 1-element array.\n\n```\nIn [31]: bool(np.array([False, False]))\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-31-32cc592d060f> in <module>()\n----> 1 bool(np.array([False, False]))\n\nValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244487252",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14137#issuecomment-244487252",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14137",
    "id": 244487252,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDQ4NzI1Mg==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-02T21:05:50Z",
    "updated_at": "2016-09-02T21:05:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "pretty clear explanation [here](http://pandas.pydata.org/pandas-docs/stable/gotchas.html#using-if-truth-statements-with-pandas)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244559320",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14137#issuecomment-244559320",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14137",
    "id": 244559320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU1OTMyMA==",
    "user": {
      "login": "selik",
      "id": 1328688,
      "node_id": "MDQ6VXNlcjEzMjg2ODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1328688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selik",
      "html_url": "https://github.com/selik",
      "followers_url": "https://api.github.com/users/selik/followers",
      "following_url": "https://api.github.com/users/selik/following{/other_user}",
      "gists_url": "https://api.github.com/users/selik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selik/subscriptions",
      "organizations_url": "https://api.github.com/users/selik/orgs",
      "repos_url": "https://api.github.com/users/selik/repos",
      "events_url": "https://api.github.com/users/selik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-03T17:32:32Z",
    "updated_at": "2016-09-03T17:34:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "That wiki section asks some rhetorical questions to illustrate that the truthiness of a non-empty Series is ambiguous. However, I think those questions have very clear answers:\n\n> Should it be True because itâ€™s not zero-length?\n\nYes. This is a very clear standard from the core Python language and the standard library.\n\n```\n>>> bool([False])\nTrue\n```\n\n> False because there are False values?\n\nNo, non-empty means `True`. Again, this is a strong standard. There's no ambiguity here.\n\nObviously, Pandas can't change this, because it needs to stay consistent with NumPy. But if someday NumPy were to flip on this issue, I'd like to open it back up for discussion.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244560947",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14137#issuecomment-244560947",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14137",
    "id": 244560947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU2MDk0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-03T18:01:46Z",
    "updated_at": "2016-09-03T18:01:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@selik pls re-read the faq. These are very deliberate choices that ARE different from the standard library for good reason.\n\nThe point is that for a list-like you NEED to use `.all/.any` to disambiguate. It HAS to be a deliberate choice. Simply doing `if df:` is completely misleading, non-sensical, and is by-definition different that what the standard library does, BECAUSE the standard library doesn't care for the contents of things (e.g. the standard library doesn't care about the VALUES contained in a list), just that it has a length. This is pretty much useless for array computing.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244597876",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14137#issuecomment-244597876",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14137",
    "id": 244597876,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDU5Nzg3Ng==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-04T11:27:42Z",
    "updated_at": "2016-09-04T11:27:52Z",
    "author_association": "MEMBER",
    "body": "@selik If you want idiomatic code that works for any sort of container, I think you can do something like `if len(some_contailer): ...` instead of `if some_container: ...` ? (if non-zero length is what you want to check here)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/244818454",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14137#issuecomment-244818454",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14137",
    "id": 244818454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NDgxODQ1NA==",
    "user": {
      "login": "selik",
      "id": 1328688,
      "node_id": "MDQ6VXNlcjEzMjg2ODg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1328688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/selik",
      "html_url": "https://github.com/selik",
      "followers_url": "https://api.github.com/users/selik/followers",
      "following_url": "https://api.github.com/users/selik/following{/other_user}",
      "gists_url": "https://api.github.com/users/selik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/selik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/selik/subscriptions",
      "organizations_url": "https://api.github.com/users/selik/orgs",
      "repos_url": "https://api.github.com/users/selik/repos",
      "events_url": "https://api.github.com/users/selik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/selik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-05T22:41:25Z",
    "updated_at": "2016-09-05T22:42:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jorisvandenbossche I wouldn't say `if len(container):` is Pythonic, but perhaps it's the best option for this situation.\n\n@jreback The choice makes sense for the emphasis on vectorized methods/functions, but causes usability problems for libraries that are primarily not for vectors. I suppose you might say this is a \"no free lunch\" API design situation and it's better to design for vectorized usage.\n"
  }
]
