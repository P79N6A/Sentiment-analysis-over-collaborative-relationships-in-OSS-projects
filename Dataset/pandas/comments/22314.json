[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412518427",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412518427",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412518427,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjUxODQyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T13:30:25Z",
    "updated_at": "2018-08-13T13:30:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "We should also clarify what exactly a deep vs. shallow copy should mean...\r\n\r\nMy use-case is `SparseArray.copy`. Should the underlying data `sp_index` and `sp_values` be copied only if `deep=True` (that's what we do on master)?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412551398",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412551398",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412551398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU1MTM5OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:07:11Z",
    "updated_at": "2018-08-13T15:07:11Z",
    "author_association": "MEMBER",
    "body": "> Should the underlying data sp_index and sp_values be copied only if deep=True (that's what we do on master)?\r\n\r\nI suppose so.\r\n\r\n> We should also clarify what exactly a deep vs. shallow copy should mean...\r\n\r\nThe docstring of `pd.Series.copy` has a quite detailed explanation:\r\n\r\n> When ``deep=True`` (default), a new object will be created with a\r\ncopy of the calling object's data and indices. Modifications to\r\nthe data or indices of the copy will not be reflected in the\r\noriginal object (see notes below).\r\n> \r\n> When ``deep=False``, a new object will be created without copying\r\nthe calling object's data or index (only references to the data\r\nand index are copied). Any changes to the data of the original\r\nwill be reflected in the shallow copy (and vice versa).\r\n\r\n(with of course the additional caveats regarding python objects not being copied recursively and index data not being copied).\r\n\r\nFor ExtensionArray it is of course not necessarily that straightforward, since there is no fixed \"data\" for all EAs. But I think typically an EA will have some kind of `_data` (or multiple objects), i.e. the actual stored data, so we can expect that to be copied with `deep=True`. \r\nIn practice, with `deep=True` we expect that doing `array[0] = other_value` does not change a deep copy of `array`, but does change a shallow copy of `array`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412554440",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412554440",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412554440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU1NDQ0MA==",
    "user": {
      "login": "h-vetinari",
      "id": 33685575,
      "node_id": "MDQ6VXNlcjMzNjg1NTc1",
      "avatar_url": "https://avatars1.githubusercontent.com/u/33685575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/h-vetinari",
      "html_url": "https://github.com/h-vetinari",
      "followers_url": "https://api.github.com/users/h-vetinari/followers",
      "following_url": "https://api.github.com/users/h-vetinari/following{/other_user}",
      "gists_url": "https://api.github.com/users/h-vetinari/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/h-vetinari/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/h-vetinari/subscriptions",
      "organizations_url": "https://api.github.com/users/h-vetinari/orgs",
      "repos_url": "https://api.github.com/users/h-vetinari/repos",
      "events_url": "https://api.github.com/users/h-vetinari/events{/privacy}",
      "received_events_url": "https://api.github.com/users/h-vetinari/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:15:37Z",
    "updated_at": "2018-08-13T15:15:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Like in #19862, I would argue that:\r\n> IMO, copy(deep=True) should completely sever all connections between the original and the copied object - compare the official python docs (https://docs.python.org/3/library/copy.html):\r\n\r\n>> A deep copy constructs a new compound object and then, recursively, inserts copies into it of the objects found in the original.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412565747",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412565747",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412565747,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU2NTc0Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:49:07Z",
    "updated_at": "2018-08-13T15:49:07Z",
    "author_association": "MEMBER",
    "body": "@h-vetinari I think the other discussion is not fully relevant here, as an ExtensionArray has (in general) no notion of 'index' that is immutable and not copied like a Series/DataFrame has."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412568734",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412568734",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412568734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU2ODczNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:57:43Z",
    "updated_at": "2018-08-13T15:57:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is also not tested directly in the base extension tests. Testing the semantics will be a tad, since we don't have a no-copy way of getting some kind of `ExtensionArray._data`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412569422",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412569422",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412569422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU2OTQyMg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T15:59:45Z",
    "updated_at": "2018-08-13T15:59:45Z",
    "author_association": "MEMBER",
    "body": "We could test the expected \"user semantics\" ?\r\n\r\n```\r\na = EA(..)\r\na2 = a.copy(deep=True)\r\na[0] = a[1]\r\nassert a2[0] != a[1]\r\n\r\na = EA(..)\r\na2 = a.copy(deep=False)\r\na[0] = a[1]\r\nassert a2[0] == a[1]\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412571558",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412571558",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412571558,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU3MTU1OA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T16:05:45Z",
    "updated_at": "2018-08-13T16:05:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah, yeah that will work for mutable EAs (my head is in sparse-land right now, which is not mutable)."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412573078",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412573078",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412573078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU3MzA3OA==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T16:09:52Z",
    "updated_at": "2018-08-13T16:09:52Z",
    "author_association": "MEMBER",
    "body": "Ah, OK, I now understand why you asked the initial question. In that case (SparseArray being immutable), then it is again more similar to the \"copy index of Series or not\" discussion.\r\n\r\nIs there a reason they are immutable? (it's just more work to implement it? Scipy sparse matrices are mutable, but raise a performance warning if the mutation changes the sparsity structure)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412580827",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412580827",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 412580827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjU4MDgyNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-13T16:33:26Z",
    "updated_at": "2018-08-13T16:33:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just more work to implement I think.\n\nOn Mon, Aug 13, 2018 at 11:09 AM Joris Van den Bossche <\nnotifications@github.com> wrote:\n\n> Ah, OK, I now understand why you asked the initial question. In that case\n> (SparseArray being immutable), then it is again more similar to the \"copy\n> index of Series or not\" discussion.\n>\n> Is there a reason they are immutable? (it's just more work to implement\n> it? Scipy sparse matrices are mutable, but raise a performance warning if\n> the mutation changes the sparsity structure)\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412573078>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIvAqtktzLAH_SQ-L0iR9BbNf2TWwks5uQaTUgaJpZM4V6fuW>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/438427842",
    "html_url": "https://github.com/pandas-dev/pandas/issues/22314#issuecomment-438427842",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22314",
    "id": 438427842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQyNzg0Mg==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T20:38:05Z",
    "updated_at": "2018-11-13T20:38:05Z",
    "author_association": "MEMBER",
    "body": "Coming back to my comment above https://github.com/pandas-dev/pandas/issues/22314#issuecomment-412569422 about expected user semantics. \r\nI am not sure about that anymore, because I would now think to expect that any `copy()` call would make sure that modifying an array does not change a copy of it as well.\r\n\r\nAnother option is to simply remove the `deep` keyword for EAs (just like `np.copy` has no deep keyword)\r\n\r\n"
  }
]
