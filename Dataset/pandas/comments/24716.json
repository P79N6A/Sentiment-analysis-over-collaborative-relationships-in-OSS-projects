[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453355950",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24716#issuecomment-453355950",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24716",
    "id": 453355950,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzM1NTk1MA==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T02:52:42Z",
    "updated_at": "2019-01-11T02:52:42Z",
    "author_association": "MEMBER",
    "body": "This is a little tough: xarray doesn't know what users would prefer in general, either.\r\n\r\nIn principle, the old behavior was a bug, since we were silently dropping timezones -- though I'm sure some users may have been relying on this. Perhaps the cleanest solution would be to add a `dtypes` argument on an xarray side to allow users to silence the warning.\r\n\r\nEither way, this is definitely an xarray bug (https://github.com/pydata/xarray/issues/2666), because xarray handle pandas's `to_xarray()` method by forwarding to `xarray.Dataset.from_dataframe`.\r\n\r\nFor pandas, I would suggest that `to_xarray()` be augmented to pass on `**kwargs` to the xarray `from_dataframe` and `from_series` constructors. That would give us the flexibility to fix this on the xarray side."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453366826",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24716#issuecomment-453366826",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24716",
    "id": 453366826,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzM2NjgyNg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T03:34:35Z",
    "updated_at": "2019-01-11T03:34:35Z",
    "author_association": "MEMBER",
    "body": "@shoyer I’ve been agitating to make EA allow non-1D arrays, partly so it could be portable enough to be useful directly in e.g. xarray.  If we were to put that in place, would just reshaping the EA be a viable option here?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/453377957",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24716#issuecomment-453377957",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24716",
    "id": 453377957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzM3Nzk1Nw==",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-11T04:51:37Z",
    "updated_at": "2019-01-11T04:51:37Z",
    "author_association": "MEMBER",
    "body": "I don’t know if it’s worth the trouble of ensuring that all extension arrays can handle n-dimensions. My thinking was that the best way to handle this would be to write an adapter that adds shape information to flat pandas objects (either Series or ExtensionArray) that conforms to numpy’s new ‘__array_function__‘ protocol. That’s basically what we would want for xarray."
  }
]
