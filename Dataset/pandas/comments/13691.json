[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233469445",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13691#issuecomment-233469445",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13691",
    "id": 233469445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzQ2OTQ0NQ==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-18T21:48:27Z",
    "updated_at": "2016-07-18T21:48:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, will mark it, though non-unique multi-indexes are not very well tested, nor should they really be allowed (but they are) :<\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/233740844",
    "html_url": "https://github.com/pandas-dev/pandas/issues/13691#issuecomment-233740844",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/13691",
    "id": 233740844,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMzc0MDg0NA==",
    "user": {
      "login": "mborysow",
      "id": 6691807,
      "node_id": "MDQ6VXNlcjY2OTE4MDc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/6691807?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mborysow",
      "html_url": "https://github.com/mborysow",
      "followers_url": "https://api.github.com/users/mborysow/followers",
      "following_url": "https://api.github.com/users/mborysow/following{/other_user}",
      "gists_url": "https://api.github.com/users/mborysow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mborysow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mborysow/subscriptions",
      "organizations_url": "https://api.github.com/users/mborysow/orgs",
      "repos_url": "https://api.github.com/users/mborysow/repos",
      "events_url": "https://api.github.com/users/mborysow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mborysow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-19T19:32:18Z",
    "updated_at": "2016-07-19T19:45:53Z",
    "author_association": "NONE",
    "body": "I have just recently run into this issue as well.  I do this very often in fact, and now a lot of my code is broken.  I would probably do a lot of differently now, as I've learned more about pandas, but it is what it is.  (FYI, merging with df1_good with [left_index=True, right_index=True, how='inner'] produces an equivalent result)\n\ndf1 = pd.DataFrame(data=dict(A=[1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2],\n                            B=[1, 1, 2, 2, 2, 3, 1, 1, 1, 2, 3, 4],\n                            C=[1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 4],\n                            V=[1, 5, 2, 3, 8, 3, 3, 3, 1, 2, 1, 4]))\ndf1 = df1.set_index(['A', 'B', 'C']).sortlevel()\n\ndf2 = df1.groupby(level=[0, 2])[['V']].max()\n\ndf2_good = df2[df2.V > 9]\n\n...this apparently works and returns an empty dataframe with the index labels and columns intact.\ndf1_good = df1.loc[df2_good.index]\n\n...this fails with TypeError: Cannot infer number of levels from empty list\ndf1_good = df1.reset_index().set_index(['A', 'C']).sortlevel().loc[df2_good.index]\n\nAnyhow, it's perfectly acceptable in my analysis that initial query returns an empty DataFrame.  This used to work just fine.  Now, any time I want to do anything remotely like this I need to always check and make sure that the result of the initial query isn't empty.\n\nThis works fine in pandas 0.16, and does not in 0.17 or 0.18.  I don't know exactly where it failed, but I get the same error above.\n"
  }
]
