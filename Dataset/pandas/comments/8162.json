[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54218837",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54218837",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54218837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjE4ODM3",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-02T21:15:10Z",
    "updated_at": "2014-09-02T21:15:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "I recall another issue about this - can u have a look for it?\n\nfurther this is not difficult\n\nwant to try a pr?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54225891",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54225891",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54225891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjI1ODkx",
    "user": {
      "login": "makmanalp",
      "id": 161965,
      "node_id": "MDQ6VXNlcjE2MTk2NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/161965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makmanalp",
      "html_url": "https://github.com/makmanalp",
      "followers_url": "https://api.github.com/users/makmanalp/followers",
      "following_url": "https://api.github.com/users/makmanalp/following{/other_user}",
      "gists_url": "https://api.github.com/users/makmanalp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makmanalp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makmanalp/subscriptions",
      "organizations_url": "https://api.github.com/users/makmanalp/orgs",
      "repos_url": "https://api.github.com/users/makmanalp/repos",
      "events_url": "https://api.github.com/users/makmanalp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makmanalp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-02T22:12:35Z",
    "updated_at": "2014-09-02T22:12:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah, I'd love to take a shot at implementing this. I spent a few minutes looking for the old issue but couldn't find anything other than the tangentially relevant #8082 . Do you remember any other details?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54231304",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54231304",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54231304,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MjMxMzA0",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-02T23:08:38Z",
    "updated_at": "2014-09-03T18:58:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think I am remembering implementing (then reverting) this\n\nyou will need to change `__getattr__` and `_get_item_cached` in `core/generic.py`\n\nneed good tests!\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54399487",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54399487",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54399487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0Mzk5NDg3",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T03:25:57Z",
    "updated_at": "2014-09-04T03:25:57Z",
    "author_association": "MEMBER",
    "body": "I think this is a _great_ idea. I did something similar in [xray](https://github.com/xray/xray).\n\nA few things to consider for a full-fledged implementation:\n1. **What should the type of `data['id']` be?** I think it should be a `Series` (i.e., `data.index.to_series()` or `pd.Series(data.index, data.index)`) rather than an `Index` (`data.index`), to follow the rule that the items in a `DataFrame` are always `Series` objects.\n2. **This should work with a MultiIndex**. In this case, you should get a Series where the values are only from the named level (i.e., `pd.Series(data.index.get_level_values('id'), data.index)`).\n3. **Don't forget indexing columns with lists**. This should also work, returning a `DataFrame`: `data[['id', 'other_col']]`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54494782",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54494782",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54494782,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDk0Nzgy",
    "user": {
      "login": "makmanalp",
      "id": 161965,
      "node_id": "MDQ6VXNlcjE2MTk2NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/161965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makmanalp",
      "html_url": "https://github.com/makmanalp",
      "followers_url": "https://api.github.com/users/makmanalp/followers",
      "following_url": "https://api.github.com/users/makmanalp/following{/other_user}",
      "gists_url": "https://api.github.com/users/makmanalp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makmanalp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makmanalp/subscriptions",
      "organizations_url": "https://api.github.com/users/makmanalp/orgs",
      "repos_url": "https://api.github.com/users/makmanalp/repos",
      "events_url": "https://api.github.com/users/makmanalp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makmanalp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T15:28:28Z",
    "updated_at": "2014-09-04T15:28:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer  - thank you so much! I was pondering the first myself - great point about the type, I wonder if Index follows the Series interface exactly. If so, shouldn't be a problem. Second and third hadn't even occured to me. \n\nIt looks like Index and Series inherits IndexOpsMixin (https://github.com/pydata/pandas/blob/master/pandas/core/base.py#L283) \n\nhttps://github.com/pydata/pandas/blob/master/pandas/core/index.py#L74 and https://github.com/pydata/pandas/blob/master/pandas/core/series.py#L80\n\n@jreback thoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54496723",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54496723",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54496723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NDk2NzIz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T15:40:20Z",
    "updated_at": "2014-09-04T15:41:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is very simple\n\njust change the methods I showed above\nand wrap with _constructor\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54525460",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54525460",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54525460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTI1NDYw",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T18:44:46Z",
    "updated_at": "2014-09-04T18:44:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding @shoyer's #3, with\n\n``` python\nIn [7]: df = pd.DataFrame({\"A\": [1, 2, 3], \"B\": [4, 5, 6]}, index=['a', 'b', 'c'])\nIn [8]: df.index.name = 'idx'\n```\n\nDoes `df[['idx', 'A', 'B']]` return\n\n``` python\n     A  B\nidx      \na    1  4\nb    2  5\nc    3  6\n```\n\nwith `idx` in the index still, or\n\n``` python\n  idx  A  B\n0   a  1  4\n1   b  2  5\n2   c  3  6\n```\n\nwith `idx` as a column? It should be the second one IMO.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54526080",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54526080",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54526080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTI2MDgw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T18:48:59Z",
    "updated_at": "2014-09-04T18:49:25Z",
    "author_association": "MEMBER",
    "body": "@TomAugspurger actually, I think it should either be your first example, or something like:\n\n``` python\n     idx  A  B\nidx\na      a  1  4\nb      b  2  5\nc      c  3  6\n```\n\nThis has the disadvantage of now having a redundant column/index with the same name. But I don't like changing the index based on indexing particular columns -- if you want that, you can use `reset_index()`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54555018",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54555018",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54555018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTU1MDE4",
    "user": {
      "login": "makmanalp",
      "id": 161965,
      "node_id": "MDQ6VXNlcjE2MTk2NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/161965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makmanalp",
      "html_url": "https://github.com/makmanalp",
      "followers_url": "https://api.github.com/users/makmanalp/followers",
      "following_url": "https://api.github.com/users/makmanalp/following{/other_user}",
      "gists_url": "https://api.github.com/users/makmanalp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makmanalp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makmanalp/subscriptions",
      "organizations_url": "https://api.github.com/users/makmanalp/orgs",
      "repos_url": "https://api.github.com/users/makmanalp/repos",
      "events_url": "https://api.github.com/users/makmanalp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makmanalp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-04T22:32:48Z",
    "updated_at": "2014-09-04T22:32:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think the first one is simpler too. We're not hiding that it's the index, and we're not promoting it to be a column, we're just allowing it to be referred to and used as a column.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54589902",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54589902",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54589902,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTg5OTAy",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T06:32:11Z",
    "updated_at": "2017-06-15T14:09:22Z",
    "author_association": "MEMBER",
    "body": "But is should be consistent I think. If `df['idx]` returns the index wrapped in a Series, then `df[['idx', 'A', 'B']]` should also return it as a Series, and thus a DataFrame with 3 columns I think (so the example how @shoyer showed it). `df[['idx', 'A', 'B']]` and `df[['A', 'B']]` should not be the same I think.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54593990",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54593990",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54593990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NTkzOTkw",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T07:37:09Z",
    "updated_at": "2014-09-05T07:37:09Z",
    "author_association": "MEMBER",
    "body": "I agree with @jorisvandenbossche. Columns are never going to be fully interchangeable with indexes (even after this change), and if you're explicitly indexing the index as a column you presumably want it as a series, not an index.\n\nAnother edge case to test for: let's make sure `df.groupby('idx')` works. Right now you need to write `df.groupby(level='idx')`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54619372",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54619372",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54619372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjE5Mzcy",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T12:37:02Z",
    "updated_at": "2014-09-05T12:37:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for @shoyer's example. I should have explained why I think that including `idx` in the slice should return it as a column. First of all there's the mental model that `df[<list>]` _always_ returns a DataFrame whose columns are in the list. Second this would be the only way to do things like `df[['idx', 'A', 'B']].sum(1)` without resorting to the ugly old way of `restet_index()`ing.\n\nI had an [issue](https://github.com/pydata/pandas/issues/5677) and [PR](https://github.com/pydata/pandas/pull/7033) about the @shoyer's groupby that I never finished off. We can handle groupby separately, but If this goes into 0.15, I'll finish up that PR.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/54662360",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-54662360",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 54662360,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0NjYyMzYw",
    "user": {
      "login": "makmanalp",
      "id": 161965,
      "node_id": "MDQ6VXNlcjE2MTk2NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/161965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makmanalp",
      "html_url": "https://github.com/makmanalp",
      "followers_url": "https://api.github.com/users/makmanalp/followers",
      "following_url": "https://api.github.com/users/makmanalp/following{/other_user}",
      "gists_url": "https://api.github.com/users/makmanalp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makmanalp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makmanalp/subscriptions",
      "organizations_url": "https://api.github.com/users/makmanalp/orgs",
      "repos_url": "https://api.github.com/users/makmanalp/repos",
      "events_url": "https://api.github.com/users/makmanalp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makmanalp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-09-05T18:21:35Z",
    "updated_at": "2014-09-05T18:21:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shoyer didn't know about the level=idx! The groupby was on my list because it's such a pain in the butt.\n\nOne question, is wrapping the index in a series and adding it onto the dataframe essentially a no-op, or is it going to be horribly inefficient for larger dataframes?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/57728748",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-57728748",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 57728748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3NzI4NzQ4",
    "user": {
      "login": "shoyer",
      "id": 1217238,
      "node_id": "MDQ6VXNlcjEyMTcyMzg=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1217238?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shoyer",
      "html_url": "https://github.com/shoyer",
      "followers_url": "https://api.github.com/users/shoyer/followers",
      "following_url": "https://api.github.com/users/shoyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/shoyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shoyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shoyer/subscriptions",
      "organizations_url": "https://api.github.com/users/shoyer/orgs",
      "repos_url": "https://api.github.com/users/shoyer/repos",
      "events_url": "https://api.github.com/users/shoyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shoyer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2014-10-02T23:40:55Z",
    "updated_at": "2014-10-02T23:40:55Z",
    "author_association": "MEMBER",
    "body": "I think a broader theme of the issue is that it is intuitive to think of an \"index\" as a special type of column, rather than as a separate type of entity.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/130931887",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-130931887",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 130931887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMDkzMTg4Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T02:37:03Z",
    "updated_at": "2015-08-14T02:37:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to reraise this with another use-case, this would help out matplotlib with their [labeled data](https://github.com/matplotlib/matplotlib/pull/4829) plotting. I haven't looked recently, but an earlier version had to workaround not being able to use `__getitem__` to get to the index.\n\nI'm less sure about the need to allow `df[['index_name', 'other_col']]`.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/131174810",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-131174810",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 131174810,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMTE3NDgxMA==",
    "user": {
      "login": "makmanalp",
      "id": 161965,
      "node_id": "MDQ6VXNlcjE2MTk2NQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/161965?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/makmanalp",
      "html_url": "https://github.com/makmanalp",
      "followers_url": "https://api.github.com/users/makmanalp/followers",
      "following_url": "https://api.github.com/users/makmanalp/following{/other_user}",
      "gists_url": "https://api.github.com/users/makmanalp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/makmanalp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/makmanalp/subscriptions",
      "organizations_url": "https://api.github.com/users/makmanalp/orgs",
      "repos_url": "https://api.github.com/users/makmanalp/repos",
      "events_url": "https://api.github.com/users/makmanalp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/makmanalp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-14T16:41:41Z",
    "updated_at": "2015-08-14T16:41:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TomAugspurger in defense of `df[['index_name', 'other_col']]`, what's nice about it is that it saves you from a ton of gross `foo.reset_index().blah.set_index()` and other similar cruft that isn't really meaningful and obscures what your code is actually trying to do.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132841208",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-132841208",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 132841208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjg0MTIwOA==",
    "user": {
      "login": "tacaswell",
      "id": 199813,
      "node_id": "MDQ6VXNlcjE5OTgxMw==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/199813?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tacaswell",
      "html_url": "https://github.com/tacaswell",
      "followers_url": "https://api.github.com/users/tacaswell/followers",
      "following_url": "https://api.github.com/users/tacaswell/following{/other_user}",
      "gists_url": "https://api.github.com/users/tacaswell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tacaswell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tacaswell/subscriptions",
      "organizations_url": "https://api.github.com/users/tacaswell/orgs",
      "repos_url": "https://api.github.com/users/tacaswell/repos",
      "events_url": "https://api.github.com/users/tacaswell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tacaswell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T01:04:00Z",
    "updated_at": "2015-08-20T01:06:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is currently code on that branch so that\n\n``` python\nplt.plot('foo', data=df)\nplt.plot(df['foo'])\n```\n\nWill grab both the index to use as the index instead of `range`, but that is _only_ implemented for `plot`, but nothing else.\n\nBut, major :+1: from me on this ability. I don't have a view on the list slicing, but the name should be something other than `id` as that seems like a source of endless collisions.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/132909174",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-132909174",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 132909174,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMjkwOTE3NA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T06:46:31Z",
    "updated_at": "2015-08-22T21:13:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "This \"problem\" was also on the ggplot todo list. I would vote for `df[\"__index__\"]` being treated special (=return df.index) and have named index also show up in `df[[<...>]]`\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/317487376",
    "html_url": "https://github.com/pandas-dev/pandas/issues/8162#issuecomment-317487376",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/8162",
    "id": 317487376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzQ4NzM3Ng==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-24T17:01:58Z",
    "updated_at": "2017-07-24T17:01:58Z",
    "author_association": "MEMBER",
    "body": "Transplanting from #17061 on convergence in Index/Series behavior.\r\n\r\nIt would be nice to be able to access `foo.dt` without first having to check whether `foo` is an `Index` or `Series`.  This could be accomplished by having `DatetimeIndex`, `PeriodIndex`, and `TimedeltaIndex` have a property `dt` that just returns `self`.  If others agree, I'll put together a PR.  Thoughts?"
  }
]
