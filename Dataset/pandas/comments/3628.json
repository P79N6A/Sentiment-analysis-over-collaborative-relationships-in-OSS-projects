[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18039517",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18039517",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18039517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDM5NTE3",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T01:40:53Z",
    "updated_at": "2013-05-17T01:43:21Z",
    "author_association": "MEMBER",
    "body": "I don't get a bogus result, this fails with an `InterfaceError` (Python 2.7.4, Arch Linux). I wonder if the Python 3 `sqlite3` module has some strange default behavior where if `sqlite3` does not understand the data type it just converts it to raw bytes. Worth figuring out. Not sure why the decimal separator would matter here.\n\nLooks like `sqlite3` is the culprit not pandas:\n\n``` python\nimport sqlite3\ncon = sqlite3.connect(':memory:')\ncon.execute('create table stocks (qty integer)')\ndata = [(1,), (2,)]\ncon.executemany('insert into stocks values (?)', data)  # this doesn't work\ndata = [(1.0,), (2.0,)]\ncon.executemany('insert into stocks values (?)', data)  # this works but converts float 2 int\n```\n\nStrangely enough this works too:\n\n``` python\ndata = [(1,), (2,)]\nfor d in data:\n    con.execute('insert into stocks values (?)', d)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18077086",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18077086",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18077086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc3MDg2",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:06:23Z",
    "updated_at": "2013-05-17T18:06:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just submitted this simple patch for pandas/io/sql.py to send 'normal' types to sqlite. \nIt seems to solve the issue for Python 3.\n\ndef _write_sqlite(frame, table, names, cur):\n...\n    #patch for a bug in sqlite with python 3.3.1\n    if   not len(frame.columns  )==1 :\n        data = [tuple(x) for x in frame.values]\n    else :\n        data = [tuple(x) for x in frame.values.tolist()]\n    cur.executemany(insert_query,data )\n...\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18077184",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18077184",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18077184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc3MTg0",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:08:31Z",
    "updated_at": "2013-05-17T18:14:25Z",
    "author_association": "MEMBER",
    "body": "What does your patch do? The lines you've changed don't do anything different. For example,\n\n``` python\nframe = DataFrame(np.array([[1, 2], [3, 4]]))\nvalues = frame.values\ndata = [tuple(row) for row in values] # convert each row from a 2 element array to a 2 element tuple\ndata2 = [tuple(row) for row in values.tolist()] # still converting each row from a 2-element list to a 2-element tuple\nassert data == data2 # this should not raise\n```\n\nAm I missing something here? Essentially,\n\n``` python\nx1 = np.array([1, 2])\ntup = tuple(x1)\ntup_from_list = tuple(x1.tolist())\ntup == tup_from_list\n```\n\nno?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18077377",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18077377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18077377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc3Mzc3",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:12:10Z",
    "updated_at": "2013-05-17T18:12:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "middleware bugs are always a nightmare. \n\n# THOREAU'S THEORIES OF ADAPTATION\n\n```\n1) After months of training and you finally understand all of a program's\ncommands, a revised version of the program arrives with an all-new\ncommand structure.\n2) After designing a useful routine that gets around a familiar \"bug\" in\nthe system, the system is revised, the \"bug\" taken away, and you're\nleft with a useless routine.\n3) Efforts in improving a program's \"user friendliness\" invariable lead\nto work in improving user's \"computer literacy\".\n4) That's not a \"bug\", that's a feature!\n```\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18077766",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18077766",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18077766,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc3NzY2",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:19:45Z",
    "updated_at": "2013-05-17T18:19:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "the same patch on winpython 2.7.3 solves the ungracious failure : \n\"sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type\"\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18077808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18077808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18077808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc3ODA4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:20:30Z",
    "updated_at": "2013-05-17T18:21:35Z",
    "author_association": "MEMBER",
    "body": "you should write a test...this seems like magic. if u can u should get tox running so that you can test across python versions and also set up travis which runs your new code on ubuntu. happy 2 provide more details if needed.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18078162",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18078162",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18078162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc4MTYy",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:26:45Z",
    "updated_at": "2013-05-17T18:26:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stonebig keep patching SQL bugs and u too can gain a pandas title\n\nmr SQL\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18078441",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18078441",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18078441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc4NDQx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:32:00Z",
    "updated_at": "2013-05-17T18:32:00Z",
    "author_association": "MEMBER",
    "body": "@stonebig can u explain why this patch works or write a failing test with the old version? i'm curious why this even matters.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18078471",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18078471",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18078471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc4NDcx",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:32:41Z",
    "updated_at": "2013-05-17T18:32:41Z",
    "author_association": "MEMBER",
    "body": "@jreback ur title must be mister EOP (entirety of pandas).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18078808",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18078808",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18078808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc4ODA4",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:38:11Z",
    "updated_at": "2013-05-17T18:38:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm new in github, I don't know how to write tests.\nA ipython example  would be  , with the patch on pandas applied \n\n#playing with lists, dictionaries, dataframe, like if all Python was a tasty sql pie \ndf=pd.DataFrame([(1, 'the great'),('Ourgo' ,'the brave')], columns=['surname','pseudo'])\na=[1 , 2]\nb=   {1: '2341', 2: '9102',3: '3258'}\nsqldf(\"select  \\*  from  df inner join  a on surname=a.c0 inner join b on a.c0=b.c0    \", locals())\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18078919",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18078919",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18078919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc4OTE5",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:40:04Z",
    "updated_at": "2013-05-17T18:40:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "import pandas as pd\n\n%load https://raw.github.com/stonebig/pandasql/working_with_list_and_patched_pandas/pandasql/sqldf.py\n\n#playing with lists, dictionaries, dataframe, like if all Python was a tasty sql pie\ndf=pd.DataFrame([(1, 'the great'),('Ourgo' ,'the brave')], columns=['surname','pseudo'])\na=[1 , 2]\nb= {1: '2341', 2: '9102',3: '3258'}\nsqldf(\"select \\* from df inner join a on surname=a.c0 inner join b on a.c0=b.c0 \", locals())\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18079631",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18079631",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18079631,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc5NjMx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:53:09Z",
    "updated_at": "2013-05-17T18:53:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "ha! mr. replace\n\n@stonebig \n\nlook in pandas/io/tests/test_sql.py\n\njust make a new test, list the GH issue in it\n\neseentially you do the new behavior and get a result, and can compare vs expected\n\nthere are also ways to test if something raises, etc.\n\nthis might be slighly more involved because you have to create a specific setup (if its not already in the def setup)\n\nThe idea of course is to try to replicate and narrow down a specific behavior that you changed. Ideally your test should fail before your fix, and pass afterwords (w/o impacting other tests)...but life is rarely so neat and clean!\n\nlet us know how it goes and we'll try to help\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18079662",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18079662",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18079662,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc5NjYy",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:53:44Z",
    "updated_at": "2013-05-17T18:53:44Z",
    "author_association": "MEMBER",
    "body": "A test is really an example coupled with an assert statement asserting the truthood of some expression usually involving a property of the data that u know to be true. Here you want to show that with your patch some previously failing operation is now not failing. If I were you I might make a branch where its diff with git master is the test and compare from there. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18079769",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18079769",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18079769,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDc5NzY5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T18:55:52Z",
    "updated_at": "2013-05-17T18:55:52Z",
    "author_association": "MEMBER",
    "body": "@jreback I swear I didn’t read that before my last comment! \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18083531",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18083531",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18083531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDgzNTMx",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T20:12:12Z",
    "updated_at": "2013-05-17T20:12:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback : ah, i see. it looks not so impossible to write a simple test. \nShall I add the test on my branch, or as another patch on the standard pandas tree ? \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18083941",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18083941",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18083941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDgzOTQx",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-17T20:21:05Z",
    "updated_at": "2013-05-17T20:21:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@stonebig just like you edited pandas/io/sql.py, edit pandas/io/tests/test_sql.py\n\nrun the tests and make sure they pass, also setup travis (see pandas/CONTRIBUTING for howto), which once you connect it to your git account will run tests under various version of python\n\n```\nnosetests pandas/io/tests/test_sql.py\nSSSSSSSSSS..........\n----------------------------------------------------------------------\nRan 20 tests in 0.203s\n\nOK (SKIP=10)\n\n```\n\nmine prob does not have some dependencies installed so skips some tests (e.g. i only have the python sqlite, not mysql installed)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18095939",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18095939",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18095939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDk1OTM5",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T06:21:12Z",
    "updated_at": "2013-05-18T06:22:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cpcloud about assert , try this \n\ndf=pd.DataFrame([ 1, 2], columns=['f'])\na=[tuple(row) for row in df.values]\nb=[tuple(row) for row in df.values.tolist()]\n\nassert a==b\n#(true)\ntype(a[0][0]) , type( b[0][0])\n#( class 'numpy.int64', class 'int')\n\nSo from a middleware point of view (at binary level), \"assert\" is bogus.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18099093",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18099093",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18099093,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDk5MDkz",
    "user": {
      "login": "stonebig",
      "id": 4312421,
      "node_id": "MDQ6VXNlcjQzMTI0MjE=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/4312421?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stonebig",
      "html_url": "https://github.com/stonebig",
      "followers_url": "https://api.github.com/users/stonebig/followers",
      "following_url": "https://api.github.com/users/stonebig/following{/other_user}",
      "gists_url": "https://api.github.com/users/stonebig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stonebig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stonebig/subscriptions",
      "organizations_url": "https://api.github.com/users/stonebig/orgs",
      "repos_url": "https://api.github.com/users/stonebig/repos",
      "events_url": "https://api.github.com/users/stonebig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stonebig/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T11:11:42Z",
    "updated_at": "2013-05-18T11:11:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback My first experiment  with writing test with Travis CI.\n\nTest on pandas without the patch is  https://travis-ci.org/stonebig/pandas/builds/7274172\nIt fails nicely \n on 2.7  InterfaceError: Error binding parameter 0 - probably unsupported type\n on 3.3 TypeError: unsupported operand type(s) for +: 'int' and 'bytes'\n\nTest on pandas with the patch is https://travis-ci.org/stonebig/pandas/builds/7274205\n  green\n\nI'm not sure if I did all that the proper way. Did I ?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18109219",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18109219",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18109219,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTA5MjE5",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T22:39:42Z",
    "updated_at": "2013-05-18T22:39:42Z",
    "author_association": "MEMBER",
    "body": "Oh geez. Sometimes dtypes are so annoying. Thanks for getting to the bottom of this. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18109310",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18109310",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18109310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTA5MzEw",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T22:48:27Z",
    "updated_at": "2013-05-18T22:48:27Z",
    "author_association": "MEMBER",
    "body": "I wouldn't call assert bogus. It's doing exactly what you (I?) would expect it to do in this kind of language. Ninety nine percent of the time you don't care if you have two different kinds of ints so you care about value equality not type equality. Of course, it's annoying that int64 and int are both subtypes of numbers.Integral so you might expect them to behave the same all the time, which they do in most respects. I bet you could submit a patch to pysqlite to allow numpy dtypes through. \n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18109453",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18109453",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18109453,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTA5NDUz",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T23:01:29Z",
    "updated_at": "2013-05-18T23:01:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI....in pandas `int64` is used as default int type exclusively. `int32` (or any other int type) must be specified explicity. **even on 32-bit platforms**. So when you test, _always_ test for (and use in construction `int64` dtypes). sql in general I will bet is broken in this respect (e.g. in that it does not always return `int64`, rather it actually returns a python int (which is then cast to `int64` by the constructors).\n\nThis **is** different from how numpy deals with things btw. Since the constructors take hints from the numpy dtypes, the returned type on a 32-bit platform will be the same as the numpy contructed type.\n\nsee this here for more info (this was 0.11.0):\nhttp://pandas.pydata.org/pandas-docs/dev/whatsnew.html#dtype-gotchas\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/18109688",
    "html_url": "https://github.com/pandas-dev/pandas/issues/3628#issuecomment-18109688",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/3628",
    "id": 18109688,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MTA5Njg4",
    "user": {
      "login": "cpcloud",
      "id": 417981,
      "node_id": "MDQ6VXNlcjQxNzk4MQ==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/417981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpcloud",
      "html_url": "https://github.com/cpcloud",
      "followers_url": "https://api.github.com/users/cpcloud/followers",
      "following_url": "https://api.github.com/users/cpcloud/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpcloud/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpcloud/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpcloud/subscriptions",
      "organizations_url": "https://api.github.com/users/cpcloud/orgs",
      "repos_url": "https://api.github.com/users/cpcloud/repos",
      "events_url": "https://api.github.com/users/cpcloud/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpcloud/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2013-05-18T23:27:29Z",
    "updated_at": "2013-05-18T23:27:29Z",
    "author_association": "MEMBER",
    "body": "yeah...this (different behaviors from np dtypes and pandas) comes up every now and then (maybe even more often than that). i'm of the opinion that i would like to ignore differences in dtypes unless absolutely necessary, e.g., conversion to int64 from int32 if your array is enormous (this came up at some point as an issue in pandas) or reading from some binary format where the spec necessitates a particular type in, say a C `struct`. just my 2c.\n"
  }
]
