[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457147303",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-457147303",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 457147303,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzE0NzMwMw==",
    "user": {
      "login": "tdamsma",
      "id": 7870803,
      "node_id": "MDQ6VXNlcjc4NzA4MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7870803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdamsma",
      "html_url": "https://github.com/tdamsma",
      "followers_url": "https://api.github.com/users/tdamsma/followers",
      "following_url": "https://api.github.com/users/tdamsma/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdamsma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdamsma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdamsma/subscriptions",
      "organizations_url": "https://api.github.com/users/tdamsma/orgs",
      "repos_url": "https://api.github.com/users/tdamsma/repos",
      "events_url": "https://api.github.com/users/tdamsma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdamsma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T10:28:45Z",
    "updated_at": "2019-01-24T10:28:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd, can you offer some guidance on how to test this functionality? I presume there is no suitable way to involve MS Excel in the process, what should be tested? If the function runs without errors? If the data can be loaded from the excel file? As far as I know there is not a simple way to load an excel table in python referenced by the e.g. tablename.\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457149381",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-457149381",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 457149381,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzE0OTM4MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T10:35:27Z",
    "updated_at": "2019-01-24T10:35:27Z",
    "author_association": "MEMBER",
    "body": "Sure - check pandas/tests/io/data you will see Excel files created which explicitly show the intended layout. The corresponding writing test will compare a generated file against what was expected. \n\nSent from my iPhone\n\n> On Jan 24, 2019, at 5:28 AM, Thijs Damsma <notifications@github.com> wrote:\n> \n> @WillAyd, can you offer some guidance on how to test this functionality? I presume there is no suitable way to involve MS Excel in the process, what should be tested? If the function runs without errors? If the data can be loaded from the excel file? As far as I know there is not a simple way to load an excel table in python referenced by the e.g. tablename.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457933400",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-457933400",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 457933400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzkzMzQwMA==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-27T16:42:00Z",
    "updated_at": "2019-01-27T16:42:00Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=h1) Report\n> Merging [#24899](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/2b16e2e6c5a298396727fc2e66a60edf1eb13bf9?src=pr&el=desc) will **decrease** coverage by `49.49%`.\n> The diff coverage is `12.5%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24899/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24899      +/-   ##\n==========================================\n- Coverage   92.38%   42.88%   -49.5%     \n==========================================\n  Files         166      166              \n  Lines       52398    52418      +20     \n==========================================\n- Hits        48406    22480   -25926     \n- Misses       3992    29938   +25946\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `?` | |\n| #single | `42.88% <12.5%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `39.86% <ø> (-56.77%)` | :arrow_down: |\n| [pandas/io/formats/excel.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvZXhjZWwucHk=) | `14.69% <12.5%> (-82.71%)` | :arrow_down: |\n| [pandas/io/formats/latex.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvbGF0ZXgucHk=) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/core/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvY2F0ZWdvcmljYWwucHk=) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/io/sas/sas\\_constants.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3Nhcy9zYXNfY29uc3RhbnRzLnB5) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/tseries/plotting.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvcGxvdHRpbmcucHk=) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/tseries/converter.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvY29udmVydGVyLnB5) | `0% <0%> (-100%)` | :arrow_down: |\n| [pandas/io/formats/html.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvaHRtbC5weQ==) | `0% <0%> (-99.35%)` | :arrow_down: |\n| [pandas/core/groupby/categorical.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ3JvdXBieS9jYXRlZ29yaWNhbC5weQ==) | `0% <0%> (-95.46%)` | :arrow_down: |\n| [pandas/io/sas/sas7bdat.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL3Nhcy9zYXM3YmRhdC5weQ==) | `0% <0%> (-91.17%)` | :arrow_down: |\n| ... and [125 more](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=footer). Last update [2b16e2e...ca9c36e](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457933401",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-457933401",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 457933401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzkzMzQwMQ==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2019-01-27T16:42:00Z",
    "updated_at": "2019-01-27T20:07:56Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=h1) Report\n> Merging [#24899](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/2b16e2e6c5a298396727fc2e66a60edf1eb13bf9?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `87.5%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/24899/graphs/tree.svg?width=650&token=eZ4WkYLtcO&height=150&src=pr)](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #24899      +/-   ##\n==========================================\n+ Coverage   92.38%   92.38%   +<.01%     \n==========================================\n  Files         166      166              \n  Lines       52398    52403       +5     \n==========================================\n+ Hits        48406    48411       +5     \n  Misses       3992     3992\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.8% <87.5%> (-0.01%)` | :arrow_down: |\n| #single | `42.88% <12.5%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/core/generic.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvZ2VuZXJpYy5weQ==) | `96.63% <ø> (ø)` | :arrow_up: |\n| [pandas/io/formats/excel.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL2lvL2Zvcm1hdHMvZXhjZWwucHk=) | `97.12% <87.5%> (-0.28%)` | :arrow_down: |\n| [pandas/util/testing.py](https://codecov.io/gh/pandas-dev/pandas/pull/24899/diff?src=pr&el=tree#diff-cGFuZGFzL3V0aWwvdGVzdGluZy5weQ==) | `88.13% <0%> (+0.09%)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=footer). Last update [2b16e2e...c12a9f6](https://codecov.io/gh/pandas-dev/pandas/pull/24899?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457933405",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-457933405",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 457933405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzkzMzQwNQ==",
    "user": {
      "login": "pep8speaks",
      "id": 24736507,
      "node_id": "MDQ6VXNlcjI0NzM2NTA3",
      "avatar_url": "https://avatars1.githubusercontent.com/u/24736507?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pep8speaks",
      "html_url": "https://github.com/pep8speaks",
      "followers_url": "https://api.github.com/users/pep8speaks/followers",
      "following_url": "https://api.github.com/users/pep8speaks/following{/other_user}",
      "gists_url": "https://api.github.com/users/pep8speaks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pep8speaks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pep8speaks/subscriptions",
      "organizations_url": "https://api.github.com/users/pep8speaks/orgs",
      "repos_url": "https://api.github.com/users/pep8speaks/repos",
      "events_url": "https://api.github.com/users/pep8speaks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pep8speaks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T16:42:02Z",
    "updated_at": "2019-01-27T19:30:06Z",
    "author_association": "NONE",
    "body": "Hello @tdamsma! Thanks for updating the PR.\n\n\n\n\n\n\n\n\n\nCheers ! There are no PEP8 issues in this Pull Request. :beers: \n\n##### Comment last updated on January 27, 2019 at 19:30 Hours UTC"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/457948014",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-457948014",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 457948014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Nzk0ODAxNA==",
    "user": {
      "login": "tdamsma",
      "id": 7870803,
      "node_id": "MDQ6VXNlcjc4NzA4MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7870803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdamsma",
      "html_url": "https://github.com/tdamsma",
      "followers_url": "https://api.github.com/users/tdamsma/followers",
      "following_url": "https://api.github.com/users/tdamsma/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdamsma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdamsma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdamsma/subscriptions",
      "organizations_url": "https://api.github.com/users/tdamsma/orgs",
      "repos_url": "https://api.github.com/users/tdamsma/repos",
      "events_url": "https://api.github.com/users/tdamsma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdamsma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-27T19:46:45Z",
    "updated_at": "2019-01-28T07:27:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd, I added a simple round-trip test. I tried to look for a example on how to check formatting, but the only test for formatting is completely commented out (`test_to_excel_header_styling_xls`). As far as I can tell the example sheets are only used in read tests, and not for comparison with write tests. I addressed your other comments, can you give some feedback if the general approach fits with pandas? I know there are still many tests to add, but I would like to know if I am on the right track for having this merged eventually. Thanks!"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458636223",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-458636223",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 458636223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODYzNjIyMw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-29T17:42:45Z",
    "updated_at": "2019-01-29T17:42:45Z",
    "author_association": "MEMBER",
    "body": "@tdamsma yea this might be tricky; not sure of best approach off the top of my head, but are there any testing facilities you know of with say openpyxl that would allow us to make stronger assertions about what is being written out? As is now there's just no way that the tests ensure this is actually working"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/458844010",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-458844010",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 458844010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1ODg0NDAxMA==",
    "user": {
      "login": "tdamsma",
      "id": 7870803,
      "node_id": "MDQ6VXNlcjc4NzA4MDM=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/7870803?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdamsma",
      "html_url": "https://github.com/tdamsma",
      "followers_url": "https://api.github.com/users/tdamsma/followers",
      "following_url": "https://api.github.com/users/tdamsma/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdamsma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdamsma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdamsma/subscriptions",
      "organizations_url": "https://api.github.com/users/tdamsma/orgs",
      "repos_url": "https://api.github.com/users/tdamsma/repos",
      "events_url": "https://api.github.com/users/tdamsma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdamsma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-30T07:44:51Z",
    "updated_at": "2019-01-30T07:44:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WillAyd, I wasn't aware of any options, but I just had a better look at openpyxl and this is indeed possible. In essence we need a function that can read an excel table into a dataframe, which would also be quite useful for pandas in general. "
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/460513477",
    "html_url": "https://github.com/pandas-dev/pandas/pull/24899#issuecomment-460513477",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24899",
    "id": 460513477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MDUxMzQ3Nw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-05T04:59:33Z",
    "updated_at": "2019-02-05T04:59:33Z",
    "author_association": "MEMBER",
    "body": "@tdamsma given conversation in associated issue number and some of the other pre-cursors going to close this one for now to keep our queue minimal. If you plan on addressing soon let me know, otherwise can reopen as we get back around to this"
  }
]
