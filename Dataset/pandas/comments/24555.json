[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450906337",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24555#issuecomment-450906337",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24555",
    "id": 450906337,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDkwNjMzNw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T16:13:49Z",
    "updated_at": "2019-01-02T16:16:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another one.\r\n\r\n```python\r\nIn [16]: idx = pd.date_range('2014-01-02', '2014-04-30', freq='M', tz='UTC')\r\n\r\nIn [17]: result = idx.tz_convert(\"US/Eastern\")\r\n\r\nIn [18]: result\r\nOut[18]:\r\nDatetimeIndex(['2014-01-30 19:00:00-05:00', '2014-02-27 19:00:00-05:00',\r\n               '2014-03-30 20:00:00-04:00', '2014-04-29 20:00:00-04:00'],\r\n              dtype='datetime64[ns, US/Eastern]', freq='M')\r\n\r\nIn [19]: result._eadata._validate_frequency(result, result.freq)\r\n```\r\n```pytb\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n~/sandbox/pandas-alt/pandas/core/arrays/datetimelike.py in _validate_frequency(cls, index, freq, **kwargs)\r\n    913             if not np.array_equal(index.asi8, on_freq.asi8):\r\n--> 914                 raise ValueError\r\n    915         except ValueError as e:\r\n\r\nValueError:\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-19-24fa3f452eb0> in <module>\r\n----> 1 result._eadata._validate_frequency(result, result.freq)\r\n\r\n~/sandbox/pandas-alt/pandas/core/arrays/datetimelike.py in _validate_frequency(cls, index, freq, **kwargs)\r\n    925             raise ValueError('Inferred frequency {infer} from passed values '\r\n    926                              'does not conform to passed frequency {passed}'\r\n--> 927                              .format(infer=inferred, passed=freq.freqstr))\r\n    928\r\n    929     # monotonicity/uniqueness properties are called via frequencies.infer_freq,\r\n\r\nValueError: Inferred frequency None from passed values does not conform to passed frequency M\r\n```\r\n\r\nthough, perhaps there's a bug in the freq validation around DST boundaries? But maybe not. Here's the range for US/Eastern\r\n\r\n```python\r\nIn [36]: pd.date_range('2014-01-02', '2014-04-30', freq='M', tz='US/Eastern')\r\nOut[36]:\r\nDatetimeIndex(['2014-01-31 00:00:00-05:00', '2014-02-28 00:00:00-05:00',\r\n               '2014-03-31 00:00:00-04:00', '2014-04-30 00:00:00-04:00'],\r\n              dtype='datetime64[ns, US/Eastern]', freq='M')\r\n```\r\n\r\nSo should `tz_convert` invalidate the freq?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450909512",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24555#issuecomment-450909512",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24555",
    "id": 450909512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDkwOTUxMg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T16:24:08Z",
    "updated_at": "2019-01-02T16:24:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "One more. In this case we seem to generate an array from `bdate_range` that doesn't have a valid freq (not sure if the bug is in the generation or the freq validation, probably the validation).\r\n\r\n```python\r\nSTART = pd.Timestamp(2009, 3, 13)\r\nEND1 = pd.Timestamp(2009, 3, 18)\r\nEND2 = pd.Timestamp(2009, 3, 19)\r\n\r\nfreq = 'CBH'\r\na = pd.bdate_range(START, END1, freq=freq, weekmask='Mon Wed Fri',\r\n                   holidays=['2009-03-14'])\r\nb = pd.bdate_range(START, END2, freq=freq, weekmask='Mon Wed Fri',\r\n                   holidays=['2009-03-14'])\r\n\r\na._eadata._validate_frequency(a, a.freq)\r\nb._eadata._validate_frequency(b, b.freq)\r\n```\r\n\r\n`a` validates fine, but `b` doesn't\r\n\r\n```pytb\r\nIn [44]: b._eadata._validate_frequency(b, b.freq)\r\n    ...:\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n~/sandbox/pandas-alt/pandas/core/arrays/datetimelike.py in _validate_frequency(cls, index, freq, **kwargs)\r\n    913             if not np.array_equal(index.asi8, on_freq.asi8):\r\n--> 914                 raise ValueError\r\n    915         except ValueError as e:\r\n\r\nValueError:\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-44-2b6f5f040d09> in <module>\r\n----> 1 b._eadata._validate_frequency(b, b.freq)\r\n\r\n~/sandbox/pandas-alt/pandas/core/arrays/datetimelike.py in _validate_frequency(cls, index, freq, **kwargs)\r\n    925             raise ValueError('Inferred frequency {infer} from passed values '\r\n    926                              'does not conform to passed frequency {passed}'\r\n--> 927                              .format(infer=inferred, passed=freq.freqstr))\r\n    928\r\n    929     # monotonicity/uniqueness properties are called via frequencies.infer_freq,\r\n\r\nValueError: Inferred frequency None from passed values does not conform to passed frequency CBH\r\n```\r\n\r\nIn the freq validation for `b` we generate an `on_freq` with the wrong(?) number of periods\r\n\r\n```python\r\nipdb> len(on_freq)\r\n16\r\nipdb> len(index)\r\n24\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450914265",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24555#issuecomment-450914265",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24555",
    "id": 450914265,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDkxNDI2NQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T16:40:10Z",
    "updated_at": "2019-01-02T16:40:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do we have a policy on when an operation that might invalidate a freq should infer vs. just set it to None? For example, in `DatetimeIndex.where` we could either do `_shallow_copy(freq=None)` or `_shallow_copy_with_infer`."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/450938811",
    "html_url": "https://github.com/pandas-dev/pandas/issues/24555#issuecomment-450938811",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/24555",
    "id": 450938811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MDkzODgxMQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-02T18:12:46Z",
    "updated_at": "2019-01-02T18:12:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that a fix for these issues (invalidating in places where needed, maybe fixing some bugs in the current freq validation) and a fix for https://github.com/pandas-dev/pandas/issues/24562 will open up freq validation in `DatetimeArray.__init__`"
  }
]
