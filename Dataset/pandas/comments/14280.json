[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248908468",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14280#issuecomment-248908468",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14280",
    "id": 248908468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODkwODQ2OA==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T13:48:41Z",
    "updated_at": "2016-09-22T13:48:41Z",
    "author_association": "NONE",
    "body": "My workaround:\n\n```\nimport socket\nfrom pandas.io.json import read_json\n\ndef read_json_with_timeout(url, timeout):\n    \"\"\"\n    pandas.io.json.read_json had no timeout option. This fixes that.\n    \"\"\"\n    timeout_before = socket.getdefaulttimeout()\n    socket.setdefaulttimeout(timeout)\n    df = read_json(url, orient=\"columns\")\n    socket.setdefaulttimeout(timeout_before)\n\n    return df\n```\n\nbut better would be to give a timeout option everywhere where you query the web.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248915610",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14280#issuecomment-248915610",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14280",
    "id": 248915610,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODkxNTYxMA==",
    "user": {
      "login": "bkandel",
      "id": 606089,
      "node_id": "MDQ6VXNlcjYwNjA4OQ==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/606089?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bkandel",
      "html_url": "https://github.com/bkandel",
      "followers_url": "https://api.github.com/users/bkandel/followers",
      "following_url": "https://api.github.com/users/bkandel/following{/other_user}",
      "gists_url": "https://api.github.com/users/bkandel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bkandel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bkandel/subscriptions",
      "organizations_url": "https://api.github.com/users/bkandel/orgs",
      "repos_url": "https://api.github.com/users/bkandel/repos",
      "events_url": "https://api.github.com/users/bkandel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bkandel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T14:13:49Z",
    "updated_at": "2016-09-22T14:13:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "You could also try using the `retrying` package, which provides decorators for retrying function calls that may fail (like internet queries).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/248955972",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14280#issuecomment-248955972",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14280",
    "id": 248955972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0ODk1NTk3Mg==",
    "user": {
      "login": "altsheets",
      "id": 12915804,
      "node_id": "MDQ6VXNlcjEyOTE1ODA0",
      "avatar_url": "https://avatars0.githubusercontent.com/u/12915804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/altsheets",
      "html_url": "https://github.com/altsheets",
      "followers_url": "https://api.github.com/users/altsheets/followers",
      "following_url": "https://api.github.com/users/altsheets/following{/other_user}",
      "gists_url": "https://api.github.com/users/altsheets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/altsheets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/altsheets/subscriptions",
      "organizations_url": "https://api.github.com/users/altsheets/orgs",
      "repos_url": "https://api.github.com/users/altsheets/repos",
      "events_url": "https://api.github.com/users/altsheets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/altsheets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-22T16:29:57Z",
    "updated_at": "2016-09-22T16:56:11Z",
    "author_association": "NONE",
    "body": "Thx. \n\nThat is cool indeed:\n\n```\n@retry(stop_max_delay=10000)\n```\n\n>  for retrying function calls that may fail (like internet queries).\n\nI had already been catching exceptions, and then simply retried, after a shorter-than-ususal sleep.\n\nHowever, what if no exception is thrown?\n\nWith the default `socket.getdefaulttimeout() --> None`, we ran into non-returning calls; actually very infrequent, sometimes only once per month (i.e. once per many thousand calls). But then in those cases (because no exception thrown) the whole backend halted without recovery, and at first me had no clue why.\n\nNow, with `socket.setdefaulttimeout(10.0)` this should not happen anymore. Instead the `read_json' will throw an exception, and I can treat that like any other internet connection failure.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/461691428",
    "html_url": "https://github.com/pandas-dev/pandas/issues/14280#issuecomment-461691428",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/14280",
    "id": 461691428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2MTY5MTQyOA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-08T05:00:49Z",
    "updated_at": "2019-02-08T05:00:49Z",
    "author_association": "MEMBER",
    "body": "IMO this is out of scope for pandas. A few IO functions can read from urls but they are essentially treated like file handles. Wrapping pandas IO routines to handle timeout issues would be a better solution. Closing as there seems not to be much traction. "
  }
]
