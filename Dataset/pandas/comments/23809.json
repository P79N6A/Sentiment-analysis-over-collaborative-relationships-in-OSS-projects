[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440254025",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23809#issuecomment-440254025",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23809",
    "id": 440254025,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDI1NDAyNQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-20T12:19:50Z",
    "updated_at": "2018-11-20T12:19:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you reproduce the crash using just the underlying engine (openpyxl or xlrd)?\r\n\r\nCan you post the traceback?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440501342",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23809#issuecomment-440501342",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23809",
    "id": 440501342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDUwMTM0Mg==",
    "user": {
      "login": "Dobatymo",
      "id": 7647594,
      "node_id": "MDQ6VXNlcjc2NDc1OTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7647594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dobatymo",
      "html_url": "https://github.com/Dobatymo",
      "followers_url": "https://api.github.com/users/Dobatymo/followers",
      "following_url": "https://api.github.com/users/Dobatymo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dobatymo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dobatymo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dobatymo/subscriptions",
      "organizations_url": "https://api.github.com/users/Dobatymo/orgs",
      "repos_url": "https://api.github.com/users/Dobatymo/repos",
      "events_url": "https://api.github.com/users/Dobatymo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dobatymo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T02:04:37Z",
    "updated_at": "2018-11-21T02:05:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is no traceback as no exception is thrown. The process simply crashes. With plain `xldr` or `openpyxl` I can read the file however.\r\n\r\n```python\r\npath = \"pandas_crash.xlsx\"\r\n\r\nfrom openpyxl import load_workbook\r\n\r\nsheet = load_workbook(path).active\r\n\r\nfor i in range(1, sheet.max_row+1):\r\n\tfor j in range(1, sheet.max_column+1):\r\n\t\tprint(repr(sheet.cell(row=i,column=j).value))\r\n\r\nimport xlrd\r\n\r\nsheet = xlrd.open_workbook(path).sheet_by_index(0)\r\n\r\nfor i in range(0, sheet.nrows):\r\n\tfor j in range(0, sheet.ncols):\r\n\t\tprint(repr(sheet.cell(i, j).value))\r\n```\r\nOutput:\r\n```\r\n'Column1'\r\n'_xDC88_'\r\n'Column1'\r\n'\\udc88'\r\n```\r\nThe output of `openpyxl` is not correct, it seems it cannot handle the single surrogate. `xlrd` is correct."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440640229",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23809#issuecomment-440640229",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23809",
    "id": 440640229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDY0MDIyOQ==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T12:06:10Z",
    "updated_at": "2018-11-21T12:06:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> There is no traceback as no exception is thrown. The process simply\ncrashes.\n\nStrange.\n\n> xlrd is correct.\n\nDoes pd.read_excel with `engine='xldd'` work?\n\nOn Tue, Nov 20, 2018 at 8:04 PM Dobatymo <notifications@github.com> wrote:\n\n> There is no traceback as no exception is thrown. The process simply\n> crashes. With plain xldr or openpyxl I can read the file however.\n>\n> path = \"pandas_crash.xlsx\"\n> from openpyxl import load_workbook\n>\n> sheet = load_workbook(path).active\n> for i in range(1, sheet.max_row+1):\n> \tfor j in range(1, sheet.max_column+1):\n> \t\tprint(repr(sheet.cell(row=i,column=j).value))\n> import xlrd\n>\n> sheet = xlrd.open_workbook(path).sheet_by_index(0)\n> for i in range(0, sheet.nrows):\n> \tfor j in range(0, sheet.ncols):\n> \t\tprint(repr(sheet.cell(i, j).value))\n>\n> Output:\n>\n> 'Column1'\n> '_xDC88_'\n> 'Column1'\n> '\\udc88'\n>\n> The output of openpyxl is not correct, it seems it cannot handle the\n> single surrogates. xlrd is correct.\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/23809#issuecomment-440501342>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIowKo5UM8P1e2EwIR1XVHQUxB1_sks5uxLS6gaJpZM4Yqh8t>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440676212",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23809#issuecomment-440676212",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23809",
    "id": 440676212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDY3NjIxMg==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-21T14:15:50Z",
    "updated_at": "2018-11-21T14:15:50Z",
    "author_association": "MEMBER",
    "body": "Not an expert in this domain but what encoding is supposed to be represented here? I believe modern Excel files use utf-16 encoding internally but doesn't that surrogate fall outside of the high surrogate range for that encoding?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/440882837",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23809#issuecomment-440882837",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23809",
    "id": 440882837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MDg4MjgzNw==",
    "user": {
      "login": "Dobatymo",
      "id": 7647594,
      "node_id": "MDQ6VXNlcjc2NDc1OTQ=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/7647594?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dobatymo",
      "html_url": "https://github.com/Dobatymo",
      "followers_url": "https://api.github.com/users/Dobatymo/followers",
      "following_url": "https://api.github.com/users/Dobatymo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dobatymo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dobatymo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dobatymo/subscriptions",
      "organizations_url": "https://api.github.com/users/Dobatymo/orgs",
      "repos_url": "https://api.github.com/users/Dobatymo/repos",
      "events_url": "https://api.github.com/users/Dobatymo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dobatymo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-22T01:30:39Z",
    "updated_at": "2018-11-22T01:30:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "The string is a single surrogate, which is not valid Unicode. However xlrd behaves correctly and passes the string through to python unmodified. I encountered this type of problem when exporting `.xlsx` files from SQL Server. It's possible they contain invalid Unicode strings.\r\n```\r\nread_excel(path, engine=\"xlrd\")\r\n```\r\nfails as well.\r\n\r\nI can verify that the source of the crash is from Pandas. Debugging with Visual Studio yields:\r\n```\r\nlib.cp36-win_amd64.pyd!00007ffd4eef114e()\r\nlib.cp36-win_amd64.pyd!00007ffd4eef1400()\r\nlib.cp36-win_amd64.pyd!00007ffd4eecf2bc()\r\nlib.cp36-win_amd64.pyd!00007ffd4eed1428()\r\npython36.dll!0000000064b2c902()\r\npython36.dll!0000000064b2be83()\r\npython36.dll!0000000064b3ca49()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2c2fa()\r\npython36.dll!0000000064b3ca49()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2c2fa()\r\npython36.dll!0000000064b3ca49()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2c2fa()\r\npython36.dll!0000000064b3ca49()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2c2fa()\r\npython36.dll!0000000064b3ca49()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2c2fa()\r\npython36.dll!0000000064b3e34e()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2b940()\r\npython36.dll!0000000064b2b725()\r\npython36.dll!0000000064b3f29f()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2b940()\r\npython36.dll!0000000064b2b725()\r\npython36.dll!0000000064b3f29f()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2485d()\r\npython36.dll!0000000064b3f29f()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2485d()\r\npython36.dll!0000000064b3f29f()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b2c2fa()\r\npython36.dll!0000000064b3e34e()\r\npython36.dll!0000000064b2cbf4()\r\npython36.dll!0000000064b512cf()\r\npython36.dll!0000000064b5122d()\r\npython36.dll!0000000064b511d7()\r\npython36.dll!0000000064cba819()\r\npython36.dll!0000000064cbafb9()\r\npython36.dll!0000000064cba6f7()\r\npython36.dll!0000000064c0a9f4()\r\npython36.dll!0000000064b944f2()\r\npython.exe!000000001c70126d()\r\nkernel32.dll!00007ffd9a868102()\r\nntdll.dll!00007ffd9af9c5b4()\r\n```\r\nwhich is not terrible helpful, but at least we can be sure the crash is in `pandas\\_libs\\lib.cp36-win_amd64.pyd`"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/441149438",
    "html_url": "https://github.com/pandas-dev/pandas/issues/23809#issuecomment-441149438",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/23809",
    "id": 441149438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MTE0OTQzOA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-23T03:23:48Z",
    "updated_at": "2018-11-23T03:23:48Z",
    "author_association": "MEMBER",
    "body": "OK thanks. I think generally we have a few issues with handling surrogates in the parsers (can search issues for similar ones). Not sure if there's a way to handle gracefully with Python2 support but would in any case welcome investigation and PRs. \r\n\r\nFYI dropping Python2 support officially at the start of 2019 so Compatibility won't be as much of an issue soon"
  }
]
