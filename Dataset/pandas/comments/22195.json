[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410408718",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-410408718",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 410408718,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQwODcxOA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-04T00:41:04Z",
    "updated_at": "2018-08-04T00:41:04Z",
    "author_association": "MEMBER",
    "body": "Definitely +1 on doing this for Day, but it is less clear what this means for the other Tick subclasses.  What's the motivation?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410463860",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-410463860",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 410463860,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ2Mzg2MA==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-04T17:11:05Z",
    "updated_at": "2018-08-04T17:11:05Z",
    "author_association": "MEMBER",
    "body": "For the other Ticks, it's mostly to keep them consistent with the definition of `Day` e.g. a user should expect 24 `Hour`s to behave similarly as 1 `Day`. Otherwise the other Tick subclasses would be redundant with Timedeltas as well."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410476944",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-410476944",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 410476944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ3Njk0NA==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-04T20:53:12Z",
    "updated_at": "2018-08-04T20:53:12Z",
    "author_association": "MEMBER",
    "body": "> For the other Ticks, it's mostly to keep them consistent with the definition of Day e.g. a user should expect 24 Hours to behave similarly as 1 Day. Otherwise the other Tick subclasses would be redundant with Timedeltas as well.\r\n\r\nI can see some usefulness here, but what about use cases where the frequency _should_ be Timedelta-like?  e.g. if I call `pd.date_range('2016-01-02 03:04', periods=1000, freq='H', tz='US/Pacific')`, I'd be surprised if the resulting index skipped an hour at a DST change.\r\n\r\nThis is also going to affect `timedeltas.delta_to_nanoseconds`, I'll have to look at this more closely."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410496165",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-410496165",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 410496165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ5NjE2NQ==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-05T05:04:32Z",
    "updated_at": "2018-08-05T05:04:32Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel \r\n\r\nI think the core confusion for users is the inherent ambiguity when specifying a string frequency like `'D'` on whether the strings mean calendar time or absolute time.\r\n\r\nPandas advertises them as (Date)offsets, but there's an implicit (and not-clearly-documented) consistency throughout the API that string offsets passed to other methods like `resample` or `date_range` respect absolute time which is consistent with `pd.tseries.frequencies.to_offset('D')` returning a `Day` Tick that also respects absolute time. (This is probably why we have a lot of kludgey code dancing around `Day`)\r\n\r\nThat being said, I would love for all the frequency strings to map to calendar-respecting `Ticks`\r\n/`DateOffsets`, but that would API breaking for `df.resample('D')` with timezones.\r\n\r\nFor the sake of consistency, I am okay with the API break, but interested to get your initial thoughts\r\nProbably should open this discussion up to other too."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/410496232",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-410496232",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 410496232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDQ5NjIzMg==",
    "user": {
      "login": "codecov[bot]",
      "id": 22429695,
      "node_id": "MDM6Qm90MjI0Mjk2OTU=",
      "avatar_url": "https://avatars2.githubusercontent.com/in/254?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codecov%5Bbot%5D",
      "html_url": "https://github.com/apps/codecov",
      "followers_url": "https://api.github.com/users/codecov%5Bbot%5D/followers",
      "following_url": "https://api.github.com/users/codecov%5Bbot%5D/following{/other_user}",
      "gists_url": "https://api.github.com/users/codecov%5Bbot%5D/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codecov%5Bbot%5D/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codecov%5Bbot%5D/subscriptions",
      "organizations_url": "https://api.github.com/users/codecov%5Bbot%5D/orgs",
      "repos_url": "https://api.github.com/users/codecov%5Bbot%5D/repos",
      "events_url": "https://api.github.com/users/codecov%5Bbot%5D/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codecov%5Bbot%5D/received_events",
      "type": "Bot",
      "site_admin": false
    },
    "created_at": "2018-08-05T05:06:57Z",
    "updated_at": "2018-08-05T05:54:43Z",
    "author_association": "NONE",
    "body": "# [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22195?src=pr&el=h1) Report\n> Merging [#22195](https://codecov.io/gh/pandas-dev/pandas/pull/22195?src=pr&el=desc) into [master](https://codecov.io/gh/pandas-dev/pandas/commit/776fed3ab63d74ddef6e5af1a702b10c2a30bbb6?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/pandas-dev/pandas/pull/22195/graphs/tree.svg?height=150&src=pr&token=eZ4WkYLtcO&width=650)](https://codecov.io/gh/pandas-dev/pandas/pull/22195?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master   #22195      +/-   ##\n==========================================\n+ Coverage   92.06%   92.06%   +<.01%     \n==========================================\n  Files         169      169              \n  Lines       50694    50697       +3     \n==========================================\n+ Hits        46671    46674       +3     \n  Misses       4023     4023\n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| #multiple | `90.47% <100%> (ø)` | :arrow_up: |\n| #single | `42.32% <12.5%> (-0.01%)` | :arrow_down: |\n\n| [Impacted Files](https://codecov.io/gh/pandas-dev/pandas/pull/22195?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [pandas/tseries/offsets.py](https://codecov.io/gh/pandas-dev/pandas/pull/22195/diff?src=pr&el=tree#diff-cGFuZGFzL3RzZXJpZXMvb2Zmc2V0cy5weQ==) | `97.16% <100%> (ø)` | :arrow_up: |\n| [pandas/core/arrays/datetimes.py](https://codecov.io/gh/pandas-dev/pandas/pull/22195/diff?src=pr&el=tree#diff-cGFuZGFzL2NvcmUvYXJyYXlzL2RhdGV0aW1lcy5weQ==) | `95.49% <100%> (-0.02%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22195?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/pandas-dev/pandas/pull/22195?src=pr&el=footer). Last update [776fed3...d64ce4f](https://codecov.io/gh/pandas-dev/pandas/pull/22195?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411566377",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-411566377",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 411566377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTU2NjM3Nw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-08T22:00:11Z",
    "updated_at": "2018-08-08T22:00:11Z",
    "author_association": "MEMBER",
    "body": "@jbrockmendel After thinking about it; I am convinced to only change `Day` to respect calendar arithmetic and leaving the rest of the ticks alone.\r\n\r\nTo do this I was thinking of having `Day` subclass `DateOffset` instead of `Tick` because the arithmetic paths are already determined by checking for `DateOffset` vs `Tick`. Any thoughts/reservations?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411598907",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-411598907",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 411598907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTU5ODkwNw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T00:35:52Z",
    "updated_at": "2018-08-09T00:35:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mroeschke ok with your suggestion, it *might* make some code simpler (though likely to break some tests I think)"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411607127",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-411607127",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 411607127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTYwNzEyNw==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-09T01:24:31Z",
    "updated_at": "2018-08-09T01:24:31Z",
    "author_association": "MEMBER",
    "body": "I think we're on the same page.  I think we should make `Day` (and with it \"D\") correspond to calendar time like this PR does.\r\n\r\nWe also need to retain a way to specify `timedelta`-like frequencies, which is why I think we should keep `Hour`, `Minute`, ..., `Nano` as they are.  Then a user can specify an absolute-day as `\"24H\"`.  Conversely they can specify \"every day at noon and midnight\" as `\".5D\"`.\r\n\r\nThere is also an issue (not specific to this PR, but closely related) of how to handle ambiguous/nonexistent times.  If I start at `ts = pd.Timestamp(\"2018-11-03 01:00:00\", tz='US/Pacific')` and add a calendar-Day offset, do we want `Timestamp('2018-11-04 01:00:00-0700', tz='US/Pacific')` or `Timestamp('2018-11-04 01:00:00-0800', tz='US/Pacific')`?\r\n\r\nConversely, If I start at `ts = pd.Timestamp(\"2019-03-09 02:00:00\", tz='US/Pacific')` and add a calendar-Day, do we raise NonExistentTimeError or allow some fudge-factor?\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/411984126",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-411984126",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 411984126,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMTk4NDEyNg==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-10T06:02:17Z",
    "updated_at": "2018-08-10T06:02:17Z",
    "author_association": "MEMBER",
    "body": "Thanks for the input @jreback and @jbrockmendel:\r\n\r\nIn regards to the `Timestamp + Day = Ambiguous Datetime` issue, I am partial toward raising an `AmbiguousTimeError` for \"fall back\" DST behavior and `NonExistentTimeError` for \"spring forward\" behavior for now. In the future we can consider adding a special kwarg to `Day.apply` to handle these ambiguous times."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/412247933",
    "html_url": "https://github.com/pandas-dev/pandas/pull/22195#issuecomment-412247933",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/22195",
    "id": 412247933,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMjI0NzkzMw==",
    "user": {
      "login": "mroeschke",
      "id": 10647082,
      "node_id": "MDQ6VXNlcjEwNjQ3MDgy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/10647082?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mroeschke",
      "html_url": "https://github.com/mroeschke",
      "followers_url": "https://api.github.com/users/mroeschke/followers",
      "following_url": "https://api.github.com/users/mroeschke/following{/other_user}",
      "gists_url": "https://api.github.com/users/mroeschke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mroeschke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mroeschke/subscriptions",
      "organizations_url": "https://api.github.com/users/mroeschke/orgs",
      "repos_url": "https://api.github.com/users/mroeschke/repos",
      "events_url": "https://api.github.com/users/mroeschke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mroeschke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-11T03:36:14Z",
    "updated_at": "2018-08-11T03:36:14Z",
    "author_association": "MEMBER",
    "body": "Closing as this will require a different implimentation"
  }
]
