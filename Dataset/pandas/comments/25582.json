[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470377250",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25582#issuecomment-470377250",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25582",
    "id": 470377250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDM3NzI1MA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T04:08:40Z",
    "updated_at": "2019-03-07T04:08:40Z",
    "author_association": "MEMBER",
    "body": "So I think the problem here is with how assignment gets aligned across all axes when using `.loc` as mentioned in the first warning here in the docs:\r\n\r\nhttps://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#basics\r\n\r\nThe `str.extract` call by default is producing a DataFrame with a column label of 0, so since `.loc` expects alignment on all axes only the following would really work in one pass:\r\n\r\n```python\r\ndf.loc[:,0] = df['B'].str.extract( r'^\\[([0-9]{1,2})' ) \r\n```\r\n\r\nOr alternately you can return a Series from `str.extract` which won't have that limitation\r\n\r\n```python\r\ndf.loc[:, 'num'] = df['B'].str.extract( r'^\\[([0-9]{1,2})', expand=False)\r\n```\r\n\r\nI can see where this is confusing just not sure off the top of my head what solution there is, if any. Let's see what others think"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470378013",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25582#issuecomment-470378013",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25582",
    "id": 470378013,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDM3ODAxMw==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T04:13:53Z",
    "updated_at": "2019-03-07T04:13:53Z",
    "author_association": "MEMBER",
    "body": "@Fealthas actually closing this as a duplicate of #10440 - feel free to give that a read as it may clarify some things and comment as necessary therein"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470379136",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25582#issuecomment-470379136",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25582",
    "id": 470379136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDM3OTEzNg==",
    "user": {
      "login": "Fealthas",
      "id": 25716039,
      "node_id": "MDQ6VXNlcjI1NzE2MDM5",
      "avatar_url": "https://avatars3.githubusercontent.com/u/25716039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Fealthas",
      "html_url": "https://github.com/Fealthas",
      "followers_url": "https://api.github.com/users/Fealthas/followers",
      "following_url": "https://api.github.com/users/Fealthas/following{/other_user}",
      "gists_url": "https://api.github.com/users/Fealthas/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Fealthas/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Fealthas/subscriptions",
      "organizations_url": "https://api.github.com/users/Fealthas/orgs",
      "repos_url": "https://api.github.com/users/Fealthas/repos",
      "events_url": "https://api.github.com/users/Fealthas/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Fealthas/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T04:20:47Z",
    "updated_at": "2019-03-07T04:20:47Z",
    "author_association": "NONE",
    "body": "@WillAyd thanks for looking into it.\r\nI'm not sure that this has anything to do with MultiIndex(my example doesn't use anything but a standard index), but if I don't know enough to disagree 🤷‍♂️ ."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/470379489",
    "html_url": "https://github.com/pandas-dev/pandas/issues/25582#issuecomment-470379489",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/25582",
    "id": 470379489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3MDM3OTQ4OQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-07T04:23:05Z",
    "updated_at": "2019-03-07T04:23:05Z",
    "author_association": "MEMBER",
    "body": "Yea I think the multiindex piece is somewhat of a red herring if you read through the thread. Can reopen if you disagree\n\nSent from my iPhone\n\n> On Mar 6, 2019, at 8:20 PM, Fealthas <notifications@github.com> wrote:\n> \n> @WillAyd thanks for looking into it.\n> I'm not sure that this has anything to do with MultiIndex(my example doesn't use anything but a standard index), but if I don't know enough to disagree 🤷‍♂️ .\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n"
  }
]
