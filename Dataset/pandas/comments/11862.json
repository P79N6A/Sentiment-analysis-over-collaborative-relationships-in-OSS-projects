[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/165781716",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11862#issuecomment-165781716",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11862",
    "id": 165781716,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTc4MTcxNg==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-18T13:46:32Z",
    "updated_at": "2015-12-18T13:46:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "My initial thoughts are that this wouldn't be worth making an API breaking change, so I don't see the default changing to a different linestyle.\n\n> but it would be even better if this style would be extended some way to fully handle Periods \n\nNot quite sure what you're saying here, sorry. But I think that sounds like more of an enhancement for matplotlib? As long as pandas gets the data to matplotlib in some format that it understands.\n\nFWIW, I would typically use something like `style=k.` to avoid the suggestion that the y-value is changing linearly within/between periods.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170890298",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11862#issuecomment-170890298",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11862",
    "id": 170890298,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDg5MDI5OA==",
    "user": {
      "login": "egpbos",
      "id": 6146598,
      "node_id": "MDQ6VXNlcjYxNDY1OTg=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/6146598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/egpbos",
      "html_url": "https://github.com/egpbos",
      "followers_url": "https://api.github.com/users/egpbos/followers",
      "following_url": "https://api.github.com/users/egpbos/following{/other_user}",
      "gists_url": "https://api.github.com/users/egpbos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/egpbos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/egpbos/subscriptions",
      "organizations_url": "https://api.github.com/users/egpbos/orgs",
      "repos_url": "https://api.github.com/users/egpbos/repos",
      "events_url": "https://api.github.com/users/egpbos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/egpbos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T11:58:57Z",
    "updated_at": "2016-01-12T11:58:57Z",
    "author_association": "NONE",
    "body": "Let me explain a bit further. I would say that using steps is maximally informative given Period data. For instance, say you have a table with a monthly period index. If January 2016 has value `2.4`, then at all horizontal locations inside the January period, i.e. January 1st 2016 at 11 pm, January 22nd 2016 at 4 am, etc., we should plot the value `2.4`. I think this is the most complete and correct way of plotting such Period data. If you only plot a dot in the middle of the Period, say at Jan 16th 0:00, then that expresses that you only know the value at that point, while in fact you know it at all other points in the Period as well.\n\nMatplotlib is only a plotting library/backend. As far as I understand, it doesn't know (and doesn't want to know) about data or types of data, only about canvases and coordinates, lines, shapes etc. on those canvases.\n\nI can understand that you don't want to break the API. I guess that in any case plotting is not the core business of Pandas. Perhaps, in the long run, it would be nice to build a completely separate package that focuses purely on interfacing DataFrames, in all their variety, with Matplotlib.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/170917743",
    "html_url": "https://github.com/pandas-dev/pandas/issues/11862#issuecomment-170917743",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/11862",
    "id": 170917743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MDkxNzc0Mw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-12T13:52:32Z",
    "updated_at": "2016-01-12T13:52:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "All fair points. https://github.com/pydata/pandas/pull/8707 is adding a new Index type for representing intervals. I think the current plan is to rewrite `Period` to be backed by `InntervalIndex`. We need to think about what plotting those will look like (by default), so we'll keep this issue in mind when working on that.\n"
  }
]
