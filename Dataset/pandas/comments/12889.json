[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209377547",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12889#issuecomment-209377547",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12889",
    "id": 209377547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTM3NzU0Nw==",
    "user": {
      "login": "jreback",
      "id": 953992,
      "node_id": "MDQ6VXNlcjk1Mzk5Mg==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/953992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jreback",
      "html_url": "https://github.com/jreback",
      "followers_url": "https://api.github.com/users/jreback/followers",
      "following_url": "https://api.github.com/users/jreback/following{/other_user}",
      "gists_url": "https://api.github.com/users/jreback/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jreback/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jreback/subscriptions",
      "organizations_url": "https://api.github.com/users/jreback/orgs",
      "repos_url": "https://api.github.com/users/jreback/repos",
      "events_url": "https://api.github.com/users/jreback/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jreback/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-13T11:29:13Z",
    "updated_at": "2016-04-13T11:30:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn [10]: %timeit pd.PeriodIndex(pd.date_range('2015-1-1', '2016-1-1', freq='D').to_pydatetime(), freq='D')\n100 loops, best of 3: 12.8 ms per loop\n\nIn [11]: %timeit pd.PeriodIndex(pd.date_range('2015-1-1', '2016-1-1', freq='D'))\n10000 loops, best of 3: 192 µs per loop\n\nIn [13]: %timeit pd.date_range('2015-1-1', '2016-1-1', freq='D').to_period()\n1000 loops, best of 3: 205 µs per loop\n\nIn [15]: %timeit pd.period_range('2015-1-1','2016-1-1',freq='D')\n1000 loops, best of 3: 447 µs per loop\n```\n\n```\nIn [17]: result1 = pd.period_range('2015-1-1','2016-1-1',freq='D')\n\nIn [18]: result2 = pd.date_range('2015-1-1', '2016-1-1', freq='D').to_period()\n\nIn [19]: result3 = pd.PeriodIndex(pd.date_range('2015-1-1', '2016-1-1', freq='D'))\n\nIn [20]: result4 = pd.PeriodIndex(pd.date_range('2015-1-1', '2016-1-1', freq='D').to_pydatetime(), freq='D')\n\nIn [21]: result1.equals(result2)\nOut[21]: True\n\nIn [22]: result1.equals(result3)\nOut[22]: True\n\nIn [23]: result1.equals(result4)\nOut[23]: True\n```\n\nthat's a quite convoluted way of creating a PI, as are convering to python objects multiple times. many other much better ways.\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209820067",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12889#issuecomment-209820067",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12889",
    "id": 209820067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTgyMDA2Nw==",
    "user": {
      "login": "rs2",
      "id": 4407787,
      "node_id": "MDQ6VXNlcjQ0MDc3ODc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4407787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rs2",
      "html_url": "https://github.com/rs2",
      "followers_url": "https://api.github.com/users/rs2/followers",
      "following_url": "https://api.github.com/users/rs2/following{/other_user}",
      "gists_url": "https://api.github.com/users/rs2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rs2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rs2/subscriptions",
      "organizations_url": "https://api.github.com/users/rs2/orgs",
      "repos_url": "https://api.github.com/users/rs2/repos",
      "events_url": "https://api.github.com/users/rs2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rs2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T08:11:29Z",
    "updated_at": "2016-04-14T08:11:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Jeff, any recommendations for an alternative way of creating a PI?\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209864087",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12889#issuecomment-209864087",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12889",
    "id": 209864087,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTg2NDA4Nw==",
    "user": {
      "login": "jorisvandenbossche",
      "id": 1020496,
      "node_id": "MDQ6VXNlcjEwMjA0OTY=",
      "avatar_url": "https://avatars2.githubusercontent.com/u/1020496?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jorisvandenbossche",
      "html_url": "https://github.com/jorisvandenbossche",
      "followers_url": "https://api.github.com/users/jorisvandenbossche/followers",
      "following_url": "https://api.github.com/users/jorisvandenbossche/following{/other_user}",
      "gists_url": "https://api.github.com/users/jorisvandenbossche/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jorisvandenbossche/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jorisvandenbossche/subscriptions",
      "organizations_url": "https://api.github.com/users/jorisvandenbossche/orgs",
      "repos_url": "https://api.github.com/users/jorisvandenbossche/repos",
      "events_url": "https://api.github.com/users/jorisvandenbossche/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jorisvandenbossche/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T10:10:16Z",
    "updated_at": "2016-04-14T10:10:16Z",
    "author_association": "MEMBER",
    "body": "@rs2 Jeff showed 3 alternative ways above to create a PI. Or is it the problem you cannot avoid to start with python datetime.datetime objects?\n\n@jreback But, this is potentially related to the slowdown in timeseries plotting #11831, as I see for the above timeit a similar difference between python 2 and python 3 (ca 20ms vs ca 300 ms, both with 0.17.1)\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/209949618",
    "html_url": "https://github.com/pandas-dev/pandas/issues/12889#issuecomment-209949618",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/12889",
    "id": 209949618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwOTk0OTYxOA==",
    "user": {
      "login": "rs2",
      "id": 4407787,
      "node_id": "MDQ6VXNlcjQ0MDc3ODc=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/4407787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rs2",
      "html_url": "https://github.com/rs2",
      "followers_url": "https://api.github.com/users/rs2/followers",
      "following_url": "https://api.github.com/users/rs2/following{/other_user}",
      "gists_url": "https://api.github.com/users/rs2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rs2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rs2/subscriptions",
      "organizations_url": "https://api.github.com/users/rs2/orgs",
      "repos_url": "https://api.github.com/users/rs2/repos",
      "events_url": "https://api.github.com/users/rs2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rs2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T13:44:56Z",
    "updated_at": "2016-04-14T14:06:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jreback , @jorisvandenbossche : I need to have a PeriodIndex with irregular dates. Performance of the following snippet has deteriorated significantly after 0.15.2. Can you recommend an alternative way of creating a Series with data at irregular intervals while preserving those irregular dates rather than resampling the series with interpolation?\n\n```\npd.PeriodIndex(['20160101', '20160106', '20160128'], freq='D')\n```\n"
  }
]
