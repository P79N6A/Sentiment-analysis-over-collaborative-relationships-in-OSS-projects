[
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406274611",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406274611",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21976",
    "id": 406274611,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjI3NDYxMQ==",
    "user": {
      "login": "alexitkes",
      "id": 38556752,
      "node_id": "MDQ6VXNlcjM4NTU2NzUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/38556752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexitkes",
      "html_url": "https://github.com/alexitkes",
      "followers_url": "https://api.github.com/users/alexitkes/followers",
      "following_url": "https://api.github.com/users/alexitkes/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexitkes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexitkes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexitkes/subscriptions",
      "organizations_url": "https://api.github.com/users/alexitkes/orgs",
      "repos_url": "https://api.github.com/users/alexitkes/repos",
      "events_url": "https://api.github.com/users/alexitkes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexitkes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T13:23:55Z",
    "updated_at": "2018-07-19T13:23:55Z",
    "author_association": "NONE",
    "body": "I tried to experiment more with JSON, but found the only way to produce a valid JSON output is to specify ``orient='split'``, but it is still read incorrectly.\r\n\r\n```\r\ns = frame.to_json(orient='split')\r\n# s = '{\"columns\":[[\"AAPL\",\"CLOSE\"],[\"AAPL\",\"OPEN\"],[\"MSFT\",\"CLOSE\"],[\"MSFT\",\"OPEN\"]],\"index\":[0,1,2,3],\"data\":[[1,1,1,1],[2,2,2,2],[3,3,3,3],[4,4,4,4]]}'\r\n\r\npd.read_json(StringIO(s), orient='split')\r\n#  AAPL CLOSE\r\n#  AAPL  OPEN\r\n#  MSFT CLOSE\r\n#  MSFT  OPEN\r\n# 0    1     1\r\n# 1    2     2\r\n# 2    3     3\r\n# 3    4     4\r\n\r\n# This is still not what I wanted. Here is what this frame uses as columns.\r\npd.read_json(StringIO(s), orient='split').columns\r\n# MultiIndex(levels=[['AAPL', 'CLOSE'], ['AAPL', 'OPEN'], ['CLOSE', 'MSFT'], ['MSFT', 'OPEN']],\r\n#           labels=[[0, 1], [0, 1], [1, 0], [0, 1]])\r\n\r\n# While this is the original one.\r\nframe.columns\r\n# MultiIndex(levels=[['AAPL', 'MSFT'], ['CLOSE', 'OPEN']],\r\n#           labels=[[0, 0, 1, 1], [0, 1, 0, 1]])\r\n```\r\n\r\nSo far I don't know any way to save a dataframe with multiindexed columns to either CSV or JSON and load it back properly..."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406282234",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406282234",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21976",
    "id": 406282234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjI4MjIzNA==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T13:48:12Z",
    "updated_at": "2018-07-19T13:48:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "I suspect  you'll have trouble with this in most storage formats, since hierarchical columns are somewhat unique to pandas. You may be best of manually flattening your columns before and after IO."
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406314820",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406314820",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21976",
    "id": 406314820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMxNDgyMA==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T15:20:58Z",
    "updated_at": "2018-07-19T15:25:54Z",
    "author_association": "MEMBER",
    "body": "The best be here *may* be `orient=\"table\"` though I'm not sure what the JSON Table Schema specification says about hierarchical columns (indices are fine). Any investigation or PRs there are certainly welcome\r\n\r\nHere's a workaround to maintain those via transposition. You need a non-numeric index to account for the fact that numeric column labels are not valid in the JSON Table schema:\r\n\r\n```python\r\n>>> frame.index = list('abcd')\r\n>>> pd.read_json(frame.T.to_json(orient=\"table\"), orient=\"table\").T\r\n  AAPL       MSFT      \r\n  OPEN CLOSE OPEN CLOSE\r\na    1     1    1     1\r\nb    2     2    2     2\r\nc    3     3    3     3\r\nd    4     4    4     4\r\n\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406316177",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406316177",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21976",
    "id": 406316177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjMxNjE3Nw==",
    "user": {
      "login": "TomAugspurger",
      "id": 1312546,
      "node_id": "MDQ6VXNlcjEzMTI1NDY=",
      "avatar_url": "https://avatars3.githubusercontent.com/u/1312546?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TomAugspurger",
      "html_url": "https://github.com/TomAugspurger",
      "followers_url": "https://api.github.com/users/TomAugspurger/followers",
      "following_url": "https://api.github.com/users/TomAugspurger/following{/other_user}",
      "gists_url": "https://api.github.com/users/TomAugspurger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TomAugspurger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TomAugspurger/subscriptions",
      "organizations_url": "https://api.github.com/users/TomAugspurger/orgs",
      "repos_url": "https://api.github.com/users/TomAugspurger/repos",
      "events_url": "https://api.github.com/users/TomAugspurger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TomAugspurger/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T15:25:04Z",
    "updated_at": "2018-07-19T15:25:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "IIRC JSON Table Schema requires string column labels, so hierarchical\ncolumns are probably out of scope for orient='table'.\n\nOn Thu, Jul 19, 2018 at 10:21 AM William Ayd <notifications@github.com>\nwrote:\n\n> The best be here *may* be orient=\"table\" though I'm not sure what the\n> JSON Table Schema specification says about hierarchical columns (indices\n> are fine). Any investigation or PRs there are certainly welcome\n>\n> Here's a workaround to maintain those via transposition. You need a\n> non-numeric index to account for the fact that numeric column numbers are\n> not valid in the JSON Table schema:\n>\n> >>> frame.index = list('abcd')>>> pd.read_json(frame.T.to_json(orient=\"table\"), orient=\"table\").T\n>   AAPL       MSFT\n>   OPEN CLOSE OPEN CLOSE\n> a    1     1    1     1\n> b    2     2    2     2\n> c    3     3    3     3\n> d    4     4    4     4\n>\n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406314820>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABQHIssvUIDVN1FULaNUytXbUXsk-HELks5uIKPlgaJpZM4VWM9O>\n> .\n>\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406381720",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406381720",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21976",
    "id": 406381720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjM4MTcyMA==",
    "user": {
      "login": "chris-b1",
      "id": 1924092,
      "node_id": "MDQ6VXNlcjE5MjQwOTI=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/1924092?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chris-b1",
      "html_url": "https://github.com/chris-b1",
      "followers_url": "https://api.github.com/users/chris-b1/followers",
      "following_url": "https://api.github.com/users/chris-b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/chris-b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chris-b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chris-b1/subscriptions",
      "organizations_url": "https://api.github.com/users/chris-b1/orgs",
      "repos_url": "https://api.github.com/users/chris-b1/repos",
      "events_url": "https://api.github.com/users/chris-b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chris-b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-19T19:03:53Z",
    "updated_at": "2018-07-19T19:03:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "`read_csv` can handle hierarchical columns - but they must be specified on the way in with a list to the `header` arg.\r\n\r\n ```python\r\nfrom io import StringIO\r\nbuf = StringIO()\r\nframe.to_csv(buf)\r\nbuf.seek(0)\r\n\r\nIn [109]: pd.read_csv(buf, header=[0,1], index_col=0)\r\nOut[109]: \r\n   AAPL       MSFT     \r\n  CLOSE OPEN CLOSE OPEN\r\n0     1    1     1    1\r\n1     2    2     2    2\r\n2     3    3     3    3\r\n3     4    4     4    4\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406486502",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406486502",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21976",
    "id": 406486502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjQ4NjUwMg==",
    "user": {
      "login": "jbrockmendel",
      "id": 8078968,
      "node_id": "MDQ6VXNlcjgwNzg5Njg=",
      "avatar_url": "https://avatars1.githubusercontent.com/u/8078968?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jbrockmendel",
      "html_url": "https://github.com/jbrockmendel",
      "followers_url": "https://api.github.com/users/jbrockmendel/followers",
      "following_url": "https://api.github.com/users/jbrockmendel/following{/other_user}",
      "gists_url": "https://api.github.com/users/jbrockmendel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jbrockmendel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jbrockmendel/subscriptions",
      "organizations_url": "https://api.github.com/users/jbrockmendel/orgs",
      "repos_url": "https://api.github.com/users/jbrockmendel/repos",
      "events_url": "https://api.github.com/users/jbrockmendel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jbrockmendel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T04:34:28Z",
    "updated_at": "2018-07-20T04:34:28Z",
    "author_association": "MEMBER",
    "body": "Could we use some trickery like using a \\xa0 to denote what â€œcolumns\r\n Are actually part of an MI?"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406631491",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406631491",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21976",
    "id": 406631491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjYzMTQ5MQ==",
    "user": {
      "login": "alexitkes",
      "id": 38556752,
      "node_id": "MDQ6VXNlcjM4NTU2NzUy",
      "avatar_url": "https://avatars0.githubusercontent.com/u/38556752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexitkes",
      "html_url": "https://github.com/alexitkes",
      "followers_url": "https://api.github.com/users/alexitkes/followers",
      "following_url": "https://api.github.com/users/alexitkes/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexitkes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexitkes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexitkes/subscriptions",
      "organizations_url": "https://api.github.com/users/alexitkes/orgs",
      "repos_url": "https://api.github.com/users/alexitkes/repos",
      "events_url": "https://api.github.com/users/alexitkes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexitkes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T15:14:18Z",
    "updated_at": "2018-07-20T15:14:18Z",
    "author_association": "NONE",
    "body": "Thank you, CSV version works fine, while JSON version still requires frame index to be a string list and crashes if timestamps or integers are used as index.\r\n\r\nAdditionally, it's looking like even frames with multi-level row indexes are stored in JSON a bit incorrectly if ``orient='split'`` used.\r\n\r\n```\r\nIn [30]: frame\r\nOut[30]: \r\n            0  1  2  3\r\nAAPL CLOSE  1  2  3  4\r\n     OPEN   1  2  3  4\r\nMSFT CLOSE  1  2  3  4\r\n     OPEN   1  2  3  4\r\n\r\nIn [31]: pd.read_json(StringIO(frame.to_json(orient='split')), orient='split')\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n...\r\nValueError: Shape of passed values is (4, 4), indices imply (4, 2)\r\n\r\nIn [32]: frame.to_json(orient='split')\r\nOut[32]: '{\"columns\":[0,1,2,3],\"index\":[[\"AAPL\",\"CLOSE\"],[\"AAPL\",\"OPEN\"],[\"MSFT\",\"CLOSE\"],[\"MSFT\",\"OPEN\"]],\"data\":[[1,2,3,4],[1,2,3,4],[1,2,3,4],[1,2,3,4]]}'\r\n```"
  },
  {
    "url": "https://api.github.com/repos/pandas-dev/pandas/issues/comments/406649761",
    "html_url": "https://github.com/pandas-dev/pandas/issues/21976#issuecomment-406649761",
    "issue_url": "https://api.github.com/repos/pandas-dev/pandas/issues/21976",
    "id": 406649761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwNjY0OTc2MQ==",
    "user": {
      "login": "WillAyd",
      "id": 609873,
      "node_id": "MDQ6VXNlcjYwOTg3Mw==",
      "avatar_url": "https://avatars0.githubusercontent.com/u/609873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WillAyd",
      "html_url": "https://github.com/WillAyd",
      "followers_url": "https://api.github.com/users/WillAyd/followers",
      "following_url": "https://api.github.com/users/WillAyd/following{/other_user}",
      "gists_url": "https://api.github.com/users/WillAyd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WillAyd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WillAyd/subscriptions",
      "organizations_url": "https://api.github.com/users/WillAyd/orgs",
      "repos_url": "https://api.github.com/users/WillAyd/repos",
      "events_url": "https://api.github.com/users/WillAyd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WillAyd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-20T16:16:24Z",
    "updated_at": "2018-07-20T16:16:24Z",
    "author_association": "MEMBER",
    "body": "Can you open a separate bug for the JSON `orient=\"split\"` issue? That does seem off.\r\n\r\nAs a side note on `orient=\"table\"`:\r\n\r\n - Timestamp support is being added in #21827\r\n - Integers are not valid column labels but should be fine as an index; again if you have an example you can provide please open as a bug in a separate issue"
  }
]
